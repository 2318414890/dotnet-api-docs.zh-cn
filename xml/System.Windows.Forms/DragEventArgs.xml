<Type Name="DragEventArgs" FullName="System.Windows.Forms.DragEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b6e1ab65b7ea413bf34641f75f6f1cef0e35f265" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39979259" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DragEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DragEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="afc83-101">为 <see cref="E:System.Windows.Forms.Control.DragDrop" />、<see cref="E:System.Windows.Forms.Control.DragEnter" /> 或 <see cref="E:System.Windows.Forms.Control.DragOver" /> 事件提供数据。</span>
      <span class="sxs-lookup">
        <span data-stu-id="afc83-101">Provides data for the <see cref="E:System.Windows.Forms.Control.DragDrop" />, <see cref="E:System.Windows.Forms.Control.DragEnter" />, or <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afc83-102"><xref:System.Windows.Forms.Control.DragDrop>用户通过将对象拖到控件上方，然后，通过释放鼠标按钮，将它放到控件上完成拖放操作时发生事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-102">The <xref:System.Windows.Forms.Control.DragDrop> event occurs when the user completes a drag-and-drop operation by dragging an object over the control and then dropping it onto the control by releasing the mouse button.</span></span> <span data-ttu-id="afc83-103"><xref:System.Windows.Forms.Control.DragEnter>当用户在拖动鼠标的对象的同时移动鼠标指针拖动到控件上的发生的事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-103">The <xref:System.Windows.Forms.Control.DragEnter> event occurs when the user moves the mouse pointer onto the control while dragging an object with the mouse.</span></span> <span data-ttu-id="afc83-104"><xref:System.Windows.Forms.Control.DragOver>用户拖动鼠标的对象时将鼠标指针移到控件上方时发生事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-104">The <xref:System.Windows.Forms.Control.DragOver> event occurs when the user moves the mouse pointer over the control while dragging an object with the mouse.</span></span>  
  
 <span data-ttu-id="afc83-105">一个<xref:System.Windows.Forms.DragEventArgs>对象指定与此事件关联的任何数据; SHIFT、 CTRL 和 ALT 键的当前状态; 鼠标指针; 的位置，以及源和目标的拖动事件允许拖放效果。</span><span class="sxs-lookup"><span data-stu-id="afc83-105">A <xref:System.Windows.Forms.DragEventArgs> object specifies any data associated with this event; the current state of the SHIFT, CTRL, and ALT keys; the location of the mouse pointer; and the drag-and-drop effects allowed by the source and target of the drag event.</span></span>  
  
 <span data-ttu-id="afc83-106">有关事件模型的信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="afc83-106">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afc83-107">下面的示例演示两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="afc83-107">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="afc83-108">此示例调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>当拖动操作开始时的方法。</span><span class="sxs-lookup"><span data-stu-id="afc83-108">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="afc83-109">如果已移动鼠标拖动操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>鼠标位置在从<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-109">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="afc83-110"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在拖动的项的索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-110">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="afc83-111">示例还演示如何使用自定义光标拖放操作。</span><span class="sxs-lookup"><span data-stu-id="afc83-111">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="afc83-112">该示例假定两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和不可拖动光标，分别。</span><span class="sxs-lookup"><span data-stu-id="afc83-112">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="afc83-113">如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>检查。</span><span class="sxs-lookup"><span data-stu-id="afc83-113">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="afc83-114">在中设置自定义光标<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="afc83-114">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="afc83-115">键盘状态进行评估<xref:System.Windows.Forms.Control.DragOver>事件处理程序的权利`ListBox`，以确定拖动操作将是根据 SHIFT、 CTRL、 ALT 或 CTRL + ALT 键的状态。</span><span class="sxs-lookup"><span data-stu-id="afc83-115">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="afc83-116">中的位置`ListBox`期间还确定发生下拉`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-116">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="afc83-117">如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="afc83-117">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="afc83-118">最后，在显示状态的下拉`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="afc83-118">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="afc83-119">若要删除的权利的数据`ListBox`在中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值中的适当位置添加`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="afc83-119">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="afc83-120">如果拖动操作移动边界以外的窗体，则在取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="afc83-120">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="afc83-121">这段代码摘录演示了如何使用<xref:System.Windows.Forms.DragEventArgs>类。</span><span class="sxs-lookup"><span data-stu-id="afc83-121">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="afc83-122">请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="afc83-122">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 <span data-ttu-id="afc83-123">下面的示例演示如何<xref:System.Windows.Forms.DragEventArgs>源和拖放操作的目标之间传递。</span><span class="sxs-lookup"><span data-stu-id="afc83-123">The following example illustrates how <xref:System.Windows.Forms.DragEventArgs> are passed between the source and target of a drag-and-drop operation.</span></span> <span data-ttu-id="afc83-124">在此示例中，<xref:System.Windows.Forms.ListBox>控件是数据源和<xref:System.Windows.Forms.RichTextBox>控件是目标。</span><span class="sxs-lookup"><span data-stu-id="afc83-124">In this example, a <xref:System.Windows.Forms.ListBox> control is the source of the data, and the <xref:System.Windows.Forms.RichTextBox> control is the target.</span></span> <span data-ttu-id="afc83-125">该示例假定<xref:System.Windows.Forms.ListBox>控件填充有效的文件名的列表。</span><span class="sxs-lookup"><span data-stu-id="afc83-125">The example assumes that the <xref:System.Windows.Forms.ListBox> control has been populated with a list of valid filenames.</span></span> <span data-ttu-id="afc83-126">当用户拖动一个从显示的文件名<xref:System.Windows.Forms.ListBox>控件拖动到<xref:System.Windows.Forms.RichTextBox>控件，在文件名中所引用的文件打开。</span><span class="sxs-lookup"><span data-stu-id="afc83-126">When the user drags one of the displayed filenames from the <xref:System.Windows.Forms.ListBox> control onto the <xref:System.Windows.Forms.RichTextBox> control, the file referenced in the filename is opened.</span></span>  
  
 <span data-ttu-id="afc83-127">在启动操作<xref:System.Windows.Forms.ListBox>控件的鼠标按下事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-127">The operation is initiated in the <xref:System.Windows.Forms.ListBox> control's MouseDown event.</span></span> <span data-ttu-id="afc83-128">在中<xref:System.Windows.Forms.RichTextBox.DragEnter>事件处理程序，该示例使用<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>方法以验证数据的格式，<xref:System.Windows.Forms.RichTextBox>控件可以显示，然后设置<xref:System.Windows.Forms.DragDropEffects>属性来指定该数据应从源代码管理复制到目标控件。</span><span class="sxs-lookup"><span data-stu-id="afc83-128">In the <xref:System.Windows.Forms.RichTextBox.DragEnter> event handler, the example uses the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to verify that the data is in a format that the <xref:System.Windows.Forms.RichTextBox> control can display and then sets the <xref:System.Windows.Forms.DragDropEffects> property to specify that data should be copied from the source control to the target control.</span></span> <span data-ttu-id="afc83-129">最后，<xref:System.Windows.Forms.RichTextBox>控件的拖放事件处理程序使用<xref:System.Windows.Forms.IDataObject.GetData%2A>方法来检索要打开的文件名。</span><span class="sxs-lookup"><span data-stu-id="afc83-129">Finally, the <xref:System.Windows.Forms.RichTextBox> control's DragDrop event handler uses the <xref:System.Windows.Forms.IDataObject.GetData%2A> method to retrieve the filename to open.</span></span>  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragDropEffects" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DragEventArgs (System.Windows.Forms.IDataObject data, int keyState, int x, int y, System.Windows.Forms.DragDropEffects allowedEffect, System.Windows.Forms.DragDropEffects effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.IDataObject data, int32 keyState, int32 x, int32 y, valuetype System.Windows.Forms.DragDropEffects allowedEffect, valuetype System.Windows.Forms.DragDropEffects effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataObject, keyState As Integer, x As Integer, y As Integer, allowedEffect As DragDropEffects, effect As DragDropEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DragEventArgs(System::Windows::Forms::IDataObject ^ data, int keyState, int x, int y, System::Windows::Forms::DragDropEffects allowedEffect, System::Windows::Forms::DragDropEffects effect);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DragEventArgs : System.Windows.Forms.IDataObject * int * int * int * System.Windows.Forms.DragDropEffects * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragEventArgs" Usage="new System.Windows.Forms.DragEventArgs (data, keyState, x, y, allowedEffect, effect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.Forms.IDataObject" />
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="allowedEffect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="afc83-130">与此事件关联的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-130">The data associated with this event.</span>
          </span>
        </param>
        <param name="keyState">
          <span data-ttu-id="afc83-131">Shift、Ctrl 和 Alt 键的当前状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-131">The current state of the SHIFT, CTRL, and ALT keys.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="afc83-132">鼠标光标的 X 坐标（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-132">The x-coordinate of the mouse cursor in pixels.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="afc83-133">鼠标光标的 Y 坐标（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-133">The y-coordinate of the mouse cursor in pixels.</span>
          </span>
        </param>
        <param name="allowedEffect">
          <span data-ttu-id="afc83-134">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-134">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </param>
        <param name="effect">
          <span data-ttu-id="afc83-135">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-135">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afc83-136">初始化 <see cref="T:System.Windows.Forms.DragEventArgs" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-136">Initializes a new instance of the <see cref="T:System.Windows.Forms.DragEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="AllowedEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects AllowedEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects AllowedEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedEffect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects AllowedEffect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedEffect : System.Windows.Forms.DragDropEffects" Usage="System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afc83-137">获取拖动事件的发起方（或源）所允许的拖放操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-137">Gets which drag-and-drop operations are allowed by the originator (or source) of the drag event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afc83-138">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-138">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afc83-139">当控件通过调用来启动拖放操作<xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType>方法，它指定可允许该操作的效果。</span><span class="sxs-lookup"><span data-stu-id="afc83-139">When a control initiates a drag-and-drop operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> method, it specifies the permissible effects of the operation.</span></span> <span data-ttu-id="afc83-140">例如，当您将文件从一个源，如果文件是只读的 （或者从只读存储媒体，如 CD），源将指示可以复制但不是传输到目标文件。</span><span class="sxs-lookup"><span data-stu-id="afc83-140">For example, when you drag a file from a source, if the file is read-only (or from a read-only storage medium such as a CD), the source will indicate that the file can be copied, but not transferred, to the target.</span></span>  
  
 <span data-ttu-id="afc83-141">然后再尝试对拖动的数据执行操作，则应检查此属性以确保允许此操作。</span><span class="sxs-lookup"><span data-stu-id="afc83-141">Before attempting to perform an operation on the dragged data, you should examine this property to ensure that the operation is allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afc83-142">下面的示例演示两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="afc83-142">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="afc83-143">此示例调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>当拖动操作开始时的方法。</span><span class="sxs-lookup"><span data-stu-id="afc83-143">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="afc83-144">如果已移动鼠标拖动操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>鼠标位置在从<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-144">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="afc83-145"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在拖动的项的索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-145">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="afc83-146">示例还演示如何使用自定义光标拖放操作。</span><span class="sxs-lookup"><span data-stu-id="afc83-146">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="afc83-147">该示例假定两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和不可拖动光标，分别。</span><span class="sxs-lookup"><span data-stu-id="afc83-147">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="afc83-148">如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>检查。</span><span class="sxs-lookup"><span data-stu-id="afc83-148">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="afc83-149">在中设置自定义光标<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="afc83-149">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="afc83-150">键盘状态进行评估<xref:System.Windows.Forms.Control.DragOver>事件处理程序的权利`ListBox`，以确定拖动操作将是根据 SHIFT、 CTRL、 ALT 或 CTRL + ALT 键的状态。</span><span class="sxs-lookup"><span data-stu-id="afc83-150">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="afc83-151">中的位置`ListBox`期间还确定发生下拉`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-151">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="afc83-152">如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="afc83-152">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="afc83-153">最后，在显示状态的下拉`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="afc83-153">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="afc83-154">若要删除的权利的数据`ListBox`在中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值中的适当位置添加`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="afc83-154">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="afc83-155">如果拖动操作移动边界以外的窗体，则在取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="afc83-155">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="afc83-156">这段代码摘录演示了如何使用<xref:System.Windows.Forms.DragEventArgs>类。</span><span class="sxs-lookup"><span data-stu-id="afc83-156">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="afc83-157">请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="afc83-157">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IDataObject Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IDataObject Data" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IDataObject ^ Data { System::Windows::Forms::IDataObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.DragEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afc83-158">获取 <see cref="T:System.Windows.Forms.IDataObject" />，它包含与此事件关联的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-158">Gets the <see cref="T:System.Windows.Forms.IDataObject" /> that contains the data associated with this event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afc83-159">与此事件关联的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-159">The data associated with this event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afc83-160">在事件处理程序的正文中，可以使用<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>方法，以确定数据是否与将数据拖动到该控件的格式要求相匹配。</span><span class="sxs-lookup"><span data-stu-id="afc83-160">In the body of your event handler, you can use the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether the data matches the format requirements of the control onto which the data is being dragged.</span></span> <span data-ttu-id="afc83-161">此外可以指定您是否要尝试转换数据以满足格式要求。</span><span class="sxs-lookup"><span data-stu-id="afc83-161">You also can specify whether you want to attempt to convert the data to meet your format requirements.</span></span> <span data-ttu-id="afc83-162">如果拖动的数据满足格式要求，使用<xref:System.Windows.Forms.IDataObject.GetData%2A>方法来检索数据。</span><span class="sxs-lookup"><span data-stu-id="afc83-162">If the dragged data meets your format requirements, use the <xref:System.Windows.Forms.IDataObject.GetData%2A> method to retrieve the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afc83-163">下面的示例演示两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="afc83-163">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="afc83-164">此示例调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>当拖动操作开始时的方法。</span><span class="sxs-lookup"><span data-stu-id="afc83-164">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="afc83-165">如果已移动鼠标拖动操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>鼠标位置在从<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-165">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="afc83-166"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在拖动的项的索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-166">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="afc83-167">示例还演示如何使用自定义光标拖放操作。</span><span class="sxs-lookup"><span data-stu-id="afc83-167">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="afc83-168">该示例假定两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和不可拖动光标，分别。</span><span class="sxs-lookup"><span data-stu-id="afc83-168">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="afc83-169">如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>检查。</span><span class="sxs-lookup"><span data-stu-id="afc83-169">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="afc83-170">在中设置自定义光标<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="afc83-170">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="afc83-171">键盘状态进行评估<xref:System.Windows.Forms.Control.DragOver>事件处理程序的权利`ListBox`，以确定拖动操作将是根据 SHIFT、 CTRL、 ALT 或 CTRL + ALT 键的状态。</span><span class="sxs-lookup"><span data-stu-id="afc83-171">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="afc83-172">中的位置`ListBox`期间还确定发生下拉`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-172">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="afc83-173">如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="afc83-173">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="afc83-174">最后，在显示状态的下拉`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="afc83-174">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="afc83-175">若要删除的权利的数据`ListBox`在中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值中的适当位置添加`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="afc83-175">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="afc83-176">如果拖动操作移动边界以外的窗体，则在取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="afc83-176">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="afc83-177">这段代码摘录演示了如何使用<xref:System.Windows.Forms.DragEventArgs>类。</span><span class="sxs-lookup"><span data-stu-id="afc83-177">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="afc83-178">请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="afc83-178">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); void set(System::Windows::Forms::DragDropEffects value); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Forms.DragDropEffects with get, set" Usage="System.Windows.Forms.DragEventArgs.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afc83-179">获取或设置拖放操作中目标放置效果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-179">Gets or sets the target drop effect in a drag-and-drop operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afc83-180">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-180">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afc83-181">默认情况下，应用的效果确定鼠标光标拖放操作的目标。</span><span class="sxs-lookup"><span data-stu-id="afc83-181">By default, the effect applied determines the mouse cursor for the target of a drag-and-drop operation.</span></span> <span data-ttu-id="afc83-182">这很有用，则会发生该操作上向用户提供反馈。</span><span class="sxs-lookup"><span data-stu-id="afc83-182">This is useful to provide feedback to the user on the operation that will occur.</span></span> <span data-ttu-id="afc83-183">例如，如果将文件拖动源中，按下 CTRL 键，则指定<xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType>以指示目标会尝试执行复制操作。</span><span class="sxs-lookup"><span data-stu-id="afc83-183">For example, if you press the CTRL key when you drag a file from a source, specify <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType> to indicate the target will try to perform a copy operation.</span></span>  
  
 <span data-ttu-id="afc83-184">若要使用自定义光标拖放操作，请参阅<xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="afc83-184">To use custom cursors for a drag operation, see <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afc83-185">下面的示例演示两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="afc83-185">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="afc83-186">此示例调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>当拖动操作开始时的方法。</span><span class="sxs-lookup"><span data-stu-id="afc83-186">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="afc83-187">如果已移动鼠标拖动操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>鼠标位置在从<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-187">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="afc83-188"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在拖动的项的索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-188">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="afc83-189">示例还演示如何使用自定义光标拖放操作。</span><span class="sxs-lookup"><span data-stu-id="afc83-189">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="afc83-190">该示例假定两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和不可拖动光标，分别。</span><span class="sxs-lookup"><span data-stu-id="afc83-190">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="afc83-191">如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>检查。</span><span class="sxs-lookup"><span data-stu-id="afc83-191">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="afc83-192">在中设置自定义光标<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="afc83-192">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="afc83-193">键盘状态进行评估<xref:System.Windows.Forms.Control.DragOver>事件处理程序的权利`ListBox`，以确定拖动操作将是根据 SHIFT、 CTRL、 ALT 或 CTRL + ALT 键的状态。</span><span class="sxs-lookup"><span data-stu-id="afc83-193">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="afc83-194">中的位置`ListBox`期间还确定发生下拉`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-194">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="afc83-195">如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="afc83-195">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="afc83-196">最后，在显示状态的下拉`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="afc83-196">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="afc83-197">若要删除的权利的数据`ListBox`在中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值中的适当位置添加`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="afc83-197">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="afc83-198">如果拖动操作移动边界以外的窗体，则在取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="afc83-198">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="afc83-199">这段代码摘录演示了如何使用<xref:System.Windows.Forms.DragEventArgs>类。</span><span class="sxs-lookup"><span data-stu-id="afc83-199">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="afc83-200">请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="afc83-200">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyState : int" Usage="System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afc83-201">获取 Shift、Ctrl 和 Alt 键的当前状态以及鼠标按钮的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-201">Gets the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afc83-202">Shift、Ctrl、Alt 键以及鼠标按钮的当前状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-202">The current state of the SHIFT, CTRL, and ALT keys and of the mouse buttons.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afc83-203">可以依赖于特定键的状态的拖放操作的效果。</span><span class="sxs-lookup"><span data-stu-id="afc83-203">You can make the effect of a drag-and-drop operation to depend on the state of a particular key.</span></span> <span data-ttu-id="afc83-204">例如，您可能决定具体取决于是否在拖放操作过程中按 CTRL 或 SHIFT 键的数据复制或移动。</span><span class="sxs-lookup"><span data-stu-id="afc83-204">For example, you may decide to copy or move data depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="afc83-205">在中设置的位<xref:System.Windows.Forms.DragEventArgs.KeyState%2A>属性标识的密钥或在操作期间按下鼠标按钮。</span><span class="sxs-lookup"><span data-stu-id="afc83-205">The bits that are set in the <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> property identify the keys or mouse buttons that were pressed during the operation.</span></span> <span data-ttu-id="afc83-206">例如，如果按下鼠标左键时，第一位<xref:System.Windows.Forms.DragEventArgs.KeyState%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="afc83-206">For example, if the left mouse button is pressed, the first bit in the <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> property is set.</span></span> <span data-ttu-id="afc83-207">按位 AND 运算符可用于测试给定键的状态。</span><span class="sxs-lookup"><span data-stu-id="afc83-207">You can use the bitwise AND operator to test for a given key state.</span></span>  
  
 <span data-ttu-id="afc83-208">下表列出了用于指定事件的值。</span><span class="sxs-lookup"><span data-stu-id="afc83-208">The following table lists the values that are used for a specified event.</span></span>  
  
|<span data-ttu-id="afc83-209">“值”</span><span class="sxs-lookup"><span data-stu-id="afc83-209">Value</span></span>|<span data-ttu-id="afc83-210">键</span><span class="sxs-lookup"><span data-stu-id="afc83-210">Key</span></span>|  
|-----------|---------|  
|<span data-ttu-id="afc83-211">1 （位 0）</span><span class="sxs-lookup"><span data-stu-id="afc83-211">1 (bit 0)</span></span>|<span data-ttu-id="afc83-212">鼠标左按钮。</span><span class="sxs-lookup"><span data-stu-id="afc83-212">The left mouse button.</span></span>|  
|<span data-ttu-id="afc83-213">2 （位 1）</span><span class="sxs-lookup"><span data-stu-id="afc83-213">2 (bit 1)</span></span>|<span data-ttu-id="afc83-214">鼠标右按钮。</span><span class="sxs-lookup"><span data-stu-id="afc83-214">The right mouse button.</span></span>|  
|<span data-ttu-id="afc83-215">4 （位 2）</span><span class="sxs-lookup"><span data-stu-id="afc83-215">4 (bit 2)</span></span>|<span data-ttu-id="afc83-216">Shift 键。</span><span class="sxs-lookup"><span data-stu-id="afc83-216">The SHIFT key.</span></span>|  
|<span data-ttu-id="afc83-217">8 （3 位）</span><span class="sxs-lookup"><span data-stu-id="afc83-217">8 (bit 3)</span></span>|<span data-ttu-id="afc83-218">CTRL 键。</span><span class="sxs-lookup"><span data-stu-id="afc83-218">The CTRL key.</span></span>|  
|<span data-ttu-id="afc83-219">16 （4 位）</span><span class="sxs-lookup"><span data-stu-id="afc83-219">16 (bit 4)</span></span>|<span data-ttu-id="afc83-220">鼠标中键。</span><span class="sxs-lookup"><span data-stu-id="afc83-220">The middle mouse button.</span></span>|  
|<span data-ttu-id="afc83-221">32 （5 位）</span><span class="sxs-lookup"><span data-stu-id="afc83-221">32 (bit 5)</span></span>|<span data-ttu-id="afc83-222">Alt 键。</span><span class="sxs-lookup"><span data-stu-id="afc83-222">The ALT key.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="afc83-223">下面的示例演示两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="afc83-223">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="afc83-224">此示例调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>当拖动操作开始时的方法。</span><span class="sxs-lookup"><span data-stu-id="afc83-224">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="afc83-225">如果已移动鼠标拖动操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>鼠标位置在从<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-225">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="afc83-226"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在拖动的项的索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-226">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="afc83-227">示例还演示如何使用自定义光标拖放操作。</span><span class="sxs-lookup"><span data-stu-id="afc83-227">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="afc83-228">该示例假定两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和不可拖动光标，分别。</span><span class="sxs-lookup"><span data-stu-id="afc83-228">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="afc83-229">如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>检查。</span><span class="sxs-lookup"><span data-stu-id="afc83-229">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="afc83-230">在中设置自定义光标<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="afc83-230">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="afc83-231">键盘状态进行评估<xref:System.Windows.Forms.Control.DragOver>事件处理程序的权利`ListBox`，以确定拖动操作将是根据 SHIFT、 CTRL、 ALT 或 CTRL + ALT 键的状态。</span><span class="sxs-lookup"><span data-stu-id="afc83-231">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="afc83-232">中的位置`ListBox`期间还确定发生下拉`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-232">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="afc83-233">如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="afc83-233">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="afc83-234">最后，在显示状态的下拉`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="afc83-234">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="afc83-235">若要删除的权利的数据`ListBox`在中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值中的适当位置添加`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="afc83-235">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="afc83-236">如果拖动操作移动边界以外的窗体，则在取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="afc83-236">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="afc83-237">这段代码摘录演示了如何使用<xref:System.Windows.Forms.DragEventArgs>类。</span><span class="sxs-lookup"><span data-stu-id="afc83-237">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="afc83-238">请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="afc83-238">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberSignature Language="F#" Value="member this.X : int" Usage="System.Windows.Forms.DragEventArgs.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afc83-239">获取鼠标指针在屏幕坐标系中的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-239">Gets the x-coordinate of the mouse pointer, in screen coordinates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afc83-240">鼠标指针的 X 坐标（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-240">The x-coordinate of the mouse pointer in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="afc83-241">下面的示例演示两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="afc83-241">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="afc83-242">此示例调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>当拖动操作开始时的方法。</span><span class="sxs-lookup"><span data-stu-id="afc83-242">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="afc83-243">如果已移动鼠标拖动操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>鼠标位置在从<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-243">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="afc83-244"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在拖动的项的索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-244">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="afc83-245">示例还演示如何使用自定义光标拖放操作。</span><span class="sxs-lookup"><span data-stu-id="afc83-245">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="afc83-246">该示例假定两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和不可拖动光标，分别。</span><span class="sxs-lookup"><span data-stu-id="afc83-246">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="afc83-247">如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>检查。</span><span class="sxs-lookup"><span data-stu-id="afc83-247">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="afc83-248">在中设置自定义光标<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="afc83-248">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="afc83-249">键盘状态进行评估<xref:System.Windows.Forms.Control.DragOver>事件处理程序的权利`ListBox`，以确定拖动操作将是根据 SHIFT、 CTRL、 ALT 或 CTRL + ALT 键的状态。</span><span class="sxs-lookup"><span data-stu-id="afc83-249">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="afc83-250">中的位置`ListBox`期间还确定发生下拉`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-250">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="afc83-251">如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="afc83-251">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="afc83-252">最后，在显示状态的下拉`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="afc83-252">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="afc83-253">若要删除的权利的数据`ListBox`在中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值中的适当位置添加`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="afc83-253">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="afc83-254">如果拖动操作移动边界以外的窗体，则在取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="afc83-254">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="afc83-255">这段代码摘录演示了如何使用<xref:System.Windows.Forms.DragEventArgs>类。</span><span class="sxs-lookup"><span data-stu-id="afc83-255">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="afc83-256">请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="afc83-256">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Y : int" Usage="System.Windows.Forms.DragEventArgs.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afc83-257">获取鼠标指针在屏幕坐标系中的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-257">Gets the y-coordinate of the mouse pointer, in screen coordinates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afc83-258">鼠标指针的 Y 坐标（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="afc83-258">The y-coordinate of the mouse pointer in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="afc83-259">下面的示例演示两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="afc83-259">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="afc83-260">此示例调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>当拖动操作开始时的方法。</span><span class="sxs-lookup"><span data-stu-id="afc83-260">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="afc83-261">如果已移动鼠标拖动操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>鼠标位置在从<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-261">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="afc83-262"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在拖动的项的索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-262">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="afc83-263">示例还演示如何使用自定义光标拖放操作。</span><span class="sxs-lookup"><span data-stu-id="afc83-263">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="afc83-264">该示例假定两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和不可拖动光标，分别。</span><span class="sxs-lookup"><span data-stu-id="afc83-264">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="afc83-265">如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>检查。</span><span class="sxs-lookup"><span data-stu-id="afc83-265">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="afc83-266">在中设置自定义光标<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="afc83-266">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="afc83-267">键盘状态进行评估<xref:System.Windows.Forms.Control.DragOver>事件处理程序的权利`ListBox`，以确定拖动操作将是根据 SHIFT、 CTRL、 ALT 或 CTRL + ALT 键的状态。</span><span class="sxs-lookup"><span data-stu-id="afc83-267">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="afc83-268">中的位置`ListBox`期间还确定发生下拉`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="afc83-268">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="afc83-269">如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="afc83-269">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="afc83-270">最后，在显示状态的下拉`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="afc83-270">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="afc83-271">若要删除的权利的数据`ListBox`在中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值中的适当位置添加`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="afc83-271">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="afc83-272">如果拖动操作移动边界以外的窗体，则在取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="afc83-272">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="afc83-273">这段代码摘录演示了如何使用<xref:System.Windows.Forms.DragEventArgs>类。</span><span class="sxs-lookup"><span data-stu-id="afc83-273">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="afc83-274">请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="afc83-274">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.X" />
      </Docs>
    </Member>
  </Members>
</Type>