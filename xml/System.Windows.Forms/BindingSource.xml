<Type Name="BindingSource" FullName="System.Windows.Forms.BindingSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64dceccfd2200afd7b30f3838219a566c1a9ab6a" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006015" /></Metadata><TypeSignature Language="C#" Value="public class BindingSource : System.ComponentModel.Component, System.Collections.IList, System.ComponentModel.IBindingListView, System.ComponentModel.ICancelAddNew, System.ComponentModel.ISupportInitializeNotification, System.ComponentModel.ITypedList, System.Windows.Forms.ICurrencyManagerProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingSource extends System.ComponentModel.Component implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ComponentModel.IBindingList, class System.ComponentModel.IBindingListView, class System.ComponentModel.ICancelAddNew, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.ComponentModel.ITypedList, class System.Windows.Forms.ICurrencyManagerProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingSource" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingSource&#xA;Inherits Component&#xA;Implements IBindingListView, ICancelAddNew, ICurrencyManagerProvider, IList, ISupportInitializeNotification, ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingSource : System::ComponentModel::Component, System::Collections::IList, System::ComponentModel::IBindingListView, System::ComponentModel::ICancelAddNew, System::ComponentModel::ISupportInitializeNotification, System::ComponentModel::ITypedList, System::Windows::Forms::ICurrencyManagerProvider" />
  <TypeSignature Language="F#" Value="type BindingSource = class&#xA;    inherit Component&#xA;    interface IBindingListView&#xA;    interface IBindingList&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ITypedList&#xA;    interface ICancelAddNew&#xA;    interface ISupportInitializeNotification&#xA;    interface ISupportInitialize&#xA;    interface ICurrencyManagerProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingListView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ICancelAddNew</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitializeNotification</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ITypedList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.ICurrencyManagerProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CurrentChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataSource")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.BindingSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.BindingSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bf49f-101">封装窗体的数据源。</span><span class="sxs-lookup"><span data-stu-id="bf49f-101">Encapsulates the data source for a form.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-102"><xref:System.Windows.Forms.BindingSource>组件有许多用途。</span><span class="sxs-lookup"><span data-stu-id="bf49f-102">The <xref:System.Windows.Forms.BindingSource> component serves many purposes.</span></span> <span data-ttu-id="bf49f-103">首先，它通过提供货币管理、 更改通知和 Windows 窗体控件与数据源之间的其他服务简化将控件绑定到数据窗体上。</span><span class="sxs-lookup"><span data-stu-id="bf49f-103">First, it simplifies binding controls on a form to data by providing currency management, change notification, and other services between Windows Forms controls and data sources.</span></span> <span data-ttu-id="bf49f-104">这可以通过附加<xref:System.Windows.Forms.BindingSource>组件为数据源使用<xref:System.Windows.Forms.BindingSource.DataSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-104">This is accomplished by attaching the <xref:System.Windows.Forms.BindingSource> component to your data source using the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property.</span></span> <span data-ttu-id="bf49f-105">对于复杂绑定方案，您可以选择设置<xref:System.Windows.Forms.BindingSource.DataMember%2A>到特定列或列表数据源中的属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-105">For complex binding scenarios you can optionally set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a specific column or list in the data source.</span></span> <span data-ttu-id="bf49f-106">您然后将控件绑定到<xref:System.Windows.Forms.BindingSource>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-106">You then bind controls to the <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="bf49f-107">数据的所有进一步交互都通过调用到<xref:System.Windows.Forms.BindingSource>组件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-107">All further interaction with the data is accomplished with calls to the <xref:System.Windows.Forms.BindingSource> component.</span></span> <span data-ttu-id="bf49f-108">有关如何在示例<xref:System.Windows.Forms.BindingSource>可简化绑定过程，请参阅[如何：将 Windows 窗体控件绑定到 DBNull 数据库值](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md)和[如何：处理错误和因数据绑定而发生的异常](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-108">For examples on how the <xref:System.Windows.Forms.BindingSource> can simplify the binding process, see [How to: Bind Windows Forms Controls to DBNull Database Values](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md) and [How to: Handle Errors and Exceptions that Occur with Databinding](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md).</span></span> <span data-ttu-id="bf49f-109">导航和更新的数据源通过实现方法如<xref:System.Windows.Forms.BindingSource.MoveNext%2A>， <xref:System.Windows.Forms.BindingSource.MoveLast%2A>，和<xref:System.Windows.Forms.BindingSource.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-109">Navigation and updating of the data source is accomplished through methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveLast%2A>, and <xref:System.Windows.Forms.BindingSource.Remove%2A>.</span></span> <span data-ttu-id="bf49f-110">通过处理排序和筛选等操作<xref:System.Windows.Forms.BindingSource.Sort%2A>和<xref:System.Windows.Forms.BindingSource.Filter%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-110">Operations such as sorting and filtering are handled through the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties.</span></span> <span data-ttu-id="bf49f-111">有关详细信息使用的排序和筛选与<xref:System.Windows.Forms.BindingSource>，请参阅[如何：排序和筛选 ADO.NET 数据使用 Windows 窗体 BindingSource 组件](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-111">For more information on using sorting and filtering with the <xref:System.Windows.Forms.BindingSource>, see [How to: Sort and Filter ADO.NET Data with the Windows Forms BindingSource Component](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md).</span></span>  
  
 <span data-ttu-id="bf49f-112">此外，<xref:System.Windows.Forms.BindingSource>组件可以充当强类型化的数据源。</span><span class="sxs-lookup"><span data-stu-id="bf49f-112">In addition, the <xref:System.Windows.Forms.BindingSource> component can act as a strongly typed data source.</span></span> <span data-ttu-id="bf49f-113">通常在基础数据源的类型是通过以下机制之一已修复：</span><span class="sxs-lookup"><span data-stu-id="bf49f-113">Typically the type of the underlying data source is fixed through one of the following mechanisms:</span></span>  
  
-   <span data-ttu-id="bf49f-114">使用<xref:System.Windows.Forms.BindingSource.Add%2A>方法添加到项<xref:System.Windows.Forms.BindingSource>组件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-114">Use the <xref:System.Windows.Forms.BindingSource.Add%2A> method to add an item to the <xref:System.Windows.Forms.BindingSource> component.</span></span>  
  
-   <span data-ttu-id="bf49f-115">设置<xref:System.Windows.Forms.BindingSource.DataSource%2A>到列表中，单个对象或类型的属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-115">Set the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property to a list, single object, or type.</span></span>  
  
 <span data-ttu-id="bf49f-116">这两种机制创建强类型列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-116">Both of these mechanisms create a strongly-typed list.</span></span> <span data-ttu-id="bf49f-117">有关如何使用的详细信息<xref:System.Windows.Forms.BindingSource>若要将绑定到一个类型，请参阅[如何：将 Windows 窗体控件绑定到类型](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-117">For more information on how to use the <xref:System.Windows.Forms.BindingSource> to bind to a type, see [How to: Bind a Windows Forms Control to a Type](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md).</span></span> <span data-ttu-id="bf49f-118">此外可以使用<xref:System.Windows.Forms.BindingSource>将控件绑定到 factory 对象。</span><span class="sxs-lookup"><span data-stu-id="bf49f-118">You can also use the <xref:System.Windows.Forms.BindingSource> to bind your controls to a factory object.</span></span> <span data-ttu-id="bf49f-119">有关如何执行此操作的详细信息，请参阅[如何：Windows 窗体控件绑定到 Factory 对象](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-119">For more information on how to do this, see [How to: Bind a Windows Forms Control to a Factory Object](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf49f-120">因为<xref:System.Windows.Forms.BindingSource>句柄这两个简单和复杂数据源，术语会产生问题。</span><span class="sxs-lookup"><span data-stu-id="bf49f-120">Because a <xref:System.Windows.Forms.BindingSource> handles both simple and complex data sources, terminology is problematic.</span></span> <span data-ttu-id="bf49f-121">在此类文档，术语*列表*指的是托管的数据源中的数据集合并*项*表示单个元素。</span><span class="sxs-lookup"><span data-stu-id="bf49f-121">Within this class documentation, the term *list* refers to a data collection within the hosted data source, and *item* denotes a single element.</span></span> <span data-ttu-id="bf49f-122">当讨论功能关联到复杂的数据源等效术语*表*并*行*使用。</span><span class="sxs-lookup"><span data-stu-id="bf49f-122">When discussing functionality associated with complex data sources, the equivalent terms *table* and *row* are used.</span></span>  
  
 <span data-ttu-id="bf49f-123"><xref:System.Windows.Forms.BindingSource> 提供用于访问基础数据成员。</span><span class="sxs-lookup"><span data-stu-id="bf49f-123"><xref:System.Windows.Forms.BindingSource> provides members for accessing the underlying data.</span></span> <span data-ttu-id="bf49f-124">可以通过检索当前项<xref:System.Windows.Forms.BindingSource.Current%2A>属性，然后将整个列表可以检索通过<xref:System.Windows.Forms.BindingSource.List%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-124">The current item can be retrieved through the <xref:System.Windows.Forms.BindingSource.Current%2A> property, and the entire list can be retrieved through the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="bf49f-125">支持对当前项通过编辑操作<xref:System.Windows.Forms.BindingSource.Current%2A>并<xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>， <xref:System.Windows.Forms.BindingSource.EndEdit%2A>，<xref:System.Windows.Forms.BindingSource.CancelEdit%2A>并<xref:System.Windows.Forms.BindingSource.Add%2A>和<xref:System.Windows.Forms.BindingSource.AddNew%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-125">Editing operations are supported on the current item through <xref:System.Windows.Forms.BindingSource.Current%2A> and the <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>, <xref:System.Windows.Forms.BindingSource.EndEdit%2A>, <xref:System.Windows.Forms.BindingSource.CancelEdit%2A> and <xref:System.Windows.Forms.BindingSource.Add%2A> and <xref:System.Windows.Forms.BindingSource.AddNew%2A> methods.</span></span> <span data-ttu-id="bf49f-126">尽管货币管理自动处理所有基础数据源类型，此类公开的大量事件，如<xref:System.Windows.Forms.BindingSource.CurrentItemChanged>和<xref:System.Windows.Forms.BindingSource.DataSourceChanged>，允许自定义。</span><span class="sxs-lookup"><span data-stu-id="bf49f-126">Although currency management is handled automatically for all underlying data source types, this class exposes a number of events, such as <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> and <xref:System.Windows.Forms.BindingSource.DataSourceChanged>, that allow for customization.</span></span>  
  
 <span data-ttu-id="bf49f-127">绑定到的数据源<xref:System.Windows.Forms.BindingSource>组件也可以导航和管理与<xref:System.Windows.Forms.BindingNavigator>类，该类用于导航列表中的项提供类似于 VCR 的用户界面 (UI)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-127">Data sources that are bound to a <xref:System.Windows.Forms.BindingSource> component can also be navigated and managed with the <xref:System.Windows.Forms.BindingNavigator> class, which provides a VCR-like user interface (UI) for navigating items within a list.</span></span> <span data-ttu-id="bf49f-128">尽管<xref:System.Windows.Forms.BindingNavigator>可以绑定到任何数据源，它的设计与集成<xref:System.Windows.Forms.BindingSource>组件通过其<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-128">Although <xref:System.Windows.Forms.BindingNavigator> can be bound to any data source, it was designed to integrate with a <xref:System.Windows.Forms.BindingSource> component through its <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="bf49f-129">默认属性<xref:System.Windows.Forms.BindingSource>类是<xref:System.Windows.Forms.BindingSource.DataSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-129">The default property for the <xref:System.Windows.Forms.BindingSource> class is <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span></span> <span data-ttu-id="bf49f-130">默认事件是<xref:System.Windows.Forms.BindingSource.CurrentChanged>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-130">The default event is <xref:System.Windows.Forms.BindingSource.CurrentChanged>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="bf49f-131">成员的许多<xref:System.Windows.Forms.BindingSource>类对表示的基础列表<xref:System.Windows.Forms.BindingSource.List%2A>属性，并且只引用基础列表对其操作。</span><span class="sxs-lookup"><span data-stu-id="bf49f-131">Many of the members of the <xref:System.Windows.Forms.BindingSource> class operate on the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and simply refer their operation to the underlying list.</span></span> <span data-ttu-id="bf49f-132">因此，当<xref:System.Windows.Forms.BindingSource>绑定到的自定义实现<xref:System.Collections.IList>，这些成员的具体行为可能不同于文档中所述的行为。</span><span class="sxs-lookup"><span data-stu-id="bf49f-132">Therefore, when the <xref:System.Windows.Forms.BindingSource> is bound to a custom implementation of <xref:System.Collections.IList>, the exact behavior of these members may differ from the behavior described in the class documentation.</span></span> <span data-ttu-id="bf49f-133">例如，<xref:System.Windows.Forms.BindingSource.RemoveAt%2A>方法调用<xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-133">For example, the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method calls <xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bf49f-134"><xref:System.Windows.Forms.BindingSource>文档介绍<xref:System.Windows.Forms.BindingSource.RemoveAt%2A>方法，并介绍该<xref:System.Collections.IList.RemoveAt%2A>基础方法<xref:System.Collections.IList>正确实现。</span><span class="sxs-lookup"><span data-stu-id="bf49f-134">The <xref:System.Windows.Forms.BindingSource> documentation describes the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method with the understanding that the <xref:System.Collections.IList.RemoveAt%2A> method for the underlying <xref:System.Collections.IList> is correctly implemented.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-135">下面的代码示例演示<xref:System.Windows.Forms.ListBox>绑定到<xref:System.Windows.Forms.BindingSource>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-135">The following code example demonstrates a <xref:System.Windows.Forms.ListBox> bound to a <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="bf49f-136"><xref:System.Windows.Forms.BindingSource>绑定到<xref:System.ComponentModel.BindingList%601>包含字体的列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-136">The <xref:System.Windows.Forms.BindingSource> is bound to a <xref:System.ComponentModel.BindingList%601> that contains a list of fonts.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#0)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.Windows.Forms.BindingNavigator" />
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.ComponentModel.IEditableObject" />
    <related type="Article" href="~/docs/framework/winforms/controls/bindingsource-component.md"><span data-ttu-id="bf49f-137">BindingSource 组件</span><span class="sxs-lookup"><span data-stu-id="bf49f-137">BindingSource Component</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bf49f-138">初始化 <see cref="T:System.Windows.Forms.BindingSource" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bf49f-138">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-139">初始化的新实例<see cref="T:System.Windows.Forms.BindingSource" />类为默认属性值。</span><span class="sxs-lookup"><span data-stu-id="bf49f-139">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class to the default property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-140">下表显示了默认<xref:System.Windows.Forms.BindingSource>此构造函数初始化的属性值。</span><span class="sxs-lookup"><span data-stu-id="bf49f-140">The following table shows the default <xref:System.Windows.Forms.BindingSource> property values initialized by this constructor.</span></span>  
  
|<span data-ttu-id="bf49f-141">属性</span><span class="sxs-lookup"><span data-stu-id="bf49f-141">Property</span></span>|<span data-ttu-id="bf49f-142">默认值</span><span class="sxs-lookup"><span data-stu-id="bf49f-142">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.BindingSource.DataSource%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.DataMember%2A>|<xref:System.String.Empty>|  
|<xref:System.Windows.Forms.BindingSource.Sort%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.Filter%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>|`true`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingSource : System.ComponentModel.IContainer -&gt; System.Windows.Forms.BindingSource" Usage="new System.Windows.Forms.BindingSource container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="bf49f-143"><see cref="T:System.ComponentModel.IContainer" />要添加到当前<see cref="T:System.Windows.Forms.BindingSource" />到。</span><span class="sxs-lookup"><span data-stu-id="bf49f-143">The <see cref="T:System.ComponentModel.IContainer" /> to add the current <see cref="T:System.Windows.Forms.BindingSource" /> to.</span></span></param>
        <summary><span data-ttu-id="bf49f-144">初始化的新实例<see cref="T:System.Windows.Forms.BindingSource" />类并添加<see cref="T:System.Windows.Forms.BindingSource" />到指定的容器。</span><span class="sxs-lookup"><span data-stu-id="bf49f-144">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class and adds the <see cref="T:System.Windows.Forms.BindingSource" /> to the specified container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-145">此构造函数调用默认构造函数，并将当前<xref:System.Windows.Forms.BindingSource>到指定的容器。</span><span class="sxs-lookup"><span data-stu-id="bf49f-145">This constructor calls the default constructor, and then adds the current <xref:System.Windows.Forms.BindingSource> to the specified container.</span></span> <span data-ttu-id="bf49f-146">它通常不使用由解决方案编程人员，而是由设计时环境的作者。</span><span class="sxs-lookup"><span data-stu-id="bf49f-146">It is not typically used by the solutions programmer, but instead by authors of design-time environments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataSource As Object, dataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingSource : obj * string -&gt; System.Windows.Forms.BindingSource" Usage="new System.Windows.Forms.BindingSource (dataSource, dataMember)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="bf49f-147">数据源<see cref="T:System.Windows.Forms.BindingSource" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-147">The data source for the <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></param>
        <param name="dataMember"><span data-ttu-id="bf49f-148">要绑定到的数据源中的特定列或列表名称。</span><span class="sxs-lookup"><span data-stu-id="bf49f-148">The specific column or list name within the data source to bind to.</span></span></param>
        <summary><span data-ttu-id="bf49f-149">初始化的新实例<see cref="T:System.Windows.Forms.BindingSource" />与指定的数据源和数据成员的类。</span><span class="sxs-lookup"><span data-stu-id="bf49f-149">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class with the specified data source and data member.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int&#xA;override this.Add : obj -&gt; int" Usage="bindingSource.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bf49f-150"><see cref="T:System.Object" />要添加到内部列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-150">An <see cref="T:System.Object" /> to be added to the internal list.</span></span></param>
        <summary><span data-ttu-id="bf49f-151">将现有项添加到内部列表中。</span><span class="sxs-lookup"><span data-stu-id="bf49f-151">Adds an existing item to the internal list.</span></span></summary>
        <returns><span data-ttu-id="bf49f-152">从零开始的索引位置<paramref name="value" />已添加到表示的基础列表<see cref="P:System.Windows.Forms.BindingSource.List" />属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-152">The zero-based index at which <paramref name="value" /> was added to the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-153"><xref:System.Windows.Forms.BindingSource.Add%2A>方法引用对基础列表的调用`Add`方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-153">The <xref:System.Windows.Forms.BindingSource.Add%2A> method refers the call to the underlying list's `Add` method.</span></span>  
  
 <span data-ttu-id="bf49f-154">内部列表必须包含同源类型。</span><span class="sxs-lookup"><span data-stu-id="bf49f-154">The internal list must contain homogenous types.</span></span> <span data-ttu-id="bf49f-155">如果<xref:System.Windows.Forms.BindingSource.DataSource%2A>尚未设置属性，则添加到列表中的第一个对象定义的类型的列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-155">If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property has not already been set, then the first object added to the list defines the type for the list.</span></span>  
  
 <span data-ttu-id="bf49f-156">此方法将引发<xref:System.Windows.Forms.BindingSource.ListChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-156">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-157">以下代码示例演示如何使用<xref:System.Windows.Forms.BindingSource.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-157">The following code example how to use the <xref:System.Windows.Forms.BindingSource.Add%2A> method.</span></span> <span data-ttu-id="bf49f-158">若要运行此示例，请将代码粘贴到 Windows 窗体，并调用`PopulateBindingSourceWithFonts`从窗体的构造函数。</span><span class="sxs-lookup"><span data-stu-id="bf49f-158">To run this example, paste the code into a Windows Form, and call the `PopulateBindingSourceWithFonts` method from the form's constructor.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bf49f-159"><paramref name="value" /> 在从基础列表中的现有项的类型不同。</span><span class="sxs-lookup"><span data-stu-id="bf49f-159"><paramref name="value" /> differs in type from the existing items in the underlying list.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AddingNew">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AddingNewEventHandler AddingNew;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AddingNewEventHandler AddingNew" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.AddingNew" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AddingNew As AddingNewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AddingNewEventHandler ^ AddingNew;" />
      <MemberSignature Language="F#" Value="member this.AddingNew : System.ComponentModel.AddingNewEventHandler " Usage="member this.AddingNew : System.ComponentModel.AddingNewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AddingNewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-160">在将项添加到基础列表之前发生。</span><span class="sxs-lookup"><span data-stu-id="bf49f-160">Occurs before an item is added to the underlying list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-161"><xref:System.Windows.Forms.BindingSource.AddingNew>新对象添加到表示的基础列表之前发生的事件<xref:System.Windows.Forms.BindingSource.List%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-161">The <xref:System.Windows.Forms.BindingSource.AddingNew> event occurs before a new object is added to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="bf49f-162">此事件触发后<xref:System.Windows.Forms.BindingSource.AddNew%2A>调用方法时，但在之前创建新项并将其添加到基础列表中。</span><span class="sxs-lookup"><span data-stu-id="bf49f-162">This event is fired after the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method is called, but before the new item is created and added to the underlying list.</span></span> <span data-ttu-id="bf49f-163">通过处理此事件时，程序员可以提供自定义项的创建和插入行为，无需强制派生<xref:System.Windows.Forms.BindingSource>类。</span><span class="sxs-lookup"><span data-stu-id="bf49f-163">By handling this event, the programmer can provide custom item creation and insertion behavior without being forced to derive from the <xref:System.Windows.Forms.BindingSource> class.</span></span> <span data-ttu-id="bf49f-164">实现这一点在事件处理程序通过设置<xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A>属性的<xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType>参数的新项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-164">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parameter to the new item.</span></span> <span data-ttu-id="bf49f-165">在中创建的新对象<xref:System.Windows.Forms.BindingSource.AddingNew>事件必须属于与包含在列表中的类型相同的类型或将出现异常。</span><span class="sxs-lookup"><span data-stu-id="bf49f-165">The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.</span></span> <span data-ttu-id="bf49f-166">不能设置<xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A>属性绑定到时<xref:System.Data.DataView>或<xref:System.Data.DataTable>因为不能添加一个新<xref:System.Data.DataRowView>到列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-166">You cannot set the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property when bound to a <xref:System.Data.DataView> or <xref:System.Data.DataTable> because you cannot add a new <xref:System.Data.DataRowView> to the list.</span></span>  
  
 <span data-ttu-id="bf49f-167">提供新的自定义项功能的详细信息，请参阅<xref:System.Windows.Forms.BindingSource.AddNew%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-167">For more information about supplying custom new item functionality, see the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method.</span></span> <span data-ttu-id="bf49f-168">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-168">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-169">下面的代码示例使用<xref:System.Windows.Forms.BindingSource>组件绑定到列表<xref:System.Windows.Forms.DataGridView>控件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-169">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="bf49f-170">向列表添加新项<xref:System.Windows.Forms.BindingSource.AddingNew>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-170">New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler.</span></span> <span data-ttu-id="bf49f-171">此代码示例摘自[如何：使用自定义项添加 Windows 窗体 BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-171">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bf49f-172"><see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> 不在列表中包含的类型与相同的类型。</span><span class="sxs-lookup"><span data-stu-id="bf49f-172"><see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> is not the same type as the type contained in the list.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public virtual object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj&#xA;override this.AddNew : unit -&gt; obj" Usage="bindingSource.AddNew " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.AddNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-173">在基础列表中添加一个新项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-173">Adds a new item to the underlying list.</span></span></summary>
        <returns><span data-ttu-id="bf49f-174"><see cref="T:System.Object" />已创建并添加到列表中。</span><span class="sxs-lookup"><span data-stu-id="bf49f-174">The <see cref="T:System.Object" /> that was created and added to the list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-175"><xref:System.Windows.Forms.BindingSource.AddNew%2A>方法将新项添加到表示的基础列表<xref:System.Windows.Forms.BindingSource.List%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-175">The <xref:System.Windows.Forms.BindingSource.AddNew%2A> method adds a new item to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="bf49f-176">此方法设置了以下一系列操作：</span><span class="sxs-lookup"><span data-stu-id="bf49f-176">This method sets up the following series of actions:</span></span>  
  
1.  <span data-ttu-id="bf49f-177"><xref:System.Windows.Forms.BindingSource.EndEdit%2A>自动调用方法以提交任何挂起的编辑操作。</span><span class="sxs-lookup"><span data-stu-id="bf49f-177">The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is automatically called to commit any pending edit operations.</span></span>  
  
2.  <span data-ttu-id="bf49f-178"><xref:System.Windows.Forms.BindingSource.AddingNew>自动引发事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-178">The <xref:System.Windows.Forms.BindingSource.AddingNew> event is automatically raised.</span></span> <span data-ttu-id="bf49f-179">可以以编程方式处理此事件来构造新的项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-179">This event can be programmatically handled to construct the new item.</span></span> <span data-ttu-id="bf49f-180">实现这一点在事件处理程序通过设置<xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A>属性的<xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType>参数的新项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-180">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parameter to the new item.</span></span> <span data-ttu-id="bf49f-181">在中创建的新对象<xref:System.Windows.Forms.BindingSource.AddingNew>事件必须属于与包含在列表中的类型相同的类型或将出现异常。</span><span class="sxs-lookup"><span data-stu-id="bf49f-181">The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.</span></span>  
  
     <span data-ttu-id="bf49f-182">如果<xref:System.Windows.Forms.BindingSource.AddingNew>不处理事件，并且基础列表是<xref:System.ComponentModel.IBindingList>，则该请求将传递给此列表的<xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-182">If the <xref:System.Windows.Forms.BindingSource.AddingNew> event is not handled, and the underlying list is an <xref:System.ComponentModel.IBindingList>, then the request is passed to the list's <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bf49f-183">如果基础列表不是 <xref:System.ComponentModel.IBindingList>，则通过该项的公共默认构造函数自动创建该项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-183">If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the item is automatically created through its public default constructor.</span></span> <span data-ttu-id="bf49f-184">在任一情况下，新项添加到列表的末尾。</span><span class="sxs-lookup"><span data-stu-id="bf49f-184">In either case, the new item is added to the end of the list.</span></span>  
  
3.  <span data-ttu-id="bf49f-185">新项立即添加到内部列表除非数据源实现<xref:System.ComponentModel.IEditableObject>接口。</span><span class="sxs-lookup"><span data-stu-id="bf49f-185">The new item is added immediately to the internal list unless the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="bf49f-186">在这种情况下，新的项才会提交到的显式调用<xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A>由或直到启动新的列表操作。</span><span class="sxs-lookup"><span data-stu-id="bf49f-186">In this case, the new item is not committed until an explicit call to <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> is made or until a new list operation is initiated.</span></span> <span data-ttu-id="bf49f-187">它是已提交之前，新项可以回滚通过调用<xref:System.Windows.Forms.BindingSource.CancelEdit%2A>，在这种情况下新项将被丢弃。</span><span class="sxs-lookup"><span data-stu-id="bf49f-187">Before it is committed, the new item can be rolled back by calling <xref:System.Windows.Forms.BindingSource.CancelEdit%2A>, in which case the new item is discarded.</span></span>  
  
 <span data-ttu-id="bf49f-188">此方法将引发<xref:System.Windows.Forms.BindingSource.ListChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-188">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-189">下面的代码示例使用<xref:System.Windows.Forms.BindingSource>组件绑定到列表<xref:System.Windows.Forms.DataGridView>控件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-189">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="bf49f-190">向列表添加新项<xref:System.Windows.Forms.BindingSource.AddingNew>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-190">New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler.</span></span> <span data-ttu-id="bf49f-191">此代码示例摘自[如何：使用自定义项添加 Windows 窗体 BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-191">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bf49f-192"><see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> 属性设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-192">The <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property is set to <see langword="false" />.</span></span>  
  
<span data-ttu-id="bf49f-193">或</span><span class="sxs-lookup"><span data-stu-id="bf49f-193">-or-</span></span> 
<span data-ttu-id="bf49f-194">找不到当前项类型的公共默认构造函数。</span><span class="sxs-lookup"><span data-stu-id="bf49f-194">A public default constructor could not be found for the current item type.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="E:System.Windows.Forms.BindingSource.AddingNew" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowNew" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public virtual bool AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowEdit : bool" Usage="System.Windows.Forms.BindingSource.AllowEdit" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.AllowEdit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-195">获取一个值，该值指示是否可以编辑基础列表中的项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-195">Gets a value indicating whether items in the underlying list can be edited.</span></span></summary>
        <value><span data-ttu-id="bf49f-196"><see langword="true" /> 若要指示列表项可以编辑;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-196"><see langword="true" /> to indicate list items can be edited; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-197"><xref:System.Windows.Forms.BindingSource.AllowEdit%2A>属性通常由其他组件以确定是否允许编辑的列表中的项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-197">The <xref:System.Windows.Forms.BindingSource.AllowEdit%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNew">
      <MemberSignature Language="C#" Value="public virtual bool AllowNew { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowNew { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNew : bool with get, set" Usage="System.Windows.Forms.BindingSource.AllowNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-198">获取或设置一个值，该值指示是否<see cref="M:System.Windows.Forms.BindingSource.AddNew" />方法可用于向列表添加项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-198">Gets or sets a value indicating whether the <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> method can be used to add items to the list.</span></span></summary>
        <value><span data-ttu-id="bf49f-199"><see langword="true" /> 如果<see cref="M:System.Windows.Forms.BindingSource.AddNew" />可用于向列表添加项; 否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-199"><see langword="true" /> if <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> can be used to add items to the list; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-200">默认值为<xref:System.Windows.Forms.BindingSource.AllowNew%2A>属性依赖于基础数据源类型。</span><span class="sxs-lookup"><span data-stu-id="bf49f-200">The default value for the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property depends on the underlying data source type.</span></span> <span data-ttu-id="bf49f-201">如果基础列表实现<xref:System.ComponentModel.IBindingList>接口，此属性将委托给基础列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-201">If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, this property will delegate to the underlying list.</span></span> <span data-ttu-id="bf49f-202">否则，此属性将返回`false`如果基础列表具有任何以下特征：</span><span class="sxs-lookup"><span data-stu-id="bf49f-202">Otherwise, this property will return `false` if the underlying list has any of the following characteristics:</span></span>  
  
-   <span data-ttu-id="bf49f-203">它具有固定的大小，由<xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-203">It has a fixed size, as determined by the <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="bf49f-204">它是只读的由<xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-204">It is read-only, as determined by the <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="bf49f-205">项的类型没有默认构造函数。</span><span class="sxs-lookup"><span data-stu-id="bf49f-205">The item's type does not have a default constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf49f-206">一旦设置此属性的值，getter 将不再引用对基础列表的调用。</span><span class="sxs-lookup"><span data-stu-id="bf49f-206">Once the value of this property is set, the getter no longer refers the call to the underlying list.</span></span> <span data-ttu-id="bf49f-207">相反，它只是返回直到以前设置的值<xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-207">Instead, it simply returns the value that was previously set until the <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method is called.</span></span>  
  
 <span data-ttu-id="bf49f-208">设置此属性将引发<xref:System.Windows.Forms.BindingSource.ListChanged>具有事件<xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType>设置为<xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-208">Setting this property raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bf49f-209">如果您设置<xref:System.Windows.Forms.BindingSource.AllowNew%2A>属性设置为`true`和基础列表类型没有默认构造函数，则必须处理<xref:System.Windows.Forms.BindingSource.AddingNew>事件并创建适当的类型。</span><span class="sxs-lookup"><span data-stu-id="bf49f-209">If you set the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to `true` and the underlying list type does not have a default constructor, you must handle the <xref:System.Windows.Forms.BindingSource.AddingNew> event and create the appropriate type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-210">下面的代码示例演示了如何使用<xref:System.Windows.Forms.BindingSource.AllowNew%2A>的属性<xref:System.Windows.Forms.BindingSource>组件，以允许用户添加新项添加至<xref:System.Windows.Forms.BindingSource>组件的基础列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-210">The following code example demonstrates using the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property of the <xref:System.Windows.Forms.BindingSource> component to permit the user to add new items to the <xref:System.Windows.Forms.BindingSource> component's underlying list.</span></span> <span data-ttu-id="bf49f-211">此属性设置为`true`使绑定<xref:System.Windows.Forms.DataGridView>控件来显示新记录所在的行。</span><span class="sxs-lookup"><span data-stu-id="bf49f-211">Setting this property to `true` causes the bound <xref:System.Windows.Forms.DataGridView> control to display its row for new records.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bf49f-212">此属性设置为<see langword="true" />表示的基础列表<see cref="P:System.Windows.Forms.BindingSource.List" />属性具有固定的大小或是只读的。</span><span class="sxs-lookup"><span data-stu-id="bf49f-212">This property is set to <see langword="true" /> when the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property has a fixed size or is read-only.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="bf49f-213">该属性设置为<see langword="true" />和<see cref="E:System.Windows.Forms.BindingSource.AddingNew" />基础列表类型没有默认构造函数时不处理事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-213">The property is set to <see langword="true" /> and the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event is not handled when the underlying list type does not have a default constructor.</span></span></exception>
        <altmember cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetAllowNew" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowEdit" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowRemove" />
        <altmember cref="M:System.Windows.Forms.BindingSource.EndEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="AllowRemove">
      <MemberSignature Language="C#" Value="public virtual bool AllowRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRemove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowRemove" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowRemove : bool" Usage="System.Windows.Forms.BindingSource.AllowRemove" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.AllowRemove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-214">获取一个值，它指示是否可从基础列表中移除项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-214">Gets a value indicating whether items can be removed from the underlying list.</span></span></summary>
        <value><span data-ttu-id="bf49f-215"><see langword="true" /> 若要指示列表项可以从列表中删除;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-215"><see langword="true" /> to indicate list items can be removed from the list; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-216"><xref:System.Windows.Forms.BindingSource.AllowRemove%2A>属性通常由其他组件以确定是否允许编辑的列表中的项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-216">The <xref:System.Windows.Forms.BindingSource.AllowRemove%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplySort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bf49f-217">使用指定的排序说明对数据源进行排序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-217">Sorts the data source with the specified sort description or descriptions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplySort">
      <MemberSignature Language="C#" Value="public virtual void ApplySort (System.ComponentModel.ListSortDescriptionCollection sorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySort(class System.ComponentModel.ListSortDescriptionCollection sorts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplySort (sorts As ListSortDescriptionCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplySort(System::ComponentModel::ListSortDescriptionCollection ^ sorts);" />
      <MemberSignature Language="F#" Value="abstract member ApplySort : System.ComponentModel.ListSortDescriptionCollection -&gt; unit&#xA;override this.ApplySort : System.ComponentModel.ListSortDescriptionCollection -&gt; unit" Usage="bindingSource.ApplySort sorts" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sorts" Type="System.ComponentModel.ListSortDescriptionCollection" />
      </Parameters>
      <Docs>
        <param name="sorts"><span data-ttu-id="bf49f-218">一个<see cref="T:System.ComponentModel.ListSortDescriptionCollection" />包含要应用于数据源的排序说明。</span><span class="sxs-lookup"><span data-stu-id="bf49f-218">A <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> containing the sort descriptions to apply to the data source.</span></span></param>
        <summary><span data-ttu-id="bf49f-219">使用指定的排序说明对数据源进行排序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-219">Sorts the data source with the specified sort descriptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-220"><xref:System.ComponentModel.IBindingListView> 实现为一系列属性描述符-方向对多列排序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-220"><xref:System.ComponentModel.IBindingListView> implements multi-column sorting as a set of property descriptor-direction pairs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bf49f-221">数据源不是<see cref="T:System.ComponentModel.IBindingListView" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-221">The data source is not an <see cref="T:System.ComponentModel.IBindingListView" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplySort">
      <MemberSignature Language="C#" Value="public virtual void ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection sort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySort(class System.ComponentModel.PropertyDescriptor property, valuetype System.ComponentModel.ListSortDirection sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplySort (property As PropertyDescriptor, sort As ListSortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplySort(System::ComponentModel::PropertyDescriptor ^ property, System::ComponentModel::ListSortDirection sort);" />
      <MemberSignature Language="F#" Value="abstract member ApplySort : System.ComponentModel.PropertyDescriptor * System.ComponentModel.ListSortDirection -&gt; unit&#xA;override this.ApplySort : System.ComponentModel.PropertyDescriptor * System.ComponentModel.ListSortDirection -&gt; unit" Usage="bindingSource.ApplySort (property, sort)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="sort" Type="System.ComponentModel.ListSortDirection" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="bf49f-222">一个<see cref="T:System.ComponentModel.PropertyDescriptor" />描述数据源进行排序所依据的属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-222">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the property by which to sort the data source.</span></span></param>
        <param name="sort"><span data-ttu-id="bf49f-223">一个<see cref="T:System.ComponentModel.ListSortDirection" />，该值指示列表的排序方式。</span><span class="sxs-lookup"><span data-stu-id="bf49f-223">A <see cref="T:System.ComponentModel.ListSortDirection" /> indicating how the list should be sorted.</span></span></param>
        <summary><span data-ttu-id="bf49f-224">使用指定的属性说明符和排序方向对数据源进行排序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-224">Sorts the data source using the specified property descriptor and sort direction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-225"><xref:System.ComponentModel.IBindingList>实现使用单个列排序<xref:System.ComponentModel.PropertyDescriptor>以指示要作为排序依据的属性和一个<xref:System.ComponentModel.ListSortDirection>，该值指示是否应按升序或降序顺序排序的属性内容。</span><span class="sxs-lookup"><span data-stu-id="bf49f-225">The <xref:System.ComponentModel.IBindingList> implements single column sorting using a <xref:System.ComponentModel.PropertyDescriptor> to indicate a property to sort by and a <xref:System.ComponentModel.ListSortDirection> indicating whether the property contents should be sorted in ascending or descending order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bf49f-226">数据源不是<see cref="T:System.ComponentModel.IBindingList" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-226">The data source is not an <see cref="T:System.ComponentModel.IBindingList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-227">当所有客户端都已绑定到此时发生<see cref="T:System.Windows.Forms.BindingSource" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-227">Occurs when all the clients have been bound to this <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-228"><xref:System.Windows.Forms.BindingSource.BindingComplete>事件发生后所有客户端通常控件，都已绑定到当前<xref:System.Windows.Forms.BindingSource>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-228">The <xref:System.Windows.Forms.BindingSource.BindingComplete> event occurs after all the clients, typically controls, have been bound to the current <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="bf49f-229">此事件的处理程序可以采取相应的措施根据成功、 错误或异常在绑定过程中，通过检查<xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A>属性的<xref:System.Windows.Forms.BindingCompleteEventArgs>参数。</span><span class="sxs-lookup"><span data-stu-id="bf49f-229">The handler of this event can take the appropriate action based on the success, error, or exceptions in the binding process, by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter.</span></span>  
  
 <span data-ttu-id="bf49f-230">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-230">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-231">下面的代码示例演示了如何处理<xref:System.Windows.Forms.BindingSource.BindingComplete>事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-231">The following code example demonstrates handling the <xref:System.Windows.Forms.BindingSource.BindingComplete> event.</span></span> <span data-ttu-id="bf49f-232">若要运行此代码，请将其粘贴到空代码文件中。</span><span class="sxs-lookup"><span data-stu-id="bf49f-232">To run this code, paste it into an empty code file.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingSource.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-233">取消当前的编辑操作。</span><span class="sxs-lookup"><span data-stu-id="bf49f-233">Cancels the current edit operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-234">此方法会放弃对数据的修改，自上次保存或加载操作，如果满足两个以下条件：</span><span class="sxs-lookup"><span data-stu-id="bf49f-234">This method discards modifications to data since the last save or load operation if both of the following conditions are met:</span></span>  
  
-   <span data-ttu-id="bf49f-235">数据源实现<xref:System.ComponentModel.IEditableObject>接口。</span><span class="sxs-lookup"><span data-stu-id="bf49f-235">The data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span>  
  
-   <span data-ttu-id="bf49f-236"><xref:System.Windows.Forms.BindingSource.EndEdit%2A>尚未调用方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-236">The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method has not been called yet.</span></span>  
  
 <span data-ttu-id="bf49f-237">此方法调用<xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>方法的基础<xref:System.Windows.Forms.CurrencyManager>，且其范围为行级别的更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-237">This method calls the <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> method of the underlying <xref:System.Windows.Forms.CurrencyManager>, and is scoped to row-level changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.EndEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="bindingSource.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-238">从列表中移除所有元素。</span><span class="sxs-lookup"><span data-stu-id="bf49f-238">Removes all elements from the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-239"><xref:System.Windows.Forms.BindingSource.Clear%2A>方法从表示的基础列表中移除所有元素<xref:System.Windows.Forms.BindingSource.List%2A>属性，并设置<xref:System.Windows.Forms.BindingSource.Count%2A>属性设置为零。</span><span class="sxs-lookup"><span data-stu-id="bf49f-239">The <xref:System.Windows.Forms.BindingSource.Clear%2A> method removes all elements from the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and sets the <xref:System.Windows.Forms.BindingSource.Count%2A> property to zero.</span></span>  
  
 <span data-ttu-id="bf49f-240">此方法将引发<xref:System.Windows.Forms.BindingSource.ListChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-240">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="bindingSource.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bf49f-241"><see cref="T:System.Object" />所表示的基础列表中查找<see cref="P:System.Windows.Forms.BindingSource.List" />属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-241">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span></span> <span data-ttu-id="bf49f-242">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-242">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="bf49f-243">确定某个对象是否为列表中的项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-243">Determines whether an object is an item in the list.</span></span></summary>
        <returns><span data-ttu-id="bf49f-244"><see langword="true" /> 如果<paramref name="value" />中找到参数<see cref="P:System.Windows.Forms.BindingSource.List" />; 否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-244"><see langword="true" /> if the <paramref name="value" /> parameter is found in the <see cref="P:System.Windows.Forms.BindingSource.List" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-245">尽管实现依赖于基础列表`Contains`方法中，通常具有以下特征：</span><span class="sxs-lookup"><span data-stu-id="bf49f-245">Although the implementation is dependent on the underlying list's `Contains` method, typically the following characteristics apply:</span></span>  
  
-   <span data-ttu-id="bf49f-246"><xref:System.Windows.Forms.BindingSource.List%2A> 搜索第一个元素开始和结束时间的最后一个元素。</span><span class="sxs-lookup"><span data-stu-id="bf49f-246"><xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.</span></span>  
  
-   <span data-ttu-id="bf49f-247">基础方法执行线性搜索;因此，平均执行时间是成正比的值<xref:System.Windows.Forms.BindingSource.Count%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-247">The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="bf49f-248">基础方法通过调用确定相等性<xref:System.Object.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-248">The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (arr As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ arr, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="bindingSource.CopyTo (arr, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr"><span data-ttu-id="bf49f-249">目标数组。</span><span class="sxs-lookup"><span data-stu-id="bf49f-249">The destination array.</span></span></param>
        <param name="index"><span data-ttu-id="bf49f-250">目标数组中开始复制操作处的索引。</span><span class="sxs-lookup"><span data-stu-id="bf49f-250">The index in the destination array at which to start the copy operation.</span></span></param>
        <summary><span data-ttu-id="bf49f-251">内容复制<see cref="P:System.Windows.Forms.BindingSource.List" />到指定的数组，从指定的索引值处开始。</span><span class="sxs-lookup"><span data-stu-id="bf49f-251">Copies the contents of the <see cref="P:System.Windows.Forms.BindingSource.List" /> to the specified array, starting at the specified index value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-252">此方法可用于将项从多个源合并到单个数组。</span><span class="sxs-lookup"><span data-stu-id="bf49f-252">You can use this method to combine items from multiple sources into a single array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.BindingSource.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-253">获取在基础列表中，考虑当前的总项数<see cref="P:System.Windows.Forms.BindingSource.Filter" />纳入考虑范围的值。</span><span class="sxs-lookup"><span data-stu-id="bf49f-253">Gets the total number of items in the underlying list, taking the current <see cref="P:System.Windows.Forms.BindingSource.Filter" /> value into consideration.</span></span></summary>
        <value><span data-ttu-id="bf49f-254">基础列表中筛选项的总项数。</span><span class="sxs-lookup"><span data-stu-id="bf49f-254">The total number of filtered items in the underlying list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-255"><xref:System.Windows.Forms.BindingSource.Count%2A>属性所表示的基础列表中获取项的数目<xref:System.Windows.Forms.BindingSource.List%2A>属性的值由修改<xref:System.Windows.Forms.BindingSource.Filter%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-255">The <xref:System.Windows.Forms.BindingSource.Count%2A> property gets the number of items in the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property as modified by the value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-256">下面的代码示例演示<xref:System.Windows.Forms.BindingSource.List%2A>， <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>，和<xref:System.Windows.Forms.BindingSource.Count%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="bf49f-256">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="bf49f-257">若要运行此示例，请将代码粘贴到包含一个窗体<xref:System.Windows.Forms.BindingSource>名为`BindingSource1`，名为两个标签`label1`并`label2`，和一个名为按钮`button1`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-257">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="bf49f-258">将相关联`button1_Click`方法替换<xref:System.Windows.Forms.Control.Click>事件`button1`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-258">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="bf49f-259">Visual Basic 用户将需要添加对 System.Data.dll 的引用。</span><span class="sxs-lookup"><span data-stu-id="bf49f-259">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyManager">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.CurrencyManager CurrencyManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CurrencyManager CurrencyManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.CurrencyManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencyManager As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::CurrencyManager ^ CurrencyManager { System::Windows::Forms::CurrencyManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyManager : System.Windows.Forms.CurrencyManager" Usage="System.Windows.Forms.BindingSource.CurrencyManager" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.ICurrencyManagerProvider.CurrencyManager</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-260">获取与此关联的货币管理器<see cref="T:System.Windows.Forms.BindingSource" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-260">Gets the currency manager associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <value><span data-ttu-id="bf49f-261">与此 <see cref="T:System.Windows.Forms.CurrencyManager" /> 关联的 <see cref="T:System.Windows.Forms.BindingSource" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-261">The <see cref="T:System.Windows.Forms.CurrencyManager" /> associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-262">如果你想要访问另一个绑定到相同的数据成员使用的货币管理器<xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-262">If you want to access the currency manager for another binding to the same data member use the <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Windows.Forms.BindingSource.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-263">获取列表中的当前项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-263">Gets the current item in the list.</span></span></summary>
        <value><span data-ttu-id="bf49f-264"><see cref="T:System.Object" /> ，表示所表示的基础列表中的当前项<see cref="P:System.Windows.Forms.BindingSource.List" />属性，或<see langword="null" />如果列表没有任何项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-264">An <see cref="T:System.Object" /> that represents the current item in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property, or <see langword="null" /> if the list has no items.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-265">使用<xref:System.Windows.Forms.BindingSource.Current%2A>属性来访问当前项，但使用<xref:System.Windows.Forms.BindingSource.List%2A>属性以便获取整个列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-265">Use the <xref:System.Windows.Forms.BindingSource.Current%2A> property to access the current item, but use the <xref:System.Windows.Forms.BindingSource.List%2A> property to get the entire list.</span></span> <span data-ttu-id="bf49f-266">若要确定当前对象的类型，请使用<xref:System.Object.GetType%2A>，或<xref:System.Object.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-266">To determine the type of the current object, use the <xref:System.Object.GetType%2A>, or <xref:System.Object.ToString%2A> methods.</span></span>  
  
 <span data-ttu-id="bf49f-267">若要更改当前项，设置<xref:System.Windows.Forms.BindingSource.Position%2A>属性设置为新的整型值或如导航方法之一使用<xref:System.Windows.Forms.BindingSource.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-267">To change the current item, set the <xref:System.Windows.Forms.BindingSource.Position%2A> property to a new integral value, or use one of the navigation methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-268">下面的代码示例演示了<xref:System.Windows.Forms.BindingSource.Current%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-268">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.Current%2A> property.</span></span> <span data-ttu-id="bf49f-269">若要运行此示例，请将代码粘贴到窗体并调用`PopulateBindingSourceWithFonts`方法从窗体的<xref:System.Windows.Forms.Form.Load>事件处理方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-269">To run this example, paste the code into a form and call the `PopulateBindingSourceWithFonts` method from the form's <xref:System.Windows.Forms.Form.Load> event handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentChanged : EventHandler " Usage="member this.CurrentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-270">在当前绑定项更改时发生。</span><span class="sxs-lookup"><span data-stu-id="bf49f-270">Occurs when the currently bound item changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-271"><xref:System.Windows.Forms.BindingSource.CurrentChanged>引发事件时<xref:System.Windows.Forms.BindingSource.Current%2A>属性更改的任何原因如下：</span><span class="sxs-lookup"><span data-stu-id="bf49f-271">The <xref:System.Windows.Forms.BindingSource.CurrentChanged> event is raised whenever the <xref:System.Windows.Forms.BindingSource.Current%2A> property changes for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="bf49f-272">当前位置<xref:System.Windows.Forms.BindingSource.List%2A>更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-272">The current position of the <xref:System.Windows.Forms.BindingSource.List%2A> changes.</span></span>  
  
-   <span data-ttu-id="bf49f-273"><xref:System.Windows.Forms.BindingSource.DataSource%2A>或<xref:System.Windows.Forms.BindingSource.DataMember%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-273">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.</span></span>  
  
-   <span data-ttu-id="bf49f-274">基础的成员身份<xref:System.Windows.Forms.BindingSource.List%2A>发生更改，这将导致<xref:System.Windows.Forms.BindingSource.Position%2A>来指代不同的项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-274">The membership of the underlying <xref:System.Windows.Forms.BindingSource.List%2A> changes, which causes <xref:System.Windows.Forms.BindingSource.Position%2A> to refer to a different item.</span></span> <span data-ttu-id="bf49f-275">示例包括添加或删除一个项之前的当前项，删除或移动的当前项本身，或将项移到当前的位置。</span><span class="sxs-lookup"><span data-stu-id="bf49f-275">Examples include adding or deleting an item before the current item, deleting or moving the current item itself, or moving an item to the current position.</span></span>  
  
-   <span data-ttu-id="bf49f-276">基础列表是通过新的排序和筛选操作来刷新。</span><span class="sxs-lookup"><span data-stu-id="bf49f-276">The underlying list is refreshed by a new sorting or filtering operation.</span></span>  
  
 <span data-ttu-id="bf49f-277">触发此事件后，<xref:System.Windows.Forms.BindingSource.Current%2A>属性将包含它的新值。</span><span class="sxs-lookup"><span data-stu-id="bf49f-277">When this event is triggered, the <xref:System.Windows.Forms.BindingSource.Current%2A> property will already contain its new value.</span></span>  
  
 <span data-ttu-id="bf49f-278"><xref:System.Windows.Forms.BindingSource.CurrentChanged> 是的默认事件<xref:System.Windows.Forms.BindingSource>类。</span><span class="sxs-lookup"><span data-stu-id="bf49f-278"><xref:System.Windows.Forms.BindingSource.CurrentChanged> is the default event for the <xref:System.Windows.Forms.BindingSource> class.</span></span>  
  
 <span data-ttu-id="bf49f-279">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-279">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentItemChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentItemChanged : EventHandler " Usage="member this.CurrentItemChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-280">当属性值时发生<see cref="P:System.Windows.Forms.BindingSource.Current" />属性已更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-280">Occurs when a property value of the <see cref="P:System.Windows.Forms.BindingSource.Current" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-281"><xref:System.Windows.Forms.BindingSource.CurrentItemChanged>的情况下引发的所有响应中引发事件<xref:System.Windows.Forms.BindingSource.CurrentChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-281">The <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> event is raised in response to all of the circumstances that raise the <xref:System.Windows.Forms.BindingSource.CurrentChanged> event.</span></span> <span data-ttu-id="bf49f-282">此外，<xref:System.Windows.Forms.BindingSource.CurrentItemChanged>时也触发其中一个的属性值<xref:System.Windows.Forms.BindingSource.Current%2A>发生更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-282">Additionally, <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> is also fired whenever the value of one of the properties of <xref:System.Windows.Forms.BindingSource.Current%2A> is changed.</span></span>  
  
 <span data-ttu-id="bf49f-283">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-283">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingManagerDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As BindingManagerDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingManagerDataErrorEventHandler ^ DataError;" />
      <MemberSignature Language="F#" Value="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " Usage="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-284">当货币相关的异常由无提示处理时发生<see cref="T:System.Windows.Forms.BindingSource" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-284">Occurs when a currency-related exception is silently handled by the <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-285">此事件是信息性，并报告仅在符合 cls 的异常。</span><span class="sxs-lookup"><span data-stu-id="bf49f-285">This event is informational and reports CLS-compliant exceptions only.</span></span> <span data-ttu-id="bf49f-286">若要确定发生了哪种类型的异常，处理此事件，并检查<xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A>属性的<xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-286">To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span></span>  
  
 <span data-ttu-id="bf49f-287">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-287">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Windows.Forms.BindingSource.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-288">获取或设置连接器当前绑定到的数据源中的特定列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-288">Gets or sets the specific list in the data source to which the connector currently binds to.</span></span></summary>
        <value><span data-ttu-id="bf49f-289">列表 （或行） 中的名称<see cref="P:System.Windows.Forms.BindingSource.DataSource" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-289">The name of a list (or row) in the <see cref="P:System.Windows.Forms.BindingSource.DataSource" />.</span></span> <span data-ttu-id="bf49f-290">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="bf49f-290">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-291">如果<xref:System.Windows.Forms.BindingSource.DataSource%2A>包含多个列表 （或表） 的数据，应设置<xref:System.Windows.Forms.BindingSource.DataMember%2A>属性设置为其中一个源的名称。</span><span class="sxs-lookup"><span data-stu-id="bf49f-291">If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> contains multiple lists (or tables) of data, you should set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to the name of one of the sources.</span></span>  
  
 <span data-ttu-id="bf49f-292">设置此属性将引发<xref:System.Windows.Forms.BindingSource.DataMemberChanged>事件</span><span class="sxs-lookup"><span data-stu-id="bf49f-292">Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataMemberChanged;" />
      <MemberSignature Language="F#" Value="member this.DataMemberChanged : EventHandler " Usage="member this.DataMemberChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-293">在 <see cref="P:System.Windows.Forms.BindingSource.DataMember" /> 属性值更改后发生。</span><span class="sxs-lookup"><span data-stu-id="bf49f-293">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataMember" /> property value has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-294"><xref:System.Windows.Forms.BindingSource.DataMemberChanged>事件发生后<xref:System.Windows.Forms.BindingSource.DataMember%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-294">The <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property changes.</span></span>  
  
 <span data-ttu-id="bf49f-295">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-295">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.BindingSource.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-296">获取或设置连接器绑定到的数据源。</span><span class="sxs-lookup"><span data-stu-id="bf49f-296">Gets or sets the data source that the connector binds to.</span></span></summary>
        <value><span data-ttu-id="bf49f-297"><see cref="T:System.Object" />作为数据源。</span><span class="sxs-lookup"><span data-stu-id="bf49f-297">An <see cref="T:System.Object" /> that acts as a data source.</span></span> <span data-ttu-id="bf49f-298">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-298">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-299"><xref:System.Windows.Forms.BindingSource.DataSource%2A>属性可以设置为多个数据源，包括类型、 对象和类型的列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-299">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> property can be set to a number of data sources, including types, objects, and lists of types.</span></span> <span data-ttu-id="bf49f-300">产生的数据源将公开为一个列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-300">The resulting data source will be exposed as a list.</span></span> <span data-ttu-id="bf49f-301">下表显示了一些常见的数据源和生成的列表计算。</span><span class="sxs-lookup"><span data-stu-id="bf49f-301">The following table shows some of the common data sources and the resulting list evaluation.</span></span>  
  
|<span data-ttu-id="bf49f-302">数据源属性</span><span class="sxs-lookup"><span data-stu-id="bf49f-302">DataSource property</span></span>|<span data-ttu-id="bf49f-303">列表结果</span><span class="sxs-lookup"><span data-stu-id="bf49f-303">List results</span></span>|  
|-------------------------|------------------|  
|`null`|<span data-ttu-id="bf49f-304">一个空<xref:System.ComponentModel.IBindingList>的对象。</span><span class="sxs-lookup"><span data-stu-id="bf49f-304">An empty <xref:System.ComponentModel.IBindingList> of objects.</span></span> <span data-ttu-id="bf49f-305">将项添加到所添加项的类型设置的列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-305">Adding an item sets the list to the type of the added item.</span></span>|  
|<span data-ttu-id="bf49f-306">`null` 使用<xref:System.Windows.Forms.BindingSource.DataMember%2A>设置</span><span class="sxs-lookup"><span data-stu-id="bf49f-306">`null` with <xref:System.Windows.Forms.BindingSource.DataMember%2A> set</span></span>|<span data-ttu-id="bf49f-307">不受支持，将引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-307">Not supported, raises <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="bf49f-308">非列表类型或者"T"类型的对象</span><span class="sxs-lookup"><span data-stu-id="bf49f-308">Non-list type or object of type "T"</span></span>|<span data-ttu-id="bf49f-309">空<xref:System.ComponentModel.IBindingList>的"T"类型。</span><span class="sxs-lookup"><span data-stu-id="bf49f-309">Empty <xref:System.ComponentModel.IBindingList> of type "T".</span></span>|  
|<span data-ttu-id="bf49f-310">数组实例</span><span class="sxs-lookup"><span data-stu-id="bf49f-310">Array instance</span></span>|<span data-ttu-id="bf49f-311"><xref:System.ComponentModel.IBindingList> 包含数组元素。</span><span class="sxs-lookup"><span data-stu-id="bf49f-311"><xref:System.ComponentModel.IBindingList> containing the array elements.</span></span>|  
|<span data-ttu-id="bf49f-312"><xref:System.Collections.IEnumerable> 实例</span><span class="sxs-lookup"><span data-stu-id="bf49f-312"><xref:System.Collections.IEnumerable> instance</span></span>|<span data-ttu-id="bf49f-313"><xref:System.ComponentModel.IBindingList>包含<xref:System.Collections.IEnumerable>项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-313">An <xref:System.ComponentModel.IBindingList> containing the <xref:System.Collections.IEnumerable> items.</span></span>|  
|<span data-ttu-id="bf49f-314">列出"T"的包含类型的实例</span><span class="sxs-lookup"><span data-stu-id="bf49f-314">List instance containing type "T"</span></span>|<span data-ttu-id="bf49f-315"><xref:System.ComponentModel.IBindingList> 包含"T"类型的实例。</span><span class="sxs-lookup"><span data-stu-id="bf49f-315"><xref:System.ComponentModel.IBindingList> instance containing type "T".</span></span>|  
  
 <span data-ttu-id="bf49f-316">此外，<xref:System.Windows.Forms.BindingSource.DataSource%2A>可以设置为其他列表类型如<xref:System.ComponentModel.IListSource>并<xref:System.ComponentModel.ITypedList>和<xref:System.Windows.Forms.BindingSource>将适当地处理。</span><span class="sxs-lookup"><span data-stu-id="bf49f-316">In addition, <xref:System.Windows.Forms.BindingSource.DataSource%2A> can be set to other list types such as <xref:System.ComponentModel.IListSource> and <xref:System.ComponentModel.ITypedList> and the <xref:System.Windows.Forms.BindingSource> will handle them appropriately.</span></span> <span data-ttu-id="bf49f-317">在这种情况下，在列表中包含的类型应具有默认构造函数。</span><span class="sxs-lookup"><span data-stu-id="bf49f-317">In this case, the type contained in the list should have a default constructor.</span></span>  
  
 <span data-ttu-id="bf49f-318">设置数据源时，如果提供的引用包含多个列表或表，必须设置<xref:System.Windows.Forms.BindingSource.DataMember%2A>属性设置为一个字符串，指定要绑定到的列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-318">When setting a data source, if the supplied reference contains more than one list or table, you must set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a string that specifies the list to bind to.</span></span> <span data-ttu-id="bf49f-319">设置此属性将引发<xref:System.Windows.Forms.BindingSource.DataSourceChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-319">Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf49f-320">如果您进行任何更改到<xref:System.Windows.Forms.BindingSource.DataSource%2A>属性值，则应上进行用户界面 (UI) 线程，以确保 UI 反映所做的更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-320">If you make any changes to the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property value, you should do so on the user interface (UI) thread to ensure that the UI reflects the changes.</span></span>  
  
 <span data-ttu-id="bf49f-321"><xref:System.Windows.Forms.BindingSource.DataSource%2A>属性是默认属性<xref:System.Windows.Forms.BindingSource>类。</span><span class="sxs-lookup"><span data-stu-id="bf49f-321">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> property is the default property for the <xref:System.Windows.Forms.BindingSource> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-322">下面的代码示例将分配到的客户列表<xref:System.Windows.Forms.BindingSource.DataSource%2A>的<xref:System.Windows.Forms.BindingSource>组件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-322">The following code example assigns a list of customers to the <xref:System.Windows.Forms.BindingSource.DataSource%2A> of a <xref:System.Windows.Forms.BindingSource> component.</span></span> <span data-ttu-id="bf49f-323">此代码示例是在提供一个更大示例的一部分[如何：使用 BindingSource ResetItem 方法引发更改通知](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-323">This code example is part of a larger example provided at [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-324">在 <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> 属性值更改后发生。</span><span class="sxs-lookup"><span data-stu-id="bf49f-324">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> property value has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-325"><xref:System.Windows.Forms.BindingSource.DataSourceChanged>事件发生后<xref:System.Windows.Forms.BindingSource.DataSource%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-325">The <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property changes.</span></span>  
  
 <span data-ttu-id="bf49f-326">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-326">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="bindingSource.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="bf49f-327">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-327"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="bf49f-328">释放由 <see cref="T:System.Windows.Forms.BindingSource" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="bf49f-328">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.BindingSource" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-329">调用此方法由公共`Dispose`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-329">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="bf49f-330">`Dispose` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-330">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="bf49f-331"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-331"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="bf49f-332">当`disposing`参数为 true 时，此方法释放任何托管对象所持有的所有资源，此<xref:System.Windows.Forms.BindingSource>的引用。</span><span class="sxs-lookup"><span data-stu-id="bf49f-332">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.BindingSource> references.</span></span> <span data-ttu-id="bf49f-333">此方法调用每个引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-333">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bf49f-334">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="bf49f-334">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="bf49f-335">重写时<see langword="Dispose(Boolean)" />小心不要引用已经释放的早期调用中的对象<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-335">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="bf49f-336">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-336">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="bf49f-337">有关详细信息<see langword="Dispose" />并<see cref="M:System.Object.Finalize" />，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="bf49f-337">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="bindingSource.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-338">将挂起的更改应用于基础数据源。</span><span class="sxs-lookup"><span data-stu-id="bf49f-338">Applies pending changes to the underlying data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-339">当<xref:System.Windows.Forms.BindingSource.EndEdit%2A>方法调用时，所有挂起的更改应用于基础数据源。</span><span class="sxs-lookup"><span data-stu-id="bf49f-339">When the <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is called, all pending changes are applied to the underlying data source.</span></span>  
  
 <span data-ttu-id="bf49f-340">此方法无任何效果，除非数据源包含的对象实现<xref:System.ComponentModel.IEditableObject>接口。</span><span class="sxs-lookup"><span data-stu-id="bf49f-340">This method has no effect unless the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="bf49f-341">如果对象不实现<xref:System.ComponentModel.IEditableObject>每项更改后立即接口，对数据的更改复制到基础数据源。</span><span class="sxs-lookup"><span data-stu-id="bf49f-341">If the objects do not implement the <xref:System.ComponentModel.IEditableObject> interface, changes to the data are copied to the underlying data source immediately after each change.</span></span>  
  
 <span data-ttu-id="bf49f-342">此方法将引发<xref:System.Windows.Forms.BindingSource.ListChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-342">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="System.Windows.Forms.BindingSource.Filter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingListView.Filter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-343">获取或设置用于筛选查看哪些行的表达式。</span><span class="sxs-lookup"><span data-stu-id="bf49f-343">Gets or sets the expression used to filter which rows are viewed.</span></span></summary>
        <value><span data-ttu-id="bf49f-344">用于指定行的筛选方式的字符串。</span><span class="sxs-lookup"><span data-stu-id="bf49f-344">A string that specifies how rows are to be filtered.</span></span> <span data-ttu-id="bf49f-345">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-345">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-346">在复杂数据绑定方案中，通常使用<xref:System.Windows.Forms.BindingSource.Filter%2A>属性，可查看子集<xref:System.Windows.Forms.BindingSource.DataSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-346">Typically used in complex data-binding scenarios, the <xref:System.Windows.Forms.BindingSource.Filter%2A> property allows you to view a subset of the <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span></span> <span data-ttu-id="bf49f-347">只有基础列出了实现<xref:System.ComponentModel.IBindingListView>接口支持筛选。</span><span class="sxs-lookup"><span data-stu-id="bf49f-347">Only underlying lists that implement the <xref:System.ComponentModel.IBindingListView> interface support filtering.</span></span>  
  
 <span data-ttu-id="bf49f-348">当<xref:System.Windows.Forms.BindingSource.Filter%2A>不是`null`，则<xref:System.Windows.Forms.BindingSource>将此属性传递给基础列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-348">When <xref:System.Windows.Forms.BindingSource.Filter%2A> is not `null`, the <xref:System.Windows.Forms.BindingSource> passes this property to the underlying list.</span></span> <span data-ttu-id="bf49f-349">如果在对象初始化过程中设置此属性，将被延迟调用，直到初始化已完成。</span><span class="sxs-lookup"><span data-stu-id="bf49f-349">If you set this property during object initialization, the call will be deferred until after initialization is complete.</span></span>  
  
 <span data-ttu-id="bf49f-350">若要形成一个筛选器的值，指定后跟一个运算符和值要作为筛选依据的列的名称。</span><span class="sxs-lookup"><span data-stu-id="bf49f-350">To form a filter value, specify the name of a column followed by an operator and a value to filter on.</span></span> <span data-ttu-id="bf49f-351">接受的筛选器语法取决于基础数据源。</span><span class="sxs-lookup"><span data-stu-id="bf49f-351">The accepted filter syntax depends on the underlying data source.</span></span> <span data-ttu-id="bf49f-352">如果基础数据源<xref:System.Data.DataSet>， <xref:System.Data.DataTable>，或<xref:System.Data.DataView>，可以指定使用的所述的语法的布尔表达式<xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-352">If the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, you can specify Boolean expressions using the syntax documented for the <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="bf49f-353">值<xref:System.Windows.Forms.BindingSource.Filter%2A>属性会影响的值<xref:System.Windows.Forms.BindingSource.Count%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-353">The value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property affects the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span> <span data-ttu-id="bf49f-354">此外，<xref:System.Windows.Forms.BindingSource.Filter%2A>值将保留在数据源更改时。</span><span class="sxs-lookup"><span data-stu-id="bf49f-354">Additionally, the <xref:System.Windows.Forms.BindingSource.Filter%2A> value will persist when the data source changes.</span></span> <span data-ttu-id="bf49f-355">若要停止筛选<xref:System.Windows.Forms.BindingSource.DataSource%2A>，调用<xref:System.Windows.Forms.BindingSource.RemoveFilter%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-355">To stop filtering the <xref:System.Windows.Forms.BindingSource.DataSource%2A>, call the <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-356">下面的示例演示如何使用<xref:System.Windows.Forms.BindingSource.Filter%2A>具有属性<xref:System.Data.DataView>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-356">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Filter%2A> property with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="bf49f-357">若要运行此示例，请将代码粘贴到 Windows 窗体并调用`PopulateDataViewAndFilter`从窗体的构造函数或<xref:System.Windows.Forms.Form.Load>事件处理方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-357">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFilter` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="bf49f-358">你的窗体应导入<xref:System.Xml>和<xref:System.IO>命名空间。</span><span class="sxs-lookup"><span data-stu-id="bf49f-358">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Sort" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveFilter" />
        <altmember cref="P:System.ComponentModel.IBindingList.IsSorted" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bf49f-359">在数据源中查找指定的项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-359">Find the specified item in the data source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public virtual int Find (System.ComponentModel.PropertyDescriptor prop, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Find(class System.ComponentModel.PropertyDescriptor prop, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Find (prop As PropertyDescriptor, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Find(System::ComponentModel::PropertyDescriptor ^ prop, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Find : System.ComponentModel.PropertyDescriptor * obj -&gt; int&#xA;override this.Find : System.ComponentModel.PropertyDescriptor * obj -&gt; int" Usage="bindingSource.Find (prop, key)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="prop"><span data-ttu-id="bf49f-360">要搜索的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-360">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to search for.</span></span></param>
        <param name="key"><span data-ttu-id="bf49f-361">值<paramref name="prop" />以匹配。</span><span class="sxs-lookup"><span data-stu-id="bf49f-361">The value of <paramref name="prop" /> to match.</span></span></param>
        <summary><span data-ttu-id="bf49f-362">搜索具有指定属性描述符的项索引。</span><span class="sxs-lookup"><span data-stu-id="bf49f-362">Searches for the index of the item that has the given property descriptor.</span></span></summary>
        <returns><span data-ttu-id="bf49f-363">具有给定的值的项的从零开始索引<see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-363">The zero-based index of the item that has the given value for <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-364">此方法通常用在复杂数据绑定的情况下，以定位其中通过指定字段的值的第一行`prop`参数与值相等`key`参数</span><span class="sxs-lookup"><span data-stu-id="bf49f-364">This method is typically used in complex data-binding cases to locate the first row where the value of the field specified by the `prop` parameter equals the value of the `key` parameter</span></span>  
  
 <span data-ttu-id="bf49f-365">此方法只需把请求传递给基础列表<xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-365">This method simply refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bf49f-366">例如，如果基础数据源<xref:System.Data.DataSet>， <xref:System.Data.DataTable>，或<xref:System.Data.DataView>，此方法调用<xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-366">For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bf49f-367">行为<xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>，例如，如果不找到任何匹配项，则取决于基础列表中的方法实现返回的值。</span><span class="sxs-lookup"><span data-stu-id="bf49f-367">The behavior of <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-368">下面的代码示例演示如何使用 <xref:System.Windows.Forms.BindingSource.Find%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-368">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingSource.Find%2A> method.</span></span> <span data-ttu-id="bf49f-369">有关完整示例请参阅类概述主题。</span><span class="sxs-lookup"><span data-stu-id="bf49f-369">For the complete example see the class overview topic.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bf49f-370">基础列表不是类型<see cref="T:System.ComponentModel.IBindingList" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-370">The underlying list is not of type <see cref="T:System.ComponentModel.IBindingList" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string propertyName, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string propertyName, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Find(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (propertyName As String, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ propertyName, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.Find : string * obj -&gt; int" Usage="bindingSource.Find (propertyName, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="bf49f-371">要搜索的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="bf49f-371">The name of the property to search for.</span></span></param>
        <param name="key"><span data-ttu-id="bf49f-372">具有指定的项的值<paramref name="propertyName" />查找。</span><span class="sxs-lookup"><span data-stu-id="bf49f-372">The value of the item with the specified <paramref name="propertyName" /> to find.</span></span></param>
        <summary><span data-ttu-id="bf49f-373">使用指定的属性名和值返回列表中的项的索引。</span><span class="sxs-lookup"><span data-stu-id="bf49f-373">Returns the index of the item in the list with the specified property name and value.</span></span></summary>
        <returns><span data-ttu-id="bf49f-374">带有指定属性名和值的项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="bf49f-374">The zero-based index of the item with the specified property name and value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-375"><xref:System.Windows.Forms.BindingSource.Find%2A>方法只能在基础列表后<xref:System.ComponentModel.IBindingList>实现搜索。</span><span class="sxs-lookup"><span data-stu-id="bf49f-375">The <xref:System.Windows.Forms.BindingSource.Find%2A> method can only be used when the underlying list is an <xref:System.ComponentModel.IBindingList> with searching implemented.</span></span> <span data-ttu-id="bf49f-376">此方法只需把请求传递给基础列表<xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-376">This method simply refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bf49f-377">例如，如果基础数据源<xref:System.Data.DataSet>， <xref:System.Data.DataTable>，或<xref:System.Data.DataView>，此方法将转换`propertyName`到<xref:System.ComponentModel.PropertyDescriptor>，并调用<xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-377">For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method converts `propertyName` to a <xref:System.ComponentModel.PropertyDescriptor> and calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A> method.</span></span> <span data-ttu-id="bf49f-378">行为<xref:System.Windows.Forms.BindingSource.Find%2A>，例如，如果不找到任何匹配项，则取决于基础列表中的方法实现返回的值。</span><span class="sxs-lookup"><span data-stu-id="bf49f-378">The behavior of <xref:System.Windows.Forms.BindingSource.Find%2A>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</span></span>  
  
 <span data-ttu-id="bf49f-379">属性名称比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="bf49f-379">The property name comparison is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-380">下面的示例演示如何使用<xref:System.Windows.Forms.BindingSource.Find%2A>方法替换<xref:System.Data.DataView>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-380">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Find%2A> method with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="bf49f-381">若要运行此示例，请将代码粘贴到 Windows 窗体并调用`PopulateDataViewAndFind`从窗体的构造函数或<xref:System.Windows.Forms.Form.Load>事件处理方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-381">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFind` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="bf49f-382">你的窗体应导入<xref:System.Xml>和<xref:System.IO>命名空间。</span><span class="sxs-lookup"><span data-stu-id="bf49f-382">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bf49f-383">基础列表不是<see cref="T:System.ComponentModel.IBindingList" />实现了搜索功能。</span><span class="sxs-lookup"><span data-stu-id="bf49f-383">The underlying list is not a <see cref="T:System.ComponentModel.IBindingList" /> with searching functionality implemented.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bf49f-384"><paramref name="propertyName" /> 与列表中的属性不匹配。</span><span class="sxs-lookup"><span data-stu-id="bf49f-384"><paramref name="propertyName" /> does not match a property in the list.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="bindingSource.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-385">检索的枚举器<see cref="P:System.Windows.Forms.BindingSource.List" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-385">Retrieves an enumerator for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span></span></summary>
        <returns><span data-ttu-id="bf49f-386"><see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="P:System.Windows.Forms.BindingSource.List" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-386">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingSource.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="bf49f-387">一个数组<see cref="T:System.ComponentModel.PropertyDescriptor" />作为可绑定列表中查找的对象。</span><span class="sxs-lookup"><span data-stu-id="bf49f-387">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span></span></param>
        <summary><span data-ttu-id="bf49f-388">检索的数组<see cref="T:System.ComponentModel.PropertyDescriptor" />对象表示可绑定属性的数据源列表类型。</span><span class="sxs-lookup"><span data-stu-id="bf49f-388">Retrieves an array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects representing the bindable properties of the data source list type.</span></span></summary>
        <returns><span data-ttu-id="bf49f-389">一个数组<see cref="T:System.ComponentModel.PropertyDescriptor" />对象，表示此列表类型的属性用于将数据绑定。</span><span class="sxs-lookup"><span data-stu-id="bf49f-389">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represents the properties on this list type used to bind data.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListBindingHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public virtual string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string&#xA;override this.GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="bindingSource.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="bf49f-390">一个数组<see cref="T:System.ComponentModel.PropertyDescriptor" />作为可绑定列表中查找的对象。</span><span class="sxs-lookup"><span data-stu-id="bf49f-390">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span></span></param>
        <summary><span data-ttu-id="bf49f-391">获取为绑定提供数据的列表的名称。</span><span class="sxs-lookup"><span data-stu-id="bf49f-391">Gets the name of the list supplying data for the binding.</span></span></summary>
        <returns><span data-ttu-id="bf49f-392">为绑定提供数据的列表的名称。</span><span class="sxs-lookup"><span data-stu-id="bf49f-392">The name of the list supplying the data for binding.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListBindingHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetRelatedCurrencyManager">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager (string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager(string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelatedCurrencyManager (dataMember As String) As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::CurrencyManager ^ GetRelatedCurrencyManager(System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="abstract member GetRelatedCurrencyManager : string -&gt; System.Windows.Forms.CurrencyManager&#xA;override this.GetRelatedCurrencyManager : string -&gt; System.Windows.Forms.CurrencyManager" Usage="bindingSource.GetRelatedCurrencyManager dataMember" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.ICurrencyManagerProvider.GetRelatedCurrencyManager(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataMember"><span data-ttu-id="bf49f-393">在数据源中为其检索当前项管理器的列或列表的名称。</span><span class="sxs-lookup"><span data-stu-id="bf49f-393">The name of column or list, within the data source to retrieve the currency manager for.</span></span></param>
        <summary><span data-ttu-id="bf49f-394">为指定的数据成员获取相关的当前项管理器。</span><span class="sxs-lookup"><span data-stu-id="bf49f-394">Gets the related currency manager for the specified data member.</span></span></summary>
        <returns><span data-ttu-id="bf49f-395">相关<see cref="T:System.Windows.Forms.CurrencyManager" />指定的数据成员。</span><span class="sxs-lookup"><span data-stu-id="bf49f-395">The related <see cref="T:System.Windows.Forms.CurrencyManager" /> for the specified data member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-396">如果`dataMember`是`null`或空字符串 ("")，<xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A>返回主货币管理器;否则，它检查是否有另一个<xref:System.Windows.Forms.BindingSource>绑定到指定的数据成员，并返回其当前项管理器。</span><span class="sxs-lookup"><span data-stu-id="bf49f-396">If `dataMember` is `null` or an empty string (""), <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> returns the main currency manager; otherwise, it checks for another <xref:System.Windows.Forms.BindingSource> bound to the specified data member and returns its currency manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="bindingSource.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bf49f-397"><see cref="T:System.Object" />所表示的基础列表中查找<see cref="P:System.Windows.Forms.BindingSource.List" />属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-397">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span></span> <span data-ttu-id="bf49f-398">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-398">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="bf49f-399">搜索指定的对象，并返回整个列表中第一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="bf49f-399">Searches for the specified object and returns the index of the first occurrence within the entire list.</span></span></summary>
        <returns><span data-ttu-id="bf49f-400">第一个匹配项的从零开始的索引<paramref name="value" />参数; 否则为-1 如果<paramref name="value" />不在列表中。</span><span class="sxs-lookup"><span data-stu-id="bf49f-400">The zero-based index of the first occurrence of the <paramref name="value" /> parameter; otherwise, -1 if <paramref name="value" /> is not in the list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-401">尽管实现依赖于基础列表`IndexOf`方法中，通常具有以下特征：</span><span class="sxs-lookup"><span data-stu-id="bf49f-401">Although the implementation is dependent on the underlying list's `IndexOf` method, typically the following characteristics apply:</span></span>  
  
-   <span data-ttu-id="bf49f-402"><xref:System.Windows.Forms.BindingSource.List%2A>搜索第一个元素开始和结束时间的最后一个元素。</span><span class="sxs-lookup"><span data-stu-id="bf49f-402">The <xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.</span></span>  
  
-   <span data-ttu-id="bf49f-403">基础方法执行线性搜索;因此，平均执行时间是成正比的值<xref:System.Windows.Forms.BindingSource.Count%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-403">The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="bf49f-404">基础方法通过调用确定相等性<xref:System.Object.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-404">The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="bindingSource.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bf49f-405">应插入 <paramref name="value" /> 的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="bf49f-405">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="bf49f-406">要插入的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-406">The <see cref="T:System.Object" /> to insert.</span></span> <span data-ttu-id="bf49f-407">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-407">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="bf49f-408">将一项插入列表中指定的索引处。</span><span class="sxs-lookup"><span data-stu-id="bf49f-408">Inserts an item into the list at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-409">此方法将引发<xref:System.Windows.Forms.BindingSource.ListChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-409">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bf49f-410"><paramref name="index" /> 小于零或大于 <see cref="P:System.Windows.Forms.BindingSource.Count" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-410"><paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bf49f-411">列表是只读的或具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="bf49f-411">The list is read-only or has a fixed size.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
      </Docs>
    </Member>
    <Member MemberName="IsBindingSuspended">
      <MemberSignature Language="C#" Value="public bool IsBindingSuspended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsBindingSuspended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBindingSuspended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingSuspended { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBindingSuspended : bool" Usage="System.Windows.Forms.BindingSource.IsBindingSuspended" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-412">获取一个值，该值指示列表绑定是否已挂起。</span><span class="sxs-lookup"><span data-stu-id="bf49f-412">Gets a value indicating whether the list binding is suspended.</span></span></summary>
        <value><span data-ttu-id="bf49f-413"><see langword="true" /> 若要指示绑定已挂起，;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-413"><see langword="true" /> to indicate the binding is suspended; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Windows.Forms.BindingSource.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-414">获取一个值，该值指示基础列表是否具有固定大小。</span><span class="sxs-lookup"><span data-stu-id="bf49f-414">Gets a value indicating whether the underlying list has a fixed size.</span></span></summary>
        <value><span data-ttu-id="bf49f-415"><see langword="true" /> 如果基础列表具有固定的大小，则否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-415"><see langword="true" /> if the underlying list has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-416">如果列表具有固定的大小，它不允许添加或删除元素后创建的列表，但可以修改现有元素。</span><span class="sxs-lookup"><span data-stu-id="bf49f-416">If the list has a fixed size, it does not allow the addition or removal of elements after the list has been created, but you can modify existing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.BindingSource.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-417">获取一个值，该值指示基础列表是否为只读。</span><span class="sxs-lookup"><span data-stu-id="bf49f-417">Gets a value indicating whether the underlying list is read-only.</span></span></summary>
        <value><span data-ttu-id="bf49f-418">如果列表为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-418"><see langword="true" /> if the list is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-419">列表是只读的不允许添加、 移除或修改的任何列表项之后创建列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-419">A list that is read-only does not allow the addition, removal, or modification of any list items after the list is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSorted">
      <MemberSignature Language="C#" Value="public virtual bool IsSorted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsSorted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSorted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSorted : bool" Usage="System.Windows.Forms.BindingSource.IsSorted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.IsSorted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-420">获取一个值，该值指示是否在基础列表中的项进行排序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-420">Gets a value indicating whether the items in the underlying list are sorted.</span></span></summary>
        <value><span data-ttu-id="bf49f-421"><see langword="true" /> 如果列表为<see cref="T:System.ComponentModel.IBindingList" />和已排序; 否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-421"><see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingList" /> and is sorted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-422"><xref:System.Windows.Forms.BindingSource.IsSorted%2A> 始终返回`false`如果该列表不是<xref:System.ComponentModel.IBindingList>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-422"><xref:System.Windows.Forms.BindingSource.IsSorted%2A> always returns `false` if the list is not an <xref:System.ComponentModel.IBindingList>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Windows.Forms.BindingSource.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-423">获取一个值，该值指示对集合的访问是否为同步的（线程安全）。</span><span class="sxs-lookup"><span data-stu-id="bf49f-423">Gets a value indicating whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="bf49f-424"><see langword="true" /> 若要指示列表已同步，则否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-424"><see langword="true" /> to indicate the list is synchronized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Windows.Forms.BindingSource.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bf49f-425">要检索的从零开始的元素索引。</span><span class="sxs-lookup"><span data-stu-id="bf49f-425">The zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="bf49f-426">获取或设置指定索引处的列表元素。</span><span class="sxs-lookup"><span data-stu-id="bf49f-426">Gets or sets the list element at the specified index.</span></span></summary>
        <value><span data-ttu-id="bf49f-427">指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="bf49f-427">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-428"><xref:System.Windows.Forms.BindingSource.Item%2A>属性表示此类的索引器。</span><span class="sxs-lookup"><span data-stu-id="bf49f-428">The <xref:System.Windows.Forms.BindingSource.Item%2A> property represents the indexer for this class.</span></span> <span data-ttu-id="bf49f-429">它接受`null`为有效的值，并允许列表中的有重复项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-429">It accepts `null` as a valid value and allows duplicate items within the list.</span></span>  
  
 <span data-ttu-id="bf49f-430">设置值，将引发<xref:System.Windows.Forms.BindingSource.ListChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-430">Setting a value will raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bf49f-431"><paramref name="index" /> 小于零或者等于或大于<see cref="P:System.Windows.Forms.BindingSource.Count" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-431"><paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.IList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ List { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.IList" Usage="System.Windows.Forms.BindingSource.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-432">获取连接器绑定到的列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-432">Gets the list that the connector is bound to.</span></span></summary>
        <value><span data-ttu-id="bf49f-433"><see cref="T:System.Collections.IList" /> ，表示列表中，或<see langword="null" />是否存在任何与此相关的基础列表<see cref="T:System.Windows.Forms.BindingSource" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-433">An <see cref="T:System.Collections.IList" /> that represents the list, or <see langword="null" /> if there is no underlying list associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-434"><xref:System.Windows.Forms.BindingSource>类统一处理不同的数据源。</span><span class="sxs-lookup"><span data-stu-id="bf49f-434">The <xref:System.Windows.Forms.BindingSource> class uniformly handles different data sources.</span></span> <span data-ttu-id="bf49f-435">理想情况下<xref:System.Windows.Forms.BindingSource.List%2A>属性应设置为一种通用<xref:System.Collections.IList>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-435">Ideally the <xref:System.Windows.Forms.BindingSource.List%2A> property should be set to a general <xref:System.Collections.IList>.</span></span> <span data-ttu-id="bf49f-436">但是，有时可能会需要转换此属性设置为更具体的类型。</span><span class="sxs-lookup"><span data-stu-id="bf49f-436">However, sometimes it may be necessary to cast this property to a more specific type.</span></span> <span data-ttu-id="bf49f-437">下表显示了基础列表类型，具体取决于数据源的值的类型。</span><span class="sxs-lookup"><span data-stu-id="bf49f-437">The following table shows the underlying list type, which depends on the type or value of the data source.</span></span>  
  
|<span data-ttu-id="bf49f-438">数据源类型</span><span class="sxs-lookup"><span data-stu-id="bf49f-438">Data source type</span></span>|<span data-ttu-id="bf49f-439">基础列表说明</span><span class="sxs-lookup"><span data-stu-id="bf49f-439">Underlying list description</span></span>|  
|----------------------|---------------------------------|  
|<span data-ttu-id="bf49f-440"><xref:System.Windows.Forms.BindingSource.DataSource%2A> 和<xref:System.Windows.Forms.BindingSource.DataMember%2A>是 `null`</span><span class="sxs-lookup"><span data-stu-id="bf49f-440"><xref:System.Windows.Forms.BindingSource.DataSource%2A> and <xref:System.Windows.Forms.BindingSource.DataMember%2A> are `null`</span></span>|<span data-ttu-id="bf49f-441">一个空 <xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-441">An empty <xref:System.Collections.ArrayList>.</span></span>|  
|<span data-ttu-id="bf49f-442"><xref:System.Windows.Forms.BindingSource.DataSource%2A> 是`null`，但<xref:System.Windows.Forms.BindingSource.DataMember%2A>不是 `null`</span><span class="sxs-lookup"><span data-stu-id="bf49f-442"><xref:System.Windows.Forms.BindingSource.DataSource%2A> is `null`, but <xref:System.Windows.Forms.BindingSource.DataMember%2A> is not `null`</span></span>|<span data-ttu-id="bf49f-443">None;尝试获取<xref:System.Windows.Forms.BindingSource.List%2A>将引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-443">None; an attempt to get the <xref:System.Windows.Forms.BindingSource.List%2A> will throw an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="bf49f-444"><xref:System.Array>实例</span><span class="sxs-lookup"><span data-stu-id="bf49f-444">An <xref:System.Array> instance</span></span>|<span data-ttu-id="bf49f-445">一个 <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-445">An <xref:System.Array>.</span></span>|  
|<span data-ttu-id="bf49f-446"><xref:System.ComponentModel.IListSource>实例</span><span class="sxs-lookup"><span data-stu-id="bf49f-446">An <xref:System.ComponentModel.IListSource> instance</span></span>|<span data-ttu-id="bf49f-447">调用的返回值<xref:System.ComponentModel.IListSource.GetList%2A>方法的<xref:System.ComponentModel.IListSource>实例。</span><span class="sxs-lookup"><span data-stu-id="bf49f-447">The return value from a call to the <xref:System.ComponentModel.IListSource.GetList%2A> method of this <xref:System.ComponentModel.IListSource> instance.</span></span>|  
|<span data-ttu-id="bf49f-448"><xref:System.ComponentModel.IBindingList>实例</span><span class="sxs-lookup"><span data-stu-id="bf49f-448">An <xref:System.ComponentModel.IBindingList> instance</span></span>|<span data-ttu-id="bf49f-449">一个 <xref:System.ComponentModel.IBindingList>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-449">An <xref:System.ComponentModel.IBindingList>.</span></span>|  
|<span data-ttu-id="bf49f-450"><xref:System.Collections.IList>实例</span><span class="sxs-lookup"><span data-stu-id="bf49f-450">An <xref:System.Collections.IList> instance</span></span>|<span data-ttu-id="bf49f-451">一个 <xref:System.Collections.IList>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-451">An <xref:System.Collections.IList>.</span></span>|  
|<span data-ttu-id="bf49f-452">非<xref:System.Collections.IList>"T"类型的实例</span><span class="sxs-lookup"><span data-stu-id="bf49f-452">A non-<xref:System.Collections.IList> instance of type "T"</span></span>|<span data-ttu-id="bf49f-453">一个<xref:System.ComponentModel.BindingList%601>其中一个元素。</span><span class="sxs-lookup"><span data-stu-id="bf49f-453">A <xref:System.ComponentModel.BindingList%601> with one element.</span></span>|  
|<span data-ttu-id="bf49f-454"><xref:System.ComponentModel.ICustomTypeDescriptor>实例</span><span class="sxs-lookup"><span data-stu-id="bf49f-454">An <xref:System.ComponentModel.ICustomTypeDescriptor> instance</span></span>|<span data-ttu-id="bf49f-455"><xref:System.Collections.ArrayList>其中一个元素。</span><span class="sxs-lookup"><span data-stu-id="bf49f-455">An <xref:System.Collections.ArrayList> with one element.</span></span>|  
|<span data-ttu-id="bf49f-456">An <xref:System.Collections.IEnumerable></span><span class="sxs-lookup"><span data-stu-id="bf49f-456">An <xref:System.Collections.IEnumerable></span></span>|<span data-ttu-id="bf49f-457"><xref:System.Collections.ArrayList>与复制的元素。</span><span class="sxs-lookup"><span data-stu-id="bf49f-457">An <xref:System.Collections.ArrayList> with the elements copied over.</span></span>|  
|<span data-ttu-id="bf49f-458"><xref:System.Array>类型具有<xref:System.Windows.Forms.BindingSource.DataMember%2A>项的类型为"T"</span><span class="sxs-lookup"><span data-stu-id="bf49f-458">The <xref:System.Array> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type "T"</span></span>|<span data-ttu-id="bf49f-459"><xref:System.ComponentModel.BindingList%601>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-459">A <xref:System.ComponentModel.BindingList%601>.</span></span>|  
|<span data-ttu-id="bf49f-460">一个<xref:System.Type>，它表示<xref:System.ComponentModel.IListSource>或 <xref:System.ComponentModel.ITypedList></span><span class="sxs-lookup"><span data-stu-id="bf49f-460">A <xref:System.Type> that represents an <xref:System.ComponentModel.IListSource> or <xref:System.ComponentModel.ITypedList></span></span>|<span data-ttu-id="bf49f-461">通过调用创建的实例<xref:System.Activator.CreateInstance%28System.Type%29>方法的<xref:System.Activator>类。</span><span class="sxs-lookup"><span data-stu-id="bf49f-461">An instance created by a call to the <xref:System.Activator.CreateInstance%28System.Type%29> method of the <xref:System.Activator> class.</span></span> <span data-ttu-id="bf49f-462">一个<xref:System.NotSupportedException>可能会引发。</span><span class="sxs-lookup"><span data-stu-id="bf49f-462">A <xref:System.NotSupportedException> may be thrown.</span></span>|  
|<span data-ttu-id="bf49f-463"><xref:System.Collections.IList>类型具有<xref:System.Windows.Forms.BindingSource.DataMember%2A>项的类型为"T"</span><span class="sxs-lookup"><span data-stu-id="bf49f-463">The <xref:System.Collections.IList> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type "T"</span></span><br /><br /> <span data-ttu-id="bf49f-464">或</span><span class="sxs-lookup"><span data-stu-id="bf49f-464">-or-</span></span><br /><br /> <span data-ttu-id="bf49f-465">非<xref:System.Collections.IList>类型</span><span class="sxs-lookup"><span data-stu-id="bf49f-465">A non-<xref:System.Collections.IList> type</span></span>|<span data-ttu-id="bf49f-466"><xref:System.ComponentModel.BindingList%601>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-466">A <xref:System.ComponentModel.BindingList%601>.</span></span>|  
|<span data-ttu-id="bf49f-467"><xref:System.ComponentModel.ICustomTypeDescriptor>类型</span><span class="sxs-lookup"><span data-stu-id="bf49f-467">The <xref:System.ComponentModel.ICustomTypeDescriptor> type</span></span>|<span data-ttu-id="bf49f-468">None;尝试获取<xref:System.Windows.Forms.BindingSource.List%2A>将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-468">None; an attempt to get the <xref:System.Windows.Forms.BindingSource.List%2A> will throw an <xref:System.NotSupportedException>.</span></span>|  
  
 <span data-ttu-id="bf49f-469">如果检索该类型是<xref:System.Collections.IList>接口，该基础集合可能为更复杂，例如<xref:System.Collections.ArrayList>或<xref:System.Data.DataView>类。</span><span class="sxs-lookup"><span data-stu-id="bf49f-469">If the type retrieved is the <xref:System.Collections.IList> interface, the underlying collection may be more complex, such as an <xref:System.Collections.ArrayList> or <xref:System.Data.DataView> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-470">下面的代码示例演示<xref:System.Windows.Forms.BindingSource.List%2A>， <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>，和<xref:System.Windows.Forms.BindingSource.Count%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="bf49f-470">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="bf49f-471">若要运行此示例，请将代码粘贴到包含一个窗体<xref:System.Windows.Forms.BindingSource>名为`BindingSource1`，名为两个标签`label1`并`label2`，和一个名为按钮`button1`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-471">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="bf49f-472">将相关联`button1_Click`方法替换<xref:System.Windows.Forms.Control.Click>事件`button1`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-472">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="bf49f-473">Visual Basic 用户将需要添加对 System.Data.dll 的引用。</span><span class="sxs-lookup"><span data-stu-id="bf49f-473">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ListChangedEventHandler ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ListChangedEventHandler ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ListChanged As ListChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::ListChangedEventHandler ^ ListChanged;" />
      <MemberSignature Language="F#" Value="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " Usage="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.IBindingList.ListChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-474">当基础列表更改或列表中的项更改时发生。</span><span class="sxs-lookup"><span data-stu-id="bf49f-474">Occurs when the underlying list changes or an item in the list changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-475"><xref:System.Windows.Forms.BindingSource.ListChanged>事件发生的更改的成员资格或表示的基础列表的元数据时<xref:System.Windows.Forms.BindingSource.List%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-475">The <xref:System.Windows.Forms.BindingSource.ListChanged> event occurs when there is a change to the membership or metadata of the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="bf49f-476">例如，当添加、 移除或移动项时引发此事件或<xref:System.Windows.Forms.BindingSource.DataSource%2A>或<xref:System.Windows.Forms.BindingSource.DataMember%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-476">For example, this event is raised when items are added, removed, or moved, or the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.</span></span> <span data-ttu-id="bf49f-477">值<xref:System.Windows.Forms.BindingSource.Sort%2A>和<xref:System.Windows.Forms.BindingSource.Filter%2A>属性将保留该事件发生时。</span><span class="sxs-lookup"><span data-stu-id="bf49f-477">The values of the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties will persist when this event occurs.</span></span>  
  
 <span data-ttu-id="bf49f-478">此事件可通过设置完全禁止<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-478">This event can be completely suppressed by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span> <span data-ttu-id="bf49f-479">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-479">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-480">下面的代码示例演示了如何处理<xref:System.Windows.Forms.BindingSource.ListChanged>的事件<xref:System.Windows.Forms.BindingSource>组件用于检测何时<xref:System.Windows.Forms.BindingSource>更改组件的基础列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-480">The following code example demonstrates handling the <xref:System.Windows.Forms.BindingSource.ListChanged> event of the <xref:System.Windows.Forms.BindingSource> component to detect when the <xref:System.Windows.Forms.BindingSource> component's underlying list is changed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="MoveFirst">
      <MemberSignature Language="C#" Value="public void MoveFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveFirst" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveFirst ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveFirst();" />
      <MemberSignature Language="F#" Value="member this.MoveFirst : unit -&gt; unit" Usage="bindingSource.MoveFirst " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-481">移至列表中的第一项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-481">Moves to the first item in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-482">更改的当前值<xref:System.Windows.Forms.BindingSource.Position%2A>属性设为 0、 基础数据源中的第一项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-482">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to 0, the first item in the underlying data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-483">下面的代码示例演示<xref:System.Windows.Forms.BindingSource.MoveNext%2A>， <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>， <xref:System.Windows.Forms.BindingSource.Current%2A>，和<xref:System.Windows.Forms.BindingSource.Position%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="bf49f-483">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="bf49f-484">若要运行此示例，请将代码粘贴到导入的窗体<xref:System.Drawing.Drawing2D>命名空间和包含<xref:System.Windows.Forms.BindingSource>名为`BindingSource1`和名为的按钮`button1`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-484">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="bf49f-485">将相关联`Form1_Load`和`Form1_Paint`方法使用<xref:System.Windows.Forms.Form.Load>并<xref:System.Windows.Forms.Control.Paint>窗体，并关联的事件`button1_click`方法替换<xref:System.Windows.Forms.Control.Click>事件`button1`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-485">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="bf49f-486">Visual Basic 用户将需要添加对 System.Data.dll 的引用。</span><span class="sxs-lookup"><span data-stu-id="bf49f-486">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
      </Docs>
    </Member>
    <Member MemberName="MoveLast">
      <MemberSignature Language="C#" Value="public void MoveLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveLast() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveLast" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveLast ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveLast();" />
      <MemberSignature Language="F#" Value="member this.MoveLast : unit -&gt; unit" Usage="bindingSource.MoveLast " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-487">移至列表中的最后一项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-487">Moves to the last item in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-488">更改的当前值<xref:System.Windows.Forms.BindingSource.Position%2A>属性设置为等于值的基础数据源中的最后一项的索引<xref:System.Windows.Forms.BindingSource.Count%2A>减 1 的属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-488">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the index of the last item in the underlying data source, which is equal to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property minus 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public void MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveNext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; unit" Usage="bindingSource.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-489">移至列表中的下一项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-489">Moves to the next item in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-490">更改的当前值<xref:System.Windows.Forms.BindingSource.Position%2A>到基础数据源中的下一项的属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-490">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the next item in the underlying data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-491">下面的代码示例演示<xref:System.Windows.Forms.BindingSource.MoveNext%2A>， <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>， <xref:System.Windows.Forms.BindingSource.Current%2A>，和<xref:System.Windows.Forms.BindingSource.Position%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="bf49f-491">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="bf49f-492">若要运行此示例，请将代码粘贴到导入的窗体<xref:System.Drawing.Drawing2D>命名空间和包含<xref:System.Windows.Forms.BindingSource>名为`BindingSource1`和名为的按钮`button1`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-492">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="bf49f-493">将相关联`Form1_Load`和`Form1_Paint`方法使用<xref:System.Windows.Forms.Form.Load>并<xref:System.Windows.Forms.Control.Paint>窗体，并关联的事件`button1_click`方法替换<xref:System.Windows.Forms.Control.Click>事件`button1`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-493">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="bf49f-494">Visual Basic 用户将需要添加对 System.Data.dll 的引用。</span><span class="sxs-lookup"><span data-stu-id="bf49f-494">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public void MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Sub MovePrevious ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MovePrevious();" />
      <MemberSignature Language="F#" Value="member this.MovePrevious : unit -&gt; unit" Usage="bindingSource.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-495">移至列表中的上一项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-495">Moves to the previous item in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-496">此方法将更改的当前值<xref:System.Windows.Forms.BindingSource.Position%2A>到基础数据源中的上一项的属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-496">This method changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the previous item in the underlying data source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="OnAddingNew">
      <MemberSignature Language="C#" Value="protected virtual void OnAddingNew (System.ComponentModel.AddingNewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAddingNew(class System.ComponentModel.AddingNewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAddingNew (e As AddingNewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAddingNew(System::ComponentModel::AddingNewEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAddingNew : System.ComponentModel.AddingNewEventArgs -&gt; unit&#xA;override this.OnAddingNew : System.ComponentModel.AddingNewEventArgs -&gt; unit" Usage="bindingSource.OnAddingNew e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AddingNewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bf49f-497">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-497">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bf49f-498">引发 <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-498">Raises the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-499">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-499">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bf49f-500">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-500">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bf49f-501"><xref:System.Windows.Forms.BindingSource.OnAddingNew%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="bf49f-501">The <xref:System.Windows.Forms.BindingSource.OnAddingNew%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bf49f-502">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="bf49f-502">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bf49f-503">在派生类中重写 <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="bf49f-503">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.AddingNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingComplete (e As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit&#xA;override this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="bindingSource.OnBindingComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bf49f-504">包含事件数据的 <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-504">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bf49f-505">引发 <see cref="E:System.Windows.Forms.BindingSource.BindingComplete" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-505">Raises the <see cref="E:System.Windows.Forms.BindingSource.BindingComplete" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-506">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-506">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bf49f-507">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-507">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bf49f-508"><xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="bf49f-508">The <xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bf49f-509">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="bf49f-509">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bf49f-510">在派生类中重写 <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="bf49f-510">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentChanged : EventArgs -&gt; unit" Usage="bindingSource.OnCurrentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bf49f-511">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-511">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bf49f-512">引发 <see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-512">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-513">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-513">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bf49f-514">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-514">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bf49f-515">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-515">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bf49f-516"><xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="bf49f-516">The <xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bf49f-517">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="bf49f-517">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bf49f-518">在派生类中重写 <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="bf49f-518">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentItemChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentItemChanged : EventArgs -&gt; unit" Usage="bindingSource.OnCurrentItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bf49f-519">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-519">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bf49f-520">引发 <see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-520">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-521">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-521">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bf49f-522">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-522">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bf49f-523"><xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="bf49f-523">The <xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bf49f-524">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="bf49f-524">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bf49f-525">在派生类中重写 <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="bf49f-525">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected virtual void OnDataError (System.Windows.Forms.BindingManagerDataErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataError(class System.Windows.Forms.BindingManagerDataErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataError (e As BindingManagerDataErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataError(System::Windows::Forms::BindingManagerDataErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataError : System.Windows.Forms.BindingManagerDataErrorEventArgs -&gt; unit&#xA;override this.OnDataError : System.Windows.Forms.BindingManagerDataErrorEventArgs -&gt; unit" Usage="bindingSource.OnDataError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingManagerDataErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bf49f-526">包含事件数据的 <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-526">A <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bf49f-527">引发 <see cref="E:System.Windows.Forms.BindingSource.DataError" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-527">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataError" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-528">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-528">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bf49f-529">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-529">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bf49f-530"><xref:System.Windows.Forms.BindingSource.OnDataError%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="bf49f-530">The <xref:System.Windows.Forms.BindingSource.OnDataError%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bf49f-531">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="bf49f-531">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bf49f-532">在派生类中重写 <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="bf49f-532">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDataMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataMemberChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataMemberChanged : EventArgs -&gt; unit&#xA;override this.OnDataMemberChanged : EventArgs -&gt; unit" Usage="bindingSource.OnDataMemberChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bf49f-533">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-533">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bf49f-534">引发 <see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-534">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-535">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-535">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bf49f-536">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-536">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bf49f-537"><xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="bf49f-537">The <xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bf49f-538">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="bf49f-538">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bf49f-539">在派生类中重写 <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="bf49f-539">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span>  
  
<span data-ttu-id="bf49f-540"><see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="bf49f-540">The <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bf49f-541">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="bf49f-541">This is the preferred technique for handling the event in a derived class.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="bindingSource.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bf49f-542">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-542">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bf49f-543">引发 <see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-543">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-544">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-544">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bf49f-545">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-545">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bf49f-546"><xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="bf49f-546">The <xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bf49f-547">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="bf49f-547">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bf49f-548">在派生类中重写 <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="bf49f-548">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnListChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnListChanged (System.ComponentModel.ListChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnListChanged(class System.ComponentModel.ListChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnListChanged (e As ListChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnListChanged(System::ComponentModel::ListChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnListChanged : System.ComponentModel.ListChangedEventArgs -&gt; unit&#xA;override this.OnListChanged : System.ComponentModel.ListChangedEventArgs -&gt; unit" Usage="bindingSource.OnListChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.ListChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bf49f-549">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-549">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bf49f-550">引发 <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-550">Raises the <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-551">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-551">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bf49f-552">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-552">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bf49f-553"><xref:System.Windows.Forms.BindingSource.OnListChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="bf49f-553">The <xref:System.Windows.Forms.BindingSource.OnListChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bf49f-554">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="bf49f-554">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bf49f-555">在派生类中重写 <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="bf49f-555">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
      </Docs>
    </Member>
    <Member MemberName="OnPositionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPositionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPositionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPositionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPositionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPositionChanged : EventArgs -&gt; unit&#xA;override this.OnPositionChanged : EventArgs -&gt; unit" Usage="bindingSource.OnPositionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bf49f-556">包含事件数据的 <see cref="T:System.ComponentModel.ListChangedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-556">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bf49f-557">引发 <see cref="E:System.Windows.Forms.BindingSource.PositionChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-557">Raises the <see cref="E:System.Windows.Forms.BindingSource.PositionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-558">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-558">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bf49f-559">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-559">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bf49f-560"><xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="bf49f-560">The <xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bf49f-561">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="bf49f-561">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bf49f-562">在派生类中重写 <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="bf49f-562">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Position { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Windows.Forms.BindingSource.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-563">获取或设置基础列表中当前项的索引。</span><span class="sxs-lookup"><span data-stu-id="bf49f-563">Gets or sets the index of the current item in the underlying list.</span></span></summary>
        <value><span data-ttu-id="bf49f-564">从零开始的索引，它指定基础列表中当前项的位置。</span><span class="sxs-lookup"><span data-stu-id="bf49f-564">A zero-based index that specifies the position of the current item in the underlying list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-565">设置时<xref:System.Windows.Forms.BindingSource.Position%2A>属性，超出范围的值按以下方式处理：</span><span class="sxs-lookup"><span data-stu-id="bf49f-565">When setting the <xref:System.Windows.Forms.BindingSource.Position%2A> property, out-of-range values are treated in the following manner:</span></span>  
  
-   <span data-ttu-id="bf49f-566">负值将视为 0。</span><span class="sxs-lookup"><span data-stu-id="bf49f-566">Negative values are treated as 0.</span></span>  
  
-   <span data-ttu-id="bf49f-567">值大于或等于<xref:System.Windows.Forms.BindingSource.Count%2A>被视为<xref:System.Windows.Forms.BindingSource.Count%2A>减 1。</span><span class="sxs-lookup"><span data-stu-id="bf49f-567">Values greater than or equal to <xref:System.Windows.Forms.BindingSource.Count%2A> are treated as <xref:System.Windows.Forms.BindingSource.Count%2A> minus 1.</span></span>  
  
 <span data-ttu-id="bf49f-568">更改<xref:System.Windows.Forms.BindingSource.Position%2A>属性将调整<xref:System.Windows.Forms.BindingSource.Current%2A>属性同样。</span><span class="sxs-lookup"><span data-stu-id="bf49f-568">Changing the <xref:System.Windows.Forms.BindingSource.Position%2A> property will adjust the <xref:System.Windows.Forms.BindingSource.Current%2A> property likewise.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-569">下面的代码示例演示<xref:System.Windows.Forms.BindingSource.MoveNext%2A>， <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>， <xref:System.Windows.Forms.BindingSource.Current%2A>，和<xref:System.Windows.Forms.BindingSource.Position%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="bf49f-569">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="bf49f-570">若要运行此示例，请将代码粘贴到导入的窗体<xref:System.Drawing.Drawing2D>命名空间和包含<xref:System.Windows.Forms.BindingSource>名为`BindingSource1`和名为的按钮`button1`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-570">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="bf49f-571">将相关联`Form1_Load`和`Form1_Paint`方法使用<xref:System.Windows.Forms.Form.Load>并<xref:System.Windows.Forms.Control.Paint>窗体，并关联的事件`button1_click`方法替换<xref:System.Windows.Forms.Control.Click>事件`button1`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-571">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="bf49f-572">Visual Basic 用户将需要添加对 System.Data.dll 的引用。</span><span class="sxs-lookup"><span data-stu-id="bf49f-572">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PositionChanged;" />
      <MemberSignature Language="F#" Value="member this.PositionChanged : EventHandler " Usage="member this.PositionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-573">值之后发生<see cref="P:System.Windows.Forms.BindingSource.Position" />属性已更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-573">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingSource.Position" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-574"><xref:System.Windows.Forms.BindingSource.PositionChanged>事件发生后<xref:System.Windows.Forms.BindingSource.Position%2A>属性已更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-574">The <xref:System.Windows.Forms.BindingSource.PositionChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.Position%2A> property has changed.</span></span>  
  
 <span data-ttu-id="bf49f-575">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-575">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseListChangedEvents">
      <MemberSignature Language="C#" Value="public bool RaiseListChangedEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RaiseListChangedEvents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property RaiseListChangedEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RaiseListChangedEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RaiseListChangedEvents : bool with get, set" Usage="System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-576">获取或设置一个值，该值指示是否<see cref="E:System.Windows.Forms.BindingSource.ListChanged" />应引发事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-576">Gets or sets a value indicating whether <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised.</span></span></summary>
        <value><span data-ttu-id="bf49f-577"><see langword="true" /> 如果<see cref="E:System.Windows.Forms.BindingSource.ListChanged" />事件应引发; 否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-577"><see langword="true" /> if <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bf49f-578">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-578">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-579">当<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>属性是`false`，它将挂起的引发<xref:System.Windows.Forms.BindingSource.ListChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-579">When the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property is `false`, it suspends the raising of <xref:System.Windows.Forms.BindingSource.ListChanged> events.</span></span> <span data-ttu-id="bf49f-580">此事件表示，绑定的列表已被修改以某种方式，包括添加、 删除、 插入或修改项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-580">This event indicates that the bound list has been modified in some way, including adding, deleting, inserting, or modifying items.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="bindingSource.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bf49f-581">要从所表示的基础列表中删除的项<see cref="P:System.Windows.Forms.BindingSource.List" />属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-581">The item to remove from the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span></span></param>
        <summary><span data-ttu-id="bf49f-582">从列表中移除指定的项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-582">Removes the specified item from the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-583"><xref:System.Windows.Forms.BindingSource.Remove%2A>方法会导致要在其中搜索的列表`value`参数。</span><span class="sxs-lookup"><span data-stu-id="bf49f-583">The <xref:System.Windows.Forms.BindingSource.Remove%2A> method causes the list to be searched for the `value` parameter.</span></span> <span data-ttu-id="bf49f-584">如果找到，此方法将尝试删除的项从<xref:System.Windows.Forms.BindingSource.List%2A>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-584">If found, this method will attempt to remove the item from the <xref:System.Windows.Forms.BindingSource.List%2A>.</span></span> <span data-ttu-id="bf49f-585">如果列表具有固定的大小，或者是只读的此尝试将失败。</span><span class="sxs-lookup"><span data-stu-id="bf49f-585">This attempt will fail if the list has a fixed size or is read-only.</span></span> <span data-ttu-id="bf49f-586">可以使用测试这两个条件<xref:System.Windows.Forms.BindingSource.IsFixedSize%2A>和<xref:System.Windows.Forms.BindingSource.IsReadOnly%2A>属性，分别。</span><span class="sxs-lookup"><span data-stu-id="bf49f-586">These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="bf49f-587">此方法将引发<xref:System.Windows.Forms.BindingSource.ListChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-587">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bf49f-588">基础列表具有固定的大小，或者是只读的。</span><span class="sxs-lookup"><span data-stu-id="bf49f-588">The underlying list has a fixed size or is read-only.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="bindingSource.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bf49f-589">要移除的项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="bf49f-589">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="bf49f-590">移除此列表中指定索引处的项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-590">Removes the item at the specified index in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-591">可以使用测试这两个条件<xref:System.Windows.Forms.BindingSource.IsFixedSize%2A>和<xref:System.Windows.Forms.BindingSource.IsReadOnly%2A>属性，分别。</span><span class="sxs-lookup"><span data-stu-id="bf49f-591">These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="bf49f-592">此方法将引发<xref:System.Windows.Forms.BindingSource.ListChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-592">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-593">下面的代码示例演示<xref:System.Windows.Forms.BindingSource.List%2A>， <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>，和<xref:System.Windows.Forms.BindingSource.Count%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="bf49f-593">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="bf49f-594">若要运行此示例，请将代码粘贴到包含一个窗体<xref:System.Windows.Forms.BindingSource>名为`BindingSource1`，名为两个标签`label1`并`label2`，和一个名为按钮`button1`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-594">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="bf49f-595">将相关联`button1_Click`方法替换<xref:System.Windows.Forms.Control.Click>事件`button1`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-595">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="bf49f-596">Visual Basic 用户将需要添加对 System.Data.dll 的引用。</span><span class="sxs-lookup"><span data-stu-id="bf49f-596">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bf49f-597"><paramref name="index" /> 小于零或大于的值<see cref="P:System.Windows.Forms.BindingSource.Count" />属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-597"><paramref name="index" /> is less than zero or greater than the value of the <see cref="P:System.Windows.Forms.BindingSource.Count" /> property.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bf49f-598">表示的基础列表<see cref="P:System.Windows.Forms.BindingSource.List" />属性是只读的或具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="bf49f-598">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCurrent">
      <MemberSignature Language="C#" Value="public void RemoveCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCurrent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCurrent();" />
      <MemberSignature Language="F#" Value="member this.RemoveCurrent : unit -&gt; unit" Usage="bindingSource.RemoveCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-599">从列表中移除当前项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-599">Removes the current item from the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-600"><xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>方法等效于<xref:System.Windows.Forms.BindingSource.RemoveAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-600">The <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A> method is equivalent to the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bf49f-601"><see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> 属性为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-601">The <see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> property is <see langword="false" />.</span></span>  
  
<span data-ttu-id="bf49f-602">或</span><span class="sxs-lookup"><span data-stu-id="bf49f-602">-or-</span></span> 
 <span data-ttu-id="bf49f-603"><see cref="P:System.Windows.Forms.BindingSource.Position" /> 小于零或大于 <see cref="P:System.Windows.Forms.BindingSource.Count" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-603"><see cref="P:System.Windows.Forms.BindingSource.Position" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bf49f-604">表示的基础列表<see cref="P:System.Windows.Forms.BindingSource.List" />属性是只读的或具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="bf49f-604">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveFilter">
      <MemberSignature Language="C#" Value="public virtual void RemoveFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFilter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveFilter ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveFilter();" />
      <MemberSignature Language="F#" Value="abstract member RemoveFilter : unit -&gt; unit&#xA;override this.RemoveFilter : unit -&gt; unit" Usage="bindingSource.RemoveFilter " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingListView.RemoveFilter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-605">移除与关联的筛选器<see cref="T:System.Windows.Forms.BindingSource" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-605">Removes the filter associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-606"><xref:System.Windows.Forms.BindingSource.RemoveFilter%2A>方法把请求传递给基础列表<xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-606">The <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method refers the request to the underlying list's <xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bf49f-607">仅列出了实现<xref:System.ComponentModel.IBindingListView>支持筛选。</span><span class="sxs-lookup"><span data-stu-id="bf49f-607">Only lists that implement <xref:System.ComponentModel.IBindingListView> support filtering.</span></span>  
  
 <span data-ttu-id="bf49f-608">默认情况下调用此方法等效于设置<xref:System.Windows.Forms.BindingSource.Filter%2A>属性设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-608">By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Filter%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bf49f-609">基础列表不支持筛选。</span><span class="sxs-lookup"><span data-stu-id="bf49f-609">The underlying list does not support filtering.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.Filter" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSort">
      <MemberSignature Language="C#" Value="public virtual void RemoveSort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveSort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSort();" />
      <MemberSignature Language="F#" Value="abstract member RemoveSort : unit -&gt; unit&#xA;override this.RemoveSort : unit -&gt; unit" Usage="bindingSource.RemoveSort " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.RemoveSort</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-610">删除具有关联的排序<see cref="T:System.Windows.Forms.BindingSource" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-610">Removes the sort associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-611"><xref:System.Windows.Forms.BindingSource.RemoveSort%2A>方法把请求传递给基础列表<xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-611">The <xref:System.Windows.Forms.BindingSource.RemoveSort%2A> method refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bf49f-612">仅列出了实现<xref:System.ComponentModel.IBindingList>支持排序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-612">Only lists that implement <xref:System.ComponentModel.IBindingList> support sorting.</span></span>  
  
 <span data-ttu-id="bf49f-613">默认情况下调用此方法等效于设置<xref:System.Windows.Forms.BindingSource.Sort%2A>属性设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-613">By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bf49f-614">基础列表不支持排序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-614">The underlying list does not support sorting.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.Sort" />
      </Docs>
    </Member>
    <Member MemberName="ResetAllowNew">
      <MemberSignature Language="C#" Value="public virtual void ResetAllowNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllowNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetAllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetAllowNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetAllowNew();" />
      <MemberSignature Language="F#" Value="abstract member ResetAllowNew : unit -&gt; unit&#xA;override this.ResetAllowNew : unit -&gt; unit" Usage="bindingSource.ResetAllowNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-615">重新初始化<see cref="P:System.Windows.Forms.BindingSource.AllowNew" />属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-615">Reinitializes the <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-616"><xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A>方法将重新初始化<xref:System.Windows.Forms.BindingSource.AllowNew%2A>属性以反映相应的值<xref:System.Windows.Forms.BindingSource.AllowNew%2A>基础列表中的属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-616">The <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method reinitializes the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to reflect the value of the corresponding <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property in the underlying list.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowNew" />
      </Docs>
    </Member>
    <Member MemberName="ResetBindings">
      <MemberSignature Language="C#" Value="public void ResetBindings (bool metadataChanged);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetBindings(bool metadataChanged) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetBindings (metadataChanged As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetBindings(bool metadataChanged);" />
      <MemberSignature Language="F#" Value="member this.ResetBindings : bool -&gt; unit" Usage="bindingSource.ResetBindings metadataChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataChanged" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadataChanged"><span data-ttu-id="bf49f-617"><see langword="true" /> 如果数据架构已更改;<see langword="false" />只会更改值。</span><span class="sxs-lookup"><span data-stu-id="bf49f-617"><see langword="true" /> if the data schema has changed; <see langword="false" /> if only values have changed.</span></span></param>
        <summary><span data-ttu-id="bf49f-618">使绑定到 <see cref="T:System.Windows.Forms.BindingSource" /> 的控件重新读取列表中的所有项，并刷新这些项的显示值。</span><span class="sxs-lookup"><span data-stu-id="bf49f-618">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-619"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A>方法将通知所有控件绑定到<xref:System.Windows.Forms.BindingSource>刷新它们的值。</span><span class="sxs-lookup"><span data-stu-id="bf49f-619">The <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> method informs all controls bound to the <xref:System.Windows.Forms.BindingSource> to refresh their values.</span></span> <span data-ttu-id="bf49f-620">该方法执行此通过引发<xref:System.Windows.Forms.BindingSource.ListChanged>至少一次事件;`metaDataChanged`参数指示基础更改的性质。</span><span class="sxs-lookup"><span data-stu-id="bf49f-620">The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event at least once; the `metaDataChanged` parameter indicates the nature of the underlying change.</span></span>  
  
-   <span data-ttu-id="bf49f-621">一个`metaDataChanged`的值`true`指示的数据架构<xref:System.Windows.Forms.BindingSource>已更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-621">A `metaDataChanged` value of `true` indicates that the data schema of <xref:System.Windows.Forms.BindingSource> has changed.</span></span> <span data-ttu-id="bf49f-622">一个<xref:System.Windows.Forms.BindingSource.ListChanged>事件以产生<xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType>设置为<xref:System.ComponentModel.ListChangedType.PropertyDescriptorChanged?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-622">A <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.PropertyDescriptorChanged?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="bf49f-623">一个`metaDataChanged`的值`false`指示，只有一个或多个项的值已更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-623">A `metaDataChanged` value of `false` indicates that only the values of one or more items have changed.</span></span>  
  
 <span data-ttu-id="bf49f-624">而不考虑的值`metaDataChanged`、 一个<xref:System.Windows.Forms.BindingSource.ListChanged>与引发事件<xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType>设置为<xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-624">Regardless of the value of `metaDataChanged`, a <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bf49f-625">因此，调用<xref:System.Windows.Forms.BindingSource.ResetBindings%2A>使用的参数`true`将引发两个<xref:System.Windows.Forms.BindingSource.ListChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-625">As a consequence, calling <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> with a parameter of `true` will raise two <xref:System.Windows.Forms.BindingSource.ListChanged> events.</span></span>  
  
 <span data-ttu-id="bf49f-626"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> 每当另一个成员对数据绑定，例如设置所做的重大更改都会自动调用<xref:System.Windows.Forms.BindingSource.DataSource%2A>或<xref:System.Windows.Forms.BindingSource.DataMember%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-626"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> is automatically called whenever another member makes major changes to the data-binding, such as setting the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties.</span></span> <span data-ttu-id="bf49f-627">但是，编程人员还可以显式调用此方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-627">However, the programmer can also call this method explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-628">下面的代码示例使用<xref:System.Windows.Forms.BindingSource>组件绑定的数组列表，其中未提供更改通知。</span><span class="sxs-lookup"><span data-stu-id="bf49f-628">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind an array list, which does not provide change notification.</span></span> <span data-ttu-id="bf49f-629">从列表中移除项和更改的通知绑定的控件，应调用<xref:System.Windows.Forms.BindingSource.ResetBindings%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-629">An item is removed from the list, and the bound controls are notified of the change by calling the <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> method.</span></span> <span data-ttu-id="bf49f-630">此代码示例摘自[如何：反映在使用 BindingSource 的 Windows 窗体控件中的数据源更新](~/docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-630">This code example is part of a larger example provided in [How to: Reflect Data Source Updates in a Windows Forms Control with the BindingSource](~/docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
      </Docs>
    </Member>
    <Member MemberName="ResetCurrentItem">
      <MemberSignature Language="C#" Value="public void ResetCurrentItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCurrentItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetCurrentItem" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCurrentItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCurrentItem();" />
      <MemberSignature Language="F#" Value="member this.ResetCurrentItem : unit -&gt; unit" Usage="bindingSource.ResetCurrentItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-631">使绑定到<see cref="T:System.Windows.Forms.BindingSource" />重新读取当前选定的项，并刷新其显示的值。</span><span class="sxs-lookup"><span data-stu-id="bf49f-631">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the currently selected item and refresh its displayed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-632">调用此方法将导致<xref:System.Windows.Forms.BindingSource.ListChanged>事件发生后，指定项在当前的位置更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-632">Calling this method will cause the <xref:System.Windows.Forms.BindingSource.ListChanged> event to occur, specifying the item changed at the current position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetItem">
      <MemberSignature Language="C#" Value="public void ResetItem (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetItem(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetItem (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetItem(int itemIndex);" />
      <MemberSignature Language="F#" Value="member this.ResetItem : int -&gt; unit" Usage="bindingSource.ResetItem itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex"><span data-ttu-id="bf49f-633">已更改的项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="bf49f-633">The zero-based index of the item that has changed.</span></span></param>
        <summary><span data-ttu-id="bf49f-634">使绑定到<see cref="T:System.Windows.Forms.BindingSource" />重新读取指定索引处的项，并刷新其显示的值。</span><span class="sxs-lookup"><span data-stu-id="bf49f-634">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the item at the specified index, and refresh its displayed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-635"><xref:System.Windows.Forms.BindingSource.ResetItem%2A>方法通知绑定到位于指定项的所有控件<xref:System.Windows.Forms.BindingSource.Position%2A>刷新它们的值。</span><span class="sxs-lookup"><span data-stu-id="bf49f-635">The <xref:System.Windows.Forms.BindingSource.ResetItem%2A> method notifies all controls bound to the item at the specified <xref:System.Windows.Forms.BindingSource.Position%2A> to refresh their values.</span></span> <span data-ttu-id="bf49f-636">该方法执行此通过引发<xref:System.Windows.Forms.BindingSource.ListChanged>具有事件<xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType>设置为<xref:System.ComponentModel.ListChangedType.ItemChanged?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-636">The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.ItemChanged?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bf49f-637"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> 自动对单个项的值更改时调用。</span><span class="sxs-lookup"><span data-stu-id="bf49f-637"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> is automatically called whenever changes are made to the value of an individual item.</span></span> <span data-ttu-id="bf49f-638">但是，编程人员还可以显式调用此方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-638">However, the programmer can also call this method explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-639">下面的代码示例使用<xref:System.Windows.Forms.BindingSource>组件绑定到列表<xref:System.Windows.Forms.DataGridView>控件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-639">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="bf49f-640">该列表不会引发更改通知，因此<xref:System.Windows.Forms.BindingSource.ResetItem%2A>方法<xref:System.Windows.Forms.BindingSource>用来发出<xref:System.Windows.Forms.BindingSource.ListChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-640">The list does not raise change notifications, so the <xref:System.Windows.Forms.BindingSource.ResetItem%2A> method on the <xref:System.Windows.Forms.BindingSource> is used to raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span> <span data-ttu-id="bf49f-641">此代码示例摘自[如何：使用 BindingSource ResetItem 方法引发更改通知](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md)。</span><span class="sxs-lookup"><span data-stu-id="bf49f-641">This code example is part of a larger example provided in [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeBinding();" />
      <MemberSignature Language="F#" Value="member this.ResumeBinding : unit -&gt; unit" Usage="bindingSource.ResumeBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-642">继续数据绑定。</span><span class="sxs-lookup"><span data-stu-id="bf49f-642">Resumes data binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-643"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 和<xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>允许在一个简单的绑定方案中使用临时挂起和继续数据绑定的两种方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-643"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</span></span> <span data-ttu-id="bf49f-644">如果必须允许用户对数据字段进行一些编辑之前进行验证，则通常会挂起数据绑定。</span><span class="sxs-lookup"><span data-stu-id="bf49f-644">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="bf49f-645">例如，如果必须将一个字段更改时根据第二个，但验证第一个字段会导致将在错误中的第二个字段。</span><span class="sxs-lookup"><span data-stu-id="bf49f-645">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf49f-646">使用<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>防止更改推送到数据源之前<xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>调用，但实际上不能阻止任何事件发生。</span><span class="sxs-lookup"><span data-stu-id="bf49f-646">Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="bf49f-647">使用如下所示复杂数据绑定的控件<xref:System.Windows.Forms.DataGridView>控件，如基于更改事件其值更新<xref:System.Windows.Forms.CurrencyManager.ListChanged>事件，因此调用<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>不会阻止它们接收到数据源的更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-647">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source.</span></span> <span data-ttu-id="bf49f-648">出于此原因，这<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>并<xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>设计用于简单绑定控件，如<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-648">For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="bf49f-649">或者你可以使用这些方法在复杂绑定方案中，则禁止显示如果<xref:System.Windows.Forms.BindingSource.ListChanged>通过设置事件<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-649">Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public string Sort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Sort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Property Sort As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Sort { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sort : string with get, set" Usage="System.Windows.Forms.BindingSource.Sort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-650">获取或设置用于排序的列名称以及用于查看数据源中的行的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-650">Gets or sets the column names used for sorting, and the sort order for viewing the rows in the data source.</span></span></summary>
        <value><span data-ttu-id="bf49f-651">一个区分大小写的字符串，它包含列名，后跟“ASC”（升序）或“DESC”（降序）。</span><span class="sxs-lookup"><span data-stu-id="bf49f-651">A case-sensitive string containing the column name followed by "ASC" (for ascending) or "DESC" (for descending).</span></span> <span data-ttu-id="bf49f-652">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-652">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-653"><xref:System.Windows.Forms.BindingSource.Sort%2A>属性是一个区分大小写的字符串，指定用于排序的行，以及排序方向的列名称。</span><span class="sxs-lookup"><span data-stu-id="bf49f-653">The <xref:System.Windows.Forms.BindingSource.Sort%2A> property is a case-sensitive string that specifies the column names used to sort the rows, along with the sort direction.</span></span> <span data-ttu-id="bf49f-654">默认情况下，列按升序排序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-654">Columns are sorted ascending by default.</span></span> <span data-ttu-id="bf49f-655">多个列可以用逗号分隔，如`"State, ZipCode DESC"`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-655">Multiple columns can be separated by commas, such as `"State, ZipCode DESC"`.</span></span>  
  
 <span data-ttu-id="bf49f-656">若要支持排序，基础列表必须实现<xref:System.ComponentModel.IBindingList>或<xref:System.ComponentModel.IBindingListView>接口。</span><span class="sxs-lookup"><span data-stu-id="bf49f-656">To support sorting, the underlying list must implement the <xref:System.ComponentModel.IBindingList> or <xref:System.ComponentModel.IBindingListView> interfaces.</span></span> <span data-ttu-id="bf49f-657">此功能可通过查询<xref:System.Windows.Forms.BindingSource.SupportsSorting%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-657">This capability can be queried through the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property.</span></span> <span data-ttu-id="bf49f-658">多列进行排序时，才可用<xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-658">Multicolumn sorting is available when the <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="bf49f-659">设置<xref:System.Windows.Forms.BindingSource.Sort%2A>属性将更改内部的列表，具体取决于它的类型：</span><span class="sxs-lookup"><span data-stu-id="bf49f-659">Setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property will change the internal list depending on its type:</span></span>  
  
-   <span data-ttu-id="bf49f-660">如果列表的类型<xref:System.ComponentModel.IBindingList>，则<xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=nameWithType>和<xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=nameWithType>的内部列表中设置属性。</span><span class="sxs-lookup"><span data-stu-id="bf49f-660">If the list is of type <xref:System.ComponentModel.IBindingList>, the <xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=nameWithType> properties are set in the internal list.</span></span>  
  
-   <span data-ttu-id="bf49f-661">如果列表的类型<xref:System.ComponentModel.IBindingListView>，则<xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=nameWithType>属性设置。</span><span class="sxs-lookup"><span data-stu-id="bf49f-661">If the list is of type <xref:System.ComponentModel.IBindingListView>, the <xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=nameWithType> property is set.</span></span>  
  
 <span data-ttu-id="bf49f-662">不排序字符串时，才会更改内部列表的排序属性`null`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-662">The internal list's sort properties are only changed when the sort string is not `null`.</span></span> <span data-ttu-id="bf49f-663">`get`此属性访问器不会检索内部列表的排序值; 相反，它将返回`set`访问器值。</span><span class="sxs-lookup"><span data-stu-id="bf49f-663">The `get` accessor for this property will not retrieve the sort value of the internal list; instead, it will return the `set` accessor value.</span></span> <span data-ttu-id="bf49f-664">值<xref:System.Windows.Forms.BindingSource.Sort%2A>属性将保留在数据源更改时。</span><span class="sxs-lookup"><span data-stu-id="bf49f-664">The value of the <xref:System.Windows.Forms.BindingSource.Sort%2A> property will persist when the data source changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-665">下面的示例演示如何使用<xref:System.Windows.Forms.BindingSource.Sort%2A>属性来执行基本排序<xref:System.Data.DataView>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-665">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to perform basic sorting with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="bf49f-666">若要运行此示例，请将代码粘贴到 Windows 窗体并调用`PopulateDataViewAndSort`从窗体的构造函数或<xref:System.Windows.Forms.Form.Load>事件处理方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-666">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="bf49f-667">你的窗体应导入<xref:System.Xml>和<xref:System.IO>命名空间。</span><span class="sxs-lookup"><span data-stu-id="bf49f-667">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#2)]  
  
 <span data-ttu-id="bf49f-668">下面的示例演示如何使用<xref:System.Windows.Forms.BindingSource.Sort%2A>属性来执行高级排序与<xref:System.Data.DataView>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-668">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to perform advanced sorting with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="bf49f-669">若要运行此示例，请将代码粘贴到 Windows 窗体并调用`PopulateDataViewAndAdvancedSort`从窗体的构造函数或<xref:System.Windows.Forms.Form.Load>事件处理方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-669">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndAdvancedSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="bf49f-670">你的窗体应导入<xref:System.Xml>和<xref:System.IO>命名空间。</span><span class="sxs-lookup"><span data-stu-id="bf49f-670">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Filter" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveSort" />
      </Docs>
    </Member>
    <Member MemberName="SortDescriptions">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ListSortDescriptionCollection SortDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ListSortDescriptionCollection SortDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDescriptions As ListSortDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ListSortDescriptionCollection ^ SortDescriptions { System::ComponentModel::ListSortDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDescriptions : System.ComponentModel.ListSortDescriptionCollection" Usage="System.Windows.Forms.BindingSource.SortDescriptions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingListView.SortDescriptions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-671">获取应用于数据源的排序说明的集合。</span><span class="sxs-lookup"><span data-stu-id="bf49f-671">Gets the collection of sort descriptions applied to the data source.</span></span></summary>
        <value><span data-ttu-id="bf49f-672">如果数据源<see cref="T:System.ComponentModel.IBindingListView" />、 一个<see cref="T:System.ComponentModel.ListSortDescriptionCollection" />包含的排序说明适用于列表; 否则为<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-672">If the data source is an <see cref="T:System.ComponentModel.IBindingListView" />, a <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> that contains the sort descriptions applied to the list; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-673">如果该列表不是<xref:System.ComponentModel.IBindingListView>，则<xref:System.Windows.Forms.BindingSource.SortDescriptions%2A>始终返回`null`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-673">If the list is not an <xref:System.ComponentModel.IBindingListView>, the <xref:System.Windows.Forms.BindingSource.SortDescriptions%2A> always returns `null`.</span></span>  
  
 <span data-ttu-id="bf49f-674"><xref:System.ComponentModel.ListSortDescriptionCollection>是只读的集合。</span><span class="sxs-lookup"><span data-stu-id="bf49f-674">The <xref:System.ComponentModel.ListSortDescriptionCollection> is a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ListSortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.ListSortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDirection As ListSortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ListSortDirection SortDirection { System::ComponentModel::ListSortDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDirection : System.ComponentModel.ListSortDirection" Usage="System.Windows.Forms.BindingSource.SortDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SortDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-675">获取列表中项的排序方向。</span><span class="sxs-lookup"><span data-stu-id="bf49f-675">Gets the direction the items in the list are sorted.</span></span></summary>
        <value><span data-ttu-id="bf49f-676">其中一个<see cref="T:System.ComponentModel.ListSortDirection" />指示方向的值对列表进行排序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-676">One of the <see cref="T:System.ComponentModel.ListSortDirection" /> values indicating the direction the list is sorted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-677">如果基础列表不是<xref:System.ComponentModel.IBindingList>，则<xref:System.Windows.Forms.BindingSource.SortDirection%2A>属性将始终返回<xref:System.ComponentModel.ListSortDirection.Ascending>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-677">If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the <xref:System.Windows.Forms.BindingSource.SortDirection%2A> property will always return <xref:System.ComponentModel.ListSortDirection.Ascending>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortProperty">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor SortProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor SortProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortProperty As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ SortProperty { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortProperty : System.ComponentModel.PropertyDescriptor" Usage="System.Windows.Forms.BindingSource.SortProperty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SortProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-678">获取<see cref="T:System.ComponentModel.PropertyDescriptor" />正在用于排序列表。</span><span class="sxs-lookup"><span data-stu-id="bf49f-678">Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting the list.</span></span></summary>
        <value><span data-ttu-id="bf49f-679">如果列表为<see cref="T:System.ComponentModel.IBindingList" />，则<see cref="T:System.ComponentModel.PropertyDescriptor" />则为用于排序; 否则为<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-679">If the list is an <see cref="T:System.ComponentModel.IBindingList" />, the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-680">如果该列表不是<xref:System.ComponentModel.IBindingList>，<xref:System.Windows.Forms.BindingSource.SortProperty%2A>始终返回`null`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-680">If the list is not an <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SortProperty%2A> always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAdvancedSorting">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAdvancedSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAdvancedSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsAdvancedSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAdvancedSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAdvancedSorting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAdvancedSorting : bool" Usage="System.Windows.Forms.BindingSource.SupportsAdvancedSorting" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-681">获取一个值，它指示数据源是否支持多列排序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-681">Gets a value indicating whether the data source supports multi-column sorting.</span></span></summary>
        <value><span data-ttu-id="bf49f-682"><see langword="true" /> 如果列表为<see cref="T:System.ComponentModel.IBindingListView" />，并支持多列排序; 否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-682"><see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports multi-column sorting; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-683">如果该列表不是<xref:System.ComponentModel.IBindingListView>，<xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A>始终返回`false`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-683">If the list is not an <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeNotification">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeNotification { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsChangeNotification : bool" Usage="System.Windows.Forms.BindingSource.SupportsChangeNotification" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SupportsChangeNotification</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-684">获取一个值，它指示数据源是否支持更改通知。</span><span class="sxs-lookup"><span data-stu-id="bf49f-684">Gets a value indicating whether the data source supports change notification.</span></span></summary>
        <value><span data-ttu-id="bf49f-685">在所有情况下均为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-685"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFiltering">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsFiltering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFiltering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFiltering : bool" Usage="System.Windows.Forms.BindingSource.SupportsFiltering" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingListView.SupportsFiltering</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-686">获取一个值，该值指示数据源是否支持筛选。</span><span class="sxs-lookup"><span data-stu-id="bf49f-686">Gets a value indicating whether the data source supports filtering.</span></span></summary>
        <value><span data-ttu-id="bf49f-687"><see langword="true" /> 如果列表为<see cref="T:System.ComponentModel.IBindingListView" />并且支持筛选; 否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-687"><see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports filtering; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-688">如果该列表不是<xref:System.ComponentModel.IBindingListView>，<xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A>始终返回`false`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-688">If the list is not an <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSearching">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSearching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSearching" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsSearching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSearching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSearching { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSearching : bool" Usage="System.Windows.Forms.BindingSource.SupportsSearching" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SupportsSearching</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-689">获取一个值，该值指示数据源是否支持使用搜索<see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-689">Gets a value indicating whether the data source supports searching with the <see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> method.</span></span></summary>
        <value><span data-ttu-id="bf49f-690"><see langword="true" /> 如果列表为<see cref="T:System.ComponentModel.IBindingList" />，并支持使用搜索<see cref="Overload:System.Windows.Forms.BindingSource.Find" />方法; 否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-690"><see langword="true" /> if the list is a <see cref="T:System.ComponentModel.IBindingList" /> and supports the searching with the <see cref="Overload:System.Windows.Forms.BindingSource.Find" /> method; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-691">如果数据源不是<xref:System.ComponentModel.IBindingList>，<xref:System.Windows.Forms.BindingSource.SupportsSearching%2A>始终返回`false`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-691">If the data source is not an <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> always returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf49f-692">下面的代码示例演示如何使用<xref:System.Windows.Forms.BindingSource.SupportsSearching%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="bf49f-692">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> member.</span></span> <span data-ttu-id="bf49f-693">有关完整示例请参阅类概述主题。</span><span class="sxs-lookup"><span data-stu-id="bf49f-693">For the complete example see the class overview topic.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSorting">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSorting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSorting : bool" Usage="System.Windows.Forms.BindingSource.SupportsSorting" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SupportsSorting</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-694">获取一个值，它指示数据源是否支持排序。</span><span class="sxs-lookup"><span data-stu-id="bf49f-694">Gets a value indicating whether the data source supports sorting.</span></span></summary>
        <value><span data-ttu-id="bf49f-695"><see langword="true" /> 如果数据源<see cref="T:System.ComponentModel.IBindingList" />并且支持排序; 否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-695"><see langword="true" /> if the data source is an <see cref="T:System.ComponentModel.IBindingList" /> and supports sorting; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-696">如果数据源不是<xref:System.ComponentModel.IBindingList>，则<xref:System.Windows.Forms.BindingSource.SupportsSorting%2A>属性始终返回`false`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-696">If the data source is not an <xref:System.ComponentModel.IBindingList>, the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendBinding();" />
      <MemberSignature Language="F#" Value="member this.SuspendBinding : unit -&gt; unit" Usage="bindingSource.SuspendBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-697">挂起数据绑定，以阻止使用所做的更改对绑定数据源进行更新。</span><span class="sxs-lookup"><span data-stu-id="bf49f-697">Suspends data binding to prevent changes from updating the bound data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-698"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 和<xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>允许在一个简单的绑定方案中使用临时挂起和继续数据绑定的两种方法。</span><span class="sxs-lookup"><span data-stu-id="bf49f-698"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</span></span> <span data-ttu-id="bf49f-699">如果必须允许用户对数据字段进行一些编辑之前进行验证，则通常会挂起数据绑定。</span><span class="sxs-lookup"><span data-stu-id="bf49f-699">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="bf49f-700">例如，如果必须将一个字段更改时根据第二个，但验证第一个字段会导致将在错误中的第二个字段。</span><span class="sxs-lookup"><span data-stu-id="bf49f-700">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf49f-701">使用<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>，并防止更改推送到数据源之前<xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>调用，但实际上不能阻止任何事件发生。</span><span class="sxs-lookup"><span data-stu-id="bf49f-701">Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="bf49f-702">使用如下所示复杂数据绑定的控件<xref:System.Windows.Forms.DataGridView>控件，如基于更改事件其值更新<xref:System.Windows.Forms.CurrencyManager.ListChanged>事件，因此调用<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>不会阻止它们接收到数据源的更改。</span><span class="sxs-lookup"><span data-stu-id="bf49f-702">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source.</span></span> <span data-ttu-id="bf49f-703">出于此原因，这<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>并<xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>设计用于简单绑定控件，如<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="bf49f-703">For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="bf49f-704">或者你可以使用这些方法在复杂绑定方案中，则禁止显示如果<xref:System.Windows.Forms.BindingSource.ListChanged>通过设置事件<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-704">Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Windows.Forms.BindingSource.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-705">获取可用于同步对基础列表的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="bf49f-705">Gets an object that can be used to synchronize access to the underlying list.</span></span></summary>
        <value><span data-ttu-id="bf49f-706">可用于同步对基础列表的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="bf49f-706">An object that can be used to synchronize access to the underlying list.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.AddIndex">
      <MemberSignature Language="C#" Value="void IBindingList.AddIndex (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.AddIndex(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub AddIndex (property As PropertyDescriptor) Implements IBindingList.AddIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.AddIndex(System::ComponentModel::PropertyDescriptor ^ property) = System::ComponentModel::IBindingList::AddIndex;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="bf49f-707">将 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 添加到用于搜索的索引。</span><span class="sxs-lookup"><span data-stu-id="bf49f-707">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add to the indexes used for searching.</span></span></param>
        <summary><span data-ttu-id="bf49f-708">将 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 添加到用于搜索的索引。</span><span class="sxs-lookup"><span data-stu-id="bf49f-708">Adds the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the indexes used for searching.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-709">如果基础列表<xref:System.ComponentModel.IBindingList>类型，此方法将添加<xref:System.ComponentModel.PropertyDescriptor>到的索引; 否则为则调用此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-709">If the underlying list is an <xref:System.ComponentModel.IBindingList> type, this method will add the <xref:System.ComponentModel.PropertyDescriptor> to the indexes; otherwise, calling this method will throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bf49f-710">基础列表不是<see cref="T:System.ComponentModel.IBindingList" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-710">The underlying list is not an <see cref="T:System.ComponentModel.IBindingList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.RemoveIndex">
      <MemberSignature Language="C#" Value="void IBindingList.RemoveIndex (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.RemoveIndex(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveIndex (prop As PropertyDescriptor) Implements IBindingList.RemoveIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.RemoveIndex(System::ComponentModel::PropertyDescriptor ^ prop) = System::ComponentModel::IBindingList::RemoveIndex;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop"><span data-ttu-id="bf49f-711">要从用于搜索的索引中移除的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-711">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the indexes used for searching.</span></span></param>
        <summary><span data-ttu-id="bf49f-712">将 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 从用于搜索的索引中移除。</span><span class="sxs-lookup"><span data-stu-id="bf49f-712">Removes the <see cref="T:System.ComponentModel.PropertyDescriptor" /> from the indexes used for searching.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-713">如果基础列表不是<xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>，此方法将始终引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="bf49f-713">If the underlying list is not a <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>, this method will always throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICancelAddNew.CancelNew">
      <MemberSignature Language="C#" Value="void ICancelAddNew.CancelNew (int position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ICancelAddNew.CancelNew(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CancelNew (position As Integer) Implements ICancelAddNew.CancelNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ICancelAddNew.CancelNew(int position) = System::ComponentModel::ICancelAddNew::CancelNew;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="bf49f-714">要添加到集合中的项的索引。</span><span class="sxs-lookup"><span data-stu-id="bf49f-714">The index of the item that was added to the collection.</span></span></param>
        <summary><span data-ttu-id="bf49f-715">丢弃集合中挂起的新项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-715">Discards a pending new item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-716"><xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A>方法回滚之前添加到集合中指定的索引处的项的挂起的添加`position`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-716">The <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A> method rolls back a pending addition of an item previously added to the collection at the index specified by `position`.</span></span> <span data-ttu-id="bf49f-717">`position`参数是必需的因为几个新项可能同时挂起。</span><span class="sxs-lookup"><span data-stu-id="bf49f-717">The `position` parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICancelAddNew.EndNew">
      <MemberSignature Language="C#" Value="void ICancelAddNew.EndNew (int position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ICancelAddNew.EndNew(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub EndNew (position As Integer) Implements ICancelAddNew.EndNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ICancelAddNew.EndNew(int position) = System::ComponentModel::ICancelAddNew::EndNew;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="bf49f-718">要添加到集合中的项的索引。</span><span class="sxs-lookup"><span data-stu-id="bf49f-718">The index of the item that was added to the collection.</span></span></param>
        <summary><span data-ttu-id="bf49f-719">向集合提交挂起的新项。</span><span class="sxs-lookup"><span data-stu-id="bf49f-719">Commits a pending new item to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-720"><xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A>方法提交之前添加到集合中指定的索引处的项的挂起的添加`position`。</span><span class="sxs-lookup"><span data-stu-id="bf49f-720">The <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> method commits a pending addition of an item previously added to the collection at the index specified by `position`.</span></span> <span data-ttu-id="bf49f-721">`position`参数是必需的因为几个新项可能同时挂起。</span><span class="sxs-lookup"><span data-stu-id="bf49f-721">The `position` parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-722">信号<see cref="T:System.Windows.Forms.BindingSource" />初始化即将开始。</span><span class="sxs-lookup"><span data-stu-id="bf49f-722">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is starting.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf49f-723">信号<see cref="T:System.Windows.Forms.BindingSource" />初始化已完成。</span><span class="sxs-lookup"><span data-stu-id="bf49f-723">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitializeNotification.Initialized">
      <MemberSignature Language="C#" Value="event EventHandler System.ComponentModel.ISupportInitializeNotification.Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.ComponentModel.ISupportInitializeNotification.Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#Initialized" />
      <MemberSignature Language="VB.NET" Value="Custom Event Initialized As EventHandler Implements System.ComponentModel.ISupportInitializeNotification" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.ISupportInitializeNotification.Initialized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-724">发生时<see cref="T:System.Windows.Forms.BindingSource" />初始化。</span><span class="sxs-lookup"><span data-stu-id="bf49f-724">Occurs when the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="bf49f-725">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="bf49f-725">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bf49f-726">它只能在 <xref:System.Windows.Forms.BindingSource> 实例被强制转换为 <xref:System.ComponentModel.ISupportInitializeNotification> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bf49f-726">It can be used only when the <xref:System.Windows.Forms.BindingSource> instance is cast to an <xref:System.ComponentModel.ISupportInitializeNotification> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitializeNotification.IsInitialized">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.ISupportInitializeNotification.IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.ISupportInitializeNotification.IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#IsInitialized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsInitialized As Boolean Implements ISupportInitializeNotification.IsInitialized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::ISupportInitializeNotification::IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.ISupportInitializeNotification.IsInitialized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ISupportInitializeNotification.IsInitialized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf49f-727">获取一个值，该值指示是否初始化 <see cref="T:System.Windows.Forms.BindingSource" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-727">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</span></span></summary>
        <value><span data-ttu-id="bf49f-728"><see langword="true" /> 若要指示<see cref="T:System.Windows.Forms.BindingSource" />已初始化; 否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf49f-728"><see langword="true" /> to indicate the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf49f-729">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="bf49f-729">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bf49f-730">它只能在 <xref:System.Windows.Forms.BindingSource> 实例被强制转换为 <xref:System.ComponentModel.ISupportInitializeNotification> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bf49f-730">It can be used only when the <xref:System.Windows.Forms.BindingSource> instance is cast to an <xref:System.ComponentModel.ISupportInitializeNotification> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>