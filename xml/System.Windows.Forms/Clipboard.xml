<Type Name="Clipboard" FullName="System.Windows.Forms.Clipboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="14d4acd18f9f3e09bb257a44323e912cd4448d1f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39948292" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Clipboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Clipboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Clipboard" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Clipboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clipboard sealed" />
  <TypeSignature Language="F#" Value="type Clipboard = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供将数据置于系统剪贴板中以及从中检索数据的方法。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关一系列预定义的格式以用于<xref:System.Windows.Forms.Clipboard>类，请参阅<xref:System.Windows.Forms.DataFormats>类。  
  
 调用<xref:System.Windows.Forms.Clipboard.SetDataObject%2A>若要将数据放在剪贴板上，替换当前内容。 若要将永久性数据的副本放到剪贴板上，设置`copy`参数`true`。  
  
> [!NOTE]
>  若要将数据放在多个格式在剪贴板上，使用<xref:System.Windows.Forms.DataObject>类或<xref:System.Windows.Forms.IDataObject>实现。 将数据放在以多种格式剪贴板上，若要最大化，目标应用程序，您可能不知道，它的格式要求已成功检索数据的可能性。  
  
 调用<xref:System.Windows.Forms.Clipboard.GetDataObject%2A>从剪贴板检索数据。 作为实现的对象返回的数据<xref:System.Windows.Forms.IDataObject>接口。 使用指定的方法<xref:System.Windows.Forms.IDataObject>和字段中<xref:System.Windows.Forms.DataFormats>若要从对象中提取数据。 如果不知道您检索的数据的格式，则调用<xref:System.Windows.Forms.IDataObject.GetFormats%2A>方法的<xref:System.Windows.Forms.IDataObject>接口，用于获取该数据的所有格式的列表存储在中。 然后调用<xref:System.Windows.Forms.IDataObject.GetData%2A>方法的<xref:System.Windows.Forms.IDataObject>接口，并指定你的应用程序可以使用的格式。  
  
 在中[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]，则<xref:System.Windows.Forms.Clipboard>类提供其他方法，可以更轻松地使用系统剪贴板。 调用<xref:System.Windows.Forms.Clipboard.Clear%2A>方法从剪贴板中删除所有数据。 若要将特定格式的数据添加到剪贴板，替换现有数据，调用适当`Set`*格式*方法，如<xref:System.Windows.Forms.Clipboard.SetText%2A>，或调用<xref:System.Windows.Forms.Clipboard.SetData%2A>方法，以指定格式。 若要从剪贴板检索特定格式的数据，请先调用适当`Contains`*格式*方法 (如<xref:System.Windows.Forms.Clipboard.ContainsText%2A>) 方法来确定剪贴板中是否包含中的数据的格式，然后再调用适当`Get`*格式*方法 (如<xref:System.Windows.Forms.Clipboard.GetText%2A>) 来检索数据，如果剪贴板包含它。 若要在这些操作中指定的格式，请调用<xref:System.Windows.Forms.Clipboard.ContainsData%2A>和<xref:System.Windows.Forms.Clipboard.GetData%2A>方法相反。  
  
> [!NOTE]
>  所有基于 Windows 的应用程序共享系统剪贴板，因此可能会有所变动时切换到另一个应用程序。  
>   
>  对象必须可序列化，才能将其放到剪贴板上。 如果向剪贴板方法传递了非可序列化对象，该方法将失败而不引发异常。 请参阅<xref:System.Runtime.Serialization>的序列化的详细信息。 如果目标应用程序需要非常特定的数据格式，标头添加到序列化过程中的数据可能会阻止应用程序识别你的数据。 若要保留您的数据格式，请添加你的数据作为<xref:System.Byte>到数组<xref:System.IO.MemoryStream>，并将传递<xref:System.IO.MemoryStream>到<xref:System.Windows.Forms.DataObject.SetData%2A>方法。  
>   
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
>   
>  使用剪贴板使用图元文件格式时，可能需要特别注意的事项。 由于中的当前实现的限制<xref:System.Windows.Forms.DataObject>使用较旧的图元文件格式的应用程序可能无法识别类，使用.NET Framework 的图元文件格式。 在这种情况下，您必须进行互操作与 Win32 剪贴板应用程序编程接口 (Api)。 有关详细信息，请参阅 323530，"图元文件上剪贴板是不可见对所有应用程序，"在 Microsoft 知识库文章在http://support.microsoft.com。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Windows.Forms.Clipboard>上放置数据和从系统剪贴板中检索它的方法。 此代码假定`button1`， `button2`， `textBox1`，和`textBox2`已创建并已放置在窗体上。  
  
 `button1_Click`方法调用<xref:System.Windows.Forms.Clipboard.SetDataObject%2A>从文本框中获取所选的文本并将其放在系统剪贴板上。  
  
 `button2_Click`方法调用<xref:System.Windows.Forms.Clipboard.GetDataObject%2A>从系统剪贴板中检索数据。 该代码使用<xref:System.Windows.Forms.IDataObject>并<xref:System.Windows.Forms.DataFormats>提取返回的数据，并显示中的数据`textBox2`。  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberSignature Language="F#" Value="static member Clear : unit -&gt; unit" Usage="System.Windows.Forms.Clipboard.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从剪贴板中移除所有数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由于多个进程都共享剪贴板，调用此方法可能会对这些进程的影响。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Clipboard#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于清除系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public static bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="static member ContainsAudio : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示在剪贴板中是否存在 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 格式的数据。</summary>
        <returns>如果剪贴板中有音频数据，则为 <see langword="true" />；否则为，<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法确定剪贴板中是否包含音频数据检索之前<xref:System.Windows.Forms.Clipboard.GetAudioStream%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsData">
      <MemberSignature Language="C#" Value="public static bool ContainsData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsData (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member ContainsData : string -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">要查找的数据格式。 请参见 <see cref="T:System.Windows.Forms.DataFormats" /> 以获取预定义的格式。</param>
        <summary>指示剪贴板中是否存在指定格式的数据，或可转换成此格式的数据。</summary>
        <returns>如果在剪贴板中存在指定 <paramref name="format" /> 或可以转换成该格式的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataFormats>类包含可以使用此方法使用的预定义的格式名称。  
  
 使用此方法确定剪贴板中是否包含指定的格式或兼容的格式中的数据检索之前<xref:System.Windows.Forms.Clipboard.GetData%2A>方法。  
  
> [!NOTE]
>  如果存储时已指定，允许进行转换，并且请求的格式与存储格式兼容，数据可以转换为其他格式。 例如，存储为 Unicode 可以转换为文本的数据。  
>   
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public static bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="static member ContainsFileDropList : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示剪贴板中是否存在 <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 格式或可转换成此格式的数据。</summary>
        <returns>如果剪贴板中有文件放置列表，则为 <see langword="true" />；否则为，<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文件放置列表是包含文件的路径信息的字符串集合。  
  
 使用此方法确定剪贴板是否包含文件放置列表检索之前<xref:System.Windows.Forms.Clipboard.GetFileDropList%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public static bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsImage();" />
      <MemberSignature Language="F#" Value="static member ContainsImage : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示剪贴板中是否存在 <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> 格式或可转换成此格式的数据。</summary>
        <returns>如果剪贴板中存在图像数据，则为 <see langword="true" />；否则为，<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法确定剪贴板中是否包含图像数据检索之前<xref:System.Windows.Forms.Clipboard.GetImage%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指示剪贴板中是否存在文本数据。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText();" />
      <MemberSignature Language="F#" Value="static member ContainsText : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示剪贴板中是否存在 <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> 或 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 格式的数据（取决于操作系统）。</summary>
        <returns>如果剪贴板中存在文本数据，则为 <see langword="true" />；否则为，<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法检查数据中是否存在<xref:System.Windows.Forms.TextDataFormat.UnicodeText>时设置格式[!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]和[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]。 否则，此方法检查数据中是否存在<xref:System.Windows.Forms.TextDataFormat.Text>格式。  
  
 使用此方法确定剪贴板中是否包含文本数据检索之前<xref:System.Windows.Forms.Clipboard.GetText%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示的重载<xref:System.Windows.Forms.Clipboard.ContainsText%2A>类似于此重载的方法。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.Text" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Windows.Forms.TextDataFormat" /> 值之一。</param>
        <summary>指示剪贴板中是否存在具有指定的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值所指示的格式的文本数据。</summary>
        <returns>如果剪贴板中存在格式值为指定 <paramref name="format" /> 的文本数据，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法确定剪贴板中是否包含文本数据检索之前<xref:System.Windows.Forms.Clipboard.GetText%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> 不是有效的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="static member GetAudioStream : unit -&gt; System.IO.Stream" Usage="System.Windows.Forms.Clipboard.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索剪贴板上的音频流。</summary>
        <returns>包含音频数据的 <see cref="T:System.IO.Stream" />；如果剪贴板不包含任何 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 格式的数据，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.Clipboard.ContainsAudio%2A>方法，以确定剪贴板中是否包含音频数据之前使用此方法进行检索。  
  
 使用<xref:System.Windows.Forms.Clipboard.SetAudio%2A>方法将音频数据添加到剪贴板。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetData : string -&gt; obj" Usage="System.Windows.Forms.Clipboard.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">要检索的数据的格式。 请参见 <see cref="T:System.Windows.Forms.DataFormats" /> 以获取预定义的格式。</param>
        <summary>从剪贴板中检索指定格式的数据。</summary>
        <returns>表示剪贴板数据的 <see cref="T:System.Object" />；如果剪贴板中包含的数据都不是指定 <paramref name="format" />，也无法转换为该格式，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.Clipboard.ContainsData%2A>方法，以确定剪贴板是否包含使用此方法进行检索之前指定的格式或兼容的格式中的数据。  
  
 如果此方法不能在指定的格式中查找数据，它将尝试将数据转换为格式。 如果数据无法转换为指定的格式，或存储数据时将设置为自动转换`false`，此方法返回`null`。  
  
> [!NOTE]
>  如果存储时已指定，允许进行转换，并且请求的格式与存储格式兼容，数据可以转换为其他格式。 例如，存储为 Unicode 可以转换为文本的数据。  
>   
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
 使用<xref:System.Windows.Forms.Clipboard.SetData%2A>方法将数据添加到剪贴板中的特定格式。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataObject">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.IDataObject GetDataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.IDataObject GetDataObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetDataObject" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataObject () As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::IDataObject ^ GetDataObject();" />
      <MemberSignature Language="F#" Value="static member GetDataObject : unit -&gt; System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.Clipboard.GetDataObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索当前位于系统剪贴板中的数据。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.IDataObject" />，表示系统剪贴板中当前的数据；如果剪贴板中没有数据，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从剪贴板返回的对象的数据类型而异，因为此方法返回中的数据<xref:System.Windows.Forms.IDataObject>。 然后，可以使用的方法<xref:System.Windows.Forms.IDataObject>接口以提取其适当的数据类型中的数据。  
  
 此方法尝试获取在 100 毫秒的时间间隔，十倍的数据，则引发<xref:System.Runtime.InteropServices.ExternalException>如果所有尝试都均失败。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Windows.Forms.Clipboard>上放置数据和从系统剪贴板中检索它的方法。 此代码假定`button1`， `button2`， `textBox1`，和`textBox2`已放置在窗体上。  
  
 `button1_Click`方法调用<xref:System.Windows.Forms.Clipboard.SetDataObject%2A>从文本框中获取所选的文本并将其放在系统剪贴板上。  
  
 `button2_Click`方法调用<xref:System.Windows.Forms.Clipboard.GetDataObject%2A>从系统剪贴板中检索数据。 该代码使用<xref:System.Windows.Forms.IDataObject>和<xref:System.Windows.Forms.DataFormats>提取返回的数据。 数据显示在`textBox2`。  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能从剪贴板中检索到数据。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下，且 <see cref="P:System.Windows.Forms.Application.MessageLoop" /> 属性值为 <see langword="true" />。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="static member GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="System.Windows.Forms.Clipboard.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从剪贴板中检索文件名的集合。</summary>
        <returns>包含文件名的 <see cref="T:System.Collections.Specialized.StringCollection" />；如果剪贴板中不包含任何格式为 <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 或可转换为该格式的数据，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文件放置列表是包含文件的路径信息的字符串集合。  
  
 文件放置列表存储在剪贴板上形式上<xref:System.String>数组。 此方法将转换为此数组<xref:System.Collections.Specialized.StringCollection>并返回该集合。  
  
 使用<xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A>方法，以确定剪贴板是否包含在检索与此方法之前文件放置列表。  
  
 使用<xref:System.Windows.Forms.Clipboard.SetFileDropList%2A>方法将文件放置列表添加到剪贴板。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="static member GetImage : unit -&gt; System.Drawing.Image" Usage="System.Windows.Forms.Clipboard.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索剪贴板上的图像。</summary>
        <returns>表示剪贴板图像数据的 <see cref="T:System.Drawing.Image" />；如果剪贴板中不包含任何 <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> 格式或可转换成该格式的数据，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.Clipboard.ContainsImage%2A>方法，以确定剪贴板中是否包含图像数据之前使用此方法进行检索。  
  
 使用<xref:System.Windows.Forms.Clipboard.SetImage%2A>方法将图像数据添加到剪贴板。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从剪贴板中检索文本数据。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="static member GetText : unit -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从剪贴板中检索 <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> 或 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 格式的文本数据（取决于操作系统）。</summary>
        <returns>剪贴板文本数据；如果剪贴板中不包含 <see cref="F:System.String.Empty" /> 或 <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> 格式的数据（取决于操作系统），则为 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回的文本数据<xref:System.Windows.Forms.TextDataFormat.UnicodeText>时设置格式[!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]和[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]。 否则，此方法返回的文本数据<xref:System.Windows.Forms.TextDataFormat.Text>格式。  
  
 使用<xref:System.Windows.Forms.Clipboard.ContainsText%2A>方法，以确定剪贴板是否包含使用此方法进行检索之前的文本数据。  
  
 使用<xref:System.Windows.Forms.Clipboard.SetText%2A>方法将文本数据添加到剪贴板。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示的重载<xref:System.Windows.Forms.Clipboard.GetText%2A>类似于此重载的方法。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Windows.Forms.TextDataFormat" /> 值之一。</param>
        <summary>从剪贴板中检索由指定的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值表示的格式的文本数据。</summary>
        <returns>剪贴板文本数据；如果剪贴板中不包含指定格式的数据，则为 <see cref="F:System.String.Empty" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.Clipboard.ContainsText%2A>方法，以确定剪贴板是否包含使用此方法进行检索之前的文本数据。  
  
 使用<xref:System.Windows.Forms.Clipboard.SetText%2A>方法将文本数据添加到剪贴板。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> 不是有效的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>清除剪贴板，然后以 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 格式添加数据，替换现有数据。</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="static member SetAudio : byte[] -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">包含音频数据的 <see cref="T:System.Byte" /> 数组。</param>
        <summary>清除剪贴板然后以 <see cref="T:System.Byte" /> 格式添加 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 数组，这种情况发生在将其转换为 <see cref="T:System.IO.Stream" /> 之后。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要从剪贴板检索的音频数据，请先使用<xref:System.Windows.Forms.Clipboard.ContainsAudio%2A>方法，以确定剪贴板中是否包含音频数据检索之前<xref:System.Windows.Forms.Clipboard.GetAudioStream%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示的重载<xref:System.Windows.Forms.Clipboard.SetAudio%2A>类似于此重载的方法。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioBytes" /> 为 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于将音频数据添加到系统剪贴板中。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="static member SetAudio : System.IO.Stream -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream">包含音频数据的 <see cref="T:System.IO.Stream" />。</param>
        <summary>清除剪贴板然后以 <see cref="T:System.IO.Stream" /> 格式添加 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要从剪贴板检索的音频数据，请先使用<xref:System.Windows.Forms.Clipboard.ContainsAudio%2A>方法，以确定剪贴板中是否包含音频数据检索之前<xref:System.Windows.Forms.Clipboard.GetAudioStream%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioStream" /> 为 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于将音频数据添加到系统剪贴板中。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public static void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetData : string * obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">要设置的数据格式。 请参见 <see cref="T:System.Windows.Forms.DataFormats" /> 以获取预定义的格式。</param>
        <param name="data">表示要添加的数据的 <see cref="T:System.Object" />。</param>
        <summary>清除剪贴板然后以所指定的格式添加数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果不知道目标应用程序的格式，您可以使用此方法的多种格式存储数据。  
  
 会在检索时，存储使用此方法的数据可以转换为兼容格式。  
  
 若要从剪贴板中特定的格式检索数据，请先使用<xref:System.Windows.Forms.Clipboard.ContainsData%2A>方法，以确定剪贴板中是否包含该格式的数据检索之前<xref:System.Windows.Forms.Clipboard.GetData%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> 为 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于将任何类型或格式的数据添加到系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDataObject">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>清除剪贴板然后，然后在其中添加数据。</summary>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">要置于剪贴板中的数据。</param>
        <summary>清除剪贴板然后，然后将非持久性数据置于其中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用程序退出时，数据将从系统剪贴板中删除。  
  
 此方法尝试将数据设置十倍中 100 毫秒的时间间隔，并引发<xref:System.Runtime.InteropServices.ExternalException>如果所有尝试都均失败。  
  
> [!NOTE]
>  对象必须可序列化，才能将其放到剪贴板上。 如果非可序列化对象传递给此方法时，它将失败而不引发异常。 请参阅<xref:System.Runtime.Serialization>的序列化的详细信息。  
>   
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Windows.Forms.Clipboard.SetDataObject%2A>放置到系统剪贴板上的非持久性文本数据。 在中`button1_Click`方法中，从复制所选的文本`textBox1`并将其粘贴到剪贴板上。 在中`button2_Click`方法，信息是从剪贴板检索并显示在`textBox2`。 此代码假定`button1`， `button2`， `textBox1`，和`textBox2`已创建并已放置在窗体上。  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能将数据置于剪贴板中。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> 的值为 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于将任何类型或格式的数据添加到系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">要置于剪贴板中的数据。</param>
        <param name="copy">如果想在退出应用程序后将数据保留在剪贴板中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>清除剪贴板并将数据置于系统剪贴板中，且指定在退出应用程序后是否将数据保留在剪贴板中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`copy`参数是`false`，将从系统剪贴板中应用程序退出时删除数据。  
  
 此方法尝试将数据设置十倍中 100 毫秒的时间间隔，并引发<xref:System.Runtime.InteropServices.ExternalException>如果所有尝试都均失败。  
  
> [!NOTE]
>  对象必须可序列化，才能将其放到剪贴板上。 如果非可序列化对象传递给此方法时，它将失败而不引发异常。 请参阅<xref:System.Runtime.Serialization>的序列化的详细信息。  
>   
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的方法是运行应用程序中。 它将在系统剪贴板上的文本框中选定的文本数据的持久性副本。 此代码假定`button1`， `textBox1`，和`textBox2`已创建并已放置在窗体上。  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#1)]  
  
 在不同应用程序中，以下方法从系统剪贴板中检索文本并粘贴到文本`textBox2`。 此代码假定`button2`和`textBox2`已创建并已放置在窗体上。  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#2)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能将数据置于剪贴板中。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> 的值为 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于将任何类型或格式的数据添加到系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy, int32 retryTimes, int32 retryDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean, retryTimes As Integer, retryDelay As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool * int * int -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy, retryTimes, retryDelay)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
        <Parameter Name="retryTimes" Type="System.Int32" />
        <Parameter Name="retryDelay" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">要置于剪贴板中的数据。</param>
        <param name="copy">如果想在退出应用程序后将数据保留在剪贴板中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="retryTimes">尝试将数据置于剪贴板中的次数。</param>
        <param name="retryDelay">两次尝试之间暂停的毫秒数。</param>
        <summary>清除剪贴板并尝试指定的次数，以将数据置于系统剪贴板中，且两次尝试之间具有指定的延迟，可以选择在退出应用程序后将数据保留在剪贴板中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果剪贴板正忙于处理另一个线程或应用程序，可以偶尔也会失败将数据添加到剪贴板。 此方法可用于解决此问题在环境中大量使用剪贴板。  
  
 如果`copy`参数是`false`，将从系统剪贴板中应用程序退出时删除数据。  
  
> [!NOTE]
>  对象必须可序列化，才能将其放到剪贴板上。 如果非可序列化对象传递给此方法时，它将失败而不引发异常。 请参阅<xref:System.Runtime.Serialization>的序列化的详细信息。  
>   
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="retryTimes" /> 小于零。  
  
- 或 - 
 <paramref name="retryDelay" /> 小于零。</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能将数据置于剪贴板中。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于将任何类型或格式的数据添加到系统剪贴板。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public static void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="static member SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="filePaths">包含这些文件名的 <see cref="T:System.Collections.Specialized.StringCollection" />。</param>
        <summary>清除剪贴板，然后添加 <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 格式中的文件名集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文件放置列表是包含文件的路径信息的字符串集合。  
  
 文件放置列表存储在剪贴板上形式上<xref:System.String>数组。 此方法将转换`filePaths`到<xref:System.String>数组之前将其添加到剪贴板。  
  
 若要从剪贴板中检索文件放置列表，请先使用<xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A>方法，以确定剪贴板中是否包含该格式的数据检索之前<xref:System.Windows.Forms.Clipboard.GetFileDropList%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filePaths" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filePaths" /> 中不包含任何字符串。  
  
- 或 - 
在 <paramref name="filePaths" /> 中至少有一个字符串为以下情况之一：为 <see cref="F:System.String.Empty" />、仅包含空白、包含一个或多个 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符、值为 <see langword="null" />、包含冒号 (:)、或超出系统定义的最大长度。  
  
有关更多信息，请参见 <see cref="P:System.Exception.InnerException" /> 的 <see cref="T:System.ArgumentException" /> 属性。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于将数据中的添加<see cref="F:System.Windows.Forms.DataFormats.FileDrop" />到系统剪贴板格式。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">用于访问文件系统。 关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public static void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="static member SetImage : System.Drawing.Image -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">要添加到剪贴板中的 <see cref="T:System.Drawing.Image" />。</param>
        <summary>清除剪贴板然后以 <see cref="T:System.Drawing.Image" /> 格式添加 <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要从剪贴板检索图像数据，请先使用<xref:System.Windows.Forms.Clipboard.ContainsImage%2A>方法，以确定剪贴板中是否包含图像数据检索之前<xref:System.Windows.Forms.Clipboard.GetImage%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> 为 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于将数据中的添加<see cref="F:System.Windows.Forms.DataFormats.Bitmap" />到系统剪贴板格式。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>清除剪贴板然后，然后在其中添加文本数据。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member SetText : string -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要添加到剪贴板中的文本。</param>
        <summary>清除剪贴板然后，然后以 <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> 或 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 格式添加文本数据，这取决于操作系统。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将添加的文本数据<xref:System.Windows.Forms.TextDataFormat.UnicodeText>时设置格式[!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]和[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]。 否则，此方法会添加的文本数据<xref:System.Windows.Forms.TextDataFormat.Text>格式。  
  
 若要从剪贴板中检索文本数据，请先使用<xref:System.Windows.Forms.Clipboard.ContainsText%2A>方法，以确定剪贴板中是否包含文本数据检索之前<xref:System.Windows.Forms.Clipboard.GetText%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示的重载<xref:System.Windows.Forms.Clipboard.SetText%2A>类似于此重载的方法。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> 为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于将文本数据添加到系统剪贴板中。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText (text, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="text">要添加到剪贴板中的文本。</param>
        <param name="format">
          <see cref="T:System.Windows.Forms.TextDataFormat" /> 值之一。</param>
        <summary>除剪贴板然后，然后以所指定 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值指示的格式添加文本数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要从剪贴板中检索文本数据，请先使用<xref:System.Windows.Forms.Clipboard.ContainsText%2A>方法，以确定剪贴板中是否包含文本数据检索之前<xref:System.Windows.Forms.Clipboard.GetText%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> 为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> 不是有效的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于将文本数据添加到系统剪贴板中。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
  </Members>
</Type>