<Type Name="SendKeys" FullName="System.Windows.Forms.SendKeys">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e2f1404664b4b2d15f50dc8b688ef25527372cc2" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37565824" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SendKeys" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi SendKeys extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SendKeys" />
  <TypeSignature Language="VB.NET" Value="Public Class SendKeys" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendKeys" />
  <TypeSignature Language="F#" Value="type SendKeys = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e77f5-101">提供将键击发送到应用程序的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e77f5-101">Provides methods for sending keystrokes to an application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e77f5-102">使用<xref:System.Windows.Forms.SendKeys>发送键击和击键组合到活动的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e77f5-102">Use <xref:System.Windows.Forms.SendKeys> to send keystrokes and keystroke combinations to the active application.</span></span> <span data-ttu-id="e77f5-103">此类无法实例化。</span><span class="sxs-lookup"><span data-stu-id="e77f5-103">This class cannot be instantiated.</span></span> <span data-ttu-id="e77f5-104">若要将击键发送到一个类并立即使用的程序流程继续操作，使用<xref:System.Windows.Forms.SendKeys.Send%2A>。</span><span class="sxs-lookup"><span data-stu-id="e77f5-104">To send a keystroke to a class and immediately continue with the flow of your program, use <xref:System.Windows.Forms.SendKeys.Send%2A>.</span></span> <span data-ttu-id="e77f5-105">若要等待的击键启动的任何进程，请使用<xref:System.Windows.Forms.SendKeys.SendWait%2A>。</span><span class="sxs-lookup"><span data-stu-id="e77f5-105">To wait for any processes started by the keystroke, use <xref:System.Windows.Forms.SendKeys.SendWait%2A>.</span></span>  
  
 <span data-ttu-id="e77f5-106">每个键均由一个或多个字符表示。</span><span class="sxs-lookup"><span data-stu-id="e77f5-106">Each key is represented by one or more characters.</span></span> <span data-ttu-id="e77f5-107">若要指定单个键盘字符，请使用字符本身。</span><span class="sxs-lookup"><span data-stu-id="e77f5-107">To specify a single keyboard character, use the character itself.</span></span> <span data-ttu-id="e77f5-108">例如，若要表示字母 A，请将"A"的字符串传递给方法。</span><span class="sxs-lookup"><span data-stu-id="e77f5-108">For example, to represent the letter A, pass in the string "A" to the method.</span></span> <span data-ttu-id="e77f5-109">若要表示多个字符，附加到它之前每增加一个字符。</span><span class="sxs-lookup"><span data-stu-id="e77f5-109">To represent more than one character, append each additional character to the one preceding it.</span></span> <span data-ttu-id="e77f5-110">若要表示字母 A、 B 和 C，请将参数指定为"ABC"。</span><span class="sxs-lookup"><span data-stu-id="e77f5-110">To represent the letters A, B, and C, specify the parameter as "ABC".</span></span>  
  
 <span data-ttu-id="e77f5-111">加号 （+）、 脱字号 (^)、 百分号 （%）、 颚化符 （~） 和括号 （） 对有特殊意义<xref:System.Windows.Forms.SendKeys>。</span><span class="sxs-lookup"><span data-stu-id="e77f5-111">The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <xref:System.Windows.Forms.SendKeys>.</span></span> <span data-ttu-id="e77f5-112">若要指定一个特殊字符，请将其括在大括号内 ({})。</span><span class="sxs-lookup"><span data-stu-id="e77f5-112">To specify one of these characters, enclose it within braces ({}).</span></span> <span data-ttu-id="e77f5-113">例如，若要指定正号，请使用"{+}"。</span><span class="sxs-lookup"><span data-stu-id="e77f5-113">For example, to specify the plus sign, use "{+}".</span></span> <span data-ttu-id="e77f5-114">若要指定大括号字符，请使用"{{}"和"{}}"。</span><span class="sxs-lookup"><span data-stu-id="e77f5-114">To specify brace characters, use "{{}" and "{}}".</span></span> <span data-ttu-id="e77f5-115">方括号 ([]) 有不到具有特殊含义<xref:System.Windows.Forms.SendKeys>，但必须将它们括在大括号中。</span><span class="sxs-lookup"><span data-stu-id="e77f5-115">Brackets ([ ]) have no special meaning to <xref:System.Windows.Forms.SendKeys>, but you must enclose them in braces.</span></span> <span data-ttu-id="e77f5-116">在其他应用程序中，括号有可能会很明显，动态数据交换 (DDE) 发生时的特殊含义。</span><span class="sxs-lookup"><span data-stu-id="e77f5-116">In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e77f5-117">如果你的应用程序旨在用于全球各种键盘，使用 <xref:System.Windows.Forms.SendKeys.Send%2A> 可能会产生不可预知的结果，应当避免。</span><span class="sxs-lookup"><span data-stu-id="e77f5-117">If your application is intended for international use with a variety of keyboards, the use of <xref:System.Windows.Forms.SendKeys.Send%2A> could yield unpredictable results and should be avoided.</span></span>  
  
 <span data-ttu-id="e77f5-118">若要指定字符不会显示按一个键，例如 ENTER 或选项卡上，以及表示操作而不是字符键时使用下表中的代码。</span><span class="sxs-lookup"><span data-stu-id="e77f5-118">To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</span></span>  
  
|<span data-ttu-id="e77f5-119">键</span><span class="sxs-lookup"><span data-stu-id="e77f5-119">Key</span></span>|<span data-ttu-id="e77f5-120">代码</span><span class="sxs-lookup"><span data-stu-id="e77f5-120">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="e77f5-121">退格符</span><span class="sxs-lookup"><span data-stu-id="e77f5-121">BACKSPACE</span></span>|<span data-ttu-id="e77f5-122">{退格符}，{BS} 或 {BKSP}</span><span class="sxs-lookup"><span data-stu-id="e77f5-122">{BACKSPACE}, {BS}, or {BKSP}</span></span>|  
|<span data-ttu-id="e77f5-123">中断</span><span class="sxs-lookup"><span data-stu-id="e77f5-123">BREAK</span></span>|<span data-ttu-id="e77f5-124">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="e77f5-124">{BREAK}</span></span>|  
|<span data-ttu-id="e77f5-125">大写锁定</span><span class="sxs-lookup"><span data-stu-id="e77f5-125">CAPS LOCK</span></span>|<span data-ttu-id="e77f5-126">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="e77f5-126">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="e77f5-127">DEL 或 DELETE</span><span class="sxs-lookup"><span data-stu-id="e77f5-127">DEL or DELETE</span></span>|<span data-ttu-id="e77f5-128">{删除} 或 {DEL}</span><span class="sxs-lookup"><span data-stu-id="e77f5-128">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="e77f5-129">向下键</span><span class="sxs-lookup"><span data-stu-id="e77f5-129">DOWN ARROW</span></span>|<span data-ttu-id="e77f5-130">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="e77f5-130">{DOWN}</span></span>|  
|<span data-ttu-id="e77f5-131">End</span><span class="sxs-lookup"><span data-stu-id="e77f5-131">END</span></span>|<span data-ttu-id="e77f5-132">{最终}</span><span class="sxs-lookup"><span data-stu-id="e77f5-132">{END}</span></span>|  
|<span data-ttu-id="e77f5-133">Enter</span><span class="sxs-lookup"><span data-stu-id="e77f5-133">ENTER</span></span>|<span data-ttu-id="e77f5-134">输入} 或 ~</span><span class="sxs-lookup"><span data-stu-id="e77f5-134">{ENTER}or ~</span></span>|  
|<span data-ttu-id="e77f5-135">Esc</span><span class="sxs-lookup"><span data-stu-id="e77f5-135">ESC</span></span>|<span data-ttu-id="e77f5-136">{ESC}</span><span class="sxs-lookup"><span data-stu-id="e77f5-136">{ESC}</span></span>|  
|<span data-ttu-id="e77f5-137">帮助</span><span class="sxs-lookup"><span data-stu-id="e77f5-137">HELP</span></span>|<span data-ttu-id="e77f5-138">{帮助}</span><span class="sxs-lookup"><span data-stu-id="e77f5-138">{HELP}</span></span>|  
|<span data-ttu-id="e77f5-139">Home</span><span class="sxs-lookup"><span data-stu-id="e77f5-139">HOME</span></span>|<span data-ttu-id="e77f5-140">{HOME}</span><span class="sxs-lookup"><span data-stu-id="e77f5-140">{HOME}</span></span>|  
|<span data-ttu-id="e77f5-141">项或 INSERT</span><span class="sxs-lookup"><span data-stu-id="e77f5-141">INS or INSERT</span></span>|<span data-ttu-id="e77f5-142">{插入} 或 {项}</span><span class="sxs-lookup"><span data-stu-id="e77f5-142">{INSERT} or {INS}</span></span>|  
|<span data-ttu-id="e77f5-143">向左键</span><span class="sxs-lookup"><span data-stu-id="e77f5-143">LEFT ARROW</span></span>|<span data-ttu-id="e77f5-144">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="e77f5-144">{LEFT}</span></span>|  
|<span data-ttu-id="e77f5-145">NUM LOCK</span><span class="sxs-lookup"><span data-stu-id="e77f5-145">NUM LOCK</span></span>|<span data-ttu-id="e77f5-146">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="e77f5-146">{NUMLOCK}</span></span>|  
|<span data-ttu-id="e77f5-147">PAGE DOWN</span><span class="sxs-lookup"><span data-stu-id="e77f5-147">PAGE DOWN</span></span>|<span data-ttu-id="e77f5-148">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="e77f5-148">{PGDN}</span></span>|  
|<span data-ttu-id="e77f5-149">PAGE UP</span><span class="sxs-lookup"><span data-stu-id="e77f5-149">PAGE UP</span></span>|<span data-ttu-id="e77f5-150">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="e77f5-150">{PGUP}</span></span>|  
|<span data-ttu-id="e77f5-151">打印屏幕</span><span class="sxs-lookup"><span data-stu-id="e77f5-151">PRINT SCREEN</span></span>|<span data-ttu-id="e77f5-152">{PRTSC}（保留供将来使用）</span><span class="sxs-lookup"><span data-stu-id="e77f5-152">{PRTSC} (reserved for future use)</span></span>|  
|<span data-ttu-id="e77f5-153">向右键</span><span class="sxs-lookup"><span data-stu-id="e77f5-153">RIGHT ARROW</span></span>|<span data-ttu-id="e77f5-154">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="e77f5-154">{RIGHT}</span></span>|  
|<span data-ttu-id="e77f5-155">滚动锁</span><span class="sxs-lookup"><span data-stu-id="e77f5-155">SCROLL LOCK</span></span>|<span data-ttu-id="e77f5-156">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="e77f5-156">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="e77f5-157">Tab</span><span class="sxs-lookup"><span data-stu-id="e77f5-157">TAB</span></span>|<span data-ttu-id="e77f5-158">{TAB}</span><span class="sxs-lookup"><span data-stu-id="e77f5-158">{TAB}</span></span>|  
|<span data-ttu-id="e77f5-159">向上键</span><span class="sxs-lookup"><span data-stu-id="e77f5-159">UP ARROW</span></span>|<span data-ttu-id="e77f5-160">{UP}</span><span class="sxs-lookup"><span data-stu-id="e77f5-160">{UP}</span></span>|  
|<span data-ttu-id="e77f5-161">F1</span><span class="sxs-lookup"><span data-stu-id="e77f5-161">F1</span></span>|<span data-ttu-id="e77f5-162">{F1}</span><span class="sxs-lookup"><span data-stu-id="e77f5-162">{F1}</span></span>|  
|<span data-ttu-id="e77f5-163">F2</span><span class="sxs-lookup"><span data-stu-id="e77f5-163">F2</span></span>|<span data-ttu-id="e77f5-164">{F2}</span><span class="sxs-lookup"><span data-stu-id="e77f5-164">{F2}</span></span>|  
|<span data-ttu-id="e77f5-165">F3</span><span class="sxs-lookup"><span data-stu-id="e77f5-165">F3</span></span>|<span data-ttu-id="e77f5-166">{F3}</span><span class="sxs-lookup"><span data-stu-id="e77f5-166">{F3}</span></span>|  
|<span data-ttu-id="e77f5-167">F4</span><span class="sxs-lookup"><span data-stu-id="e77f5-167">F4</span></span>|<span data-ttu-id="e77f5-168">{F4}</span><span class="sxs-lookup"><span data-stu-id="e77f5-168">{F4}</span></span>|  
|<span data-ttu-id="e77f5-169">F5</span><span class="sxs-lookup"><span data-stu-id="e77f5-169">F5</span></span>|<span data-ttu-id="e77f5-170">{F5}</span><span class="sxs-lookup"><span data-stu-id="e77f5-170">{F5}</span></span>|  
|<span data-ttu-id="e77f5-171">F6</span><span class="sxs-lookup"><span data-stu-id="e77f5-171">F6</span></span>|<span data-ttu-id="e77f5-172">{F6}</span><span class="sxs-lookup"><span data-stu-id="e77f5-172">{F6}</span></span>|  
|<span data-ttu-id="e77f5-173">F7</span><span class="sxs-lookup"><span data-stu-id="e77f5-173">F7</span></span>|<span data-ttu-id="e77f5-174">{F7}</span><span class="sxs-lookup"><span data-stu-id="e77f5-174">{F7}</span></span>|  
|<span data-ttu-id="e77f5-175">F8</span><span class="sxs-lookup"><span data-stu-id="e77f5-175">F8</span></span>|<span data-ttu-id="e77f5-176">{F8}</span><span class="sxs-lookup"><span data-stu-id="e77f5-176">{F8}</span></span>|  
|<span data-ttu-id="e77f5-177">F9</span><span class="sxs-lookup"><span data-stu-id="e77f5-177">F9</span></span>|<span data-ttu-id="e77f5-178">{F9}</span><span class="sxs-lookup"><span data-stu-id="e77f5-178">{F9}</span></span>|  
|<span data-ttu-id="e77f5-179">F10</span><span class="sxs-lookup"><span data-stu-id="e77f5-179">F10</span></span>|<span data-ttu-id="e77f5-180">{F10}</span><span class="sxs-lookup"><span data-stu-id="e77f5-180">{F10}</span></span>|  
|<span data-ttu-id="e77f5-181">F11</span><span class="sxs-lookup"><span data-stu-id="e77f5-181">F11</span></span>|<span data-ttu-id="e77f5-182">{F11}</span><span class="sxs-lookup"><span data-stu-id="e77f5-182">{F11}</span></span>|  
|<span data-ttu-id="e77f5-183">F12</span><span class="sxs-lookup"><span data-stu-id="e77f5-183">F12</span></span>|<span data-ttu-id="e77f5-184">{F12}</span><span class="sxs-lookup"><span data-stu-id="e77f5-184">{F12}</span></span>|  
|<span data-ttu-id="e77f5-185">F13</span><span class="sxs-lookup"><span data-stu-id="e77f5-185">F13</span></span>|<span data-ttu-id="e77f5-186">{F13}</span><span class="sxs-lookup"><span data-stu-id="e77f5-186">{F13}</span></span>|  
|<span data-ttu-id="e77f5-187">F14</span><span class="sxs-lookup"><span data-stu-id="e77f5-187">F14</span></span>|<span data-ttu-id="e77f5-188">{F14}</span><span class="sxs-lookup"><span data-stu-id="e77f5-188">{F14}</span></span>|  
|<span data-ttu-id="e77f5-189">F15</span><span class="sxs-lookup"><span data-stu-id="e77f5-189">F15</span></span>|<span data-ttu-id="e77f5-190">{F15}</span><span class="sxs-lookup"><span data-stu-id="e77f5-190">{F15}</span></span>|  
|<span data-ttu-id="e77f5-191">F16</span><span class="sxs-lookup"><span data-stu-id="e77f5-191">F16</span></span>|<span data-ttu-id="e77f5-192">{F16}</span><span class="sxs-lookup"><span data-stu-id="e77f5-192">{F16}</span></span>|  
|<span data-ttu-id="e77f5-193">键盘添加</span><span class="sxs-lookup"><span data-stu-id="e77f5-193">Keypad add</span></span>|<span data-ttu-id="e77f5-194">{ADD}</span><span class="sxs-lookup"><span data-stu-id="e77f5-194">{ADD}</span></span>|  
|<span data-ttu-id="e77f5-195">数字键盘减号</span><span class="sxs-lookup"><span data-stu-id="e77f5-195">Keypad subtract</span></span>|<span data-ttu-id="e77f5-196">{减去}</span><span class="sxs-lookup"><span data-stu-id="e77f5-196">{SUBTRACT}</span></span>|  
|<span data-ttu-id="e77f5-197">数字键盘乘号</span><span class="sxs-lookup"><span data-stu-id="e77f5-197">Keypad multiply</span></span>|<span data-ttu-id="e77f5-198">{乘}</span><span class="sxs-lookup"><span data-stu-id="e77f5-198">{MULTIPLY}</span></span>|  
|<span data-ttu-id="e77f5-199">数字键盘除号</span><span class="sxs-lookup"><span data-stu-id="e77f5-199">Keypad divide</span></span>|<span data-ttu-id="e77f5-200">{DIVIDE}</span><span class="sxs-lookup"><span data-stu-id="e77f5-200">{DIVIDE}</span></span>|  
  
 <span data-ttu-id="e77f5-201">若要指定密钥结合 SHIFT、 CTRL 和 ALT 键的任意组合，在之前与一个或多个以下的代码的关键代码。</span><span class="sxs-lookup"><span data-stu-id="e77f5-201">To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</span></span>  
  
|<span data-ttu-id="e77f5-202">键</span><span class="sxs-lookup"><span data-stu-id="e77f5-202">Key</span></span>|<span data-ttu-id="e77f5-203">代码</span><span class="sxs-lookup"><span data-stu-id="e77f5-203">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="e77f5-204">SHIFT</span><span class="sxs-lookup"><span data-stu-id="e77f5-204">SHIFT</span></span>|+|  
|<span data-ttu-id="e77f5-205">CTRL</span><span class="sxs-lookup"><span data-stu-id="e77f5-205">CTRL</span></span>|^|  
|<span data-ttu-id="e77f5-206">ALT</span><span class="sxs-lookup"><span data-stu-id="e77f5-206">ALT</span></span>|%|  
  
 <span data-ttu-id="e77f5-207">若要指定 SHIFT、 CTRL 和 ALT 的任意组合多个其他键被按下时按住，请将这些密钥代码括在括号中。</span><span class="sxs-lookup"><span data-stu-id="e77f5-207">To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</span></span> <span data-ttu-id="e77f5-208">例如，若要指定要按下 E 和 C 的同时按住 shift 键，使用"+ (EC)"。</span><span class="sxs-lookup"><span data-stu-id="e77f5-208">For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</span></span> <span data-ttu-id="e77f5-209">若要指定以按住 SHIFT 并按 E，跟 C 不按 shift 键，使用"+ EC"。</span><span class="sxs-lookup"><span data-stu-id="e77f5-209">To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</span></span>  
  
 <span data-ttu-id="e77f5-210">若要指定重复键，使用窗体 {密钥号}。</span><span class="sxs-lookup"><span data-stu-id="e77f5-210">To specify repeating keys, use the form {key number}.</span></span> <span data-ttu-id="e77f5-211">必须将键和数字之间留一个空格。</span><span class="sxs-lookup"><span data-stu-id="e77f5-211">You must put a space between key and number.</span></span> <span data-ttu-id="e77f5-212">例如，{左侧 42} 表示按 42 次; 向左箭头键{h 10} 意味着的按 H 10 倍。</span><span class="sxs-lookup"><span data-stu-id="e77f5-212">For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e77f5-213">由于没有任何托管的方法，以激活另一个应用程序，您可以使用当前应用程序中的此类，或使用本机 Windows 方法，如`FindWindow`和`SetForegroundWindow`、 将焦点强制设置对其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="e77f5-213">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e77f5-214"><xref:System.Windows.Forms.SendKeys> 类已更新为 .NET Framework 3.0，从而可用于在 Windows Vista 上运行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e77f5-214">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="e77f5-215">Windows Vista 增强的安全性（称为用户帐户控件或 UAC）可避免以前的实现按预期运行。</span><span class="sxs-lookup"><span data-stu-id="e77f5-215">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="e77f5-216"><xref:System.Windows.Forms.SendKeys> 类容易遭受某些开发人员不得不解决的计时问题。</span><span class="sxs-lookup"><span data-stu-id="e77f5-216">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="e77f5-217">更新后的实现仍然容易遇到计时问题，但速度稍微快一些，并且可能需要更改解决方法。</span><span class="sxs-lookup"><span data-stu-id="e77f5-217">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="e77f5-218"><xref:System.Windows.Forms.SendKeys> 类先尝试使用以前的实现，失败后再使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="e77f5-218">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="e77f5-219">因此， <xref:System.Windows.Forms.SendKeys> 类在不同操作系统上的运行方式可能不同。</span><span class="sxs-lookup"><span data-stu-id="e77f5-219">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="e77f5-220">此外，当 <xref:System.Windows.Forms.SendKeys> 类使用新的实现时， <xref:System.Windows.Forms.SendKeys.SendWait%2A> 方法不会等到消息被处理后才将其发送至其他进程。</span><span class="sxs-lookup"><span data-stu-id="e77f5-220">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="e77f5-221">如果如论使用何种操作系统，你的应用程序均依赖于一致的行为，则可通过将以下应用程序设置添加至 app.config 文件强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="e77f5-221">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="e77f5-222">若要强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用以前的实现，请改用 `"JournalHook"` 值。</span><span class="sxs-lookup"><span data-stu-id="e77f5-222">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e77f5-223">下面的代码示例演示如何使用 <xref:System.Windows.Forms.SendKeys.Send%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e77f5-223">The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method.</span></span> <span data-ttu-id="e77f5-224">若要运行该示例，以下代码粘贴到名为 Form1 的窗体中包含一个按钮名为 Button1。</span><span class="sxs-lookup"><span data-stu-id="e77f5-224">To run the example, paste the following code in a form called Form1 containing a button called Button1.</span></span> <span data-ttu-id="e77f5-225">请确保单击事件没有在此示例中其事件处理方法关联。</span><span class="sxs-lookup"><span data-stu-id="e77f5-225">Ensure the click events are associated with their event-handling methods in this example.</span></span> <span data-ttu-id="e77f5-226">Button 控件的<xref:System.Windows.Forms.Control.TabIndex%2A>属性应设置为 0。</span><span class="sxs-lookup"><span data-stu-id="e77f5-226">The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0.</span></span> <span data-ttu-id="e77f5-227">当运行示例时，双击窗体来触发按钮的 click 事件。</span><span class="sxs-lookup"><span data-stu-id="e77f5-227">When the example is running, double-click the form to trigger the button's click event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.SendKeys#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.SendKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.SendKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Windows.Forms.SendKeys.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e77f5-228">处理消息队列中当前的所有 Windows 消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e77f5-228">Processes all the Windows messages currently in the message queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e77f5-229">使用<xref:System.Windows.Forms.SendKeys.Flush%2A>等待要处理的键击和消息队列中其他操作系统消息的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e77f5-229">Use <xref:System.Windows.Forms.SendKeys.Flush%2A> to wait for the application to process keystrokes and other operating system messages that are in the message queue.</span></span> <span data-ttu-id="e77f5-230">这相当于调用<xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType>直到没有更多的密钥来处理。</span><span class="sxs-lookup"><span data-stu-id="e77f5-230">This is equivalent to calling <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> until there are no more keys to process.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e77f5-231">由于没有任何托管的方法，以激活另一个应用程序，您可以使用当前应用程序中的此类，或使用本机 Windows 方法，如`FindWindow`和`SetForegroundWindow`、 将焦点强制设置对其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="e77f5-231">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public static void Send (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Send(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Send (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Send(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="static member Send : string -&gt; unit" Usage="System.Windows.Forms.SendKeys.Send keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="e77f5-232">要发送的击键字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e77f5-232">The string of keystrokes to send.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e77f5-233">向活动应用程序发送击键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e77f5-233">Sends keystrokes to the active application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e77f5-234">每个键均由一个或多个字符表示。</span><span class="sxs-lookup"><span data-stu-id="e77f5-234">Each key is represented by one or more characters.</span></span> <span data-ttu-id="e77f5-235">若要指定单个键盘字符，请使用字符本身。</span><span class="sxs-lookup"><span data-stu-id="e77f5-235">To specify a single keyboard character, use the character itself.</span></span> <span data-ttu-id="e77f5-236">例如，若要表示字母 A，请将"A"的字符串传递给方法。</span><span class="sxs-lookup"><span data-stu-id="e77f5-236">For example, to represent the letter A, pass in the string "A" to the method.</span></span> <span data-ttu-id="e77f5-237">若要表示多个字符，附加到它之前每增加一个字符。</span><span class="sxs-lookup"><span data-stu-id="e77f5-237">To represent more than one character, append each additional character to the one preceding it.</span></span> <span data-ttu-id="e77f5-238">若要表示字母 A、 B 和 C，请将参数指定为"ABC"。</span><span class="sxs-lookup"><span data-stu-id="e77f5-238">To represent the letters A, B, and C, specify the parameter as "ABC".</span></span>  
  
 <span data-ttu-id="e77f5-239">加号 （+）、 脱字号 (^)、 百分号 （%）、 颚化符 （~） 和括号 （） 对有特殊意义<xref:System.Windows.Forms.SendKeys>。</span><span class="sxs-lookup"><span data-stu-id="e77f5-239">The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <xref:System.Windows.Forms.SendKeys>.</span></span> <span data-ttu-id="e77f5-240">若要指定一个特殊字符，请将其括在大括号内 ({})。</span><span class="sxs-lookup"><span data-stu-id="e77f5-240">To specify one of these characters, enclose it within braces ({}).</span></span> <span data-ttu-id="e77f5-241">例如，若要指定正号，请使用"{+}"。</span><span class="sxs-lookup"><span data-stu-id="e77f5-241">For example, to specify the plus sign, use "{+}".</span></span> <span data-ttu-id="e77f5-242">若要指定大括号字符，请使用"{{}"和"{}}"。</span><span class="sxs-lookup"><span data-stu-id="e77f5-242">To specify brace characters, use "{{}" and "{}}".</span></span> <span data-ttu-id="e77f5-243">方括号 ([]) 有不到具有特殊含义<xref:System.Windows.Forms.SendKeys>，但必须将它们括在大括号中。</span><span class="sxs-lookup"><span data-stu-id="e77f5-243">Brackets ([ ]) have no special meaning to <xref:System.Windows.Forms.SendKeys>, but you must enclose them in braces.</span></span> <span data-ttu-id="e77f5-244">在其他应用程序中，括号有可能会很明显，动态数据交换 (DDE) 发生时的特殊含义。</span><span class="sxs-lookup"><span data-stu-id="e77f5-244">In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e77f5-245">如果你的应用程序旨在用于全球各种键盘，使用 <xref:System.Windows.Forms.SendKeys.Send%2A> 可能会产生不可预知的结果，应当避免。</span><span class="sxs-lookup"><span data-stu-id="e77f5-245">If your application is intended for international use with a variety of keyboards, the use of <xref:System.Windows.Forms.SendKeys.Send%2A> could yield unpredictable results and should be avoided.</span></span>  
  
 <span data-ttu-id="e77f5-246">若要指定字符不会显示按一个键，例如 ENTER 或选项卡上，以及表示操作而不是字符键时使用下表中的代码。</span><span class="sxs-lookup"><span data-stu-id="e77f5-246">To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</span></span>  
  
|<span data-ttu-id="e77f5-247">键</span><span class="sxs-lookup"><span data-stu-id="e77f5-247">Key</span></span>|<span data-ttu-id="e77f5-248">代码</span><span class="sxs-lookup"><span data-stu-id="e77f5-248">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="e77f5-249">退格符</span><span class="sxs-lookup"><span data-stu-id="e77f5-249">BACKSPACE</span></span>|<span data-ttu-id="e77f5-250">{退格符}，{BS} 或 {BKSP}</span><span class="sxs-lookup"><span data-stu-id="e77f5-250">{BACKSPACE}, {BS}, or {BKSP}</span></span>|  
|<span data-ttu-id="e77f5-251">中断</span><span class="sxs-lookup"><span data-stu-id="e77f5-251">BREAK</span></span>|<span data-ttu-id="e77f5-252">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="e77f5-252">{BREAK}</span></span>|  
|<span data-ttu-id="e77f5-253">大写锁定</span><span class="sxs-lookup"><span data-stu-id="e77f5-253">CAPS LOCK</span></span>|<span data-ttu-id="e77f5-254">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="e77f5-254">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="e77f5-255">DEL 或 DELETE</span><span class="sxs-lookup"><span data-stu-id="e77f5-255">DEL or DELETE</span></span>|<span data-ttu-id="e77f5-256">{删除} 或 {DEL}</span><span class="sxs-lookup"><span data-stu-id="e77f5-256">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="e77f5-257">向下键</span><span class="sxs-lookup"><span data-stu-id="e77f5-257">DOWN ARROW</span></span>|<span data-ttu-id="e77f5-258">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="e77f5-258">{DOWN}</span></span>|  
|<span data-ttu-id="e77f5-259">End</span><span class="sxs-lookup"><span data-stu-id="e77f5-259">END</span></span>|<span data-ttu-id="e77f5-260">{最终}</span><span class="sxs-lookup"><span data-stu-id="e77f5-260">{END}</span></span>|  
|<span data-ttu-id="e77f5-261">Enter</span><span class="sxs-lookup"><span data-stu-id="e77f5-261">ENTER</span></span>|<span data-ttu-id="e77f5-262">输入} 或 ~</span><span class="sxs-lookup"><span data-stu-id="e77f5-262">{ENTER}or ~</span></span>|  
|<span data-ttu-id="e77f5-263">Esc</span><span class="sxs-lookup"><span data-stu-id="e77f5-263">ESC</span></span>|<span data-ttu-id="e77f5-264">{ESC}</span><span class="sxs-lookup"><span data-stu-id="e77f5-264">{ESC}</span></span>|  
|<span data-ttu-id="e77f5-265">帮助</span><span class="sxs-lookup"><span data-stu-id="e77f5-265">HELP</span></span>|<span data-ttu-id="e77f5-266">{帮助}</span><span class="sxs-lookup"><span data-stu-id="e77f5-266">{HELP}</span></span>|  
|<span data-ttu-id="e77f5-267">Home</span><span class="sxs-lookup"><span data-stu-id="e77f5-267">HOME</span></span>|<span data-ttu-id="e77f5-268">{HOME}</span><span class="sxs-lookup"><span data-stu-id="e77f5-268">{HOME}</span></span>|  
|<span data-ttu-id="e77f5-269">项或 INSERT</span><span class="sxs-lookup"><span data-stu-id="e77f5-269">INS or INSERT</span></span>|<span data-ttu-id="e77f5-270">{插入} 或 {项}</span><span class="sxs-lookup"><span data-stu-id="e77f5-270">{INSERT} or {INS}</span></span>|  
|<span data-ttu-id="e77f5-271">向左键</span><span class="sxs-lookup"><span data-stu-id="e77f5-271">LEFT ARROW</span></span>|<span data-ttu-id="e77f5-272">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="e77f5-272">{LEFT}</span></span>|  
|<span data-ttu-id="e77f5-273">NUM LOCK</span><span class="sxs-lookup"><span data-stu-id="e77f5-273">NUM LOCK</span></span>|<span data-ttu-id="e77f5-274">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="e77f5-274">{NUMLOCK}</span></span>|  
|<span data-ttu-id="e77f5-275">PAGE DOWN</span><span class="sxs-lookup"><span data-stu-id="e77f5-275">PAGE DOWN</span></span>|<span data-ttu-id="e77f5-276">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="e77f5-276">{PGDN}</span></span>|  
|<span data-ttu-id="e77f5-277">PAGE UP</span><span class="sxs-lookup"><span data-stu-id="e77f5-277">PAGE UP</span></span>|<span data-ttu-id="e77f5-278">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="e77f5-278">{PGUP}</span></span>|  
|<span data-ttu-id="e77f5-279">打印屏幕</span><span class="sxs-lookup"><span data-stu-id="e77f5-279">PRINT SCREEN</span></span>|<span data-ttu-id="e77f5-280">{PRTSC}（保留供将来使用）</span><span class="sxs-lookup"><span data-stu-id="e77f5-280">{PRTSC} (reserved for future use)</span></span>|  
|<span data-ttu-id="e77f5-281">向右键</span><span class="sxs-lookup"><span data-stu-id="e77f5-281">RIGHT ARROW</span></span>|<span data-ttu-id="e77f5-282">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="e77f5-282">{RIGHT}</span></span>|  
|<span data-ttu-id="e77f5-283">滚动锁</span><span class="sxs-lookup"><span data-stu-id="e77f5-283">SCROLL LOCK</span></span>|<span data-ttu-id="e77f5-284">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="e77f5-284">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="e77f5-285">Tab</span><span class="sxs-lookup"><span data-stu-id="e77f5-285">TAB</span></span>|<span data-ttu-id="e77f5-286">{TAB}</span><span class="sxs-lookup"><span data-stu-id="e77f5-286">{TAB}</span></span>|  
|<span data-ttu-id="e77f5-287">向上键</span><span class="sxs-lookup"><span data-stu-id="e77f5-287">UP ARROW</span></span>|<span data-ttu-id="e77f5-288">{UP}</span><span class="sxs-lookup"><span data-stu-id="e77f5-288">{UP}</span></span>|  
|<span data-ttu-id="e77f5-289">F1</span><span class="sxs-lookup"><span data-stu-id="e77f5-289">F1</span></span>|<span data-ttu-id="e77f5-290">{F1}</span><span class="sxs-lookup"><span data-stu-id="e77f5-290">{F1}</span></span>|  
|<span data-ttu-id="e77f5-291">F2</span><span class="sxs-lookup"><span data-stu-id="e77f5-291">F2</span></span>|<span data-ttu-id="e77f5-292">{F2}</span><span class="sxs-lookup"><span data-stu-id="e77f5-292">{F2}</span></span>|  
|<span data-ttu-id="e77f5-293">F3</span><span class="sxs-lookup"><span data-stu-id="e77f5-293">F3</span></span>|<span data-ttu-id="e77f5-294">{F3}</span><span class="sxs-lookup"><span data-stu-id="e77f5-294">{F3}</span></span>|  
|<span data-ttu-id="e77f5-295">F4</span><span class="sxs-lookup"><span data-stu-id="e77f5-295">F4</span></span>|<span data-ttu-id="e77f5-296">{F4}</span><span class="sxs-lookup"><span data-stu-id="e77f5-296">{F4}</span></span>|  
|<span data-ttu-id="e77f5-297">F5</span><span class="sxs-lookup"><span data-stu-id="e77f5-297">F5</span></span>|<span data-ttu-id="e77f5-298">{F5}</span><span class="sxs-lookup"><span data-stu-id="e77f5-298">{F5}</span></span>|  
|<span data-ttu-id="e77f5-299">F6</span><span class="sxs-lookup"><span data-stu-id="e77f5-299">F6</span></span>|<span data-ttu-id="e77f5-300">{F6}</span><span class="sxs-lookup"><span data-stu-id="e77f5-300">{F6}</span></span>|  
|<span data-ttu-id="e77f5-301">F7</span><span class="sxs-lookup"><span data-stu-id="e77f5-301">F7</span></span>|<span data-ttu-id="e77f5-302">{F7}</span><span class="sxs-lookup"><span data-stu-id="e77f5-302">{F7}</span></span>|  
|<span data-ttu-id="e77f5-303">F8</span><span class="sxs-lookup"><span data-stu-id="e77f5-303">F8</span></span>|<span data-ttu-id="e77f5-304">{F8}</span><span class="sxs-lookup"><span data-stu-id="e77f5-304">{F8}</span></span>|  
|<span data-ttu-id="e77f5-305">F9</span><span class="sxs-lookup"><span data-stu-id="e77f5-305">F9</span></span>|<span data-ttu-id="e77f5-306">{F9}</span><span class="sxs-lookup"><span data-stu-id="e77f5-306">{F9}</span></span>|  
|<span data-ttu-id="e77f5-307">F10</span><span class="sxs-lookup"><span data-stu-id="e77f5-307">F10</span></span>|<span data-ttu-id="e77f5-308">{F10}</span><span class="sxs-lookup"><span data-stu-id="e77f5-308">{F10}</span></span>|  
|<span data-ttu-id="e77f5-309">F11</span><span class="sxs-lookup"><span data-stu-id="e77f5-309">F11</span></span>|<span data-ttu-id="e77f5-310">{F11}</span><span class="sxs-lookup"><span data-stu-id="e77f5-310">{F11}</span></span>|  
|<span data-ttu-id="e77f5-311">F12</span><span class="sxs-lookup"><span data-stu-id="e77f5-311">F12</span></span>|<span data-ttu-id="e77f5-312">{F12}</span><span class="sxs-lookup"><span data-stu-id="e77f5-312">{F12}</span></span>|  
|<span data-ttu-id="e77f5-313">F13</span><span class="sxs-lookup"><span data-stu-id="e77f5-313">F13</span></span>|<span data-ttu-id="e77f5-314">{F13}</span><span class="sxs-lookup"><span data-stu-id="e77f5-314">{F13}</span></span>|  
|<span data-ttu-id="e77f5-315">F14</span><span class="sxs-lookup"><span data-stu-id="e77f5-315">F14</span></span>|<span data-ttu-id="e77f5-316">{F14}</span><span class="sxs-lookup"><span data-stu-id="e77f5-316">{F14}</span></span>|  
|<span data-ttu-id="e77f5-317">F15</span><span class="sxs-lookup"><span data-stu-id="e77f5-317">F15</span></span>|<span data-ttu-id="e77f5-318">{F15}</span><span class="sxs-lookup"><span data-stu-id="e77f5-318">{F15}</span></span>|  
|<span data-ttu-id="e77f5-319">F16</span><span class="sxs-lookup"><span data-stu-id="e77f5-319">F16</span></span>|<span data-ttu-id="e77f5-320">{F16}</span><span class="sxs-lookup"><span data-stu-id="e77f5-320">{F16}</span></span>|  
|<span data-ttu-id="e77f5-321">键盘添加</span><span class="sxs-lookup"><span data-stu-id="e77f5-321">Keypad add</span></span>|<span data-ttu-id="e77f5-322">{ADD}</span><span class="sxs-lookup"><span data-stu-id="e77f5-322">{ADD}</span></span>|  
|<span data-ttu-id="e77f5-323">数字键盘减号</span><span class="sxs-lookup"><span data-stu-id="e77f5-323">Keypad subtract</span></span>|<span data-ttu-id="e77f5-324">{减去}</span><span class="sxs-lookup"><span data-stu-id="e77f5-324">{SUBTRACT}</span></span>|  
|<span data-ttu-id="e77f5-325">数字键盘乘号</span><span class="sxs-lookup"><span data-stu-id="e77f5-325">Keypad multiply</span></span>|<span data-ttu-id="e77f5-326">{乘}</span><span class="sxs-lookup"><span data-stu-id="e77f5-326">{MULTIPLY}</span></span>|  
|<span data-ttu-id="e77f5-327">数字键盘除号</span><span class="sxs-lookup"><span data-stu-id="e77f5-327">Keypad divide</span></span>|<span data-ttu-id="e77f5-328">{DIVIDE}</span><span class="sxs-lookup"><span data-stu-id="e77f5-328">{DIVIDE}</span></span>|  
  
 <span data-ttu-id="e77f5-329">若要指定密钥结合 SHIFT、 CTRL 和 ALT 键的任意组合，在之前与一个或多个以下的代码的关键代码。</span><span class="sxs-lookup"><span data-stu-id="e77f5-329">To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</span></span>  
  
|<span data-ttu-id="e77f5-330">键</span><span class="sxs-lookup"><span data-stu-id="e77f5-330">Key</span></span>|<span data-ttu-id="e77f5-331">代码</span><span class="sxs-lookup"><span data-stu-id="e77f5-331">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="e77f5-332">SHIFT</span><span class="sxs-lookup"><span data-stu-id="e77f5-332">SHIFT</span></span>|+|  
|<span data-ttu-id="e77f5-333">CTRL</span><span class="sxs-lookup"><span data-stu-id="e77f5-333">CTRL</span></span>|^|  
|<span data-ttu-id="e77f5-334">ALT</span><span class="sxs-lookup"><span data-stu-id="e77f5-334">ALT</span></span>|%|  
  
 <span data-ttu-id="e77f5-335">若要指定 SHIFT、 CTRL 和 ALT 的任意组合多个其他键被按下时按住，请将这些密钥代码括在括号中。</span><span class="sxs-lookup"><span data-stu-id="e77f5-335">To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</span></span> <span data-ttu-id="e77f5-336">例如，若要指定要按下 E 和 C 的同时按住 shift 键，使用"+ (EC)"。</span><span class="sxs-lookup"><span data-stu-id="e77f5-336">For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</span></span> <span data-ttu-id="e77f5-337">若要指定以按住 SHIFT 并按 E，跟 C 不按 shift 键，使用"+ EC"。</span><span class="sxs-lookup"><span data-stu-id="e77f5-337">To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</span></span>  
  
 <span data-ttu-id="e77f5-338">若要指定重复键，使用窗体 {密钥号}。</span><span class="sxs-lookup"><span data-stu-id="e77f5-338">To specify repeating keys, use the form {key number}.</span></span> <span data-ttu-id="e77f5-339">必须将键和数字之间留一个空格。</span><span class="sxs-lookup"><span data-stu-id="e77f5-339">You must put a space between key and number.</span></span> <span data-ttu-id="e77f5-340">例如，{左侧 42} 表示按 42 次; 向左箭头键{h 10} 意味着的按 H 10 倍。</span><span class="sxs-lookup"><span data-stu-id="e77f5-340">For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e77f5-341">由于没有任何托管的方法，以激活另一个应用程序，您可以使用当前应用程序中的此类，或使用本机 Windows 方法，如`FindWindow`和`SetForegroundWindow`、 将焦点强制设置对其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="e77f5-341">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e77f5-342"><xref:System.Windows.Forms.SendKeys> 类已更新为 .NET Framework 3.0，从而可用于在 Windows Vista 上运行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e77f5-342">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="e77f5-343">Windows Vista 增强的安全性（称为用户帐户控件或 UAC）可避免以前的实现按预期运行。</span><span class="sxs-lookup"><span data-stu-id="e77f5-343">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="e77f5-344"><xref:System.Windows.Forms.SendKeys> 类容易遭受某些开发人员不得不解决的计时问题。</span><span class="sxs-lookup"><span data-stu-id="e77f5-344">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="e77f5-345">更新后的实现仍然容易遇到计时问题，但速度稍微快一些，并且可能需要更改解决方法。</span><span class="sxs-lookup"><span data-stu-id="e77f5-345">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="e77f5-346"><xref:System.Windows.Forms.SendKeys> 类先尝试使用以前的实现，失败后再使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="e77f5-346">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="e77f5-347">因此， <xref:System.Windows.Forms.SendKeys> 类在不同操作系统上的运行方式可能不同。</span><span class="sxs-lookup"><span data-stu-id="e77f5-347">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="e77f5-348">此外，当 <xref:System.Windows.Forms.SendKeys> 类使用新的实现时， <xref:System.Windows.Forms.SendKeys.SendWait%2A> 方法不会等到消息被处理后才将其发送至其他进程。</span><span class="sxs-lookup"><span data-stu-id="e77f5-348">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="e77f5-349">如果如论使用何种操作系统，你的应用程序均依赖于一致的行为，则可通过将以下应用程序设置添加至 app.config 文件强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="e77f5-349">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="e77f5-350">若要强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用以前的实现，请改用 `"JournalHook"` 值。</span><span class="sxs-lookup"><span data-stu-id="e77f5-350">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e77f5-351">下面的代码示例演示如何使用<xref:System.Windows.Forms.SendKeys.Send%2A>方法。若要运行该示例，以下代码粘贴到名为 Form1 的窗体中包含一个按钮名为 Button1。</span><span class="sxs-lookup"><span data-stu-id="e77f5-351">The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method.To run the example, paste the following code in a form called Form1 containing a button called Button1.</span></span> <span data-ttu-id="e77f5-352">请确保单击事件没有在此示例中其事件处理方法关联。</span><span class="sxs-lookup"><span data-stu-id="e77f5-352">Ensure the click events are associated with their event-handling methods in this example.</span></span> <span data-ttu-id="e77f5-353">Button 控件的<xref:System.Windows.Forms.Control.TabIndex%2A>属性应设置为 0。</span><span class="sxs-lookup"><span data-stu-id="e77f5-353">The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0.</span></span> <span data-ttu-id="e77f5-354">当运行示例时，双击窗体来触发按钮的 click 事件。</span><span class="sxs-lookup"><span data-stu-id="e77f5-354">When the example is running, double-click the form to trigger the button's click event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.SendKeys#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.SendKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.SendKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e77f5-355">没有可向其发送击键的活动应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e77f5-355">There is not an active application to send keystrokes to.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e77f5-356">
            <paramref name="keys" /> 并不表示有效击键</span>
          <span class="sxs-lookup">
            <span data-stu-id="e77f5-356">
              <paramref name="keys" /> does not represent valid keystrokes</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e77f5-357">对于非托管代码调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e77f5-357">for unmanaged code to call this method.</span>
          </span>
          <span data-ttu-id="e77f5-358">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e77f5-358">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SendWait">
      <MemberSignature Language="C#" Value="public static void SendWait (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendWait(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SendWait (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SendWait(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="static member SendWait : string -&gt; unit" Usage="System.Windows.Forms.SendKeys.SendWait keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="e77f5-359">要发送的击键字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e77f5-359">The string of keystrokes to send.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e77f5-360">向活动应用程序发送给定的键，然后等待消息被处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e77f5-360">Sends the given keys to the active application, and then waits for the messages to be processed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e77f5-361">使用<xref:System.Windows.Forms.SendKeys.SendWait%2A>来向活动应用程序发送键击或击键组合并等待要处理的键击消息。</span><span class="sxs-lookup"><span data-stu-id="e77f5-361">Use <xref:System.Windows.Forms.SendKeys.SendWait%2A> to send keystrokes or combinations of keystrokes to the active application and wait for the keystroke messages to be processed.</span></span> <span data-ttu-id="e77f5-362">此方法可用于将击键发送到应用程序，并等待通过击键完成启动任何进程。</span><span class="sxs-lookup"><span data-stu-id="e77f5-362">You can use this method to send keystrokes to an application and wait for any processes that are started by the keystrokes to be completed.</span></span> <span data-ttu-id="e77f5-363">这可以是重要信息： 如果其他应用程序必须完成你的应用程序才能继续。</span><span class="sxs-lookup"><span data-stu-id="e77f5-363">This can be important if the other application must finish before your application can continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e77f5-364">由于没有任何托管的方法，以激活另一个应用程序，您可以使用当前应用程序中的此类，或使用本机 Windows 方法，如`FindWindow`和`SetForegroundWindow`、 将焦点强制设置对其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="e77f5-364">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e77f5-365"><xref:System.Windows.Forms.SendKeys> 类已更新为 .NET Framework 3.0，从而可用于在 Windows Vista 上运行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e77f5-365">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="e77f5-366">Windows Vista 增强的安全性（称为用户帐户控件或 UAC）可避免以前的实现按预期运行。</span><span class="sxs-lookup"><span data-stu-id="e77f5-366">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="e77f5-367"><xref:System.Windows.Forms.SendKeys> 类容易遭受某些开发人员不得不解决的计时问题。</span><span class="sxs-lookup"><span data-stu-id="e77f5-367">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="e77f5-368">更新后的实现仍然容易遇到计时问题，但速度稍微快一些，并且可能需要更改解决方法。</span><span class="sxs-lookup"><span data-stu-id="e77f5-368">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="e77f5-369"><xref:System.Windows.Forms.SendKeys> 类先尝试使用以前的实现，失败后再使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="e77f5-369">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="e77f5-370">因此， <xref:System.Windows.Forms.SendKeys> 类在不同操作系统上的运行方式可能不同。</span><span class="sxs-lookup"><span data-stu-id="e77f5-370">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="e77f5-371">此外，当 <xref:System.Windows.Forms.SendKeys> 类使用新的实现时， <xref:System.Windows.Forms.SendKeys.SendWait%2A> 方法不会等到消息被处理后才将其发送至其他进程。</span><span class="sxs-lookup"><span data-stu-id="e77f5-371">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="e77f5-372">如果如论使用何种操作系统，你的应用程序均依赖于一致的行为，则可通过将以下应用程序设置添加至 app.config 文件强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="e77f5-372">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="e77f5-373">若要强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用以前的实现，请改用 `"JournalHook"` 值。</span><span class="sxs-lookup"><span data-stu-id="e77f5-373">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e77f5-374">对于非托管代码调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e77f5-374">for unmanaged code to call this method.</span>
          </span>
          <span data-ttu-id="e77f5-375">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e77f5-375">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>