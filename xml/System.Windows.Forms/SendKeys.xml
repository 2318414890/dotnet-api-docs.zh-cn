<Type Name="SendKeys" FullName="System.Windows.Forms.SendKeys">
  <TypeSignature Language="C#" Value="public class SendKeys" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi SendKeys extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SendKeys" />
  <TypeSignature Language="VB.NET" Value="Public Class SendKeys" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendKeys" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d0db2-101">提供将键击发送到应用程序的方法。</span><span class="sxs-lookup"><span data-stu-id="d0db2-101">Provides methods for sending keystrokes to an application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0db2-102">使用<xref:System.Windows.Forms.SendKeys>发送键击和击键组合到活动的应用程序。</span><span class="sxs-lookup"><span data-stu-id="d0db2-102">Use <xref:System.Windows.Forms.SendKeys> to send keystrokes and keystroke combinations to the active application.</span></span> <span data-ttu-id="d0db2-103">此类无法实例化。</span><span class="sxs-lookup"><span data-stu-id="d0db2-103">This class cannot be instantiated.</span></span> <span data-ttu-id="d0db2-104">将击键发送到的类，并立即继续执行程序的流，请使用<xref:System.Windows.Forms.SendKeys.Send%2A>。</span><span class="sxs-lookup"><span data-stu-id="d0db2-104">To send a keystroke to a class and immediately continue with the flow of your program, use <xref:System.Windows.Forms.SendKeys.Send%2A>.</span></span> <span data-ttu-id="d0db2-105">若要等待启动的键击任何进程，请使用<xref:System.Windows.Forms.SendKeys.SendWait%2A>。</span><span class="sxs-lookup"><span data-stu-id="d0db2-105">To wait for any processes started by the keystroke, use <xref:System.Windows.Forms.SendKeys.SendWait%2A>.</span></span>  
  
 <span data-ttu-id="d0db2-106">每个键是由一个或多个字符表示。</span><span class="sxs-lookup"><span data-stu-id="d0db2-106">Each key is represented by one or more characters.</span></span> <span data-ttu-id="d0db2-107">若要指定单个键盘字符，使用该字符本身。</span><span class="sxs-lookup"><span data-stu-id="d0db2-107">To specify a single keyboard character, use the character itself.</span></span> <span data-ttu-id="d0db2-108">例如，若要表示字母 A，请将"A"的字符串传递给方法。</span><span class="sxs-lookup"><span data-stu-id="d0db2-108">For example, to represent the letter A, pass in the string "A" to the method.</span></span> <span data-ttu-id="d0db2-109">若要表示多个字符，附加到它之前每增加一个字符。</span><span class="sxs-lookup"><span data-stu-id="d0db2-109">To represent more than one character, append each additional character to the one preceding it.</span></span> <span data-ttu-id="d0db2-110">若要表示字母 A、 B 和 C，请将参数指定为"ABC"。</span><span class="sxs-lookup"><span data-stu-id="d0db2-110">To represent the letters A, B, and C, specify the parameter as "ABC".</span></span>  
  
 <span data-ttu-id="d0db2-111">加号 （+）、 脱字号 (^)、 百分号 （%）、 波形符 （~） 和括号 （） 具有特殊含义到<xref:System.Windows.Forms.SendKeys>。</span><span class="sxs-lookup"><span data-stu-id="d0db2-111">The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <xref:System.Windows.Forms.SendKeys>.</span></span> <span data-ttu-id="d0db2-112">若要指定这些字符之一，请将其括在大括号 （{}） 内。</span><span class="sxs-lookup"><span data-stu-id="d0db2-112">To specify one of these characters, enclose it within braces ({}).</span></span> <span data-ttu-id="d0db2-113">例如，若要指定加号，使用"{+}"。</span><span class="sxs-lookup"><span data-stu-id="d0db2-113">For example, to specify the plus sign, use "{+}".</span></span> <span data-ttu-id="d0db2-114">若要指定大括号字符、 使用"{{}"和"{}}"。</span><span class="sxs-lookup"><span data-stu-id="d0db2-114">To specify brace characters, use "{{}" and "{}}".</span></span> <span data-ttu-id="d0db2-115">方括号 ([]) 具有到没有特殊含义<xref:System.Windows.Forms.SendKeys>，但你必须将它们括在大括号中。</span><span class="sxs-lookup"><span data-stu-id="d0db2-115">Brackets ([ ]) have no special meaning to <xref:System.Windows.Forms.SendKeys>, but you must enclose them in braces.</span></span> <span data-ttu-id="d0db2-116">在其他应用程序，方括号有可能会很明显，动态数据交换 (DDE) 发生时具有特殊含义。</span><span class="sxs-lookup"><span data-stu-id="d0db2-116">In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d0db2-117">如果你的应用程序旨在用于全球各种键盘，使用 <xref:System.Windows.Forms.SendKeys.Send%2A> 可能会产生不可预知的结果，应当避免。</span><span class="sxs-lookup"><span data-stu-id="d0db2-117">If your application is intended for international use with a variety of keyboards, the use of <xref:System.Windows.Forms.SendKeys.Send%2A> could yield unpredictable results and should be avoided.</span></span>  
  
 <span data-ttu-id="d0db2-118">若要指定在按下一个键，如 ENTER 或选项卡上，以及密钥表示操作，而不是字符，不显示的字符使用下表中的代码。</span><span class="sxs-lookup"><span data-stu-id="d0db2-118">To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</span></span>  
  
|<span data-ttu-id="d0db2-119">键</span><span class="sxs-lookup"><span data-stu-id="d0db2-119">Key</span></span>|<span data-ttu-id="d0db2-120">代码</span><span class="sxs-lookup"><span data-stu-id="d0db2-120">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="d0db2-121">退格符</span><span class="sxs-lookup"><span data-stu-id="d0db2-121">BACKSPACE</span></span>|<span data-ttu-id="d0db2-122">{退格符}，{BS} 或 {BKSP}</span><span class="sxs-lookup"><span data-stu-id="d0db2-122">{BACKSPACE}, {BS}, or {BKSP}</span></span>|  
|<span data-ttu-id="d0db2-123">中断</span><span class="sxs-lookup"><span data-stu-id="d0db2-123">BREAK</span></span>|<span data-ttu-id="d0db2-124">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="d0db2-124">{BREAK}</span></span>|  
|<span data-ttu-id="d0db2-125">大写锁定</span><span class="sxs-lookup"><span data-stu-id="d0db2-125">CAPS LOCK</span></span>|<span data-ttu-id="d0db2-126">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="d0db2-126">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="d0db2-127">DEL 或删除</span><span class="sxs-lookup"><span data-stu-id="d0db2-127">DEL or DELETE</span></span>|<span data-ttu-id="d0db2-128">{删除} 或 {DEL}</span><span class="sxs-lookup"><span data-stu-id="d0db2-128">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="d0db2-129">向下键</span><span class="sxs-lookup"><span data-stu-id="d0db2-129">DOWN ARROW</span></span>|<span data-ttu-id="d0db2-130">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="d0db2-130">{DOWN}</span></span>|  
|<span data-ttu-id="d0db2-131">End</span><span class="sxs-lookup"><span data-stu-id="d0db2-131">END</span></span>|<span data-ttu-id="d0db2-132">{END}</span><span class="sxs-lookup"><span data-stu-id="d0db2-132">{END}</span></span>|  
|<span data-ttu-id="d0db2-133">Enter</span><span class="sxs-lookup"><span data-stu-id="d0db2-133">ENTER</span></span>|<span data-ttu-id="d0db2-134">{输入} 或 ~</span><span class="sxs-lookup"><span data-stu-id="d0db2-134">{ENTER}or ~</span></span>|  
|<span data-ttu-id="d0db2-135">Esc</span><span class="sxs-lookup"><span data-stu-id="d0db2-135">ESC</span></span>|<span data-ttu-id="d0db2-136">{ESC}</span><span class="sxs-lookup"><span data-stu-id="d0db2-136">{ESC}</span></span>|  
|<span data-ttu-id="d0db2-137">帮助</span><span class="sxs-lookup"><span data-stu-id="d0db2-137">HELP</span></span>|<span data-ttu-id="d0db2-138">{HELP}</span><span class="sxs-lookup"><span data-stu-id="d0db2-138">{HELP}</span></span>|  
|<span data-ttu-id="d0db2-139">Home</span><span class="sxs-lookup"><span data-stu-id="d0db2-139">HOME</span></span>|<span data-ttu-id="d0db2-140">{HOME}</span><span class="sxs-lookup"><span data-stu-id="d0db2-140">{HOME}</span></span>|  
|<span data-ttu-id="d0db2-141">单元或插入</span><span class="sxs-lookup"><span data-stu-id="d0db2-141">INS or INSERT</span></span>|<span data-ttu-id="d0db2-142">{插入} 或 {单元}</span><span class="sxs-lookup"><span data-stu-id="d0db2-142">{INSERT} or {INS}</span></span>|  
|<span data-ttu-id="d0db2-143">向左键</span><span class="sxs-lookup"><span data-stu-id="d0db2-143">LEFT ARROW</span></span>|<span data-ttu-id="d0db2-144">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="d0db2-144">{LEFT}</span></span>|  
|<span data-ttu-id="d0db2-145">NUM LOCK</span><span class="sxs-lookup"><span data-stu-id="d0db2-145">NUM LOCK</span></span>|<span data-ttu-id="d0db2-146">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="d0db2-146">{NUMLOCK}</span></span>|  
|<span data-ttu-id="d0db2-147">PAGE DOWN</span><span class="sxs-lookup"><span data-stu-id="d0db2-147">PAGE DOWN</span></span>|<span data-ttu-id="d0db2-148">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="d0db2-148">{PGDN}</span></span>|  
|<span data-ttu-id="d0db2-149">PAGE UP</span><span class="sxs-lookup"><span data-stu-id="d0db2-149">PAGE UP</span></span>|<span data-ttu-id="d0db2-150">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="d0db2-150">{PGUP}</span></span>|  
|<span data-ttu-id="d0db2-151">打印屏幕</span><span class="sxs-lookup"><span data-stu-id="d0db2-151">PRINT SCREEN</span></span>|<span data-ttu-id="d0db2-152">{PRTSC}（保留供将来使用）</span><span class="sxs-lookup"><span data-stu-id="d0db2-152">{PRTSC} (reserved for future use)</span></span>|  
|<span data-ttu-id="d0db2-153">向右键</span><span class="sxs-lookup"><span data-stu-id="d0db2-153">RIGHT ARROW</span></span>|<span data-ttu-id="d0db2-154">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="d0db2-154">{RIGHT}</span></span>|  
|<span data-ttu-id="d0db2-155">SCROLL LOCK</span><span class="sxs-lookup"><span data-stu-id="d0db2-155">SCROLL LOCK</span></span>|<span data-ttu-id="d0db2-156">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="d0db2-156">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="d0db2-157">Tab</span><span class="sxs-lookup"><span data-stu-id="d0db2-157">TAB</span></span>|<span data-ttu-id="d0db2-158">{TAB}</span><span class="sxs-lookup"><span data-stu-id="d0db2-158">{TAB}</span></span>|  
|<span data-ttu-id="d0db2-159">向上键</span><span class="sxs-lookup"><span data-stu-id="d0db2-159">UP ARROW</span></span>|<span data-ttu-id="d0db2-160">{UP}</span><span class="sxs-lookup"><span data-stu-id="d0db2-160">{UP}</span></span>|  
|<span data-ttu-id="d0db2-161">F1</span><span class="sxs-lookup"><span data-stu-id="d0db2-161">F1</span></span>|<span data-ttu-id="d0db2-162">{F1}</span><span class="sxs-lookup"><span data-stu-id="d0db2-162">{F1}</span></span>|  
|<span data-ttu-id="d0db2-163">F2</span><span class="sxs-lookup"><span data-stu-id="d0db2-163">F2</span></span>|<span data-ttu-id="d0db2-164">{F2}</span><span class="sxs-lookup"><span data-stu-id="d0db2-164">{F2}</span></span>|  
|<span data-ttu-id="d0db2-165">F3</span><span class="sxs-lookup"><span data-stu-id="d0db2-165">F3</span></span>|<span data-ttu-id="d0db2-166">{F3}</span><span class="sxs-lookup"><span data-stu-id="d0db2-166">{F3}</span></span>|  
|<span data-ttu-id="d0db2-167">F4</span><span class="sxs-lookup"><span data-stu-id="d0db2-167">F4</span></span>|<span data-ttu-id="d0db2-168">{F4}</span><span class="sxs-lookup"><span data-stu-id="d0db2-168">{F4}</span></span>|  
|<span data-ttu-id="d0db2-169">F5</span><span class="sxs-lookup"><span data-stu-id="d0db2-169">F5</span></span>|<span data-ttu-id="d0db2-170">{F5}</span><span class="sxs-lookup"><span data-stu-id="d0db2-170">{F5}</span></span>|  
|<span data-ttu-id="d0db2-171">F6</span><span class="sxs-lookup"><span data-stu-id="d0db2-171">F6</span></span>|<span data-ttu-id="d0db2-172">{F6}</span><span class="sxs-lookup"><span data-stu-id="d0db2-172">{F6}</span></span>|  
|<span data-ttu-id="d0db2-173">F7</span><span class="sxs-lookup"><span data-stu-id="d0db2-173">F7</span></span>|<span data-ttu-id="d0db2-174">{F7}</span><span class="sxs-lookup"><span data-stu-id="d0db2-174">{F7}</span></span>|  
|<span data-ttu-id="d0db2-175">F8</span><span class="sxs-lookup"><span data-stu-id="d0db2-175">F8</span></span>|<span data-ttu-id="d0db2-176">{F8}</span><span class="sxs-lookup"><span data-stu-id="d0db2-176">{F8}</span></span>|  
|<span data-ttu-id="d0db2-177">F9</span><span class="sxs-lookup"><span data-stu-id="d0db2-177">F9</span></span>|<span data-ttu-id="d0db2-178">{F9}</span><span class="sxs-lookup"><span data-stu-id="d0db2-178">{F9}</span></span>|  
|<span data-ttu-id="d0db2-179">F10</span><span class="sxs-lookup"><span data-stu-id="d0db2-179">F10</span></span>|<span data-ttu-id="d0db2-180">{F10}</span><span class="sxs-lookup"><span data-stu-id="d0db2-180">{F10}</span></span>|  
|<span data-ttu-id="d0db2-181">F11</span><span class="sxs-lookup"><span data-stu-id="d0db2-181">F11</span></span>|<span data-ttu-id="d0db2-182">{F11}</span><span class="sxs-lookup"><span data-stu-id="d0db2-182">{F11}</span></span>|  
|<span data-ttu-id="d0db2-183">F12</span><span class="sxs-lookup"><span data-stu-id="d0db2-183">F12</span></span>|<span data-ttu-id="d0db2-184">{F12}</span><span class="sxs-lookup"><span data-stu-id="d0db2-184">{F12}</span></span>|  
|<span data-ttu-id="d0db2-185">F13</span><span class="sxs-lookup"><span data-stu-id="d0db2-185">F13</span></span>|<span data-ttu-id="d0db2-186">{F13}</span><span class="sxs-lookup"><span data-stu-id="d0db2-186">{F13}</span></span>|  
|<span data-ttu-id="d0db2-187">F14</span><span class="sxs-lookup"><span data-stu-id="d0db2-187">F14</span></span>|<span data-ttu-id="d0db2-188">{F14}</span><span class="sxs-lookup"><span data-stu-id="d0db2-188">{F14}</span></span>|  
|<span data-ttu-id="d0db2-189">F15</span><span class="sxs-lookup"><span data-stu-id="d0db2-189">F15</span></span>|<span data-ttu-id="d0db2-190">{F15}</span><span class="sxs-lookup"><span data-stu-id="d0db2-190">{F15}</span></span>|  
|<span data-ttu-id="d0db2-191">F16</span><span class="sxs-lookup"><span data-stu-id="d0db2-191">F16</span></span>|<span data-ttu-id="d0db2-192">{F16}</span><span class="sxs-lookup"><span data-stu-id="d0db2-192">{F16}</span></span>|  
|<span data-ttu-id="d0db2-193">键盘添加</span><span class="sxs-lookup"><span data-stu-id="d0db2-193">Keypad add</span></span>|<span data-ttu-id="d0db2-194">{ADD}</span><span class="sxs-lookup"><span data-stu-id="d0db2-194">{ADD}</span></span>|  
|<span data-ttu-id="d0db2-195">数字键盘减号</span><span class="sxs-lookup"><span data-stu-id="d0db2-195">Keypad subtract</span></span>|<span data-ttu-id="d0db2-196">{SUBTRACT}</span><span class="sxs-lookup"><span data-stu-id="d0db2-196">{SUBTRACT}</span></span>|  
|<span data-ttu-id="d0db2-197">数字键盘乘号</span><span class="sxs-lookup"><span data-stu-id="d0db2-197">Keypad multiply</span></span>|<span data-ttu-id="d0db2-198">{乘}</span><span class="sxs-lookup"><span data-stu-id="d0db2-198">{MULTIPLY}</span></span>|  
|<span data-ttu-id="d0db2-199">数字键盘除号</span><span class="sxs-lookup"><span data-stu-id="d0db2-199">Keypad divide</span></span>|<span data-ttu-id="d0db2-200">{DIVIDE}</span><span class="sxs-lookup"><span data-stu-id="d0db2-200">{DIVIDE}</span></span>|  
  
 <span data-ttu-id="d0db2-201">若要指定结合 SHIFT、 CTRL 和 ALT 键的任意组合的密钥，在前面使用一个或多个以下的代码的键代码。</span><span class="sxs-lookup"><span data-stu-id="d0db2-201">To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</span></span>  
  
|<span data-ttu-id="d0db2-202">键</span><span class="sxs-lookup"><span data-stu-id="d0db2-202">Key</span></span>|<span data-ttu-id="d0db2-203">代码</span><span class="sxs-lookup"><span data-stu-id="d0db2-203">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="d0db2-204">SHIFT</span><span class="sxs-lookup"><span data-stu-id="d0db2-204">SHIFT</span></span>|+|  
|<span data-ttu-id="d0db2-205">CTRL</span><span class="sxs-lookup"><span data-stu-id="d0db2-205">CTRL</span></span>|^|  
|<span data-ttu-id="d0db2-206">ALT</span><span class="sxs-lookup"><span data-stu-id="d0db2-206">ALT</span></span>|%|  
  
 <span data-ttu-id="d0db2-207">若要指定 SHIFT、 CTRL 和 ALT 的任意组合当按下了几个其他键按住，将这些密钥的代码在括号中。</span><span class="sxs-lookup"><span data-stu-id="d0db2-207">To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</span></span> <span data-ttu-id="d0db2-208">例如，若要指定以按住 SHIFT 并按下 E 和 C，使用"+ (EC)"。</span><span class="sxs-lookup"><span data-stu-id="d0db2-208">For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</span></span> <span data-ttu-id="d0db2-209">若要指定以按住 SHIFT 并按 E 下跟 C 而无需 shift 键，使用"+ EC"。</span><span class="sxs-lookup"><span data-stu-id="d0db2-209">To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</span></span>  
  
 <span data-ttu-id="d0db2-210">若要指定重复键，使用窗体 {密钥号}。</span><span class="sxs-lookup"><span data-stu-id="d0db2-210">To specify repeating keys, use the form {key number}.</span></span> <span data-ttu-id="d0db2-211">你必须放置键和数字之间留一个空格。</span><span class="sxs-lookup"><span data-stu-id="d0db2-211">You must put a space between key and number.</span></span> <span data-ttu-id="d0db2-212">例如，{左 42} 表示 42 时间; 同时按左箭头键{h 10} 意味着的按 H 10 倍。</span><span class="sxs-lookup"><span data-stu-id="d0db2-212">For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0db2-213">由于没有激活其他应用程序的托管的方法，你可以使用当前应用程序中的此类，或者使用本机 Windows 方法，如`FindWindow`和`SetForegroundWindow`、 将焦点强制上其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="d0db2-213">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0db2-214"><xref:System.Windows.Forms.SendKeys> 类已更新为 .NET Framework 3.0，从而可用于在 Windows Vista 上运行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="d0db2-214">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="d0db2-215">Windows Vista 增强的安全性（称为用户帐户控件或 UAC）可避免以前的实现按预期运行。</span><span class="sxs-lookup"><span data-stu-id="d0db2-215">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="d0db2-216"><xref:System.Windows.Forms.SendKeys> 类容易遭受某些开发人员不得不解决的计时问题。</span><span class="sxs-lookup"><span data-stu-id="d0db2-216">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="d0db2-217">更新后的实现仍然容易遇到计时问题，但速度稍微快一些，并且可能需要更改解决方法。</span><span class="sxs-lookup"><span data-stu-id="d0db2-217">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="d0db2-218"><xref:System.Windows.Forms.SendKeys> 类先尝试使用以前的实现，失败后再使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="d0db2-218">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="d0db2-219">因此， <xref:System.Windows.Forms.SendKeys> 类在不同操作系统上的运行方式可能不同。</span><span class="sxs-lookup"><span data-stu-id="d0db2-219">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="d0db2-220">此外，当 <xref:System.Windows.Forms.SendKeys> 类使用新的实现时， <xref:System.Windows.Forms.SendKeys.SendWait%2A> 方法不会等到消息被处理后才将其发送至其他进程。</span><span class="sxs-lookup"><span data-stu-id="d0db2-220">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="d0db2-221">如果如论使用何种操作系统，你的应用程序均依赖于一致的行为，则可通过将以下应用程序设置添加至 app.config 文件强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="d0db2-221">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="d0db2-222">若要强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用以前的实现，请改用 `"JournalHook"` 值。</span><span class="sxs-lookup"><span data-stu-id="d0db2-222">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0db2-223">下面的代码示例演示如何使用 <xref:System.Windows.Forms.SendKeys.Send%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d0db2-223">The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method.</span></span> <span data-ttu-id="d0db2-224">若要运行该示例，将粘贴下面的代码在一个称为 form1 窗体包含一个按钮调用 Button1。</span><span class="sxs-lookup"><span data-stu-id="d0db2-224">To run the example, paste the following code in a form called Form1 containing a button called Button1.</span></span> <span data-ttu-id="d0db2-225">请确保单击事件与此示例中其事件处理方法关联。</span><span class="sxs-lookup"><span data-stu-id="d0db2-225">Ensure the click events are associated with their event-handling methods in this example.</span></span> <span data-ttu-id="d0db2-226">按钮控件的<xref:System.Windows.Forms.Control.TabIndex%2A>属性应设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d0db2-226">The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0.</span></span> <span data-ttu-id="d0db2-227">当运行示例时，双击窗体触发该按钮的 click 事件。</span><span class="sxs-lookup"><span data-stu-id="d0db2-227">When the example is running, double-click the form to trigger the button's click event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.SendKeys#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.SendKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.SendKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d0db2-228">处理消息队列中当前的所有 Windows 消息。</span><span class="sxs-lookup"><span data-stu-id="d0db2-228">Processes all the Windows messages currently in the message queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0db2-229">使用<xref:System.Windows.Forms.SendKeys.Flush%2A>要等待的时间要处理的键击和其他操作系统的消息的消息队列的应用程序。</span><span class="sxs-lookup"><span data-stu-id="d0db2-229">Use <xref:System.Windows.Forms.SendKeys.Flush%2A> to wait for the application to process keystrokes and other operating system messages that are in the message queue.</span></span> <span data-ttu-id="d0db2-230">这是等效于调用<xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType>直到没有任何要处理的多个密钥。</span><span class="sxs-lookup"><span data-stu-id="d0db2-230">This is equivalent to calling <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> until there are no more keys to process.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0db2-231">由于没有激活其他应用程序的托管的方法，你可以使用当前应用程序中的此类，或者使用本机 Windows 方法，如`FindWindow`和`SetForegroundWindow`、 将焦点强制上其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="d0db2-231">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public static void Send (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Send(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Send (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Send(System::String ^ keys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="d0db2-232">要发送的击键字符串。</span><span class="sxs-lookup"><span data-stu-id="d0db2-232">The string of keystrokes to send.</span></span></param>
        <summary><span data-ttu-id="d0db2-233">向活动应用程序发送击键。</span><span class="sxs-lookup"><span data-stu-id="d0db2-233">Sends keystrokes to the active application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0db2-234">每个键是由一个或多个字符表示。</span><span class="sxs-lookup"><span data-stu-id="d0db2-234">Each key is represented by one or more characters.</span></span> <span data-ttu-id="d0db2-235">若要指定单个键盘字符，使用该字符本身。</span><span class="sxs-lookup"><span data-stu-id="d0db2-235">To specify a single keyboard character, use the character itself.</span></span> <span data-ttu-id="d0db2-236">例如，若要表示字母 A，请将"A"的字符串传递给方法。</span><span class="sxs-lookup"><span data-stu-id="d0db2-236">For example, to represent the letter A, pass in the string "A" to the method.</span></span> <span data-ttu-id="d0db2-237">若要表示多个字符，附加到它之前每增加一个字符。</span><span class="sxs-lookup"><span data-stu-id="d0db2-237">To represent more than one character, append each additional character to the one preceding it.</span></span> <span data-ttu-id="d0db2-238">若要表示字母 A、 B 和 C，请将参数指定为"ABC"。</span><span class="sxs-lookup"><span data-stu-id="d0db2-238">To represent the letters A, B, and C, specify the parameter as "ABC".</span></span>  
  
 <span data-ttu-id="d0db2-239">加号 （+）、 脱字号 (^)、 百分号 （%）、 波形符 （~） 和括号 （） 具有特殊含义到<xref:System.Windows.Forms.SendKeys>。</span><span class="sxs-lookup"><span data-stu-id="d0db2-239">The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <xref:System.Windows.Forms.SendKeys>.</span></span> <span data-ttu-id="d0db2-240">若要指定这些字符之一，请将其括在大括号 （{}） 内。</span><span class="sxs-lookup"><span data-stu-id="d0db2-240">To specify one of these characters, enclose it within braces ({}).</span></span> <span data-ttu-id="d0db2-241">例如，若要指定加号，使用"{+}"。</span><span class="sxs-lookup"><span data-stu-id="d0db2-241">For example, to specify the plus sign, use "{+}".</span></span> <span data-ttu-id="d0db2-242">若要指定大括号字符、 使用"{{}"和"{}}"。</span><span class="sxs-lookup"><span data-stu-id="d0db2-242">To specify brace characters, use "{{}" and "{}}".</span></span> <span data-ttu-id="d0db2-243">方括号 ([]) 具有到没有特殊含义<xref:System.Windows.Forms.SendKeys>，但你必须将它们括在大括号中。</span><span class="sxs-lookup"><span data-stu-id="d0db2-243">Brackets ([ ]) have no special meaning to <xref:System.Windows.Forms.SendKeys>, but you must enclose them in braces.</span></span> <span data-ttu-id="d0db2-244">在其他应用程序，方括号有可能会很明显，动态数据交换 (DDE) 发生时具有特殊含义。</span><span class="sxs-lookup"><span data-stu-id="d0db2-244">In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d0db2-245">如果你的应用程序旨在用于全球各种键盘，使用 <xref:System.Windows.Forms.SendKeys.Send%2A> 可能会产生不可预知的结果，应当避免。</span><span class="sxs-lookup"><span data-stu-id="d0db2-245">If your application is intended for international use with a variety of keyboards, the use of <xref:System.Windows.Forms.SendKeys.Send%2A> could yield unpredictable results and should be avoided.</span></span>  
  
 <span data-ttu-id="d0db2-246">若要指定在按下一个键，如 ENTER 或选项卡上，以及密钥表示操作，而不是字符，不显示的字符使用下表中的代码。</span><span class="sxs-lookup"><span data-stu-id="d0db2-246">To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</span></span>  
  
|<span data-ttu-id="d0db2-247">键</span><span class="sxs-lookup"><span data-stu-id="d0db2-247">Key</span></span>|<span data-ttu-id="d0db2-248">代码</span><span class="sxs-lookup"><span data-stu-id="d0db2-248">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="d0db2-249">退格符</span><span class="sxs-lookup"><span data-stu-id="d0db2-249">BACKSPACE</span></span>|<span data-ttu-id="d0db2-250">{退格符}，{BS} 或 {BKSP}</span><span class="sxs-lookup"><span data-stu-id="d0db2-250">{BACKSPACE}, {BS}, or {BKSP}</span></span>|  
|<span data-ttu-id="d0db2-251">中断</span><span class="sxs-lookup"><span data-stu-id="d0db2-251">BREAK</span></span>|<span data-ttu-id="d0db2-252">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="d0db2-252">{BREAK}</span></span>|  
|<span data-ttu-id="d0db2-253">大写锁定</span><span class="sxs-lookup"><span data-stu-id="d0db2-253">CAPS LOCK</span></span>|<span data-ttu-id="d0db2-254">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="d0db2-254">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="d0db2-255">DEL 或删除</span><span class="sxs-lookup"><span data-stu-id="d0db2-255">DEL or DELETE</span></span>|<span data-ttu-id="d0db2-256">{删除} 或 {DEL}</span><span class="sxs-lookup"><span data-stu-id="d0db2-256">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="d0db2-257">向下键</span><span class="sxs-lookup"><span data-stu-id="d0db2-257">DOWN ARROW</span></span>|<span data-ttu-id="d0db2-258">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="d0db2-258">{DOWN}</span></span>|  
|<span data-ttu-id="d0db2-259">End</span><span class="sxs-lookup"><span data-stu-id="d0db2-259">END</span></span>|<span data-ttu-id="d0db2-260">{END}</span><span class="sxs-lookup"><span data-stu-id="d0db2-260">{END}</span></span>|  
|<span data-ttu-id="d0db2-261">Enter</span><span class="sxs-lookup"><span data-stu-id="d0db2-261">ENTER</span></span>|<span data-ttu-id="d0db2-262">{输入} 或 ~</span><span class="sxs-lookup"><span data-stu-id="d0db2-262">{ENTER}or ~</span></span>|  
|<span data-ttu-id="d0db2-263">Esc</span><span class="sxs-lookup"><span data-stu-id="d0db2-263">ESC</span></span>|<span data-ttu-id="d0db2-264">{ESC}</span><span class="sxs-lookup"><span data-stu-id="d0db2-264">{ESC}</span></span>|  
|<span data-ttu-id="d0db2-265">帮助</span><span class="sxs-lookup"><span data-stu-id="d0db2-265">HELP</span></span>|<span data-ttu-id="d0db2-266">{HELP}</span><span class="sxs-lookup"><span data-stu-id="d0db2-266">{HELP}</span></span>|  
|<span data-ttu-id="d0db2-267">Home</span><span class="sxs-lookup"><span data-stu-id="d0db2-267">HOME</span></span>|<span data-ttu-id="d0db2-268">{HOME}</span><span class="sxs-lookup"><span data-stu-id="d0db2-268">{HOME}</span></span>|  
|<span data-ttu-id="d0db2-269">单元或插入</span><span class="sxs-lookup"><span data-stu-id="d0db2-269">INS or INSERT</span></span>|<span data-ttu-id="d0db2-270">{插入} 或 {单元}</span><span class="sxs-lookup"><span data-stu-id="d0db2-270">{INSERT} or {INS}</span></span>|  
|<span data-ttu-id="d0db2-271">向左键</span><span class="sxs-lookup"><span data-stu-id="d0db2-271">LEFT ARROW</span></span>|<span data-ttu-id="d0db2-272">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="d0db2-272">{LEFT}</span></span>|  
|<span data-ttu-id="d0db2-273">NUM LOCK</span><span class="sxs-lookup"><span data-stu-id="d0db2-273">NUM LOCK</span></span>|<span data-ttu-id="d0db2-274">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="d0db2-274">{NUMLOCK}</span></span>|  
|<span data-ttu-id="d0db2-275">PAGE DOWN</span><span class="sxs-lookup"><span data-stu-id="d0db2-275">PAGE DOWN</span></span>|<span data-ttu-id="d0db2-276">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="d0db2-276">{PGDN}</span></span>|  
|<span data-ttu-id="d0db2-277">PAGE UP</span><span class="sxs-lookup"><span data-stu-id="d0db2-277">PAGE UP</span></span>|<span data-ttu-id="d0db2-278">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="d0db2-278">{PGUP}</span></span>|  
|<span data-ttu-id="d0db2-279">打印屏幕</span><span class="sxs-lookup"><span data-stu-id="d0db2-279">PRINT SCREEN</span></span>|<span data-ttu-id="d0db2-280">{PRTSC}（保留供将来使用）</span><span class="sxs-lookup"><span data-stu-id="d0db2-280">{PRTSC} (reserved for future use)</span></span>|  
|<span data-ttu-id="d0db2-281">向右键</span><span class="sxs-lookup"><span data-stu-id="d0db2-281">RIGHT ARROW</span></span>|<span data-ttu-id="d0db2-282">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="d0db2-282">{RIGHT}</span></span>|  
|<span data-ttu-id="d0db2-283">SCROLL LOCK</span><span class="sxs-lookup"><span data-stu-id="d0db2-283">SCROLL LOCK</span></span>|<span data-ttu-id="d0db2-284">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="d0db2-284">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="d0db2-285">Tab</span><span class="sxs-lookup"><span data-stu-id="d0db2-285">TAB</span></span>|<span data-ttu-id="d0db2-286">{TAB}</span><span class="sxs-lookup"><span data-stu-id="d0db2-286">{TAB}</span></span>|  
|<span data-ttu-id="d0db2-287">向上键</span><span class="sxs-lookup"><span data-stu-id="d0db2-287">UP ARROW</span></span>|<span data-ttu-id="d0db2-288">{UP}</span><span class="sxs-lookup"><span data-stu-id="d0db2-288">{UP}</span></span>|  
|<span data-ttu-id="d0db2-289">F1</span><span class="sxs-lookup"><span data-stu-id="d0db2-289">F1</span></span>|<span data-ttu-id="d0db2-290">{F1}</span><span class="sxs-lookup"><span data-stu-id="d0db2-290">{F1}</span></span>|  
|<span data-ttu-id="d0db2-291">F2</span><span class="sxs-lookup"><span data-stu-id="d0db2-291">F2</span></span>|<span data-ttu-id="d0db2-292">{F2}</span><span class="sxs-lookup"><span data-stu-id="d0db2-292">{F2}</span></span>|  
|<span data-ttu-id="d0db2-293">F3</span><span class="sxs-lookup"><span data-stu-id="d0db2-293">F3</span></span>|<span data-ttu-id="d0db2-294">{F3}</span><span class="sxs-lookup"><span data-stu-id="d0db2-294">{F3}</span></span>|  
|<span data-ttu-id="d0db2-295">F4</span><span class="sxs-lookup"><span data-stu-id="d0db2-295">F4</span></span>|<span data-ttu-id="d0db2-296">{F4}</span><span class="sxs-lookup"><span data-stu-id="d0db2-296">{F4}</span></span>|  
|<span data-ttu-id="d0db2-297">F5</span><span class="sxs-lookup"><span data-stu-id="d0db2-297">F5</span></span>|<span data-ttu-id="d0db2-298">{F5}</span><span class="sxs-lookup"><span data-stu-id="d0db2-298">{F5}</span></span>|  
|<span data-ttu-id="d0db2-299">F6</span><span class="sxs-lookup"><span data-stu-id="d0db2-299">F6</span></span>|<span data-ttu-id="d0db2-300">{F6}</span><span class="sxs-lookup"><span data-stu-id="d0db2-300">{F6}</span></span>|  
|<span data-ttu-id="d0db2-301">F7</span><span class="sxs-lookup"><span data-stu-id="d0db2-301">F7</span></span>|<span data-ttu-id="d0db2-302">{F7}</span><span class="sxs-lookup"><span data-stu-id="d0db2-302">{F7}</span></span>|  
|<span data-ttu-id="d0db2-303">F8</span><span class="sxs-lookup"><span data-stu-id="d0db2-303">F8</span></span>|<span data-ttu-id="d0db2-304">{F8}</span><span class="sxs-lookup"><span data-stu-id="d0db2-304">{F8}</span></span>|  
|<span data-ttu-id="d0db2-305">F9</span><span class="sxs-lookup"><span data-stu-id="d0db2-305">F9</span></span>|<span data-ttu-id="d0db2-306">{F9}</span><span class="sxs-lookup"><span data-stu-id="d0db2-306">{F9}</span></span>|  
|<span data-ttu-id="d0db2-307">F10</span><span class="sxs-lookup"><span data-stu-id="d0db2-307">F10</span></span>|<span data-ttu-id="d0db2-308">{F10}</span><span class="sxs-lookup"><span data-stu-id="d0db2-308">{F10}</span></span>|  
|<span data-ttu-id="d0db2-309">F11</span><span class="sxs-lookup"><span data-stu-id="d0db2-309">F11</span></span>|<span data-ttu-id="d0db2-310">{F11}</span><span class="sxs-lookup"><span data-stu-id="d0db2-310">{F11}</span></span>|  
|<span data-ttu-id="d0db2-311">F12</span><span class="sxs-lookup"><span data-stu-id="d0db2-311">F12</span></span>|<span data-ttu-id="d0db2-312">{F12}</span><span class="sxs-lookup"><span data-stu-id="d0db2-312">{F12}</span></span>|  
|<span data-ttu-id="d0db2-313">F13</span><span class="sxs-lookup"><span data-stu-id="d0db2-313">F13</span></span>|<span data-ttu-id="d0db2-314">{F13}</span><span class="sxs-lookup"><span data-stu-id="d0db2-314">{F13}</span></span>|  
|<span data-ttu-id="d0db2-315">F14</span><span class="sxs-lookup"><span data-stu-id="d0db2-315">F14</span></span>|<span data-ttu-id="d0db2-316">{F14}</span><span class="sxs-lookup"><span data-stu-id="d0db2-316">{F14}</span></span>|  
|<span data-ttu-id="d0db2-317">F15</span><span class="sxs-lookup"><span data-stu-id="d0db2-317">F15</span></span>|<span data-ttu-id="d0db2-318">{F15}</span><span class="sxs-lookup"><span data-stu-id="d0db2-318">{F15}</span></span>|  
|<span data-ttu-id="d0db2-319">F16</span><span class="sxs-lookup"><span data-stu-id="d0db2-319">F16</span></span>|<span data-ttu-id="d0db2-320">{F16}</span><span class="sxs-lookup"><span data-stu-id="d0db2-320">{F16}</span></span>|  
|<span data-ttu-id="d0db2-321">键盘添加</span><span class="sxs-lookup"><span data-stu-id="d0db2-321">Keypad add</span></span>|<span data-ttu-id="d0db2-322">{ADD}</span><span class="sxs-lookup"><span data-stu-id="d0db2-322">{ADD}</span></span>|  
|<span data-ttu-id="d0db2-323">数字键盘减号</span><span class="sxs-lookup"><span data-stu-id="d0db2-323">Keypad subtract</span></span>|<span data-ttu-id="d0db2-324">{SUBTRACT}</span><span class="sxs-lookup"><span data-stu-id="d0db2-324">{SUBTRACT}</span></span>|  
|<span data-ttu-id="d0db2-325">数字键盘乘号</span><span class="sxs-lookup"><span data-stu-id="d0db2-325">Keypad multiply</span></span>|<span data-ttu-id="d0db2-326">{乘}</span><span class="sxs-lookup"><span data-stu-id="d0db2-326">{MULTIPLY}</span></span>|  
|<span data-ttu-id="d0db2-327">数字键盘除号</span><span class="sxs-lookup"><span data-stu-id="d0db2-327">Keypad divide</span></span>|<span data-ttu-id="d0db2-328">{DIVIDE}</span><span class="sxs-lookup"><span data-stu-id="d0db2-328">{DIVIDE}</span></span>|  
  
 <span data-ttu-id="d0db2-329">若要指定结合 SHIFT、 CTRL 和 ALT 键的任意组合的密钥，在前面使用一个或多个以下的代码的键代码。</span><span class="sxs-lookup"><span data-stu-id="d0db2-329">To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</span></span>  
  
|<span data-ttu-id="d0db2-330">键</span><span class="sxs-lookup"><span data-stu-id="d0db2-330">Key</span></span>|<span data-ttu-id="d0db2-331">代码</span><span class="sxs-lookup"><span data-stu-id="d0db2-331">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="d0db2-332">SHIFT</span><span class="sxs-lookup"><span data-stu-id="d0db2-332">SHIFT</span></span>|+|  
|<span data-ttu-id="d0db2-333">CTRL</span><span class="sxs-lookup"><span data-stu-id="d0db2-333">CTRL</span></span>|^|  
|<span data-ttu-id="d0db2-334">ALT</span><span class="sxs-lookup"><span data-stu-id="d0db2-334">ALT</span></span>|%|  
  
 <span data-ttu-id="d0db2-335">若要指定 SHIFT、 CTRL 和 ALT 的任意组合当按下了几个其他键按住，将这些密钥的代码在括号中。</span><span class="sxs-lookup"><span data-stu-id="d0db2-335">To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</span></span> <span data-ttu-id="d0db2-336">例如，若要指定以按住 SHIFT 并按下 E 和 C，使用"+ (EC)"。</span><span class="sxs-lookup"><span data-stu-id="d0db2-336">For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</span></span> <span data-ttu-id="d0db2-337">若要指定以按住 SHIFT 并按 E 下跟 C 而无需 shift 键，使用"+ EC"。</span><span class="sxs-lookup"><span data-stu-id="d0db2-337">To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</span></span>  
  
 <span data-ttu-id="d0db2-338">若要指定重复键，使用窗体 {密钥号}。</span><span class="sxs-lookup"><span data-stu-id="d0db2-338">To specify repeating keys, use the form {key number}.</span></span> <span data-ttu-id="d0db2-339">你必须放置键和数字之间留一个空格。</span><span class="sxs-lookup"><span data-stu-id="d0db2-339">You must put a space between key and number.</span></span> <span data-ttu-id="d0db2-340">例如，{左 42} 表示 42 时间; 同时按左箭头键{h 10} 意味着的按 H 10 倍。</span><span class="sxs-lookup"><span data-stu-id="d0db2-340">For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0db2-341">由于没有激活其他应用程序的托管的方法，你可以使用当前应用程序中的此类，或者使用本机 Windows 方法，如`FindWindow`和`SetForegroundWindow`、 将焦点强制上其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="d0db2-341">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0db2-342"><xref:System.Windows.Forms.SendKeys> 类已更新为 .NET Framework 3.0，从而可用于在 Windows Vista 上运行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="d0db2-342">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="d0db2-343">Windows Vista 增强的安全性（称为用户帐户控件或 UAC）可避免以前的实现按预期运行。</span><span class="sxs-lookup"><span data-stu-id="d0db2-343">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="d0db2-344"><xref:System.Windows.Forms.SendKeys> 类容易遭受某些开发人员不得不解决的计时问题。</span><span class="sxs-lookup"><span data-stu-id="d0db2-344">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="d0db2-345">更新后的实现仍然容易遇到计时问题，但速度稍微快一些，并且可能需要更改解决方法。</span><span class="sxs-lookup"><span data-stu-id="d0db2-345">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="d0db2-346"><xref:System.Windows.Forms.SendKeys> 类先尝试使用以前的实现，失败后再使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="d0db2-346">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="d0db2-347">因此， <xref:System.Windows.Forms.SendKeys> 类在不同操作系统上的运行方式可能不同。</span><span class="sxs-lookup"><span data-stu-id="d0db2-347">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="d0db2-348">此外，当 <xref:System.Windows.Forms.SendKeys> 类使用新的实现时， <xref:System.Windows.Forms.SendKeys.SendWait%2A> 方法不会等到消息被处理后才将其发送至其他进程。</span><span class="sxs-lookup"><span data-stu-id="d0db2-348">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="d0db2-349">如果如论使用何种操作系统，你的应用程序均依赖于一致的行为，则可通过将以下应用程序设置添加至 app.config 文件强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="d0db2-349">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="d0db2-350">若要强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用以前的实现，请改用 `"JournalHook"` 值。</span><span class="sxs-lookup"><span data-stu-id="d0db2-350">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0db2-351">下面的代码示例演示如何使用<xref:System.Windows.Forms.SendKeys.Send%2A>方法。若要运行该示例，将粘贴下面的代码在一个称为 form1 窗体包含一个按钮调用 Button1。</span><span class="sxs-lookup"><span data-stu-id="d0db2-351">The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method.To run the example, paste the following code in a form called Form1 containing a button called Button1.</span></span> <span data-ttu-id="d0db2-352">请确保单击事件与此示例中其事件处理方法关联。</span><span class="sxs-lookup"><span data-stu-id="d0db2-352">Ensure the click events are associated with their event-handling methods in this example.</span></span> <span data-ttu-id="d0db2-353">按钮控件的<xref:System.Windows.Forms.Control.TabIndex%2A>属性应设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d0db2-353">The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0.</span></span> <span data-ttu-id="d0db2-354">当运行示例时，双击窗体触发该按钮的 click 事件。</span><span class="sxs-lookup"><span data-stu-id="d0db2-354">When the example is running, double-click the form to trigger the button's click event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.SendKeys#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.SendKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.SendKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d0db2-355">没有可向其发送击键的活动应用程序。</span><span class="sxs-lookup"><span data-stu-id="d0db2-355">There is not an active application to send keystrokes to.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0db2-356"><paramref name="keys" /> 并不表示有效击键</span><span class="sxs-lookup"><span data-stu-id="d0db2-356"><paramref name="keys" /> does not represent valid keystrokes</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d0db2-357">对于非托管代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="d0db2-357">for unmanaged code to call this method.</span></span> <span data-ttu-id="d0db2-358">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d0db2-358">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendWait">
      <MemberSignature Language="C#" Value="public static void SendWait (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendWait(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SendWait (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SendWait(System::String ^ keys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="d0db2-359">要发送的击键字符串。</span><span class="sxs-lookup"><span data-stu-id="d0db2-359">The string of keystrokes to send.</span></span></param>
        <summary><span data-ttu-id="d0db2-360">向活动应用程序发送给定的键，然后等待消息被处理。</span><span class="sxs-lookup"><span data-stu-id="d0db2-360">Sends the given keys to the active application, and then waits for the messages to be processed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0db2-361">使用<xref:System.Windows.Forms.SendKeys.SendWait%2A>来向活动应用程序发送击键或的击键组合并等待击键消息被处理。</span><span class="sxs-lookup"><span data-stu-id="d0db2-361">Use <xref:System.Windows.Forms.SendKeys.SendWait%2A> to send keystrokes or combinations of keystrokes to the active application and wait for the keystroke messages to be processed.</span></span> <span data-ttu-id="d0db2-362">此方法可用于将击键发送到应用程序并等待通过击键完成启动任何进程。</span><span class="sxs-lookup"><span data-stu-id="d0db2-362">You can use this method to send keystrokes to an application and wait for any processes that are started by the keystrokes to be completed.</span></span> <span data-ttu-id="d0db2-363">这可能很重要，如果在你的应用程序可以继续之前，必须完成其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="d0db2-363">This can be important if the other application must finish before your application can continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0db2-364">由于没有激活其他应用程序的托管的方法，你可以使用当前应用程序中的此类，或者使用本机 Windows 方法，如`FindWindow`和`SetForegroundWindow`、 将焦点强制上其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="d0db2-364">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0db2-365"><xref:System.Windows.Forms.SendKeys> 类已更新为 .NET Framework 3.0，从而可用于在 Windows Vista 上运行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="d0db2-365">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="d0db2-366">Windows Vista 增强的安全性（称为用户帐户控件或 UAC）可避免以前的实现按预期运行。</span><span class="sxs-lookup"><span data-stu-id="d0db2-366">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="d0db2-367"><xref:System.Windows.Forms.SendKeys> 类容易遭受某些开发人员不得不解决的计时问题。</span><span class="sxs-lookup"><span data-stu-id="d0db2-367">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="d0db2-368">更新后的实现仍然容易遇到计时问题，但速度稍微快一些，并且可能需要更改解决方法。</span><span class="sxs-lookup"><span data-stu-id="d0db2-368">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="d0db2-369"><xref:System.Windows.Forms.SendKeys> 类先尝试使用以前的实现，失败后再使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="d0db2-369">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="d0db2-370">因此， <xref:System.Windows.Forms.SendKeys> 类在不同操作系统上的运行方式可能不同。</span><span class="sxs-lookup"><span data-stu-id="d0db2-370">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="d0db2-371">此外，当 <xref:System.Windows.Forms.SendKeys> 类使用新的实现时， <xref:System.Windows.Forms.SendKeys.SendWait%2A> 方法不会等到消息被处理后才将其发送至其他进程。</span><span class="sxs-lookup"><span data-stu-id="d0db2-371">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="d0db2-372">如果如论使用何种操作系统，你的应用程序均依赖于一致的行为，则可通过将以下应用程序设置添加至 app.config 文件强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="d0db2-372">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="d0db2-373">若要强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用以前的实现，请改用 `"JournalHook"` 值。</span><span class="sxs-lookup"><span data-stu-id="d0db2-373">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d0db2-374">对于非托管代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="d0db2-374">for unmanaged code to call this method.</span></span> <span data-ttu-id="d0db2-375">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d0db2-375">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>