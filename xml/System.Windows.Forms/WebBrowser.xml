<Type Name="WebBrowser" FullName="System.Windows.Forms.WebBrowser">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7269edef069d2414573d61fd68abb32ae499f316" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51905291" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebBrowser : System.Windows.Forms.WebBrowserBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebBrowser extends System.Windows.Forms.WebBrowserBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.WebBrowser" />
  <TypeSignature Language="VB.NET" Value="Public Class WebBrowser&#xA;Inherits WebBrowserBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebBrowser : System::Windows::Forms::WebBrowserBase" />
  <TypeSignature Language="F#" Value="type WebBrowser = class&#xA;    inherit WebBrowserBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.WebBrowserBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("DocumentCompleted")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Url")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.WebBrowserDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.AutoDock)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.WebBrowserDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>使用户能够在你的窗体中导航网页。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件允许您承载网页和 Windows 窗体应用程序中其他启用浏览器的文档。 可以使用<xref:System.Windows.Forms.WebBrowser>控制，例如，若要提供集成的基于 HTML 的用户协助或 Web 应用程序中的浏览功能。 此外，还可以使用<xref:System.Windows.Forms.WebBrowser>控件将你现有的基于 Web 的控件添加到 Windows 窗体客户端应用程序。  
  
> [!IMPORTANT]
>  <xref:System.Windows.Forms.WebBrowser>控件是占用大量资源。 请务必调用<xref:System.ComponentModel.Component.Dispose>方法完成后使用该控件以确保及时释放所有资源。 必须调用<xref:System.ComponentModel.Component.Dispose>附加事件，应始终为消息的同一线程或用户界面 (UI) 线程上的方法。  
  
 <xref:System.Windows.Forms.WebBrowser>控件不能由部分受信任的代码。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
 <xref:System.Windows.Forms.WebBrowser>控件具有多个属性、 方法和与导航相关的事件。 以下成员可以将控件导航到特定的 URL、 向后移动和前进导航历史记录列表，以及加载主页和当前用户的搜索页：  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 如果导航不成功，会显示一个页面，指示该问题。 使用这些成员原因的任何导航<xref:System.Windows.Forms.WebBrowser.Navigating>， <xref:System.Windows.Forms.WebBrowser.Navigated>，和<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>在导航的不同阶段发生的事件。  
  
 这些和其他成员，如<xref:System.Windows.Forms.WebBrowser.Stop%2A>和<xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法，使您可以在 Internet Explorer 中类似的应用程序中实现用户界面控件。 一些成员将非常有用，即使您不想要显示<xref:System.Windows.Forms.WebBrowser>窗体上的控件。 例如，可以使用<xref:System.Windows.Forms.WebBrowser.Print%2A>方法打印网页的最新版本，而不向用户显示页面。  
  
 <xref:System.Windows.Forms.WebBrowser>控件，您还可以显示在应用程序中创建或检索从数据库或资源文件的内容。 使用<xref:System.Windows.Forms.WebBrowser.DocumentText%2A>或<xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>属性来获取或设置当前文档的内容作为字符串或数据的流。  
  
 你还能够通过 Web 页面的内容<xref:System.Windows.Forms.WebBrowser.Document%2A>属性，其中包含<xref:System.Windows.Forms.HtmlDocument>提供托管的 HTML 文档对象模型 (DOM) 对用于访问当前页的对象。 结合使用时，此属性非常有用，<xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A>属性，以在 Web 页中，让你组合基于 Web 的控件和 Windows 窗体控件中的实现你的应用程序代码和动态 HTML (DHTML) 代码之间的双向通信一个用户界面。 可以使用<xref:System.Windows.Forms.WebBrowser.Document%2A>属性来从应用程序中调用代码的脚本方法。 在脚本编写的代码可以访问你的应用程序通过`window.external`对象，这是用于进行主机访问提供的内置 DOM 对象，它映射到为指定的对象<xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A>属性。  
  
 <xref:System.Windows.Forms.WebBrowser>控件是一个托管的包装的 ActiveX [WebBrowser 控件](https://go.microsoft.com/fwlink/?LinkId=198812)，并使用用户的计算机上安装任何版本的控件。  
  
> [!NOTE]
>  此类，可以在类级别的安全要求。 一个<xref:System.Security.SecurityException>派生的类或调用堆栈中的任何调用方没有完全信任权限时引发。 有关安全要求的详细信息，请参阅[链接需求](~/docs/framework/misc/link-demands.md)并[继承需求](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.WebBrowser>类仅可在线程设置为单线程单元 (STA) 模式。 若要使用此类，请确保你`Main`方法将标有<xref:System.STAThreadAttribute>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何实现与一起使用的地址栏<xref:System.Windows.Forms.WebBrowser>控件。 此示例要求有一个包含窗体<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`、 一个<xref:System.Windows.Forms.TextBox>控件调用`TextBoxAddress`，和一个<xref:System.Windows.Forms.Button>控件调用`ButtonGo`。 当在文本框中键入的 URL 并按 ENTER 或单击**转**按钮，<xref:System.Windows.Forms.WebBrowser>控件导航到指定的 URL。 导航时通过单击超链接，在文本框中将会自动更新以显示当前的 URL。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">为派生类可以继承此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
    <related type="Article" href="https://msdn.microsoft.com/library/12667861-5b5b-46bc-8fb5-675e25264c9f">WebBrowser 控件（Windows 窗体）</related>
    <related type="Article" href="https://msdn.microsoft.com/library/dd66cd4c-b087-415f-9c3e-94e3a1835f74">通过部分受信任的代码使用库</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebBrowser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebBrowser();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.WebBrowser" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，<xref:System.Windows.Forms.WebBrowser>控件为空。 若要导航到初始文档，将设置<xref:System.Windows.Forms.WebBrowser.Url%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将此成员。  
  
 [!code-csharp[WebBrowserMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#10)]
 [!code-vb[WebBrowserMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Windows.Forms.WebBrowser" /> 控件承载于 Internet Explorer 中。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="AllowNavigation">
      <MemberSignature Language="C#" Value="public bool AllowNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.AllowNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNavigation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNavigation : bool with get, set" Usage="System.Windows.Forms.WebBrowser.AllowNavigation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示控件在加载其初始页之后是否可以导航到其他页。</summary>
        <value>如果控件可以导航到其他页，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性不会阻止您通过设置来加载初始页<xref:System.Windows.Forms.WebBrowser.Url%2A>，<xref:System.Windows.Forms.WebBrowser.DocumentText%2A>或<xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>属性，但将阻止所有后续导航。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="AllowWebBrowserDrop">
      <MemberSignature Language="C#" Value="public bool AllowWebBrowserDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWebBrowserDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWebBrowserDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWebBrowserDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowWebBrowserDrop : bool with get, set" Usage="System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件是否导航到拖放到它上面的文档。</summary>
        <value>如果控件接受拖放到它上面的文档，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，<xref:System.Windows.Forms.WebBrowser>控件自动导航到拖放到它上面的文档。 作为泛型浏览器使用控件时，此行为很有用。 如果该控件用于显示专门为你的应用程序而设计的内容，如基于 HTML 的用户的帮助，将设置<xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A>属性设置为`false`以防止其他内容的显示。 这是特别有用的当你想要隐藏正在使用的事实<xref:System.Windows.Forms.WebBrowser>控件，例如若要创建无缝结合了基于 Web 的控件与 Windows 窗体控件的用户界面。  
  
 可以通过设置禁用其他标准的浏览器功能<xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A>并<xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A>属性设置为`false`。  
  
> [!NOTE]
>  此属性与无关<xref:System.Windows.Forms.Control.AllowDrop%2A?displayProperty=nameWithType>属性不会导致进行拖放事件如<xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType>事件发生后的控件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A>属性。  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="AttachInterfaces">
      <MemberSignature Language="C#" Value="protected override void AttachInterfaces (object nativeActiveXObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AttachInterfaces(object nativeActiveXObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.AttachInterfaces(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AttachInterfaces (nativeActiveXObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AttachInterfaces(System::Object ^ nativeActiveXObject);" />
      <MemberSignature Language="F#" Value="override this.AttachInterfaces : obj -&gt; unit" Usage="webBrowser.AttachInterfaces nativeActiveXObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeActiveXObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="nativeActiveXObject">表示基础 ActiveX 控件的对象。</param>
        <summary>创建基础 ActiveX 控件时由该控件调用。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <block subset="none" type="overrides">
          <para>派生的类可以重写此方法以将基础 ActiveX 对象转换为适当的接口并将其缓存在成员变量中。 然后，此值必须释放中的重写<see cref="M:System.Windows.Forms.WebBrowserBase.DetachInterfaces" />方法。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="System.Windows.Forms.WebBrowser.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示导航历史记录中的上一页是否可用，如果可用，<see cref="M:System.Windows.Forms.WebBrowser.GoBack" /> 方法才能成功。</summary>
        <value>如果控件可以向后导航，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 <xref:System.Windows.Forms.WebBrowser.GoBack%2A>方法定位<xref:System.Windows.Forms.WebBrowser>如果有可用控制转移到此历史记录中的上一页。 使用<xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>属性来确定导航历史记录是否可用以及是否包含前一页。 如果此属性为`true`，则<xref:System.Windows.Forms.WebBrowser.GoBack%2A>方法将会成功。 否则，调用<xref:System.Windows.Forms.WebBrowser.GoBack%2A>方法将返回值为`false`并不会进行导航。  
  
 你还可以处理<xref:System.Windows.Forms.WebBrowser.CanGoBackChanged>事件以接收通知时<xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>属性更改。 处理此事件非常有用，例如，若要更改的启用的状态**回**按钮时<xref:System.Windows.Forms.WebBrowser>控件导航到或离开的导航历史记录开头。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>属性来实现**回**按钮<xref:System.Windows.Forms.WebBrowser>控件类似于**回**在 Internet Explorer 中的按钮。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`和一个<xref:System.Windows.Forms.Button>控件调用`backButton`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBackChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanGoBackChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanGoBackChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CanGoBackChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanGoBackChanged;" />
      <MemberSignature Language="F#" Value="member this.CanGoBackChanged : EventHandler " Usage="member this.CanGoBackChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Forms.WebBrowser.CanGoBack" /> 属性值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 <xref:System.Windows.Forms.WebBrowser.GoBack%2A>方法定位<xref:System.Windows.Forms.WebBrowser>如果有可用控制转移到此历史记录中的上一页。 <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>属性指示导航历史记录是否可用以及是否包含前一页。 处理<xref:System.Windows.Forms.WebBrowser.CanGoBackChanged>事件以接收通知时<xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>属性更改。 处理此事件非常有用，例如，若要更改的启用的状态**回**按钮时<xref:System.Windows.Forms.WebBrowser>控件导航到或离开的导航历史记录开头。  
  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用的处理程序<xref:System.Windows.Forms.WebBrowser.CanGoBackChanged>事件来实现**回**按钮<xref:System.Windows.Forms.WebBrowser>控件类似于**回**Internet 中的按钮资源管理器。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`和一个<xref:System.Windows.Forms.Button>控件调用`backButton`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="System.Windows.Forms.WebBrowser.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示导航历史记录中的下一页是否可用，如果可用，<see cref="M:System.Windows.Forms.WebBrowser.GoForward" /> 方法才能成功。</summary>
        <value>如果控件可以向前导航，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 <xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法定位<xref:System.Windows.Forms.WebBrowser>如果有可用由于以前的向后导航控制转移到此历史记录中的下一页。 如果此属性为`true`，则<xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法将会成功。 否则，调用<xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法将返回值为`false`并不会进行导航。  
  
 使用<xref:System.Windows.Forms.WebBrowser.CanGoForward%2A>属性来确定导航历史记录是否可用以及是否包含页之后是当前的页允许<xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法才能成功。  
  
 你还可以处理<xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged>事件以接收通知时<xref:System.Windows.Forms.WebBrowser.CanGoForward%2A>属性更改。 处理此事件非常有用，例如，若要更改的启用的状态**向前**按钮时<xref:System.Windows.Forms.WebBrowser>控件导航到或离开导航历史记录的末尾。  
  
   
  
## Examples  
 下面的代码示例演示如何使用的处理程序<xref:System.Windows.Forms.WebBrowser.CanGoForward%2A>事件来实现**向前**按钮<xref:System.Windows.Forms.WebBrowser>控件类似于**向前**按钮Internet Explorer。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`和一个<xref:System.Windows.Forms.Button>控件调用`ButtonForward`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForwardChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanGoForwardChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanGoForwardChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CanGoForwardChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanGoForwardChanged;" />
      <MemberSignature Language="F#" Value="member this.CanGoForwardChanged : EventHandler " Usage="member this.CanGoForwardChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Forms.WebBrowser.CanGoForward" /> 属性值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 <xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法定位<xref:System.Windows.Forms.WebBrowser>如果有可用由于以前的向后导航控制转移到此历史记录中的下一页。 <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A>属性指示导航历史记录是否可用以及是否包含页之后是当前的页允许<xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法才能成功。 处理<xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged>事件以接收通知时<xref:System.Windows.Forms.WebBrowser.CanGoForward%2A>属性更改。 处理此事件非常有用，例如，若要更改的启用的状态**向前**按钮时<xref:System.Windows.Forms.WebBrowser>控件导航到或离开导航历史记录的末尾。  
  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法来实现**向前**按钮<xref:System.Windows.Forms.WebBrowser>控件类似于**向前**Internet 中的按钮资源管理器。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`和一个<xref:System.Windows.Forms.Button>控件调用`ButtonForward`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CreateSink">
      <MemberSignature Language="C#" Value="protected override void CreateSink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateSink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.CreateSink" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateSink ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateSink();" />
      <MemberSignature Language="F#" Value="override this.CreateSink : unit -&gt; unit" Usage="webBrowser.CreateSink " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使基础 ActiveX 控件与可以处理控件事件的客户端相关联。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法很有用，如果您熟悉 OLE 开发使用非托管`WebBrowser`ActiveX 控件，并且想要扩展的 Windows 窗体功能<xref:System.Windows.Forms.WebBrowser>控件，它是 ActiveX 控件的托管包装器。 可以使用此扩展性来实现 ActiveX 控件中未提供的包装器控件的事件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此方法在派生类中<xref:System.Windows.Forms.WebBrowser>补充正常<xref:System.Windows.Forms.WebBrowser>具有事件`NavigateError`事件从 OLE`DWebBrowserEvents2`接口。  
  
 [!code-csharp[WebBrowserExtensibility#00](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserExtensibility/CS/WB2.cs#00)]
 [!code-vb[WebBrowserExtensibility#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserExtensibility/VB/WB2.vb#00)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.DetachSink" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa768283.aspx">DWebBrowserEvents2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="CreateWebBrowserSiteBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.WebBrowserSiteBase CreateWebBrowserSiteBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.WebBrowserSiteBase CreateWebBrowserSiteBase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateWebBrowserSiteBase () As WebBrowserSiteBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::WebBrowserSiteBase ^ CreateWebBrowserSiteBase();" />
      <MemberSignature Language="F#" Value="override this.CreateWebBrowserSiteBase : unit -&gt; System.Windows.Forms.WebBrowserSiteBase" Usage="webBrowser.CreateWebBrowserSiteBase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserSiteBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回对非托管 <see langword="WebBrowser" /> ActiveX 控件站点的引用，扩展该站点可以对托管 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件进行自定义。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" />，表示 <see langword="WebBrowser" /> ActiveX 控件站点。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法很有用，如果您熟悉 OLE 开发使用非托管`WebBrowser`ActiveX 控件，并且想要扩展的 Windows 窗体功能<xref:System.Windows.Forms.WebBrowser>控件，它是 ActiveX 控件的托管包装器。 可以使用此扩展，例如，若要自定义浏览器键盘快捷方式菜单和快捷方式或提供托管的文档的自定义安全配置。  
  
 若要使用此功能，实现从继承的类<xref:System.Windows.Forms.WebBrowser>和<xref:System.Windows.Forms.WebBrowser.WebBrowserSite>类。 非托管`WebBrowser`ActiveX 控件使用受保护<xref:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase%2A>方法来检索由实现扩展性接口<xref:System.Windows.Forms.WebBrowser.WebBrowserSite>类。 重写<xref:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase%2A>方法以返回自己继承的类的实例<xref:System.Windows.Forms.WebBrowser.WebBrowserSite>类。 <xref:System.Windows.Forms.WebBrowser.WebBrowserSite>类提供 OLE 的默认实现`IDocHostUIHandler`接口。 可以提供此接口的实现，也可以实现任何其他`WebBrowser`ActiveX 控件接口，以便自定义控件的行为。  
  
> [!NOTE]
>  如果提供任何实现`IDocHostUIHandler`成员，必须实现该接口的所有成员。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa753260.aspx">IDocHostUIHandler 接口</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.WebBrowser.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取控件的默认大小。</summary>
        <value>获取控件的默认大小。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachInterfaces">
      <MemberSignature Language="C#" Value="protected override void DetachInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DetachInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.DetachInterfaces" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DetachInterfaces ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DetachInterfaces();" />
      <MemberSignature Language="F#" Value="override this.DetachInterfaces : unit -&gt; unit" Usage="webBrowser.DetachInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>放弃基础 ActiveX 控件时由该控件调用。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <block subset="none" type="overrides">
          <para>派生的类可以重写此方法来释放缓存中的重写的基础 ActiveX 对象的引用<see cref="M:System.Windows.Forms.WebBrowserBase.AttachInterfaces(System.Object)" />方法。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DetachSink">
      <MemberSignature Language="C#" Value="protected override void DetachSink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DetachSink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.DetachSink" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DetachSink ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DetachSink();" />
      <MemberSignature Language="F#" Value="override this.DetachSink : unit -&gt; unit" Usage="webBrowser.DetachSink " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从基础 ActiveX 控件中释放附加在 <see cref="M:System.Windows.Forms.WebBrowser.CreateSink" /> 方法中的事件处理客户端。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法很有用，如果您熟悉 OLE 开发使用非托管`WebBrowser`ActiveX 控件，并且想要扩展的 Windows 窗体功能<xref:System.Windows.Forms.WebBrowser>控件，它是 ActiveX 控件的托管包装器。 可以使用此扩展性来实现 ActiveX 控件中未提供的包装器控件的事件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此方法在派生类中<xref:System.Windows.Forms.WebBrowser>补充标准<xref:System.Windows.Forms.WebBrowser>具有事件`NavigateError`事件从 OLE`DWebBrowserEvents2`接口。  
  
 有关完整的代码示例，请参阅<xref:System.Windows.Forms.WebBrowser.CreateSink%2A>。  
  
 [!code-csharp[WebBrowserExtensibility#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserExtensibility/CS/WB2.cs#10)]
 [!code-vb[WebBrowserExtensibility#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserExtensibility/VB/WB2.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.CreateSink" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa768283.aspx">DWebBrowserEvents2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="webBrowser.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
        <summary>释放由 <see cref="T:System.Windows.Forms.WebBrowser" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlDocument Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As HtmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlDocument ^ Document { System::Windows::Forms::HtmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Document : System.Windows.Forms.HtmlDocument" Usage="System.Windows.Forms.WebBrowser.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Windows.Forms.HtmlDocument" />，它表示当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的网页。</summary>
        <value>表示当前页的 <see cref="T:System.Windows.Forms.HtmlDocument" />，如果未加载任何页，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当你想要访问 Web 页面中显示的内容时使用此属性<xref:System.Windows.Forms.WebBrowser>控件通过 HTML 文档对象模型 (DOM)。 这很有用，例如，如果想要在 Windows 窗体应用程序中使用基于 Web 的控件。  
  
 可以结合使用此属性，请<xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A>属性，以显示在网页之间实现双向通信<xref:System.Windows.Forms.WebBrowser>控件和应用程序。 使用<xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=nameWithType>方法来调用在网页上从客户端应用程序代码中实现的脚本方法。 在脚本编写的代码可以访问你的应用程序通过`window.external`对象，这是用于进行主机访问提供的内置 DOM 对象和其映射到为指定的对象<xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A>属性。  
  
 若要访问字符串形式的网页的内容，请使用<xref:System.Windows.Forms.WebBrowser.DocumentText%2A>属性。 若要访问的网页保存为内容<xref:System.IO.Stream>，使用<xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.Document%2A>中的处理程序属性<xref:System.Windows.Forms.WebBrowser.Navigating>事件以确定是否已填充网页窗体。 如果输入的字段不包含一个值，则取消导航。  
  
 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件调用`webBrowser1`。  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="T:System.Windows.Forms.HtmlDocument" />
        <altmember cref="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String,System.Object[])" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.ObjectForScripting" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserDocumentCompletedEventHandler DocumentCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserDocumentCompletedEventHandler DocumentCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event DocumentCompleted As WebBrowserDocumentCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserDocumentCompletedEventHandler ^ DocumentCompleted;" />
      <MemberSignature Language="F#" Value="member this.DocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventHandler " Usage="member this.DocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserDocumentCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件完成加载文档时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>设置以下属性之一，或调用方法时，控件导航到新文档：  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 处理<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>新文档完成加载时接收通知的事件。 当<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>发生事件时，完全加载新文档，这意味着您可以访问通过其内容<xref:System.Windows.Forms.WebBrowser.Document%2A>， <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>，或<xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>属性。  
  
 若要接收通知，在导航开始前，处理<xref:System.Windows.Forms.WebBrowser.Navigating>事件。 处理此事件可以取消导航，如果某些条件未满足，例如，当用户未填写完窗体。 处理<xref:System.Windows.Forms.WebBrowser.Navigated>事件以接收通知时<xref:System.Windows.Forms.WebBrowser>控件完成导航并开始加载新位置上的文档。  
  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何将此事件，以便完全加载后打印文档。  
  
 [!code-csharp[WebBrowserMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#10)]
 [!code-vb[WebBrowserMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream DocumentStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream DocumentStream" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentStream" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ DocumentStream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentStream : System.IO.Stream with get, set" Usage="System.Windows.Forms.WebBrowser.DocumentStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个流，该流包含显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的网页的内容。</summary>
        <value>
          <see cref="T:System.IO.Stream" />，包含当前网页的内容，如果未加载任何页，则为 <see langword="null" />。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性可以加载到网页<xref:System.Windows.Forms.WebBrowser>控件从<xref:System.IO.Stream>对象。 可用于此属性，例如，从数据库或资源文件中加载网页。 当设置此属性，<xref:System.Windows.Forms.WebBrowser>控件自动导航到有关： 空白加载指定的文本之前的 URL。 这意味着<xref:System.Windows.Forms.WebBrowser.Navigating>， <xref:System.Windows.Forms.WebBrowser.Navigated>，并<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>事件发生时设置此属性和值的<xref:System.Windows.Forms.WebBrowser.Url%2A>属性不再是有意义。  
  
> [!NOTE]
>  此属性包含当前文档的内容，即使已请求另一个文档。 如果设置此属性的值，然后立即再次检索，检索到的值可能不同于设置如果的值<xref:System.Windows.Forms.WebBrowser>控件具有没有时间来加载新内容。 可以检索中的新值<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>事件处理程序。  
  
 若要访问字符串形式的网页的内容，请使用<xref:System.Windows.Forms.WebBrowser.DocumentText%2A>属性。 此外可以通过访问使用 HTML 文档对象模型 (DOM) 将页面内容<xref:System.Windows.Forms.WebBrowser.Document%2A>属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="T:System.IO.Stream" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentText">
      <MemberSignature Language="C#" Value="public string DocumentText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentText" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentText : string with get, set" Usage="System.Windows.Forms.WebBrowser.DocumentText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的页的 HTML 内容。</summary>
        <value>显示的页的 HTML 文本，如果未加载任何文档，则为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当你想要操作的 HTML 页中显示的内容时使用此属性<xref:System.Windows.Forms.WebBrowser>控制使用字符串处理工具。 若要从数据库加载页或分析使用正则表达式的页，可以使用此属性，例如。 当设置此属性，<xref:System.Windows.Forms.WebBrowser>控件自动导航到有关： 空白加载指定的文本之前的 URL。 这意味着<xref:System.Windows.Forms.WebBrowser.Navigating>， <xref:System.Windows.Forms.WebBrowser.Navigated>，并<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>事件发生时设置此属性和值的<xref:System.Windows.Forms.WebBrowser.Url%2A>属性不再是有意义。  
  
> [!NOTE]
>  此属性包含当前文档的文本，即使已请求另一个文档。 如果设置此属性的值，然后立即再次检索，检索到的值可能不同于设置如果的值<xref:System.Windows.Forms.WebBrowser>控件具有没有时间来加载新内容。 可以检索中的新值<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>事件处理程序。 或者，您可以阻止该线程，直到通过调用加载文档<xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>直到循环中的方法<xref:System.Windows.Forms.WebBrowser.DocumentText%2A>属性返回最初将其设置为的值。  
  
 若要访问的网页保存为内容<xref:System.IO.Stream>，使用<xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>属性。 此外可以通过访问使用 HTML 文档对象模型 (DOM) 将页面内容<xref:System.Windows.Forms.WebBrowser.Document%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.DocumentText%2A>属性以编程方式显示所选的文档内容。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件调用`webBrowser1`。  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentTitle">
      <MemberSignature Language="C#" Value="public string DocumentTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentTitle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentTitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentTitle : string" Usage="System.Windows.Forms.WebBrowser.DocumentTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的文档的标题。</summary>
        <value>当前文档的标题，如果未加载任何文档，则为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性很有用，例如，如果想要在应用程序的标题栏中显示文档标题。 如果已为当前文档定义没有标题，此属性设置为文档的位置和文件名。  
  
 处理<xref:System.Windows.Forms.WebBrowser.DocumentTitleChanged>事件以更新标题中的标题栏时<xref:System.Windows.Forms.WebBrowser>控件导航到新文档。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A>属性以使用当前文档的标题更新窗体标题栏。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件调用`webBrowser1`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.WebBrowser#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentTitleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DocumentTitleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DocumentTitleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DocumentTitleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DocumentTitleChanged;" />
      <MemberSignature Language="F#" Value="member this.DocumentTitleChanged : EventHandler " Usage="member this.DocumentTitleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" /> 属性值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以处理此事件，若要使用的当前值更新你的应用程序的标题栏<xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A>属性。  
  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用的处理程序<xref:System.Windows.Forms.WebBrowser.DocumentTitleChanged>要与当前文档的标题更新窗体标题栏的事件。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件调用`webBrowser1`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.WebBrowser#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DocumentType">
      <MemberSignature Language="C#" Value="public string DocumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentType : string" Usage="System.Windows.Forms.WebBrowser.DocumentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的文档的类型。</summary>
        <value>当前文档的类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的值对应于文档的多用途 Internet 邮件扩展 (MIME) 类型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="EncryptionLevel">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.WebBrowserEncryptionLevel EncryptionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.WebBrowserEncryptionLevel EncryptionLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptionLevel As WebBrowserEncryptionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::WebBrowserEncryptionLevel EncryptionLevel { System::Windows::Forms::WebBrowserEncryptionLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionLevel : System.Windows.Forms.WebBrowserEncryptionLevel" Usage="System.Windows.Forms.WebBrowser.EncryptionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserEncryptionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的文档所使用的加密方法。</summary>
        <value>
          <see cref="T:System.Windows.Forms.WebBrowserEncryptionLevel" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用此属性与<xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged>事件以在你的应用程序类似于在 Internet Explorer 中的锁状图标的用户界面中实现一个指示器。 如果当前文档未加密，此属性的值是<xref:System.Windows.Forms.WebBrowserEncryptionLevel.Insecure?displayProperty=nameWithType>。 当<xref:System.Windows.Forms.WebBrowser>控件可以显示包含多个帧具有不同的加密级别的内容的网页，此属性的值是<xref:System.Windows.Forms.WebBrowserEncryptionLevel.Mixed?displayProperty=nameWithType>。 未知的加密级别时，此属性的值是<xref:System.Windows.Forms.WebBrowserEncryptionLevel.Unknown?displayProperty=nameWithType>。 其他值表示存在加密类型。 若要模拟的 Internet Explorer 中的锁状图标的行为，当鼠标指针悬停在该标记上时显示工具提示中显示的加密类型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
        <altmember cref="T:System.Windows.Forms.WebBrowserEncryptionLevel" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="EncryptionLevelChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EncryptionLevelChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EncryptionLevelChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event EncryptionLevelChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EncryptionLevelChanged;" />
      <MemberSignature Language="F#" Value="member this.EncryptionLevelChanged : EventHandler " Usage="member this.EncryptionLevelChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件导航到或离开使用了加密的网站时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用与此事件<xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A>属性来实现你的应用程序类似于在 Internet Explorer 中的锁状图标的用户界面中的指示器。 在此事件处理程序中，检查的值<xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A>属性来确定是否应隐藏或显示的指示器。 若要模拟的 Internet Explorer 中的锁状图标的行为，还可以提供当鼠标指针悬停在指示器时显示的加密级别的工具提示。  
  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何将此成员。 在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged>事件。 此报告可帮助您了解事件发生的并可以帮助您进行调试。 若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.WebBrowser>名为`WebBrowser1`。 然后，确保事件处理程序相关联<xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#647](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#647)]
 [!code-vb[System.Windows.Forms.EventExamples#647](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#647)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="FileDownload">
      <MemberSignature Language="C#" Value="public event EventHandler FileDownload;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FileDownload" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.FileDownload" />
      <MemberSignature Language="VB.NET" Value="Public Event FileDownload As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FileDownload;" />
      <MemberSignature Language="F#" Value="member this.FileDownload : EventHandler " Usage="member this.FileDownload : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件下载文件时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何将此成员。 在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.WebBrowser.FileDownload>事件。 此报告可帮助您了解事件发生的并可以帮助您进行调试。 若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.WebBrowser>名为`WebBrowser1`。 然后，确保事件处理程序相关联<xref:System.Windows.Forms.WebBrowser.FileDownload>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#648](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#648)]
 [!code-vb[System.Windows.Forms.EventExamples#648](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#648)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
        <altmember cref="T:System.ComponentModel.CancelEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public override bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Focused : bool" Usage="System.Windows.Forms.WebBrowser.Focused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示控件或其任一子窗口是否具有输入焦点。</summary>
        <value>如果控件或其任一子控件已经有输入焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <block subset="none" type="overrides">
          <para>重写时<see cref="P:System.Windows.Forms.WebBrowser.Focused" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.WebBrowser.Focused" />属性扩展的基实现。 否则，必须提供所有的实现。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public bool GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Function GoBack () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoBack();" />
      <MemberSignature Language="F#" Value="member this.GoBack : unit -&gt; bool" Usage="webBrowser.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果导航历史记录中的上一页可用，则将 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件导航到该页。</summary>
        <returns>如果导航成功，则为 <see langword="true" />；如果导航历史记录中的上一页不可用，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 可以使用<xref:System.Windows.Forms.WebBrowser.GoBack%2A>方法来实现**回**按钮类似于在 Internet Explorer 中，这将允许用户返回到导航历史记录中的上一页。  
  
 使用<xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>属性来确定导航历史记录是否可用以及是否包含前一页。 处理<xref:System.Windows.Forms.WebBrowser.CanGoBackChanged>事件以接收通知时<xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>属性值发生更改。 处理此事件非常有用，例如，若要更改的启用的状态**回**按钮时<xref:System.Windows.Forms.WebBrowser>控件导航到或离开的导航历史记录开头。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.GoBack%2A>方法来实现**回**按钮<xref:System.Windows.Forms.WebBrowser>控件类似于 Internet Explorer 中的一个。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`和一个<xref:System.Windows.Forms.Button>控件调用`backButton`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public bool GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Function GoForward () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoForward();" />
      <MemberSignature Language="F#" Value="member this.GoForward : unit -&gt; bool" Usage="webBrowser.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果导航历史记录中的下一页可用，则将 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件导航到该页。</summary>
        <returns>如果导航成功，则为 <see langword="true" />；如果导航历史记录中的下一页不可用，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 可以使用<xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法来实现**向前**按钮类似于在 Internet Explorer 中，允许用户在向后导航后返回到导航历史记录中的下一页。  
  
 使用<xref:System.Windows.Forms.WebBrowser.CanGoForward%2A>属性来确定导航历史记录是否可用以及是否包含位于后当前页的页。 处理<xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged>事件以接收通知时<xref:System.Windows.Forms.WebBrowser.CanGoForward%2A>属性值发生更改。 处理此事件非常有用，例如，若要更改的启用的状态**向前**按钮时<xref:System.Windows.Forms.WebBrowser>控件导航到或离开导航历史记录的末尾。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法来实现**向前**按钮<xref:System.Windows.Forms.WebBrowser>控件类似于 Internet Explorer 中的一个。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`和一个<xref:System.Windows.Forms.Button>控件调用`ButtonForward`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="GoHome">
      <MemberSignature Language="C#" Value="public void GoHome ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoHome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoHome" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoHome ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoHome();" />
      <MemberSignature Language="F#" Value="member this.GoHome : unit -&gt; unit" Usage="webBrowser.GoHome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件导航到当前用户的主页。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用此方法来实现**主页**类似于 Internet Explorer 中的一个按钮。 用户可以指定在主页上**Internet 选项**对话框中，可从控制面板或从**工具**在 Internet Explorer 中的菜单。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.GoHome%2A>方法来实现**主页**按钮<xref:System.Windows.Forms.WebBrowser>控件类似于 Internet Explorer 中的一个。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`和一个<xref:System.Windows.Forms.Button>控件调用`ButtonHome`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#11)]
 [!code-csharp[System.Windows.Forms.WebBrowser#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.WebBrowser#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="GoSearch">
      <MemberSignature Language="C#" Value="public void GoSearch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoSearch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoSearch" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoSearch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoSearch();" />
      <MemberSignature Language="F#" Value="member this.GoSearch : unit -&gt; unit" Usage="webBrowser.GoSearch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件导航到当前用户的默认搜索页。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可用于实现搜索功能类似于 Internet Explorer 中的一个。 具体取决于安装的 Internet Explorer 的版本，用户可以指定中的默认搜索页**Internet 选项**对话框中，可从控制面板或从**工具**中的菜单Internet Explorer。  
  
 注册表中存储的默认搜索页`HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main\Search Page`注册表项。 使用更高版本的 Internet 资源管理器中，必须修改此注册表项，以更改此方法使用的默认搜索页。 若要使用非默认的搜索页面，请调用<xref:System.Windows.Forms.WebBrowser.Navigate%2A>方法或指定<xref:System.Windows.Forms.WebBrowser.Url%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.GoSearch%2A>方法来实现**搜索**按钮<xref:System.Windows.Forms.WebBrowser>控件类似于 Internet Explorer 中的一个。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`和一个<xref:System.Windows.Forms.Button>控件调用`ButtonSearch`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#12)]
 [!code-csharp[System.Windows.Forms.WebBrowser#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#12)]
 [!code-vb[System.Windows.Forms.WebBrowser#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.Windows.Forms.WebBrowser.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件当前是否正在加载新文档。</summary>
        <value>如果控件正在加载文档，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果此属性为`true`，可以使用<xref:System.Windows.Forms.WebBrowser.Stop%2A>完全加载新文档之前停止当前导航的方法。 使用<xref:System.Windows.Forms.WebBrowser.ReadyState%2A>属性来确定的确切的导航状态<xref:System.Windows.Forms.WebBrowser>控件。 <xref:System.Windows.Forms.WebBrowser.IsBusy%2A>时，属性值为 false<xref:System.Windows.Forms.WebBrowser.ReadyState%2A>属性值是<xref:System.Windows.Forms.WebBrowserReadyState.Complete?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.ReadyState" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="IsOffline">
      <MemberSignature Language="C#" Value="public bool IsOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffline : bool" Usage="System.Windows.Forms.WebBrowser.IsOffline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件是否处于脱机模式。</summary>
        <value>如果 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件处于脱机模式，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在脱机模式下，<xref:System.Windows.Forms.WebBrowser>强制控制从本地缓存，而无需将其下载加载 Web 页。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="IsWebBrowserContextMenuEnabled">
      <MemberSignature Language="C#" Value="public bool IsWebBrowserContextMenuEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebBrowserContextMenuEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsWebBrowserContextMenuEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebBrowserContextMenuEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsWebBrowserContextMenuEnabled : bool with get, set" Usage="System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件是否启用了快捷菜单。</summary>
        <value>如果启用了 <see langword="true" /> 控件快捷菜单，则为 <see cref="T:System.Windows.Forms.WebBrowser" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，<xref:System.Windows.Forms.WebBrowser>控件在用户右键单击它时显示快捷菜单。 作为泛型浏览器使用控件时，此行为很有用。 如果你想要隐藏正在使用的事实<xref:System.Windows.Forms.WebBrowser>控件，例如若要创建无缝结合了基于 Web 的控件与 Windows 窗体控件的用户界面设置<xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A>属性设置为 false。  
  
 可以通过设置禁用其他标准的浏览器功能<xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A>和<xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A>属性为 false。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A>属性。  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将指定位置的文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string -&gt; unit" Usage="webBrowser.Navigate urlString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">要加载的文档的 URL。</param>
        <summary>将指定的统一资源定位器 (URL) 处的文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，替换上一个文档。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 当调用此重载<xref:System.Windows.Forms.WebBrowser>控件导航到指定的 URI，并将其添加到历史记录列表的末尾。 使用<xref:System.Windows.Forms.WebBrowser.GoBack%2A>方法以将控件返回到导航历史记录中的上一页。 使用<xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法以向后导航后返回到导航历史记录中的更高版本页面。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将从最近访问过的网站的 Web 页面存储在本地硬盘上的缓存。 每一页可指定过期日期，该值指示它将保留的时间在缓存中。 当控件导航到页面时，它通过显示缓存的版本，如果可用，而不是重新下载页上节省时间。 使用<xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法，以强制<xref:System.Windows.Forms.WebBrowser>控件通过来重新加载当前页面下载它，请确保该控件显示的最新版本。  
  
 可以使用<xref:System.Windows.Forms.WebBrowser.Navigate%2A>方法来实现类似于 Internet Explorer 地址栏。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; unit" Usage="webBrowser.Navigate url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="url">
          <see cref="T:System.Uri" />，表示要加载的文档的 URL。</param>
        <summary>将指定的 <see cref="T:System.Uri" /> 所指示的位置上的文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，替换上一个文档。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 当调用此重载<xref:System.Windows.Forms.WebBrowser>控件导航到指定的 URI，并将其添加到历史记录列表的末尾。 使用<xref:System.Windows.Forms.WebBrowser.GoBack%2A>方法以将控件返回到导航历史记录中的上一页。 使用<xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法以向后导航后返回到导航历史记录中的更高版本页面。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将从最近访问过的网站的 Web 页面存储在本地硬盘上的缓存。 每一页可指定过期日期，该值指示它将保留的时间在缓存中。 当控件导航到页面时，它通过显示缓存的版本，如果可用，而不是重新下载页上节省时间。 使用<xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法，以强制<xref:System.Windows.Forms.WebBrowser>控件通过来重新加载当前页面下载它，请确保该控件显示的最新版本。  
  
 可以使用<xref:System.Windows.Forms.WebBrowser.Navigate%2A>方法来实现类似于 Internet Explorer 地址栏。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.Navigate%2A>方法来实现的地址栏<xref:System.Windows.Forms.WebBrowser>控件。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`、 一个<xref:System.Windows.Forms.TextBox>控件调用`TextBoxAddress`，和一个<xref:System.Windows.Forms.Button>控件调用`ButtonGo`。 当在文本框中键入的 URL 并按 ENTER 或单击**转**按钮，<xref:System.Windows.Forms.WebBrowser>控件导航到指定的 URL。 导航时通过单击超链接，在文本框中将会自动更新以显示当前的 URL。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="url" /> 参数值不表示绝对 URI。 有关详情，请参阅<see cref="P:System.Uri.IsAbsoluteUri" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, bool newWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, bool newWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, newWindow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, bool newWindow);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string * bool -&gt; unit" Usage="webBrowser.Navigate (urlString, newWindow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="newWindow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="urlString">要加载的文档的 URL。</param>
        <param name="newWindow">若要将文档加载到浏览器新窗口中，则为 <see langword="true" />；若要将文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，则为 <see langword="false" />。</param>
        <summary>将指定的统一资源定位器 (URL) 处的文档加载到浏览器新窗口或 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 当调用此重载具有`newWindow`的参数值`false`，控件通常情况下导航到指定的 URI，并将 URI 添加到历史记录列表的末尾。 当调用此重载具有`newWindow`的参数值`true`，则<xref:System.Windows.Forms.WebBrowser>控件指定 URI 处的文档加载到新的 Internet Explorer 窗口，可维护其自己的导航历史记录。 您可以处理<xref:System.Windows.Forms.WebBrowser.NewWindow>事件以前收到通知打开一个新的浏览器窗口，以允许您取消操作，如有必要。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将从最近访问过的网站的 Web 页面存储在本地硬盘上的缓存。 每一页可指定过期日期，该值指示它将保留的时间在缓存中。 当控件导航到的页面或将页面加载到一个单独的浏览器窗口时，它通过显示缓存的版本，如果可用，而不是重新下载页上节省时间。 使用<xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法，以强制<xref:System.Windows.Forms.WebBrowser>控件通过来重新加载当前页面下载它，请确保该控件显示的最新版本。 页面加载到一个单独的 Internet Explorer 窗口中，用户可以通过单击检索最新版本**刷新**按钮。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, string targetFrameName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, string targetFrameName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, targetFrameName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, System::String ^ targetFrameName);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string * string -&gt; unit" Usage="webBrowser.Navigate (urlString, targetFrameName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="targetFrameName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">要加载的文档的 URL。</param>
        <param name="targetFrameName">要在其中加载文档的框架的名称。</param>
        <summary>将指定的统一资源定位器 (URL) 处的文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，替换具有指定名称的网页框架的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 当调用此重载<xref:System.Windows.Forms.WebBrowser>控件指定 URI 处的文档加载到具有指定名称的网页框架，并将 URI 添加到历史记录列表的末尾。 如果指定的框架名称无效，该文档加载到新的 Internet Explorer 窗口中。  
  
 使用<xref:System.Windows.Forms.WebBrowser.GoBack%2A>方法以将控件返回到导航历史记录中的上一页。 使用<xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法以向后导航后返回到导航历史记录中的更高版本页面。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将从最近访问过的网站的 Web 页面存储在本地硬盘上的缓存。 每一页可指定过期日期，该值指示它将保留的时间在缓存中。 当控件导航到页面时，它通过显示缓存的版本，如果可用，而不是重新下载页上节省时间。 使用<xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法，以强制<xref:System.Windows.Forms.WebBrowser>控件通过来重新加载当前页面下载它，请确保该控件显示的最新版本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, bool newWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, bool newWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, newWindow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, bool newWindow);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * bool -&gt; unit" Usage="webBrowser.Navigate (url, newWindow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="newWindow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url">
          <see cref="T:System.Uri" />，表示要加载的文档的 URL。</param>
        <param name="newWindow">若要将文档加载到浏览器新窗口中，则为 <see langword="true" />；若要将文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，则为 <see langword="false" />。</param>
        <summary>将指定的 <see cref="T:System.Uri" /> 所指示的位置上的文档加载到浏览器新窗口或 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 当调用此重载具有`newWindow`的参数值`false`，控件通常情况下导航到指定的 URI，并将 URI 添加到历史记录列表的末尾。 当调用此重载具有`newWindow`的参数值`true`，则<xref:System.Windows.Forms.WebBrowser>控件指定 URI 处的文档加载到新的 Internet Explorer 窗口，可维护其自己的导航历史记录。 您可以处理<xref:System.Windows.Forms.WebBrowser.NewWindow>事件以前收到通知打开一个新的浏览器窗口，以允许您取消操作，如有必要。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将从最近访问过的网站的 Web 页面存储在本地硬盘上的缓存。 每一页可指定过期日期，该值指示它将保留的时间在缓存中。 当控件导航到的页面或将页面加载到一个单独的浏览器窗口时，它通过显示缓存的版本，如果可用，而不是重新下载页上节省时间。 使用<xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法，以强制<xref:System.Windows.Forms.WebBrowser>控件通过来重新加载当前页面下载它，请确保该控件显示的最新版本。 页面加载到一个单独的 Internet Explorer 窗口中，用户可以通过单击检索最新版本**刷新**按钮。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="url" /> 参数值不表示绝对 URI。 有关详情，请参阅<see cref="P:System.Uri.IsAbsoluteUri" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, string targetFrameName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, string targetFrameName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, targetFrameName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, System::String ^ targetFrameName);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * string -&gt; unit" Usage="webBrowser.Navigate (url, targetFrameName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="targetFrameName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <see cref="T:System.Uri" />，表示要加载的文档的 URL。</param>
        <param name="targetFrameName">要在其中加载文档的框架的名称。</param>
        <summary>将指定的 <see cref="T:System.Uri" /> 所指示的位置上的文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，替换具有指定名称的网页框架的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 当调用此重载<xref:System.Windows.Forms.WebBrowser>控件指定 URI 处的文档加载到具有指定名称的网页框架，并将 URI 添加到历史记录列表的末尾。 如果指定的框架名称无效，该文档加载到新的 Internet Explorer 窗口中。  
  
 使用<xref:System.Windows.Forms.WebBrowser.GoBack%2A>方法以将控件返回到导航历史记录中的上一页。 使用<xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法以向后导航后返回到导航历史记录中的更高版本页面。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将从最近访问过的网站的 Web 页面存储在本地硬盘上的缓存。 每一页可指定过期日期，该值指示它将保留的时间在缓存中。 当控件导航到页面时，它通过显示缓存的版本，如果可用，而不是重新下载页上节省时间。 使用<xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法，以强制<xref:System.Windows.Forms.WebBrowser>控件通过来重新加载当前页面下载它，请确保该控件显示的最新版本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="url" /> 参数值不表示绝对 URI。 有关详情，请参阅<see cref="P:System.Uri.IsAbsoluteUri" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string * string * byte[] * string -&gt; unit" Usage="webBrowser.Navigate (urlString, targetFrameName, postData, additionalHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">要加载的文档的 URL。</param>
        <param name="targetFrameName">要在其中加载文档的框架的名称。</param>
        <param name="postData">HTTP POST 数据，例如窗体数据。</param>
        <param name="additionalHeaders">要添加到默认标头中的 HTTP 标头。</param>
        <summary>将指定的统一资源定位器 (URL) 处的文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，使用指定 HTTP 数据请求该文档并替换具有指定名称的网页框架的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 当调用此重载<xref:System.Windows.Forms.WebBrowser>控件指定 URI 处的文档加载到具有指定名称的网页框架，并将 URI 添加到历史记录列表的末尾。 如果指定的框架名称无效，该文档加载到新的 Internet Explorer 窗口中。  
  
 使用<xref:System.Windows.Forms.WebBrowser.GoBack%2A>方法以将控件返回到导航历史记录中的上一页。 使用<xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法以向后导航后返回到导航历史记录中的更高版本页面。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将从最近访问过的网站的 Web 页面存储在本地硬盘上的缓存。 每一页可指定过期日期，该值指示它将保留的时间在缓存中。 当控件导航到页面时，它通过显示缓存的版本，如果可用，而不是重新下载页上节省时间。 使用<xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法，以强制<xref:System.Windows.Forms.WebBrowser>控件通过来重新加载当前页面下载它，请确保该控件显示的最新版本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * string * byte[] * string -&gt; unit" Usage="webBrowser.Navigate (url, targetFrameName, postData, additionalHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <see cref="T:System.Uri" />，表示要加载的文档的 URL。</param>
        <param name="targetFrameName">要在其中加载文档的框架的名称。</param>
        <param name="postData">HTTP POST 数据，例如窗体数据。</param>
        <param name="additionalHeaders">要添加到默认标头中的 HTTP 标头。</param>
        <summary>将指定的 <see cref="T:System.Uri" /> 所指示的位置上的文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，使用指定 HTTP 数据请求该文档并替换具有指定名称的网页框架的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 当调用此重载<xref:System.Windows.Forms.WebBrowser>控件指定 URI 处的文档加载到具有指定名称的网页框架，并将 URI 添加到历史记录列表的末尾。 如果指定的框架名称无效，该文档加载到新的 Internet Explorer 窗口中。  
  
 使用<xref:System.Windows.Forms.WebBrowser.GoBack%2A>方法以将控件返回到导航历史记录中的上一页。 使用<xref:System.Windows.Forms.WebBrowser.GoForward%2A>方法以向后导航后返回到导航历史记录中的更高版本页面。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将从最近访问过的网站的 Web 页面存储在本地硬盘上的缓存。 每一页可指定过期日期，该值指示它将保留的时间在缓存中。 当控件导航到页面时，它通过显示缓存的版本，如果可用，而不是重新下载页上节省时间。 使用<xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法，以强制<xref:System.Windows.Forms.WebBrowser>控件通过来重新加载当前页面下载它，请确保该控件显示的最新版本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="url" /> 参数值不表示绝对 URI。 有关详情，请参阅<see cref="P:System.Uri.IsAbsoluteUri" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserNavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserNavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigated As WebBrowserNavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserNavigatedEventHandler ^ Navigated;" />
      <MemberSignature Language="F#" Value="member this.Navigated : System.Windows.Forms.WebBrowserNavigatedEventHandler " Usage="member this.Navigated : System.Windows.Forms.WebBrowserNavigatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserNavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件导航到新文档并开始加载该文档时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>设置以下属性之一，或调用方法时，控件导航到新文档：  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 处理<xref:System.Windows.Forms.WebBrowser.Navigated>事件以接收通知时<xref:System.Windows.Forms.WebBrowser>控件已导航到新文档。 当<xref:System.Windows.Forms.WebBrowser.Navigated>发生事件时，新的文档已开始加载，这意味着您可以访问已加载的内容经过<xref:System.Windows.Forms.WebBrowser.Document%2A>， <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>，和<xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>属性。 处理<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>事件以接收通知时<xref:System.Windows.Forms.WebBrowser>控件完成加载新文档。  
  
 您还可以收到通知，通过处理导航开始前<xref:System.Windows.Forms.WebBrowser.Navigating>事件。 处理此事件，可取消导航，如果不满足某些条件，例如，用户未完全填写窗体。  
  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用的处理程序<xref:System.Windows.Forms.WebBrowser.Navigated>事件来实现的地址栏<xref:System.Windows.Forms.WebBrowser>控件。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`、 一个<xref:System.Windows.Forms.TextBox>控件调用`TextBoxAddress`，和一个<xref:System.Windows.Forms.Button>控件调用`ButtonGo`。 当在文本框中键入的 URL 并按 ENTER 或单击**转**按钮，<xref:System.Windows.Forms.WebBrowser>控件导航到指定的 URL。 导航时通过单击超链接，在文本框中将会自动更新以显示当前的 URL。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserNavigatingEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserNavigatingEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigating As WebBrowserNavigatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserNavigatingEventHandler ^ Navigating;" />
      <MemberSignature Language="F#" Value="member this.Navigating : System.Windows.Forms.WebBrowserNavigatingEventHandler " Usage="member this.Navigating : System.Windows.Forms.WebBrowserNavigatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserNavigatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件导航到新文档之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>设置以下属性之一，或调用方法时，控件导航到新文档：  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 您可以处理<xref:System.Windows.Forms.WebBrowser.Navigating>事件取消导航，如果某些条件未满足，例如，当用户未填写完窗体。 若要取消导航，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>的属性<xref:System.Windows.Forms.WebBrowserNavigatingEventArgs>对象传递给事件处理程序`true`。 此外可以使用此对象来检索通过新的文档的 URL<xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.Url%2A?displayProperty=nameWithType>属性。 如果新文档将显示在网页框架，则可以检索通过框架的名称<xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.TargetFrameName%2A?displayProperty=nameWithType>属性。  
  
 处理<xref:System.Windows.Forms.WebBrowser.Navigated>事件以接收通知时<xref:System.Windows.Forms.WebBrowser>控件完成导航并开始加载新位置上的文档。 处理<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>事件以接收通知时<xref:System.Windows.Forms.WebBrowser>控件完成加载新文档。  
  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用的处理程序<xref:System.Windows.Forms.WebBrowser.Navigating>事件取消导航时在未填写网页窗体。 <xref:System.Windows.Forms.WebBrowser.Document%2A>属性用于确定窗体输入的字段是否包含值。  
  
 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`和你窗体的类具有<xref:System.Runtime.InteropServices.ComVisibleAttribute>使其可以访问由 com 使用。  
  
 有关完整的代码示例，可以将以下代码粘贴到，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler NewWindow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler NewWindow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Event NewWindow As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ NewWindow;" />
      <MemberSignature Language="F#" Value="member this.NewWindow : System.ComponentModel.CancelEventHandler " Usage="member this.NewWindow : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在浏览器新窗口打开之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件打开一个单独的浏览器窗口时的适当重载<xref:System.Windows.Forms.WebBrowser.Navigate%2A>调用方法或当用户单击**在新窗口中打开**的浏览器快捷菜单选项时鼠标指针鼠标指针悬停超链接。 可以通过设置禁用的快捷菜单<xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A>属性设置为 false。  
  
 <xref:System.Windows.Forms.WebBrowser.NewWindow>事件发生之前打开新的浏览器窗口。 可以处理此事件，例如，若要防止在窗口打开时不满足某些条件。  
  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何将此成员。 在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.WebBrowser.NewWindow>事件。 此报告可帮助您了解事件发生的并可以帮助您进行调试。 若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.WebBrowser>名为`WebBrowser1`。 然后，确保事件处理程序相关联<xref:System.Windows.Forms.WebBrowser.NewWindow>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#651](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#651)]
 [!code-vb[System.Windows.Forms.EventExamples#651](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#651)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
        <altmember cref="T:System.ComponentModel.CancelEventHandler" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="ObjectForScripting">
      <MemberSignature Language="C#" Value="public object ObjectForScripting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectForScripting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ObjectForScripting" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectForScripting As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectForScripting { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectForScripting : obj with get, set" Usage="System.Windows.Forms.WebBrowser.ObjectForScripting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个对象，该对象可由显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的网页所包含的脚本代码访问。</summary>
        <value>可用于脚本代码的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性用于启用托管的 Web 页面之间的通信<xref:System.Windows.Forms.WebBrowser>控件和应用程序包含<xref:System.Windows.Forms.WebBrowser>控件。 此属性允许集成客户端应用程序代码中动态 HTML (DHTML) 代码。 指定此属性是可用于为网页脚本的对象`window.external`对象，它是用于进行主机访问提供的内置 DOM 对象。  
  
 可以设置想要为其任何 COM 可见对象对其公共属性和方法可用于脚本代码的此属性。 您可以通过将其与标记使 COM 可见类<xref:System.Runtime.InteropServices.ComVisibleAttribute>。  
  
 若要调用从客户端应用程序代码在网页中定义的函数，使用<xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=nameWithType>方法<xref:System.Windows.Forms.HtmlDocument>对象可以从检索<xref:System.Windows.Forms.WebBrowser.Document%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A>属性。 在示例中，<xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A>属性设置为当前窗体。  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">设置该属性时指定的值为非公共类型的实例。  
  
或 
设置该属性时指定的值为非 COM 可见的类型的实例。 有关详情，请参阅<see cref="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="OnCanGoBackChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCanGoBackChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanGoBackChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCanGoBackChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCanGoBackChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCanGoBackChanged : EventArgs -&gt; unit&#xA;override this.OnCanGoBackChanged : EventArgs -&gt; unit" Usage="webBrowser.OnCanGoBackChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnCanGoBackChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCanGoForwardChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCanGoForwardChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanGoForwardChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCanGoForwardChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCanGoForwardChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCanGoForwardChanged : EventArgs -&gt; unit&#xA;override this.OnCanGoForwardChanged : EventArgs -&gt; unit" Usage="webBrowser.OnCanGoForwardChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnDocumentCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDocumentCompleted (System.Windows.Forms.WebBrowserDocumentCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDocumentCompleted(class System.Windows.Forms.WebBrowserDocumentCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDocumentCompleted (e As WebBrowserDocumentCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDocumentCompleted(System::Windows::Forms::WebBrowserDocumentCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventArgs -&gt; unit&#xA;override this.OnDocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventArgs -&gt; unit" Usage="webBrowser.OnDocumentCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnDocumentCompleted%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentTitleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDocumentTitleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDocumentTitleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDocumentTitleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDocumentTitleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDocumentTitleChanged : EventArgs -&gt; unit&#xA;override this.OnDocumentTitleChanged : EventArgs -&gt; unit" Usage="webBrowser.OnDocumentTitleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnEncryptionLevelChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEncryptionLevelChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEncryptionLevelChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEncryptionLevelChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEncryptionLevelChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEncryptionLevelChanged : EventArgs -&gt; unit&#xA;override this.OnEncryptionLevelChanged : EventArgs -&gt; unit" Usage="webBrowser.OnEncryptionLevelChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFileDownload">
      <MemberSignature Language="C#" Value="protected virtual void OnFileDownload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFileDownload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFileDownload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFileDownload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFileDownload : EventArgs -&gt; unit&#xA;override this.OnFileDownload : EventArgs -&gt; unit" Usage="webBrowser.OnFileDownload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.FileDownload" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnFileDownload%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.FileDownload" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigated">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigated (System.Windows.Forms.WebBrowserNavigatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigated(class System.Windows.Forms.WebBrowserNavigatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigated (e As WebBrowserNavigatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigated(System::Windows::Forms::WebBrowserNavigatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNavigated : System.Windows.Forms.WebBrowserNavigatedEventArgs -&gt; unit&#xA;override this.OnNavigated : System.Windows.Forms.WebBrowserNavigatedEventArgs -&gt; unit" Usage="webBrowser.OnNavigated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserNavigatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.Navigated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnNavigated%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigating">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigating (System.Windows.Forms.WebBrowserNavigatingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigating(class System.Windows.Forms.WebBrowserNavigatingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigating (e As WebBrowserNavigatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigating(System::Windows::Forms::WebBrowserNavigatingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNavigating : System.Windows.Forms.WebBrowserNavigatingEventArgs -&gt; unit&#xA;override this.OnNavigating : System.Windows.Forms.WebBrowserNavigatingEventArgs -&gt; unit" Usage="webBrowser.OnNavigating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserNavigatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.Navigating" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnNavigating%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnNewWindow">
      <MemberSignature Language="C#" Value="protected virtual void OnNewWindow (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNewWindow(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNewWindow (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNewWindow(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNewWindow : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnNewWindow : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="webBrowser.OnNewWindow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.NewWindow" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnNewWindow%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
      </Docs>
    </Member>
    <Member MemberName="OnProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnProgressChanged (System.Windows.Forms.WebBrowserProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProgressChanged(class System.Windows.Forms.WebBrowserProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProgressChanged (e As WebBrowserProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProgressChanged(System::Windows::Forms::WebBrowserProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventArgs -&gt; unit&#xA;override this.OnProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventArgs -&gt; unit" Usage="webBrowser.OnProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnProgressChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" />
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnStatusTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStatusTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStatusTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStatusTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStatusTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStatusTextChanged : EventArgs -&gt; unit&#xA;override this.OnStatusTextChanged : EventArgs -&gt; unit" Usage="webBrowser.OnStatusTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnStatusTextChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.StatusText" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.WebBrowser.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此属性对于此控件无意义。</summary>
        <value>
          <see cref="F:System.Windows.Forms.Padding.Empty" />
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="P:System.Windows.Forms.WebBrowser.Padding" /> 属性的值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 尽管可以获取或设置的值<xref:System.Windows.Forms.WebBrowser.Padding%2A>属性并对通过处理此事件的更改作出响应，填充属性不是对此控件有意义。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Padding" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public void Print ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Print() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Print" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Print();" />
      <MemberSignature Language="F#" Value="member this.Print : unit -&gt; unit" Usage="webBrowser.Print " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用当前打印和页面设置打印当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的文档。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用此方法来实现**打印**类似于 Internet Explorer 中的一个按钮。 此方法将当前文档打印而无需进一步的用户输入。 若要显示**打印**之前打印，使用对话框的<xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A>方法。 若要显示**页面设置**对话框中，此对话框允许用户指定标头、 页脚值以及其他页设置，使用<xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A>方法。 若要显示**打印预览**对话框中，使用<xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.Print%2A>方法来实现**打印**按钮<xref:System.Windows.Forms.WebBrowser>控件类似于**打印**在 Internet Explorer 中的按钮。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`和一个<xref:System.Windows.Forms.Button>控件调用`ButtonPrint`。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#13)]
 [!code-csharp[System.Windows.Forms.WebBrowser#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#13)]
 [!code-vb[System.Windows.Forms.WebBrowser#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">若要通过此方法访问打印机。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 关联枚举：<see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserProgressChangedEventHandler ProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserProgressChangedEventHandler ProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.ProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ProgressChanged As WebBrowserProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserProgressChangedEventHandler ^ ProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventHandler " Usage="member this.ProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件已更新有关要导航到的文档的下载进度的信息时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用此事件的处理程序来实现类似于 Internet Explorer 中的一个导航进度栏。 使用<xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.CurrentProgress%2A?displayProperty=nameWithType>属性来确定已成功下载的字节数。 使用<xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.MaximumProgress%2A?displayProperty=nameWithType>属性来确定可供下载的字节总数。  
  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何将此成员。 在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.WebBrowser.ProgressChanged>事件。 此报告可帮助您了解事件发生的并可以帮助您进行调试。 若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.WebBrowser>名为`WebBrowser1`。 然后，确保事件处理程序相关联<xref:System.Windows.Forms.WebBrowser.ProgressChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#652](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#652)]
 [!code-vb[System.Windows.Forms.EventExamples#652](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#652)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ReadyState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.WebBrowserReadyState ReadyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.WebBrowserReadyState ReadyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ReadyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadyState As WebBrowserReadyState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::WebBrowserReadyState ReadyState { System::Windows::Forms::WebBrowserReadyState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadyState : System.Windows.Forms.WebBrowserReadyState" Usage="System.Windows.Forms.WebBrowser.ReadyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserReadyState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件的当前状态。</summary>
        <value>
          <see cref="T:System.Windows.Forms.WebBrowserReadyState" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.WebBrowser.ReadyState%2A>属性来检索特定的状态<xref:System.Windows.Forms.WebBrowser>控制当需要更多消息<xref:System.Windows.Forms.WebBrowser.IsBusy%2A>属性提供。  
  
 当<xref:System.Windows.Forms.WebBrowser>控件不包含一个文档，此属性的值为<xref:System.Windows.Forms.WebBrowserReadyState.Uninitialized?displayProperty=nameWithType>。 导航到新文档时，其他值表示的控件状态。 这些值包括<xref:System.Windows.Forms.WebBrowserReadyState.Loading?displayProperty=nameWithType>， <xref:System.Windows.Forms.WebBrowserReadyState.Loaded?displayProperty=nameWithType>， <xref:System.Windows.Forms.WebBrowserReadyState.Interactive?displayProperty=nameWithType>，和<xref:System.Windows.Forms.WebBrowserReadyState.Complete?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsBusy" />
        <altmember cref="T:System.Windows.Forms.WebBrowserReadyState" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>重新加载当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的文档。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="webBrowser.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>通过检查服务器获取更新版本，重新加载当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的文档。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件将从最近访问过的网站的 Web 页面存储在本地硬盘上的缓存。 每一页可指定过期日期，该值指示它将保留的时间在缓存中。 当控件导航到页面时，它通过显示缓存的版本，如果可用，而不是重新下载页上节省时间。 <xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法强制<xref:System.Windows.Forms.WebBrowser>控件通过来重新加载当前页面下载它，请确保该控件显示的最新版本。 可以使用此方法来实现**刷新**类似于 Internet Explorer 中的一个按钮。  
  
> [!NOTE]
>  文档刷新只重新加载当前页上，因此<xref:System.Windows.Forms.WebBrowser.Navigating>， <xref:System.Windows.Forms.WebBrowser.Navigated>，并<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>事件在调用时不会发生<xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法来实现**刷新**按钮<xref:System.Windows.Forms.WebBrowser>控件类似于 Internet Explorer 中的一个。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`和一个<xref:System.Windows.Forms.Button>控件调用`ButtonRefresh`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.WebBrowser#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.WebBrowser#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Windows.Forms.WebBrowserRefreshOption opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Windows.Forms.WebBrowserRefreshOption opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Refresh(System.Windows.Forms.WebBrowserRefreshOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (opt As WebBrowserRefreshOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Windows::Forms::WebBrowserRefreshOption opt);" />
      <MemberSignature Language="F#" Value="override this.Refresh : System.Windows.Forms.WebBrowserRefreshOption -&gt; unit" Usage="webBrowser.Refresh opt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opt" Type="System.Windows.Forms.WebBrowserRefreshOption" />
      </Parameters>
      <Docs>
        <param name="opt">
          <see cref="T:System.Windows.Forms.WebBrowserRefreshOption" /> 值之一。</param>
        <summary>使用指定的刷新选项重新加载当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的文档。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件将最近访问过的 Web 页面存储在本地硬盘上的缓存。 每一页可指定过期日期，该值指示它将保留的时间在缓存中。 当控件导航到页面时，它通过显示缓存的版本，如果可用，而不是重新下载页上节省时间。 <xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法强制<xref:System.Windows.Forms.WebBrowser>控件来重新加载当前页面。 重新加载的类型取决于<xref:System.Windows.Forms.WebBrowserRefreshOption>指定值。 如果您调用<xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法替换<xref:System.Windows.Forms.WebBrowserRefreshOption.Completely?displayProperty=nameWithType>下载值，该文档的最新版本。 如果使用<xref:System.Windows.Forms.WebBrowserRefreshOption.IfExpired?displayProperty=nameWithType>值，最新版本下载仅当当前文档已过期。 如果使用<xref:System.Windows.Forms.WebBrowserRefreshOption.Normal?displayProperty=nameWithType>值，服务器发送的文档存储在其自己的缓存副本。  
  
> [!NOTE]
>  文档刷新只重新加载当前页上，因此<xref:System.Windows.Forms.WebBrowser.Navigating>， <xref:System.Windows.Forms.WebBrowser.Navigated>，并<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>事件在调用时不会发生<xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="ScriptErrorsSuppressed">
      <MemberSignature Language="C#" Value="public bool ScriptErrorsSuppressed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScriptErrorsSuppressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptErrorsSuppressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScriptErrorsSuppressed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptErrorsSuppressed : bool with get, set" Usage="System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.WebBrowser" /> 是否显示对话框，如脚本错误消息。</summary>
        <value>如果控件不显示其对话框，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将此属性设置为`false`调试中显示的网页<xref:System.Windows.Forms.WebBrowser>控件。 使用该控件将基于 Web 的控件和脚本编写的代码添加到你的应用程序时，这很有用。 它是作为泛型浏览器使用控件时不太有用。 当您已完成调试应用程序，此属性设置为`true`以取消显示脚本错误。  
  
> [!NOTE]
>  当<xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A>设置为`true`，则<xref:System.Windows.Forms.WebBrowser>控件隐藏所有其对话框来自基础 ActiveX 控件，而不仅仅是编写脚本的错误。 有时您可能需要禁止显示对话框，如所使用的浏览器安全设置和用户登录时显示脚本错误。 在这种情况下，设置<xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A>到`false`并禁止显示的处理程序中的脚本错误<xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=nameWithType>事件。 有关详细信息，请参阅本主题中的代码示例。  
  
   
  
## Examples  
 下面的代码示例演示如何取消显示脚本错误，而无需取消显示其他对话框。 在示例中，<xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A>属性设置为`false`以确保显示对话框。 处理程序<xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=nameWithType>事件禁止显示错误。 此事件才可访问，当文档已完成加载，因此处理程序附加在<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>事件处理程序。  
  
 [!code-csharp[WebBrowserMisc#40](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#40)]
 [!code-vb[WebBrowserMisc#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX [WebBrowser control](https://go.microsoft.com/fwlink/?LinkId=151478)（WebBrowser 控件）检索到对 [IWebBrowser2 interface](https://go.microsoft.com/fwlink/?LinkId=151479)（IWebBrowser2 接口）的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollBarsEnabled">
      <MemberSignature Language="C#" Value="public bool ScrollBarsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollBarsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ScrollBarsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBarsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrollBarsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBarsEnabled : bool with get, set" Usage="System.Windows.Forms.WebBrowser.ScrollBarsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中显示滚动条。</summary>
        <value>如果在控件中显示滚动条，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 true。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果此属性的值为`true`，仅当页面内容大于浏览器窗口时，才显示滚动条。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="ShowPageSetupDialog">
      <MemberSignature Language="C#" Value="public void ShowPageSetupDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPageSetupDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPageSetupDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPageSetupDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPageSetupDialog : unit -&gt; unit" Usage="webBrowser.ShowPageSetupDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开 Internet Explorer“页面设置”对话框。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用此方法来实现**页面设置**类似于 Internet Explorer 中的一个菜单项**文件**菜单。 此方法显示**页面设置**对话框中，此对话框允许用户指定页眉和页脚的值，以及在打印之前其他页设置。 若要打印当前文档，请使用<xref:System.Windows.Forms.WebBrowser.Print%2A>方法或<xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A>方法。 若要显示**打印预览**对话框中，使用<xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A>方法来实现**页面设置**类似于 Internet Explorer 中的一个菜单选项**文件**菜单。 此示例要求你的窗体包含带有菜单的菜单项调用`MenuItemFilePageSetup`和一个<xref:System.Windows.Forms.WebBrowser>控件调用`webBrowser1`。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.WebBrowser#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.WebBrowser#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">若要通过此方法访问打印机。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 关联枚举：<see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPrintDialog">
      <MemberSignature Language="C#" Value="public void ShowPrintDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPrintDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPrintDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPrintDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPrintDialog : unit -&gt; unit" Usage="webBrowser.ShowPrintDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开 Internet Explorer 的“打印”对话框，但不设置页眉或页脚值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用此方法来实现**打印**类似于 Internet Explorer 中的一个菜单项**文件**菜单。 此方法显示**打印**对话框中，允许用户在修改之前打印的打印设置。 若要允许用户指定页面设置打印之前，请使用<xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A>方法。 若要显示**打印预览**对话框中，使用<xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A>方法来实现**打印**类似于 Internet Explorer 中的一个菜单选项**文件**菜单。 此示例要求你的窗体包含带有菜单的菜单项调用`MenuItemFilePrint`和一个<xref:System.Windows.Forms.WebBrowser>控件名为 `webBrowser1.`  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.WebBrowser#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.WebBrowser#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">若要通过此方法访问打印机。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 关联枚举：<see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPrintPreviewDialog">
      <MemberSignature Language="C#" Value="public void ShowPrintPreviewDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPrintPreviewDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPrintPreviewDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPrintPreviewDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPrintPreviewDialog : unit -&gt; unit" Usage="webBrowser.ShowPrintPreviewDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开 Internet Explorer 的“打印预览”对话框。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用此方法来实现**打印预览**类似于 Internet Explorer 中的一个菜单项**文件**菜单。 此方法显示**打印预览**对话框，使用户可以查看当前文档打印后。 若要允许用户指定页面设置打印之前，请使用<xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A>方法。 若要打印当前文档，请使用<xref:System.Windows.Forms.WebBrowser.Print%2A>方法或<xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A>方法来实现**打印预览**菜单选项类似于 Internet Explorer 中的一个**文件**菜单。 此示例要求你的窗体包含带有菜单的菜单项调用`MenuItemFilePrintPreview`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.WebBrowser#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.WebBrowser#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">若要通过此方法访问打印机。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 关联枚举：<see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPropertiesDialog">
      <MemberSignature Language="C#" Value="public void ShowPropertiesDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPropertiesDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPropertiesDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPropertiesDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPropertiesDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPropertiesDialog : unit -&gt; unit" Usage="webBrowser.ShowPropertiesDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开当前文档的 Internet Explorer“属性”对话框。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用此方法来实现**属性**菜单选项类似于 Internet Explorer 中的一个**文件**菜单。 此方法显示**属性**对话框，其中包含有关当前文档，例如其类型、 URL、 大小和创建和修改的日期信息。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.ShowPropertiesDialog%2A>方法来实现**属性**类似于 Internet Explorer 中的一个菜单选项**文件**菜单。 此示例要求你的窗体包含带有菜单的菜单项调用`MenuItemFileProperties`和一个<xref:System.Windows.Forms.WebBrowser>控件名为 `webBrowser1.`  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.WebBrowser#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.WebBrowser#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="ShowSaveAsDialog">
      <MemberSignature Language="C#" Value="public void ShowSaveAsDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowSaveAsDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowSaveAsDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowSaveAsDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowSaveAsDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowSaveAsDialog : unit -&gt; unit" Usage="webBrowser.ShowSaveAsDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开 Internet Explorer 的“保存网页”对话框，如果承载的文档不是 HTML 页，则打开其“保存”对话框。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用此方法来实现**另存为**类似于 Internet Explorer 中的一个菜单项**文件**菜单。 调用此方法时，将显示的对话框取决于当前加载的文档类型。  
  
> [!NOTE]
>  此方法允许用户保存文档内容，因为最初加载。 处的文档所做的任何修改运行时通过<xref:System.Windows.Forms.WebBrowser.Document%2A>属性不会保留。 检索运行时修改的信息，请参阅[如何： 访问托管 HTML 文档对象模型中的 HTML 源](~/docs/framework/winforms/controls/how-to-access-the-html-source-in-the-managed-html-document-object-model.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A>方法来实现**另存为**类似于 Internet Explorer 中的一个菜单选项**文件**菜单。 此示例要求你的窗体包含带有菜单的菜单项调用`MenuItemFileSaveAs`和一个<xref:System.Windows.Forms.WebBrowser>控件调用`webBrowser1`。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.WebBrowser#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.WebBrowser#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">若要通过此方法访问打印机。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 关联枚举：<see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
      </Docs>
    </Member>
    <Member MemberName="StatusText">
      <MemberSignature Language="C#" Value="public virtual string StatusText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.StatusText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StatusText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StatusText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StatusText : string" Usage="System.Windows.Forms.WebBrowser.StatusText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件的状态文本。</summary>
        <value>状态文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此属性显示的状态<xref:System.Windows.Forms.WebBrowser>状态栏中的控件。 状态文本是文档的一条消息，当鼠标指针悬停于其和当前加载的 URL 包含例如的 URL 超链接的信息。 处理<xref:System.Windows.Forms.WebBrowser.StatusTextChanged>事件来更新状态的值<xref:System.Windows.Forms.WebBrowser.StatusText%2A>属性更改。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.StatusText%2A>属性来实现的状态条<xref:System.Windows.Forms.WebBrowser>控件类似于 Internet Explorer 中的一个。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`和一个<xref:System.Windows.Forms.StatusBar>控件调用`StatusBar1`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.WebBrowser#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="StatusTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StatusTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StatusTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StatusTextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StatusTextChanged;" />
      <MemberSignature Language="F#" Value="member this.StatusTextChanged : EventHandler " Usage="member this.StatusTextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Forms.WebBrowser.StatusText" /> 属性值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此事件来更新状态栏时的句柄的值<xref:System.Windows.Forms.WebBrowser.StatusText%2A>属性更改。  
  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用的处理程序<xref:System.Windows.Forms.WebBrowser.StatusTextChanged>事件来实现的状态条<xref:System.Windows.Forms.WebBrowser>控件类似于 Internet Explorer 中的一个。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`和一个<xref:System.Windows.Forms.StatusBar>控件调用`StatusBar1`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.WebBrowser#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.StatusText" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="webBrowser.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取消所有挂起的导航并停止所有动态页元素（如背景声音和动画）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用<xref:System.Windows.Forms.WebBrowser.Stop%2A>方法来实现**停止**类似于 Internet Explorer 中的一个按钮。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.Stop%2A>方法来实现**停止**按钮<xref:System.Windows.Forms.WebBrowser>控件类似于 Internet Explorer 中的一个。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`和一个<xref:System.Windows.Forms.Button>控件调用`ButtonStop`。  
  
 有关完整的代码示例，请参阅[如何： 向 Windows 窗体应用程序中添加 Web 浏览器功能](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.WebBrowser#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.WebBrowser#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri with get, set" Usage="System.Windows.Forms.WebBrowser.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.WebBrowserUriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当前文档的 URL。</summary>
        <value>
          <see cref="T:System.Uri" />，表示当前文档的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性等效于调用<xref:System.Windows.Forms.WebBrowser.Navigate%2A>方法并将其传递指定的 URL。  
  
 <xref:System.Windows.Forms.WebBrowser>控件保持所有浏览会话期间访问的网页的历史记录列表。 当您将设置<xref:System.Windows.Forms.WebBrowser.Url%2A>属性，<xref:System.Windows.Forms.WebBrowser>控件导航到指定的 URL，并将其添加到历史记录列表的末尾。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将从最近访问过的网站的 Web 页面存储在本地硬盘上的缓存。 每一页可指定过期日期，该值指示它将保留的时间在缓存中。 当控件导航到页面时，它通过显示缓存的版本，如果可用，而不是重新下载页上节省时间。 使用<xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法，以强制<xref:System.Windows.Forms.WebBrowser>控件通过来重新加载当前页面下载它，请确保该控件显示的最新版本。  
  
> [!NOTE]
>  此属性包含当前文档的 URL，即使已请求另一个文档。 如果设置此属性的值，然后立即再次检索，检索到的值可能不同于设置如果的值<xref:System.Windows.Forms.WebBrowser>控件尚未时才加载新文档。 可以检索中的新值<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>事件处理程序。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.Url%2A>属性来实现的地址栏<xref:System.Windows.Forms.WebBrowser>控件。 此示例要求你的窗体包含<xref:System.Windows.Forms.WebBrowser>控件称为`webBrowser1`、 一个<xref:System.Windows.Forms.TextBox>控件调用`TextBoxAddress`，和一个<xref:System.Windows.Forms.Button>控件调用`ButtonGo`。 当在文本框中键入的 URL 并按 ENTER 或单击**转**按钮，<xref:System.Windows.Forms.WebBrowser>控件导航到指定的 URL。 导航时通过单击超链接，在文本框中将会自动更新以显示当前的 URL。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <exception cref="T:System.ArgumentException">在设置此属性时指定的值不是绝对 URI。 有关详情，请参阅<see cref="P:System.Uri.IsAbsoluteUri" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="System.Windows.Forms.WebBrowser.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取所安装的 Internet Explorer 的版本。</summary>
        <value>
          <see cref="T:System.Version" /> 对象，表示所安装的 Internet Explorer 的版本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件是随 Internet Explorer 一起安装的组件的托管的包装。 使用此属性来确定安装哪个版本的 Internet Explorer。 当你的应用程序使用仅在某些版本中存在的 Internet Explorer 的一项功能时，这很有用。 如果所需的版本不存在于本地计算机上，可以提供替代功能或提示用户进行升级。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowserShortcutsEnabled">
      <MemberSignature Language="C#" Value="public bool WebBrowserShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WebBrowserShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property WebBrowserShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WebBrowserShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WebBrowserShortcutsEnabled : bool with get, set" Usage="System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中是否启用了键盘快捷键。</summary>
        <value>如果控件中启用了键盘快捷键，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将此属性设置为 false 可阻止用户使用 Internet Explorer 键盘快捷方式与<xref:System.Windows.Forms.WebBrowser>控件。 如果想要隐藏正在使用的事实，这是有用<xref:System.Windows.Forms.WebBrowser>控件，例如若要创建无缝结合了基于 DHTML 的控件与 Windows 窗体控件的用户界面。  
  
 可以通过设置禁用其他标准的浏览器功能<xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A>并<xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A>属性设置为`false`。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A>属性。  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">对于直接调用方使用此控件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="webBrowser.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">要处理的 Windows <see cref="T:System.Windows.Forms.Message" />。</param>
        <summary>处理 Windows 消息。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowserBase.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>