<Type Name="DataGridColumnStyle" FullName="System.Windows.Forms.DataGridColumnStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="badc63cf3e66ceec9ba9035c9b6138bcc2f2e0a2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640681" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataGridColumnStyle : System.ComponentModel.Component, System.Windows.Forms.IDataGridColumnStyleEditingNotificationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataGridColumnStyle extends System.ComponentModel.Component implements class System.Windows.Forms.IDataGridColumnStyleEditingNotificationService" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridColumnStyle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataGridColumnStyle&#xA;Inherits Component&#xA;Implements IDataGridColumnStyleEditingNotificationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridColumnStyle abstract : System::ComponentModel::Component, System::Windows::Forms::IDataGridColumnStyleEditingNotificationService" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataGridColumnStyleEditingNotificationService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Header")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定 <see cref="T:System.Windows.Forms.DataGrid" /> 控件列的外观、文本格式和行为。 此类为抽象类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 集合<xref:System.Windows.Forms.DataGridColumnStyle>对象 ( <xref:System.Windows.Forms.GridColumnStylesCollection>) 通过访问<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>控件的<xref:System.Windows.Forms.DataGrid.TableStyles%2A>属性。  
  
 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>控件自动创建的集合<xref:System.Windows.Forms.DataGridColumnStyle>对象为你设置时<xref:System.Windows.Forms.DataGrid.DataSource%2A>到适当的数据源的属性。 创建的对象实际上是继承自的以下类之一的实例<xref:System.Windows.Forms.DataGridColumnStyle>:<xref:System.Windows.Forms.DataGridBoolColumn>或<xref:System.Windows.Forms.DataGridTextBoxColumn>类。  
  
 若要设置格式的数据显示，请设置<xref:System.Windows.Forms.DataGridTextBoxColumn.Format%2A>属性<xref:System.Windows.Forms.DataGridTextBoxColumn>为格式设置的值之一的类。 有关有效格式设置的值的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。  
  
 你还可以创建自己的集<xref:System.Windows.Forms.DataGridColumnStyle>对象，并将其添加到<xref:System.Windows.Forms.GridColumnStylesCollection>。 执行此操作时，必须设置<xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A>到每个列样式的<xref:System.Data.DataColumn.ColumnName%2A>的<xref:System.Data.DataColumn>与实际的数据同步显示列的显示。  
  
> [!CAUTION]
>  始终创建<xref:System.Windows.Forms.DataGridColumnStyle>对象，并将其添加到<xref:System.Windows.Forms.GridColumnStylesCollection>之前添加<xref:System.Windows.Forms.DataGridTableStyle>对象添加到<xref:System.Windows.Forms.GridTableStylesCollection>。 当你将添加一个空<xref:System.Windows.Forms.DataGridTableStyle>使用一个有效<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>到集合中，值<xref:System.Windows.Forms.DataGridColumnStyle>自动为你生成的对象。 如果你尝试添加新因此，将引发异常<xref:System.Windows.Forms.DataGridColumnStyle>对象具有重复<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>值复制到<xref:System.Windows.Forms.GridColumnStylesCollection>。  
  
 当派生类之一通过实例化<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>控件，创建的类取决于<xref:System.Data.DataColumn.DataType%2A>的<xref:System.Data.DataColumn>与关联<xref:System.Windows.Forms.DataGridColumnStyle>对象。 例如，<xref:System.Data.DataColumn>与其<xref:System.Data.DataColumn.DataType%2A>设置为`System.Boolean`将与关联<xref:System.Windows.Forms.DataGridBoolColumn>。 若要确定的任何类型<xref:System.Windows.Forms.DataGridColumnStyle>，使用<xref:System.Object.GetType%2A>方法。  
  
 若要创建您自己的列类，可以继承自<xref:System.Windows.Forms.DataGridColumnStyle>。 你可能想要这样做以便在创建主机控件的特殊列，即为例证<xref:System.Windows.Forms.DataGridTextBox>类，哪些主机<xref:System.Windows.Forms.TextBox>控件。 例如，可以承载<xref:System.Drawing.Image>控件以显示在列中，图片或在列中，可以创建您自己的用户控件到主机。  
  
 功能<xref:System.Windows.Forms.DataGridColumnStyle>不应将其与的混淆<xref:System.Data.DataColumn>。 而<xref:System.Data.DataColumn>包含的属性和方法适用于创建数据表的架构，<xref:System.Windows.Forms.DataGridColumnStyle>包含的属性和方法与在屏幕上的单个列的外观。  
  
 如果某一行包含<xref:System.DBNull.Value?displayProperty=nameWithType>，列中显示的文本可以设置与<xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A>属性。  
  
 <xref:System.Windows.Forms.DataGridColumnStyle>类还允许你指定的列的行为，同时正在改变其数据。 <xref:System.Windows.Forms.DataGridColumnStyle.BeginUpdate%2A>和<xref:System.Windows.Forms.DataGridColumnStyle.EndUpdate%2A>方法暂时挂起列的绘制到列的数据进行大规模更新时。 如果没有此功能，每个单元格的网格中的每个更改将立即绘制;这可能是让人分散注意力向用户和性能责任。  
  
 有多种方法允许用户编辑列的监视包括<xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A>和<xref:System.Windows.Forms.DataGridColumnStyle.Commit%2A>事件。  
  
 大部分属性和类的方法适用于控制列的外观。 但几个，如一样<xref:System.Windows.Forms.DataGridColumnStyle.GetColumnValueAtRow%2A>和<xref:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow%2A>可用于检查和更改中指定的单元格的值。  
  
   
  
## Examples  
 下面的代码示例创建<xref:System.Windows.Forms.DataGridColumnStyle>承载<xref:System.Windows.Forms.DateTimePicker>控件。  
  
 [!code-cpp[DataGridColumnStyle Overview#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle Overview/CPP/timecolumn.cpp#1)]
 [!code-csharp[DataGridColumnStyle Overview#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle Overview/CS/timecolumn.cs#1)]
 [!code-vb[DataGridColumnStyle Overview#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle Overview/VB/timecolumn.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>继承自<see cref="T:System.Windows.Forms.DataGridColumnStyle" />，必须重写以下成员： <see cref="M:System.Windows.Forms.DataGridColumnStyle.Abort(System.Int32)" />， <see cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" />， <see cref="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean)" />，和<see cref="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32)" />（两次）。</para>
    </block>
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Windows.Forms.DataGridBoolColumn" />
    <altmember cref="T:System.Windows.Forms.DataGridTextBox" />
    <altmember cref="P:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle" />
    <altmember cref="T:System.Data.DataView" />
    <altmember cref="T:System.Windows.Forms.GridColumnStylesCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridColumnStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridColumnStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>在派生类中，初始化 <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当你创建的实例<xref:System.Windows.Forms.DataGridColumnStyle>，下列属性进行初始化。  
  
|Property|默认值|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.DataGridColumnStyle.Alignment%2A>|`HorizontalAlignment.Left`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle%2A>|`null`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.FontHeight%2A>|-1|  
|<xref:System.Windows.Forms.DataGridColumnStyle.Invalidate%2A>|`false`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A>|字符串"(null)"|  
|<xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A>|`false`|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="T:System.Windows.Forms.DataGrid" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridColumnStyle (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.#ctor(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (prop As PropertyDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridColumnStyle(System::ComponentModel::PropertyDescriptor ^ prop);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop">一个 <see cref="T:System.ComponentModel.PropertyDescriptor" />，它提供列的特性。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> 初始化 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要创建一个新<xref:System.Windows.Forms.DataGridColumnStyle>，则必须先获取<xref:System.Windows.Forms.CurrencyManager>的数据源的列将添加到表。 请参阅`CurrencyManager`和`BindingManager`有关获取特定详细信息`CurrencyManager`窗体的对象。  
  
 从<xref:System.Windows.Forms.CurrencyManager>，然后就可以获取<xref:System.ComponentModel.PropertyDescriptor>为<xref:System.Data.DataColumn>，将提供的列的数据。  
  
 当你创建的实例<xref:System.Windows.Forms.DataGridColumnStyle>，以下的读/写属性进行初始化。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.DataGridColumnStyle.Alignment%2A>|`HorizontalAlignment.Left`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle%2A>|`null`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.FontHeight%2A>|-1|  
|<xref:System.Windows.Forms.DataGridColumnStyle.Invalidate%2A>|`false`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A>|"(null)"|  
|<xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A>|`false`|  
  
   
  
## Examples  
 下面的代码示例创建一个新<xref:System.Windows.Forms.DataGridTextBoxColumn>(派生自<xref:System.Windows.Forms.DataGridColumnStyle>) 并将其添加到<xref:System.Windows.Forms.GridColumnStylesCollection>的<xref:System.Windows.Forms.DataGridTableStyle>。  
  
 [!code-cpp[Classic DataGridColumnStyle.DataGridColumnStyle1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.DataGridColumnStyle1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.DataGridColumnStyle1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.DataGridColumnStyle1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.DataGridColumnStyle1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.DataGridColumnStyle1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="protected internal abstract void Abort (int rowNum);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Abort(int32 rowNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Abort(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Abort (rowNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Abort(int rowNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowNum">在其上中断操作的行的行号。</param>
        <summary>在派生类中被重写时，将启动一个请求来中断编辑过程。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridColumnStyle.Abort%2A>方法由<xref:System.Windows.Forms.DataGrid>时<xref:System.Windows.Forms.DataGridColumnStyle.Commit%2A>方法<xref:System.Windows.Forms.DataGridColumnStyle>方法返回`false`。 在这种情况下，列值将回滚到以前的值。  
  
 <xref:System.Windows.Forms.DataGridColumnStyle>在返回之前必须结束所有编辑操作。 使用<xref:System.Windows.Forms.DataGridColumnStyle.Abort%2A>方法来实现此目的。  
  
 <xref:System.Windows.Forms.DataGrid.EndEdit%2A>方法<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>控件间接调用<xref:System.Windows.Forms.DataGridColumnStyle.Abort%2A>如果其`ShouldAbort`参数设置为`true`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.Invalidate" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.HorizontalAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Alignment As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::HorizontalAlignment Alignment { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置列中文本的对齐方式。</summary>
        <value>
          <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 值之一。 默认值为 <see langword="Left" />。 有效选项包括 <see langword="Left" />、<see langword="Center" /> 和 <see langword="Right" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例设置<xref:System.Windows.Forms.DataGridColumnStyle.Alignment%2A>属性中的每列<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>到`HorizontalAlignment.Center`如果数据不是字符串。  
  
 [!code-vb[Classic DataGridColumnStyle.Alignment Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.Alignment Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignmentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AlignmentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AlignmentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.AlignmentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AlignmentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AlignmentChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Forms.DataGridColumnStyle.Alignment" /> 属性值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataGridColumnStyle_AlignmentChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_AlignmentChanged/CPP/datagridcolumnstyle_alignmentchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_AlignmentChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_AlignmentChanged/CS/datagridcolumnstyle_alignmentchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_AlignmentChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_AlignmentChanged/VB/datagridcolumnstyle_alignmentchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="protected void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BeginUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>一直挂起列的绘制，直到调用 <see cref="M:System.Windows.Forms.DataGridColumnStyle.EndUpdate" /> 方法为止。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当的外观进行了大量更改<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>控件 （是否正在更改列或由控件显示的数据的特性），应调用<xref:System.Windows.Forms.DataGridColumnStyle.BeginUpdate%2A>方法来暂时冻结控件的绘制。 这会导致更少受干扰到用户，并且提高性能。 所有更新之后，调用<xref:System.Windows.Forms.DataGridColumnStyle.EndUpdate%2A>方法来恢复的控件的绘制。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.EndUpdate" />
      </Docs>
    </Member>
    <Member MemberName="CheckValidDataSource">
      <MemberSignature Language="C#" Value="protected void CheckValidDataSource (System.Windows.Forms.CurrencyManager value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckValidDataSource(class System.Windows.Forms.CurrencyManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.CheckValidDataSource(System.Windows.Forms.CurrencyManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckValidDataSource (value As CurrencyManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckValidDataSource(System::Windows::Forms::CurrencyManager ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.CurrencyManager" />
      </Parameters>
      <Docs>
        <param name="value">要检查的 <see cref="T:System.Windows.Forms.CurrencyManager" />。</param>
        <summary>如果 <see cref="T:System.Windows.Forms.DataGrid" /> 没有有效数据源，或该列未映射到数据源中的有效属性，将引发异常。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例获取<xref:System.Windows.Forms.CurrencyManager>为数据源和使用<xref:System.Windows.Forms.DataGridColumnStyle.CheckValidDataSource%2A>以确定是否<xref:System.Windows.Forms.CurrencyManager>有效。  
  
 [!code-cpp[Classic DataGridColumnStyle.CheckValidDataSource Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.CheckValidDataSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.CheckValidDataSource Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.CheckValidDataSource Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.CheckValidDataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.CheckValidDataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ApplicationException">该列的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ColumnStartedEditing">
      <MemberSignature Language="C#" Value="protected internal virtual void ColumnStartedEditing (System.Windows.Forms.Control editingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ColumnStartedEditing(class System.Windows.Forms.Control editingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.ColumnStartedEditing(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ColumnStartedEditing (editingControl As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ColumnStartedEditing(System::Windows::Forms::Control ^ editingControl);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing(System.Windows.Forms.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="editingControl">由列承载的 <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary>通知 <see cref="T:System.Windows.Forms.DataGrid" /> 用户已开始编辑该列。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用时，<xref:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing%2A>方法允许<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>控件以显示正在编辑铅笔，该值指示行的行标题中。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="protected internal abstract bool Commit (System.Windows.Forms.CurrencyManager dataSource, int rowNum);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool Commit(class System.Windows.Forms.CurrencyManager dataSource, int32 rowNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function Commit (dataSource As CurrencyManager, rowNum As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool Commit(System::Windows::Forms::CurrencyManager ^ dataSource, int rowNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <see cref="T:System.Windows.Forms.CurrencyManager" /> 的 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</param>
        <param name="rowNum">所编辑行的行号。</param>
        <summary>在派生类中被重写时，将启动一个请求来完成编辑过程。</summary>
        <returns>
          如果编辑过程成功提交，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示可能重写<xref:System.Windows.Forms.DataGridColumnStyle.Commit%2A>方法。 该代码时，将调用<xref:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow%2A>方法，，然后选择允许其他函数来确定列是否仍在的变量更编辑的设置。 然后，代码调用<xref:System.Windows.Forms.DataGridColumnStyle.Invalidate%2A>方法进行重绘控件。 最后，该函数返回`true`以指示已提交更改。  
  
 [!code-vb[Classic DataGridColumnStyle.Commit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.Commit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" />方法应由派生自的类<see cref="T:System.Windows.Forms.DataGridColumnStyle" />类中重置其编辑状态，例如，可以放弃焦点，如果<see cref="T:System.Windows.Forms.DataGridColumnStyle" />承载的编辑控件。 请参阅<see cref="M:System.Windows.Forms.DataGridColumnStyle.ConcedeFocus" />方法。  
  
 调用<see cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" />方法时<see cref="T:System.Windows.Forms.DataGridColumnStyle" />接收完成编辑的请求。 如果这是不可能没有错误，则返回<see langword="false" />。  
  
 <see cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" />的公共方法的调用方法<see cref="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />的<see cref="T:System.Windows.Forms.DataGrid" />控件。 该方法也称为其他私有方法，例如，更改当前行时。</para>
        </block>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConcedeFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void ConcedeFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ConcedeFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.ConcedeFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ConcedeFocus ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ConcedeFocus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>通知列必须放弃它承载的控件的焦点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法来确定何时在派生类中需要进一步的操作。 例如，通过重写此方法<xref:System.Windows.Forms.DataGridTextBoxColumn>隐藏<xref:System.Windows.Forms.DataGridTextBox>。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Windows.Forms.DataGridColumnStyle.ConcedeFocus%2A>方法来隐藏<xref:System.Windows.Forms.TextBox>由承载<xref:System.Windows.Forms.DataGridTextBoxColumn>。  
  
 [!code-cpp[Classic DataGridColumnStyle.ConcedeFocus Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.ConcedeFocus Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.ConcedeFocus Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.ConcedeFocus Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.ConcedeFocus Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.ConcedeFocus Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHeaderAccessibleObject">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateHeaderAccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateHeaderAccessibleObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.CreateHeaderAccessibleObject" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateHeaderAccessibleObject () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateHeaderAccessibleObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取列的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
        <returns>用于列的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性由<xref:System.Windows.Forms.DataGridTableStyle>时其<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>属性更改。 此属性是必需的因为任何子控件由<xref:System.Windows.Forms.DataGridColumnStyle>必须添加到<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>控件的`ControlCollection`。  
  
   
  
## Examples  
 下面的代码示例获取<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>的<xref:System.Windows.Forms.DataGridColumnStyle>。  
  
 [!code-cpp[Classic DataGridColumnStyle.CreateHeaderAccessibleObject Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.CreateHeaderAccessibleObject Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.CreateHeaderAccessibleObject Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.CreateHeaderAccessibleObject Example/CS/source.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGrid" />
        <altmember cref="T:System.Windows.Forms.DataGridTableStyle" />
      </Docs>
    </Member>
    <Member MemberName="DataGridTableStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridTableStyle DataGridTableStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridTableStyle DataGridTableStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataGridTableStyle As DataGridTableStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridTableStyle ^ DataGridTableStyle { System::Windows::Forms::DataGridTableStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridTableStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取列的 <see cref="T:System.Windows.Forms.DataGridTableStyle" />。</summary>
        <value>包含当前 <see cref="P:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle" /> 的 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例输出<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>的<xref:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle%2A>包含<xref:System.Windows.Forms.DataGridColumnStyle>。  
  
 [!code-vb[Classic DataGridColumnStyle.DataGridTableStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.DataGridTableStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridTableStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Edit">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>准备单元格以便编辑值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="protected internal virtual void Edit (System.Windows.Forms.CurrencyManager source, int rowNum, System.Drawing.Rectangle bounds, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Edit(class System.Windows.Forms.CurrencyManager source, int32 rowNum, valuetype System.Drawing.Rectangle bounds, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Edit (source As CurrencyManager, rowNum As Integer, bounds As Rectangle, readOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Edit(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Drawing::Rectangle bounds, bool readOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="readOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">
          <see cref="T:System.Windows.Forms.CurrencyManager" /> 的 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</param>
        <param name="rowNum">要编辑的行的行号。</param>
        <param name="bounds">外围 <see cref="T:System.Drawing.Rectangle" />，控件将被放置在其中。</param>
        <param name="readOnly">指示列是否为只读的值。 如果此值为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>准备单元格以便进行编辑。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，<xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A>方法站点将控件定位到在网格中正在编辑的单元格的位置的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="protected internal virtual void Edit (System.Windows.Forms.CurrencyManager source, int rowNum, System.Drawing.Rectangle bounds, bool readOnly, string displayText);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Edit(class System.Windows.Forms.CurrencyManager source, int32 rowNum, valuetype System.Drawing.Rectangle bounds, bool readOnly, string displayText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Edit (source As CurrencyManager, rowNum As Integer, bounds As Rectangle, readOnly As Boolean, displayText As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Edit(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Drawing::Rectangle bounds, bool readOnly, System::String ^ displayText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="readOnly" Type="System.Boolean" />
        <Parameter Name="displayText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <see cref="T:System.Windows.Forms.CurrencyManager" /> 的 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</param>
        <param name="rowNum">此列中所编辑的行的行号。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" />，控件将被放置在其中。</param>
        <param name="readOnly">指示列是否为只读的值。 如果此值为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="displayText">控件中将显示的文本。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Forms.CurrencyManager" />、行号和 <see cref="T:System.Drawing.Rectangle" /> 参数准备单元格以便进行编辑。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，<xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A>方法站点将控件定位到在网格中正在编辑的单元格的位置的。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A>方法可以更改在单击的单元格的文本<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>控件。  
  
 [!code-cpp[Classic DataGridColumnStyle.Edit1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.Edit1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.Edit1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.Edit1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.Edit1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.Edit1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="protected internal abstract void Edit (System.Windows.Forms.CurrencyManager source, int rowNum, System.Drawing.Rectangle bounds, bool readOnly, string displayText, bool cellIsVisible);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Edit(class System.Windows.Forms.CurrencyManager source, int32 rowNum, valuetype System.Drawing.Rectangle bounds, bool readOnly, string displayText, bool cellIsVisible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Edit (source As CurrencyManager, rowNum As Integer, bounds As Rectangle, readOnly As Boolean, displayText As String, cellIsVisible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Edit(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Drawing::Rectangle bounds, bool readOnly, System::String ^ displayText, bool cellIsVisible);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="readOnly" Type="System.Boolean" />
        <Parameter Name="displayText" Type="System.String" />
        <Parameter Name="cellIsVisible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">
          <see cref="T:System.Windows.Forms.CurrencyManager" /> 的 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</param>
        <param name="rowNum">此列中所编辑的行的行号。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" />，控件将被放置在其中。</param>
        <param name="readOnly">指示列是否为只读的值。 如果此值为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="displayText">控件中将显示的文本。</param>
        <param name="cellIsVisible">指示该单元格是否可见的值。 如果该单元格可见，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>当在派生类中被重写时，将准备一个将要进行编辑的单元格。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，<xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A>方法站点将控件定位到在网格中正在编辑的单元格的位置的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="protected void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EndUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>继续绘制由调用 <see cref="M:System.Windows.Forms.DataGridColumnStyle.BeginUpdate" /> 方法而挂起的列。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当的外观进行了大量更改<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>控件 （是否正在更改列或由控件显示的数据的特性），应调用<xref:System.Windows.Forms.DataGridColumnStyle.BeginUpdate%2A>方法来暂时冻结控件的绘制。 这会导致更少受干扰到用户，并且提高性能。 所有更新之后，调用<xref:System.Windows.Forms.DataGridColumnStyle.EndUpdate%2A>方法来恢复的控件的绘制。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.BeginUpdate" />
      </Docs>
    </Member>
    <Member MemberName="EnterNullValue">
      <MemberSignature Language="C#" Value="protected internal virtual void EnterNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void EnterNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.EnterNullValue" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub EnterNullValue ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void EnterNullValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>向列中输入 <see cref="F:System.DBNull.Value" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当用户按 ALT + 0 表示允许向列中输入相应的 null 值调用此方法。 例如，在调用<xref:System.Windows.Forms.DataGridTextBoxColumn>，相应<xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A>列中插入值。  
  
 <xref:System.Windows.Forms.DataGridColumnStyle.EnterNullValue%2A>没有默认行为。 从继承时<xref:System.Windows.Forms.DataGridColumnStyle>，重写方法以输入`null`列中。  
  
   
  
## Examples  
 下面的代码示例演示可能重写<xref:System.Windows.Forms.DataGridColumnStyle.EnterNullValue%2A>方法。  
  
 [!code-vb[Classic DataGridColumnStyle.EnterNullValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.EnterNullValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridColumnStyle.NullText" />
        <altmember cref="E:System.Windows.Forms.DataGridColumnStyle.NullTextChanged" />
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.FontChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FontChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FontChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当列的字体更改时发生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontHeight">
      <MemberSignature Language="C#" Value="protected int FontHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FontHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.FontHeight" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FontHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int FontHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取该列字体的高度。</summary>
        <value>字体的高度（以像素为单位）。 如果未设置任何字体高度，则该属性返回 <see cref="T:System.Windows.Forms.DataGrid" /> 控件的字体高度；如果未设置该属性，则返回 <see cref="T:System.Windows.Forms.DataGrid" /> 控件的默认字体高度值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnValueAtRow">
      <MemberSignature Language="C#" Value="protected internal virtual object GetColumnValueAtRow (System.Windows.Forms.CurrencyManager source, int rowNum);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetColumnValueAtRow(class System.Windows.Forms.CurrencyManager source, int32 rowNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.GetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetColumnValueAtRow (source As CurrencyManager, rowNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ GetColumnValueAtRow(System::Windows::Forms::CurrencyManager ^ source, int rowNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">包含数据的 <see cref="T:System.Windows.Forms.CurrencyManager" />。</param>
        <param name="rowNum">包含数据的行的行号。</param>
        <summary>获取指定 <see cref="T:System.Windows.Forms.CurrencyManager" /> 中指定行内的值。</summary>
        <returns>包含该值的 <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果数据源列是<xref:System.Data.DataTable>，使用<xref:System.Data.DataTable.ColumnChanging>或<xref:System.Data.DataTable.RowChanging>事件，以确定何时行或列的值发生变化。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ApplicationException">此 <see cref="T:System.Data.DataColumn" /> 的 <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> 尚未设置。</exception>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetMinimumHeight">
      <MemberSignature Language="C#" Value="protected internal abstract int GetMinimumHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance int32 GetMinimumHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.GetMinimumHeight" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetMinimumHeight () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract int GetMinimumHeight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，将获取一行的最小高度。</summary>
        <returns>行的最小高度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例获取列的最小高度。  
  
 [!code-cpp[Classic DataGridColumnStyle.GetMinimumHeight Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetMinimumHeight Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.GetMinimumHeight Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetMinimumHeight Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.GetMinimumHeight Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetMinimumHeight Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight(System.Drawing.Graphics,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize(System.Drawing.Graphics,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredHeight">
      <MemberSignature Language="C#" Value="protected internal abstract int GetPreferredHeight (System.Drawing.Graphics g, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance int32 GetPreferredHeight(class System.Drawing.Graphics g, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight(System.Drawing.Graphics,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetPreferredHeight (g As Graphics, value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract int GetPreferredHeight(System::Drawing::Graphics ^ g, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> 对象。</param>
        <param name="value">一个对象值，该值是需要知道屏幕高度和宽度的值。</param>
        <summary>在派生类中被重写时，将获取自动调整列的大小所用的高度。</summary>
        <returns>自动调整单元格大小时所用高度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize%2A>通常将调用从鼠标按下事件要调整大小的长字符串的列的高度。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight%2A>方法以返回单元格的高度。  
  
 [!code-cpp[Classic DataGridColumnStyle.GetPreferredHeight Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredHeight Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.GetPreferredHeight Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredHeight Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.GetPreferredHeight Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredHeight Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize(System.Drawing.Graphics,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetMinimumHeight" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="protected internal abstract System.Drawing.Size GetPreferredSize (System.Drawing.Graphics g, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Drawing.Size GetPreferredSize(class System.Drawing.Graphics g, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize(System.Drawing.Graphics,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetPreferredSize (g As Graphics, value As Object) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Drawing::Size GetPreferredSize(System::Drawing::Graphics ^ g, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> 对象。</param>
        <param name="value">一个对象值，该值是需要知道屏幕高度和宽度的值。</param>
        <summary>在派生类中被重写时，将获取指定值的宽度和高度。 在用户定位到使用 <see cref="T:System.Windows.Forms.DataGridTableStyle" /> 的 <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> 时将使用该宽度和高度。</summary>
        <returns>一个 <see cref="T:System.Drawing.Size" />，它包含单元格的尺寸。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize%2A>来确定宽度列应调整大小，给定的特定字符串或数字。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize%2A>方法以返回值的最佳大小。  
  
 [!code-cpp[Classic DataGridColumnStyle.GetPreferredSize Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.GetPreferredSize Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredSize Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.GetPreferredSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight(System.Drawing.Graphics,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetMinimumHeight" />
      </Docs>
    </Member>
    <Member MemberName="HeaderAccessibleObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject HeaderAccessibleObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject HeaderAccessibleObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.HeaderAccessibleObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderAccessibleObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ HeaderAccessibleObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取列的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
        <value>用于列的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置列标题的文本。</summary>
        <value>作为列标题显示的字符串。 如果它是由 <see cref="T:System.Windows.Forms.DataGrid" /> 创建的，则默认值是用于创建该列的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 的名称。 如果它是由用户创建的，则默认值是一个空的字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A>属性通常用于显示一个题注，不同于<xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A>值时<xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A>该值不易于理解。 例如，您可以更改<xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A>到"名字"时<xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A>值是"FName"。  
  
   
  
## Examples  
 下面的代码示例设置<xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A>属性的新值。  
  
 [!code-cpp[Classic DataGridColumnStyle.HeaderText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.HeaderText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.HeaderText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.HeaderText Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.HeaderText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.HeaderText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HeaderTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HeaderTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.HeaderTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HeaderTextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HeaderTextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" /> 属性值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataGridColumnStyle_HeaderTextChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_HeaderTextChanged/CPP/datagridcolumnstyle_headertextchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_HeaderTextChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_HeaderTextChanged/CS/datagridcolumnstyle_headertextchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_HeaderTextChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_HeaderTextChanged/VB/datagridcolumnstyle_headertextchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="protected virtual void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Invalidate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重新绘制列，并会向控件发送一条绘制消息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridColumnStyle.Invalidate%2A>方法通常称为后中断编辑操作。 例如，你可以调用方法，在实现时<xref:System.Windows.Forms.DataGridColumnStyle.Abort%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.Abort(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MappingName">
      <MemberSignature Language="C#" Value="public string MappingName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappingName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.MappingName" />
      <MemberSignature Language="VB.NET" Value="Public Property MappingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MappingName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridColumnStyleMappingNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置列样式所映射到的数据成员的名称。</summary>
        <value>列样式所映射到的数据成员的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用于匹配比较<xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A>对数据成员是不区分大小写。  
  
 这<xref:System.Windows.Forms.DataGridColumnStyle>用于呈现中指定的数据成员的数据，只要数据源与匹配所指示的<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>属性<xref:System.Windows.Forms.DataGridTableStyle>，其中包含此列样式。  
  
 <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A?displayProperty=nameWithType>属性通常设置为<xref:System.Data.DataColumn.ColumnName%2A>的<xref:System.Data.DataColumn>。  
  
   
  
## Examples  
 下面的代码示例创建<xref:System.Windows.Forms.DataGridTableStyle>，并添加两个<xref:System.Windows.Forms.DataGridColumnStyle>对象添加到<xref:System.Windows.Forms.GridColumnStylesCollection>。 <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A>每个<xref:System.Windows.Forms.DataGridColumnStyle>设置为<xref:System.Data.DataColumn.ColumnName%2A>的<xref:System.Data.DataColumn>。  
  
 [!code-cpp[GridTableStylesCollectionExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/GridTableStylesCollectionExamples/CPP/gridtablestylescollectionexamples.cpp#4)]
 [!code-csharp[GridTableStylesCollectionExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/GridTableStylesCollectionExamples/CS/gridtablestylescollectionexamples.cs#4)]
 [!code-vb[GridTableStylesCollectionExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GridTableStylesCollectionExamples/VB/gridtablestylescollectionexamples.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MappingNameChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MappingNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MappingNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.MappingNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MappingNameChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MappingNameChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="P:System.Windows.Forms.DataGridColumnStyle.MappingName" /> 值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataGridColumnStyle_MappingNameChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_MappingNameChanged/CPP/datagridcolumnstyle_mappingnamechanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_MappingNameChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_MappingNameChanged/CS/datagridcolumnstyle_mappingnamechanged.cs#1)]
 [!code-vb[DataGridColumnStyle_MappingNameChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_MappingNameChanged/VB/datagridcolumnstyle_mappingnamechanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NullText">
      <MemberSignature Language="C#" Value="public virtual string NullText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.NullText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在列包含 <see langword="null" /> 时所显示的文本。</summary>
        <value>在包含 <see cref="F:System.DBNull.Value" /> 的列中显示的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataColumn>类的<xref:System.Data.DataColumn.AllowDBNull%2A>属性确定一个列可以包含 null 值。  
  
   
  
## Examples  
 下面的代码示例设置<xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A>属性设置为一个新字符串。  
  
 [!code-cpp[Classic DataGridColumnStyle.NullText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.NullText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.NullText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.NullText Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.NullText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.NullText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
      </Docs>
    </Member>
    <Member MemberName="NullTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler NullTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler NullTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.NullTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NullTextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ NullTextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="P:System.Windows.Forms.DataGridColumnStyle.NullText" /> 值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataGridColumnStyle_NullTextChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_NullTextChanged/CPP/datagridcolumnstyle_nulltextchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_NullTextChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_NullTextChanged/CS/datagridcolumnstyle_nulltextchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_NullTextChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_NullTextChanged/VB/datagridcolumnstyle_nulltextchanged.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.EnterNullValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Paint">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在派生类中被重写时，在 <see cref="T:System.Windows.Forms.DataGrid" /> 控件中绘制列。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected internal abstract void Paint (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.CurrencyManager source, int rowNum);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.CurrencyManager source, int32 rowNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Paint (g As Graphics, bounds As Rectangle, source As CurrencyManager, rowNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Paint(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::CurrencyManager ^ source, int rowNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="g">要绘制到的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="bounds">要在其中绘画的外围 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="source">该列所属的 <see cref="T:System.Windows.Forms.CurrencyManager" /> 控件的 <see cref="T:System.Windows.Forms.DataGrid" />。</param>
        <param name="rowNum">所引用的基础数据中的行号。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />、<see cref="T:System.Drawing.Graphics" />、<see cref="T:System.Drawing.Rectangle" /> 和行号绘制 <see cref="T:System.Windows.Forms.CurrencyManager" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected internal abstract void Paint (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.CurrencyManager source, int rowNum, bool alignToRight);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.CurrencyManager source, int32 rowNum, bool alignToRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Paint (g As Graphics, bounds As Rectangle, source As CurrencyManager, rowNum As Integer, alignToRight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Paint(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::CurrencyManager ^ source, int rowNum, bool alignToRight);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="alignToRight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="g">要绘制到的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="bounds">要在其中绘画的外围 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="source">该列所属的 <see cref="T:System.Windows.Forms.CurrencyManager" /> 控件的 <see cref="T:System.Windows.Forms.DataGrid" />。</param>
        <param name="rowNum">所引用的基础数据中的行号。</param>
        <param name="alignToRight">一个值，它指示该列的内容是否为右对齐。 如果内容应为右对齐，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>在派生类中被重写时，将绘制具有指定 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />、<see cref="T:System.Drawing.Graphics" />、<see cref="T:System.Drawing.Rectangle" />、行号和对齐方式的 <see cref="T:System.Windows.Forms.CurrencyManager" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected internal virtual void Paint (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.CurrencyManager source, int rowNum, System.Drawing.Brush backBrush, System.Drawing.Brush foreBrush, bool alignToRight);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.CurrencyManager source, int32 rowNum, class System.Drawing.Brush backBrush, class System.Drawing.Brush foreBrush, bool alignToRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Paint (g As Graphics, bounds As Rectangle, source As CurrencyManager, rowNum As Integer, backBrush As Brush, foreBrush As Brush, alignToRight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Paint(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Drawing::Brush ^ backBrush, System::Drawing::Brush ^ foreBrush, bool alignToRight);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="backBrush" Type="System.Drawing.Brush" />
        <Parameter Name="foreBrush" Type="System.Drawing.Brush" />
        <Parameter Name="alignToRight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="g">要绘制到的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="bounds">要在其中绘画的外围 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="source">该列所属的 <see cref="T:System.Windows.Forms.CurrencyManager" /> 控件的 <see cref="T:System.Windows.Forms.DataGrid" />。</param>
        <param name="rowNum">所引用的基础数据表中的行号。</param>
        <param name="backBrush">用于绘制背景色的 <see cref="T:System.Drawing.Brush" />。</param>
        <param name="foreBrush">用于绘制前景色的 <see cref="T:System.Drawing.Color" />。</param>
        <param name="alignToRight">一个值，它指示内容是否为右对齐。 如果内容为右对齐，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>绘制具有指定 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />、<see cref="T:System.Drawing.Graphics" />、<see cref="T:System.Drawing.Rectangle" />、行号、背景色、前景色和对齐方式的 <see cref="T:System.Windows.Forms.CurrencyManager" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor PropertyDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.PropertyDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PropertyDescriptor As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ PropertyDescriptor { System::ComponentModel::PropertyDescriptor ^ get(); void set(System::ComponentModel::PropertyDescriptor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.ComponentModel.PropertyDescriptor" />，它确定 <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> 所显示数据的特性。</summary>
        <value>一个 <see cref="T:System.ComponentModel.PropertyDescriptor" />，它包含有关列的特性的数据。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.PropertyDescriptor>列将设置使用<xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A>方法<xref:System.Windows.Forms.BindingManagerBase>。 请参阅<xref:System.Windows.Forms.DataGridColumnStyle.%23ctor%2A>构造函数使用的示例<xref:System.ComponentModel.PropertyDescriptor>创建新<xref:System.Windows.Forms.DataGridColumnStyle>。  
  
   
  
## Examples  
 下面的代码示例获取<xref:System.ComponentModel.PropertyDescriptor>中的列<xref:System.Windows.Forms.GridColumnStylesCollection>。 第二个示例创建一个新<xref:System.Windows.Forms.DataGridColumnStyle>与<xref:System.ComponentModel.PropertyDescriptor>。  
  
 [!code-cpp[Classic DataGridColumnStyle.PropertyDescriptor Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.PropertyDescriptor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.PropertyDescriptor Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.PropertyDescriptor Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.PropertyDescriptor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.PropertyDescriptor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="PropertyDescriptorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PropertyDescriptorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PropertyDescriptorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.PropertyDescriptorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyDescriptorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PropertyDescriptorChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Forms.DataGridColumnStyle.PropertyDescriptor" /> 属性值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataGridColumnStyle_PropertyDescriptorChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_PropertyDescriptorChanged/CPP/propertydescriptorchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_PropertyDescriptorChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_PropertyDescriptorChanged/CS/propertydescriptorchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_PropertyDescriptorChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_PropertyDescriptorChanged/VB/propertydescriptorchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示该列中的数据是否可以编辑。</summary>
        <value>
          如果数据不能编辑，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使列成为只读上，如果它包含一个主键或其值自动生成 (比如<xref:System.Data.DataColumn>对象的<xref:System.Data.DataColumn.AutoIncrement%2A>属性设置为`true`)。  
  
 类似的只读属性存在于其他类中，每个允许更好地控制对数据的访问。 例如，<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>控件可通过使用设置为只读模式其<xref:System.Windows.Forms.DataGrid.ReadOnly%2A>属性;<xref:System.Windows.Forms.DataGridTableStyle>还有<xref:System.Windows.Forms.DataGridTableStyle.ReadOnly%2A>属性，与<xref:System.Data.DataColumn>类具有<xref:System.Data.DataColumn.ReadOnly%2A>限制数据更新的属性。  
  
   
  
## Examples  
 下面的代码示例设置<xref:System.Windows.Forms.DataGridColumnStyle>对象的<xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A>到相同的值的属性<xref:System.Data.DataColumn>对象的<xref:System.Data.DataColumn.ReadOnly%2A>属性。  
  
 [!code-cpp[Classic DataGridColumnStyle.ReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.ReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Forms.DataGridColumnStyle.ReadOnly" /> 属性值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataGridColumnStyle_ReadOnlyChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_ReadOnlyChanged/CPP/datagridcolumnstyle_readonlychanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_ReadOnlyChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_ReadOnlyChanged/CS/datagridcolumnstyle_readonlychanged.cs#1)]
 [!code-vb[DataGridColumnStyle_ReadOnlyChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_ReadOnlyChanged/VB/datagridcolumnstyle_readonlychanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHostedControl">
      <MemberSignature Language="C#" Value="protected internal virtual void ReleaseHostedControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ReleaseHostedControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.ReleaseHostedControl" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ReleaseHostedControl ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ReleaseHostedControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>不再需要列所承载的控件时，允许列释放资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你创建一个派生自的类<xref:System.Windows.Forms.DataGridColumnStyle>，你通常将使用派生的类来承载控件用于编辑数据。 应重写<xref:System.Windows.Forms.DataGridColumnStyle.ReleaseHostedControl%2A>方法来释放对该控件的任何引用，以释放系统资源。 例如，<xref:System.Windows.Forms.DataGridTextBoxColumn>派生的类使用此方法来释放所承载的引用<xref:System.Windows.Forms.DataGridTextBox>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetHeaderText">
      <MemberSignature Language="C#" Value="public void ResetHeaderText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetHeaderText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.ResetHeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetHeaderText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetHeaderText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" /> 重置为其默认值 <see langword="null" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你创建的设计器通常使用此方法<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>，或创建你自己的控件、 包含<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataGridColumnStyle_ResetHeaderText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_ResetHeaderText/CPP/datagridcolumnstyle_resetheadertext.cpp#1)]
 [!code-csharp[DataGridColumnStyle_ResetHeaderText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_ResetHeaderText/CS/datagridcolumnstyle_resetheadertext.cs#1)]
 [!code-vb[DataGridColumnStyle_ResetHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_ResetHeaderText/VB/datagridcolumnstyle_resetheadertext.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumnValueAtRow">
      <MemberSignature Language="C#" Value="protected internal virtual void SetColumnValueAtRow (System.Windows.Forms.CurrencyManager source, int rowNum, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetColumnValueAtRow(class System.Windows.Forms.CurrencyManager source, int32 rowNum, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetColumnValueAtRow (source As CurrencyManager, rowNum As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetColumnValueAtRow(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">与 <see cref="T:System.Windows.Forms.CurrencyManager" /> 关联的 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</param>
        <param name="rowNum">该行的行号。</param>
        <param name="value">要设置的值。</param>
        <summary>用来自指定 <see cref="T:System.Windows.Forms.CurrencyManager" /> 的值设置指定行中的值。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Windows.Forms.CurrencyManager" /> 对象的 <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> 与 <paramref name="rowNum" /> 不匹配。</exception>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDataGrid">
      <MemberSignature Language="C#" Value="protected virtual void SetDataGrid (System.Windows.Forms.DataGrid value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDataGrid(class System.Windows.Forms.DataGrid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.SetDataGrid(System.Windows.Forms.DataGrid)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDataGrid (value As DataGrid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDataGrid(System::Windows::Forms::DataGrid ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.DataGrid" />
      </Parameters>
      <Docs>
        <param name="value">该列所属的 <see cref="T:System.Windows.Forms.DataGrid" /> 控件。</param>
        <summary>设置该列所属的 <see cref="T:System.Windows.Forms.DataGrid" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，应使用<xref:System.Windows.Forms.DataGridColumnStyle.SetDataGridInColumn%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGrid" />
      </Docs>
    </Member>
    <Member MemberName="SetDataGridInColumn">
      <MemberSignature Language="C#" Value="protected virtual void SetDataGridInColumn (System.Windows.Forms.DataGrid value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDataGridInColumn(class System.Windows.Forms.DataGrid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.SetDataGridInColumn(System.Windows.Forms.DataGrid)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDataGridInColumn (value As DataGrid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDataGridInColumn(System::Windows::Forms::DataGrid ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.DataGrid" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.DataGrid" />。</param>
        <summary>设置列的 <see cref="T:System.Windows.Forms.DataGrid" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常由为进行特殊处理时的派生类中重写此方法<xref:System.Windows.Forms.DataGridColumnStyle>添加到<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>。 例如，<xref:System.Windows.Forms.DataGridTextBoxColumn>使用此方法将添加<xref:System.Windows.Forms.DataGridTextBox>的子级<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing">
      <MemberSignature Language="C#" Value="void IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing (System.Windows.Forms.Control editingControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing(class System.Windows.Forms.Control editingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.System#Windows#Forms#IDataGridColumnStyleEditingNotificationService#ColumnStartedEditing(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Sub ColumnStartedEditing (editingControl As Control) Implements IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing(System::Windows::Forms::Control ^ editingControl) = System::Windows::Forms::IDataGridColumnStyleEditingNotificationService::ColumnStartedEditing;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing(System.Windows.Forms.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="editingControl">正在对列进行编辑的 <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary>通知 <see cref="T:System.Windows.Forms.DataGrid" /> 控件用户已开始编辑该列。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用时，<xref:System.Windows.Forms.DataGridColumnStyle.ColumnStartedEditing%2A>方法允许<xref:System.Windows.Forms.DataGrid>控件以显示正在编辑铅笔，该值指示行的行标题中。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUI">
      <MemberSignature Language="C#" Value="protected internal virtual void UpdateUI (System.Windows.Forms.CurrencyManager source, int rowNum, string displayText);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void UpdateUI(class System.Windows.Forms.CurrencyManager source, int32 rowNum, string displayText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.UpdateUI(System.Windows.Forms.CurrencyManager,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub UpdateUI (source As CurrencyManager, rowNum As Integer, displayText As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void UpdateUI(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::String ^ displayText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="displayText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">与 <see cref="T:System.Windows.Forms.CurrencyManager" /> 关联的 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</param>
        <param name="rowNum">要更新的行。</param>
        <param name="displayText">新值。</param>
        <summary>用给定的文本更新指定行的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:System.Windows.Forms.DataGridColumnStyle.UpdateUI%2A>以设置新值。  
  
 [!code-cpp[Classic DataGridColumnStyle.UpdateUI Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.UpdateUI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.UpdateUI Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.UpdateUI Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.UpdateUI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.UpdateUI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Width { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置列的宽度。</summary>
        <value>列的宽度（以像素为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例设置的宽度<xref:System.Windows.Forms.DataGridColumnStyle>为新值。  
  
 [!code-vb[Classic DataGridColumnStyle.Width Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.Width Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridColumnStyle.WidthChanged" />
      </Docs>
    </Member>
    <Member MemberName="WidthChanged">
      <MemberSignature Language="C#" Value="public event EventHandler WidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler WidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.WidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WidthChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ WidthChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Forms.DataGridColumnStyle.Width" /> 属性值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataGridColumnStyle_WidthChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_WidthChanged/CPP/datagridcolumnstyle_widthchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_WidthChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_WidthChanged/CS/datagridcolumnstyle_widthchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_WidthChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_WidthChanged/VB/datagridcolumnstyle_widthchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>