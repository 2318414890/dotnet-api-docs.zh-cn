<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MainMenu.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5223d004886d0115f7d435b6bd28a85998b094b17.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">223d004886d0115f7d435b6bd28a85998b094b17</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.MainMenu">
          <source>Represents the menu structure of a form.</source>
          <target state="translated">表示窗体的菜单结构。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.MainMenu">
          <source>Although <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuStrip" /&gt;</ph> replaces and adds functionality to the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> control of previous versions, <ph id="ph3">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> is retained for both backward compatibility and future use if you choose.</source>
          <target state="translated">尽管 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuStrip" /&gt;</ph> 替换了早期版本的 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 控件并添加了功能；但是也可选择保留 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 以备向后兼容和将来使用。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MainMenu">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> control represents the container for the menu structure of a form.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>控件表示窗体菜单结构的容器。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MainMenu">
          <source>A menu is composed of <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that represent the individual menu commands in the menu structure.</source>
          <target state="translated">菜单组成<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>表示菜单结构中的各个菜单命令的对象。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MainMenu">
          <source>Each <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> can be a command for your application or a parent menu for other submenu items.</source>
          <target state="translated">每个<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>可以是你的应用程序的命令或其他子菜单项的父菜单。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MainMenu">
          <source>To bind the <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> that will display it, assign the <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Menu%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">若要将绑定<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>到<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>，将显示它，将分配<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>到<ph id="ph4">&lt;xref:System.Windows.Forms.Form.Menu%2A&gt;</ph>属性<ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MainMenu">
          <source>For applications that will have support for multiple languages, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.RightToLeft%2A&gt;</ph> property to display the text of the menu from right to left to support languages such as Arabic.</source>
          <target state="translated">对于应用程序将支持多种语言，你可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.RightToLeft%2A&gt;</ph>属性显示的菜单从右到左，以支持诸如阿拉伯语之类的语言的文本。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MainMenu">
          <source>You can create different <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> objects to represent different menu structures for your form.</source>
          <target state="translated">你可以创建不同<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>对象来表示你的窗体的不同的菜单结构。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MainMenu">
          <source>If you want to reuse the menu structure contained in a specific <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, you can use its <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu.CloneMenu%2A&gt;</ph> method to create a copy.</source>
          <target state="translated">如果你想要重复使用包含在特定的菜单结构<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>，你可以使用其<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu.CloneMenu%2A&gt;</ph>方法来创建副本。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MainMenu">
          <source>Once you have a copy of the menu structure, you can make the appropriate modifications for your new menu structure.</source>
          <target state="translated">菜单结构的副本之后，你可以为新的菜单结构来进行适当的修改。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MainMenu">
          <source>Cutting and pasting menu items from one form to another in the designer might not work as expected if the form you are pasting into has no menu items defined.</source>
          <target state="translated">剪切和粘贴到设计器中的另一种形式中的项可能无法按预期方式将粘贴到窗体如果没有定义任何菜单项的菜单。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MainMenu">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, assigns two <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> and binds it to a form.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>，将两个分配<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象添加到<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>并将其绑定到窗体。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MainMenu">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> created that is named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>创建命名为<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.MainMenu">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> class without any specified menu items.</source>
          <target state="translated">初始化没有任何指定菜单项的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 类的一个新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.#ctor">
          <source>This version of the constructor creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> without any specified <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects.</source>
          <target state="translated">此版本的构造函数创建<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>没有任何指定<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.#ctor">
          <source>To add menu items to the control use the other version of this constructor that accepts an array of <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects as its parameter or use the <ph id="ph2">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> property.</source>
          <target state="translated">若要添加到控件的菜单项使用接受一个数组此构造函数的其他版本<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象作为其参数或使用<ph id="ph2">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.#ctor">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, assigns two <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> and binds it to a form.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>，将两个分配<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象添加到<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>并将其绑定到窗体。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.#ctor">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> created that is named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>创建命名为<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.#ctor(System.ComponentModel.IContainer)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> representing the container of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>，它表示 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 的容器。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.#ctor(System.ComponentModel.IContainer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> class with the specified container.</source>
          <target state="translated">使用指定的容器初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> objects that will be added to the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>.</source>
          <target state="translated">将添加到 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 的一组 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> with a specified set of <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> objects.</source>
          <target state="translated">使用一组指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 对象初始化 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 的一个新实例。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>You can use this constructor to assign an array of <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> at the time of its creation.</source>
          <target state="translated">你可以使用此构造函数分配的数组<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象添加到<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>时创建。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>After the <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> has been created you can add additional <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> using the <ph id="ph4">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A&gt;</ph> method of the <ph id="ph5">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> property.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>已创建你可以添加其他<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象添加到<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>使用<ph id="ph4">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A&gt;</ph>方法<ph id="ph5">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, and assigns two <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> using this version of the constructor.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>，并将两个分配<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象添加到<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>使用此版本的构造函数。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>The example then binds the <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">该示例然后将绑定<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>到<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> created that is named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>创建命名为<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.CloneMenu">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> that is a duplicate of the current <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>.</source>
          <target state="translated">创建一个新 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>，它是当前 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 的副本。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.CloneMenu">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> that represents the cloned menu.</source>
          <target state="translated">表示克隆菜单的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.CloneMenu">
          <source>You can use this method to create a copy of the menu structure stored in a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>.</source>
          <target state="translated">你可以使用此方法创建一份存储中的菜单结构<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.CloneMenu">
          <source>You can use this method to reuse the menu structure stored in a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> as the foundation for a new <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>.</source>
          <target state="translated">你可以使用此方法以重用存储中的菜单结构<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>作为新的基础<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.CloneMenu">
          <source>For example, if you want to create a menu structure that has the same menu items as an existing <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> but will also have additional <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects added to it, you can use the <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu.CloneMenu%2A&gt;</ph> method to create a copy of the original <ph id="ph4">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> and then add the new <ph id="ph5">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects to the cloned <ph id="ph6">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>.</source>
          <target state="translated">例如，如果你想要创建的菜单结构具有相同的菜单项与现有<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>但还有其他<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象添加到它，你可以使用<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu.CloneMenu%2A&gt;</ph>方法来创建一份原始<ph id="ph4">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>和然后添加新<ph id="ph5">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>到克隆的对象<ph id="ph6">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.CloneMenu">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.GetForm%2A&gt;</ph> method to determine if a <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> is currently parented to the form.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.GetForm%2A&gt;</ph>方法可确定<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>当前父级到窗体。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.CloneMenu">
          <source>If the call in the example code to <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.GetForm%2A&gt;</ph> does not return <ph id="ph2">`null`</ph>, the code then clones the menu structure of the <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> using the <ph id="ph4">&lt;xref:System.Windows.Forms.MainMenu.CloneMenu%2A&gt;</ph> method.</source>
          <target state="translated">如果在示例中调用代码到<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.GetForm%2A&gt;</ph>不返回<ph id="ph2">`null`</ph>，代码然后克隆的菜单结构<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>使用<ph id="ph4">&lt;xref:System.Windows.Forms.MainMenu.CloneMenu%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.CloneMenu">
          <source>The code then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.RightToLeft%2A&gt;</ph> property to true on the new copy of the <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to create a <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> that can be used for languages that support right to left text.</source>
          <target state="translated">代码随后设置<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.RightToLeft%2A&gt;</ph>属性设置为 true; 如果的新副本的<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>创建<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>可以用于支持从右到左的文本的语言。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.CloneMenu">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> created that is named <ph id="ph2">`mainMenu1`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>创建命名为<ph id="ph2">`mainMenu1`</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.MainMenu.Collapse">
          <source>Occurs when the main menu collapses.</source>
          <target state="translated">当主菜单折叠时发生。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MainMenu.Collapse">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MainMenu.Collapse">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MainMenu.Collapse">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.Collapse&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.Collapse&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MainMenu.Collapse">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MainMenu.Collapse">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MainMenu.Collapse">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> named <ph id="ph2">`MainMenu1`</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>名为<ph id="ph2">`MainMenu1`</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MainMenu.Collapse">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.Collapse&gt;</ph> event.</source>
          <target state="translated">然后，确保与事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.Collapse&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.CreateMenuHandle">
          <source>Creates a new handle to the Menu.</source>
          <target state="translated">创建 Menu 的新句柄。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.CreateMenuHandle">
          <source>A handle to the menu if the method succeeds; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果该方法成功，则为菜单的句柄；否则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.Dispose(System.Boolean)">
          <source>Disposes of the resources, other than memory, used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>.</source>
          <target state="translated">处置由 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 占用的资源（内存除外）。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.Dispose(System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>.</source>
          <target state="translated">在完成使用 <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.Dispose%2A&gt;</ph> 后，应调用 <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.Dispose%2A&gt;</ph> 方法使 <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.Dispose(System.Boolean)">
          <source>After calling <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> so the memory it was occupying can be reclaimed by garbage collection.</source>
          <target state="translated">在调用<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.Dispose%2A&gt;</ph>，必须释放对所有引用<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>以便可以通过垃圾回收回收其占用的内存。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.Dispose(System.Boolean)">
          <source>Always call <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>.</source>
          <target state="translated">每次释放对 <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.Dispose%2A&gt;</ph> 的最后一个引用前，均应调用 <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.Dispose(System.Boolean)">
          <source>Otherwise, the resources the <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> is using will not be freed until garbage collection calls the <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> object's destructor.</source>
          <target state="translated">否则为资源<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>是使用不会被释放之前垃圾集合调用<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>对象的析构函数。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.GetForm">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that contains this control.</source>
          <target state="translated">获取包含该控件的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.GetForm">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that is the container for this control.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>，它是该控件的容器。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.GetForm">
          <source>Returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> is not currently hosted on a form.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 当前没有在窗体上寄宿，则返回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.GetForm">
          <source>This property enables you to determine if a specific <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> is parented to a form.</source>
          <target state="translated">此属性使您能够确定是否为特定<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>有父级到窗体。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.GetForm">
          <source>The property is typically used when multiple <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> objects are being used on a form and you need to determine which one is currently being used by a form.</source>
          <target state="translated">属性通常是时使用多个<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>在窗体上使用对象和你需要确定窗体当前正在使用哪一个。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.GetForm">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.GetForm%2A&gt;</ph> method to determine if a <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> is currently parented to the form.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.GetForm%2A&gt;</ph>方法可确定<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>当前父级到窗体。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.GetForm">
          <source>If the call in the example code to <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.GetForm%2A&gt;</ph> does not return <ph id="ph2">`null`</ph>, the code then clones the menu structure of the <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> using the <ph id="ph4">&lt;xref:System.Windows.Forms.MainMenu.CloneMenu%2A&gt;</ph> method.</source>
          <target state="translated">如果在示例中调用代码到<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.GetForm%2A&gt;</ph>不返回<ph id="ph2">`null`</ph>，代码然后克隆的菜单结构<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>使用<ph id="ph4">&lt;xref:System.Windows.Forms.MainMenu.CloneMenu%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.GetForm">
          <source>The code then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.RightToLeft%2A&gt;</ph> property to true on the new copy of the <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to create a <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> that can be used for languages that support right to left text.</source>
          <target state="translated">代码随后设置<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.RightToLeft%2A&gt;</ph>属性设置为 true; 如果的新副本的<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>创建<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>可以用于支持从右到左的文本的语言。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.GetForm">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> created that is named <ph id="ph2">`mainMenu1`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>创建命名为<ph id="ph2">`mainMenu1`</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MainMenu.Collapse" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MainMenu.Collapse" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.OnCollapse%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.OnCollapse%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)" /&gt;</ph>方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MainMenu.RightToLeft">
          <source>Gets or sets whether the text displayed by the control is displayed from right to left.</source>
          <target state="translated">获取或设置控件显示的文本是否从右向左显示。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MainMenu.RightToLeft">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MainMenu.RightToLeft">
          <source>This property enables your menus to support languages that are written from right to left.</source>
          <target state="translated">此属性使你菜单以支持写入从右到左的语言。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MainMenu.RightToLeft">
          <source>When this property is set to <ph id="ph1">`RightToLeft.Yes`</ph>, the menu item text will be displayed from right to left instead of the default left to right method.</source>
          <target state="translated">当此属性设置为<ph id="ph1">`RightToLeft.Yes`</ph>，菜单项文本将显示从右到左而不是从左到右的方法的默认值。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MainMenu.RightToLeft">
          <source>For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property.</source>
          <target state="translated">有关如何启用从右到左对齐方式会影响 Windows 窗体控件的详细信息，请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MainMenu.RightToLeft">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.GetForm%2A&gt;</ph> method to determine if a <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> is currently parented to the form.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.GetForm%2A&gt;</ph>方法可确定<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>当前父级到窗体。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MainMenu.RightToLeft">
          <source>If the call in the example code to <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.GetForm%2A&gt;</ph> does not return <ph id="ph2">`null`</ph>, the code then clones the menu structure of the <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> using the <ph id="ph4">&lt;xref:System.Windows.Forms.MainMenu.CloneMenu%2A&gt;</ph> method.</source>
          <target state="translated">如果在示例中调用代码到<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.GetForm%2A&gt;</ph>不返回<ph id="ph2">`null`</ph>，代码然后克隆的菜单结构<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>使用<ph id="ph4">&lt;xref:System.Windows.Forms.MainMenu.CloneMenu%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MainMenu.RightToLeft">
          <source>The example code then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.RightToLeft%2A&gt;</ph> property to <ph id="ph2">`RightToLeft.Yes`</ph> on the new copy of the <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to create a <ph id="ph4">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> that can be used for languages that support right to left text.</source>
          <target state="translated">示例代码随后设置<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu.RightToLeft%2A&gt;</ph>属性<ph id="ph2">`RightToLeft.Yes`</ph>上的新副本的<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>创建<ph id="ph4">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>可以用于支持从右到左的文本的语言。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MainMenu.RightToLeft">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> created that is named <ph id="ph2">`mainMenu1`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>创建命名为<ph id="ph2">`mainMenu1`</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MainMenu.RightToLeft">
          <source>The value assigned to the property is not a valid member of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> enumeration.</source>
          <target state="translated">分配给该属性的值不是 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> 枚举的有效成员。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.ToString">
          <source>Returns a string that represents the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>.</source>
          <target state="translated">返回表示 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 的字符串。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MainMenu.ToString">
          <source>A string that represents the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>.</source>
          <target state="translated">表示当前 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 的字符串。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MainMenu.ToString">
          <source>The return string includes the type and the string returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ToString%2A&gt;</ph> method if the <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> is assigned to a form.</source>
          <target state="translated">返回字符串包括类型和返回的字符串<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ToString%2A&gt;</ph>方法如果<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>分配给窗体。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>