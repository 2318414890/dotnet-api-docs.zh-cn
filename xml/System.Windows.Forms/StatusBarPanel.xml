<Type Name="StatusBarPanel" FullName="System.Windows.Forms.StatusBarPanel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="82481e8d2a4eace389510bc5f9ddca03edb5ce4f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650401" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StatusBarPanel : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StatusBarPanel extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.StatusBarPanel" />
  <TypeSignature Language="VB.NET" Value="Public Class StatusBarPanel&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class StatusBarPanel : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.StatusBar" /> 控件中的一个面板。 虽然 <see cref="T:System.Windows.Forms.StatusStrip" /> 控件对以前版本的 <see cref="T:System.Windows.Forms.StatusBar" /> 控件的功能进行替换和添加，但是考虑到向后兼容性和将来的使用（如果您选择），仍然保留了 <see cref="T:System.Windows.Forms.StatusBar" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.StatusBarPanel>表示中的单个面板<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>的<xref:System.Windows.Forms.StatusBar>控件。 A<xref:System.Windows.Forms.StatusBarPanel>可以包含文本和/或可用于反映应用程序的状态的图标。 使用<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>，可通过访问<xref:System.Windows.Forms.StatusBar.Panels%2A?displayProperty=nameWithType>属性<xref:System.Windows.Forms.StatusBar>控制，用于以检索、 添加或删除个人<xref:System.Windows.Forms.StatusBarPanel>。  
  
 <xref:System.Windows.Forms.StatusBarPanel>提供使你能够修改中的面板的显示方式的属性<xref:System.Windows.Forms.StatusBar>控件。 你可以使用<xref:System.Windows.Forms.StatusBarPanel.Icon%2A>属性，以显示一个面板中的图标。 此属性可以用于提供的图形表示形式在应用程序的状态。 <xref:System.Windows.Forms.StatusBarPanel.Alignment%2A>属性使您能够指定文本和/或一个图标在面板内的对齐方式。 若要确保，你面板的大小以适合面板的文本，可以使用<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>属性自动调整大小以适合面板的文本，或以填充剩余的面板空间内<xref:System.Windows.Forms.StatusBar>控件。 <xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A>属性使您能够指定要确保它不会小于它旨在显示的数据的面板的最小宽度。  
  
 <xref:System.Windows.Forms.StatusBar>控件通常用于显示帮助信息或有关你的应用程序的状态信息。 通常情况下，务必在面板中显示有关显示的数据的其他信息。 你可以使用<xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>属性时在鼠标指针停放在面板上显示信息。  
  
 尽管<xref:System.Windows.Forms.StatusBar>控件通常用于显示文本的信息，你还可以提供你自己的类型的显示到<xref:System.Windows.Forms.StatusBarPanel>。 <xref:System.Windows.Forms.StatusBarPanel.Style%2A>属性使您能够指定如何<xref:System.Windows.Forms.StatusBarPanel>将绘制。 默认情况下，<xref:System.Windows.Forms.StatusBarPanel.Style%2A>属性用于显示的值<xref:System.Windows.Forms.StatusBarPanel.Text%2A>属性 (一个图标，如果在指定<xref:System.Windows.Forms.StatusBarPanel.Icon%2A>属性)。 如果该属性设置为<xref:System.Windows.Forms.StatusBarPanelStyle.OwnerDraw>，到面板，可以绘制你自己的信息。 此功能可用于在面板上绘制一个进度栏或一个动画的图标。  
  
 当你创建的实例<xref:System.Windows.Forms.StatusBarPanel>类，将读/写属性设置为初始值。 有关这些值的列表，请参阅<xref:System.Windows.Forms.StatusBarPanel.%23ctor%2A>构造函数。  
  
   
  
## Examples  
 下面的代码示例创建<xref:System.Windows.Forms.StatusBar>控件在窗体上，添加两个<xref:System.Windows.Forms.StatusBarPanel>对象。 第一个<xref:System.Windows.Forms.StatusBarPanel>命名`panel1`，显示的应用程序状态文本。 第二个<xref:System.Windows.Forms.StatusBarPanel>命名`panel2`、 显示当前日期，并使用<xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>属性<xref:System.Windows.Forms.StatusBarPanel>类来显示当前时间。 该示例使用<xref:System.Windows.Forms.StatusBar.ShowPanels%2A>属性以确保显示多个面板而不是一个标准面板，并使用<xref:System.Windows.Forms.StatusBar.Panels%2A>属性来访问<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A>方法<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>若要添加到面板<xref:System.Windows.Forms.StatusBar>。 此示例还使用<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>， <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>， <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>，和<xref:System.Windows.Forms.StatusBarPanel.Text%2A>属性，以初始化<xref:System.Windows.Forms.StatusBarPanel>对象。 此示例假定在此示例中定义的方法定义并从的构造函数调用<xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StatusBarPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StatusBarPanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.StatusBarPanel" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当你创建的实例<xref:System.Windows.Forms.StatusBarPanel>，以下的读/写属性设置为初始值。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.StatusBarPanel.Alignment%2A>|<xref:System.Windows.Forms.HorizontalAlignment.Left>|  
|<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>|<xref:System.Windows.Forms.StatusBarPanelAutoSize.None>|  
|<xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>|<xref:System.Windows.Forms.StatusBarPanelBorderStyle.Sunken>|  
|<xref:System.Windows.Forms.StatusBarPanel.Icon%2A>|`null`|  
|<xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A>|10|  
|<xref:System.Windows.Forms.StatusBarPanel.Style%2A>|<xref:System.Windows.Forms.StatusBarPanelStyle.Text>|  
|<xref:System.Windows.Forms.StatusBarPanel.Text%2A>|长度为零的字符串。|  
|<xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>|长度为零的字符串。|  
|<xref:System.Windows.Forms.StatusBarPanel.Width%2A>|100|  
  
 你可以更改任何通过单独属性调用这些属性的值。  
  
   
  
## Examples  
 下面的代码示例创建<xref:System.Windows.Forms.StatusBar>控件在窗体上，添加两个<xref:System.Windows.Forms.StatusBarPanel>对象。 第一个<xref:System.Windows.Forms.StatusBarPanel>命名`panel1`，显示的应用程序状态文本。 第二个<xref:System.Windows.Forms.StatusBarPanel>命名`panel2`、 显示当前日期，并使用<xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>属性<xref:System.Windows.Forms.StatusBarPanel>类来显示当前时间。 该示例使用<xref:System.Windows.Forms.StatusBar.ShowPanels%2A>属性以确保显示多个面板而不是一个标准面板，并使用<xref:System.Windows.Forms.StatusBar.Panels%2A>属性来访问<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A>方法<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>若要添加到面板<xref:System.Windows.Forms.StatusBar>。 此示例还使用<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>， <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>， <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>，和<xref:System.Windows.Forms.StatusBarPanel.Text%2A>属性，以初始化<xref:System.Windows.Forms.StatusBarPanel>对象。 此示例假定在此示例中定义的方法定义并从的构造函数调用<xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HorizontalAlignment Alignment { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置状态栏面板中文本和图标的对齐方式。</summary>
        <value>
          <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 值之一。 默认值为 <see cref="F:System.Windows.Forms.HorizontalAlignment.Left" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此属性水平对齐文本和/或图标分配给<xref:System.Windows.Forms.StatusBarPanel.Icon%2A>在面板的边框内的属性。 文本和图标可以对齐到左、 右或的中心<xref:System.Windows.Forms.StatusBarPanel>。 将没有办法独立位置中的图标<xref:System.Windows.Forms.StatusBarPanel>。 例如，您不能放置到左侧的图标<xref:System.Windows.Forms.StatusBarPanel>时对齐右侧的文本。 无论中文本的对齐文本的左侧始终位于图标。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.StatusBar.SizingGrip%2A?displayProperty=nameWithType>， <xref:System.Windows.Forms.StatusBarPanel.Alignment%2A>， <xref:System.Windows.Forms.StatusBarPanel.Width%2A>， <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>，和<xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>属性，以及如何处理<xref:System.Windows.Forms.StatusBar.PanelClick?displayProperty=nameWithType>事件。  
  
 若要运行该示例，请将以下代码粘贴到窗体中。 调用`InitializeStatusBarPanels`窗体的构造函数中的方法或<xref:System.Windows.Forms.Form.Load>事件处理方法。  
  
 [!code-cpp[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">分配给属性的值不是 <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 枚举的成员。</exception>
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.Icon" />
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.StatusBarPanelAutoSize AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.StatusBarPanelAutoSize AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSize As StatusBarPanelAutoSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::StatusBarPanelAutoSize AutoSize { System::Windows::Forms::StatusBarPanelAutoSize get(); void set(System::Windows::Forms::StatusBarPanelAutoSize value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanelAutoSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否自动调整状态栏面板的大小。</summary>
        <value>
          <see cref="T:System.Windows.Forms.StatusBarPanelAutoSize" /> 值之一。 默认值为 <see cref="F:System.Windows.Forms.StatusBarPanelAutoSize.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBarPanel> 对象设置为<xref:System.Windows.Forms.StatusBarPanelAutoSize.Contents>通过设置为这些面板具有优先级<xref:System.Windows.Forms.StatusBarPanelAutoSize.Spring>值。 例如，<xref:System.Windows.Forms.StatusBarPanel>具有其<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>属性设置为<xref:System.Windows.Forms.StatusBarPanelAutoSize.Spring>如果缩短<xref:System.Windows.Forms.StatusBarPanel>与<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>属性设置为<xref:System.Windows.Forms.StatusBarPanelAutoSize.Contents>需要该空间。  
  
 你可以使用<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>以确保内容<xref:System.Windows.Forms.StatusBarPanel>正确地显示在<xref:System.Windows.Forms.StatusBar>包含多个面板的控件。 例如，你可能想包含要与它显示的文本量会自动调整文本的面板 (<xref:System.Windows.Forms.StatusBarPanelAutoSize.Contents>)，而另一个面板<xref:System.Windows.Forms.StatusBar>一个所有者描述的进度栏将需要是固定的大小以显示 (<xref:System.Windows.Forms.StatusBarPanelAutoSize.None>).  
  
   
  
## Examples  
 下面的代码示例创建<xref:System.Windows.Forms.StatusBar>控件在窗体上，添加两个<xref:System.Windows.Forms.StatusBarPanel>对象。 第一个<xref:System.Windows.Forms.StatusBarPanel>命名`panel1`，显示的应用程序状态文本。 第二个<xref:System.Windows.Forms.StatusBarPanel>命名`panel2`、 显示当前日期，并使用<xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>属性<xref:System.Windows.Forms.StatusBarPanel>类来显示当前时间。 该示例使用<xref:System.Windows.Forms.StatusBar.ShowPanels%2A>属性以确保显示多个面板而不是一个标准面板，并使用<xref:System.Windows.Forms.StatusBar.Panels%2A>属性来访问<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A>方法<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>若要添加到面板<xref:System.Windows.Forms.StatusBar>。 此示例还使用<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>， <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>， <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>，和<xref:System.Windows.Forms.StatusBarPanel.Text%2A>属性，以初始化<xref:System.Windows.Forms.StatusBarPanel>对象。 此示例假定在此示例中定义的方法定义并从的构造函数调用<xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">分配给属性的值不是 <see cref="T:System.Windows.Forms.StatusBarPanelAutoSize" /> 枚举的成员。</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanelAutoSize" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>开始 <see cref="T:System.Windows.Forms.StatusBarPanel" /> 的初始化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于启动窗体上使用或由另一个组件的组件的初始化。 <xref:System.Windows.Forms.StatusBarPanel.EndInit%2A>方法初始化已结束。 使用<xref:System.Windows.Forms.StatusBarPanel.BeginInit%2A>和<xref:System.Windows.Forms.StatusBarPanel.EndInit%2A>方法阻止控件完全初始化之前使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBarPanel.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.StatusBarPanelBorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.StatusBarPanelBorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As StatusBarPanelBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::StatusBarPanelBorderStyle BorderStyle { System::Windows::Forms::StatusBarPanelBorderStyle get(); void set(System::Windows::Forms::StatusBarPanelBorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanelBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置状态栏面板的边框样式。</summary>
        <value>
          <see cref="T:System.Windows.Forms.StatusBarPanelBorderStyle" /> 值之一。 默认值为 <see cref="F:System.Windows.Forms.StatusBarPanelBorderStyle.Sunken" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此属性来区分从其他面板中的一个面板<xref:System.Windows.Forms.StatusBar>控件。  
  
   
  
## Examples  
 下面的代码示例创建<xref:System.Windows.Forms.StatusBar>控件在窗体上，添加两个<xref:System.Windows.Forms.StatusBarPanel>对象。 第一个<xref:System.Windows.Forms.StatusBarPanel>命名`panel1`，显示的应用程序状态文本。 第二个<xref:System.Windows.Forms.StatusBarPanel>命名`panel2`、 显示当前日期，并使用<xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>属性<xref:System.Windows.Forms.StatusBarPanel>类来显示当前时间。 该示例使用<xref:System.Windows.Forms.StatusBar.ShowPanels%2A>属性以确保显示多个面板而不是一个标准面板，并使用<xref:System.Windows.Forms.StatusBar.Panels%2A>属性来访问<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A>方法<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>若要添加到面板<xref:System.Windows.Forms.StatusBar>。 此示例还使用<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>， <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>， <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>，和<xref:System.Windows.Forms.StatusBarPanel.Text%2A>属性，以初始化<xref:System.Windows.Forms.StatusBarPanel>对象。 此示例假定在此示例中定义的方法定义并从的构造函数调用<xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">分配给属性的值不是 <see cref="T:System.Windows.Forms.StatusBarPanelBorderStyle" /> 枚举的成员。</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanelBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
        <summary>释放由 <see cref="T:System.Windows.Forms.StatusBarPanel" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。 `Dispose()` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。 <xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。  
  
 当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Windows.Forms.StatusBarPanel> 引用的、由任何托管对象持有的全部资源。 此方法调用每个引用对象的 `Dispose()` 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> 可以由其他对象多次调用。 在重写<see langword="Dispose(Boolean)" />请注意不要引用已释放的以前调用中的对象<see langword="Dispose" />。 有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
 有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>结束 <see cref="T:System.Windows.Forms.StatusBarPanel" /> 的初始化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于结束的初始化由另一个组件的组件。 <xref:System.Windows.Forms.StatusBarPanel.BeginInit%2A>方法开始初始化。 使用<xref:System.Windows.Forms.StatusBarPanel.BeginInit%2A>和<xref:System.Windows.Forms.StatusBarPanel.EndInit%2A>方法阻止控件完全初始化之前使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBarPanel.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要显示在状态栏面板中的图标。</summary>
        <value>
          <see cref="T:System.Drawing.Icon" /> 表示要显示在面板中的图标。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可用于显示一个图标表示你的应用程序或你的应用程序内的进程的状态。 例如，可以显示中的图标<xref:System.Windows.Forms.StatusBarPanel>指出保存操作的文件是否正在进行或已完成。  
  
> [!NOTE]
>  将没有办法独立位置中的图标<xref:System.Windows.Forms.StatusBarPanel>。 例如，您不能放置到左侧的图标<xref:System.Windows.Forms.StatusBarPanel>对齐上右侧使用的文本时<xref:System.Windows.Forms.StatusBarPanel.Alignment%2A>属性。 无论文本的对齐方式的面板的文本的左侧始终位于图标。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Icon" />
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public int MinWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property MinWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.StatusBar" /> 控件中状态栏面板的最小允许宽度。</summary>
        <value>
          <see cref="T:System.Windows.Forms.StatusBarPanel" /> 的最小宽度（以像素为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A>使用属性时<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>属性设置为<xref:System.Windows.Forms.StatusBarPanelAutoSize.Contents>或<xref:System.Windows.Forms.StatusBarPanelAutoSize.Spring>以防止<xref:System.Windows.Forms.StatusBarPanel>从自动调整大小太小的宽度。 当<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>属性设置为<xref:System.Windows.Forms.StatusBarPanelAutoSize.None>、<xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A>属性自动设置为相同的值<xref:System.Windows.Forms.StatusBarPanel.Width%2A>属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">为该属性指定的值小于零。</exception>
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.AutoSize" />
        <altmember cref="T:System.Windows.Forms.StatusBarPanelAutoSize" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置应用于 <see cref="T:System.Windows.Forms.StatusBarPanel" /> 的名称。</summary>
        <value>
          <see cref="T:System.Windows.Forms.StatusBarPanel" /> 的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBarPanel.Name%2A>属性对应的密钥<xref:System.Windows.Forms.StatusBarPanel>中<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.StatusBar Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.StatusBar Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As StatusBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::StatusBar ^ Parent { System::Windows::Forms::StatusBar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取承载状态栏面板的 <see cref="T:System.Windows.Forms.StatusBar" /> 控件。</summary>
        <value>包含面板的 <see cref="T:System.Windows.Forms.StatusBar" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此属性来确定<xref:System.Windows.Forms.StatusBar>控件<xref:System.Windows.Forms.StatusBarPanel>中包含。 <xref:System.Windows.Forms.StatusBarPanel> 对象添加到<xref:System.Windows.Forms.StatusBar>通过调用控件<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A>方法<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>类。 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>的<xref:System.Windows.Forms.StatusBar>控件是可通过访问<xref:System.Windows.Forms.StatusBar.Panels%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.StatusBar" />
        <altmember cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.StatusBarPanelStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.StatusBarPanelStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As StatusBarPanelStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::StatusBarPanelStyle Style { System::Windows::Forms::StatusBarPanelStyle get(); void set(System::Windows::Forms::StatusBarPanelStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置状态栏面板的样式。</summary>
        <value>
          <see cref="T:System.Windows.Forms.StatusBarPanelStyle" /> 值之一。 默认值为 <see cref="F:System.Windows.Forms.StatusBarPanelStyle.Text" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此属性以指示是否<xref:System.Windows.Forms.StatusBarPanel>显示文本或面板作为一个所有者绘制的管理是否<xref:System.Windows.Forms.StatusBarPanel>。 若要确定<xref:System.Windows.Forms.StatusBarPanel>需要创建的事件处理程序、 绘制<xref:System.Windows.Forms.StatusBar.DrawItem>事件<xref:System.Windows.Forms.StatusBar>控件。 <xref:System.Windows.Forms.StatusBarDrawItemEventArgs>作为参数传递给事件处理程序的<xref:System.Windows.Forms.StatusBar.DrawItem>事件使您能够确定哪个面板需要绘制。 <xref:System.Windows.Forms.StatusBarDrawItemEventArgs>还提供了<xref:System.Drawing.Graphics>对象时可使用在上执行绘制任务<xref:System.Windows.Forms.StatusBarPanel>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.StatusBarPanel.Style%2A>属性，<xref:System.Windows.Forms.StatusBarDrawItemEventHandler>委托，<xref:System.Windows.Forms.StatusBarDrawItemEventArgs>类，<xref:System.Windows.Forms.StatusBarPanelStyle>枚举，和<xref:System.Windows.Forms.StatusBarDrawItemEventArgs.Panel%2A?displayProperty=nameWithType>属性。 若要运行该示例，请将以下代码粘贴到窗体中。 调用`InitializeStatusBarPanels`窗体的构造函数中的方法或<xref:System.Windows.Forms.Form.Load>事件方法。  
  
 [!code-cpp[System.Windows.Forms.StatusBarDrawItemEventHandler#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarDrawItemEventHandler/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.StatusBarDrawItemEventHandler#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarDrawItemEventHandler/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.StatusBarDrawItemEventHandler#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.StatusBarDrawItemEventHandler/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">分配给属性的值不是 <see cref="T:System.Windows.Forms.StatusBarPanelStyle" /> 枚举的成员。</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanelStyle" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含有关 <see cref="T:System.Windows.Forms.StatusBarPanel" /> 的数据的对象。</summary>
        <value>
          <see cref="T:System.Object" />，其中包含有关 <see cref="T:System.Windows.Forms.StatusBarPanel" /> 的数据。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置状态栏面板的文本。</summary>
        <value>面板中显示的文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性表示的文本时，所显示<xref:System.Windows.Forms.StatusBarPanel.Style%2A>属性设置为<xref:System.Windows.Forms.StatusBarPanelStyle.Text>。 你可以使用此属性显示关于你的应用程序中的信息<xref:System.Windows.Forms.StatusBar>控件。 例如，你可以使用<xref:System.Windows.Forms.StatusBarPanel.Text%2A>属性来显示帮助信息，当用户将鼠标移到菜单或显示的名称和应用程序中打开的文件的位置。 若要对齐文本<xref:System.Windows.Forms.StatusBarPanel>，使用<xref:System.Windows.Forms.StatusBarPanel.Alignment%2A>属性。  
  
   
  
## Examples  
 下面的代码示例创建<xref:System.Windows.Forms.StatusBar>控件在窗体上，添加两个<xref:System.Windows.Forms.StatusBarPanel>对象。 第一个<xref:System.Windows.Forms.StatusBarPanel>命名`panel1`，显示的应用程序状态文本。 第二个<xref:System.Windows.Forms.StatusBarPanel>命名`panel2`、 显示当前日期，并使用<xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>属性<xref:System.Windows.Forms.StatusBarPanel>类来显示当前时间。 该示例使用<xref:System.Windows.Forms.StatusBar.ShowPanels%2A>属性以确保显示多个面板而不是一个标准面板，并使用<xref:System.Windows.Forms.StatusBar.Panels%2A>属性来访问<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A>方法<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>若要添加到面板<xref:System.Windows.Forms.StatusBar>。 此示例还使用<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>， <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>， <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>，和<xref:System.Windows.Forms.StatusBarPanel.Text%2A>属性，以初始化<xref:System.Windows.Forms.StatusBarPanel>对象。 此示例假定在此示例中定义的方法定义并从的构造函数调用<xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与状态栏面板关联的工具提示文本。</summary>
        <value>面板的工具提示文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此属性以工具提示中显示其他信息，当鼠标指针停留在<xref:System.Windows.Forms.StatusBarPanel>。 例如，可以显示工具提示提供数据的传输速度<xref:System.Windows.Forms.StatusBarPanel>显示的文件传输的状态。  
  
 若要显示有关你的应用程序中的其他控件的工具提示，请使用<xref:System.Windows.Forms.ToolTip>控件。  
  
   
  
## Examples  
 下面的代码示例创建<xref:System.Windows.Forms.StatusBar>控件在窗体上，添加两个<xref:System.Windows.Forms.StatusBarPanel>对象。 第一个<xref:System.Windows.Forms.StatusBarPanel>命名`panel1`，显示的应用程序状态文本。 第二个<xref:System.Windows.Forms.StatusBarPanel>命名`panel2`、 显示当前日期，并使用<xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>属性<xref:System.Windows.Forms.StatusBarPanel>类来显示当前时间。 该示例使用<xref:System.Windows.Forms.StatusBar.ShowPanels%2A>属性以确保显示多个面板而不是一个标准面板，并使用<xref:System.Windows.Forms.StatusBar.Panels%2A>属性来访问<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A>方法<xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>若要添加到面板<xref:System.Windows.Forms.StatusBar>。 此示例还使用<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>， <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>， <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>，和<xref:System.Windows.Forms.StatusBarPanel.Text%2A>属性，以初始化<xref:System.Windows.Forms.StatusBarPanel>对象。 此示例假定在此示例中定义的方法定义并从的构造函数调用<xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索一个字符串，该字符串包含面板的信息。</summary>
        <returns>返回一个字符串，该字符串包含控件的类名以及控件所含的文本。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.StatusBar" /> 控件中状态栏面板的宽度。</summary>
        <value>
          <see cref="T:System.Windows.Forms.StatusBarPanel" /> 的宽度（以像素为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBarPanel.Width%2A>属性始终反映的实际宽度<xref:System.Windows.Forms.StatusBarPanel>，并且不能小于<xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A>属性。 自动调整大小的宽度<xref:System.Windows.Forms.StatusBarPanel>内容的<xref:System.Windows.Forms.StatusBarPanel>，你可以使用<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.StatusBar.SizingGrip%2A?displayProperty=nameWithType>， <xref:System.Windows.Forms.StatusBarPanel.Alignment%2A>， <xref:System.Windows.Forms.StatusBarPanel.Width%2A>， <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>，和<xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>属性，以及如何处理<xref:System.Windows.Forms.StatusBar.PanelClick?displayProperty=nameWithType>事件。  
  
 若要运行该示例，请将以下代码粘贴到窗体中。 调用`InitializeStatusBarPanels`窗体的构造函数中的方法或<xref:System.Windows.Forms.Form.Load>事件处理方法。  
  
 [!code-cpp[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定的宽度小于 <see cref="P:System.Windows.Forms.StatusBarPanel.MinWidth" /> 属性的值。</exception>
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.MinWidth" />
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.AutoSize" />
      </Docs>
    </Member>
  </Members>
</Type>