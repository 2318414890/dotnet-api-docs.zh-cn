<Type Name="DataGridViewCellStyle" FullName="System.Windows.Forms.DataGridViewCellStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d6394dce2f29025abd7fa5921d01ab2ebd4a4920" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640671" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewCellStyle : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewCellStyle extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCellStyle" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewCellStyle&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCellStyle : ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewCellStyleEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridViewCellStyleConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示应用到 <see cref="T:System.Windows.Forms.DataGridView" /> 控件中的各个单元格的格式设置和样式信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCellStyle>类，可在多个共享样式信息<xref:System.Windows.Forms.DataGridView>单元格、 行、 列和行或列标题，避免设置单个单元格的样式属性的内存要求。 有关类型的属性类详细信息<xref:System.Windows.Forms.DataGridViewCellStyle>以及如何它们都将互相关联起来，请参阅[在 Windows 窗体 DataGridView 控件中的单元格样式](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何设置多个属性的效果<xref:System.Windows.Forms.DataGridViewCellStyle>对象。 本示例中的单元格的背景色<xref:System.Windows.Forms.DataGridView>通过设置<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>属性<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>属性。 背景色被重写交替行，因为<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>上设置属性<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>属性。 该示例还可确定在名为的列中的日期格式`Last Prepared`通过设置<xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>列的属性<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A>属性。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#10)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" />
    <altmember cref="P:System.Windows.Forms.DataGridViewBand.InheritedStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.Style" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> 类的新实例。</summary>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCellStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewCellStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用默认属性值初始化 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCellStyle (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.#ctor(System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewCellStyle(System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCellStyle">
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> 作为模板使用以提供初始属性值。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> 的属性值初始化 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewCellStyle" /> 为 <see langword="null" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewContentAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewContentAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As DataGridViewContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewContentAlignment Alignment { System::Windows::Forms::DataGridViewContentAlignment get(); void set(System::Windows::Forms::DataGridViewContentAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.DataGridView" /> 单元格内的单元格内容的位置。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewContentAlignment" /> 值之一。 默认值为 <see cref="F:System.Windows.Forms.DataGridViewContentAlignment.NotSet" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此属性。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#072](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#072)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#072](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#072)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">属性值不是有效的 <see cref="T:System.Windows.Forms.DataGridViewContentAlignment" /> 值。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ApplyStyle">
      <MemberSignature Language="C#" Value="public virtual void ApplyStyle (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyStyle(class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.ApplyStyle(System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyStyle(System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCellStyle">应用于当前 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> 的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <summary>将指定的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> 应用于当前 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCellStyle.ApplyStyle%2A>方法所适用的设置中的属性的值`dataGridViewCellStyle`当前参数<xref:System.Windows.Forms.DataGridViewCellStyle>。 如果未设置属性`dataGridViewCellStyle`，当前<xref:System.Windows.Forms.DataGridViewCellStyle>会保留该属性及其值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewCellStyle" /> 为 <see langword="null" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.DataGridView" /> 单元格的背景色。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，它表示单元格的背景色。 默认值为 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例设置中的单元格的背景色<xref:System.Windows.Forms.DataGridView>通过设置<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>属性<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>属性。 请注意的背景色中重写上交替行，因为<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>上设置属性<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>属性。 此代码示例摘自更大的示例为提供<xref:System.Windows.Forms.DataGridViewCellStyle>类。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewCellStyle Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewCellStyle Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewCellStyle ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> 的一个精确副本。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />，它表示该单元格样式的精确副本。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceNullValue">
      <MemberSignature Language="C#" Value="public object DataSourceNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSourceNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSourceNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用户在单元格中输入 null 值时保存到数据源的值。</summary>
        <value>当用户输入 null 单元格值时保存到数据源的值。 默认值为 <see cref="F:System.DBNull.Value" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用户可以在单元格中输入 null 值，通过按 CTRL + 0 或通过键入的值<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>属性。 当用户提交更改时，基础单元格的值设置为值<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>属性或`null`如果<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>是<xref:System.DBNull.Value?displayProperty=nameWithType>和的单元格<xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>是引用类型。 当你设置此转换不会发生<xref:System.Windows.Forms.DataGridViewCell.Value%2A?displayProperty=nameWithType>属性以编程方式。  
  
> [!NOTE]
>  控件不显示<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>属性值的单元格的值等于<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>属性值时<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>设置一个值为非<xref:System.DBNull.Value?displayProperty=nameWithType>或`null`。 在这种情况下，你可以处理<xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType>事件以显示<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>属性值。 有关详细信息，请参阅本主题中的代码示例。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此属性。 在此示例中，<xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType>事件处理程序显示的值<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>属性时单元格的值等于<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.IsDataSourceNullValueDefault" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">与此实例进行比较的对象，或为 <see langword="null" />。</param>
        <summary>返回一个值，该值指示此实例是否与指定的对象等效。</summary>
        <returns>
          如果 <paramref name="o" /> 为 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> 并且与此实例具有相同的属性值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置应用于 <see cref="T:System.Windows.Forms.DataGridView" /> 单元格的文本内容的字体。</summary>
        <value>应用于单元格文本的 <see cref="T:System.Drawing.Font" />。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可用于更改应用到单元格的文本的字体样式。 因为<xref:System.Drawing.Font>不可变 （其属性是只读的），你可以修改此属性仅通过分配一个新或现有<xref:System.Drawing.Font>到它; 你不能更改的属性返回的对象直接。  
  
   
  
## Examples  
 下面的代码示例设置列标题的字体。 若要运行此示例，请将代码粘贴到一个包含窗体<xref:System.Windows.Forms.DataGridView>名为`GridView1`，然后调用`SetupUpDataGridView`和`PopulateDataGridView`从窗体的构造函数的方法或<xref:System.Windows.Forms.Form.OnLoad%2A>方法。 确保所有事件都都使用其事件处理方法关联。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.DataGridView" /> 单元格的前景色。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，它表示单元格的前景色。 默认值为 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>属性通常应指定将与进行比较的一种颜色<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何设置<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>和<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>交替行中的单元格的属性。 此代码示例摘自更大的示例为提供<xref:System.Windows.Forms.DataGridViewCellStyle>类。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Format" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Format { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FormatStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置应用于 <see cref="T:System.Windows.Forms.DataGridView" /> 单元格的文本内容的格式字符串。</summary>
        <value>指示单元格的值的格式的字符串。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>属性指定如何将单元格的值格式化为字符串。 有关详细信息，请参阅[类型格式设置](~/docs/standard/base-types/formatting-types.md)。  
  
   
  
## Examples  
 下面的代码示例中名为的列设置日期的格式`Last Fixed`到"月、 年"通过设置<xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>列的属性<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A>属性。 此代码示例摘自更大的示例为提供<xref:System.Windows.Forms.DataGridViewCellStyle>类。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="FormatProvider">
      <MemberSignature Language="C#" Value="public IFormatProvider FormatProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatProvider" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatProvider As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IFormatProvider ^ FormatProvider { IFormatProvider ^ get(); void set(IFormatProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置对象，该对象用于提供 <see cref="T:System.Windows.Forms.DataGridView" /> 单元格值的特定于区域性的格式设置。</summary>
        <value>用于单元格格式设置的 <see cref="T:System.IFormatProvider" />。 默认值为 <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用作特定类型的哈希函数。</summary>
        <returns>当前 <see cref="T:System.Object" /> 的哈希代码。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="IsDataSourceNullValueDefault">
      <MemberSignature Language="C#" Value="public bool IsDataSourceNullValueDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDataSourceNullValueDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.IsDataSourceNullValueDefault" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDataSourceNullValueDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDataSourceNullValueDefault { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示是否已设置 <see cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" /> 属性的值。</summary>
        <value>
          如果 <see cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" /> 属性的值是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性来确定是否<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>属性已显式设置而无需存储的比较其默认值。 这可因为<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>属性具有非空默认值，与大多数其他不同<xref:System.Windows.Forms.DataGridViewCellStyle>属性，如具有默认值`null`， <xref:System.Drawing.Color.Empty>，或<xref:System.Windows.Forms.DataGridViewContentAlignment.NotSet>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
      </Docs>
    </Member>
    <Member MemberName="IsFormatProviderDefault">
      <MemberSignature Language="C#" Value="public bool IsFormatProviderDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFormatProviderDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.IsFormatProviderDefault" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFormatProviderDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFormatProviderDefault { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否已设置了 <see cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" /> 属性。</summary>
        <value>
          如果 <see cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" /> 属性为默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性来确定是否<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>属性已显式设置而无需存储的比较其默认值。 这可因为<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>属性具有非空默认值，与大多数其他不同<xref:System.Windows.Forms.DataGridViewCellStyle>属性，如具有默认值`null`， <xref:System.Drawing.Color.Empty>，或<xref:System.Windows.Forms.DataGridViewContentAlignment.NotSet>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="IsNullValueDefault">
      <MemberSignature Language="C#" Value="public bool IsNullValueDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullValueDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.IsNullValueDefault" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullValueDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullValueDefault { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示是否已设置 <see cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" /> 属性的值。</summary>
        <value>
          如果 <see cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" /> 属性的值是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性来确定是否<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>属性已显式设置而无需存储的比较其默认值。 这可因为<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>属性具有非空默认值，与大多数其他不同<xref:System.Windows.Forms.DataGridViewCellStyle>属性，如具有默认值`null`， <xref:System.Drawing.Color.Empty>，或<xref:System.Windows.Forms.DataGridViewContentAlignment.NotSet>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="NullValue">
      <MemberSignature Language="C#" Value="public object NullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 <see cref="T:System.Windows.Forms.DataGridView" /> 或 <see langword="null" /> 的单元格值对应的 <see cref="F:System.DBNull.Value" /> 单元格显示值。</summary>
        <value>用于指示单元格为 null 值的对象。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Windows.Forms.DataGridView>使用此单元格样式的单元格的值为<xref:System.DBNull.Value?displayProperty=nameWithType>或`null`或用户编辑单元格，并按下 CTRL + 0、<xref:System.Windows.Forms.DataGridView>控制显示<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>属性值。 当用户编辑包含此单元格样式的单元格和进入此属性的值或按下 CTRL + 0 时，控件将单元格的值设置为的值<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>属性或`null`如果<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>是<xref:System.DBNull.Value?displayProperty=nameWithType>和的单元格<xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>是引用类型。 当你设置此转换不会发生<xref:System.Windows.Forms.DataGridViewCell.Value%2A?displayProperty=nameWithType>属性以编程方式。  
  
> [!NOTE]
>  控件不显示<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>属性值的单元格的值等于<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>属性值时<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>设置一个值为非<xref:System.DBNull.Value?displayProperty=nameWithType>或`null`。 在这种情况下，你可以处理<xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType>事件以显示<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>属性值。 有关详细信息，请参阅本主题中的代码示例。  
  
 此属性采用任何对象，这使您能够指定一个值，与相应的单元格的显示类型的类型。 例如，你可以设置此属性为使用的字符串值的文本框单元格中或映像，以用于图像单元格。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此属性。 在此示例中，<xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType>事件处理程序显示的值<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>属性时单元格的值等于<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.IsDataSourceNullValueDefault" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 的边缘和它的内容之间的距离。</summary>
        <value>
          <see cref="T:System.Windows.Forms.Padding" />，它表示 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 的边缘和它的内容之间的距离。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:System.Windows.Forms.DataGridViewCellStyle.Padding%2A>属性会影响的位置的编辑控件的<xref:System.Windows.Forms.DataGridViewCell>绘制。 例如，如果你设置<xref:System.Windows.Forms.DataGridViewCellStyle.Padding%2A>上<xref:System.Windows.Forms.DataGridViewTextBoxCell>到<xref:System.Windows.Forms.Padding?displayProperty=nameWithType>，其值为 10 其<xref:System.Windows.Forms.Padding.Left%2A>， <xref:System.Windows.Forms.Padding.Top%2A>， <xref:System.Windows.Forms.Padding.Right%2A>，和<xref:System.Windows.Forms.Padding.Bottom%2A>属性，该单元格的内容绘制在垂直方向与空间为文本框的边缘与单元格边缘之间的 10 像素。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此属性在<xref:System.Windows.Forms.DataGridView>包含所有者描述行的控件。 每行显示跨越下常规单元格内容的行的整个宽度的文本。 <xref:System.Windows.Forms.DataGridViewCellStyle.Padding%2A>属性用于为此文本提供额外的空间。 在示例中，所需的额外高度存储在名为常量`CUSTOM_CONTENT_HEIGHT`。  
  
 此代码示例摘自更大的示例。 有关完整示例，请参阅[如何： 自定义 Windows 窗体 DataGridView 控件中的行外观](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="SelectionBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.DataGridView" /> 单元格在被选定时的背景色。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，它表示选定单元格的背景色。 默认值为 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此属性在<xref:System.Windows.Forms.DataGridView>主要用于显示的控件。 在此示例中，有几个方面，自定义控件的可视外观和控件配置为有限的交互。 此示例摘自更大的示例中提供<xref:System.Windows.Forms.DataGridViewCellStyle>类概述。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="SelectionForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.SelectionForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.DataGridView" /> 单元格在被选定时的前景色。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，它表示选定单元格的前景色。 默认值为 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCellStyle.SelectionForeColor%2A>属性通常应指定将与进行比较的一种颜色<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此属性在<xref:System.Windows.Forms.DataGridView>主要用于显示的控件。 在此示例中，有几个方面，自定义控件的可视外观和控件配置为有限的交互。 此示例摘自更大的示例中提供<xref:System.Windows.Forms.DataGridViewCellStyle>类概述。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> 的一个精确副本。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />，它表示该单元格样式的精确副本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Windows.Forms.DataGridViewCellStyle> 实例强制转换为 <xref:System.ICloneable> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含了与 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> 相关的其他数据的对象。</summary>
        <value>包含其他数据的对象。 默认值为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个字符串，该字符串指示 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> 的当前属性设置。</summary>
        <returns>指示 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> 的当前属性设置的字符串。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewTriState WrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewTriState WrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.WrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapMode As DataGridViewTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewTriState WrapMode { System::Windows::Forms::DataGridViewTriState get(); void set(System::Windows::Forms::DataGridViewTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示当 <see cref="T:System.Windows.Forms.DataGridView" /> 单元格中的文本内容太长而不能放在单行中时，是将它换到下一行还是将它截断。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewTriState" /> 值之一。 默认值为 <see cref="F:System.Windows.Forms.DataGridViewTriState.NotSet" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>是<xref:System.Windows.Forms.DataGridViewTriState.False>的单元格包含文本，该单元格在单独的行，显示的文本，并将任何嵌入的换行字符显示为方框字符。 如果<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>是<xref:System.Windows.Forms.DataGridViewTriState.True>单元格包含文本，该单元格显示换行字符作为行中断，但还包装了超过单元格的宽度的所有行。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此属性。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#074](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#074)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#074](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#074)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">属性值不是有效的 <see cref="T:System.Windows.Forms.DataGridViewTriState" /> 值。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>