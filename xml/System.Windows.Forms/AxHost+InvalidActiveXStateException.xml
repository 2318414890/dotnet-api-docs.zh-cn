<Type Name="AxHost+InvalidActiveXStateException" FullName="System.Windows.Forms.AxHost+InvalidActiveXStateException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d56a226ea1dc341ca78bad3576acf047822a195" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30636431" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AxHost.InvalidActiveXStateException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit AxHost/InvalidActiveXStateException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AxHost.InvalidActiveXStateException" />
  <TypeSignature Language="VB.NET" Value="Public Class AxHost.InvalidActiveXStateException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public: ref class AxHost::InvalidActiveXStateException : Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>引用处于无效状态的 ActiveX 控件时引发的异常。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公共属性和方法的 ActiveX 控件只能引用后实例化 ActiveX 控件并将其初始化完全;否则为<xref:System.Windows.Forms.AxHost.InvalidActiveXStateException>引发异常。 <xref:System.Windows.Forms.AxHost.InvalidActiveXStateException>异常类包含的名称进行引用的成员和类型的成员。 成员类型是<xref:System.Windows.Forms.AxHost.ActiveXInvokeKind>枚举值。  
  
   
  
## Examples  
 下面的代码示例重写构造函数中，与<xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A>和<xref:System.Windows.Forms.AxHost.AttachInterfaces%2A>方法<xref:System.Windows.Forms.AxHost>派生包装 Microsoft 掩码编辑 ActiveX 控件的类。 此代码需要通过运行 AxImp.exe MSMask32.ocx 文件上创建了所生成的源代码`/source`开关来生成要编辑的包装类。 此代码将仅显示在 C# 语法，因为它是唯一的语言输出由 AxImp.exe。  
  
 [!code-csharp[AxHost_Wrap_MaskEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AxHost_Wrap_MaskEdit/CS/axmsmask.cs#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.AxHost.ActiveXInvokeKind" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidActiveXStateException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.InvalidActiveXStateException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidActiveXStateException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException" /> 类的新实例，但不指定有关引用了该 ActiveX 控件的成员的信息。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidActiveXStateException (string name, System.Windows.Forms.AxHost.ActiveXInvokeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Windows.Forms.AxHost/ActiveXInvokeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.InvalidActiveXStateException.#ctor(System.String,System.Windows.Forms.AxHost.ActiveXInvokeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, kind As AxHost.ActiveXInvokeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidActiveXStateException(System::String ^ name, System::Windows::Forms::AxHost::ActiveXInvokeKind kind);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="kind" Type="System.Windows.Forms.AxHost+ActiveXInvokeKind" />
      </Parameters>
      <Docs>
        <param name="name">引用处于无效状态的 ActiveX 控件的成员的名称。</param>
        <param name="kind">
          <see cref="T:System.Windows.Forms.AxHost.ActiveXInvokeKind" /> 值之一。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException" /> 类的新实例，并指示引用了该 ActiveX 控件的成员的名称及所进行的引用的种类。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例重写构造函数中，与<xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A>和<xref:System.Windows.Forms.AxHost.AttachInterfaces%2A>方法<xref:System.Windows.Forms.AxHost>派生包装 Microsoft 掩码编辑 ActiveX 控件的类。 此代码需要通过运行 AxImp.exe MSMask32.ocx 文件上创建了所生成的源代码`/source`开关来生成要编辑的包装类。 此代码将仅显示在 C# 语法，因为它是唯一的语言输出由 AxImp.exe。  
  
 [!code-csharp[AxHost_Wrap_MaskEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AxHost_Wrap_MaskEdit/CS/axmsmask.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AxHost.ActiveXInvokeKind" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.InvalidActiveXStateException.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建并返回当前异常的字符串表示形式。</summary>
        <returns>当前异常的字符串表示形式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回包含有关引用 ActiveX 控件和引用类型的成员的信息使其成为如果中提供此信息的字符串<xref:System.Windows.Forms.AxHost.InvalidActiveXStateException.%23ctor%28System.String%2CSystem.Windows.Forms.AxHost.ActiveXInvokeKind%29>构造函数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>