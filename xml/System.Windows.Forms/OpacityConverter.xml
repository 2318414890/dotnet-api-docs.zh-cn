<Type Name="OpacityConverter" FullName="System.Windows.Forms.OpacityConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ea33b1eb1e0b2b0d26e69b0ac4b1ceea55b018b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30647841" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OpacityConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OpacityConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpacityConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class OpacityConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpacityConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供类型转换器，用于将不透明度值转换为字符串，或将字符串转换不透明度值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，你并不直接创建的实例<xref:System.Windows.Forms.OpacityConverter>。 而应调用<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>方法<xref:System.ComponentModel.TypeDescriptor>类。 有关详细信息的类型转换器并查看代码示例，请参阅<xref:System.ComponentModel.TypeConverter>基类和[如何： 实现类型转换器](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpacityConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpacityConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.OpacityConverter" /> 类的实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这是由编译器提供的默认构造函数。  
  
 通常情况下，你并不直接创建的实例<xref:System.Windows.Forms.OpacityConverter>。 而应调用<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>方法<xref:System.ComponentModel.TypeDescriptor>类。 有关详细信息，请参阅中的代码示例<xref:System.ComponentModel.TypeConverter>基类。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">提供类型转换器上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="sourceType">表示要转换的类型的 <see cref="T:System.Type" />。</param>
        <summary>返回一个值，该值指示此转换器是否可将指定源类型的对象转换为使用指定上下文的转换器的本机类型。</summary>
        <returns>
          如果该转换器能够执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sourceType`预计会<xref:System.String>。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>重写该方法以提供您自己的转换需求。  
  
 你可以使用<paramref name="context" />参数提取有关从中调用该转换器的环境的附加信息。 该参数可能为<see langword="null" />，因此你始终应验证这些内容。 此外，属性<see cref="T:System.ComponentModel.ITypeDescriptorContext" />也可能返回<see langword="null" />。</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">提供类型转换器上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="culture">用于转换的区域设置信息。</param>
        <param name="value">要转换的对象。</param>
        <summary>将指定对象转换为转换器的本机类型。</summary>
        <returns>表示转换的 <paramref name="value" /> 的 <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.OpacityConverter.ConvertFrom%2A>方法专用于转换<xref:System.String>表示百分比或小数到其对应的值<xref:System.Double>表示百分比的不透明度的值。 之外的类型<xref:System.String>传递给此方法的基类实现。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">该对象不是转换所支持的类型。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="value" /> 未能正确地转换为类型 <see cref="T:System.Double" />。  
  
 或  
  
 得到的转换后的 <paramref name="value" /> 小于百分之零或大于百分之百。</exception>
        <block subset="none" type="overrides">
          <para>重写该方法以提供您自己的转换需求。  
  
 你可以使用<paramref name="context" />参数提取有关从中调用该转换器的环境的附加信息。 该参数可能为<see langword="null" />，因此你始终应验证这些内容。 此外，属性<see cref="T:System.ComponentModel.ITypeDescriptorContext" />也可能返回<see langword="null" />。</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">提供类型转换器上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="culture">用于转换的区域设置信息。</param>
        <param name="value">要转换的值。</param>
        <param name="destinationType">对象要转换为的类型。</param>
        <summary>从转换器的本机类型转换为目标类型的值。</summary>
        <returns>表示转换的 <paramref name="value" /> 的 <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.OpacityConverter.ConvertTo%2A>方法专用于整型将值转换为其<xref:System.String>百分比表示形式。 其他类型被传递给此方法的基类实现。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> 无法转换为 <paramref name="destinationType" />。</exception>
        <block subset="none" type="overrides">
          <para>重写该方法以提供您自己的转换需求。  
  
 你可以使用<paramref name="context" />参数提取有关从中调用该转换器的环境的附加信息。 该参数可能为<see langword="null" />，因此你始终应验证这些内容。 此外，属性<see cref="T:System.ComponentModel.ITypeDescriptorContext" />也可能返回<see langword="null" />。  
  
 生成的对象是<see cref="T:System.String" />表示百分比的不透明度。</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertFrom" />
      </Docs>
    </Member>
  </Members>
</Type>