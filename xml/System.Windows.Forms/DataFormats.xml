<Type Name="DataFormats" FullName="System.Windows.Forms.DataFormats">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dc5e28e0d04cd907a6f886d7b1737ad1227f43fe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640591" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataFormats" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataFormats extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataFormats" />
  <TypeSignature Language="VB.NET" Value="Public Class DataFormats" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataFormats" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供 <see langword="static" /> 预定义的 <see cref="T:System.Windows.Forms.Clipboard" /> 格式名称。 使用它们来标识存储在 <see cref="T:System.Windows.Forms.IDataObject" /> 中的数据的格式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.IDataObject>和<xref:System.Windows.Forms.DataObject>类也使用`static`格式列表，确定从系统中检索的数据的类型<xref:System.Windows.Forms.Clipboard>，或拖放操作中转移。  
  
 <xref:System.Windows.Forms.DataFormats.GetFormat%2A>方法允许你：  
  
-   获取预定义<xref:System.Windows.Forms.DataFormats.Format>对象格式名称或 ID 编号。  
  
-   添加新格式名称/ID 编号对为`static`列出在此类中和注册的 Windows 注册表格式<xref:System.Windows.Forms.Clipboard>格式后将其传递的格式名。  
  
 你可以获取<xref:System.Windows.Forms.DataFormats.Format.Id%2A>数或格式<xref:System.Windows.Forms.DataFormats.Format.Name%2A>中的相应属性<xref:System.Windows.Forms.DataFormats.Format>实例。  
  
   
  
## Examples  
 下面的代码示例创建名为的新数据格式`myFormat`。 该代码随后创建`MyNewObject`它将存储在<xref:System.Windows.Forms.DataObject>。 <xref:System.Windows.Forms.DataObject>复制到<xref:System.Windows.Forms.Clipboard>。  
  
 接下来，<xref:System.Windows.Forms.DataObject>从检索<xref:System.Windows.Forms.Clipboard>和`MyNewObject`恢复。 值`MyNewObject`打印在文本框中。 此代码需要`textBox1`已创建并放置在窗体上。  
  
 [!code-cpp[Classic DataFormats Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataFormats Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataFormats Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataFormats Example/CS/source.cs#1)]
 [!code-vb[Classic DataFormats Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataFormats Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Clipboard" />
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats.Format" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
    <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
    <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
  </Docs>
  <Members>
    <Member MemberName="Bitmap">
      <MemberSignature Language="C#" Value="public static readonly string Bitmap;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Bitmap" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Bitmap" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Bitmap As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Bitmap;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 位图格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 位图将计算机图形表示为一组位在内存中，而这些位表示在映像中的单个像素的属性。  
  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="CommaSeparatedValue">
      <MemberSignature Language="C#" Value="public static readonly string CommaSeparatedValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string CommaSeparatedValue" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.CommaSeparatedValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommaSeparatedValue As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ CommaSeparatedValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定以逗号分隔值 (CSV) 的格式，这是电子表格常用的交换格式。 Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Dib">
      <MemberSignature Language="C#" Value="public static readonly string Dib;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Dib" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Dib" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Dib As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Dib;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 与设备无关的位图 (DIB) 格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DIB 是专门用于确保可以加载和显示在另一个应用程序完全它们显示在原始的应用程序的方式使用一个应用程序创建的位图图形文件格式。  
  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Dif">
      <MemberSignature Language="C#" Value="public static readonly string Dif;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Dif" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Dif" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Dif As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Dif;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 数据交换格式 (DIF)，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 差异是在其中数据库、 电子表格和相似的文档进行构造以便于实现由其使用并传输到其他程序的 ASCII 码组成一格式。  
  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataFormats_CommaSeparatedValue#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataFormats_CommaSeparatedValue/CPP/dataformats_dif.cpp#1)]
 [!code-csharp[DataFormats_CommaSeparatedValue#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataFormats_CommaSeparatedValue/CS/dataformats_dif.cs#1)]
 [!code-vb[DataFormats_CommaSeparatedValue#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataFormats_CommaSeparatedValue/VB/dataformats_dif.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="EnhancedMetafile">
      <MemberSignature Language="C#" Value="public static readonly string EnhancedMetafile;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string EnhancedMetafile" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.EnhancedMetafile" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EnhancedMetafile As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ EnhancedMetafile;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 增强型图元文件格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 图元文件格式是存储在图形对象，而不是像素方面映像的 Windows 文件。 在调整大小时，则图元文件将保留能力优于位图图像。  
  
> [!NOTE]
>  使用剪贴板使用图元文件格式时，可能需要特殊的注意事项。 由于在当前实现中的限制<xref:System.Windows.Forms.DataObject>使用较旧的图元文件格式的应用程序可能无法识别类，使用.NET Framework 的图元文件格式。 在这种情况下，你必须进行互操作与 Win32 剪贴板应用程序编程接口 (Api)。 有关详细信息，请参阅 323530，"图元文件上剪贴板是不可见对所有应用程序，"在 Microsoft 知识库文章在http://support.microsoft.com。  
  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="FileDrop">
      <MemberSignature Language="C#" Value="public static readonly string FileDrop;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string FileDrop" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.FileDrop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FileDrop As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ FileDrop;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 文件放置格式，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此格式与 shell 文件的拖动在拖放操作期间交互。  
  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormat">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返回带有 Windows 剪贴板数字 ID 和名称的 <see cref="T:System.Windows.Forms.DataFormats.Format" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DataFormats.Format GetFormat (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.DataFormats/Format GetFormat(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataFormats.GetFormat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFormat (id As Integer) As DataFormats.Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DataFormats::Format ^ GetFormat(int id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataFormats+Format</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">格式 ID。</param>
        <summary>为指定的 ID 返回带有 Windows 剪贴板数字 ID 和名称的 <see cref="T:System.Windows.Forms.DataFormats.Format" />。</summary>
        <returns>一个 <see cref="T:System.Windows.Forms.DataFormats.Format" />，它具有 Windows 剪贴板数字 ID 和格式的名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员通常用于注册本机剪贴板格式。  
  
 调用<xref:System.Windows.Forms.DataFormats.GetFormat%2A>使用当你想要检索的 ID 号<xref:System.Windows.Forms.DataFormats.Format>实例，它包含 ID/格式名称对。 通常情况下，你使用的应用程序的创建者发布 ID 名称和编号<xref:System.Windows.Forms.Clipboard>以便与。 例如，在 Visual Basic 中的动态数据交换 (DDE) 会话信息的 ID 号是`&HBF00`，并且格式名称为`vbCFLink`。  
  
 调用此方法与 ID/格式名称将对添加到任何唯一 ID 号`static`格式名称/ID 的列表中对<xref:System.Windows.Forms.DataFormats>类。 通过串联"格式"和 ID 号，将创建新的名称。 此对未注册为新<xref:System.Windows.Forms.Clipboard>格式，因为你不提供的名称。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataFormats_GetFormat#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataFormats_GetFormat/CPP/dataformats_getformat.cpp#1)]
 [!code-csharp[DataFormats_GetFormat#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataFormats_GetFormat/CS/dataformats_getformat.cs#1)]
 [!code-vb[DataFormats_GetFormat#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataFormats_GetFormat/VB/dataformats_getformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataFormats.Format" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DataFormats.Format GetFormat (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.DataFormats/Format GetFormat(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DataFormats::Format ^ GetFormat(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataFormats+Format</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">格式名。</param>
        <summary>为指定的格式返回带有 Windows 剪贴板数字 ID 和名称的 <see cref="T:System.Windows.Forms.DataFormats.Format" />。</summary>
        <returns>一个 <see cref="T:System.Windows.Forms.DataFormats.Format" />，它具有 Windows 剪贴板数字 ID 和格式的名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用<xref:System.Windows.Forms.DataFormats.GetFormat%2A>您需要为现有格式的 Windows 剪贴板的数字 ID 的格式名。  
  
 调用此方法替换为你自己的格式名称创建新<xref:System.Windows.Forms.Clipboard>格式类型。 如果指定的格式不存在，此方法将该名称注册为包含 Windows 注册表的剪贴板格式，并获取的唯一格式标识符。 此新的名称/ID 对将添加到`static`格式名称/ID 的列表中对<xref:System.Windows.Forms.DataFormats>类。  
  
   
  
## Examples  
 下面的代码示例演示如何检索<xref:System.Windows.Forms.DataFormats.Format>表示格式名称/ID 对。 <xref:System.Windows.Forms.DataFormats.UnicodeText>请求格式，以及检索到的内容<xref:System.Windows.Forms.DataFormats.Format>将显示在文本框中。  
  
 此代码需要`textBox1`已实例化。  
  
 [!code-cpp[Classic DataFormats.GetFormat Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataFormats.GetFormat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataFormats.GetFormat Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataFormats.GetFormat Example/CS/source.cs#1)]
 [!code-vb[Classic DataFormats.GetFormat Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataFormats.GetFormat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">注册新的 <see cref="T:System.Windows.Forms.Clipboard" /> 格式失败。</exception>
        <altmember cref="T:System.Windows.Forms.DataFormats.Format" />
      </Docs>
    </Member>
    <Member MemberName="Html">
      <MemberSignature Language="C#" Value="public static readonly string Html;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Html" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Html" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Html As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Html;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 HTML 剪贴板格式中的文本。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类，以指示 CF_HTML 剪贴板数据类型。 有关此格式的详细信息，请参阅[HTML 剪贴板格式](http://go.microsoft.com/fwlink/?LinkId=198813)。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public static readonly string Locale;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Locale" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Locale" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Locale As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Locale;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 区域性格式，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="MetafilePict">
      <MemberSignature Language="C#" Value="public static readonly string MetafilePict;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MetafilePict" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.MetafilePict" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MetafilePict As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MetafilePict;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 图元文件格式，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 图元文件格式是存储在图形对象，而不是像素方面映像的 Windows 文件。 在调整大小时，则图元文件将保留能力优于位图图像。  
  
> [!NOTE]
>  使用剪贴板使用图元文件格式时，可能需要特殊的注意事项。 由于在当前实现中的限制<xref:System.Windows.Forms.DataObject>使用较旧的图元文件格式的应用程序可能无法识别类，使用.NET Framework 的图元文件格式。 在这种情况下，你必须进行互操作与 Win32 剪贴板应用程序编程接口 (Api)。 有关详细信息，请参阅 323530，"图元文件上剪贴板是不可见对所有应用程序，"在 Microsoft 知识库文章在http://support.microsoft.com。  
  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="OemText">
      <MemberSignature Language="C#" Value="public static readonly string OemText;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string OemText" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.OemText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OemText As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ OemText;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定标准 Windows 原始设备制造商 (OEM) 文本格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public static readonly string Palette;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Palette" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Palette As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Palette;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 调色板格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段来查询<xref:System.Windows.Forms.DataObject>它所包含的数据的格式。  
  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="PenData">
      <MemberSignature Language="C#" Value="public static readonly string PenData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string PenData" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.PenData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PenData As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ PenData;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 钢笔数据格式，它由书写软件所使用的笔画组成，Windows 窗体不使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Riff">
      <MemberSignature Language="C#" Value="public static readonly string Riff;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Riff" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Riff" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Riff As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Riff;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定资源交换文件格式 (RIFF) 音频格式，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 RIFF 是广泛的规范，用于定义对于不同类型的多媒体文件的标准格式而设计。  
  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Rtf">
      <MemberSignature Language="C#" Value="public static readonly string Rtf;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Rtf" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Rtf" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Rtf As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Rtf;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定由 RTF 数据组成的文本。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 RTF 是用于传输的文档内容体系结构适应格式应用程序之间的文本文档。  
  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 有关 RTF 格式的详细信息，请参阅在 MSDN 库中的丰富文本格式规范http://msdn.microsoft.com/library。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Serializable">
      <MemberSignature Language="C#" Value="public static readonly string Serializable;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Serializable" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Serializable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Serializable As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Serializable;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定封装任何类型的 Windows 窗体对象的格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
> [!NOTE]
>  可序列化格式仅特定于 Windows 窗体，将不识别由在 Windows 窗体外部创建的应用程序。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public static readonly string StringFormat;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StringFormat" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StringFormat As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StringFormat;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 窗体字符串类格式，Windows 窗体使用此格式存储字符串对象。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
> [!NOTE]
>  字符串类格式仅特定于 Windows 窗体，将不识别由在 Windows 窗体外部创建的应用程序。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataFormats_StringFormat#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataFormats_StringFormat/CPP/dataformats_stringformat.cpp#1)]
 [!code-csharp[DataFormats_StringFormat#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataFormats_StringFormat/CS/dataformats_stringformat.cs#1)]
 [!code-vb[DataFormats_StringFormat#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataFormats_StringFormat/VB/dataformats_stringformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="SymbolicLink">
      <MemberSignature Language="C#" Value="public static readonly string SymbolicLink;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SymbolicLink" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.SymbolicLink" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SymbolicLink As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ SymbolicLink;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 符号链接格式，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 符号链接是接受的文件的目录项的位置，但是实际对不同的目录中的文件的引用的磁盘目录项。 别名、 快捷、 软链接或符号链接，也称为符号链接。  
  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public static readonly string Text;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Text" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Text" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Text As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Text;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定标准 ANSI 文本格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataFormats_UnicodeText1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataFormats_UnicodeText1/CPP/dataformats_unicodetext.cpp#2)]
 [!code-csharp[DataFormats_UnicodeText1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataFormats_UnicodeText1/CS/dataformats_unicodetext.cs#2)]
 [!code-vb[DataFormats_UnicodeText1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataFormats_UnicodeText1/VB/dataformats_unicodetext.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Tiff">
      <MemberSignature Language="C#" Value="public static readonly string Tiff;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Tiff" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Tiff" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Tiff As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Tiff;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定标记图像文件格式 (TIFF)，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 TIFF 是通常用于扫描、 存储和交换灰度图形图像标准文件格式。  
  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="UnicodeText">
      <MemberSignature Language="C#" Value="public static readonly string UnicodeText;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UnicodeText" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.UnicodeText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnicodeText As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UnicodeText;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定标准 Windows Unicode 文本格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataFormats_UnicodeText1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataFormats_UnicodeText1/CPP/dataformats_unicodetext.cpp#1)]
 [!code-csharp[DataFormats_UnicodeText1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataFormats_UnicodeText1/CS/dataformats_unicodetext.cs#1)]
 [!code-vb[DataFormats_UnicodeText1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataFormats_UnicodeText1/VB/dataformats_unicodetext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="WaveAudio">
      <MemberSignature Language="C#" Value="public static readonly string WaveAudio;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string WaveAudio" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.WaveAudio" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WaveAudio As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ WaveAudio;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 wave 音频格式，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.Forms.IDataObject>接口和<xref:System.Windows.Forms.DataObject>类以指定数据类型。  
  
 将添加到时<xref:System.Windows.Forms.IDataObject>或实现<xref:System.Windows.Forms.DataObject>，将该字段的格式用作<xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>方法。  
  
 若要查看此类型的对象是否存在，请使用此字段的格式为<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>方法。  
  
 若要获取此类型的对象，使用此作为的格式<xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
  </Members>
</Type>