<Type Name="DrawTreeNodeEventArgs" FullName="System.Windows.Forms.DrawTreeNodeEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="454050a4259a9ccb9ac81d109fd22512df2bcf00" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640161" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DrawTreeNodeEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawTreeNodeEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawTreeNodeEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawTreeNodeEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Windows.Forms.TreeView.DrawNode" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.TreeView.DrawNode>事件自定义中的节点的外观<xref:System.Windows.Forms.TreeView>使用所有者描述的控件。  
  
 <xref:System.Windows.Forms.TreeView.DrawNode>事件由引发<xref:System.Windows.Forms.TreeView>控制其<xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType>属性设置为<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType>或<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType>和显示的节点或将其更新。 <xref:System.Windows.Forms.DrawTreeNodeEventArgs>传递到事件处理程序包含有关要绘制以及提供方法以帮助你绘制节点的节点的信息。  
  
 使用<xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>或<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A>属性，以检索有关要绘制的节点的信息。 使用<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A>属性以执行指定的区域中，实际的绘图<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>属性。 若要使绘制不需要是所有者绘制的节点的操作系统，将设置<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>属性`true`。  
  
 当<xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType>属性设置为<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType>，所指示的区域<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>属性包含仅的节点的标签部分。 当<xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType>属性设置为<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType>、<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>区域包括整个节点，包括的图标、 复选框，加号和减号情况下，通常使用的区域，而行连接节点。  
  
   
  
## Examples  
 下面的代码示例演示如何自定义<xref:System.Windows.Forms.TreeView>使用所有者描述的控件。 <xref:System.Windows.Forms.TreeView>在示例中的控件将显示标准节点标签旁边的可选节点标记。 使用指定节点标记<xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType>属性。 <xref:System.Windows.Forms.TreeView>控件还使用自定义颜色，包括自定义突出显示颜色。  
  
 你可以自定义的大多数<xref:System.Windows.Forms.TreeView>颜色设置颜色属性，但选择突出显示颜色不能作为属性。 此外，默认选择突出显示矩形扩展仅解决节点标签。 要绘制的节点标记，并绘制自定义的突出显示矩形大到足以容纳一个节点标记，则必须使用所有者描述。  
  
 在示例中，处理程序<xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType>节点标记和自定义选择突出显示手动事件绘制。 未选定的节点不需要自定义项。 对于这些数据，<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>属性设置为`true`以便将由操作系统绘制它们。  
  
 此外，处理程序<xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType>事件提供命中测试。 默认情况下，可以通过单击其标签周围的区域选择一个节点。 <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType>事件处理程序选择一个节点，在此区域内或解决节点标记，区域内任意位置单击，如果存在。  
  
 [!code-cpp[TreeViewOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#1)]
 [!code-csharp[TreeViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#1)]
 [!code-vb[TreeViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
    <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
    <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawTreeNodeEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.TreeNode node, System.Drawing.Rectangle bounds, System.Windows.Forms.TreeNodeStates state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Windows.Forms.TreeNode node, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.TreeNodeStates state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawTreeNodeEventArgs(System::Drawing::Graphics ^ graphics, System::Windows::Forms::TreeNode ^ node, System::Drawing::Rectangle bounds, System::Windows::Forms::TreeNodeStates state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.TreeNodeStates" />
      </Parameters>
      <Docs>
        <param name="graphics">要在其上进行绘制的 <see cref="T:System.Drawing.Graphics" /> 表面。</param>
        <param name="node">要绘制的 <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <param name="bounds">要在其中进行绘制的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="state">
          <see cref="T:System.Windows.Forms.TreeNodeStates" /> 值的按位组合，指示要绘制的 <see cref="T:System.Windows.Forms.TreeNode" /> 的当前状态。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要绘制的 <see cref="T:System.Windows.Forms.TreeNode" /> 的大小和位置。</summary>
        <value>表示要绘制的 <see cref="T:System.Drawing.Rectangle" /> 的界限的 <see cref="T:System.Windows.Forms.TreeNode" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性指定的位置是相对于窗口左上角<xref:System.Windows.Forms.TreeView>控件。  
  
 当<xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType>属性设置为<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>，指定的区域<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>属性是在其中可以单击节点以将其选中的区域。 如果你绘制此命中的测试区域外，你应选择该节点，单击其可见区域时提供你自己的代码。 你可能还想要提供自己的命中的测试代码时<xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType>属性设置为<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll>。 在此模式下，<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>属性包含整个节点在的整个宽度<xref:System.Windows.Forms.TreeView>控制，而不是只命中的测试区域。  
  
   
  
## Examples  
 下面的代码示例演示如何自定义<xref:System.Windows.Forms.TreeView>使用所有者描述的控件。 <xref:System.Windows.Forms.TreeView>在示例中的控件将显示标准节点标签旁边的可选节点标记。 使用指定节点标记<xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType>属性。 <xref:System.Windows.Forms.TreeView>控件还使用自定义颜色，包括自定义突出显示颜色。  
  
 你可以自定义的大多数<xref:System.Windows.Forms.TreeView>颜色设置颜色属性，但选择突出显示颜色不能作为属性。 此外，默认选择突出显示矩形扩展仅解决节点标签。 要绘制的节点标记，并绘制自定义的突出显示矩形大到足以容纳一个节点标记，则必须使用所有者描述。  
  
 在示例中，处理程序<xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType>节点标记和自定义选择突出显示手动事件绘制。 未选定的节点不需要自定义项。 对于这些数据，<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>属性设置为`true`以便将由操作系统绘制它们。  
  
 有关完整示例，请参阅<xref:System.Windows.Forms.DrawTreeNodeEventArgs>概述参考主题。  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
      </Docs>
    </Member>
    <Member MemberName="DrawDefault">
      <MemberSignature Language="C#" Value="public bool DrawDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DrawDefault { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，指示是否将由操作系统绘制 <see cref="T:System.Windows.Forms.TreeNode" />，而不是所有者描述。</summary>
        <value>
          如果节点将由操作系统进行绘制，则为 <see langword="true" />；如果节点将由事件处理程序进行绘制，则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将此属性设置为`true`节点你不想要自定义在处理时<xref:System.Windows.Forms.TreeView.DrawNode>事件。 例如，这是有用时想要自定义处于特定状态的节点。  
  
   
  
## Examples  
 下面的代码示例演示如何将此属性。 在示例中，处理程序<xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType>事件绘制节点标记和自定义突出显示所选节点的手动的颜色。 未选择的节点不需要自定义项。 对于未选定节点，<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>属性设置为`true`，以便它们将由操作系统绘制，并且将不具有自定义的外观。  
  
> [!NOTE]
>  如果绘制节点手动以及设置<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>属性`true`，部分或全部所绘制的内容可能会覆盖由操作系统。  
  
 有关完整示例，请参阅<xref:System.Windows.Forms.DrawTreeNodeEventArgs>概述参考主题。  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于绘制 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="T:System.Windows.Forms.TreeNode" /> 对象。</summary>
        <value>用于绘制 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="T:System.Windows.Forms.TreeNode" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Graphics>类提供属性和显示设备上绘制的有用的方法。  
  
   
  
## Examples  
 下面的代码示例演示如何自定义<xref:System.Windows.Forms.TreeView>使用所有者描述的控件。 <xref:System.Windows.Forms.TreeView>在示例中的控件将显示标准节点标签旁边的可选节点标记。 使用指定节点标记<xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType>属性。 <xref:System.Windows.Forms.TreeView>控件还使用自定义颜色，包括自定义突出显示颜色。  
  
 你可以自定义的大多数<xref:System.Windows.Forms.TreeView>颜色设置颜色属性，但选择突出显示颜色不能作为属性。 此外，默认选择突出显示矩形扩展仅解决节点标签。 要绘制的节点标记，并绘制自定义的突出显示矩形大到足以容纳一个节点标记，则必须使用所有者描述。  
  
 在示例中，处理程序<xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType>节点标记和自定义选择突出显示手动事件绘制。 未选定的节点不需要自定义项。 对于这些数据，<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>属性设置为`true`以便将由操作系统绘制它们。  
  
 有关完整示例，请参阅<xref:System.Windows.Forms.DrawTreeNodeEventArgs>概述参考主题。  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要绘制的 <see cref="T:System.Windows.Forms.TreeNode" />。</summary>
        <value>要绘制的 <see cref="T:System.Windows.Forms.TreeNode" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性用于访问<xref:System.Windows.Forms.TreeNode>要绘制的对象。 这非常有用<xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>属性未提供足够信息以满足你的需求。 <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>属性提供了你可以使用，例如，若要确定节点是否是选择、 选中，或已设定焦点的基本状态信息。 <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A>属性，另一方面，允许你访问的所有成员<xref:System.Windows.Forms.TreeNode>对象。 你必须直接访问该节点，例如，如果你想要确定其扩展状态。  
  
   
  
## Examples  
 下面的代码示例演示如何自定义<xref:System.Windows.Forms.TreeView>使用所有者描述的控件。 <xref:System.Windows.Forms.TreeView>在示例中的控件将显示标准节点标签旁边的可选节点标记。 使用指定节点标记<xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType>属性。 <xref:System.Windows.Forms.TreeView>控件还使用自定义颜色，包括自定义突出显示颜色。  
  
 你可以自定义的大多数<xref:System.Windows.Forms.TreeView>颜色设置颜色属性，但选择突出显示颜色不能作为属性。 此外，默认选择突出显示矩形扩展仅解决节点标签。 要绘制的节点标记，并绘制自定义的突出显示矩形大到足以容纳一个节点标记，则必须使用所有者描述。  
  
 在示例中，处理程序<xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType>节点标记和自定义选择突出显示手动事件绘制。 未选定的节点不需要自定义项。 对于这些数据，<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>属性设置为`true`以便将由操作系统绘制它们。  
  
 有关完整示例，请参阅<xref:System.Windows.Forms.DrawTreeNodeEventArgs>概述参考主题。  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawTreeNodeEventArgs.State" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TreeNodeStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As TreeNodeStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeStates State { System::Windows::Forms::TreeNodeStates get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要绘制的 <see cref="T:System.Windows.Forms.TreeNode" /> 的当前状态。</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNodeStates" /> 值的按位组合，指示 <see cref="T:System.Windows.Forms.TreeNode" /> 的当前状态。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性检查是否<xref:System.Windows.Forms.TreeNode>要绘制的对象处于特定状态。 此属性提供有关节点的基本状态信息。 此属性，例如，可用于确定节点是否是选择、 选中，或已设定焦点。 如果你需要知道的详细信息，检索通过节点<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A>属性。 例如，若要确定是否已展开节点，您必须检索节点并检查<xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=nameWithType>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何自定义<xref:System.Windows.Forms.TreeView>使用所有者描述的控件。 <xref:System.Windows.Forms.TreeView>在示例中的控件将显示标准节点标签旁边的可选节点标记。 使用指定节点标记<xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType>属性。 <xref:System.Windows.Forms.TreeView>控件还使用自定义颜色，包括自定义突出显示颜色。  
  
 你可以自定义的大多数<xref:System.Windows.Forms.TreeView>颜色设置颜色属性，但选择突出显示颜色不能作为属性。 此外，默认选择突出显示矩形扩展仅解决节点标签。 要绘制的节点标记，并绘制自定义的突出显示矩形大到足以容纳一个节点标记，则必须使用所有者描述。  
  
 在示例中，处理程序<xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType>节点标记和自定义选择突出显示手动事件绘制。 未选定的节点不需要自定义项。 对于这些数据，<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>属性设置为`true`以便将由操作系统绘制它们。  
  
 有关完整示例，请参阅<xref:System.Windows.Forms.DrawTreeNodeEventArgs>概述参考主题。  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>