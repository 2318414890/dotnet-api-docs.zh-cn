<Type Name="Cursor" FullName="System.Windows.Forms.Cursor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a0a753e7dbacac71ae28a64e7bcd5e38da15ad4" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52376874" /></Metadata><TypeSignature Language="C#" Value="public sealed class Cursor : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Cursor extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Cursor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cursor&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cursor sealed : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Cursor = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.CursorEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.CursorConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.CursorEditor, System.Drawing.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.CursorEditor, System.Drawing.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9736f-101">代表用于绘制鼠标指针的图像。</span><span class="sxs-lookup"><span data-stu-id="9736f-101">Represents the image used to paint the mouse pointer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-102">游标是在屏幕上的位置受指针设备，如鼠标、 笔或轨迹球的小图片。</span><span class="sxs-lookup"><span data-stu-id="9736f-102">A cursor is a small picture whose location on the screen is controlled by a pointing device, such as a mouse, pen, or trackball.</span></span> <span data-ttu-id="9736f-103">当用户移动的指针设备时，操作系统将相应地移动光标。</span><span class="sxs-lookup"><span data-stu-id="9736f-103">When the user moves the pointing device, the operating system moves the cursor accordingly.</span></span>  
  
 <span data-ttu-id="9736f-104">不同的光标形状用于通知用户鼠标将具有哪些操作。</span><span class="sxs-lookup"><span data-stu-id="9736f-104">Different cursor shapes are used to inform the user what operation the mouse will have.</span></span> <span data-ttu-id="9736f-105">例如，当编辑或选择文本，<xref:System.Windows.Forms.Cursors.IBeam%2A?displayProperty=nameWithType>通常显示的光标。</span><span class="sxs-lookup"><span data-stu-id="9736f-105">For example, when editing or selecting text, a <xref:System.Windows.Forms.Cursors.IBeam%2A?displayProperty=nameWithType> cursor is typically displayed.</span></span> <span data-ttu-id="9736f-106">等待光标通常用来通知当前运行进程的用户。</span><span class="sxs-lookup"><span data-stu-id="9736f-106">A wait cursor is commonly used to inform the user that a process is currently running.</span></span> <span data-ttu-id="9736f-107">可能必须等待用户进程的示例打开一个文件，保存文件，或如填充控件<xref:System.Windows.Forms.DataGrid>，<xref:System.Windows.Forms.ListBox>或<xref:System.Windows.Forms.TreeView>与大量的数据。</span><span class="sxs-lookup"><span data-stu-id="9736f-107">Examples of processes you might have the user wait for are opening a file, saving a file, or filling a control such as a <xref:System.Windows.Forms.DataGrid>, <xref:System.Windows.Forms.ListBox> or <xref:System.Windows.Forms.TreeView> with a large amount of data.</span></span>  
  
 <span data-ttu-id="9736f-108">派生的所有控件<xref:System.Windows.Forms.Control>类具有<xref:System.Windows.Forms.Control.Cursor%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9736f-108">All controls that derive from the <xref:System.Windows.Forms.Control> class have a <xref:System.Windows.Forms.Control.Cursor%2A> property.</span></span> <span data-ttu-id="9736f-109">若要更改控件的边界内时，鼠标指针显示的光标，将分配<xref:System.Windows.Forms.Cursor>到<xref:System.Windows.Forms.Control.Cursor%2A>控件的属性。</span><span class="sxs-lookup"><span data-stu-id="9736f-109">To change the cursor displayed by the mouse pointer when it is within the bounds of the control, assign a <xref:System.Windows.Forms.Cursor> to the <xref:System.Windows.Forms.Control.Cursor%2A> property of the control.</span></span> <span data-ttu-id="9736f-110">或者，通过将分配，在应用程序级别显示光标<xref:System.Windows.Forms.Cursor>到<xref:System.Windows.Forms.Cursor.Current%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9736f-110">Alternatively, you can display cursors at the application level by assigning a <xref:System.Windows.Forms.Cursor> to the <xref:System.Windows.Forms.Cursor.Current%2A> property.</span></span> <span data-ttu-id="9736f-111">例如，如果你的应用程序的目的是用于编辑文本文件，您可能会设置<xref:System.Windows.Forms.Cursor.Current%2A>属性设置为<xref:System.Windows.Forms.Cursors.WaitCursor%2A?displayProperty=nameWithType>若要在应用程序上显示等待光标，而该文件加载或保存以防止任何鼠标事件处理。</span><span class="sxs-lookup"><span data-stu-id="9736f-111">For example, if the purpose of your application is to edit a text file, you might set the <xref:System.Windows.Forms.Cursor.Current%2A> property to <xref:System.Windows.Forms.Cursors.WaitCursor%2A?displayProperty=nameWithType> to display a wait cursor over the application while the file loads or saves to prevent any mouse events from being processed.</span></span> <span data-ttu-id="9736f-112">该过程完成后，设置<xref:System.Windows.Forms.Cursor.Current%2A>属性设置为<xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType>应用程序在每个控件类型之上显示相应的光标。</span><span class="sxs-lookup"><span data-stu-id="9736f-112">When the process is complete, set the <xref:System.Windows.Forms.Cursor.Current%2A> property to <xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType> for the application to display the appropriate cursor over each control type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9736f-113">如果您调用<xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType>之前重置<xref:System.Windows.Forms.Cursor.Current%2A>属性改回<xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType>光标，该应用程序将继续侦听鼠标事件，并且会继续显示相应<xref:System.Windows.Forms.Cursor>为应用程序中的每个控件。</span><span class="sxs-lookup"><span data-stu-id="9736f-113">If you call <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> before resetting the <xref:System.Windows.Forms.Cursor.Current%2A> property back to the <xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType> cursor, the application will resume listening for mouse events and will resume displaying the appropriate <xref:System.Windows.Forms.Cursor> for each control in the application.</span></span>  
  
 <span data-ttu-id="9736f-114">游标对象可以创建从多个源，例如对现有的句柄<xref:System.Windows.Forms.Cursor>，一种标准<xref:System.Windows.Forms.Cursor>文件、 资源或数据的流。</span><span class="sxs-lookup"><span data-stu-id="9736f-114">Cursor objects can be created from several sources, such as the handle of an existing <xref:System.Windows.Forms.Cursor>, a standard <xref:System.Windows.Forms.Cursor> file, a resource, or a data stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9736f-115"><xref:System.Windows.Forms.Cursor>类不支持动态的游标 （.ani 文件） 或游标使用黑色和白色之外的颜色。</span><span class="sxs-lookup"><span data-stu-id="9736f-115">The <xref:System.Windows.Forms.Cursor> class does not support animated cursors (.ani files) or cursors with colors other than black and white.</span></span>  
  
 <span data-ttu-id="9736f-116">如果使用游标作为图像是太小，则可以使用<xref:System.Windows.Forms.Cursor.DrawStretched%2A>方法，以强制图像以填充游标的界限。</span><span class="sxs-lookup"><span data-stu-id="9736f-116">If the image you are using as a cursor is too small, you can use the <xref:System.Windows.Forms.Cursor.DrawStretched%2A> method to force the image to fill the bounds of the cursor.</span></span> <span data-ttu-id="9736f-117">通过调用可以暂时隐藏光标<xref:System.Windows.Forms.Cursor.Hide%2A>方法，并将其还原通过调用<xref:System.Windows.Forms.Cursor.Show%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9736f-117">You can temporarily hide the cursor by calling the <xref:System.Windows.Forms.Cursor.Hide%2A> method, and restore it by calling the <xref:System.Windows.Forms.Cursor.Show%2A> method.</span></span>  
  
 <span data-ttu-id="9736f-118">从.NET Framework 4.5.2，开始<xref:System.Windows.Forms.Cursor>将基于 app.config 文件包含以下条目时系统 DPI 设置调整大小：</span><span class="sxs-lookup"><span data-stu-id="9736f-118">Starting with the .NET Framework 4.5.2, the <xref:System.Windows.Forms.Cursor> will be resized based on the system DPI setting when the app.config file contains the following entry:</span></span>  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9736f-119">下面的代码示例显示窗体演示了如何使用自定义光标。</span><span class="sxs-lookup"><span data-stu-id="9736f-119">The following code example displays a form that demonstrates using a custom cursor.</span></span> <span data-ttu-id="9736f-120">自定义<xref:System.Windows.Forms.Cursor>嵌入在应用程序的资源文件中。</span><span class="sxs-lookup"><span data-stu-id="9736f-120">The custom <xref:System.Windows.Forms.Cursor> is embedded in the application's resource file.</span></span> <span data-ttu-id="9736f-121">该示例需要名为的光标文件中包含的游标`MyCursor.cur`。</span><span class="sxs-lookup"><span data-stu-id="9736f-121">The example requires a cursor contained in a cursor file named `MyCursor.cur`.</span></span> <span data-ttu-id="9736f-122">若要编译此示例中使用命令行，包括以下标记： `/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</span><span class="sxs-lookup"><span data-stu-id="9736f-122">To compile this example using the command line, include the following flag: `/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</span></span>  
  
 [!code-csharp[System.Windows.Forms.Cursor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor/CS/customcursor.cs#1)]
 [!code-vb[System.Windows.Forms.Cursor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor/VB/customcursor.vb#1)]  
  
 <span data-ttu-id="9736f-123">下面的代码示例显示的客户信息<xref:System.Windows.Forms.TreeView>控件。</span><span class="sxs-lookup"><span data-stu-id="9736f-123">The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control.</span></span> <span data-ttu-id="9736f-124">根树节点显示客户名称和子树节点显示分配给每个客户的订单号。</span><span class="sxs-lookup"><span data-stu-id="9736f-124">The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer.</span></span> <span data-ttu-id="9736f-125">在此示例中，有 15 个订单显示 1,000 名客户。</span><span class="sxs-lookup"><span data-stu-id="9736f-125">In this example, 1,000 customers are displayed with 15 orders each.</span></span> <span data-ttu-id="9736f-126">重新绘制的<xref:System.Windows.Forms.TreeView>通过使用抑制<xref:System.Windows.Forms.TreeView.BeginUpdate%2A>和<xref:System.Windows.Forms.TreeView.EndUpdate%2A>方法和等待<xref:System.Windows.Forms.Cursor>显示时<xref:System.Windows.Forms.TreeView>创建和绘制<xref:System.Windows.Forms.TreeNode>对象。</span><span class="sxs-lookup"><span data-stu-id="9736f-126">The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects.</span></span> <span data-ttu-id="9736f-127">此示例要求有一个名为的光标文件`MyWait.cur`应用程序目录中。</span><span class="sxs-lookup"><span data-stu-id="9736f-127">This example requires that you have a cursor file named `MyWait.cur` in the application directory.</span></span> <span data-ttu-id="9736f-128">它还需要`Customer`对象，可以保留一系列`Order`对象和创建的实例<xref:System.Windows.Forms.TreeView>上控制<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="9736f-128">It also requires a `Customer` object that can hold a collection of `Order` objects, and that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Cursors" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9736f-129">初始化 <see cref="T:System.Windows.Forms.Cursor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9736f-129">Initializes a new instance of the <see cref="T:System.Windows.Forms.Cursor" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor(IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Cursor : nativeint -&gt; System.Windows.Forms.Cursor" Usage="new System.Windows.Forms.Cursor handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="9736f-130">一个 <see cref="T:System.IntPtr" />，它表示要创建的光标的 Windows 句柄。</span><span class="sxs-lookup"><span data-stu-id="9736f-130">An <see cref="T:System.IntPtr" /> that represents the Windows handle of the cursor to create.</span></span></param>
        <summary><span data-ttu-id="9736f-131">从指定的 Windows 句柄初始化 <see cref="T:System.Windows.Forms.Cursor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9736f-131">Initializes a new instance of the <see cref="T:System.Windows.Forms.Cursor" /> class from the specified Windows handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-132">当它完成时，必须释放光标句柄。</span><span class="sxs-lookup"><span data-stu-id="9736f-132">You must free the cursor handle when you are done with it.</span></span> <span data-ttu-id="9736f-133">释放资源的详细信息，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)。</span><span class="sxs-lookup"><span data-stu-id="9736f-133">For more information about disposing of resources, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9736f-134">下面的代码示例创建从一个游标<xref:System.Windows.Forms.Cursor.Current%2A>游标的<xref:System.Windows.Forms.Cursor.Handle%2A>，更改其位置和剪辑矩形。</span><span class="sxs-lookup"><span data-stu-id="9736f-134">The following code example creates a cursor from the <xref:System.Windows.Forms.Cursor.Current%2A> cursor's <xref:System.Windows.Forms.Cursor.Handle%2A>, changes its position and clipping rectangle.</span></span> <span data-ttu-id="9736f-135">结果是光标将移向上和向左 50 像素从其所在时执行的代码。</span><span class="sxs-lookup"><span data-stu-id="9736f-135">The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</span></span> <span data-ttu-id="9736f-136">此外，光标的剪辑矩形框更改为窗体的边界 （默认情况下它是用户的整个屏幕）。</span><span class="sxs-lookup"><span data-stu-id="9736f-136">Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</span></span> <span data-ttu-id="9736f-137">此示例要求具有<xref:System.Windows.Forms.Form>和一个<xref:System.Windows.Forms.Button>单击时调用此代码。</span><span class="sxs-lookup"><span data-stu-id="9736f-137">This example requires that you have a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Button> to call this code when it is clicked.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#1)]
 [!code-csharp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#1)]
 [!code-vb[System.Windows.Forms.Cursor Members#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9736f-138"><paramref name="handle" /> 为 <see cref="F:System.IntPtr.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-138"><paramref name="handle" /> is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Cursor : System.IO.Stream -&gt; System.Windows.Forms.Cursor" Usage="new System.Windows.Forms.Cursor stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="9736f-139">要从其中加载 <see cref="T:System.Windows.Forms.Cursor" /> 的数据流。</span><span class="sxs-lookup"><span data-stu-id="9736f-139">The data stream to load the <see cref="T:System.Windows.Forms.Cursor" /> from.</span></span></param>
        <summary><span data-ttu-id="9736f-140">从指定的数据流初始化 <see cref="T:System.Windows.Forms.Cursor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9736f-140">Initializes a new instance of the <see cref="T:System.Windows.Forms.Cursor" /> class from the specified data stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-141">指定的数据流`stream`必须包含一个光标 (.cur) 文件。</span><span class="sxs-lookup"><span data-stu-id="9736f-141">The data stream specified by `stream` must contain a cursor (.cur) file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9736f-142">动态的游标 （.ani 文件） 不受<xref:System.Windows.Forms.Cursor>类。</span><span class="sxs-lookup"><span data-stu-id="9736f-142">Animated cursors (.ani files) are not supported by the <xref:System.Windows.Forms.Cursor> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9736f-143">下面的代码示例加载从游标<xref:System.IO.Stream>パ<xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>方法的<xref:System.Windows.Forms.OpenFileDialog>。</span><span class="sxs-lookup"><span data-stu-id="9736f-143">The following code example loads a cursor from a <xref:System.IO.Stream> created by the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method of an <xref:System.Windows.Forms.OpenFileDialog>.</span></span> <span data-ttu-id="9736f-144">当调用该方法时，<xref:System.Windows.Forms.OpenFileDialog>显示给用户和时间。</span><span class="sxs-lookup"><span data-stu-id="9736f-144">When the method is called, an <xref:System.Windows.Forms.OpenFileDialog> is displayed to the user and when a.</span></span> <span data-ttu-id="9736f-145">选择当前文件并关闭此对话框，该文件打开时，<xref:System.IO.Stream>返回用于创建<xref:System.Windows.Forms.Cursor>。</span><span class="sxs-lookup"><span data-stu-id="9736f-145">CUR file is selected and the dialog closed, the file is opened and the <xref:System.IO.Stream> returned is used to create a <xref:System.Windows.Forms.Cursor>.</span></span>  
  
 [!code-cpp[CursorFromResource#1](~/samples/snippets/cpp/VS_Snippets_Winforms/CursorFromResource/CPP/mycursor.cpp#1)]
 [!code-csharp[CursorFromResource#1](~/samples/snippets/csharp/VS_Snippets_Winforms/CursorFromResource/CS/mycursor.cs#1)]
 [!code-vb[CursorFromResource#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CursorFromResource/VB/mycursor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Cursor : string -&gt; System.Windows.Forms.Cursor" Usage="new System.Windows.Forms.Cursor fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="9736f-146">要加载的光标文件。</span><span class="sxs-lookup"><span data-stu-id="9736f-146">The cursor file to load.</span></span></param>
        <summary><span data-ttu-id="9736f-147">从指定的文件初始化 <see cref="T:System.Windows.Forms.Cursor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9736f-147">Initializes a new instance of the <see cref="T:System.Windows.Forms.Cursor" /> class from the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-148">`fileName`参数必须引用标准光标 (.cur) 文件。</span><span class="sxs-lookup"><span data-stu-id="9736f-148">The `fileName` parameter must reference a standard cursor (.cur) file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9736f-149">动态的游标 （.ani 文件） 不受<xref:System.Windows.Forms.Cursor>类。</span><span class="sxs-lookup"><span data-stu-id="9736f-149">Animated cursors (.ani files) are not supported by the <xref:System.Windows.Forms.Cursor> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9736f-150">下面的代码示例显示的客户信息<xref:System.Windows.Forms.TreeView>控件。</span><span class="sxs-lookup"><span data-stu-id="9736f-150">The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control.</span></span> <span data-ttu-id="9736f-151">根树节点显示客户名称和子树节点显示分配给每个客户的订单号。</span><span class="sxs-lookup"><span data-stu-id="9736f-151">The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer.</span></span> <span data-ttu-id="9736f-152">在此示例中，有 15 个订单显示 1,000 名客户。</span><span class="sxs-lookup"><span data-stu-id="9736f-152">In this example, 1,000 customers are displayed with 15 orders each.</span></span> <span data-ttu-id="9736f-153">重新绘制的<xref:System.Windows.Forms.TreeView>通过使用抑制<xref:System.Windows.Forms.TreeView.BeginUpdate%2A>和<xref:System.Windows.Forms.TreeView.EndUpdate%2A>方法和等待<xref:System.Windows.Forms.Cursor>显示时<xref:System.Windows.Forms.TreeView>创建和绘制<xref:System.Windows.Forms.TreeNode>对象。</span><span class="sxs-lookup"><span data-stu-id="9736f-153">The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects.</span></span> <span data-ttu-id="9736f-154">此示例要求具有`Customer`对象，可以保留一系列`Order`对象。</span><span class="sxs-lookup"><span data-stu-id="9736f-154">This example requires that you have a `Customer` object that can hold a collection of `Order` objects.</span></span> <span data-ttu-id="9736f-155">它还需要创建的实例<xref:System.Windows.Forms.TreeView>对的 control 权限<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="9736f-155">It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor (Type type, string resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor(Type ^ type, System::String ^ resource);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Cursor : Type * string -&gt; System.Windows.Forms.Cursor" Usage="new System.Windows.Forms.Cursor (type, resource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="9736f-156">资源 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-156">The resource <see cref="T:System.Type" />.</span></span></param>
        <param name="resource"><span data-ttu-id="9736f-157">资源的名称。</span><span class="sxs-lookup"><span data-stu-id="9736f-157">The name of the resource.</span></span></param>
        <summary><span data-ttu-id="9736f-158">从具有指定资源类型的指定资源初始化 <see cref="T:System.Windows.Forms.Cursor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9736f-158">Initializes a new instance of the <see cref="T:System.Windows.Forms.Cursor" /> class from the specified resource with the specified resource type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-159">下面是举例说明如何将游标嵌入你的应用程序内的资源。</span><span class="sxs-lookup"><span data-stu-id="9736f-159">The following is an example of how to embed a cursor as a resource within your application.</span></span> <span data-ttu-id="9736f-160">若要嵌入资源，引用资源名称后跟一个逗号，则其完整的程序集路径。</span><span class="sxs-lookup"><span data-stu-id="9736f-160">To embed the resource, reference the resource name followed by a comma, then its full assembly path.</span></span> <span data-ttu-id="9736f-161">请参阅示例部分，了解如何从嵌入资源加载光标。</span><span class="sxs-lookup"><span data-stu-id="9736f-161">See the Example section to learn how to load the cursor from the embedded resource.</span></span>  
  
```  
Using the C# compiler:  
csc /resource:"MyWaitCursor.cur","MyCursors.MyWaitCursor.cur" MyCursor.cs  
Using the Visual Basic compiler:  
vbc /resource:"MyWaitCursor.cur","MyCursors.MyWaitCursor.cur" MyCursor.vb  
```  
  
> [!NOTE]
>  <span data-ttu-id="9736f-162">资源引用在编译时以及在代码中，引用该类时是区分大小写的 C# 和 Visual Basic 编译器。</span><span class="sxs-lookup"><span data-stu-id="9736f-162">The resource reference when compiling as well as when referencing it in code, is case sensitive for both the C# and Visual Basic compilers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9736f-163">下面的代码示例显示窗体演示了如何通过使用自定义光标<xref:System.Windows.Forms.Cursor.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="9736f-163">The following code example displays a form that demonstrates using a custom cursor by using the <xref:System.Windows.Forms.Cursor.%23ctor%2A> constructor.</span></span> <span data-ttu-id="9736f-164">自定义<xref:System.Windows.Forms.Cursor>嵌入在应用程序的资源文件中。</span><span class="sxs-lookup"><span data-stu-id="9736f-164">The custom <xref:System.Windows.Forms.Cursor> is embedded in the application's resource file.</span></span> <span data-ttu-id="9736f-165">该示例需要有一个名为的光标文件中包含一个光标`MyCursor.cur`。</span><span class="sxs-lookup"><span data-stu-id="9736f-165">The example requires that you have a cursor contained in a cursor file named `MyCursor.cur`.</span></span> <span data-ttu-id="9736f-166">若要编译此示例中使用命令行，包括以下标记： `/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</span><span class="sxs-lookup"><span data-stu-id="9736f-166">To compile this example using the command line, include the following flag: `/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</span></span>  
  
 [!code-csharp[System.Windows.Forms.Cursor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor/CS/customcursor.cs#1)]
 [!code-vb[System.Windows.Forms.Cursor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor/VB/customcursor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public static System.Drawing.Rectangle Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Rectangle Clip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Cursor.Clip" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Clip As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Rectangle Clip { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberSignature Language="F#" Value="member this.Clip : System.Drawing.Rectangle with get, set" Usage="System.Windows.Forms.Cursor.Clip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9736f-167">获取或设置表示光标的剪辑矩形的边界。</span><span class="sxs-lookup"><span data-stu-id="9736f-167">Gets or sets the bounds that represent the clipping rectangle for the cursor.</span></span></summary>
        <value><span data-ttu-id="9736f-168">代表 <see cref="T:System.Windows.Forms.Cursor" /> 的剪辑矩形的 <see cref="T:System.Drawing.Rectangle" />（采用屏幕坐标的形式）。</span><span class="sxs-lookup"><span data-stu-id="9736f-168">The <see cref="T:System.Drawing.Rectangle" /> that represents the clipping rectangle for the <see cref="T:System.Windows.Forms.Cursor" />, in screen coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-169">允许剪切的游标仅在其剪辑矩形内移动。</span><span class="sxs-lookup"><span data-stu-id="9736f-169">A clipped cursor is allowed to move only within its clipping rectangle.</span></span> <span data-ttu-id="9736f-170">通常情况下，系统允许此仅当当前捕获鼠标。</span><span class="sxs-lookup"><span data-stu-id="9736f-170">Generally, the system allows this only if the mouse is currently captured.</span></span> <span data-ttu-id="9736f-171">如果当前未剪辑光标，生成的矩形中包含整个屏幕的尺寸。</span><span class="sxs-lookup"><span data-stu-id="9736f-171">If the cursor is not currently clipped, the resulting rectangle contains the dimensions of the entire screen.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9736f-172">下面的代码示例创建从一个游标<xref:System.Windows.Forms.Cursor.Current%2A>游标的<xref:System.Windows.Forms.Cursor.Handle%2A>，更改其位置和剪辑矩形。</span><span class="sxs-lookup"><span data-stu-id="9736f-172">The following code example creates a cursor from the <xref:System.Windows.Forms.Cursor.Current%2A> cursor's <xref:System.Windows.Forms.Cursor.Handle%2A>, changes its position and clipping rectangle.</span></span> <span data-ttu-id="9736f-173">结果是光标将移向上和向左 50 像素从其所在时执行的代码。</span><span class="sxs-lookup"><span data-stu-id="9736f-173">The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</span></span> <span data-ttu-id="9736f-174">此外，光标的剪辑矩形框更改为窗体的边界 （默认情况下它是用户的整个屏幕）。</span><span class="sxs-lookup"><span data-stu-id="9736f-174">Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</span></span> <span data-ttu-id="9736f-175">此示例要求具有<xref:System.Windows.Forms.Form>和一个<xref:System.Windows.Forms.Button>单击时调用此代码。</span><span class="sxs-lookup"><span data-stu-id="9736f-175">This example requires that you have a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Button> to call this code when it is clicked.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#1)]
 [!code-csharp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#1)]
 [!code-vb[System.Windows.Forms.Cursor Members#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="9736f-176">若要将此属性设置的所有窗口。</span><span class="sxs-lookup"><span data-stu-id="9736f-176">for all windows to set this property.</span></span> <span data-ttu-id="9736f-177">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="9736f-177">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CopyHandle">
      <MemberSignature Language="C#" Value="public IntPtr CopyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int CopyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.CopyHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyHandle () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr CopyHandle();" />
      <MemberSignature Language="F#" Value="member this.CopyHandle : unit -&gt; nativeint" Usage="cursor.CopyHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9736f-178">复制该 <see cref="T:System.Windows.Forms.Cursor" /> 的句柄。</span><span class="sxs-lookup"><span data-stu-id="9736f-178">Copies the handle of this <see cref="T:System.Windows.Forms.Cursor" />.</span></span></summary>
        <returns><span data-ttu-id="9736f-179">一个 <see cref="T:System.IntPtr" />，代表光标句柄。</span><span class="sxs-lookup"><span data-stu-id="9736f-179">An <see cref="T:System.IntPtr" /> that represents the cursor's handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-180">由于调用此方法创建的句柄必须释放的因为它将不会释放的垃圾回收器使用它完成后。</span><span class="sxs-lookup"><span data-stu-id="9736f-180">The handle created as a result of calling this method must be disposed of when you are done with it because it will not be disposed of by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IntPtr" />
        <altmember cref="M:System.Windows.Forms.Cursor.Dispose" />
        <altmember cref="T:System.GC" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Cursor Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.Cursor Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Cursor.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::Cursor ^ Current { System::Windows::Forms::Cursor ^ get(); void set(System::Windows::Forms::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Forms.Cursor with get, set" Usage="System.Windows.Forms.Cursor.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9736f-181">获取或设置代表鼠标光标的光标对象。</span><span class="sxs-lookup"><span data-stu-id="9736f-181">Gets or sets a cursor object that represents the mouse cursor.</span></span></summary>
        <value><span data-ttu-id="9736f-182">一个 <see cref="T:System.Windows.Forms.Cursor" />，代表鼠标光标。</span><span class="sxs-lookup"><span data-stu-id="9736f-182">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the mouse cursor.</span></span> <span data-ttu-id="9736f-183">如果鼠标光标不可见，则默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-183">The default is <see langword="null" /> if the mouse cursor is not visible.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-184">设置<xref:System.Windows.Forms.Cursor.Current%2A>属性更改当前显示的光标。</span><span class="sxs-lookup"><span data-stu-id="9736f-184">Setting the <xref:System.Windows.Forms.Cursor.Current%2A> property changes the cursor currently displayed.</span></span> <span data-ttu-id="9736f-185">应用程序可能会或可能无法继续侦听的鼠标事件。</span><span class="sxs-lookup"><span data-stu-id="9736f-185">The application may or may not continue to listen for mouse events.</span></span> <span data-ttu-id="9736f-186">若要通知的应用程序应不响应鼠标事件在一个长时间运行的操作过程的信息，请使用<xref:System.Windows.Forms.Application.UseWaitCursor%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9736f-186">To signal that the application should not respond to mouse events during a long-running operation, use the <xref:System.Windows.Forms.Application.UseWaitCursor%2A> property.</span></span> <span data-ttu-id="9736f-187">在大多数情况下，但是，最好使用后台线程来管理长时间运行的操作，并使用户可以访问您的用户界面。</span><span class="sxs-lookup"><span data-stu-id="9736f-187">In most cases, however, it's better to use a background thread to manage a long-running operation, and leave your user interface accessible to the user.</span></span> <span data-ttu-id="9736f-188">轻松地实现后台任务的详细信息，请参阅<xref:System.ComponentModel.BackgroundWorker>。</span><span class="sxs-lookup"><span data-stu-id="9736f-188">For more information on easily implementing a background task, see <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="9736f-189">用于将此属性设置安全子窗口。</span><span class="sxs-lookup"><span data-stu-id="9736f-189">for safe subwindows to set this property.</span></span> <span data-ttu-id="9736f-190">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span><span class="sxs-lookup"><span data-stu-id="9736f-190">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Forms.Application.DoEvents" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cursor.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9736f-191">释放由 <see cref="T:System.Windows.Forms.Cursor" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="9736f-191">Releases all resources used by the <see cref="T:System.Windows.Forms.Cursor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-192">在完成使用 <xref:System.Windows.Forms.Cursor.Dispose%2A> 后，应调用 <xref:System.Windows.Forms.Cursor>。</span><span class="sxs-lookup"><span data-stu-id="9736f-192">Call <xref:System.Windows.Forms.Cursor.Dispose%2A> when you are finished using the <xref:System.Windows.Forms.Cursor>.</span></span> <span data-ttu-id="9736f-193">`Dispose` 方法使 <xref:System.Windows.Forms.Cursor> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="9736f-193">The `Dispose` method leaves the <xref:System.Windows.Forms.Cursor> in an unusable state.</span></span> <span data-ttu-id="9736f-194">在调用<xref:System.Windows.Forms.Cursor.Dispose%2A>，必须释放对所有引用<xref:System.Windows.Forms.Cursor>这样垃圾回收器才能收回内存的<xref:System.Windows.Forms.Cursor>占用。</span><span class="sxs-lookup"><span data-stu-id="9736f-194">After calling <xref:System.Windows.Forms.Cursor.Dispose%2A>, you must release all references to the <xref:System.Windows.Forms.Cursor> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.Cursor> was occupying.</span></span> <span data-ttu-id="9736f-195">有关详细信息，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="9736f-195">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9736f-196">每次释放对 <xref:System.Windows.Forms.Cursor.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.Windows.Forms.Cursor>。</span><span class="sxs-lookup"><span data-stu-id="9736f-196">Always call <xref:System.Windows.Forms.Cursor.Dispose%2A> before you release your last reference to the <xref:System.Windows.Forms.Cursor>.</span></span> <span data-ttu-id="9736f-197">否则，直到垃圾回收器释放它也不会释放它所使用的资源。</span><span class="sxs-lookup"><span data-stu-id="9736f-197">Otherwise, the resources it is using will not be freed until the garbage collector frees it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9736f-198">下面的代码示例在其正常大小，并在外延式模式下，其大小的两倍的窗体上绘制指定的游标。</span><span class="sxs-lookup"><span data-stu-id="9736f-198">The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</span></span> <span data-ttu-id="9736f-199">此示例需要<xref:System.Windows.Forms.Form>和一个<xref:System.Windows.Forms.Cursor>将被调用时传递到方法。</span><span class="sxs-lookup"><span data-stu-id="9736f-199">This example requires a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Cursor> to pass into the method when it is called.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#2)]
 [!code-csharp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#2)]
 [!code-vb[System.Windows.Forms.Cursor Members#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (System.Drawing.Graphics g, System.Drawing.Rectangle targetRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle targetRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Draw (g As Graphics, targetRect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Draw(System::Drawing::Graphics ^ g, System::Drawing::Rectangle targetRect);" />
      <MemberSignature Language="F#" Value="member this.Draw : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; unit" Usage="cursor.Draw (g, targetRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="targetRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="9736f-200">要在其上绘制 <see cref="T:System.Windows.Forms.Cursor" /> 的 <see cref="T:System.Drawing.Graphics" /> 表面。</span><span class="sxs-lookup"><span data-stu-id="9736f-200">The <see cref="T:System.Drawing.Graphics" /> surface on which to draw the <see cref="T:System.Windows.Forms.Cursor" />.</span></span></param>
        <param name="targetRect"><span data-ttu-id="9736f-201">代表 <see cref="T:System.Windows.Forms.Cursor" /> 限定范围的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-201">The <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the <see cref="T:System.Windows.Forms.Cursor" />.</span></span></param>
        <summary><span data-ttu-id="9736f-202">在指定边界内、指定的表面上绘制光标。</span><span class="sxs-lookup"><span data-stu-id="9736f-202">Draws the cursor on the specified surface, within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-203">所表示的图形表面上绘制命令源自`g`参数，但<xref:System.Drawing.Graphics>不包含有关如何呈现给定的图像，因此它将传递到调用信息<xref:System.Windows.Forms.Cursor>。</span><span class="sxs-lookup"><span data-stu-id="9736f-203">The drawing command originates on the graphics surface represented by the `g` parameter, but a <xref:System.Drawing.Graphics> does not contain information about how to render a given image, so it passes the call to the <xref:System.Windows.Forms.Cursor>.</span></span> <span data-ttu-id="9736f-204"><xref:System.Windows.Forms.Cursor.Draw%2A>方法到给定的尺寸图像进行裁剪，并允许你指定<xref:System.Drawing.Rectangle>在其中进行绘制<xref:System.Windows.Forms.Cursor>。</span><span class="sxs-lookup"><span data-stu-id="9736f-204">The <xref:System.Windows.Forms.Cursor.Draw%2A> method crops the image to the given dimensions and allows you to specify a <xref:System.Drawing.Rectangle> within which to draw the <xref:System.Windows.Forms.Cursor>.</span></span> <span data-ttu-id="9736f-205">如果你想要的图形表面上绘制光标，通常使用此方法。</span><span class="sxs-lookup"><span data-stu-id="9736f-205">This method is typically used if you want to draw the cursor on a Graphics surface.</span></span> <span data-ttu-id="9736f-206">例如，可能有一个对话框，允许用户选择从光标<xref:System.Windows.Forms.ListBox>控件或一组<xref:System.Windows.Forms.RadioButton>控件。</span><span class="sxs-lookup"><span data-stu-id="9736f-206">For example, you might have a dialog that allows the user to select cursors from a <xref:System.Windows.Forms.ListBox> control, or a group of <xref:System.Windows.Forms.RadioButton> controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9736f-207">下面的代码示例在其正常大小，并在外延式模式下，其大小的两倍的窗体上绘制指定的游标。</span><span class="sxs-lookup"><span data-stu-id="9736f-207">The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</span></span> <span data-ttu-id="9736f-208">此示例要求具有<xref:System.Windows.Forms.Form>和一个<xref:System.Windows.Forms.Cursor>对象将被调用时传递到方法。</span><span class="sxs-lookup"><span data-stu-id="9736f-208">This example requires that you have a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Cursor> object to pass into the method when it is called.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#2)]
 [!code-csharp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#2)]
 [!code-vb[System.Windows.Forms.Cursor Members#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="DrawStretched">
      <MemberSignature Language="C#" Value="public void DrawStretched (System.Drawing.Graphics g, System.Drawing.Rectangle targetRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawStretched(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle targetRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawStretched (g As Graphics, targetRect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawStretched(System::Drawing::Graphics ^ g, System::Drawing::Rectangle targetRect);" />
      <MemberSignature Language="F#" Value="member this.DrawStretched : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; unit" Usage="cursor.DrawStretched (g, targetRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="targetRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="9736f-209">要在其上绘制 <see cref="T:System.Windows.Forms.Cursor" /> 的 <see cref="T:System.Drawing.Graphics" /> 表面。</span><span class="sxs-lookup"><span data-stu-id="9736f-209">The <see cref="T:System.Drawing.Graphics" /> surface on which to draw the <see cref="T:System.Windows.Forms.Cursor" />.</span></span></param>
        <param name="targetRect"><span data-ttu-id="9736f-210">代表 <see cref="T:System.Windows.Forms.Cursor" /> 限定范围的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-210">The <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the <see cref="T:System.Windows.Forms.Cursor" />.</span></span></param>
        <summary><span data-ttu-id="9736f-211">在指定边界内、指定的表面上以拉伸格式绘制光标。</span><span class="sxs-lookup"><span data-stu-id="9736f-211">Draws the cursor in a stretched format on the specified surface, within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-212">所表示的图形表面上绘制命令源自`g`参数，但<xref:System.Drawing.Graphics>对象不包含有关如何呈现给定的图像，因此它将传递到调用信息<xref:System.Windows.Forms.Cursor>对象。</span><span class="sxs-lookup"><span data-stu-id="9736f-212">The drawing command originates on the graphics surface represented by the `g` parameter, but a <xref:System.Drawing.Graphics> object does not contain information about how to render a given image, so it passes the call to the <xref:System.Windows.Forms.Cursor> object.</span></span> <span data-ttu-id="9736f-213"><xref:System.Windows.Forms.Cursor.DrawStretched%2A>方法拉伸图像以填充指定<xref:System.Drawing.Rectangle>时绘制光标。</span><span class="sxs-lookup"><span data-stu-id="9736f-213">The <xref:System.Windows.Forms.Cursor.DrawStretched%2A> method stretches the image to fill the specified <xref:System.Drawing.Rectangle> when the cursor is drawn.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9736f-214">下面的代码示例在其正常大小，并在外延式模式下，其大小的两倍的窗体上绘制指定的游标。</span><span class="sxs-lookup"><span data-stu-id="9736f-214">The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</span></span> <span data-ttu-id="9736f-215">此示例要求具有<xref:System.Windows.Forms.Form>和一个<xref:System.Windows.Forms.Cursor>对象将被调用时传递到方法。</span><span class="sxs-lookup"><span data-stu-id="9736f-215">This example requires that you have a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Cursor> object to pass into the method when it is called.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#2)]
 [!code-csharp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#2)]
 [!code-vb[System.Windows.Forms.Cursor Members#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cursor.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9736f-216">要比较的 <see cref="T:System.Windows.Forms.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-216">The <see cref="T:System.Windows.Forms.Cursor" /> to compare.</span></span></param>
        <summary><span data-ttu-id="9736f-217">返回一个值，该值指示此光标是否等于指定的 <see cref="T:System.Windows.Forms.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-217">Returns a value indicating whether this cursor is equal to the specified <see cref="T:System.Windows.Forms.Cursor" />.</span></span></summary>
        <returns><span data-ttu-id="9736f-218">如果此光标等于指定的 <see cref="T:System.Windows.Forms.Cursor" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-218"><see langword="true" /> if this cursor is equal to the specified <see cref="T:System.Windows.Forms.Cursor" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9736f-219">下面的代码示例创建从一个游标<xref:System.Windows.Forms.Cursor.Current%2A>游标的<xref:System.Windows.Forms.Cursor.Handle%2A>，更改其位置和剪辑矩形。</span><span class="sxs-lookup"><span data-stu-id="9736f-219">The following code example creates a cursor from the <xref:System.Windows.Forms.Cursor.Current%2A> cursor's <xref:System.Windows.Forms.Cursor.Handle%2A>, changes its position and clipping rectangle.</span></span> <span data-ttu-id="9736f-220">结果是光标将移向上和向左 50 像素从其所在时执行的代码。</span><span class="sxs-lookup"><span data-stu-id="9736f-220">The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</span></span> <span data-ttu-id="9736f-221">此外，光标的剪辑矩形框更改为窗体的边界 （默认情况下它是用户的整个屏幕）。</span><span class="sxs-lookup"><span data-stu-id="9736f-221">Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</span></span> <span data-ttu-id="9736f-222">此示例需要<xref:System.Windows.Forms.Form>和一个<xref:System.Windows.Forms.Button>单击时调用此代码。</span><span class="sxs-lookup"><span data-stu-id="9736f-222">This example requires a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Button> to call this code when it is clicked.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#1)]
 [!code-csharp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#1)]
 [!code-vb[System.Windows.Forms.Cursor Members#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Cursor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Cursor ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cursor.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9736f-223">在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</span><span class="sxs-lookup"><span data-stu-id="9736f-223">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cursor.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9736f-224">检索当前 <see cref="T:System.Windows.Forms.Cursor" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="9736f-224">Retrieves the hash code for the current <see cref="T:System.Windows.Forms.Cursor" />.</span></span></summary>
        <returns><span data-ttu-id="9736f-225">当前 <see cref="T:System.Windows.Forms.Cursor" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="9736f-225">A hash code for the current <see cref="T:System.Windows.Forms.Cursor" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Cursor.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.Cursor.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9736f-226">获取光标句柄。</span><span class="sxs-lookup"><span data-stu-id="9736f-226">Gets the handle of the cursor.</span></span></summary>
        <value><span data-ttu-id="9736f-227">一个 <see cref="T:System.IntPtr" />，代表光标句柄。</span><span class="sxs-lookup"><span data-stu-id="9736f-227">An <see cref="T:System.IntPtr" /> that represents the cursor's handle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-228">这不是一份句柄;不要释放它。</span><span class="sxs-lookup"><span data-stu-id="9736f-228">This is not a copy of the handle; do not dispose of it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9736f-229">下面的代码示例创建从一个游标<xref:System.Windows.Forms.Cursor.Current%2A>游标的<xref:System.Windows.Forms.Cursor.Handle%2A>，更改其位置和剪辑矩形。</span><span class="sxs-lookup"><span data-stu-id="9736f-229">The following code example creates a cursor from the <xref:System.Windows.Forms.Cursor.Current%2A> cursor's <xref:System.Windows.Forms.Cursor.Handle%2A>, changes its position and clipping rectangle.</span></span> <span data-ttu-id="9736f-230">结果是光标将移向上和向左 50 像素从其所在时执行的代码。</span><span class="sxs-lookup"><span data-stu-id="9736f-230">The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</span></span> <span data-ttu-id="9736f-231">此外，光标的剪辑矩形框更改为窗体的边界 （默认情况下它是用户的整个屏幕）。</span><span class="sxs-lookup"><span data-stu-id="9736f-231">Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</span></span> <span data-ttu-id="9736f-232">此示例需要<xref:System.Windows.Forms.Form>和一个<xref:System.Windows.Forms.Button>单击时调用此代码。</span><span class="sxs-lookup"><span data-stu-id="9736f-232">This example requires a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Button> to call this code when it is clicked.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#1)]
 [!code-csharp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#1)]
 [!code-vb[System.Windows.Forms.Cursor Members#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="9736f-233">句柄值为 <see cref="F:System.IntPtr.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-233">The handle value is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Cursor.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public static void Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Hide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.Hide" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Hide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Hide();" />
      <MemberSignature Language="F#" Value="static member Hide : unit -&gt; unit" Usage="System.Windows.Forms.Cursor.Hide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9736f-234">隐藏光标。</span><span class="sxs-lookup"><span data-stu-id="9736f-234">Hides the cursor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-235"><xref:System.Windows.Forms.Cursor.Show%2A>和<xref:System.Windows.Forms.Cursor.Hide%2A>必须平衡方法调用。</span><span class="sxs-lookup"><span data-stu-id="9736f-235">The <xref:System.Windows.Forms.Cursor.Show%2A> and <xref:System.Windows.Forms.Cursor.Hide%2A> method calls must be balanced.</span></span> <span data-ttu-id="9736f-236">每次调用<xref:System.Windows.Forms.Cursor.Hide%2A>方法必须相应地调用<xref:System.Windows.Forms.Cursor.Show%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9736f-236">For every call to the <xref:System.Windows.Forms.Cursor.Hide%2A> method there must be a corresponding call to the <xref:System.Windows.Forms.Cursor.Show%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9736f-237">下面的代码示例隐藏光标，当鼠标指针进入该按钮的工作区。</span><span class="sxs-lookup"><span data-stu-id="9736f-237">The following code example hides the cursor when the mouse pointer enters the button's client area.</span></span> <span data-ttu-id="9736f-238">同样，当鼠标指针离开按钮的工作区，光标将再次显示。</span><span class="sxs-lookup"><span data-stu-id="9736f-238">Likewise, when the mouse pointer leaves the button's client area, the cursor is shown again.</span></span> <span data-ttu-id="9736f-239">此示例需要<xref:System.Windows.Forms.Form>与<xref:System.Windows.Forms.Button>名为`myButton`。</span><span class="sxs-lookup"><span data-stu-id="9736f-239">This example requires a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> named `myButton`.</span></span>  
  
 [!code-cpp[CursorFromResource#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CursorFromResource/CPP/mycursor.cpp#3)]
 [!code-csharp[CursorFromResource#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CursorFromResource/CS/mycursor.cs#3)]
 [!code-vb[CursorFromResource#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CursorFromResource/VB/mycursor.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="9736f-240">针对所有窗口调用此方法。</span><span class="sxs-lookup"><span data-stu-id="9736f-240">for all windows call this method.</span></span> <span data-ttu-id="9736f-241">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="9736f-241">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Forms.Cursor.Show" />
      </Docs>
    </Member>
    <Member MemberName="HotSpot">
      <MemberSignature Language="C#" Value="public System.Drawing.Point HotSpot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point HotSpot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Cursor.HotSpot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HotSpot As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point HotSpot { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.HotSpot : System.Drawing.Point" Usage="System.Windows.Forms.Cursor.HotSpot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9736f-242">获取光标作用点。</span><span class="sxs-lookup"><span data-stu-id="9736f-242">Gets the cursor hot spot.</span></span></summary>
        <value><span data-ttu-id="9736f-243">表示光标作用点的 <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-243">A <see cref="T:System.Drawing.Point" /> representing the cursor hot spot.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-244"><xref:System.Windows.Forms.Cursor.HotSpot%2A>是<xref:System.Drawing.Point>中与在屏幕上的其他元素进行交互的光标。</span><span class="sxs-lookup"><span data-stu-id="9736f-244">The <xref:System.Windows.Forms.Cursor.HotSpot%2A> is the <xref:System.Drawing.Point> in the cursor that interacts with other elements on the screen.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.Cursor left, System.Windows.Forms.Cursor right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Forms.Cursor left, class System.Windows.Forms.Cursor right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Cursor, right As Cursor) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Forms::Cursor ^ left, System::Windows::Forms::Cursor ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Forms.Cursor * System.Windows.Forms.Cursor -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.Cursor" />
        <Parameter Name="right" Type="System.Windows.Forms.Cursor" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9736f-245">要比较的 <see cref="T:System.Windows.Forms.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-245">A <see cref="T:System.Windows.Forms.Cursor" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="9736f-246">要比较的 <see cref="T:System.Windows.Forms.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-246">A <see cref="T:System.Windows.Forms.Cursor" /> to compare.</span></span></param>
        <summary><span data-ttu-id="9736f-247">返回一个值，该值指示 <see cref="T:System.Windows.Forms.Cursor" /> 类的两个实例是否相等。</span><span class="sxs-lookup"><span data-stu-id="9736f-247">Returns a value indicating whether two instances of the <see cref="T:System.Windows.Forms.Cursor" /> class are equal.</span></span></summary>
        <returns><span data-ttu-id="9736f-248">如果 <see cref="T:System.Windows.Forms.Cursor" /> 类的两个实例相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-248"><see langword="true" /> if two instances of the <see cref="T:System.Windows.Forms.Cursor" /> class are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="9736f-249">此运算符的等效方法是 <xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="9736f-249">The equivalent method for this operator is <xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="9736f-250">下面的代码示例在其正常大小，并在外延式模式下，其大小的两倍的窗体上绘制指定的游标。</span><span class="sxs-lookup"><span data-stu-id="9736f-250">The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</span></span> <span data-ttu-id="9736f-251">此示例需要<xref:System.Windows.Forms.Form>和一个<xref:System.Windows.Forms.Cursor>对象将被调用时传递到方法。</span><span class="sxs-lookup"><span data-stu-id="9736f-251">This example requires a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Cursor> object to pass into the method when it is called.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#2)]
 [!code-csharp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#2)]
 [!code-vb[System.Windows.Forms.Cursor Members#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.Cursor left, System.Windows.Forms.Cursor right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Forms.Cursor left, class System.Windows.Forms.Cursor right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Cursor, right As Cursor) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Forms::Cursor ^ left, System::Windows::Forms::Cursor ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Forms.Cursor * System.Windows.Forms.Cursor -&gt; bool" Usage="System.Windows.Forms.Cursor.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.Cursor" />
        <Parameter Name="right" Type="System.Windows.Forms.Cursor" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9736f-252">要比较的 <see cref="T:System.Windows.Forms.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-252">A <see cref="T:System.Windows.Forms.Cursor" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="9736f-253">要比较的 <see cref="T:System.Windows.Forms.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-253">A <see cref="T:System.Windows.Forms.Cursor" /> to compare.</span></span></param>
        <summary><span data-ttu-id="9736f-254">返回一个值，该值指示 <see cref="T:System.Windows.Forms.Cursor" /> 类的两个实例是否不相等。</span><span class="sxs-lookup"><span data-stu-id="9736f-254">Returns a value indicating whether two instances of the <see cref="T:System.Windows.Forms.Cursor" /> class are not equal.</span></span></summary>
        <returns><span data-ttu-id="9736f-255">如果 <see cref="T:System.Windows.Forms.Cursor" /> 类的两个实例不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-255"><see langword="true" /> if two instances of the <see cref="T:System.Windows.Forms.Cursor" /> class are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="9736f-256">此运算符的等效方法是 <xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="9736f-256">The equivalent method for this operator is <xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="9736f-257">下面的代码示例在其正常大小，并在外延式模式下，其大小的两倍的窗体上绘制指定的游标。</span><span class="sxs-lookup"><span data-stu-id="9736f-257">The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</span></span> <span data-ttu-id="9736f-258">此示例需要<xref:System.Windows.Forms.Form>和一个<xref:System.Windows.Forms.Cursor>将被调用时传递到方法。</span><span class="sxs-lookup"><span data-stu-id="9736f-258">This example requires a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Cursor> to pass into the method when it is called.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#2)]
 [!code-csharp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#2)]
 [!code-vb[System.Windows.Forms.Cursor Members#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public static System.Drawing.Point Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Point Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Cursor.Position" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Position As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Point Position { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Position : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Cursor.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9736f-259">获取或设置光标位置。</span><span class="sxs-lookup"><span data-stu-id="9736f-259">Gets or sets the cursor's position.</span></span></summary>
        <value><span data-ttu-id="9736f-260">代表光标位置的 <see cref="T:System.Drawing.Point" />（采用屏幕坐标）。</span><span class="sxs-lookup"><span data-stu-id="9736f-260">A <see cref="T:System.Drawing.Point" /> that represents the cursor's position in screen coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-261"><xref:System.Windows.Forms.Cursor.Position%2A>属性等同于<xref:System.Windows.Forms.Control.MousePosition%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="9736f-261">The <xref:System.Windows.Forms.Cursor.Position%2A> property is identical to the <xref:System.Windows.Forms.Control.MousePosition%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9736f-262">下面的代码示例创建从一个游标<xref:System.Windows.Forms.Cursor.Current%2A>游标的<xref:System.Windows.Forms.Cursor.Handle%2A>，更改其位置和剪辑矩形。</span><span class="sxs-lookup"><span data-stu-id="9736f-262">The following code example creates a cursor from the <xref:System.Windows.Forms.Cursor.Current%2A> cursor's <xref:System.Windows.Forms.Cursor.Handle%2A>, changes its position and clipping rectangle.</span></span> <span data-ttu-id="9736f-263">结果是光标将移向上和向左 50 像素从其所在时执行的代码。</span><span class="sxs-lookup"><span data-stu-id="9736f-263">The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</span></span> <span data-ttu-id="9736f-264">此外，光标的剪辑矩形框更改为窗体的边界 （默认情况下它是用户的整个屏幕）。</span><span class="sxs-lookup"><span data-stu-id="9736f-264">Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</span></span> <span data-ttu-id="9736f-265">此示例需要<xref:System.Windows.Forms.Form>和一个<xref:System.Windows.Forms.Button>单击时调用此代码。</span><span class="sxs-lookup"><span data-stu-id="9736f-265">This example requires a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Button> to call this code when it is clicked.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#1)]
 [!code-csharp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#1)]
 [!code-vb[System.Windows.Forms.Cursor Members#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Show() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.Show" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Show ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Show();" />
      <MemberSignature Language="F#" Value="static member Show : unit -&gt; unit" Usage="System.Windows.Forms.Cursor.Show " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9736f-266">显示光标。</span><span class="sxs-lookup"><span data-stu-id="9736f-266">Displays the cursor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9736f-267"><xref:System.Windows.Forms.Cursor.Show%2A>和<xref:System.Windows.Forms.Cursor.Hide%2A>必须平衡方法调用。</span><span class="sxs-lookup"><span data-stu-id="9736f-267">The <xref:System.Windows.Forms.Cursor.Show%2A> and <xref:System.Windows.Forms.Cursor.Hide%2A> method calls must be balanced.</span></span> <span data-ttu-id="9736f-268">每次调用<xref:System.Windows.Forms.Cursor.Hide%2A>方法必须相应地调用<xref:System.Windows.Forms.Cursor.Show%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9736f-268">For every call to the <xref:System.Windows.Forms.Cursor.Hide%2A> method there must be a corresponding call to the <xref:System.Windows.Forms.Cursor.Show%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9736f-269">下面的代码示例隐藏光标，当鼠标指针进入该按钮的工作区。</span><span class="sxs-lookup"><span data-stu-id="9736f-269">The following code example hides the cursor when the mouse pointer enters the button's client area.</span></span> <span data-ttu-id="9736f-270">同样，当鼠标指针离开按钮的工作区，光标将再次显示。</span><span class="sxs-lookup"><span data-stu-id="9736f-270">Likewise, when the mouse pointer leaves the button's client area, the cursor is shown again.</span></span> <span data-ttu-id="9736f-271">此示例需要<xref:System.Windows.Forms.Form>与<xref:System.Windows.Forms.Button>名为`myButton`。</span><span class="sxs-lookup"><span data-stu-id="9736f-271">This example requires a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> named `myButton`.</span></span>  
  
 [!code-cpp[CursorFromResource#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CursorFromResource/CPP/mycursor.cpp#3)]
 [!code-csharp[CursorFromResource#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CursorFromResource/CS/mycursor.cs#3)]
 [!code-vb[CursorFromResource#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CursorFromResource/VB/mycursor.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Cursor.Hide" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Cursor.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size" Usage="System.Windows.Forms.Cursor.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9736f-272">获取光标对象的大小。</span><span class="sxs-lookup"><span data-stu-id="9736f-272">Gets the size of the cursor object.</span></span></summary>
        <value><span data-ttu-id="9736f-273">一个 <see cref="T:System.Drawing.Size" />，它表示 <see cref="T:System.Windows.Forms.Cursor" /> 的宽度和高度。</span><span class="sxs-lookup"><span data-stu-id="9736f-273">A <see cref="T:System.Drawing.Size" /> that represents the width and height of the <see cref="T:System.Windows.Forms.Cursor" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9736f-274">下面的代码示例在其正常大小，并在外延式模式下，其大小的两倍的窗体上绘制指定的游标。</span><span class="sxs-lookup"><span data-stu-id="9736f-274">The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</span></span> <span data-ttu-id="9736f-275">此示例需要<xref:System.Windows.Forms.Form>和一个<xref:System.Windows.Forms.Cursor>对象将被调用时传递到方法。</span><span class="sxs-lookup"><span data-stu-id="9736f-275">This example requires a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Cursor> object to pass into the method when it is called.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#2)]
 [!code-csharp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#2)]
 [!code-vb[System.Windows.Forms.Cursor Members#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Size" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si"><span data-ttu-id="9736f-276"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类。</span><span class="sxs-lookup"><span data-stu-id="9736f-276">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class.</span></span></param>
        <param name="context"><span data-ttu-id="9736f-277"><see cref="T:System.Runtime.Serialization.StreamingContext" /> 类。</span><span class="sxs-lookup"><span data-stu-id="9736f-277">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> class.</span></span></param>
        <summary><span data-ttu-id="9736f-278">序列化对象。</span><span class="sxs-lookup"><span data-stu-id="9736f-278">Serializes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Cursor.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.Cursor.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9736f-279">获取或设置包含有关 <see cref="T:System.Windows.Forms.Cursor" /> 的数据的对象。</span><span class="sxs-lookup"><span data-stu-id="9736f-279">Gets or sets the object that contains data about the <see cref="T:System.Windows.Forms.Cursor" />.</span></span></summary>
        <value><span data-ttu-id="9736f-280">一个 <see cref="T:System.Object" />，包含有关 <see cref="T:System.Windows.Forms.Cursor" /> 的数据。</span><span class="sxs-lookup"><span data-stu-id="9736f-280">An <see cref="T:System.Object" /> that contains data about the <see cref="T:System.Windows.Forms.Cursor" />.</span></span> <span data-ttu-id="9736f-281">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-281">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cursor.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9736f-282">检索表示此 <see cref="T:System.Windows.Forms.Cursor" /> 的可读字符串。</span><span class="sxs-lookup"><span data-stu-id="9736f-282">Retrieves a human readable string representing this <see cref="T:System.Windows.Forms.Cursor" />.</span></span></summary>
        <returns><span data-ttu-id="9736f-283">表示此 <see cref="T:System.Windows.Forms.Cursor" /> 的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="9736f-283">A <see cref="T:System.String" /> that represents this <see cref="T:System.Windows.Forms.Cursor" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>