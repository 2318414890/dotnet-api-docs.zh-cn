<Type Name="ListView+ListViewItemCollection" FullName="System.Windows.Forms.ListView+ListViewItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65021186eb95931a331be00efe5537b48d760753" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650791" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListView.ListViewItemCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListView/ListViewItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView.ListViewItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView.ListViewItemCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListView::ListViewItemCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.ListView" /> 控件中的项的集合或指定给 <see cref="T:System.Windows.Forms.ListViewGroup" /> 的项的集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.ListView.ListViewItemCollection>存储中显示的项<xref:System.Windows.Forms.ListView>控制或分配给<xref:System.Windows.Forms.ListViewGroup>。 有两个其他集合中定义<xref:System.Windows.Forms.ListView>使您能够确定哪些项目在中选择的类<xref:System.Windows.Forms.ListView>控件。 <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>类提供的属性和方法来确定哪些项目中选择<xref:System.Windows.Forms.ListView>控件，而<xref:System.Windows.Forms.ListView.SelectedIndexCollection>类使您能够确定中的哪些索引<xref:System.Windows.Forms.ListView.ListViewItemCollection>的<xref:System.Windows.Forms.ListView>控件选择。 除了选择集合类，也有两个类，可用于确定选中了哪些项 (时<xref:System.Windows.Forms.ListView.CheckBoxes%2A>属性<xref:System.Windows.Forms.ListView>控件设置为`true`) 在此集合中。  
  
 有多种方式可向集合添加项。 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法向集合中添加单个项。 若要添加到集合的数目的项，创建项的数组，并将其传递到<xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A>方法。 如果你想要将项插入集合中的特定位置，则可以使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A>方法。 若要删除项，你可以使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A>方法或<xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A>方法如果你知道该项目在集合中的位置。 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A>方法使你能够从而不是使用集合中移除所有项<xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A>方法一次都移除单个项。  
  
 除了用于添加和移除项，方法和属性<xref:System.Windows.Forms.ListView.ListViewItemCollection>还提供了在集合中查找项的方法。 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A>方法使您能够确定某个项是否是集合的成员。 一旦您知道项位于集合中，你可以使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A>方法来确定该项目集合中的位置。  
  
   
  
## Examples  
 下面的代码示例演示如何将项添加到<xref:System.Windows.Forms.ListView.ListViewItemCollection>。 请注意，<xref:System.Windows.Forms.ListView.Items%2A>属性`ListView1`属于类型<xref:System.Windows.Forms.ListView.ListViewItemCollection>。 若要运行此示例，请将以下代码粘贴到一个包含窗体<xref:System.Windows.Forms.ListView>对象名为`ListView1`和<xref:System.Windows.Forms.TextBox>名为`TextBox1`。 调用`InitializeListView`从窗体的构造函数的方法或<xref:System.Windows.Forms.Form.Load>事件处理程序。  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
    <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItemCollection (System.Windows.Forms.ListView owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListView owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.#ctor(System.Windows.Forms.ListView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItemCollection(System::Windows::Forms::ListView ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListView" />
      </Parameters>
      <Docs>
        <param name="owner">拥有该集合的 <see cref="T:System.Windows.Forms.ListView" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应避免使用此构造函数。 相反，访问<xref:System.Windows.Forms.ListView.ListViewItemCollection>通过<xref:System.Windows.Forms.ListView.Items%2A>属性<xref:System.Windows.Forms.ListView>控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将项添至项的集合中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要为该项显示的文本。</param>
        <summary>用指定的文本创建一个项并将该项添加到集合中。</summary>
        <returns>已添加到集合中的 <see cref="T:System.Windows.Forms.ListViewItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此版本的<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法来创建一个新<xref:System.Windows.Forms.ListViewItem>将添加到<xref:System.Windows.Forms.ListView>控件。 新的文本<xref:System.Windows.Forms.ListViewItem>添加到该控件基于`text`参数。 如果你想要为项指定一个图像，使用的版本<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>接受图像索引作为参数的方法。 如果你有一个现成<xref:System.Windows.Forms.ListViewItem>你想要添加到集合，使用的版本<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法接受<xref:System.Windows.Forms.ListViewItem>作为其参数。  
  
 如果<xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType>属性设置为值<xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType>或如果<xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>属性设置，对列表进行排序后的项目添加。 否则，在列表末尾插入项。 如果未排序列表，则可以使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A>方法插入一项插入<xref:System.Windows.Forms.ListView>位于特定位置。 若要将一组项添加到单个操作中的控件，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A>方法。 如果你想要使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法将大量的项添加到控件，请使用<xref:System.Windows.Forms.ListView.BeginUpdate%2A>和<xref:System.Windows.Forms.ListView.EndUpdate%2A>方法，以避免<xref:System.Windows.Forms.ListView>从重新绘制之前添加的所有项。 当将项添加到<xref:System.Windows.Forms.ListView>，它是第一次的项进行排序，然后添加新项更加高效。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (System.Windows.Forms.ListViewItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(class System.Windows.Forms.ListViewItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As ListViewItem) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::Windows::Forms::ListViewItem ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="value">要添加到集合中的 <see cref="T:System.Windows.Forms.ListViewItem" />。</param>
        <summary>将现有的 <see cref="T:System.Windows.Forms.ListViewItem" /> 添加到集合中。</summary>
        <returns>已添加到集合中的 <see cref="T:System.Windows.Forms.ListViewItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此版本的<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法将添加现有<xref:System.Windows.Forms.ListViewItem>到集合。 此版本的<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法通常用于重复使用从其他项<xref:System.Windows.Forms.ListView>控件或如果<xref:System.Windows.Forms.ListViewItem>将其添加到集合之前手动创建。 如果你想要创建一个新<xref:System.Windows.Forms.ListViewItem>而不是使用现有项，使用其他版本的<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法。  
  
 如果<xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType>属性设置为值<xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType>或如果<xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>属性设置，对列表进行排序后的项目添加。 否则，在列表末尾插入项。 如果未排序列表，则可以使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A>方法插入一项插入<xref:System.Windows.Forms.ListView>位于特定位置。 若要将一组项添加到单个操作中的控件，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A>方法。 如果你想要使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法将大量的项添加到控件，请使用<xref:System.Windows.Forms.ListView.BeginUpdate%2A>和<xref:System.Windows.Forms.ListView.EndUpdate%2A>方法，以避免<xref:System.Windows.Forms.ListView>从重新绘制之前添加的所有项。 当将项添加到<xref:System.Windows.Forms.ListView>，它是第一次的项进行排序，然后添加新项更加高效。  
  
 此版本的<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法还用于分配<xref:System.Windows.Forms.ListViewItem>到<xref:System.Windows.Forms.ListViewGroup>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text, int imageIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">项的文本。</param>
        <param name="imageIndex">要为该项显示的图像的索引。</param>
        <summary>用指定的文本和图像创建一个项并将该项添加到集合中。</summary>
        <returns>已添加到集合中的 <see cref="T:System.Windows.Forms.ListViewItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此版本的<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法来创建一个新<xref:System.Windows.Forms.ListViewItem>将添加到<xref:System.Windows.Forms.ListView>控件。 新的文本<xref:System.Windows.Forms.ListViewItem>添加到该控件基于`text`参数。 你还可以通过传递的索引指定项图像<xref:System.Windows.Forms.ImageList>分配给<xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType>属性设置为`imageIndex`参数。 (通常情况下，<xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType>属性使用相同的索引位置以显示相关的图像。)如果不希望指定一个项的图像索引，使用的版本<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>只接受字符串作为参数的方法。 如果你有一个现成<xref:System.Windows.Forms.ListViewItem>你想要添加到集合，使用的版本<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法接受<xref:System.Windows.Forms.ListViewItem>作为其参数。  
  
 如果<xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType>属性设置为值<xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType>或如果<xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>属性设置，对列表进行排序后的项目添加。 否则，在列表末尾插入项。 如果未排序列表，则可以使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A>方法插入一项插入<xref:System.Windows.Forms.ListView>位于特定位置。 若要将一组项添加到单个操作中的控件，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A>方法。 如果你想要使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法将大量的项添加到控件，请使用<xref:System.Windows.Forms.ListView.BeginUpdate%2A>和<xref:System.Windows.Forms.ListView.EndUpdate%2A>方法，以避免<xref:System.Windows.Forms.ListView>从重新绘制之前添加的所有项。 当将项添加到<xref:System.Windows.Forms.ListView>，它是第一次的项进行排序，然后添加新项更加高效。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text, System::String ^ imageKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">项的文本。</param>
        <param name="imageKey">要为该项显示的图像的键。</param>
        <summary>用指定的文本和图像创建一个项并将该项添加到集合中。</summary>
        <returns>添加到集合中的 <see cref="T:System.Windows.Forms.ListViewItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.ListView>是分类，该项将添加正确的排序顺序中; 否则，添加到集合的末尾。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">项的名称。</param>
        <param name="text">项的文本。</param>
        <param name="imageIndex">要为该项显示的图像的索引。</param>
        <summary>用指定的键、文本和图像创建一个项并将该项添加到集合中。</summary>
        <returns>添加到集合中的 <see cref="T:System.Windows.Forms.ListViewItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.ListView>是分类，该项将添加正确的排序顺序中; 否则，添加到集合的末尾。 <xref:System.Windows.Forms.ListViewItem.Name%2A>属性对应的密钥<xref:System.Windows.Forms.ListViewItem>中<xref:System.Windows.Forms.ListView.ListViewItemCollection>。  
  
 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法设置<xref:System.Windows.Forms.ListViewItem.Name%2A>为指定的键，因此可以检索项，按其索引或键的属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">包含 <see cref="T:System.Windows.Forms.ListView" /> 处于虚拟模式下。</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">项的名称。</param>
        <param name="text">项的文本。</param>
        <param name="imageKey">要为该项显示的图像的键。</param>
        <summary>用指定的键、文本和图像创建一个项并将该项添加到集合中。</summary>
        <returns>添加到集合中的 <see cref="T:System.Windows.Forms.ListViewItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.Name%2A>属性对应的密钥<xref:System.Windows.Forms.ListViewItem>中<xref:System.Windows.Forms.ListView.ListViewItemCollection>。  
  
 如果<xref:System.Windows.Forms.ListView>是分类，该项将添加正确的排序顺序中; 否则，添加到集合的末尾。 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法设置<xref:System.Windows.Forms.ListViewItem.Name%2A>为指定的键，因此可以检索项，按其索引或键的项的属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>向集合添加项的数组。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListView.ListViewItemCollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListView/ListViewItemCollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListView.ListViewItemCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListView.ListViewItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListView::ListViewItemCollection ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.ListView+ListViewItemCollection" />
      </Parameters>
      <Docs>
        <param name="items">要添加到集合中的 <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />。</param>
        <summary>向集合中添加项的集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果包含<xref:System.Windows.Forms.ListView>进行排序，<xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A>方法将在排序顺序中添加项; 否则，它会将它们添加到集合的末尾。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="items" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">包含 <see cref="T:System.Windows.Forms.ListView" /> 处于虚拟模式下。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListViewItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewItem ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.ListViewItem[]" />
      </Parameters>
      <Docs>
        <param name="items">要添加到集合中的 <see cref="T:System.Windows.Forms.ListViewItem" /> 对象的数组。</param>
        <summary>向集合中添加 <see cref="T:System.Windows.Forms.ListViewItem" /> 对象的数组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此方法来重用来自不同<xref:System.Windows.Forms.ListView>控件。 如果你想要添加单个<xref:System.Windows.Forms.ListViewItem>，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法。 你还可以使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A>方法如果你想要添加单个<xref:System.Windows.Forms.ListViewItem>位于集合中特定位置。  
  
 你可以使用此方法来分配多个<xref:System.Windows.Forms.ListViewItem>对象添加到<xref:System.Windows.Forms.ListViewGroup>。  
  
 如果<xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType>属性设置为值<xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType>或如果<xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>属性设置，则在添加项后，对列表进行排序。 否则，在列表末尾插入项。 如果未排序列表，则可以使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A>方法插入项复制到<xref:System.Windows.Forms.ListView>中的特定位置。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Windows.Forms.ListView>有三个控件<xref:System.Windows.Forms.ListViewItem>指定的对象和三个<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>为每个项指定的对象。 此示例还创建<xref:System.Windows.Forms.ColumnHeader>对象详细信息视图中显示子项。 两个<xref:System.Windows.Forms.ImageList>还在代码示例中提供的映像中创建对象<xref:System.Windows.Forms.ListViewItem>对象。 这些<xref:System.Windows.Forms.ImageList>对象添加到<xref:System.Windows.Forms.ListView.LargeImageList%2A>和<xref:System.Windows.Forms.ListView.SmallImageList%2A>属性。 该示例使用以下属性创建<xref:System.Windows.Forms.ListView>控件：  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 此示例需要你已添加到代码<xref:System.Windows.Forms.Form>和调用中的示例构造函数或窗体上的另一种方法创建的方法。 该示例还要求映像名为`MySmallImage1`， `MySmallImage2`， `MyLargeImage1`，和`MyLargeImage2`位于根目录下的驱动器 c。  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="items" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从集合中移除所有项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从集合中移除项时，会丢失有关已删除的项的所有信息。 若要从集合中移除单个项，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A>或<xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Contains(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As ListViewItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.Windows.Forms.ListViewItem" />，表示要在集合中查找的项。</param>
        <summary>确定指定项是否位于集合内。</summary>
        <returns>
          如果集合中包含该项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A>方法使您能够确定是否<xref:System.Windows.Forms.ListViewItem>是集合的成员。 一旦您知道该项目集合中，你可以使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A>方法，以确定集合中项的位置。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要搜索的项的名称。</param>
        <summary>确定集合是否包含具有指定键的项。</summary>
        <returns>
          如果集合包含具有指定键的项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 键比较不区分大小写。 <xref:System.Windows.Forms.ListViewItem.Name%2A>属性对应的密钥<xref:System.Windows.Forms.ListViewItem>中<xref:System.Windows.Forms.ListView.ListViewItemCollection>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ dest, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">
          <see cref="T:System.Array" />，表示要将该集合的内容复制到的数组。</param>
        <param name="index">集合中的项将复制到的目标数组中的位置。</param>
        <summary>将整个集合复制到现有数组中，从该数组内的指定位置开始复制。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可用于将合并到单个阵列中的多个集合中的选定的项。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取集合中的项数。</summary>
        <value>集合中项的数目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性使您能够确定中的项的数目<xref:System.Windows.Forms.ListView>。 然后，将循环访问集合的值和你需要提供要执行循环的迭代次数时，可以使用此值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem[] Find (string key, bool searchAllSubItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem[] Find(string key, bool searchAllSubItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As String, searchAllSubItems As Boolean) As ListViewItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::ListViewItem ^&gt; ^ Find(System::String ^ key, bool searchAllSubItems);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="searchAllSubItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">要搜索的项名称。</param>
        <param name="searchAllSubItems">
          若要搜索子项，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>搜索名称与指定键匹配的项，也可以选择搜索子项。</summary>
        <returns>包含匹配项的 <see cref="T:System.Windows.Forms.ListViewItem" /> 对象的数组；如果没有匹配项，则为一个空数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 键比较不区分大小写。 <xref:System.Windows.Forms.ListViewItem.Name%2A>属性对应的密钥<xref:System.Windows.Forms.ListViewItem>中<xref:System.Windows.Forms.ListView.ListViewItemCollection>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个枚举数，将使用该枚举数循环访问项集合。</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" />，表示项集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当所有者<xref:System.Windows.Forms.ListView>是在虚拟模式下，你不能枚举<xref:System.Windows.Forms.ListView.ListViewItemCollection>使用枚举器或调用<xref:System.Windows.Forms.ListView.ListViewItemCollection.GetEnumerator%2A>。 请改用<xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType>属性来访问由索引值的项。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">所有者 <see cref="T:System.Windows.Forms.ListView" /> 处于虚拟模式下。</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As ListViewItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.Windows.Forms.ListViewItem" />，表示要在集合中查找的项。</param>
        <summary>返回指定的项在集合中的索引。</summary>
        <returns>项在集合中的位置的从零开始的索引；如果项不在集合中，则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A>方法使您能够确定集合中项的位置。 若要确定是否在调用此方法之前集合中包含一个项，请使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Contains(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要在集合中查找的项的名称。</param>
        <summary>检索具有指定键的项的索引。</summary>
        <returns>如果找到具有指定键的项，则为第一个匹配项的从零开始的索引；否则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey%2A>连续，最后调用返回索引将首先，检查的键的匹配项，如果没有匹配项，从集合的开头开始搜索。  
  
 <xref:System.Windows.Forms.ListViewItem.Name%2A>属性对应的密钥<xref:System.Windows.Forms.ListViewItem>中<xref:System.Windows.Forms.ListView.ListViewItemCollection>。  
  
 键比较不区分大小写。 如果`key`参数是`null`或空字符串，<xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey%2A>返回-1`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将一项插入集合中指定索引处。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">插入项的从零开始的索引位置。</param>
        <param name="text">要为该项显示的文本。</param>
        <summary>创建一个新项，并将其插入到集合中的指定索引处。</summary>
        <returns>已插入到集合中的 <see cref="T:System.Windows.Forms.ListViewItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的<xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A>方法允许您中特定位置处插入一个新项<xref:System.Windows.Forms.ListView.ListViewItemCollection>。 中指定的文本`text`参数用于创建一个新<xref:System.Windows.Forms.ListViewItem>然后插入<xref:System.Windows.Forms.ListView.ListViewItemCollection>位于指定位置。  
  
> [!NOTE]
>  如果<xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType>属性设置为值<xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType>或如果<xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>属性设置，则在插入项后，对列表进行排序。  
  
 若要添加某个项而不指定集合中的特定位置，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法。 如果你想要添加到集合的项的数组，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A>方法。 如果你想要将新项插入到现有集合的项，你可以使用此方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 参数小于零或大于 <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> 的 <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 属性的值。</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, item As ListViewItem) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::Windows::Forms::ListViewItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="index">插入项的从零开始的索引位置。</param>
        <param name="item">
          <see cref="T:System.Windows.Forms.ListViewItem" />，表示要插入的项。</param>
        <summary>将现有的 <see cref="T:System.Windows.Forms.ListViewItem" /> 插入到集合中的指定索引处。</summary>
        <returns>已插入到集合中的 <see cref="T:System.Windows.Forms.ListViewItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的<xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A>方法可用于插入现有<xref:System.Windows.Forms.ListViewItem>中特定位置处<xref:System.Windows.Forms.ListView.ListViewItemCollection>。  
  
> [!NOTE]
>  如果<xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType>属性设置为值<xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType>或如果<xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>属性设置，则在插入项后，对列表进行排序。  
  
 若要添加某个项而不指定要添加的项的集合中的特定位置，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法。 如果你想要添加到集合的项的数组，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A>方法。 如果你想要将新项插入到现有集合的项，你可以使用此方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 参数小于零或大于 <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> 的 <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 属性的值。</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text, int imageIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">插入项的从零开始的索引位置。</param>
        <param name="text">要为该项显示的文本。</param>
        <param name="imageIndex">要为该项显示的图像的索引。</param>
        <summary>创建具有指定图像索引的新项，并将其插入到集合中的指定索引处。</summary>
        <returns>已插入到集合中的 <see cref="T:System.Windows.Forms.ListViewItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的<xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A>方法允许您中特定位置处插入一个新项<xref:System.Windows.Forms.ListView.ListViewItemCollection>。 中指定的文本`text`参数用于创建一个新<xref:System.Windows.Forms.ListViewItem>然后插入<xref:System.Windows.Forms.ListView.ListViewItemCollection>位于指定位置。  
  
> [!NOTE]
>  如果<xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType>属性设置为值<xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType>或如果<xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>属性设置，则在插入项后，对列表进行排序。  
  
 你还可以使用此版本的<xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A>方法通过传递的索引指定项的图像<xref:System.Windows.Forms.ImageList>分配给<xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType>属性设置为`imageIndex`参数。 (通常情况下，<xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType>属性使用相同的索引位置以显示相关的图像。)如果您不想要指定项的图像索引，使用其他版本的<xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A>接受字符串作为参数的方法。  
  
 若要添加某个项而不指定集合中的特定位置，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>方法。 如果你想要添加到集合的项的数组，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 参数小于零或大于 <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> 的 <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 属性的值。</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text, System::String ^ imageKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">插入项的从零开始的索引位置。</param>
        <param name="text">
          <see cref="T:System.Windows.Forms.ListViewItem" /> 的文本。</param>
        <param name="imageKey">要为该项显示的图像的键。</param>
        <summary>创建一个具有指定的文本和图像的新项，并将该项插入到集合中指定索引处。</summary>
        <returns>添加到集合中的 <see cref="T:System.Windows.Forms.ListViewItem" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 参数小于零或大于 <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> 的 <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 属性的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Insert (int index, string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Insert(int32 index, string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">插入项的从零开始的索引位置</param>
        <param name="key">项的 <see cref="P:System.Windows.Forms.ListViewItem.Name" />。</param>
        <param name="text">项的文本。</param>
        <param name="imageIndex">要为该项显示的图像的索引。</param>
        <summary>创建一个具有指定的键、文本和图像的新项，并将该项插入到集合中指定索引处。</summary>
        <returns>添加到集合中的 <see cref="T:System.Windows.Forms.ListViewItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A>方法设置<xref:System.Windows.Forms.ListViewItem.Name%2A>为指定的键，因此可以检索项，按其索引或键的项的属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 参数小于零或大于 <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> 的 <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 属性的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Insert (int index, string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Insert(int32 index, string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">插入项的从零开始的索引位置。</param>
        <param name="key">项的 <see cref="P:System.Windows.Forms.ListViewItem.Name" />。</param>
        <param name="text">项的文本。</param>
        <param name="imageKey">要为该项显示的图像的键。</param>
        <summary>创建一个具有指定的键、文本和图像的新项，并将该项添加到集合中指定索引处。</summary>
        <returns>添加到集合中的 <see cref="T:System.Windows.Forms.ListViewItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A>方法设置<xref:System.Windows.Forms.ListViewItem.Name%2A>为指定的键，因此可以检索项，按其索引或键的项的属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 参数小于零或大于 <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> 的 <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 属性的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示集合是否为只读。</summary>
        <value>
          如果该集合为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性始终是`false`为此集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取或设置集合中的一项。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem ^ default[int] { System::Windows::Forms::ListViewItem ^ get(int index); void set(int index, System::Windows::Forms::ListViewItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">集合中要获取或设置的项的索引。</param>
        <summary>获取或设置集合中指定索引处的项。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewItem" />，表示位于集合内指定索引处的项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此方法以获取<xref:System.Windows.Forms.ListViewItem>存储在集合中特定位置。 若要确定集合中特定项的索引，请使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 参数小于零或大于等于 <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> 的 <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 属性的值。</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem ^ default[System::String ^] { System::Windows::Forms::ListViewItem ^ get(System::String ^ key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要检索的项的名称。</param>
        <summary>检索具有指定键的项。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewItem" />，其 <see cref="P:System.Windows.Forms.ListViewItem.Name" /> 属性与指定键匹配。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 键比较不区分大小写。 <xref:System.Windows.Forms.ListViewItem.Name%2A>属性对应的密钥<xref:System.Windows.Forms.ListViewItem>中<xref:System.Windows.Forms.ListView.ListViewItemCollection>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (item As ListViewItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.Windows.Forms.ListViewItem" />，表示要从集合中移除的项。</param>
        <summary>从集合中移除指定的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当从集合中移除项时，集合中的后续项的索引将更改。 删除有关已移除的项的所有信息。 此方法可用于通过指定要删除的实际项目，从集合中移除特定项。 若要指定要删除而不是针对项本身的项的索引，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A>方法。 若要从集合中移除所有项，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">分配给 <paramref name="item" /> 参数的 <see cref="T:System.Windows.Forms.ListViewItem" /> 是 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要移除的项的从零开始的索引。</param>
        <summary>移除集合中指定索引处的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当从集合中移除项时，集合中的后续项的索引将更改。 删除有关已移除的项的所有信息。 此方法可用于通过指定要从集合中移除的项的索引，从集合中移除特定项。 若要指定要删除而不是项的索引的项，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A>方法。 若要从集合中移除所有项，使用<xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 参数小于零或大于等于 <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> 的 <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 属性的值。</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要从集合中移除的项的名称。</param>
        <summary>从集合中移除具有指定键的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 键比较不区分大小写。 <xref:System.Windows.Forms.ListViewItem.Name%2A>属性对应的密钥<xref:System.Windows.Forms.ListViewItem>中<xref:System.Windows.Forms.ListView.ListViewItemCollection>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示对集合的访问是否为同步的（线程安全）。</summary>
        <value>
          在所有情况下均为 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可用于同步控件集合访问的对象。</summary>
        <value>用于同步集合的对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">要添加到集合中的对象。</param>
        <summary>将一个现有对象添加到集合中。</summary>
        <returns>如果对象已添加到集合中，则为从零开始的索引，指示对象的位置；否则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `item`参数可以是任何类型。 如果`item`是<xref:System.Windows.Forms.ListViewItem>，将其添加到<xref:System.Windows.Forms.ListView.ListViewItemCollection>。 如果`item`另一种类型的新<xref:System.Windows.Forms.ListViewItem>包含从字符串创建<xref:System.Object.ToString%2A>方法`item`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">一个对象，表示要在集合中查找的项。</param>
        <summary>确定指定项是否在集合中。</summary>
        <returns>
          如果指定项位于集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">一个 <see cref="T:System.Windows.Forms.ListViewItem" />，表示要在集合中查找的项。</param>
        <summary>返回指定的项在集合中的索引。</summary>
        <returns>如果该项位于集合中，则为该项从零开始的索引；否则为 -1。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">插入项的从零开始的索引位置。</param>
        <param name="item">表示要插入的项的对象。</param>
        <summary>将对象插入到集合中的指定索引处。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `item`参数可以是任何类型。 如果`item`是<xref:System.Windows.Forms.ListViewItem>，将其添加到<xref:System.Windows.Forms.ListView.ListViewItemCollection>。 如果`item`另一种类型的新<xref:System.Windows.Forms.ListViewItem>包含从字符串创建<xref:System.Object.ToString%2A>方法`item`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">索引参数小于零或大于 <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> 的 <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 属性的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示集合是否具有固定大小。</summary>
        <value>
          在所有情况下均为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要获取的元素的索引(索引从零开始)。</param>
        <summary>获取或设置集合中指定索引处的 <see cref="T:System.Windows.Forms.ListViewItem" />。</summary>
        <value>一个 <see cref="T:System.Windows.Forms.ListViewItem" />，表示位于集合内指定索引处的项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `item`参数可以设置为任何类型。 如果`item`是<xref:System.Windows.Forms.ListViewItem>，将其添加到<xref:System.Windows.Forms.ListView.ListViewItemCollection>。 如果`item`另一种类型的新<xref:System.Windows.Forms.ListViewItem>包含从字符串创建<xref:System.Object.ToString%2A>方法`item`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">索引参数小于零或大于等于 <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> 的 <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 属性的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">表示要从集合中移除的项的 <see cref="T:System.Windows.Forms.ListViewItem" />。</param>
        <summary>从集合中移除指定的项。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>