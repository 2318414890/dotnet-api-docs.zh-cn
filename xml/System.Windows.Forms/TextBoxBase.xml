<Type Name="TextBoxBase" FullName="System.Windows.Forms.TextBoxBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="25fbcea5e9d3c82473c620da28c72036585f91c3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36513936" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextBoxBase extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type TextBoxBase = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("TextChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="85937-101">Implements the basic functionality required by text controls.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85937-101">Implements the basic functionality required by text controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-102">此类实现中的文本操作控件的核心功能，如<xref:System.Windows.Forms.TextBox>和<xref:System.Windows.Forms.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="85937-102">This class implements the core features of text manipulation controls, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="85937-103">其中包括文本选择**剪贴板**功能、 多行文本框控件支持和很多事件。</span><span class="sxs-lookup"><span data-stu-id="85937-103">These include text selection, **Clipboard** functionality, multiline text control support, and many events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-104">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类中，以创建多行<xref:System.Windows.Forms.TextBox>带垂直滚动条的控件。</span><span class="sxs-lookup"><span data-stu-id="85937-104">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="85937-105">此示例还使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>属性，以使多行文本框控件可用于创建文本文档。</span><span class="sxs-lookup"><span data-stu-id="85937-105">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="85937-106">
        <para>你通常不继承从<see cref="T:System.Windows.Forms.TextBoxBase" />。若要创建你自己的文本控件类，从<see cref="T:System.Windows.Forms.TextBox" />或<see cref="T:System.Windows.Forms.RichTextBox" />。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="85937-106">
          <para>You do not typically inherit from <see cref="T:System.Windows.Forms.TextBoxBase" />. To create your own text control class, inherit from <see cref="T:System.Windows.Forms.TextBox" /> or <see cref="T:System.Windows.Forms.RichTextBox" />.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Windows.Forms.TextBox" />
    <altmember cref="T:System.Windows.Forms.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-107">Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-107">Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-108">
            <see langword="true" /> 如果用户可以使用 TAB 键为多行文本框中输入选项卡<see langword="false" />如果按 TAB 键将焦点移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-108">
              <see langword="true" /> if users can enter tabs in a multiline text box using the TAB key; <see langword="false" /> if pressing the TAB key moves the focus.</span>
          </span>
          <span data-ttu-id="85937-109">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-109">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-110"><xref:System.Windows.Forms.TextBoxBase.Multiline%2A>属性还必须是`true`控件中获取一个 TAB 字符。</span><span class="sxs-lookup"><span data-stu-id="85937-110">The <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property must also be `true` to get a TAB character in the control.</span></span>  
  
 <span data-ttu-id="85937-111">如果<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>属性设置为`true`，用户必须按 CTRL + TAB 将焦点移动到下一个控件的 tab 键顺序。</span><span class="sxs-lookup"><span data-stu-id="85937-111">If the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is set to `true`, the user must press CTRL+TAB to move the focus to the next control in the tab order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-112">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类中，以创建多行<xref:System.Windows.Forms.TextBox>带垂直滚动条的控件。</span><span class="sxs-lookup"><span data-stu-id="85937-112">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="85937-113">此示例还使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>属性，以使多行文本框控件可用于创建文本文档。</span><span class="sxs-lookup"><span data-stu-id="85937-113">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.AcceptsReturn" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AcceptsTabChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcceptsTabChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcceptsTabChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcceptsTabChanged;" />
      <MemberSignature Language="F#" Value="member this.AcceptsTabChanged : EventHandler " Usage="member this.AcceptsTabChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-114">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-114">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-115">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="85937-115">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-116">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="85937-116">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="85937-117">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-117">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span> <span data-ttu-id="85937-118">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="85937-118">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="85937-119">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="85937-119">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="85937-120">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<xref:System.Windows.Forms.TextBoxBase>，如<xref:System.Windows.Forms.TextBox>或<xref:System.Windows.Forms.TextBoxBase>。</span><span class="sxs-lookup"><span data-stu-id="85937-120">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="85937-121">然后将其命名实例`TextBoxBase1`并确保与事件处理程序<xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-121">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#241](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#241)]
 [!code-vb[System.Windows.Forms.EventExamples#241](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#241)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string -&gt; unit" Usage="textBoxBase.AppendText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="85937-122">The text to append to the current contents of the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-122">The text to append to the current contents of the text box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-123">Appends text to the current text of a text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-123">Appends text to the current text of a text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-124">你可以使用此方法将文本添加到而不是使用串联运算符 （+） 将文本串联起来控件中的现有文本到<xref:System.Windows.Forms.TextBoxBase.Text%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="85937-124">You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-125">下面的代码示例演示如何使用<xref:System.Windows.Forms.TextBoxBase.AppendText%2A>方法和<xref:System.Windows.Forms.TextBoxBase.TextLength%2A>属性将文本从一个复制<xref:System.Windows.Forms.TextBox>到另一个。</span><span class="sxs-lookup"><span data-stu-id="85937-125">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="85937-126">此示例要求将两个<xref:System.Windows.Forms.TextBox>控件名为，`textBox1`和`textBox2`，已添加到窗体，`textBox1`具有文本分配给其<xref:System.Windows.Forms.Control.Text%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="85937-126">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-127">Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-127">Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-128">
            <see langword="true" /> 如果更改字体; 时自动调整控件的高度否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-128">
              <see langword="true" /> if the height of the control automatically adjusts when the font is changed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="85937-129">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-129">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-130">当你将设置<xref:System.Windows.Forms.TextBoxBase.AutoSize%2A>属性`true`为<xref:System.Windows.Forms.TextBox>，当<xref:System.Windows.Forms.Control.Font%2A>更改，<xref:System.Windows.Forms.TextBox>会扩大或缩小<xref:System.Windows.Forms.Control.Height%2A>以容纳更大或更小的文本。</span><span class="sxs-lookup"><span data-stu-id="85937-130">When you set the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property to `true` for a <xref:System.Windows.Forms.TextBox>, when the <xref:System.Windows.Forms.Control.Font%2A> changes, the <xref:System.Windows.Forms.TextBox> expands or contracts the <xref:System.Windows.Forms.Control.Height%2A> to accommodate the larger or smaller text.</span></span> <span data-ttu-id="85937-131"><xref:System.Windows.Forms.Control.Width%2A>的<xref:System.Windows.Forms.TextBox>不会更改。</span><span class="sxs-lookup"><span data-stu-id="85937-131">The <xref:System.Windows.Forms.Control.Width%2A> of the <xref:System.Windows.Forms.TextBox> does not change.</span></span>  
  
 <span data-ttu-id="85937-132">如果你想要更改控件的大小，在用户输入文本时，你可以使用<xref:System.Windows.Forms.RichTextBox>控件，并使用其<xref:System.Windows.Forms.RichTextBox.ContentsResized>事件来更改其大小。</span><span class="sxs-lookup"><span data-stu-id="85937-132">If you want to change the size of the control as the user enters text, you can use a <xref:System.Windows.Forms.RichTextBox> control and use its <xref:System.Windows.Forms.RichTextBox.ContentsResized> event to change its size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-133">此示例假定你具有的窗体具有两个文本框中，两个按钮，并为每个按钮单击事件。</span><span class="sxs-lookup"><span data-stu-id="85937-133">This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons.</span></span> <span data-ttu-id="85937-134">示例演示了<xref:System.Windows.Forms.TextBoxBase.AutoSize%2A>属性设置为`true`一个文本框和`false`其他。</span><span class="sxs-lookup"><span data-stu-id="85937-134">The example demonstrates the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property by setting it to `true` for one text box and `false` for the other.</span></span> <span data-ttu-id="85937-135">单击一个按钮时文本框中将填入较小的文本，并单击其他按钮时文本框中将填入较大的文本。</span><span class="sxs-lookup"><span data-stu-id="85937-135">When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text.</span></span> <span data-ttu-id="85937-136">包含文本框<xref:System.Windows.Forms.TextBoxBase.AutoSize%2A>设置为`true`将增加高度以适应较大的文本。</span><span class="sxs-lookup"><span data-stu-id="85937-136">The text box that has <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> set to `true` expands in height to accommodate the larger text.</span></span> <span data-ttu-id="85937-137">宽度不会更改。</span><span class="sxs-lookup"><span data-stu-id="85937-137">The width does not change.</span></span>  
  
 [!code-csharp[SystemWindowsFormsAutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsAutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-138">This event is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-138">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-139">此事件与此类无关。</span><span class="sxs-lookup"><span data-stu-id="85937-139">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-140">Gets or sets the background color of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-140">Gets or sets the background color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-141">A <see cref="T:System.Drawing.Color" /> ，它表示控件的背景。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-141">A <see cref="T:System.Drawing.Color" /> that represents the background of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-142">你可以使用<xref:System.Windows.Forms.TextBoxBase.BackColor%2A>属性可以更改要到窗体的配色方案混合的文本控件的背景色。</span><span class="sxs-lookup"><span data-stu-id="85937-142">You can use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property to change the background color of the text control to blend into the color scheme of your forms.</span></span>  
  
 <span data-ttu-id="85937-143">若要更改控件中的文本的颜色，请使用<xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="85937-143">To change the color of the text within the control, use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property.</span></span> <span data-ttu-id="85937-144">设置时<xref:System.Windows.Forms.TextBoxBase.BackColor%2A>属性的文本控件，请确保您所选的颜色不会导致要消失的控件的文本。</span><span class="sxs-lookup"><span data-stu-id="85937-144">When setting the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="85937-145">例如，如果<xref:System.Windows.Forms.TextBoxBase.BackColor%2A>和<xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>属性都设置为`Color.Black`，文本框控件中的文本将不可见。</span><span class="sxs-lookup"><span data-stu-id="85937-145">For example, if the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> and <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="85937-146">此属性可能会通过替代如果<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>属性<xref:System.Windows.Forms.TextBoxBase>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="85937-146">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-147">This property is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-147">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-148">对象背景图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-148">The background image for the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-149">此属性与此类无关。</span><span class="sxs-lookup"><span data-stu-id="85937-149">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-150">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-150">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> property changes.</span>
          </span>
          <span data-ttu-id="85937-151">This event is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-151">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-152">此事件与此类无关。</span><span class="sxs-lookup"><span data-stu-id="85937-152">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-153">This property is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-153">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-154">
            <see cref="T:System.Windows.Forms.ImageLayout" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-154">One of the <see cref="T:System.Windows.Forms.ImageLayout" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-155">此属性与此类无关。</span><span class="sxs-lookup"><span data-stu-id="85937-155">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-156">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-156">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> property changes.</span>
          </span>
          <span data-ttu-id="85937-157">This event is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-157">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-158">此事件与此类无关。</span><span class="sxs-lookup"><span data-stu-id="85937-158">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-159">Gets or sets the border type of the text box control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-159">Gets or sets the border type of the text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-160">A<see cref="T:System.Windows.Forms.BorderStyle" />表示在文本框控件的边框类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-160">A <see cref="T:System.Windows.Forms.BorderStyle" /> that represents the border type of the text box control.</span>
          </span>
          <span data-ttu-id="85937-161">默认值为 <see langword="Fixed3D" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-161">The default is <see langword="Fixed3D" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-162">你可以使用<xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A>要创建无边框和平面风格的控件，除了默认的三维控件属性。</span><span class="sxs-lookup"><span data-stu-id="85937-162">You can use the <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> property to create borderless and flat style controls, in addition to the default three-dimensional control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85937-163">派生的类中， <xref:System.Windows.Forms.RichTextBox>，不支持`BorderStyle.FixedSingle`样式。</span><span class="sxs-lookup"><span data-stu-id="85937-163">The derived class, <xref:System.Windows.Forms.RichTextBox>, does not support the `BorderStyle.FixedSingle` style.</span></span> <span data-ttu-id="85937-164">此样式将导致<xref:System.Windows.Forms.BorderStyle>使用`BorderStyle.Fixed3D`改为样式。</span><span class="sxs-lookup"><span data-stu-id="85937-164">This style will cause the <xref:System.Windows.Forms.BorderStyle> to use the `BorderStyle.Fixed3D` style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-165">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类中，以创建可以正确显示文本 20 点 Arial 使用一个边框的文本框。</span><span class="sxs-lookup"><span data-stu-id="85937-165">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border.</span></span> <span data-ttu-id="85937-166">此示例使用<xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A>属性以确定后字体的相应控件的高度和<xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A>已分配给该控件。</span><span class="sxs-lookup"><span data-stu-id="85937-166">This example uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to determine the appropriate height of the control after the font and <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> have been assigned to the control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="85937-167">A value that is not within the range of valid values for the enumeration was assigned to the property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-167">A value that is not within the range of valid values for the enumeration was assigned to the property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.BorderStyleChanged : EventHandler " Usage="member this.BorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-168">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-168">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-169">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="85937-169">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-170">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="85937-170">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="85937-171">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-171">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span> <span data-ttu-id="85937-172">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="85937-172">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="85937-173">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="85937-173">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="85937-174">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<xref:System.Windows.Forms.TextBoxBase>，如<xref:System.Windows.Forms.TextBox>或<xref:System.Windows.Forms.TextBoxBase>。</span><span class="sxs-lookup"><span data-stu-id="85937-174">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="85937-175">然后将其命名实例`TextBoxBase1`并确保与事件处理程序<xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-175">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#242](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#242)]
 [!code-vb[System.Windows.Forms.EventExamples#242](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#242)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected override bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-176">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-176">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-177">
            <see langword="false" /> 如果<see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />属性是<see langword="true" />或如果此<see cref="T:System.Windows.Forms.TextBoxBase" />类设置为使用密码掩码字符; 否则为<see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-177">
              <see langword="false" /> if the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property is <see langword="true" /> or if this <see cref="T:System.Windows.Forms.TextBoxBase" /> class is set to use a password mask character; otherwise, <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUndo : bool" Usage="System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-178">Gets a value indicating whether the user can undo the previous operation in a text box control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-178">Gets a value indicating whether the user can undo the previous operation in a text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-179">
            <see langword="true" /> 如果用户能否撤消上一个文本框控件，则在执行的操作否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-179">
              <see langword="true" /> if the user can undo the previous operation performed in a text box control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-180">如果此方法返回`true`，可以调用<xref:System.Windows.Forms.TextBoxBase.Undo%2A>方法来撤消文本框中的上一个操作。</span><span class="sxs-lookup"><span data-stu-id="85937-180">If this method returns `true`, you can call the <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method to undo the last operation in a text box.</span></span> <span data-ttu-id="85937-181">你可以使用此方法在<xref:System.Windows.Forms.MenuItem.Popup>事件<xref:System.Windows.Forms.MenuItem>，或在管理的按钮的状态的代码中<xref:System.Windows.Forms.ToolBar>启用或禁用撤消文本框控件中的上一操作的能力。</span><span class="sxs-lookup"><span data-stu-id="85937-181">You can use this method in the <xref:System.Windows.Forms.MenuItem.Popup> event of a <xref:System.Windows.Forms.MenuItem>, or in code that manages the state of buttons on a <xref:System.Windows.Forms.ToolBar> to enable or disable the ability to undo the previous operation in a text box control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-182">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类。</span><span class="sxs-lookup"><span data-stu-id="85937-182">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="85937-183">它提供了<xref:System.Windows.Forms.MenuItem.Click>事件处理程序<xref:System.Windows.Forms.MenuItem>对象执行剪切、 复制、 粘贴和撤消操作。</span><span class="sxs-lookup"><span data-stu-id="85937-183">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="85937-184">此示例需要<xref:System.Windows.Forms.TextBox>控件名为`textBox1`已创建。</span><span class="sxs-lookup"><span data-stu-id="85937-184">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="textBoxBase.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85937-185">Clears all text from the text box control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-185">Clears all text from the text box control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-186">你可以使用此方法清除而不是分配控件的内容<xref:System.Windows.Forms.TextBoxBase.Text%2A>属性为空字符串。</span><span class="sxs-lookup"><span data-stu-id="85937-186">You can use this method to clear the contents of the control instead of assigning the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-187">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类中，以创建的事件处理程序<xref:System.Windows.Forms.Control.TextChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-187">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create an event handler for the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span> <span data-ttu-id="85937-188">在事件处理程序内的代码将数据限制为数字。</span><span class="sxs-lookup"><span data-stu-id="85937-188">The code within the event handler restricts data to numbers.</span></span> <span data-ttu-id="85937-189">已在控件中输入文本后，代码将确定是否输入的文本是一个数字。</span><span class="sxs-lookup"><span data-stu-id="85937-189">After text has been entered in the control, the code determines if the text entered is a number.</span></span> <span data-ttu-id="85937-190">如果文本不是数字，则代码将清除从控件文本和<xref:System.Windows.Forms.MessageBox>显示来警告用户接受数字。</span><span class="sxs-lookup"><span data-stu-id="85937-190">If the text is not a number, the code clears the text from the control and a <xref:System.Windows.Forms.MessageBox> is displayed to alert the user that only numbers are accepted.</span></span> <span data-ttu-id="85937-191">该示例需要`Boolean`变量名为`flag`和<xref:System.Windows.Forms.TextBox>控件称为`textBox1`外部此方法定义。</span><span class="sxs-lookup"><span data-stu-id="85937-191">The example requires that a `Boolean` variable named `flag` and a <xref:System.Windows.Forms.TextBox> control called `textBox1` are defined outside of this method.</span></span> <span data-ttu-id="85937-192">此示例演示如何使用标志变量来避免中的级联事件<xref:System.Windows.Forms.Control.TextChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-192">This example demonstrates how to use a flag variable to avoid a cascading event in the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      </Docs>
    </Member>
    <Member MemberName="ClearUndo">
      <MemberSignature Language="C#" Value="public void ClearUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearUndo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearUndo();" />
      <MemberSignature Language="F#" Value="member this.ClearUndo : unit -&gt; unit" Usage="textBoxBase.ClearUndo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85937-193">Clears information about the most recent operation from the undo buffer of the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-193">Clears information about the most recent operation from the undo buffer of the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-194">可以使用此方法以防止重复，撤消操作根据你的应用程序的状态。</span><span class="sxs-lookup"><span data-stu-id="85937-194">You can use this method to prevent an undo operation from repeating, based on the state of your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-195">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类。</span><span class="sxs-lookup"><span data-stu-id="85937-195">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="85937-196">它提供了<xref:System.Windows.Forms.MenuItem.Click>事件处理程序<xref:System.Windows.Forms.MenuItem>对象执行剪切、 复制、 粘贴和撤消操作。</span><span class="sxs-lookup"><span data-stu-id="85937-196">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="85937-197">此示例需要<xref:System.Windows.Forms.TextBox>控件名为`textBox1`已创建。</span><span class="sxs-lookup"><span data-stu-id="85937-197">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-198">Occurs when the text box is clicked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-198">Occurs when the text box is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-199">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="85937-199">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-200">下面的代码示例演示如何处理<xref:System.Windows.Forms.TextBoxBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-200">The following code example demonstrates how to handle the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span> <span data-ttu-id="85937-201">若要运行该示例，请将以下代码粘贴在窗体包含<xref:System.Windows.Forms.TextBox>名为 TextBox1。</span><span class="sxs-lookup"><span data-stu-id="85937-201">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called TextBox1.</span></span> <span data-ttu-id="85937-202">此示例需要已经与相关联的事件处理方法<xref:System.Windows.Forms.TextBoxBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-202">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; unit" Usage="textBoxBase.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85937-203">Copies the current selection in the text box to the **Clipboard**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-203">Copies the current selection in the text box to the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-204">你可以使用此方法，而不是使用<xref:System.Windows.Forms.Clipboard>类中，以在文本框中复制文本并将它置于**剪贴板**。</span><span class="sxs-lookup"><span data-stu-id="85937-204">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and place it in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-205">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类。</span><span class="sxs-lookup"><span data-stu-id="85937-205">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="85937-206">它提供了<xref:System.Windows.Forms.MenuItem.Click>事件处理程序<xref:System.Windows.Forms.MenuItem>对象执行剪切、 复制、 粘贴和撤消操作。</span><span class="sxs-lookup"><span data-stu-id="85937-206">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="85937-207">此示例需要<xref:System.Windows.Forms.TextBox>控件名为`textBox1`已创建。</span><span class="sxs-lookup"><span data-stu-id="85937-207">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="textBoxBase.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85937-208">Creates a handle for the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-208">Creates a handle for the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="85937-209">用于操作与非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-209">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="85937-210">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-210">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-211">Gets the required creation parameters when the control handle is created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-211">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-212">
            <see cref="T:System.Windows.Forms.CreateParams" />，包含创建控件的句柄时所需的创建参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-212">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberSignature Language="F#" Value="member this.Cut : unit -&gt; unit" Usage="textBoxBase.Cut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85937-213">Moves the current selection in the text box to the **Clipboard**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-213">Moves the current selection in the text box to the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-214">此方法只会从文本框剪切的文本，如果控件中选定文本。</span><span class="sxs-lookup"><span data-stu-id="85937-214">This method will only cut text from the text box if text is selected in the control.</span></span> <span data-ttu-id="85937-215">你可以使用此方法，而不是使用<xref:System.Windows.Forms.Clipboard>类中，以在文本框中复制文本，然后将其移动到**剪贴板**。</span><span class="sxs-lookup"><span data-stu-id="85937-215">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and move it to the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-216">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类。</span><span class="sxs-lookup"><span data-stu-id="85937-216">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="85937-217">它提供了<xref:System.Windows.Forms.MenuItem.Click>事件处理程序<xref:System.Windows.Forms.MenuItem>对象执行剪切、 复制、 粘贴和撤消操作。</span><span class="sxs-lookup"><span data-stu-id="85937-217">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="85937-218">此示例需要<xref:System.Windows.Forms.TextBox>控件名为`textBox1`已创建。</span><span class="sxs-lookup"><span data-stu-id="85937-218">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursor">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Cursor DefaultCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor DefaultCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Cursor ^ DefaultCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-219">Gets or sets the default cursor for the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-219">Gets or sets the default cursor for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-220">一个 <see cref="T:System.Windows.Forms.Cursor" /> 类型的对象，表示当前默认光标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-220">An object of type <see cref="T:System.Windows.Forms.Cursor" /> representing the current default cursor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-221">重写<xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A>配置为您的控件的默认光标。</span><span class="sxs-lookup"><span data-stu-id="85937-221">Override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> to configure a default cursor for your control.</span></span> <span data-ttu-id="85937-222">这比将光标设置在控件的构造函数中更高效，并为自动支持提供某些游标相关的设计器函数。</span><span class="sxs-lookup"><span data-stu-id="85937-222">This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-223">Gets the default size of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-223">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-224">控件的默认 <see cref="T:System.Drawing.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-224">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DeselectAll">
      <MemberSignature Language="C#" Value="public void DeselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.DeselectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeselectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeselectAll();" />
      <MemberSignature Language="F#" Value="member this.DeselectAll : unit -&gt; unit" Usage="textBoxBase.DeselectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85937-225">Specifies that the value of the <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> property is zero so that no characters are selected in the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-225">Specifies that the value of the <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> property is zero so that no characters are selected in the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-226">Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-226">Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed.</span>
          </span>
          <span data-ttu-id="85937-227">This property is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-227">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-228">
            <see langword="true" /> 若要实现控件; 上的双缓冲否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-228">
              <see langword="true" /> to implement double buffering on the control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-229">此属性与此类无关。</span><span class="sxs-lookup"><span data-stu-id="85937-229">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-230">Gets or sets the foreground color of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-230">Gets or sets the foreground color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-231">A<see cref="T:System.Drawing.Color" />表示控件的前景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-231">A <see cref="T:System.Drawing.Color" /> that represents the control's foreground color.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-232">你可以使用<xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>属性可以更改以匹配窗体上其他控件的文本控件中的文本的颜色。</span><span class="sxs-lookup"><span data-stu-id="85937-232">You can use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property to change the color of the text within the control to match the text of other controls on your form.</span></span> <span data-ttu-id="85937-233">你还可以使用此属性以突出显示一个特定的文本框包含无效值。</span><span class="sxs-lookup"><span data-stu-id="85937-233">You can also use this property to highlight a specific text box that contains an invalid value.</span></span>  
  
 <span data-ttu-id="85937-234">若要更改控件的背景色，请使用<xref:System.Windows.Forms.TextBoxBase.BackColor%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="85937-234">To change the background color of the control, use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property.</span></span> <span data-ttu-id="85937-235">设置时<xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>属性的文本控件，请确保您所选的颜色不会导致要消失的控件的文本。</span><span class="sxs-lookup"><span data-stu-id="85937-235">When setting the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="85937-236">例如，如果<xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>和<xref:System.Windows.Forms.TextBoxBase.BackColor%2A>属性都设置为`Color.Black`，文本框控件中的文本将不可见。</span><span class="sxs-lookup"><span data-stu-id="85937-236">For example, if the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> and <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="85937-237">此属性可能会通过替代如果<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>属性<xref:System.Windows.Forms.TextBoxBase>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="85937-237">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public virtual char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharFromPosition (pt As Point) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char GetCharFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="abstract member GetCharFromPosition : System.Drawing.Point -&gt; char&#xA;override this.GetCharFromPosition : System.Drawing.Point -&gt; char" Usage="textBoxBase.GetCharFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="85937-238">The location from which to seek the nearest character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-238">The location from which to seek the nearest character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-239">Retrieves the character that is closest to the specified location within the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-239">Retrieves the character that is closest to the specified location within the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85937-240">The character at the specified location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-240">The character at the specified location.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-241">如果在指定位置`pt`控件中指定的点到距离最近的字符串的第一个字符的工作区以外的参数是`pt`返回。</span><span class="sxs-lookup"><span data-stu-id="85937-241">If the location specified in the `pt` parameter is outside the client area of the control, the first character of the string closest to the point specified in `pt` is returned.</span></span> <span data-ttu-id="85937-242">可以使用此方法来确定哪些字符位于控件内的特定点附近。</span><span class="sxs-lookup"><span data-stu-id="85937-242">You can use this method to determine which characters are located near a specific point within the control.</span></span> <span data-ttu-id="85937-243">然后可以使用此值在该位置的文本上执行操作。</span><span class="sxs-lookup"><span data-stu-id="85937-243">You can then use this value to perform operations on the text at that location.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85937-244">如果中的指定的位置`pt`参数位于控件中指定的点到距离最近的字符串的最后一个字符的工作区右侧`pt`返回。</span><span class="sxs-lookup"><span data-stu-id="85937-244">If the specified location in the `pt` parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in `pt` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public virtual int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharIndexFromPosition (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharIndexFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="abstract member GetCharIndexFromPosition : System.Drawing.Point -&gt; int&#xA;override this.GetCharIndexFromPosition : System.Drawing.Point -&gt; int" Usage="textBoxBase.GetCharIndexFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="85937-245">The location to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-245">The location to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-246">Retrieves the index of the character nearest to the specified location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-246">Retrieves the index of the character nearest to the specified location.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85937-247">The zero-based character index at the specified location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-247">The zero-based character index at the specified location.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-248">此方法返回与指定的位置最接近的字符索引`pt`参数。</span><span class="sxs-lookup"><span data-stu-id="85937-248">This method returns the character index that is closest to the position specified in the `pt` parameter.</span></span> <span data-ttu-id="85937-249">字符索引是文本的在控件中，包括空格中的从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="85937-249">The character index is a zero-based index of text in the control, including spaces.</span></span> <span data-ttu-id="85937-250">此方法可用于确定在文本中用户在其上将鼠标放将鼠标坐标传递给此方法。</span><span class="sxs-lookup"><span data-stu-id="85937-250">You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.</span></span> <span data-ttu-id="85937-251">这很有用，如果你想要在用户将鼠标指针停留在该控件的文本中的单词时执行任务。</span><span class="sxs-lookup"><span data-stu-id="85937-251">This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="85937-252">如果指定的位置不在该控件的客户端矩形内，或不在控件中的最后一个字符，返回值是最后一个字符的索引。</span><span class="sxs-lookup"><span data-stu-id="85937-252">If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexFromLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexFromLine (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexFromLine(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexFromLine (lineNumber As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexFromLine(int lineNumber);" />
      <MemberSignature Language="F#" Value="member this.GetFirstCharIndexFromLine : int -&gt; int" Usage="textBoxBase.GetFirstCharIndexFromLine lineNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">
          <span data-ttu-id="85937-253">The line for which to get the index of its first character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-253">The line for which to get the index of its first character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-254">Retrieves the index of the first character of a given line.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-254">Retrieves the index of the first character of a given line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85937-255">The zero-based index of the first character in the specified line.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-255">The zero-based index of the first character in the specified line.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-256">从零开始的行号在文本框中。</span><span class="sxs-lookup"><span data-stu-id="85937-256">Line numbering in the text box starts at zero.</span></span> <span data-ttu-id="85937-257">如果`lineNumber`参数大于在文本框中的最后一行<xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A>返回-1。</span><span class="sxs-lookup"><span data-stu-id="85937-257">If the `lineNumber` parameter is greater than the last line in the text box, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns -1.</span></span>  
  
 <span data-ttu-id="85937-258"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> 返回物理行的第一个字符索引。</span><span class="sxs-lookup"><span data-stu-id="85937-258"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns the first character index of a physical line.</span></span> <span data-ttu-id="85937-259">物理行是显示的行中，不是分配行。</span><span class="sxs-lookup"><span data-stu-id="85937-259">The physical line is the displayed line, not the assigned line.</span></span> <span data-ttu-id="85937-260">显示的行数可以大于由于自动换行分配行数。</span><span class="sxs-lookup"><span data-stu-id="85937-260">The number of displayed lines can be greater than the number of assigned lines due to word wrap.</span></span> <span data-ttu-id="85937-261">例如，如果分配到两个长行<xref:System.Windows.Forms.RichTextBox>控件并设置<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>到`true`，两个已分配的长行产生四个物理 （或显示行）。</span><span class="sxs-lookup"><span data-stu-id="85937-261">For example, if you assign two long lines to a <xref:System.Windows.Forms.RichTextBox> control and set <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> to `true`, the two long assigned lines result in four physical (or displayed lines).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="85937-262">The value of the <paramref name="lineNumber" /> parameter is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-262">The value of the <paramref name="lineNumber" /> parameter is less than zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexOfCurrentLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexOfCurrentLine () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexOfCurrentLine();" />
      <MemberSignature Language="F#" Value="member this.GetFirstCharIndexOfCurrentLine : unit -&gt; int" Usage="textBoxBase.GetFirstCharIndexOfCurrentLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85937-263">Retrieves the index of the first character of the current line.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-263">Retrieves the index of the first character of the current line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85937-264">The zero-based character index in the current line.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-264">The zero-based character index in the current line.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineFromCharIndex (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLineFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetLineFromCharIndex : int -&gt; int&#xA;override this.GetLineFromCharIndex : int -&gt; int" Usage="textBoxBase.GetLineFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="85937-265">The character index position to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-265">The character index position to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-266">Retrieves the line number from the specified character position within the text of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-266">Retrieves the line number from the specified character position within the text of the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85937-267">The zero-based line number in which the character index is located.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-267">The zero-based line number in which the character index is located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-268">此方法可用于确定基于中指定的字符索引的行号`index`的方法参数。</span><span class="sxs-lookup"><span data-stu-id="85937-268">This method enables you to determine the line number based on the character index specified in the `index` parameter of the method.</span></span> <span data-ttu-id="85937-269">控件中的文本的第一行返回值零。</span><span class="sxs-lookup"><span data-stu-id="85937-269">The first line of text in the control returns the value zero.</span></span> <span data-ttu-id="85937-270"><xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A>方法返回的物理行号的索引的字符所在的位置在控件内。</span><span class="sxs-lookup"><span data-stu-id="85937-270">The <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns the physical line number where the indexed character is located within the control.</span></span> <span data-ttu-id="85937-271">例如，如果第一个逻辑行中的文本的一部分控件换行到下一行，<xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A>方法返回 1，如果指定的字符索引处的字符已经换行到第二个物理行。</span><span class="sxs-lookup"><span data-stu-id="85937-271">For example, if a portion of the first logical line of text in the control wraps to the next line, the <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns 1 if the character at the specified character index has wrapped to the second physical line.</span></span> <span data-ttu-id="85937-272">如果<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>设置为`false`、 行的任何部分被换到下一行，并且该方法返回对指定的字符索引为 0。</span><span class="sxs-lookup"><span data-stu-id="85937-272">If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index.</span></span> <span data-ttu-id="85937-273">此方法可用于确定哪一行是位于特定的字符索引。</span><span class="sxs-lookup"><span data-stu-id="85937-273">You can use this method to determine which line a specific character index is located within.</span></span> <span data-ttu-id="85937-274">例如，在调用<xref:System.Windows.Forms.RichTextBox.Find%2A>方法来搜索的文本，你可以获取到找到搜索结果的字符索引。</span><span class="sxs-lookup"><span data-stu-id="85937-274">For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found.</span></span> <span data-ttu-id="85937-275">你可以调用此方法返回的字符索引与<xref:System.Windows.Forms.RichTextBox.Find%2A>找不到方法，以确定其行单词。</span><span class="sxs-lookup"><span data-stu-id="85937-275">You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85937-276">如果在中指定的字符索引`index`参数为超出可用的控件内包含的行数，则返回最后一个行号。</span><span class="sxs-lookup"><span data-stu-id="85937-276">If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPositionFromCharIndex (index As Integer) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Point GetPositionFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetPositionFromCharIndex : int -&gt; System.Drawing.Point&#xA;override this.GetPositionFromCharIndex : int -&gt; System.Drawing.Point" Usage="textBoxBase.GetPositionFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="85937-277">The index of the character for which to retrieve the location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-277">The index of the character for which to retrieve the location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-278">Retrieves the location within the control at the specified character index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-278">Retrieves the location within the control at the specified character index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85937-279">The location of the specified character within the client rectangle of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-279">The location of the specified character within the client rectangle of the control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-280">此方法可确定在控件中特定的字符索引所在的位置。</span><span class="sxs-lookup"><span data-stu-id="85937-280">This method enables you to determine where in the control a specific character index is located.</span></span> <span data-ttu-id="85937-281">此方法可用于任务，如在控件中显示快捷菜单项或帮助信息的单词。</span><span class="sxs-lookup"><span data-stu-id="85937-281">You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.</span></span> <span data-ttu-id="85937-282">例如，如果你想要向用户显示的菜单选项，当用户右键单击控件中的单词上，你可以使用此方法来确定单词以正确显示的位置<xref:System.Windows.Forms.ContextMenu>控件。</span><span class="sxs-lookup"><span data-stu-id="85937-282">For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-283">Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-283">Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-284">
            <see langword="true" /> 在文本框控件失去焦点; 时，如果未显示所选的文本将突出显示<see langword="false" />，如果在文本框控件没有焦点时，所选的文本保持突出显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-284">
              <see langword="true" /> if the selected text does not appear highlighted when the text box control loses focus; <see langword="false" />, if the selected text remains highlighted when the text box control loses focus.</span>
          </span>
          <span data-ttu-id="85937-285">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-285">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-286">此属性可用于保留而另一个窗体或对话框中具有焦点，如拼写检查器对话框中，在文本框控件中突出显示的文本。</span><span class="sxs-lookup"><span data-stu-id="85937-286">You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-287">下面的代码示例演示如何使用<xref:System.Windows.Forms.TextBoxBase.HideSelection%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="85937-287">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> property.</span></span> <span data-ttu-id="85937-288">若要运行该示例，请在窗体中粘贴以下代码。</span><span class="sxs-lookup"><span data-stu-id="85937-288">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="85937-289">调用`InitializeTextBox`窗体的构造函数中的方法或`Load`方法。</span><span class="sxs-lookup"><span data-stu-id="85937-289">Call the `InitializeTextBox` method in the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideSelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HideSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HideSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HideSelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HideSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.HideSelectionChanged : EventHandler " Usage="member this.HideSelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-290">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-290">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-291">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="85937-291">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-292">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="85937-292">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="85937-293">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-293">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span> <span data-ttu-id="85937-294">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="85937-294">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="85937-295">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="85937-295">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="85937-296">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<xref:System.Windows.Forms.TextBoxBase>，如<xref:System.Windows.Forms.TextBox>或<xref:System.Windows.Forms.TextBoxBase>。</span><span class="sxs-lookup"><span data-stu-id="85937-296">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="85937-297">然后将其命名实例`TextBoxBase1`并确保与事件处理程序<xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-297">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#245](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#245)]
 [!code-vb[System.Windows.Forms.EventExamples#245](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#245)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode ImeModeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeModeBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property ImeModeBase As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode ImeModeBase { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeModeBase : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-298">Gets or sets the Input Method Editor (IME) mode of a control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-298">Gets or sets the Input Method Editor (IME) mode of a control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-299">控件的 IME 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-299">The IME mode of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="85937-300">One of the Keys value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-300">One of the Keys value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-301">Determines whether the specified key is an input key or a special key that requires preprocessing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-301">Determines whether the specified key is an input key or a special key that requires preprocessing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85937-302">
            <see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-302">
              <see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-303"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A>方法返回`true`时`keyData`参数包含<xref:System.Windows.Forms.Keys.Tab>值和<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="85937-303">The <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Tab> value and the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is `true`.</span></span> <span data-ttu-id="85937-304"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> 返回`false`如果`keyData`同时包含<xref:System.Windows.Forms.Keys.Tab>和<xref:System.Windows.Forms.Keys.Control>。</span><span class="sxs-lookup"><span data-stu-id="85937-304"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> returns `false` if `keyData` contains both <xref:System.Windows.Forms.Keys.Tab> and <xref:System.Windows.Forms.Keys.Control>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public string[] Lines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Lines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Lines" />
      <MemberSignature Language="VB.NET" Value="Public Property Lines As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Lines { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Lines : string[] with get, set" Usage="System.Windows.Forms.TextBoxBase.Lines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-305">Gets or sets the lines of text in a text box control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-305">Gets or sets the lines of text in a text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-306">包含文本框控件中的文本的字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-306">An array of strings that contains the text in a text box control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-307">数组中的每个元素将成为在文本框控件中文本的行。</span><span class="sxs-lookup"><span data-stu-id="85937-307">Each element in the array becomes a line of text in the text box control.</span></span> <span data-ttu-id="85937-308">如果<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>文本框控件的属性设置为`true`和换行字符的文本中出现，换行字符后面的文本是添加到数组中的新元素，并显示在单独一行上。</span><span class="sxs-lookup"><span data-stu-id="85937-308">If the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the text box control is set to `true` and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85937-309">默认情况下，行的集合是中的行的只读副本<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="85937-309">By default, the collection of lines is a read-only copy of the lines in the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="85937-310">若要获取的行可写的集合，请使用类似于以下代码： `textBox1.Lines = new string[] { "abcd" };`</span><span class="sxs-lookup"><span data-stu-id="85937-310">To get a writable collection of lines, use code similar to the following: `textBox1.Lines = new string[] { "abcd" };`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-311">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类中，以从多行文本框控件中提取的文本的所有字符串并将它们显示使用<xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="85937-311">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="85937-312">此示例需要<xref:System.Windows.Forms.TextBox>已创建控件，名为`textBox1`，并且已使用的文本行填充它。</span><span class="sxs-lookup"><span data-stu-id="85937-312">This example requires that a <xref:System.Windows.Forms.TextBox> control has been created, named `textBox1`, and that it has been filled with lines of text.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Lines Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public virtual int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(32767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-313">Gets or sets the maximum number of characters the user can type or paste into the text box control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-313">Gets or sets the maximum number of characters the user can type or paste into the text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-314">可以在文本框控件中输入的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-314">The number of characters that can be entered into the control.</span>
          </span>
          <span data-ttu-id="85937-315">默认值为 32767。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-315">The default is 32767.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-316">可以使用此属性，以限制为如邮政编码和电话号码的值输入控件中的文本的长度或将输入数据时要输入在数据库中的文本的长度限制。</span><span class="sxs-lookup"><span data-stu-id="85937-316">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.</span></span> <span data-ttu-id="85937-317">你可以限制到数据库中的对应字段的最大长度文本框控件中输入的文本。</span><span class="sxs-lookup"><span data-stu-id="85937-317">You can limit the text entered into the control to the maximum length of the corresponding field in the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85937-318">在代码中，你可以设置的值<xref:System.Windows.Forms.TextBoxBase.Text%2A>属性的长度大于指定的值的值<xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="85937-318">In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property.</span></span> <span data-ttu-id="85937-319">此属性仅影响在运行时文本框控件中输入的文本。</span><span class="sxs-lookup"><span data-stu-id="85937-319">This property only affects text entered into the control at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-320">下面的代码示例使用派生的类中， <xref:System.Windows.Forms.TextBox>，以创建用来接受密码的文本框。</span><span class="sxs-lookup"><span data-stu-id="85937-320">The following code example uses the derived class, <xref:System.Windows.Forms.TextBox>, to create a text box that is used to accept a password.</span></span> <span data-ttu-id="85937-321">此示例使用<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>属性以更改所有字符类型化为大写和<xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>属性将密码长度限制为八个字符。</span><span class="sxs-lookup"><span data-stu-id="85937-321">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to uppercase and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="85937-322">此示例还使用<xref:System.Windows.Forms.TextBox.TextAlign%2A>属性到中心中的密码<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="85937-322">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="85937-323">The value assigned to the property is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-323">The value assigned to the property is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="public bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Modified" />
      <MemberSignature Language="VB.NET" Value="Public Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Modified : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.Modified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-324">Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-324">Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-325">
            <see langword="true" /> 如果控件的内容已修改;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-325">
              <see langword="true" /> if the control's contents have been modified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="85937-326">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-326">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-327">此属性可用于确定用户是否已修改文本框控件的内容。</span><span class="sxs-lookup"><span data-stu-id="85937-327">You can use this property to determine if the user has modified the contents of the text box control.</span></span> <span data-ttu-id="85937-328">此外可以在代码中以指示进行了更改到文本框控件由应用程序设置此属性。</span><span class="sxs-lookup"><span data-stu-id="85937-328">You can also set this property in code to indicate that changes were made to the text box control by the application.</span></span> <span data-ttu-id="85937-329">此属性可以验证和数据保存方法，用于确定如果以便可以验证所更改的内容，或将其保存在一个文本框控件中进行了更改。</span><span class="sxs-lookup"><span data-stu-id="85937-329">This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.</span></span>  
  
 <span data-ttu-id="85937-330">如果你更改<xref:System.Windows.Forms.TextBoxBase.Text%2A>属性以编程方式，<xref:System.Windows.Forms.TextBoxBase.Modified%2A>属性将恢复为`false`。</span><span class="sxs-lookup"><span data-stu-id="85937-330">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="85937-331">这不会引发<xref:System.Windows.Forms.TextBoxBase.ModifiedChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-331">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-332">下面的代码示例使用<xref:System.Windows.Forms.Control.TextChanged>事件<xref:System.Windows.Forms.TextBox>，派生类中，以确定的内容<xref:System.Windows.Forms.TextBox>控件填充数据后进行了修改控件。</span><span class="sxs-lookup"><span data-stu-id="85937-332">The following code example uses the <xref:System.Windows.Forms.Control.TextChanged> event for a <xref:System.Windows.Forms.TextBox>, a derived class, to determine if the contents of the <xref:System.Windows.Forms.TextBox> control have changed since the control was filled with data.</span></span> <span data-ttu-id="85937-333">该示例使用一个字符串来存储控件的原始内容并将其与内容比较<xref:System.Windows.Forms.TextBox>以确定其内容已经更改。</span><span class="sxs-lookup"><span data-stu-id="85937-333">The example uses a string to store the original contents of the control and compares it against the contents of the <xref:System.Windows.Forms.TextBox> to determine if the contents have changed.</span></span> <span data-ttu-id="85937-334">如果内容已更改，<xref:System.Windows.Forms.TextBoxBase.Modified%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="85937-334">If the contents have changed, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property is set to `true`.</span></span> <span data-ttu-id="85937-335">否则，它将重置为`false`。</span><span class="sxs-lookup"><span data-stu-id="85937-335">Otherwise, it is reset to `false`.</span></span> <span data-ttu-id="85937-336">此示例需要<xref:System.Windows.Forms.TextBox>控件名为`textBox1`已创建且`String`变量名为`originalText`已经创建，以存储的原始文本<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="85937-336">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created and that a `String` variable named `originalText` has been created to store the original text for the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Modified Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModifiedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModifiedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModifiedChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModifiedChanged;" />
      <MemberSignature Language="F#" Value="member this.ModifiedChanged : EventHandler " Usage="member this.ModifiedChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-337">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-337">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-338">如果你更改<xref:System.Windows.Forms.TextBoxBase.Text%2A>属性以编程方式，<xref:System.Windows.Forms.TextBoxBase.Modified%2A>属性将恢复为`false`。</span><span class="sxs-lookup"><span data-stu-id="85937-338">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="85937-339">这不会引发<xref:System.Windows.Forms.TextBoxBase.ModifiedChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-339">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 <span data-ttu-id="85937-340">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="85937-340">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-341">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="85937-341">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="85937-342">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.TextBoxBase.ModifiedChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-342">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span> <span data-ttu-id="85937-343">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="85937-343">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="85937-344">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="85937-344">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="85937-345">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<xref:System.Windows.Forms.TextBoxBase>，如<xref:System.Windows.Forms.TextBox>或<xref:System.Windows.Forms.TextBoxBase>。</span><span class="sxs-lookup"><span data-stu-id="85937-345">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="85937-346">然后将其命名实例`TextBoxBase1`并确保与事件处理程序<xref:System.Windows.Forms.TextBoxBase.ModifiedChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-346">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#246](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#246)]
 [!code-vb[System.Windows.Forms.EventExamples#246](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#246)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-347">Occurs when the control is clicked by the mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-347">Occurs when the control is clicked by the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-348"><xref:System.Windows.Forms.RichTextBox>控件不会引发<xref:System.Windows.Forms.TextBoxBase.Click>右键单击事件。</span><span class="sxs-lookup"><span data-stu-id="85937-348">The <xref:System.Windows.Forms.RichTextBox> control does not raise a <xref:System.Windows.Forms.TextBoxBase.Click> event for right clicks.</span></span> <span data-ttu-id="85937-349"><xref:System.Windows.Forms.TextBoxBase.MouseClick>事件提供了在功能上等效。</span><span class="sxs-lookup"><span data-stu-id="85937-349">The <xref:System.Windows.Forms.TextBoxBase.MouseClick> event provides the functional equivalent.</span></span>  
  
 <span data-ttu-id="85937-350">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="85937-350">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-351">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="85937-351">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="85937-352">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.TextBoxBase.MouseClick>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-352">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span> <span data-ttu-id="85937-353">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="85937-353">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="85937-354">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="85937-354">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="85937-355">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<xref:System.Windows.Forms.TextBoxBase>，如<xref:System.Windows.Forms.TextBox>或<xref:System.Windows.Forms.TextBoxBase>。</span><span class="sxs-lookup"><span data-stu-id="85937-355">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="85937-356">然后将其命名实例`TextBoxBase1`并确保与事件处理程序<xref:System.Windows.Forms.TextBoxBase.MouseClick>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-356">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#244](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#244)]
 [!code-vb[System.Windows.Forms.EventExamples#244](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#244)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public virtual bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-357">Gets or sets a value indicating whether this is a multiline text box control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-357">Gets or sets a value indicating whether this is a multiline text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-358">
            <see langword="true" /> 如果控件是多行文本框控件，则否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-358">
              <see langword="true" /> if the control is a multiline text box control; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="85937-359">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-359">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-360">多行文本框中，可在控件中显示的文本的多个行。</span><span class="sxs-lookup"><span data-stu-id="85937-360">A multiline text box allows you to display more than one line of text in the control.</span></span> <span data-ttu-id="85937-361">如果<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>属性设置为`true`，多行文本框中输入的文本换行到下一行控件中。</span><span class="sxs-lookup"><span data-stu-id="85937-361">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, text entered into the multiline text box is wrapped to the next line in the control.</span></span> <span data-ttu-id="85937-362">如果<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>属性设置为`false`，直到输入换行字符输入到多行文本框控件的文本将显示在同一行。</span><span class="sxs-lookup"><span data-stu-id="85937-362">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `false`, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.</span></span>  
  
 <span data-ttu-id="85937-363">以下可用作换行字符：</span><span class="sxs-lookup"><span data-stu-id="85937-363">The following can be used as newline characters:</span></span>  
  
-   <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>  
  
-   <span data-ttu-id="85937-364">ControlChars.CrLf</span><span class="sxs-lookup"><span data-stu-id="85937-364">ControlChars.CrLf</span></span>  
  
-   <span data-ttu-id="85937-365">vbCrLf (仅限 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="85937-365">vbCrLf (Visual Basic only)</span></span>  
  
 <span data-ttu-id="85937-366">你可以将滚动条添加到文本中使用<xref:System.Windows.Forms.TextBox.ScrollBars%2A>属性显示水平和/或垂直滚动条。</span><span class="sxs-lookup"><span data-stu-id="85937-366">You can add scroll bars to a text box using the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property to display horizontal and/or vertical scroll bars.</span></span> <span data-ttu-id="85937-367">这允许用户滚动控件的尺寸超出的文本。</span><span class="sxs-lookup"><span data-stu-id="85937-367">This allows the user to scroll through the text that extends beyond the dimensions of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85937-368">因为的默认值<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>属性是`false`的默认大小<xref:System.Windows.Forms.TextBox>将会根据字体大小，即使您调整<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="85937-368">Because the default value of the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`, the default size of a <xref:System.Windows.Forms.TextBox> will be in accordance with the font size even if you resize the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="85937-369">若要获取的一致大小你<xref:System.Windows.Forms.TextBox>，将其<xref:System.Windows.Forms.TextBox.Multiline%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="85937-369">To get a consistent size for your <xref:System.Windows.Forms.TextBox>, set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85937-370">在日语操作系统，如果<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>属性设置为`true`，则设置<xref:System.Windows.Forms.TextBox.PasswordChar%2A>属性将显示的文本密码，从而危及系统安全。</span><span class="sxs-lookup"><span data-stu-id="85937-370">On Japanese operating systems, if the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true`, setting the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property will display the text of the password, thus compromising system security.</span></span> <span data-ttu-id="85937-371">因此，在日语操作系统上设置<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>属性`false`如果你设置<xref:System.Windows.Forms.TextBox.PasswordChar%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="85937-371">Therefore, on Japanese operating systems, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `false` if you set the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85937-372">此属性设置为`false`默认情况下，所有派生类中，除<xref:System.Windows.Forms.RichTextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="85937-372">This property is set to `false` by default for all derived classes, with the exception of the <xref:System.Windows.Forms.RichTextBox> control.</span></span>  
  
 <span data-ttu-id="85937-373">有关<xref:System.Windows.Forms.RichTextBox>控件，<xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType>属性会影响是否控件将自动调整大小，，如下所示：</span><span class="sxs-lookup"><span data-stu-id="85937-373">For a <xref:System.Windows.Forms.RichTextBox> control, the <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> property affects whether or not the control will automatically resize, as follows:</span></span>  
  
-   <span data-ttu-id="85937-374">如果<xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType>设置为`true`和<xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType>设置为`true`，<xref:System.Windows.Forms.RichTextBox>不会自动调整大小。</span><span class="sxs-lookup"><span data-stu-id="85937-374">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `true`, <xref:System.Windows.Forms.RichTextBox> will not automatically resize.</span></span>  
  
-   <span data-ttu-id="85937-375">如果<xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType>设置为`true`和<xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType>设置为`false`，<xref:System.Windows.Forms.RichTextBox>将自动调整大小。</span><span class="sxs-lookup"><span data-stu-id="85937-375">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `false`, <xref:System.Windows.Forms.RichTextBox> will automatically resize.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-376">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类中，以创建多行<xref:System.Windows.Forms.TextBox>带垂直滚动条的控件。</span><span class="sxs-lookup"><span data-stu-id="85937-376">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="85937-377">此示例还使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>属性，以使多行文本框控件可用于创建文本文档。</span><span class="sxs-lookup"><span data-stu-id="85937-377">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.WordWrap" />
        <altmember cref="P:System.Windows.Forms.TextBox.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="MultilineChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultilineChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultilineChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultilineChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultilineChanged;" />
      <MemberSignature Language="F#" Value="member this.MultilineChanged : EventHandler " Usage="member this.MultilineChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-378">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-378">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-379">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="85937-379">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-380">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="85937-380">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="85937-381">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.TextBoxBase.MultilineChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-381">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span> <span data-ttu-id="85937-382">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="85937-382">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="85937-383">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="85937-383">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="85937-384">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<xref:System.Windows.Forms.TextBoxBase>，如<xref:System.Windows.Forms.TextBox>或<xref:System.Windows.Forms.TextBoxBase>。</span><span class="sxs-lookup"><span data-stu-id="85937-384">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="85937-385">然后将其命名实例`TextBoxBase1`并确保与事件处理程序<xref:System.Windows.Forms.TextBoxBase.MultilineChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-385">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#247](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#247)]
 [!code-vb[System.Windows.Forms.EventExamples#247](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#247)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="OnAcceptsTabChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAcceptsTabChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAcceptsTabChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAcceptsTabChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAcceptsTabChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAcceptsTabChanged : EventArgs -&gt; unit&#xA;override this.OnAcceptsTabChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnAcceptsTabChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="85937-386">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-386">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-387">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-387">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-388">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="85937-388">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="85937-389">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="85937-389">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="85937-390"><xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="85937-390">The <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="85937-391">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="85937-391">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="85937-392">
            <para>在重写<see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-392">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnBorderStyleChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="85937-393">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-393">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-394">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-394">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-395">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="85937-395">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="85937-396">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="85937-396">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="85937-397"><xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="85937-397">The <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="85937-398">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="85937-398">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="85937-399">
            <para>在重写<see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-399">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="85937-400">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-400">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-401">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-401">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="textBoxBase.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="85937-402">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-402">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-403">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-403">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="textBoxBase.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="85937-404">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-404">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-405">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-405">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHideSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHideSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHideSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHideSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHideSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHideSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnHideSelectionChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnHideSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="85937-406">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-406">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-407">Raise the <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-407">Raise the <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-408">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="85937-408">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="85937-409">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="85937-409">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="85937-410"><xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="85937-410">The <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="85937-411">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="85937-411">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="85937-412">
            <para>在重写<see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-412">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnModifiedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModifiedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifiedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifiedChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifiedChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModifiedChanged : EventArgs -&gt; unit&#xA;override this.OnModifiedChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnModifiedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="85937-413">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-413">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-414">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-414">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-415">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="85937-415">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="85937-416">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="85937-416">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="85937-417"><xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="85937-417">The <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="85937-418">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="85937-418">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="85937-419">
            <para>在重写<see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-419">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="textBoxBase.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">
          <span data-ttu-id="85937-420">The event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-420">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-421">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-421">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMultilineChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultilineChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultilineChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMultilineChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMultilineChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMultilineChanged : EventArgs -&gt; unit&#xA;override this.OnMultilineChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnMultilineChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="85937-422">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-422">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-423">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-423">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-424">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="85937-424">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="85937-425">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="85937-425">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="85937-426"><xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="85937-426">The <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="85937-427">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="85937-427">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="85937-428">
            <para>在重写<see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-428">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected override void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaddingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaddingChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnPaddingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="85937-429">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-429">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-430">This method is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-430">This method is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-431">此方法与此类无关。</span><span class="sxs-lookup"><span data-stu-id="85937-431">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : EventArgs -&gt; unit&#xA;override this.OnReadOnlyChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnReadOnlyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="85937-432">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-432">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-433">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-433">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-434">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="85937-434">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="85937-435">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="85937-435">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="85937-436"><xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="85937-436">The <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="85937-437">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="85937-437">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="85937-438">
            <para>在重写<see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-438">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="85937-439">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-439">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-440">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-440">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.TextBoxBase.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-441">This property is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-441">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-442">一个 <see cref="T:System.Windows.Forms.Padding" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-442">A <see cref="T:System.Windows.Forms.Padding" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-443">此属性与此类无关。</span><span class="sxs-lookup"><span data-stu-id="85937-443">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-444">This event is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-444">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-445">此事件与此类无关。</span><span class="sxs-lookup"><span data-stu-id="85937-445">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-446">Occurs when the control is redrawn.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-446">Occurs when the control is redrawn.</span>
          </span>
          <span data-ttu-id="85937-447">This event is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-447">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-448">此事件与此类无关。</span><span class="sxs-lookup"><span data-stu-id="85937-448">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="member this.Paste : unit -&gt; unit" Usage="textBoxBase.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85937-449">Replaces the current selection in the text box with the contents of the **Clipboard**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-449">Replaces the current selection in the text box with the contents of the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-450"><xref:System.Windows.Forms.TextBoxBase.Paste%2A>方法仅将文本粘贴到控件中当前存储文本如果**剪贴板**。</span><span class="sxs-lookup"><span data-stu-id="85937-450">The <xref:System.Windows.Forms.TextBoxBase.Paste%2A> method will only paste text into the control if text is currently stored in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-451">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类。</span><span class="sxs-lookup"><span data-stu-id="85937-451">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="85937-452">它提供了<xref:System.Windows.Forms.MenuItem.Click>事件处理程序<xref:System.Windows.Forms.MenuItem>对象执行剪切、 复制、 粘贴和撤消操作。</span><span class="sxs-lookup"><span data-stu-id="85937-452">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="85937-453">此示例需要<xref:System.Windows.Forms.TextBox>控件名为`textBox1`已创建。</span><span class="sxs-lookup"><span data-stu-id="85937-453">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="85937-454">用于读取 * * 剪贴板 * *。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-454">for reading from the **Clipboard**.</span>
          </span>
          <span data-ttu-id="85937-455">关联的枚举：<see langword="AllClipboard" />值<see cref="T:System.Security.Permissions.UIPermissionClipboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-455">Associated enumeration: the <see langword="AllClipboard" /> value of <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredHeight : int" Usage="System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-456">Gets the preferred height for a text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-456">Gets the preferred height for a text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-457">文本框中的首选的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-457">The preferred height of a text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-458">此属性返回的大小取决于文本框中的字体高度和边框样式。</span><span class="sxs-lookup"><span data-stu-id="85937-458">The size returned by this property is based on the font height and border style of the text box.</span></span> <span data-ttu-id="85937-459">此属性可用于确定适当的大小的文本框中，以确保正确控件中显示文本。</span><span class="sxs-lookup"><span data-stu-id="85937-459">You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control.</span></span> <span data-ttu-id="85937-460">此属性返回的值是以像素为单位。</span><span class="sxs-lookup"><span data-stu-id="85937-460">The value returned by this property is in pixels.</span></span>  
  
 <span data-ttu-id="85937-461">值<xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A>表示文本框中必须具备而无需剪辑上的上方或下方的文本显示单个文本行的最小高度。</span><span class="sxs-lookup"><span data-stu-id="85937-461">The value of <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom.</span></span> <span data-ttu-id="85937-462">此值是相同是否<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>属性设置为`true`或`false`。</span><span class="sxs-lookup"><span data-stu-id="85937-462">This value is the same whether the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true` or `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="85937-463">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-463">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="85937-464">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-464">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-465">Processes a command key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-465">Processes a command key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85937-466">
            <see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-466">
              <see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="85937-467">用于操作与非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-467">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="85937-468">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-468">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="85937-469">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-469">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-470">Processes a dialog key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-470">Processes a dialog key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85937-471">
            <see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-471">
              <see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-472">Gets or sets a value indicating whether text in the text box is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-472">Gets or sets a value indicating whether text in the text box is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-473">
            <see langword="true" /> 如果文本框中是只读的;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-473">
              <see langword="true" /> if the text box is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="85937-474">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-474">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-475">当此属性设置为`true`，不能在运行时用户更改控件的内容。</span><span class="sxs-lookup"><span data-stu-id="85937-475">When this property is set to `true`, the contents of the control cannot be changed by the user at runtime.</span></span> <span data-ttu-id="85937-476">此属性设置为`true`，仍可以设置的值<xref:System.Windows.Forms.TextBoxBase.Text%2A>在代码中的属性。</span><span class="sxs-lookup"><span data-stu-id="85937-476">With this property set to `true`, you can still set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property in code.</span></span> <span data-ttu-id="85937-477">你可以使用此功能，而不是禁用控件<xref:System.Windows.Forms.Control.Enabled%2A>属性，以允许要复制的内容和工具提示显示。</span><span class="sxs-lookup"><span data-stu-id="85937-477">You can use this feature instead of disabling the control with the <xref:System.Windows.Forms.Control.Enabled%2A> property to allow the contents to be copied and ToolTips to be shown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChanged : EventHandler " Usage="member this.ReadOnlyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-478">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-478">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-479">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="85937-479">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-480">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="85937-480">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="85937-481">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-481">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span> <span data-ttu-id="85937-482">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="85937-482">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="85937-483">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="85937-483">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="85937-484">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<xref:System.Windows.Forms.TextBoxBase>，如<xref:System.Windows.Forms.TextBox>或<xref:System.Windows.Forms.TextBoxBase>。</span><span class="sxs-lookup"><span data-stu-id="85937-484">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="85937-485">然后将其命名实例`TextBoxBase1`并确保与事件处理程序<xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-485">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#248](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#248)]
 [!code-vb[System.Windows.Forms.EventExamples#248](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#248)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToCaret">
      <MemberSignature Language="C#" Value="public void ScrollToCaret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCaret() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ScrollToCaret" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToCaret ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToCaret();" />
      <MemberSignature Language="F#" Value="member this.ScrollToCaret : unit -&gt; unit" Usage="textBoxBase.ScrollToCaret " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85937-486">Scrolls the contents of the control to the current caret position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-486">Scrolls the contents of the control to the current caret position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-487">此方法可滚动控件的内容，直到将脱字号插入控件的可见区域内。</span><span class="sxs-lookup"><span data-stu-id="85937-487">This method enables you to scroll the contents of the control until the caret is within the visible region of the control.</span></span> <span data-ttu-id="85937-488">如果脱字号位于下方的控件的可见区域<xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A>方法将滚动控件的内容，直到插入符号可见底部的控件。</span><span class="sxs-lookup"><span data-stu-id="85937-488">If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control.</span></span> <span data-ttu-id="85937-489">如果脱字号位于控件的可见区域的上方，此方法将滚动控件的内容，直到插入符号可见控件顶部。</span><span class="sxs-lookup"><span data-stu-id="85937-489">If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control.</span></span> <span data-ttu-id="85937-490">可以使用此方法在多行文本框中，以确保当前文本入口点是该控件的可见区域内。</span><span class="sxs-lookup"><span data-stu-id="85937-490">You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85937-491">如果该控件没有焦点或已在控件的可见区域中放置插入符号，则此方法无效。</span><span class="sxs-lookup"><span data-stu-id="85937-491">This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-492">下面的代码示例演示如何使用<xref:System.Windows.Forms.Keys>枚举和<xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A>方法以确保文本插入点，由插入符号，表示始终屏幕上可见后按 ENTER 键。</span><span class="sxs-lookup"><span data-stu-id="85937-492">The following code example demonstrates how to use the <xref:System.Windows.Forms.Keys> enumeration and the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed.</span></span> <span data-ttu-id="85937-493">若要运行该示例，请将以下代码粘贴在窗体包含<xref:System.Windows.Forms.TextBox>控件称为`TextBox1`和<xref:System.Windows.Forms.RichTextBox>控件称为`RichTextBox1`。</span><span class="sxs-lookup"><span data-stu-id="85937-493">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called `TextBox1` and a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`.</span></span> <span data-ttu-id="85937-494">此示例需要已经与相关联的事件处理方法<xref:System.Windows.Forms.Control.KeyDown>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-494">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.Control.KeyDown> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="override this.Select : int * int -&gt; unit" Usage="textBoxBase.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="85937-495">The position of the first character in the current text selection within the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-495">The position of the first character in the current text selection within the text box.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="85937-496">The number of characters to select.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-496">The number of characters to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-497">Selects a range of text in the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-497">Selects a range of text in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-498">如果你想要设置为控件的文本中的第一个字符的起始位置，设置`start`参数设为 0。</span><span class="sxs-lookup"><span data-stu-id="85937-498">If you want to set the start position to the first character in the control's text, set the `start` parameter to 0.</span></span> <span data-ttu-id="85937-499">你可以使用此方法以选择子字符串的文本，例如，当整个控件的文本搜索和替换信息。</span><span class="sxs-lookup"><span data-stu-id="85937-499">You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85937-500">你可以以编程方式移动插入符号在文本框内通过设置`start`到想要移动到设置脱字号的文本框内的位置参数`length`为零 (0) 值的参数。</span><span class="sxs-lookup"><span data-stu-id="85937-500">You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0).</span></span> <span data-ttu-id="85937-501">文本框中必须具有顺序情况下，为要移动插入符号的焦点。</span><span class="sxs-lookup"><span data-stu-id="85937-501">The text box must have focus in order for the caret to be moved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85937-502">如果不带任何参数调用此方法，则使用一种替代方法。</span><span class="sxs-lookup"><span data-stu-id="85937-502">If this method is called without any parameters, an alternative method is used.</span></span> <span data-ttu-id="85937-503">此备用方法继承自<xref:System.Windows.Forms.Control>类。</span><span class="sxs-lookup"><span data-stu-id="85937-503">This alternative method inherits from the <xref:System.Windows.Forms.Control> class.</span></span> <span data-ttu-id="85937-504">调用时，它将输入的焦点设置到控件，并选择控件的内容。</span><span class="sxs-lookup"><span data-stu-id="85937-504">When called, it sets the input focus to the control and selects the contents of the control.</span></span> <span data-ttu-id="85937-505">有关更多信息，请参见 <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="85937-505">For more information, see the <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-506">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类中，以搜索单词"fox"的实例控件的内容。</span><span class="sxs-lookup"><span data-stu-id="85937-506">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to search the contents of the control for the instance of the word "fox".</span></span> <span data-ttu-id="85937-507">如果找到，该代码选择单词在控件中使用<xref:System.Windows.Forms.TextBoxBase.Select%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="85937-507">If found, the code selects the word in the control using the <xref:System.Windows.Forms.TextBoxBase.Select%2A> method.</span></span> <span data-ttu-id="85937-508">此示例需要<xref:System.Windows.Forms.TextBox>名为`textBox1`已创建并将其<xref:System.Windows.Forms.TextBoxBase.Text%2A>属性包含句子"The quick brown fox 将跳过只懒狗中"。</span><span class="sxs-lookup"><span data-stu-id="85937-508">This example requires that a <xref:System.Windows.Forms.TextBox> named `textBox1` has been created and its <xref:System.Windows.Forms.TextBoxBase.Text%2A> property contains the sentence "The quick brown fox jumps over the lazy dog."</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Select Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Select Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="85937-509">The value of the <paramref name="start" /> parameter is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-509">The value of the <paramref name="start" /> parameter is less than zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.SelectAll" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="textBoxBase.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85937-510">Selects all text in the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-510">Selects all text in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-511">此方法，可选择控件中的所有文本。</span><span class="sxs-lookup"><span data-stu-id="85937-511">This method enables you to select all text within the control.</span></span> <span data-ttu-id="85937-512">你可以结合使用此方法<xref:System.Windows.Forms.TextBoxBase.Cut%2A>方法，需要在控件中，控件的整个内容中剪切并粘贴到选择的文本**剪贴板**。</span><span class="sxs-lookup"><span data-stu-id="85937-512">You can use this method in conjunction with the <xref:System.Windows.Forms.TextBoxBase.Cut%2A> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-513">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类中，以确定是否控件中选定任何文本。</span><span class="sxs-lookup"><span data-stu-id="85937-513">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to determine if any text is selected in the control.</span></span> <span data-ttu-id="85937-514">如果未选择文本，向发起呼叫<xref:System.Windows.Forms.TextBoxBase.SelectAll%2A>方法，然后才能将该控件的内容复制**剪贴板**。</span><span class="sxs-lookup"><span data-stu-id="85937-514">If no text is selected, a call is made to the <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> method before copying the contents of the control to the **Clipboard**.</span></span> <span data-ttu-id="85937-515">此示例需要<xref:System.Windows.Forms.TextBox>已创建命名`textBox1`。</span><span class="sxs-lookup"><span data-stu-id="85937-515">This example requires that a <xref:System.Windows.Forms.TextBox> has been created named `textBox1`.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public virtual string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-516">Gets or sets a value indicating the currently selected text in the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-516">Gets or sets a value indicating the currently selected text in the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-517">表示文本框中当前选定文本的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-517">A string that represents the currently selected text in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-518">可以将文本分配给此属性，以更改在文本框中当前选定的文本。</span><span class="sxs-lookup"><span data-stu-id="85937-518">You can assign text to this property to change the text currently selected in the text box.</span></span> <span data-ttu-id="85937-519">如果在文本框中当前不选定任何文本，此属性将返回一个零长度字符串。</span><span class="sxs-lookup"><span data-stu-id="85937-519">If no text is currently selected in the text box, this property returns a zero-length string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-520">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类。</span><span class="sxs-lookup"><span data-stu-id="85937-520">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="85937-521">它提供了<xref:System.Windows.Forms.MenuItem.Click>事件处理程序<xref:System.Windows.Forms.MenuItem>对象执行剪切、 复制、 粘贴和撤消操作。</span><span class="sxs-lookup"><span data-stu-id="85937-521">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="85937-522">此示例需要<xref:System.Windows.Forms.TextBox>控件名为`textBox1`已创建。</span><span class="sxs-lookup"><span data-stu-id="85937-522">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public virtual int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-523">Gets or sets the number of characters selected in the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-523">Gets or sets the number of characters selected in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-524">在文本框中选定的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-524">The number of characters selected in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-525">可以使用此属性以确定是否任何字符当前在所选文本执行操作前选择文本框控件中。</span><span class="sxs-lookup"><span data-stu-id="85937-525">You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.</span></span> <span data-ttu-id="85937-526">时的值<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>属性设置为一个值大于控件的值的文本内的字符数，<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>属性设置为的值减控件中的文本的整个长度<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>属性 (如果为指定任何值<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>属性)。</span><span class="sxs-lookup"><span data-stu-id="85937-526">When the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85937-527">你可以以编程方式移动插入符号在文本框内通过设置<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>到想要移动到设置脱字号的文本框内的位置<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>属性的值为零 (0)。</span><span class="sxs-lookup"><span data-stu-id="85937-527">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span> <span data-ttu-id="85937-528">文本框中必须具有顺序情况下，为要移动插入符号的焦点。</span><span class="sxs-lookup"><span data-stu-id="85937-528">The text box must have focus in order for the caret to be moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-529">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类。</span><span class="sxs-lookup"><span data-stu-id="85937-529">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="85937-530">它提供了<xref:System.Windows.Forms.MenuItem.Click>事件处理程序<xref:System.Windows.Forms.MenuItem>对象执行剪切、 复制、 粘贴和撤消操作。</span><span class="sxs-lookup"><span data-stu-id="85937-530">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="85937-531">此示例需要<xref:System.Windows.Forms.TextBox>控件名为`textBox1`已创建。</span><span class="sxs-lookup"><span data-stu-id="85937-531">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="85937-532">The assigned value is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-532">The assigned value is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-533">Gets or sets the starting point of text selected in the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-533">Gets or sets the starting point of text selected in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-534">在文本框中选择的文本的起始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-534">The starting position of text selected in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-535">如果控件中不选择任何文本，则此属性指示的插入点或插入符号，新的文本。</span><span class="sxs-lookup"><span data-stu-id="85937-535">If no text is selected in the control, this property indicates the insertion point, or caret, for new text.</span></span> <span data-ttu-id="85937-536">如果将此属性设置为控件中文本的长度超出位置，则将最后一个字符后放置在选择开始位置。</span><span class="sxs-lookup"><span data-stu-id="85937-536">If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character.</span></span> <span data-ttu-id="85937-537">在文本框控件中选定文本，更改此属性可能会降低的值<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="85937-537">When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span> <span data-ttu-id="85937-538">如果位置之后控件中的剩余文本由<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>属性小于的值<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>属性、 的值<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>属性会自动减小。</span><span class="sxs-lookup"><span data-stu-id="85937-538">If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is automatically decreased.</span></span> <span data-ttu-id="85937-539">值<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>属性永远不会导致增加<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="85937-539">The value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span>  
  
 <span data-ttu-id="85937-540">你可以以编程方式移动所选内容在文本框内通过设置<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>和<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="85937-540">You can programmatically move the selection within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> and the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> properties.</span></span>  
  
 <span data-ttu-id="85937-541">你可以以编程方式移动插入符号在文本框内通过设置<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>到想要移动到设置脱字号的文本框内的位置<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>属性的值为零 (0)。</span><span class="sxs-lookup"><span data-stu-id="85937-541">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span>  
  
 <span data-ttu-id="85937-542"><xref:System.Windows.Forms.TextBox>必须具有焦点的选定内容或脱字号移动。</span><span class="sxs-lookup"><span data-stu-id="85937-542">The <xref:System.Windows.Forms.TextBox> must have focus in order for the selection or the caret to be moved.</span></span> <span data-ttu-id="85937-543">你可以设置<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>属性<xref:System.Windows.Forms.TextBox>即<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>通过给予<xref:System.Windows.Forms.Control.Focus%2A>第一个。</span><span class="sxs-lookup"><span data-stu-id="85937-543">You can set the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-544">**示例 1**</span><span class="sxs-lookup"><span data-stu-id="85937-544">**Example 1**</span></span>  
  
 <span data-ttu-id="85937-545">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类。</span><span class="sxs-lookup"><span data-stu-id="85937-545">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="85937-546">它提供了<xref:System.Windows.Forms.MenuItem.Click>事件处理程序<xref:System.Windows.Forms.MenuItem>对象执行剪切、 复制、 粘贴和撤消操作。</span><span class="sxs-lookup"><span data-stu-id="85937-546">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="85937-547">此示例需要<xref:System.Windows.Forms.TextBox>控件名为`textBox1`已创建。</span><span class="sxs-lookup"><span data-stu-id="85937-547">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 <span data-ttu-id="85937-548">**示例 2**</span><span class="sxs-lookup"><span data-stu-id="85937-548">**Example 2**</span></span>  
  
 <span data-ttu-id="85937-549">下面的示例设置<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>属性<xref:System.Windows.Forms.TextBox>即<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>通过给予<xref:System.Windows.Forms.Control.Focus%2A>第一个。</span><span class="sxs-lookup"><span data-stu-id="85937-549">The following example sets the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
 [!code-csharp[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="85937-550">The assigned value is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-550">The assigned value is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="textBoxBase.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="85937-551">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-551">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="85937-552">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-552">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="85937-553">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-553">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="85937-554">Not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-554">Not used.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="85937-555">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-555">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-556">Sets the specified bounds of the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-556">Sets the specified bounds of the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-557"><xref:System.Windows.Forms.TextBoxBase>控件使用<xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A>属性来设置边界，如果<xref:System.Windows.Forms.TextBoxBase.AutoSize%2A>属性是`true`和<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>属性是`false`。</span><span class="sxs-lookup"><span data-stu-id="85937-557">The <xref:System.Windows.Forms.TextBoxBase> control uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to set the bounds if the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property is `true` and the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="85937-558">通常情况下，对应于中未包括的边界的参数`specified`参数将传递使用其当前值。</span><span class="sxs-lookup"><span data-stu-id="85937-558">Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values.</span></span> <span data-ttu-id="85937-559">例如， <xref:System.Windows.Forms.Control.Height%2A>， <xref:System.Windows.Forms.Control.Width%2A>，或<xref:System.Drawing.Point.X%2A>或<xref:System.Drawing.Point.Y%2A>属性<xref:System.Windows.Forms.Control.Location%2A>可以随对控件的当前实例的引用传递属性。</span><span class="sxs-lookup"><span data-stu-id="85937-559">For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="85937-560">但是遵守并应用于控件中传递的所有值。</span><span class="sxs-lookup"><span data-stu-id="85937-560">However all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="85937-561">`specified`参数表示元素的控件<xref:System.Windows.Forms.Control.Bounds%2A>更改你的应用程序。</span><span class="sxs-lookup"><span data-stu-id="85937-561">The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="85937-562">例如，如果你更改<xref:System.Windows.Forms.Control.Size%2A>的控件，`specified`参数值是`Size`值<xref:System.Windows.Forms.BoundsSpecified>。</span><span class="sxs-lookup"><span data-stu-id="85937-562">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span> <span data-ttu-id="85937-563">但是，如果<xref:System.Windows.Forms.Control.Size%2A>在响应中调整<xref:System.Windows.Forms.Control.Dock%2A>要设置属性`specified`参数值是`None`值<xref:System.Windows.Forms.BoundsSpecified>。</span><span class="sxs-lookup"><span data-stu-id="85937-563">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="85937-564">
            <para>在重写<see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />方法，以强制要更改的控件的边界。派生的类可以添加到的大小限制<see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-564">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change. Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShortcutsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool ShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShortcutsEnabled : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-565">Gets or sets a value indicating whether the defined shortcuts are enabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-565">Gets or sets a value indicating whether the defined shortcuts are enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-566">
            <see langword="true" /> 若要启用快捷方式，否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-566">
              <see langword="true" /> to enable the shortcuts; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-567">使用<xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A>属性来启用或禁用以下快捷组合键和控件的快捷菜单：</span><span class="sxs-lookup"><span data-stu-id="85937-567">Use the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> property to enable or disable the following shortcut key combinations and the control’s shortcut menu:</span></span>  
  
-   <span data-ttu-id="85937-568">Ctrl+Z</span><span class="sxs-lookup"><span data-stu-id="85937-568">CTRL+Z</span></span>  
  
-   <span data-ttu-id="85937-569">Ctrl+E</span><span class="sxs-lookup"><span data-stu-id="85937-569">CTRL+E</span></span>  
  
-   <span data-ttu-id="85937-570">Ctrl+C</span><span class="sxs-lookup"><span data-stu-id="85937-570">CTRL+C</span></span>  
  
-   <span data-ttu-id="85937-571">Ctrl+Y</span><span class="sxs-lookup"><span data-stu-id="85937-571">CTRL+Y</span></span>  
  
-   <span data-ttu-id="85937-572">Ctrl+X</span><span class="sxs-lookup"><span data-stu-id="85937-572">CTRL+X</span></span>  
  
-   <span data-ttu-id="85937-573">Ctrl+Backspace</span><span class="sxs-lookup"><span data-stu-id="85937-573">CTRL+BACKSPACE</span></span>  
  
-   <span data-ttu-id="85937-574">Ctrl+V</span><span class="sxs-lookup"><span data-stu-id="85937-574">CTRL+V</span></span>  
  
-   <span data-ttu-id="85937-575">Ctrl+Delete</span><span class="sxs-lookup"><span data-stu-id="85937-575">CTRL+DELETE</span></span>  
  
-   <span data-ttu-id="85937-576">Ctrl+A</span><span class="sxs-lookup"><span data-stu-id="85937-576">CTRL+A</span></span>  
  
-   <span data-ttu-id="85937-577">SHIFT + DELETE</span><span class="sxs-lookup"><span data-stu-id="85937-577">SHIFT+DELETE</span></span>  
  
-   <span data-ttu-id="85937-578">Ctrl+L</span><span class="sxs-lookup"><span data-stu-id="85937-578">CTRL+L</span></span>  
  
-   <span data-ttu-id="85937-579">SHIFT + INSERT</span><span class="sxs-lookup"><span data-stu-id="85937-579">SHIFT+INSERT</span></span>  
  
-   <span data-ttu-id="85937-580">Ctrl+R</span><span class="sxs-lookup"><span data-stu-id="85937-580">CTRL+R</span></span>  
  
 <span data-ttu-id="85937-581">你可以重写此属性指定其他键盘快捷方式。</span><span class="sxs-lookup"><span data-stu-id="85937-581">You can override this property to specify other shortcut keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TextBoxBase.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-582">Gets or sets the current text in the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-582">Gets or sets the current text in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-583">在控件中显示的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-583">The text displayed in the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-584">若要在文本框中显示多行文本，请设置<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="85937-584">To display multiple lines of text in a text box, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`.</span></span> <span data-ttu-id="85937-585">若要读取或设置多行文本框的文本，请使用<xref:System.Windows.Forms.TextBoxBase.Lines%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="85937-585">To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property.</span></span> <span data-ttu-id="85937-586">可输入的文本量<xref:System.Windows.Forms.RichTextBox>控件仅受可用系统内存。</span><span class="sxs-lookup"><span data-stu-id="85937-586">The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-587">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类中，以创建多行<xref:System.Windows.Forms.TextBox>带垂直滚动条的控件。</span><span class="sxs-lookup"><span data-stu-id="85937-587">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="85937-588">此示例还使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>属性，以使多行文本框控件可用于创建文本文档。</span><span class="sxs-lookup"><span data-stu-id="85937-588">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public virtual int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TextLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TextLength : int" Usage="System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-589">Gets the length of text in the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-589">Gets the length of text in the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-590">控件文本中所含的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-590">The number of characters contained in the text of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-591">可以使用此属性来确定任务，例如搜索的文本在控件文本内的特定字符串的字符串中的字符数需要的总字符数的知识的位置。</span><span class="sxs-lookup"><span data-stu-id="85937-591">You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-592">下面的代码示例演示如何使用<xref:System.Windows.Forms.TextBoxBase.AppendText%2A>方法和<xref:System.Windows.Forms.TextBoxBase.TextLength%2A>属性将文本从一个复制<xref:System.Windows.Forms.TextBox>到另一个。</span><span class="sxs-lookup"><span data-stu-id="85937-592">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="85937-593">此示例要求将两个<xref:System.Windows.Forms.TextBox>控件名为，`textBox1`和`textBox2`，已添加到窗体，`textBox1`具有文本分配给其<xref:System.Windows.Forms.Control.Text%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="85937-593">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="textBoxBase.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85937-594">Returns a string that represents the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-594">Returns a string that represents the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85937-595">A string that represents the current <see cref="T:System.Windows.Forms.TextBoxBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-595">A string that represents the current <see cref="T:System.Windows.Forms.TextBoxBase" />.</span>
          </span>
          <span data-ttu-id="85937-596">The string includes the type and the <see cref="T:System.Windows.Forms.TextBoxBase" /> property of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-596">The string includes the type and the <see cref="T:System.Windows.Forms.TextBoxBase" /> property of the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; unit" Usage="textBoxBase.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85937-597">Undoes the last edit operation in the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-597">Undoes the last edit operation in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-598">此方法将撤消上次**剪贴板**或文本更改当文本框控件中执行的操作<xref:System.Windows.Forms.TextBoxBase.CanUndo%2A>属性返回`true`。</span><span class="sxs-lookup"><span data-stu-id="85937-598">This method will undo the last **Clipboard** or text change operation performed in the text box control if the <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> property returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85937-599"><xref:System.Windows.Forms.TextBoxBase.Undo%2A>方法并不适用于<xref:System.Windows.Forms.Control.KeyPress>或<xref:System.Windows.Forms.Control.TextChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="85937-599">The <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-600">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类。</span><span class="sxs-lookup"><span data-stu-id="85937-600">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="85937-601">它提供了<xref:System.Windows.Forms.MenuItem.Click>事件处理程序<xref:System.Windows.Forms.MenuItem>对象执行剪切、 复制、 粘贴和撤消操作。</span><span class="sxs-lookup"><span data-stu-id="85937-601">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="85937-602">此示例需要<xref:System.Windows.Forms.TextBox>控件名为`textBox1`已创建。</span><span class="sxs-lookup"><span data-stu-id="85937-602">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="textBoxBase.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="85937-603">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-603">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-604">Processes Windows messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-604">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property WordWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WordWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WordWrap : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-605">Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-605">Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-606">
            <see langword="true" /> 如果在多行文本框控件中换;<see langword="false" />如果文本框控件自动滚动水平当用户输入超过控件的右边缘。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-606">
              <see langword="true" /> if the multiline text box control wraps words; <see langword="false" /> if the text box control automatically scrolls horizontally when the user types past the right edge of the control.</span>
          </span>
          <span data-ttu-id="85937-607">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-607">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-608">如果此属性设置为`true`，而不考虑不显示水平滚动条<xref:System.Windows.Forms.TextBox.ScrollBars%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="85937-608">If this property is set to `true`, horizontal scroll bars are not displayed regardless of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85937-609">在派生类中， <xref:System.Windows.Forms.TextBox>，控件中的文本将始终换行，而不考虑此属性的属性设置除非<xref:System.Windows.Forms.TextBox.TextAlign%2A>属性设置为`HorizontalAlignment.Left`。</span><span class="sxs-lookup"><span data-stu-id="85937-609">In the derived class, <xref:System.Windows.Forms.TextBox>, text within the control will always wrap regardless of the property setting of this property unless the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property is set to `HorizontalAlignment.Left`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85937-610">下面的代码示例使用<xref:System.Windows.Forms.TextBox>，派生类中，以创建多行<xref:System.Windows.Forms.TextBox>带垂直滚动条的控件。</span><span class="sxs-lookup"><span data-stu-id="85937-610">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="85937-611">此示例还使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>属性，以使多行文本框控件可用于创建文本文档。</span><span class="sxs-lookup"><span data-stu-id="85937-611">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>