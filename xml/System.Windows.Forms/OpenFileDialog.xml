<Type Name="OpenFileDialog" FullName="System.Windows.Forms.OpenFileDialog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ec5fcfe6fb60a6175da1090c2c78b8f4490dc97" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36517176" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OpenFileDialog : System.Windows.Forms.FileDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OpenFileDialog extends System.Windows.Forms.FileDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpenFileDialog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OpenFileDialog&#xA;Inherits FileDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenFileDialog sealed : System::Windows::Forms::FileDialog" />
  <TypeSignature Language="F#" Value="type OpenFileDialog = class&#xA;    inherit FileDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FileDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="99c2b-101">显示一个标准对话框，提示用户打开文件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="99c2b-101">Displays a standard dialog box that prompts the user to open a file.</span>
      </span>
      <span data-ttu-id="99c2b-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="99c2b-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99c2b-103">此类允许您检查文件是否存在，并将其打开。</span><span class="sxs-lookup"><span data-stu-id="99c2b-103">This class allows you to check whether a file exists and to open it.</span></span> <span data-ttu-id="99c2b-104"><xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>属性确定是否在对话框中显示只读复选框。</span><span class="sxs-lookup"><span data-stu-id="99c2b-104">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box.</span></span> <span data-ttu-id="99c2b-105"><xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>属性指示是否检查了只读复选框。</span><span class="sxs-lookup"><span data-stu-id="99c2b-105">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked.</span></span>  
  
 <span data-ttu-id="99c2b-106">大部分核心功能为此类位于<xref:System.Windows.Forms.FileDialog>类。</span><span class="sxs-lookup"><span data-stu-id="99c2b-106">Most of the core functionality for this class is found in the <xref:System.Windows.Forms.FileDialog> class.</span></span>  

<span data-ttu-id="99c2b-107">在从右到左操作系统系统中，设置包含窗体的<xref:System.Windows.Forms.Control.RightToLeft>属性<xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>本地化对话框的**文件名**，**打开**，和**取消**按钮。</span><span class="sxs-lookup"><span data-stu-id="99c2b-107">On a right-to-left operating system, setting the containing form's <xref:System.Windows.Forms.Control.RightToLeft> property to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> localizes the dialog's **File Name**, **Open**, and **Cancel** buttons.</span></span> <span data-ttu-id="99c2b-108">如果该属性未设置为<xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>，改为使用英文文本。</span><span class="sxs-lookup"><span data-stu-id="99c2b-108">If the property is not set to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, English text is used instead.</span></span>  

 <span data-ttu-id="99c2b-109">如果你想要使用户能够选择而不是文件的文件夹，请使用<xref:System.Windows.Forms.FolderBrowserDialog>相反。</span><span class="sxs-lookup"><span data-stu-id="99c2b-109">If you want to give the user the ability to select a folder instead of a file, use <xref:System.Windows.Forms.FolderBrowserDialog> instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99c2b-110">下面的代码示例创建<xref:System.Windows.Forms.OpenFileDialog>，设置多个属性以定义的文件扩展名筛选器和对话框行为，并显示对话框框中使用<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="99c2b-110">The following code example creates an <xref:System.Windows.Forms.OpenFileDialog>, sets several properties to define the file extension filter and dialog behavior, and displays the dialog box using the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="99c2b-111">该示例需要的窗体具有<xref:System.Windows.Forms.Button>放置在它并对引用<xref:System.IO>命名空间添加到它。</span><span class="sxs-lookup"><span data-stu-id="99c2b-111">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and a reference to the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FileDialog" />
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Windows.Forms.SaveFileDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="99c2b-112">初始化 <see cref="T:System.Windows.Forms.OpenFileDialog" /> 类的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-112">Initializes an instance of the <see cref="T:System.Windows.Forms.OpenFileDialog" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99c2b-113">这是默认的、 为编译器提供构造函数<xref:System.Windows.Forms.OpenFileDialog>类。</span><span class="sxs-lookup"><span data-stu-id="99c2b-113">This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.OpenFileDialog> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckFileExists">
      <MemberSignature Language="C#" Value="public override bool CheckFileExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckFileExists" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CheckFileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckFileExists { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckFileExists : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99c2b-114">获取或设置一个值，该值指示如果用户指定不存在的文件名，对话框是否显示警告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-114">Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99c2b-115">如果对话框在用户指定的文件名不存在时显示警告，则为 <see langword="true" />；反之，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-115">
              <see langword="true" /> if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="99c2b-116">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-116">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="Multiselect">
      <MemberSignature Language="C#" Value="public bool Multiselect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiselect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiselect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiselect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiselect : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99c2b-117">获取或设置一个值，该值指示对话框是否允许选择多个文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-117">Gets or sets a value indicating whether the dialog box allows multiple files to be selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99c2b-118">如果对话框允许同时选定多个文件，则为 <see langword="true" />；反之，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-118">
              <see langword="true" /> if the dialog box allows multiple files to be selected together or concurrently; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="99c2b-119">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-119">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99c2b-120">使用<xref:System.Windows.Forms.FileDialog.FileNames%2A>属性来访问的完整列表选择文件的名称。</span><span class="sxs-lookup"><span data-stu-id="99c2b-120">Use the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property to access the full list of selected file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99c2b-121">下面的代码示例允许用户选择多个映像，并将其显示在<xref:System.Windows.Forms.PictureBox>窗体上的控件。</span><span class="sxs-lookup"><span data-stu-id="99c2b-121">The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form.</span></span> <span data-ttu-id="99c2b-122">它演示如何初始化<xref:System.Windows.Forms.OpenFileDialog>，则设置<xref:System.Windows.Forms.FileDialog.Title%2A>和<xref:System.Windows.Forms.FileDialog.Filter%2A>属性，并允许用户选择多个文件，通过设置<xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A>属性为 true。</span><span class="sxs-lookup"><span data-stu-id="99c2b-122">It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true.</span></span> <span data-ttu-id="99c2b-123">此代码示例假定你的窗体已有<xref:System.Windows.Forms.OpenFileDialog>控件名为`openFileDialog1`、<xref:System.Windows.Forms.Button>名为`SelectFileButton`，和一个<xref:System.Windows.Forms.FlowLayoutPanel>名为`flowLayoutPanel1`。</span><span class="sxs-lookup"><span data-stu-id="99c2b-123">This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FileDialog.FileNames" />
        <altmember cref="P:System.Windows.Forms.FileDialog.Filter" />
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFile () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenFile();" />
      <MemberSignature Language="F#" Value="member this.OpenFile : unit -&gt; System.IO.Stream" Usage="openFileDialog.OpenFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="99c2b-124">打开用户选定的具有只读权限的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-124">Opens the file selected by the user, with read-only permission.</span>
          </span>
          <span data-ttu-id="99c2b-125">该文件由 <see cref="P:System.Windows.Forms.FileDialog.FileName" /> 属性指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-125">The file is specified by the <see cref="P:System.Windows.Forms.FileDialog.FileName" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="99c2b-126">指定用户所选定的只读文件的 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-126">A <see cref="T:System.IO.Stream" /> that specifies the read-only file selected by the user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99c2b-127"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>方法用于提供一个工具用于快速从对话框中打开的文件。</span><span class="sxs-lookup"><span data-stu-id="99c2b-127">The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box.</span></span> <span data-ttu-id="99c2b-128">在出于安全目的的只读模式下打开该文件。</span><span class="sxs-lookup"><span data-stu-id="99c2b-128">The file is opened in read-only mode for security purposes.</span></span> <span data-ttu-id="99c2b-129">若要在读/写模式下打开文件，必须使用另一种方法，如<xref:System.IO.FileStream>。</span><span class="sxs-lookup"><span data-stu-id="99c2b-129">To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99c2b-130">下面的代码示例演示如何使用 <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="99c2b-130">The following code example demonstrates how to use the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="99c2b-131">文件名为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-131">The file name is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileDialogPermission">
          <span data-ttu-id="99c2b-132">若要打开文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-132">to open a file.</span>
          </span>
          <span data-ttu-id="99c2b-133">关联枚举：<see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-133">Associated enumeration: <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChecked">
      <MemberSignature Language="C#" Value="public bool ReadOnlyChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyChecked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChecked : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99c2b-134">获取或设置一个值，该值指示是否选定只读复选框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-134">Gets or sets a value indicating whether the read-only check box is selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99c2b-135">如果选中了只读复选框，则为 <see langword="true" />；反之，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-135">
              <see langword="true" /> if the read-only check box is selected; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="99c2b-136">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-136">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99c2b-137"><xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>状态不会影响读/写模式，<xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType>使用打开的对话框中选定的文件。</span><span class="sxs-lookup"><span data-stu-id="99c2b-137">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> uses to open a file selected in the dialog box.</span></span> <span data-ttu-id="99c2b-138"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> 将始终在只读模式下打开的文件。</span><span class="sxs-lookup"><span data-stu-id="99c2b-138"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode.</span></span>  
  
 <span data-ttu-id="99c2b-139"><xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>属性必须设置之前，才能只读复选框，以显示在对话框中。</span><span class="sxs-lookup"><span data-stu-id="99c2b-139">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property must be set before in order for the read-only check box to appear in the dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99c2b-140">下面的代码示例演示如何将<xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="99c2b-140">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property.</span></span> <span data-ttu-id="99c2b-141">此示例显示<xref:System.Windows.Forms.OpenFileDialog>框<xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="99c2b-141">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="99c2b-142">如果用户单击该选项以便在只读模式下，打开文件<xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>属性计算结果为`true`，和<xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>方法用于打开文件。</span><span class="sxs-lookup"><span data-stu-id="99c2b-142">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property evaluates to `true`, and the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="99c2b-143">否则为<xref:System.IO.FileStream>类用于在读/写模式下打开该文件。</span><span class="sxs-lookup"><span data-stu-id="99c2b-143">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="openFileDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="99c2b-144">将所有属性重新设置为其默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-144">Resets all properties to their default values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileName">
      <MemberSignature Language="C#" Value="public string SafeFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SafeFileName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SafeFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileName : string" Usage="System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99c2b-145">获取对话框中所选文件的文件名和扩展名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-145">Gets the file name and extension for the file selected in the dialog box.</span>
          </span>
          <span data-ttu-id="99c2b-146">文件名不包含路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-146">The file name does not include the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99c2b-147">对话框中所选文件的文件名和扩展名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-147">The file name and extension for the file selected in the dialog box.</span>
          </span>
          <span data-ttu-id="99c2b-148">文件名不包含路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-148">The file name does not include the path.</span>
          </span>
          <span data-ttu-id="99c2b-149">默认值为一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-149">The default value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99c2b-150">（只需的文件名称和扩展名不含路径） 的安全文件名称可用来提高应用程序的安全性，因为它不公开路径信息。</span><span class="sxs-lookup"><span data-stu-id="99c2b-150">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="99c2b-151">此属性应为以受限信任运行的代码可以访问。</span><span class="sxs-lookup"><span data-stu-id="99c2b-151">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileNames">
      <MemberSignature Language="C#" Value="public string[] SafeFileNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SafeFileNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ SafeFileNames { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileNames : string[]" Usage="System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99c2b-152">获取对话框中所有选定文件的文件名和扩展名的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-152">Gets an array of file names and extensions for all the selected files in the dialog box.</span>
          </span>
          <span data-ttu-id="99c2b-153">文件名不包含路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-153">The file names do not include the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99c2b-154">对话框中所有选定文件的文件名和扩展名的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-154">An array of file names and extensions for all the selected files in the dialog box.</span>
          </span>
          <span data-ttu-id="99c2b-155">文件名不包含路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-155">The file names do not include the path.</span>
          </span>
          <span data-ttu-id="99c2b-156">如果未选择任何文件，则返回空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-156">If no files are selected, an empty array is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99c2b-157">（只需的文件名称和扩展名不含路径） 的安全文件名称可用来提高应用程序的安全性，因为它不公开路径信息。</span><span class="sxs-lookup"><span data-stu-id="99c2b-157">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="99c2b-158">此属性应为以受限信任运行的代码可以访问。</span><span class="sxs-lookup"><span data-stu-id="99c2b-158">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReadOnly">
      <MemberSignature Language="C#" Value="public bool ShowReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowReadOnly : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99c2b-159">获取或设置一个值，该值指示对话框是否包含只读复选框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-159">Gets or sets a value indicating whether the dialog box contains a read-only check box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99c2b-160">如果对话框包含只读复选框，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-160">
              <see langword="true" /> if the dialog box contains a read-only check box; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="99c2b-161">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99c2b-161">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99c2b-162">下面的代码示例演示如何将<xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="99c2b-162">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property.</span></span> <span data-ttu-id="99c2b-163">此示例显示<xref:System.Windows.Forms.OpenFileDialog>框<xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="99c2b-163">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="99c2b-164">如果用户单击该选项以便在只读模式下，打开文件<xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>方法用于打开文件。</span><span class="sxs-lookup"><span data-stu-id="99c2b-164">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="99c2b-165">否则为<xref:System.IO.FileStream>类用于在读/写模式下打开该文件。</span><span class="sxs-lookup"><span data-stu-id="99c2b-165">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
  </Members>
</Type>