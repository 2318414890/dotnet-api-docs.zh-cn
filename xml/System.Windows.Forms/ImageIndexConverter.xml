<Type Name="ImageIndexConverter" FullName="System.Windows.Forms.ImageIndexConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ff224ebe747ab34a4ab2f2a291c2a7f935f7d0be" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53497026" /></Metadata><TypeSignature Language="C#" Value="public class ImageIndexConverter : System.ComponentModel.Int32Converter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageIndexConverter extends System.ComponentModel.Int32Converter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ImageIndexConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageIndexConverter&#xA;Inherits Int32Converter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageIndexConverter : System::ComponentModel::Int32Converter" />
  <TypeSignature Language="F#" Value="type ImageIndexConverter = class&#xA;    inherit Int32Converter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Int32Converter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供在图像索引数据与字符串之间实现互相转换的类型转换器。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ImageIndexConverter>类用于将索引值的转换<xref:System.Windows.Forms.ImageList>到和从其他数据类型，通常<xref:System.String>。 有关类型转换器的详细信息，请参阅<xref:System.ComponentModel.TypeConverter>基类和[如何：实现类型转换器](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120))。  
  
> [!NOTE]
>  通常情况下，您并不直接创建的实例<xref:System.Windows.Forms.ImageIndexConverter>。 改为调用<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>方法的<xref:System.ComponentModel.TypeDescriptor>。 有关详细信息，请参阅中的示例<xref:System.ComponentModel.TypeConverter>基类。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageIndexConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageIndexConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.ImageIndexConverter" /> 类的实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，您并不直接创建的实例<xref:System.Windows.Forms.ImageIndexConverter>。 改为调用<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>方法的<xref:System.ComponentModel.TypeDescriptor>。 有关详细信息，请参阅中的示例<xref:System.ComponentModel.TypeConverter>基类。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="imageIndexConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
        <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" />，用于提供区域设置信息。</param>
        <param name="value">要转换的 <see cref="T:System.Object" />。</param>
        <summary>将指定的值对象转换为 32 位带符号整数对象。</summary>
        <returns>表示转换的 <paramref name="value" /> 的 <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类型转换器仅可以将转换的 32 位有符号的整数对象与字符串。  
  
 `context`可用于提取有关从调用此类型转换器的环境的附加信息。 这可能为 `null`，因此应总是对其进行检查。 同样，上下文对象上的属性也可能返回 `null`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">转换未能执行。</exception>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="imageIndexConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，它可用于提取有关从中调用此类型转换器的环境的附加信息。 此参数或其属性可以为 <see langword="null" />。</param>
        <param name="culture">提供区域设置信息的 <see cref="T:System.Globalization.CultureInfo" />。</param>
        <param name="value">要转换的对象，通常是表示为 <see cref="T:System.Int32" /> 的索引。</param>
        <param name="destinationType">要加你个对象转换为的类型，通常为 <see cref="T:System.String" />。</param>
        <summary>将指定对象转换为指定目标类型。</summary>
        <returns>表示转换的 <paramref name="value" /> 的 <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法的默认实现可以将表示为一个索引值只转换<xref:System.Int32>到<xref:System.String>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationType" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.NotSupportedException">未能将指定的 <paramref name="value" /> 转换为指定的 <paramref name="destinationType" />。</exception>
        <block subset="none" type="overrides"><para>重写此方法以提供您自己的转换功能。  
  
<paramref name="context" />参数可用于提取有关从调用此类型转换器的环境的附加信息。 这可能是<see langword="null" />，因此，应始终检查此返回值。 同样，上下文对象上的属性也可能返回 <see langword="null" />。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="imageIndexConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，它可用于提取有关从中调用此类型转换器的环境的附加信息。 此参数或其属性可以为 <see langword="null" />。</param>
        <summary>返回与指定的格式上下文关联的图像列表的标准索引值的集合。</summary>
        <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />，用于保存一组标准的有效索引值。 如果未找到任何图像列表，则此集合将包含值为 -1 的单个对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回与关联的图像列表索引值的集合<xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A?displayProperty=nameWithType>属性的`context`参数。 如果<xref:System.Windows.Forms.ImageList>找不到，则将有关此类列表搜索组件的父级。  
  
 通常<xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A>尝试使用之前，调用方法对<xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A>和<xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive" />
        <altmember cref="P:System.Windows.Forms.ImageIndexConverter.IncludeNoneAsStandardValue" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="imageIndexConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">格式化程序上下文。</param>
        <summary>确定从 <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" /> 方法返回的标准值列表是否为唯一列表。</summary>
        <returns>如果 <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" /> 方法返回有效值的独占列表，则为 <see langword="true" />；否则为 <see langword="false" />。 此实现始终返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果返回的列表<xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A>方法是独占的则其他任何值不都有效。 这是典型的枚举的数据类型。 如果该列表不是独占的则有其他有效的值的标准列表值之外<xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A>提供。  
  
 在此类型转换器中实现时，此方法始终返回`false`。  
  
 通常<xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A>尝试使用之前，调用方法对<xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A>和<xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="imageIndexConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，它可用于提取有关从中调用此类型转换器的环境的附加信息。 此参数或其属性可以为 <see langword="null" />。</param>
        <summary>确定此类型转换器是否支持可以从列表中选取的标准值集。</summary>
        <returns>如果 <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" /> 方法返回标准值集，则为 <see langword="true" />；否则为 <see langword="false" />。 始终返回 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类中实现<xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A>始终返回`true`由于此对象支持的图像，可以从列表中选取的一组标准的索引值。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
    <Member MemberName="IncludeNoneAsStandardValue">
      <MemberSignature Language="C#" Value="protected virtual bool IncludeNoneAsStandardValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeNoneAsStandardValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageIndexConverter.IncludeNoneAsStandardValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IncludeNoneAsStandardValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IncludeNoneAsStandardValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeNoneAsStandardValue : bool" Usage="System.Windows.Forms.ImageIndexConverter.IncludeNoneAsStandardValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see langword="none" /> 或 <see langword="null" /> 值在 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 集合中是否有效。</summary>
        <value>如果 <see langword="true" /> 或 <see langword="none" /> 在标准值集合中为有效值，则为 <see langword="null" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在中实现此类是始终返回`true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>