<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Timer.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5edf81ff72ec14a0a499608d1879749fafd6f668b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edf81ff72ec14a0a499608d1879749fafd6f668b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Timer">
          <source>Implements a timer that raises an event at user-defined intervals.</source>
          <target state="translated">实现按用户定义的时间间隔引发事件的计时器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Timer">
          <source>This timer is optimized for use in Windows Forms applications and must be used in a window.</source>
          <target state="translated">此计时器最宜用于 Windows 窗体应用程序中，并且必须在窗口中使用。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> is used to raise an event at user-defined intervals.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>用于在用户定义的时间间隔引发事件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</source>
          <target state="translated">此 Windows 计时器专为使用 UI 线程来执行处理的单线程方式的环境。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</source>
          <target state="translated">此过程要求用户代码有一个可用的用户界面消息泵，并始终从相同线程中，运行或到另一个线程的调用封送。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>When you use this timer, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event to perform a polling operation or to display a splash screen for a specified period of time.</source>
          <target state="translated">当你使用此计时器时，使用<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>事件以执行轮询操作也可为指定的时间段显示初始屏幕。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>Whenever the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> property is greater than zero, the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event is raised at intervals based on the <ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> property setting.</source>
          <target state="translated">每当<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>属性设置为<ph id="ph2">`true`</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph>属性是大于零，<ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>时间间隔基于引发事件<ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph>属性设置。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>This class provides methods to set the interval, and to start and stop the timer.</source>
          <target state="translated">此类提供方法设置的时间间隔，还可以启动和停止计时器。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</source>
          <target state="translated">Windows 窗体 Timer 组件是单线程的且最多 55 毫秒的准确性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>If you require a multithreaded timer with greater accuracy, use the <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> class in the <ph id="ph2">&lt;xref:System.Timers&gt;</ph> namespace.</source>
          <target state="translated">如果需要更准确地多线程的计时器，使用<ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph>类<ph id="ph2">&lt;xref:System.Timers&gt;</ph>命名空间。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>The following example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">下面的示例实现简单的间隔计时器，该警报计时器每五秒。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.</source>
          <target state="translated">警报出现时，<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>显示警报已启动并询问用户是否计时器应继续运行次数的计数。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Timer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>When a new timer is created, it is disabled; that is, <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">当创建一个新的计时器时，就会禁用;也就是说，<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>设置为<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>To enable the timer, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> method or set <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">若要启用计时器，请调用<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>方法或一组<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>到<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</source>
          <target state="translated">如果禁用计时器，计时器超出作用域中，在垃圾回收发生时，将处理计时器。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</source>
          <target state="translated">如果计时器处于启用状态，即使超出作用域，它不进行垃圾回收。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> that represents the container for the timer.</source>
          <target state="translated">表示计时器的容器的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> class together with the specified container.</source>
          <target state="translated">将指定的容器与 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> 类的新实例一起初始化。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> constructor enables you to associate a <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> with any <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>构造函数，可将相关联<ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph>与任意<ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>By associating the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> like this, you hand over control of the lifetime of the <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> to the <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated">通过将相关联<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>示，你的生存期的控制权移交<ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph>到<ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</source>
          <target state="translated">如果你在你的应用程序中使用的许多组件，并想要同时释放它们，这会很有用。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>For example, if you associate a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, an <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph> with a <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>, calling <ph id="ph5">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> on the <ph id="ph6">&lt;xref:System.ComponentModel.Container&gt;</ph> will force disposal of all of these components as well.</source>
          <target state="translated">例如，如果您将相关联<ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>，和一个<ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph>与<ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>，则调用<ph id="ph5">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph>上<ph id="ph6">&lt;xref:System.ComponentModel.Container&gt;</ph>将强制的所有这些组件也可供使用。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>When a new timer is created, it is disabled; that is, <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">当创建一个新的计时器时，就会禁用;也就是说，<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>设置为<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>To enable the timer, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> method or set <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">若要启用计时器，请调用<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>方法或一组<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>到<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>This instance will exist until its container releases it to garbage collection.</source>
          <target state="translated">此实例将存在，直到其容器将它释放到垃圾回收。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示释放托管资源和非托管资源。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> to release only the unmanaged resources.</source>
          <target state="translated">设置为 <ph id="ph1">&lt;see langword="false" /&gt;</ph> 将只释放非托管资源。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Disposes of the resources, other than memory, used by the timer.</source>
          <target state="translated">释放由计时器使用的资源（内存除外）。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> when you are finished using the timer.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>在完成使用计时器时。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> method leaves the timer in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>方法使计时器处于不可用状态。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>After you call <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</source>
          <target state="translated">调用后<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>，必须释放对计时器的所有引用，以便可以通过垃圾回收回收其占用的内存。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Always call <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> before you release your last reference to the timer.</source>
          <target state="translated">始终调用<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>在发布到计时器最后一个引用之前。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</source>
          <target state="translated">否则，仅直到垃圾回收调用计时器对象的析构函数时，不会释放计时器所使用的资源。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>Gets or sets whether the timer is running.</source>
          <target state="translated">获取或设置计时器是否正在运行。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the timer is currently enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果计时器当前处于启用状态，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>The timer is not subject to garbage collection when the value is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">值时，计时器不进行垃圾回收<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> method is the same as setting <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>方法等同于设置<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>到<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>Likewise, calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> method is the same as setting <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">同样，调用<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph>方法等同于设置<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>到<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>The following example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">下面的示例实现简单的间隔计时器，该警报计时器每五秒。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">警报出现时，<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>显示警报已启动并提示用户是否计时器应继续运行次数的计数。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Timer.Interval">
          <source>Gets or sets the time, in milliseconds, before the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event is raised relative to the last occurrence of the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event.</source>
          <target state="translated">获取或设置在相对于上一次发生的 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> 事件引发 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> 事件之前的时间（以毫秒为单位）。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> specifying the number of milliseconds before the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event is raised relative to the last occurrence of the <ph id="ph3">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 指定在相对于上一次发生的 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> 事件引发 <ph id="ph3">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> 事件之前的毫秒数。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>The value cannot be less than one.</source>
          <target state="translated">该值不能小于 1。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>To get the number of seconds in the interval, divide this number by 1,000.</source>
          <target state="translated">若要获取的秒数的时间间隔内，请将此数字除以 1000。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">下面的代码示例实现简单的间隔计时器，该警报计时器每五秒。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">警报出现时，<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>显示警报已启动并提示用户是否计时器应继续运行次数的计数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>This is always <ph id="ph1">&lt;see cref="F:System.EventArgs.Empty" /&gt;</ph>.</source>
          <target state="translated">这总是 <ph id="ph1">&lt;see cref="F:System.EventArgs.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>This method is called for each timer tick.</source>
          <target state="translated">为每个计时器刻度调用此方法。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>It calls any methods that are added through <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>.</source>
          <target state="translated">通过添加任何方法，它调用<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>If you are inheriting from <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>, you can override this method.</source>
          <target state="translated">如果从继承<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>，您可以重写此方法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph> in a derived class, make sure that you call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph>在派生类中，请确保调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Start">
          <source>Starts the timer.</source>
          <target state="translated">启动计时器。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Start">
          <source>You can also start the timer by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">你还可以通过设置启动计时器<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>属性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Start">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">下面的代码示例实现简单的间隔计时器，该警报计时器每五秒。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Start">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">警报出现时，<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>显示警报已启动并提示用户是否计时器应继续运行次数的计数。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Stop">
          <source>Stops the timer.</source>
          <target state="translated">停止计时器。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>You can also stop the timer by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">也可以通过设置停止计时器<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>属性<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> object may be enabled and disabled multiple times within the same application session.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>对象可能处于启用状态并禁用在同一会话中应用程序多次。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> after you have disabled a <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> by calling <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> will cause the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph> to restart the interrupted interval.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>已禁用后<ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph>通过调用<ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph>将导致<ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph>以重新启动中断的时间间隔。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>If your <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> is set for a 5000-millisecond interval, and you call <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> at around 3000 milliseconds, calling <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> will cause the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph> to wait 5000 milliseconds before raising the <ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event.</source>
          <target state="translated">如果你<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>设置 5000 毫秒的间隔时间，并且你调用<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph>在大约 3000 毫秒，调用<ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>将导致<ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph>引发前等待 5000 毫秒<ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>Calling Stop on any <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> within a Windows Forms application can cause messages from other <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> components in the application to be processed immediately, because all <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph> components operate on the main application thread.</source>
          <target state="translated">在任何上调用 Stop <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> Windows 窗体中应用程序可以从其他导致消息<ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph>会立即，处理，因为应用程序中的组件所有<ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph>组件在主应用程序线程上运行。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>If you have two <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> components, one set to 700 milliseconds and one set to 500 milliseconds, and you call <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> on the first <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph>, your application may receive an event callback for the second component first.</source>
          <target state="translated">如果你有两个<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>组件，一个设置为 700 毫秒和一个设置为 500 毫秒，并且你调用<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph>在第一个<ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph>，你的应用程序可能会首先收到第二个组件的事件回调。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>If this proves problematic, consider using the <ph id="ph1">&lt;xref:System.Threading.Timer&gt;</ph> class in the <ph id="ph2">&lt;xref:System.Threading&gt;</ph> namespace instead.</source>
          <target state="translated">如果这证明有问题，请考虑使用<ph id="ph1">&lt;xref:System.Threading.Timer&gt;</ph>类<ph id="ph2">&lt;xref:System.Threading&gt;</ph>命名空间相反。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">下面的代码示例实现简单的间隔计时器，该警报计时器每五秒。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">警报出现时，<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>显示警报已启动并提示用户是否计时器应继续运行次数的计数。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Timer.Tag">
          <source>Gets or sets an arbitrary string representing some type of user state.</source>
          <target state="translated">获取或设置一个任意字符串，表示某种类型的用户状态。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Tag">
          <source>An arbitrary string representing some type of user state.</source>
          <target state="translated">一个任意字符串，表示某种类型的用户状态。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Timer.Tick">
          <source>Occurs when the specified timer interval has elapsed and the timer is enabled.</source>
          <target state="translated">当指定的计时器间隔已过去而且计时器处于启用状态时发生。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>Calling the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> class from within the <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event repeatedly.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>中的类<ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>事件可能不会按预期方式，作为显示断言对话框框中可能会导致 Windows 引发<ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>事件重复。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>We recommend that you refrain from testing assertions within this event, and use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph> methods instead.</source>
          <target state="translated">我们建议你避免从测试此事件中的断言，并使用<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>，或<ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">下面的代码示例实现简单的间隔计时器，该警报计时器每五秒。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">警报出现时，<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>显示警报已启动并提示用户是否计时器应继续运行次数的计数。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.ToString">
          <source>Returns a string that represents the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph>.</source>
          <target state="translated">返回表示 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> 的字符串。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.ToString">
          <source>A string that represents the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph>.</source>
          <target state="translated">表示当前 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> 的字符串。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.ToString%2A&gt;</ph> method returns a string that includes the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Timer.ToString%2A&gt;</ph>方法返回包含的值的字符串<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph>属性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>