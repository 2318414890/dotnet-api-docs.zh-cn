<Type Name="Form" FullName="System.Windows.Forms.Form">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f3fc084a02f774d87fefe2646b5cb5ad6cc9733" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33659937" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Form : System.Windows.Forms.ContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Form extends System.Windows.Forms.ContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Form" />
  <TypeSignature Language="VB.NET" Value="Public Class Form&#xA;Inherits ContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Form : System::Windows::Forms::ContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FormDocumentDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("Form")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.InitializationEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms.Control.TopLevel")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4565e-101">表示组成应用程序的用户界面的窗口或对话框。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4565e-101">Represents a window or dialog box that makes up an application's user interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-102">A<xref:System.Windows.Forms.Form>是在你的应用程序中显示任何窗口的表示形式。</span><span class="sxs-lookup"><span data-stu-id="4565e-102">A <xref:System.Windows.Forms.Form> is a representation of any window displayed in your application.</span></span> <span data-ttu-id="4565e-103"><xref:System.Windows.Forms.Form>类可以用于创建标准、 工具中无边框和浮动窗口。</span><span class="sxs-lookup"><span data-stu-id="4565e-103">The <xref:System.Windows.Forms.Form> class can be used to create standard, tool, borderless, and floating windows.</span></span> <span data-ttu-id="4565e-104">你还可以使用<xref:System.Windows.Forms.Form>类，以创建如对话框中的模式窗口。</span><span class="sxs-lookup"><span data-stu-id="4565e-104">You can also use the <xref:System.Windows.Forms.Form> class to create modal windows such as a dialog box.</span></span> <span data-ttu-id="4565e-105">一种特殊的窗体中，多文档界面 (MDI) 窗体中，可以包含其他调用 MDI 子窗体的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-105">A special kind of form, the multiple-document interface (MDI) form, can contain other forms called MDI child forms.</span></span> <span data-ttu-id="4565e-106">通过设置创建的 MDI 窗体<xref:System.Windows.Forms.Form.IsMdiContainer%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-106">An MDI form is created by setting the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to `true`.</span></span> <span data-ttu-id="4565e-107">通过设置来创建 MDI 子窗体<xref:System.Windows.Forms.Form.MdiParent%2A>到 MDI 父窗体将包含的子窗体的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-107">MDI child forms are created by setting the <xref:System.Windows.Forms.Form.MdiParent%2A> property to the MDI parent form that will contain the child form.</span></span>  
  
 <span data-ttu-id="4565e-108">使用中可用的属性<xref:System.Windows.Forms.Form>类，你可以确定要创建的窗口或对话框中的外观、 大小、 颜色和窗口管理功能。</span><span class="sxs-lookup"><span data-stu-id="4565e-108">Using the properties available in the <xref:System.Windows.Forms.Form> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating.</span></span> <span data-ttu-id="4565e-109"><xref:System.Windows.Forms.Control.Text%2A>属性允许你指定的窗口标题的标题栏中。</span><span class="sxs-lookup"><span data-stu-id="4565e-109">The <xref:System.Windows.Forms.Control.Text%2A> property allows you to specify the caption of the window in the title bar.</span></span> <span data-ttu-id="4565e-110"><xref:System.Windows.Forms.Form.Size%2A>和<xref:System.Windows.Forms.Form.DesktopLocation%2A>属性允许你定义的大小和窗口的位置，它显示时。</span><span class="sxs-lookup"><span data-stu-id="4565e-110">The <xref:System.Windows.Forms.Form.Size%2A> and <xref:System.Windows.Forms.Form.DesktopLocation%2A> properties allow you to define the size and position of the window when it is displayed.</span></span> <span data-ttu-id="4565e-111">你可以使用<xref:System.Windows.Forms.Control.ForeColor%2A>颜色属性可以更改的默认前景色的所有控件置于窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-111">You can use the <xref:System.Windows.Forms.Control.ForeColor%2A> color property to change the default foreground color of all controls placed on the form.</span></span> <span data-ttu-id="4565e-112"><xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>，和<xref:System.Windows.Forms.Form.MaximizeBox%2A>属性允许您控制是否窗体可以最小化、 最大化时，或在运行时调整大小。</span><span class="sxs-lookup"><span data-stu-id="4565e-112">The <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties allow you to control whether the form can be minimized, maximized, or resized at run time.</span></span>  
  
 <span data-ttu-id="4565e-113">除了属性外，你可以使用类的方法来操作窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-113">In addition to properties, you can use the methods of the class to manipulate a form.</span></span> <span data-ttu-id="4565e-114">例如，你可以使用<xref:System.Windows.Forms.Form.ShowDialog%2A>方法来显示某个窗体作为模式对话框。</span><span class="sxs-lookup"><span data-stu-id="4565e-114">For example, you can use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to show a form as a modal dialog box.</span></span> <span data-ttu-id="4565e-115">你可以使用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>方法在桌面上定位窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-115">You can use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method to position the form on the desktop.</span></span>  
  
 <span data-ttu-id="4565e-116">事件<xref:System.Windows.Forms.Form>类可以响应在窗体上执行的操作。</span><span class="sxs-lookup"><span data-stu-id="4565e-116">The events of the <xref:System.Windows.Forms.Form> class allow you to respond to actions performed on the form.</span></span> <span data-ttu-id="4565e-117">你可以使用<xref:System.Windows.Forms.Form.Activated>事件以执行操作，例如更新时激活该窗体的窗体控件中显示的数据。</span><span class="sxs-lookup"><span data-stu-id="4565e-117">You can use the <xref:System.Windows.Forms.Form.Activated> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.</span></span>  
  
 <span data-ttu-id="4565e-118">你可以使用窗体作为起始类在你的应用程序通过将调用的方法`Main`类中。</span><span class="sxs-lookup"><span data-stu-id="4565e-118">You can use a form as the starting class in your application by placing a method called `Main` in the class.</span></span> <span data-ttu-id="4565e-119">在`Main`方法添加代码以创建并显示窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-119">In the `Main` method add code to create and show the form.</span></span> <span data-ttu-id="4565e-120">你还需要添加`STAThread`属性设为`Main`方法按顺序运行的表单。</span><span class="sxs-lookup"><span data-stu-id="4565e-120">You will also need to add the `STAThread` attribute to the `Main` method in order for the form to run.</span></span> <span data-ttu-id="4565e-121">当启动窗体关闭时，应用程序也将关闭。</span><span class="sxs-lookup"><span data-stu-id="4565e-121">When the starting form is closed, the application is also closed.</span></span>  
  
 <span data-ttu-id="4565e-122">如果你设置<xref:System.Windows.Forms.Control.Enabled%2A>属性`false`之前<xref:System.Windows.Forms.Form>可见 (例如，设置<xref:System.Windows.Forms.Control.Enabled%2A>中为 false[!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)]设计器)，则最小化，使最大化，关闭和的系统按钮，保持启用状态。</span><span class="sxs-lookup"><span data-stu-id="4565e-122">If you set the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` before the <xref:System.Windows.Forms.Form> is visible (for example, setting <xref:System.Windows.Forms.Control.Enabled%2A> to false in the [!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)] designer), the minimize, maximize, close, and system buttons remain enabled.</span></span> <span data-ttu-id="4565e-123">如果你设置<xref:System.Windows.Forms.Control.Enabled%2A>到`false`后<xref:System.Windows.Forms.Form>可见 （例如，在负载事件发生时），则禁用此按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-123">If you set <xref:System.Windows.Forms.Control.Enabled%2A> to `false` after the <xref:System.Windows.Forms.Form> is visible (for example, when the Load event occurs), the buttons are disabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-124">下面的代码示例创建的新实例<xref:System.Windows.Forms.Form>和调用<xref:System.Windows.Forms.Form.ShowDialog%2A>窗体显示为对话框中的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-124">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="4565e-125">该示例设置<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>属性来更改到对话框的外观和表单的功能。</span><span class="sxs-lookup"><span data-stu-id="4565e-125">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="4565e-126">此示例还使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>方法的窗体的<xref:System.Windows.Forms.Control.Controls%2A>集合来添加两个<xref:System.Windows.Forms.Button>控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-126">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="4565e-127">该示例使用<xref:System.Windows.Forms.Form.HelpButton%2A>属性对话框中的标题栏中显示帮助按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-127">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Form ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Form();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4565e-128">初始化 <see cref="T:System.Windows.Forms.Form" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-128">Initializes a new instance of the <see cref="T:System.Windows.Forms.Form" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-129">窗体的默认大小为 300 像素高度和宽度的 300 像素。</span><span class="sxs-lookup"><span data-stu-id="4565e-129">The default size of a form is 300 pixels in height and 300 pixels in width.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-130">下面的代码示例创建的新实例<xref:System.Windows.Forms.Form>和调用<xref:System.Windows.Forms.Form.ShowDialog%2A>窗体显示为对话框中的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-130">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="4565e-131">该示例设置<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>属性来更改到对话框的外观和表单的功能。</span><span class="sxs-lookup"><span data-stu-id="4565e-131">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="4565e-132">该示例还将使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>方法的窗体的<xref:System.Windows.Forms.Control.Controls%2A>集合来添加两个<xref:System.Windows.Forms.Button>控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-132">The example also sets uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="4565e-133">该示例使用<xref:System.Windows.Forms.Form.HelpButton%2A>属性对话框中的标题栏中显示帮助按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-133">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptButton">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IButtonControl AcceptButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IButtonControl AcceptButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AcceptButton" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptButton As IButtonControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IButtonControl ^ AcceptButton { System::Windows::Forms::IButtonControl ^ get(); void set(System::Windows::Forms::IButtonControl ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IButtonControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-134">获取或设置当用户按 Enter 键时所单击的窗体上的按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-134">Gets or sets the button on the form that is clicked when the user presses the ENTER key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-135">
            <see cref="T:System.Windows.Forms.IButtonControl" />，表示要用作窗体的“接受”按钮的按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-135">An <see cref="T:System.Windows.Forms.IButtonControl" /> that represents the button to use as the accept button for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-136">此属性可指定用户在你的应用程序中按 ENTER 键时要发生的默认操作。</span><span class="sxs-lookup"><span data-stu-id="4565e-136">This property enables you to designate a default action to occur when the user presses the ENTER key in your application.</span></span> <span data-ttu-id="4565e-137">必须是分配给此属性的按钮<xref:System.Windows.Forms.IButtonControl>当前窗体上或位于当前窗体上的容器。</span><span class="sxs-lookup"><span data-stu-id="4565e-137">The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.</span></span>  
  
 <span data-ttu-id="4565e-138">此属性可用于允许用户能够快速导航是允许他们只需按 ENTER 键，而不是手动单击用鼠标接受按钮完成时的一种简单形式。</span><span class="sxs-lookup"><span data-stu-id="4565e-138">You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ENTER key when they are finished instead of manually clicking the accept button with their mouse.</span></span>  
  
 <span data-ttu-id="4565e-139">如果窗体上的当前所选的控件截获 ENTER 键，并处理它，可能未激活接受按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-139">The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it.</span></span> <span data-ttu-id="4565e-140">例如，多行文本框控件允许选择要在控件中插入新行字符时按 ENTER 键。</span><span class="sxs-lookup"><span data-stu-id="4565e-140">For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-141">下面的代码示例创建的新实例<xref:System.Windows.Forms.Form>和调用<xref:System.Windows.Forms.Form.ShowDialog%2A>窗体显示为对话框中的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-141">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="4565e-142">该示例设置<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>属性来更改到对话框的外观和表单的功能。</span><span class="sxs-lookup"><span data-stu-id="4565e-142">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="4565e-143">此示例还使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>方法的窗体的<xref:System.Windows.Forms.Control.Controls%2A>集合来添加两个<xref:System.Windows.Forms.Button>控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-143">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="4565e-144">该示例使用<xref:System.Windows.Forms.Form.HelpButton%2A>属性对话框中的标题栏中显示帮助按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-144">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.CancelButton" />
        <altmember cref="T:System.Windows.Forms.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4565e-145">激活窗体并给予它焦点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-145">Activates the form and gives it focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-146">激活窗体将它置于顶层如果这是活动的应用程序，或如果这不是活动的应用程序，它会闪烁窗口标题。</span><span class="sxs-lookup"><span data-stu-id="4565e-146">Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application.</span></span> <span data-ttu-id="4565e-147">该窗体必须可见才能产生任何影响此方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-147">The form must be visible for this method to have any effect.</span></span> <span data-ttu-id="4565e-148">若要确定活动窗体应用程序中的，使用<xref:System.Windows.Forms.Form.ActiveForm%2A>属性或<xref:System.Windows.Forms.Form.ActiveMdiChild%2A>如果窗体中的多文档界面 (MDI) 应用程序的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-148">To determine the active form in an application, use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property or the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property if your forms are in a Multiple-document interface (MDI) application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-149">下面的代码示例演示如何使用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>，<xref:System.Windows.Forms.Form.Load>和<xref:System.Windows.Forms.Form.Activate%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-149">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="4565e-150">若要运行该示例，请将以下代码粘贴在窗体调用`Form1`包含一个按钮调用`Button1`和两个`Label`控件称为`Label1`和`Label2`。</span><span class="sxs-lookup"><span data-stu-id="4565e-150">To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4565e-151">用于更改焦点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-151">for changing focus.</span>
          </span>
          <span data-ttu-id="4565e-152">关联枚举：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-152">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-153">当使用代码激活或用户激活窗体时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-153">Occurs when the form is activated in code or by the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4565e-154">当应用程序处于活动状态，并且具有多个窗体时，活动窗体是具有输入焦点的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-154">When the application is active and has multiple forms, the active form is the form with the input focus.</span></span> <span data-ttu-id="4565e-155">不可见的窗体不能为活动窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-155">A form that is not visible cannot be the active form.</span></span> <span data-ttu-id="4565e-156">激活可见的窗体的最简单方法是单击它或使用相应的键盘组合。</span><span class="sxs-lookup"><span data-stu-id="4565e-156">The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.</span></span>  
  
 <span data-ttu-id="4565e-157">若要在运行时使用代码激活窗体，调用<xref:System.Windows.Forms.Form.Activate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-157">To activate a form at run time using code, call the <xref:System.Windows.Forms.Form.Activate%2A> method.</span></span> <span data-ttu-id="4565e-158">例如，更新基于未激活窗体时对窗体的数据所做的更改窗体的内容的任务，你可以使用此事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-158">You can use this event for tasks such as updating the contents of the form based on changes made to the form's data when the form was not activated.</span></span>  
  
 <span data-ttu-id="4565e-159">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-159">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-160">下面的代码示例演示如何使用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>， <xref:System.Windows.Forms.Form.Closed>， <xref:System.Windows.Forms.Form.Load>， <xref:System.Windows.Forms.Form.Activated>，和<xref:System.Windows.Forms.Form.Activate%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-160">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="4565e-161">若要运行该示例，请将以下代码粘贴一种称为 form1 包含<xref:System.Windows.Forms.Button>调用`Button1`和两个<xref:System.Windows.Forms.Label>控件称为`Label1`和`Label2`。</span><span class="sxs-lookup"><span data-stu-id="4565e-161">To run the example, paste the following code in a form called Form1 containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActivateMdiChild">
      <MemberSignature Language="C#" Value="protected void ActivateMdiChild (System.Windows.Forms.Form form);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ActivateMdiChild(class System.Windows.Forms.Form form) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ActivateMdiChild(System::Windows::Forms::Form ^ form);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="form">
          <span data-ttu-id="4565e-162">要激活的子窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-162">The child form to activate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-163">激活窗体的 MDI 子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-163">Activates the MDI child of a form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-164">如果`form`参数已经是活动的 MDI 子窗体，则<xref:System.Windows.Forms.Form.ActivateMdiChild%2A>方法只返回。</span><span class="sxs-lookup"><span data-stu-id="4565e-164">If the `form` parameter is already the active MDI child form, then the <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> method simply returns.</span></span> <span data-ttu-id="4565e-165">如果`form`不`null`，则设置为活动的 MDI 子窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-165">If `form` is not `null`, then it is set to be the active MDI child form.</span></span>  
  
 <span data-ttu-id="4565e-166">是否`form`参数是`null`，<xref:System.Windows.Forms.Form.ActivateMdiChild%2A>引发<xref:System.Windows.Forms.Form.MdiChildActivate>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-166">Whether the `form` parameter is `null` or not, <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> raises the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
        <altmember cref="E:System.Windows.Forms.Form.MdiChildActivate" />
      </Docs>
    </Member>
    <Member MemberName="ActiveForm">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Form ActiveForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.Form ActiveForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ActiveForm" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActiveForm As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::Form ^ ActiveForm { System::Windows::Forms::Form ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-167">获取此应用程序的当前活动窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-167">Gets the currently active form for this application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-168">
            <see cref="T:System.Windows.Forms.Form" />，表示当前活动窗体，或者如果没有活动窗体，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-168">A <see cref="T:System.Windows.Forms.Form" /> that represents the currently active form, or <see langword="null" /> if there is no active form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-169">此方法可用于获取对当前活动窗体在窗体或其控件上执行操作的引用。</span><span class="sxs-lookup"><span data-stu-id="4565e-169">You can use this method to obtain a reference to the currently active form to perform actions on the form or its controls.</span></span>  
  
 <span data-ttu-id="4565e-170">如果你的应用程序的多文档界面 (MDI) 应用程序，请使用<xref:System.Windows.Forms.Form.ActiveMdiChild%2A>属性来获取当前处于活动状态的 MDI 子窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-170">If your application is a multiple-document interface (MDI) application, use the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property to obtain the currently active MDI child form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-171">下面的代码示例获取活动窗体，并禁用窗体上的所有控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-171">The following code example gets the active form and disables all the controls on the form.</span></span> <span data-ttu-id="4565e-172">该示例使用<xref:System.Windows.Forms.Control.Controls%2A>要循环访问每个窗体上的控件并禁用这些控件的窗体的集合。</span><span class="sxs-lookup"><span data-stu-id="4565e-172">The example uses the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form to iterate through each control on the form and disable the controls.</span></span>  
  
 [!code-cpp[Classic Form.ActiveForm Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ActiveForm Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ActiveForm Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ActiveForm Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ActiveForm Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ActiveForm Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4565e-173">用于请求窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-173">for requesting a form.</span>
          </span>
          <span data-ttu-id="4565e-174">关联枚举：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-174">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
      </Docs>
    </Member>
    <Member MemberName="ActiveMdiChild">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form ActiveMdiChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form ActiveMdiChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ActiveMdiChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMdiChild As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ ActiveMdiChild { System::Windows::Forms::Form ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-175">获取当前活动的多文档界面 (MDI) 子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-175">Gets the currently active multiple-document interface (MDI) child window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-176">返回表示当前活动的 MDI 子窗口的 <see cref="T:System.Windows.Forms.Form" />，或者如果当前没有子窗口，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-176">Returns a <see cref="T:System.Windows.Forms.Form" /> that represents the currently active MDI child window, or <see langword="null" /> if there are currently no child windows present.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-177">此方法可用于确定是否有任何 MDI 子窗体在 MDI 应用程序中打开。</span><span class="sxs-lookup"><span data-stu-id="4565e-177">You can use this method to determine whether there are any MDI child forms open in your MDI application.</span></span> <span data-ttu-id="4565e-178">此方法还可用于执行操作的 MDI 子窗口上，从其 MDI 父窗体或显示在你的应用程序的另一种形式。</span><span class="sxs-lookup"><span data-stu-id="4565e-178">You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.</span></span>  
  
 <span data-ttu-id="4565e-179">如果当前活动窗体不是 MDI 子窗体，则可以使用<xref:System.Windows.Forms.Form.ActiveForm%2A>属性来获取对它的引用。</span><span class="sxs-lookup"><span data-stu-id="4565e-179">If the currently active form is not an MDI child form, you can use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property to obtain a reference to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-180">下面的代码示例获取对活动的 MDI 子窗体，并循环访问所有的引用<xref:System.Windows.Forms.TextBox>控件在表单上的重置其<xref:System.Windows.Forms.TextBoxBase.Text%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-180">The following code example obtains a reference to the active MDI child form and loops through all <xref:System.Windows.Forms.TextBox> controls on the form, resetting their <xref:System.Windows.Forms.TextBoxBase.Text%2A> properties.</span></span> <span data-ttu-id="4565e-181">此示例需要已创建了一个 MDI 父窗体和此方法调用，正在从 MDI 父窗体进行。</span><span class="sxs-lookup"><span data-stu-id="4565e-181">This example requires that an MDI parent form has been created and that this method call is being made from the MDI parent form.</span></span>  
  
 [!code-cpp[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
      </Docs>
    </Member>
    <Member MemberName="AddOwnedForm">
      <MemberSignature Language="C#" Value="public void AddOwnedForm (System.Windows.Forms.Form ownedForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOwnedForm(class System.Windows.Forms.Form ownedForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOwnedForm (ownedForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOwnedForm(System::Windows::Forms::Form ^ ownedForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="ownedForm">
          <span data-ttu-id="4565e-182">此窗体将拥有的 <see cref="T:System.Windows.Forms.Form" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-182">The <see cref="T:System.Windows.Forms.Form" /> that this form will own.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-183">向此窗体添加附属窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-183">Adds an owned form to this form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-184">分配给所有者窗体的窗体将保持被拥有直到<xref:System.Windows.Forms.Form.RemoveOwnedForm%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-184">The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="4565e-185">你还可以通过设置拥有的另一个窗体<xref:System.Windows.Forms.Form.Owner%2A>与对其所有者窗体的引用的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-185">You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.</span></span>  
  
 <span data-ttu-id="4565e-186">当窗体拥有的另一种形式时，它被关闭或隐藏与所有者窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-186">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="4565e-187">例如，考虑名为窗体`Form2`归名为窗体`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-187">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="4565e-188">如果`Form1`关闭或最小化，`Form2`也会关闭或隐藏。</span><span class="sxs-lookup"><span data-stu-id="4565e-188">If `Form1` is closed or minimized, `Form2` is also closed or hidden.</span></span> <span data-ttu-id="4565e-189">附属窗体还永远不会显示在其所有者的窗体后面。</span><span class="sxs-lookup"><span data-stu-id="4565e-189">Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="4565e-190">可以拥有的窗体以 windows 使用如查找和替换 windows，不应在选择所有者窗体时显示在所有者窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-190">You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-191">如果窗体是多文档界面 (MDI) 父窗体，此属性返回当前任何 MDI 子窗体除了显示的所有窗体打开。</span><span class="sxs-lookup"><span data-stu-id="4565e-191">If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open.</span></span> <span data-ttu-id="4565e-192">若要获取在 MDI 父窗体中打开的 MDI 子窗体，请使用<xref:System.Windows.Forms.Form.MdiChildren%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-192">To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-193">下面的代码示例演示如何使用<xref:System.Windows.Forms.Form.AddOwnedForm%2A>窗体显示为另一个窗体的附属窗体的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-193">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method to display a form as an owned form of another form.</span></span> <span data-ttu-id="4565e-194">附属窗体显示后，你可以尽量减小其所有者窗体和附属窗体将与其最小化。</span><span class="sxs-lookup"><span data-stu-id="4565e-194">Once the owned form is shown, you can minimize its owner form and the owned form will minimize with it.</span></span> <span data-ttu-id="4565e-195">该示例需要示例中的代码从另一个事件或窗体的方法调用。</span><span class="sxs-lookup"><span data-stu-id="4565e-195">The example requires that the code in the example is called from another event or method of a form.</span></span>  
  
 [!code-cpp[Form.AddOwnedForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.AddOwnedForm/CPP/form1.cpp#1)]
 [!code-csharp[Form.AddOwnedForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AddOwnedForm/CS/form1.cs#1)]
 [!code-vb[Form.AddOwnedForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AddOwnedForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="AdjustFormScrollbars">
      <MemberSignature Language="C#" Value="protected override void AdjustFormScrollbars (bool displayScrollbars);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AdjustFormScrollbars(bool displayScrollbars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AdjustFormScrollbars (displayScrollbars As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AdjustFormScrollbars(bool displayScrollbars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayScrollbars" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="displayScrollbars">
          <span data-ttu-id="4565e-196">如果显示滚动条，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-196">
              <see langword="true" /> to show the scroll bars; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-197">根据当前控件位置和当前所选控件调整容器中的滚动条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-197">Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowTransparency">
      <MemberSignature Language="C#" Value="public bool AllowTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AllowTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowTransparency { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-198">获取或设置一个值，该值指示能否调整窗体的不透明度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-198">Gets or sets a value indicating whether the opacity of the form can be adjusted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-199">如果可以更改窗体的不透明度，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-199">
              <see langword="true" /> if the opacity of the form can be changed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-200">此属性自动设置为`true`如果`Opacity`更改。</span><span class="sxs-lookup"><span data-stu-id="4565e-200">This property is automatically set to `true` if the `Opacity` is changed.</span></span> <span data-ttu-id="4565e-201">当使用设置窗体的不透明度`Opacity`属性，该窗体将窗体上的对象进行分层。</span><span class="sxs-lookup"><span data-stu-id="4565e-201">When the opacity of a form is set using the `Opacity` property, the form will layer objects on the form.</span></span> <span data-ttu-id="4565e-202">如果你设置<xref:System.Windows.Forms.Form.AllowTransparency%2A>属性`false`窗体不会在分层的模式下，这将提高窗体显示性能。</span><span class="sxs-lookup"><span data-stu-id="4565e-202">If you set the <xref:System.Windows.Forms.Form.AllowTransparency%2A> property to `false` the form will not be in layered mode which will improve the display performance of the form.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAutoScaling">
      <MemberSignature Language="C#" Value="protected void ApplyAutoScaling ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ApplyAutoScaling() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ApplyAutoScaling" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ApplyAutoScaling ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ApplyAutoScaling();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use the ApplyAutoScaling method instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4565e-203">根据 <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /> 属性的当前值和当前字体的大小来调整窗体大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-203">Resizes the form according to the current value of the <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /> property and the size of the current font.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-204">此方法可确定使用的值的窗体大小<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>属性和<xref:System.Windows.Forms.Form.Size%2A>返回值<xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-204">This method determines the form size using the value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property and the <xref:System.Windows.Forms.Form.Size%2A> value returned by the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScale">
      <MemberSignature Language="C#" Value="public bool AutoScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScale" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScale As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScale { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This property has been deprecated. Use the AutoScaleMode property instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-205">获取或设置一个值，该值指示窗体是否调整其大小以适合该窗体上使用的字体高度，以及是否缩放其控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-205">Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-206">如果窗体根据分配给它的当前字体自动缩放本身及其控件，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-206">
              <see langword="true" /> if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-207">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-207">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4565e-208"><xref:System.Windows.Forms.Form.AutoScale%2A>已过时，并已保留用于向后兼容。</span><span class="sxs-lookup"><span data-stu-id="4565e-208">The <xref:System.Windows.Forms.Form.AutoScale%2A> is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="4565e-209">未过时的替代项为 <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4565e-209">The non-obsolete alternative is <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4565e-210">有关自动缩放的详细信息，请参阅[Windows 窗体中的自动缩放](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-210">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="4565e-211">可以使用此属性以允许你的窗体，并为自动调整其控件基于的字体中的更改。</span><span class="sxs-lookup"><span data-stu-id="4565e-211">You can use this property to allow your form and its controls to automatically adjust based on changes in the font.</span></span> <span data-ttu-id="4565e-212">这可在应用程序字体其中可能会增加或减少基于由 Windows 为使用指定的语言。</span><span class="sxs-lookup"><span data-stu-id="4565e-212">This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.</span></span>  
  
 <span data-ttu-id="4565e-213">以获取要使用比例的窗体将自动的大小<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-213">To obtain the size the form will auto scale to, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.</span></span> <span data-ttu-id="4565e-214">如果你想要确定大小窗体将自动调整为根据特定的字体，使用<xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-214">If you want to determine the size the form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaleBaseSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size AutoScaleBaseSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size AutoScaleBaseSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoScaleBaseSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size AutoScaleBaseSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-215">获取或设置用于自动缩放窗体的基大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-215">Gets or sets the base size used for autoscaling of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-216">
            <see cref="T:System.Drawing.Size" />，表示此窗体用于自动缩放的基大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-216">A <see cref="T:System.Drawing.Size" /> that represents the base size that this form uses for autoscaling.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4565e-217">此成员已保留用于向后兼容。</span><span class="sxs-lookup"><span data-stu-id="4565e-217">This member has been retained for backward compatibility.</span></span> <span data-ttu-id="4565e-218">有关自动缩放的详细信息，请参阅[Windows 窗体中的自动缩放](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-218">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="4565e-219">值<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>属性用于在窗体显示时计算窗体的缩放因子。</span><span class="sxs-lookup"><span data-stu-id="4565e-219">The value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property is used at form-display time to compute the scaling factor for the form.</span></span> <span data-ttu-id="4565e-220">自动缩放基大小用于由窗体作为基准比较到系统的字体大小来确定多少使用自动缩放时缩放窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-220">The autoscaling base size is used by the form as a baseline for comparison to the system's font size to determine how much to scale the form when autoscaling is used.</span></span> <span data-ttu-id="4565e-221">如果你想要确定大小窗体将自动调整为根据特定的字体，使用<xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-221">If you want to determine the size a form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-222">最初创建窗体时，使用此属性的值。</span><span class="sxs-lookup"><span data-stu-id="4565e-222">The value of this property is used when the form is initially created.</span></span> <span data-ttu-id="4565e-223">一旦设置该属性，它不能更改。</span><span class="sxs-lookup"><span data-stu-id="4565e-223">Once the property is set, it cannot be changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AutoScale" />
        <altmember cref="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)" />
      </Docs>
    </Member>
    <Member MemberName="AutoScroll">
      <MemberSignature Language="C#" Value="public override bool AutoScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScroll" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-224">获取或设置一个值，该值指示窗体是否启用自动滚动。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-224">Gets or sets a value indicating whether the form enables autoscrolling.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-225">若要在窗体上启用自动滚动，为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-225">
              <see langword="true" /> to enable autoscrolling on the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-226">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-226">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-227">如果此属性设置为`true`，如果任何控件位于窗体的客户端区域外窗体上显示滚动条。</span><span class="sxs-lookup"><span data-stu-id="4565e-227">If this property is set to `true`, scroll bars are displayed on the form if any controls are located outside the form's client region.</span></span> <span data-ttu-id="4565e-228">此外，当自动滚动时，窗体的工作区自动滚动，以使具有输入焦点的控件可见。</span><span class="sxs-lookup"><span data-stu-id="4565e-228">Additionally, when autoscrolling is on, the client area of the form automatically scrolls to make the control with input focus visible.</span></span>  
  
 <span data-ttu-id="4565e-229">此属性可用于防止用户会失去其视频分辨率设置被设置为较低的分辨率时查看控件的能力。</span><span class="sxs-lookup"><span data-stu-id="4565e-229">You can use this property to prevent users from losing the ability to view controls when their video resolution settings are set to a low resolution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-230">下面的代码示例演示如何使用<xref:System.Windows.Forms.Form.AutoScroll%2A>属性以支持超出窗体的工作区的控件的显示。</span><span class="sxs-lookup"><span data-stu-id="4565e-230">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.AutoScroll%2A> property to enable the display of controls that are outsize the client area of a form.</span></span> <span data-ttu-id="4565e-231">该示例创建一个新窗体并添加<xref:System.Windows.Forms.Button>到窗体控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-231">The example creates a new form and adds a <xref:System.Windows.Forms.Button> control to the form.</span></span> <span data-ttu-id="4565e-232"><xref:System.Windows.Forms.Button>控件是超出新窗体的工作区。</span><span class="sxs-lookup"><span data-stu-id="4565e-232">The <xref:System.Windows.Forms.Button> control is positioned outsize the client area of the new form.</span></span> <span data-ttu-id="4565e-233"><xref:System.Windows.Forms.Form.AutoScroll%2A>属性设置为 true，以在要使用户能够向下滚动到控件的窗体上显示滚动条。</span><span class="sxs-lookup"><span data-stu-id="4565e-233">The <xref:System.Windows.Forms.Form.AutoScroll%2A> property is set to true to display scroll bars on the form to enable the user to scroll to the control.</span></span> <span data-ttu-id="4565e-234">此示例需要在此示例中定义方法从另一种形式的事件处理程序或其他方法中调用。</span><span class="sxs-lookup"><span data-stu-id="4565e-234">This example requires that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.AutoScroll#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.AutoScroll/CPP/form1.cpp#1)]
 [!code-csharp[Form.AutoScroll#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoScroll/CS/form1.cs#1)]
 [!code-vb[Form.AutoScroll#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoScroll/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-235">根据 <see cref="P:System.Windows.Forms.Form.AutoSizeMode" /> 的设置调整窗体的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-235">Resize the form according to the setting of <see cref="P:System.Windows.Forms.Form.AutoSizeMode" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-236">如果窗体将自动调整大小，则为 <see langword="true" />；如果必须手动调整大小，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-236">
              <see langword="true" /> if the form will automatically resize; <see langword="false" /> if it must be manually resized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-237">使用<xref:System.Windows.Forms.Form.AutoSize%2A>可以强制窗体，若要调整大小以适应其内容。</span><span class="sxs-lookup"><span data-stu-id="4565e-237">Use <xref:System.Windows.Forms.Form.AutoSize%2A> to force a form to resize to fit its contents.</span></span>  
  
 <span data-ttu-id="4565e-238">窗体不会自动调整大小，在 Visual Studio 窗体设计器中，而不考虑的值<xref:System.Windows.Forms.Form.AutoSize%2A>和<xref:System.Windows.Forms.Form.AutoSizeMode%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-238">A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties.</span></span> <span data-ttu-id="4565e-239">窗体正确调整自身大小在运行时根据这两个属性的值。</span><span class="sxs-lookup"><span data-stu-id="4565e-239">The form correctly resizes itself at run time according to the values of these two properties.</span></span> <span data-ttu-id="4565e-240">与之相反，自定义<xref:System.Windows.Forms.UserControl>自动调整自身大小在设计时和运行时。</span><span class="sxs-lookup"><span data-stu-id="4565e-240">By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.</span></span>  
  
 <span data-ttu-id="4565e-241">使用时<xref:System.Windows.Forms.Form.AutoSize%2A>、<xref:System.Windows.Forms.Control.MinimumSize%2A>和<xref:System.Windows.Forms.Control.MaximumSize%2A>遵循属性，但的当前值<xref:System.Windows.Forms.Control.Size%2A>忽略属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-241">When using <xref:System.Windows.Forms.Form.AutoSize%2A>, the <xref:System.Windows.Forms.Control.MinimumSize%2A> and <xref:System.Windows.Forms.Control.MaximumSize%2A> properties are respected, but the current value of the <xref:System.Windows.Forms.Control.Size%2A> property is ignored.</span></span> <span data-ttu-id="4565e-242">使用<xref:System.Windows.Forms.Form.AutoSize%2A>和<xref:System.Windows.Forms.Form.AutoSizeMode%2A>还会呈现<xref:System.Windows.Forms.Form.AutoScroll%2A>多余的因为没有无法收缩要隐藏视图从其所含的控件的窗体的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-242">Using <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> also renders the <xref:System.Windows.Forms.Form.AutoScroll%2A> property superfluous, as there is no way to shrink the form to hide its contained controls from view.</span></span>  
  
 <span data-ttu-id="4565e-243">请参阅<xref:System.Windows.Forms.AutoSizeMode>有关窗体行为时的方式的信息的枚举<xref:System.Windows.Forms.Form.AutoSize%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-243">See the <xref:System.Windows.Forms.AutoSizeMode> enumeration for information on how a form behaves when <xref:System.Windows.Forms.Form.AutoSize%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-244">下面的代码示例演示使用自动调整大小以适应其内容的代码创建的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-244">The following code example shows a form created using code that automatically resizes to fit its contents.</span></span> <span data-ttu-id="4565e-245">当运行时，窗体显示<xref:System.Windows.Forms.Label>、<xref:System.Windows.Forms.TextBox>用于输入 URL，和一个<xref:System.Windows.Forms.Button>用于显示用户的默认 Web 浏览器内的该 URL。</span><span class="sxs-lookup"><span data-stu-id="4565e-245">When run, the form displays a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser.</span></span> <span data-ttu-id="4565e-246">此代码示例使用<xref:System.Windows.Forms.FlowLayoutPanel>进行布局所包含控制一个接一个。</span><span class="sxs-lookup"><span data-stu-id="4565e-246">The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other.</span></span> <span data-ttu-id="4565e-247">它还将设置<xref:System.Windows.Forms.Control.AutoSize%2A>和<xref:System.Windows.Forms.AutoSizeMode>增加和缩小以适合其窗体的内容。</span><span class="sxs-lookup"><span data-stu-id="4565e-247">It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.</span></span>  
  
 [!code-csharp[Form.AutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoSize/CS/Form1.cs#1)]
 [!code-vb[Form.AutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-248">当 <see cref="P:System.Windows.Forms.Form.AutoSize" /> 属性更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-248">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoSize" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoSizeMode AutoSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoSizeMode AutoSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeMode As AutoSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoSizeMode AutoSizeMode { System::Windows::Forms::AutoSizeMode get(); void set(System::Windows::Forms::AutoSizeMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-249">获取或设置窗体自动调整自身大小的模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-249">Gets or sets the mode by which the form automatically resizes itself.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-250">
            <see cref="T:System.Windows.Forms.AutoSizeMode" /> 枚举值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-250">An <see cref="T:System.Windows.Forms.AutoSizeMode" /> enumerated value.</span>
          </span>
          <span data-ttu-id="4565e-251">默认值为 <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-251">The default is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-252">设置<xref:System.Windows.Forms.Form.AutoSizeMode%2A>属性的新值会导致要再次布局的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-252">Setting the <xref:System.Windows.Forms.Form.AutoSizeMode%2A> property to a new value causes the form to be laid out again.</span></span>  
  
 <span data-ttu-id="4565e-253">窗体不会自动调整大小，在 Visual Studio 窗体设计器中，而不考虑的值<xref:System.Windows.Forms.Form.AutoSize%2A>和<xref:System.Windows.Forms.Form.AutoSizeMode%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-253">A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties.</span></span> <span data-ttu-id="4565e-254">窗体正确调整自身大小在运行时根据这两个属性的值。</span><span class="sxs-lookup"><span data-stu-id="4565e-254">The form correctly resizes itself at run time according to the values of these two properties.</span></span> <span data-ttu-id="4565e-255">与之相反，自定义<xref:System.Windows.Forms.UserControl>自动调整自身大小在设计时和运行时。</span><span class="sxs-lookup"><span data-stu-id="4565e-255">By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-256">下面的代码示例演示使用自动调整大小以适应其内容的代码创建的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-256">The following code example shows a form created using code that automatically resizes to fit its contents.</span></span> <span data-ttu-id="4565e-257">当运行时，窗体将显示<xref:System.Windows.Forms.Label>、<xref:System.Windows.Forms.TextBox>用于输入 URL，和一个<xref:System.Windows.Forms.Button>用于显示用户的默认 Web 浏览器内的该 URL。</span><span class="sxs-lookup"><span data-stu-id="4565e-257">When run, the form displaya a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser.</span></span> <span data-ttu-id="4565e-258">此代码示例使用<xref:System.Windows.Forms.FlowLayoutPanel>进行布局所包含控制一个接一个。</span><span class="sxs-lookup"><span data-stu-id="4565e-258">The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other.</span></span> <span data-ttu-id="4565e-259">它还将设置<xref:System.Windows.Forms.Control.AutoSize%2A>和<xref:System.Windows.Forms.AutoSizeMode>增加和缩小以适合其窗体的内容。</span><span class="sxs-lookup"><span data-stu-id="4565e-259">It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.</span></span>  
  
 [!code-csharp[Form.AutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoSize/CS/Form1.cs#1)]
 [!code-vb[Form.AutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="4565e-260">该值不是有效的 <see cref="T:System.Windows.Forms.AutoSizeMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-260">The value is not a valid <see cref="T:System.Windows.Forms.AutoSizeMode" /> value.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.AutoSizeMode" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AutoValidate">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.AutoValidate AutoValidate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoValidate AutoValidate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoValidate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoValidate As AutoValidate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AutoValidate AutoValidate { System::Windows::Forms::AutoValidate get(); void set(System::Windows::Forms::AutoValidate value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoValidate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-261">获取或设置一个值，该值指示当焦点更改时是否自动验证此容器内的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-261">Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-262">指示焦点更改时是否隐式验证所含控件的 <see cref="T:System.Windows.Forms.AutoValidate" /> 枚举值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-262">An <see cref="T:System.Windows.Forms.AutoValidate" /> enumerated value that indicates whether contained controls are implicitly validated on focus change.</span>
          </span>
          <span data-ttu-id="4565e-263">默认值为“继承”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-263">The default is Inherit.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.AutoValidate" />
      </Docs>
    </Member>
    <Member MemberName="AutoValidateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoValidateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoValidateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.AutoValidateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoValidateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoValidateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-264">当 <see cref="P:System.Windows.Forms.Form.AutoValidate" /> 属性更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-264">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoValidate" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-265">获取或设置控件的背景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-265">Gets or sets the background color for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-266">表示控件背景色的 <see cref="T:System.Drawing.Color" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-266">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span>
          </span>
          <span data-ttu-id="4565e-267">默认为 <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> 属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-267">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="CancelButton">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IButtonControl CancelButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IButtonControl CancelButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.CancelButton" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelButton As IButtonControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IButtonControl ^ CancelButton { System::Windows::Forms::IButtonControl ^ get(); void set(System::Windows::Forms::IButtonControl ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IButtonControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-268">获取或设置当用户按 Esc 键时单击的按钮控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-268">Gets or sets the button control that is clicked when the user presses the ESC key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-269">
            <see cref="T:System.Windows.Forms.IButtonControl" />，表示窗体的“取消”按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-269">An <see cref="T:System.Windows.Forms.IButtonControl" /> that represents the cancel button for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-270">窗体取消按钮是每当用户按下 ESC 键时单击该按钮控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-270">The cancel button for a form is the button control that is clicked whenever the user presses the ESC key.</span></span> <span data-ttu-id="4565e-271">必须是分配给此属性的按钮<xref:System.Windows.Forms.IButtonControl>当前窗体上或位于当前窗体上的容器。</span><span class="sxs-lookup"><span data-stu-id="4565e-271">The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.</span></span>  
  
 <span data-ttu-id="4565e-272">此属性，可指定用户在你的应用程序中按 ESC 键时要发生的默认操作。</span><span class="sxs-lookup"><span data-stu-id="4565e-272">This property allows you to designate a default action to occur when the user presses the ESC key in your application.</span></span> <span data-ttu-id="4565e-273">此属性可用于允许用户能够快速导航是允许他们只需按 ESC 键关闭窗口而不提交更改而不是手动单击取消按钮，用鼠标的一种简单形式。</span><span class="sxs-lookup"><span data-stu-id="4565e-273">You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.</span></span>  
  
 <span data-ttu-id="4565e-274"><xref:System.Windows.Forms.Form.CancelButton%2A> 可能无法工作如果窗体上的另一个控件截获 ESC 键。</span><span class="sxs-lookup"><span data-stu-id="4565e-274"><xref:System.Windows.Forms.Form.CancelButton%2A> may not work if another control on the form intercepts the ESC key.</span></span> <span data-ttu-id="4565e-275">例如，如果你有<xref:System.Windows.Forms.ComboBox>打开窗体上，将关闭 ESC<xref:System.Windows.Forms.ComboBox>而不是关闭窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-275">For example, if you have a <xref:System.Windows.Forms.ComboBox> open on your form, ESC will close the <xref:System.Windows.Forms.ComboBox> instead of closing the Form.</span></span>  
  
 <span data-ttu-id="4565e-276"><xref:System.Windows.Forms.IButtonControl>对象分配给<xref:System.Windows.Forms.Form.CancelButton%2A>必须在表单上可见，否则是按下 ESC 键将产生任何影响。</span><span class="sxs-lookup"><span data-stu-id="4565e-276">The <xref:System.Windows.Forms.IButtonControl> object assigned to <xref:System.Windows.Forms.Form.CancelButton%2A> must be visible on the form, or else pressing the ESC key will have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-277">下面的代码示例创建的新实例<xref:System.Windows.Forms.Form>和调用<xref:System.Windows.Forms.Form.ShowDialog%2A>窗体显示为对话框中的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-277">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="4565e-278">该示例设置<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>属性来更改到对话框的外观和表单的功能。</span><span class="sxs-lookup"><span data-stu-id="4565e-278">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="4565e-279">此示例还使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>方法的窗体的<xref:System.Windows.Forms.Control.Controls%2A>集合来添加两个<xref:System.Windows.Forms.Button>控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-279">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="4565e-280">该示例使用<xref:System.Windows.Forms.Form.HelpButton%2A>属性对话框中的标题栏中显示帮助按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-280">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
        <altmember cref="T:System.Windows.Forms.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="CenterToParent">
      <MemberSignature Language="C#" Value="protected void CenterToParent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CenterToParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CenterToParent" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CenterToParent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CenterToParent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4565e-281">使窗体在父窗体边界内居中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-281">Centers the position of the form within the bounds of the parent form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-282">不要调用<xref:System.Windows.Forms.Form.CenterToParent%2A>在代码中直接的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-282">Do not call the <xref:System.Windows.Forms.Form.CenterToParent%2A> method directly from your code.</span></span> <span data-ttu-id="4565e-283">与此相反，设置<xref:System.Windows.Forms.Form.StartPosition%2A>属性<xref:System.Windows.Forms.FormStartPosition.CenterParent>。</span><span class="sxs-lookup"><span data-stu-id="4565e-283">Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterParent>.</span></span>  
  
 <span data-ttu-id="4565e-284">如果窗体或对话框为顶级，则<xref:System.Windows.Forms.Form.CenterToParent%2A>中心相对于屏幕或桌面上窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-284">If the form or dialog is top-level, then <xref:System.Windows.Forms.Form.CenterToParent%2A> centers the form with respect to the screen or desktop.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.FormStartPosition.CenterParent" />
        <altmember cref="M:System.Windows.Forms.Form.CenterToScreen" />
      </Docs>
    </Member>
    <Member MemberName="CenterToScreen">
      <MemberSignature Language="C#" Value="protected void CenterToScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CenterToScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CenterToScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CenterToScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CenterToScreen();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4565e-285">使窗体在当前屏幕上居中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-285">Centers the form on the current screen.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-286">请勿在代码中直接调用此。</span><span class="sxs-lookup"><span data-stu-id="4565e-286">Do not call this directly from your code.</span></span> <span data-ttu-id="4565e-287">与此相反，设置<xref:System.Windows.Forms.Form.StartPosition%2A>属性<xref:System.Windows.Forms.FormStartPosition.CenterScreen>。</span><span class="sxs-lookup"><span data-stu-id="4565e-287">Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterScreen>.</span></span>  
  
 <span data-ttu-id="4565e-288"><xref:System.Windows.Forms.Form.CenterToScreen%2A>方法使用下面的优先级列表以确定用于中心窗体的屏幕：</span><span class="sxs-lookup"><span data-stu-id="4565e-288">The <xref:System.Windows.Forms.Form.CenterToScreen%2A> method uses the following priority list to determine the screen used to center the form:</span></span>  
  
1.  <span data-ttu-id="4565e-289"><xref:System.Windows.Forms.Form.Owner%2A>窗体的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-289">The <xref:System.Windows.Forms.Form.Owner%2A> property of the form.</span></span>  
  
2.  <span data-ttu-id="4565e-290">窗体 HWND 所有者。</span><span class="sxs-lookup"><span data-stu-id="4565e-290">The HWND owner of the form.</span></span>  
  
3.  <span data-ttu-id="4565e-291">屏幕当前具有鼠标光标。</span><span class="sxs-lookup"><span data-stu-id="4565e-291">The screen that currently has the mouse cursor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.FormStartPosition.CenterScreen" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="ClientSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ClientSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ClientSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ClientSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ClientSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-292">获取或设置窗体工作区的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-292">Gets or sets the size of the client area of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-293">
            <see cref="T:System.Drawing.Size" />，表示窗体工作区的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-293">A <see cref="T:System.Drawing.Size" /> that represents the size of the form's client area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-294">窗体的工作区的大小是不包括边框和标题栏的窗体的大小。</span><span class="sxs-lookup"><span data-stu-id="4565e-294">The size of the client area of the form is the size of the form excluding the borders and the title bar.</span></span> <span data-ttu-id="4565e-295">窗体的工作区是可在其中放置控件在窗体区域。</span><span class="sxs-lookup"><span data-stu-id="4565e-295">The client area of a form is the area within a form where controls can be placed.</span></span> <span data-ttu-id="4565e-296">可以使用此属性来获取正确的尺寸时执行图形操作或大小和位置表单上的控件时。</span><span class="sxs-lookup"><span data-stu-id="4565e-296">You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form.</span></span> <span data-ttu-id="4565e-297">若要获取整个窗体的大小，请使用<xref:System.Windows.Forms.Form.Size%2A>属性或使用的各个属性<xref:System.Windows.Forms.Control.Height%2A>和<xref:System.Windows.Forms.Control.Width%2A>。</span><span class="sxs-lookup"><span data-stu-id="4565e-297">To get the size of the entire form, use the <xref:System.Windows.Forms.Form.Size%2A> property or use the individual properties <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-298">当前无法绑定到使用应用程序设置此属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-298">You cannot currently bind to this property using application settings.</span></span> <span data-ttu-id="4565e-299">应用程序设置的详细信息，请参阅[应用程序设置概述](~/docs/framework/winforms/advanced/application-settings-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-299">For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-300">下面的代码示例创建的事件处理程序<xref:System.Windows.Forms.Control.Resize>窗体的事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-300">The following code example creates an event handler for the <xref:System.Windows.Forms.Control.Resize> event of a form.</span></span> <span data-ttu-id="4565e-301">事件处理程序使用<xref:System.Windows.Forms.Form.ClientSize%2A>属性的窗体，以<xref:System.Windows.Forms.Button>控件名为`button1`填充整个客户端区域的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-301">The event handler uses the <xref:System.Windows.Forms.Form.ClientSize%2A> property of the form to make a <xref:System.Windows.Forms.Button> control named `button1` fill the entire client area of the form.</span></span>  
  
 [!code-cpp[Classic Form.ClientSize Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ClientSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ClientSize Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ClientSize Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ClientSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ClientSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Control.Width" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4565e-302">关闭窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-302">Closes the form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-303">关闭窗体时，在该对象内创建的所有资源都关闭和释放该窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-303">When a form is closed, all resources created within the object are closed and the form is disposed.</span></span> <span data-ttu-id="4565e-304">你可以通过处理来防止在运行时关闭窗体<xref:System.Windows.Forms.Form.Closing>事件，并设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.ComponentModel.CancelEventArgs>作为参数传递给事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-304">You can prevent the closing of a form at run time by handling the <xref:System.Windows.Forms.Form.Closing> event and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed as a parameter to your event handler.</span></span> <span data-ttu-id="4565e-305">如果你在关闭窗体是你的应用程序启动窗体，你的应用程序结束。</span><span class="sxs-lookup"><span data-stu-id="4565e-305">If the form you are closing is the startup form of your application, your application ends.</span></span>  
  
 <span data-ttu-id="4565e-306">以下两种情况时窗体不会被释放上`Close`当 （1） 它是一个多文档界面 (MDI) 应用程序的一部分和窗体不可见，则和 （2） 你具有显示窗体使用<xref:System.Windows.Forms.Form.ShowDialog%2A>。</span><span class="sxs-lookup"><span data-stu-id="4565e-306">The two conditions when a form is not disposed on `Close` is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <xref:System.Windows.Forms.Form.ShowDialog%2A>.</span></span> <span data-ttu-id="4565e-307">在这些情况下，你将需要调用<xref:System.Windows.Forms.Form.Dispose%2A>手动来标记的所有垃圾回收的窗体的控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-307">In these cases, you will need to call <xref:System.Windows.Forms.Form.Dispose%2A> manually to mark all of the form's controls for garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-308">当<xref:System.Windows.Forms.Form.Close%2A>方法调用<xref:System.Windows.Forms.Form>显示为一个无模式窗口，则不能调用<xref:System.Windows.Forms.Control.Show%2A>方法，以使表单可见，因为已释放了窗体的资源。</span><span class="sxs-lookup"><span data-stu-id="4565e-308">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="4565e-309">若要隐藏窗体，然后将其可见，请使用<xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-309">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4565e-310">之前[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]2.0，<xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType>和<xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType>事件不是时引发<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>调用方法以退出应用程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-310">Prior to the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0, the <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="4565e-311">如果你有在上述任一事件，必须执行的验证代码，则应调用<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>单独之前调用每个打开的窗体的方法<xref:System.Windows.Forms.Application.Exit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-311">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4565e-312">在创建句柄时关闭了窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-312">The form was closed while a handle was being created.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4565e-313">当 <see cref="E:System.Windows.Forms.Form.Activated" /> 设置为 <see cref="P:System.Windows.Forms.Form.WindowState" /> 时，无法从 <see cref="F:System.Windows.Forms.FormWindowState.Maximized" /> 事件调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-313">You cannot call this method from the <see cref="E:System.Windows.Forms.Form.Activated" /> event when <see cref="P:System.Windows.Forms.Form.WindowState" /> is set to <see cref="F:System.Windows.Forms.FormWindowState.Maximized" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="E:System.Windows.Forms.Form.Closing" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-314">关闭窗体时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-314">Occurs when the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="4565e-315"><xref:System.Windows.Forms.Form.Closed>事件是.NET Framework 2.0 版中过时的; 使用<xref:System.Windows.Forms.Form.FormClosed>事件相反。</span><span class="sxs-lookup"><span data-stu-id="4565e-315">The <xref:System.Windows.Forms.Form.Closed> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosed> event instead.</span></span>  
  
 <span data-ttu-id="4565e-316">由用户或通过关闭窗体后，将发生此事件<xref:System.Windows.Forms.Form.Close%2A>形式的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-316">This event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method of the form.</span></span> <span data-ttu-id="4565e-317">若要阻止关闭窗体，处理<xref:System.Windows.Forms.Form.Closing>事件并设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.ComponentModel.CancelEventArgs>传递给事件处理程序`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-317">To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.Closing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="4565e-318">若要执行任务，如释放资源由窗体和保存在窗体中输入信息或更新其父窗体，你可以使用此事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-318">You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4565e-319"><xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType>和<xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType>事件不是时引发<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>调用方法以退出应用程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-319">The <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="4565e-320">如果你有在上述任一事件，必须执行的验证代码，则应调用<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>单独之前调用每个打开的窗体的方法<xref:System.Windows.Forms.Application.Exit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-320">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 <span data-ttu-id="4565e-321">如果窗体是 MDI 父窗体，<xref:System.Windows.Forms.Form.Closing>所有 MDI 子窗体的事件引发 MDI 父窗体的<xref:System.Windows.Forms.Form.Closing>引发事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-321">If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="4565e-322">此外，<xref:System.Windows.Forms.Form.Closed>之前，将引发事件的所有 MDI 子窗体<xref:System.Windows.Forms.Form.Closed>引发 MDI 父窗体的事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-322">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span>  
  
 <span data-ttu-id="4565e-323">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-323">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-324">下面的代码示例演示如何使用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>， <xref:System.Windows.Forms.Form.Closed>， <xref:System.Windows.Forms.Form.Load>， <xref:System.Windows.Forms.Form.Activated>，和<xref:System.Windows.Forms.Form.Activate%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-324">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="4565e-325">若要运行该示例，请将以下代码粘贴在窗体调用`Form1`包含<xref:System.Windows.Forms.Button>调用`Button1`和两个<xref:System.Windows.Forms.Label>控件称为`Label1`和`Label2`。</span><span class="sxs-lookup"><span data-stu-id="4565e-325">To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Closing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closing As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Closing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-326">关闭窗体时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-326">Occurs when the form is closing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="4565e-327"><xref:System.Windows.Forms.Form.Closing>事件是.NET Framework 2.0 版中过时的; 使用<xref:System.Windows.Forms.Form.FormClosing>事件相反。</span><span class="sxs-lookup"><span data-stu-id="4565e-327">The <xref:System.Windows.Forms.Form.Closing> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosing> event instead.</span></span>  
  
 <span data-ttu-id="4565e-328"><xref:System.Windows.Forms.Form.Closing>事件发生，因为正在关闭窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-328">The <xref:System.Windows.Forms.Form.Closing> event occurs as the form is being closed.</span></span> <span data-ttu-id="4565e-329">关闭窗体时，释放所有资源，在该对象内创建和释放该窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-329">When a form is closed, all resources created within the object are released and the form is disposed.</span></span> <span data-ttu-id="4565e-330">如果您取消此事件，该窗体保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="4565e-330">If you cancel this event, the form remains opened.</span></span> <span data-ttu-id="4565e-331">若要取消窗体的关闭，<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.ComponentModel.CancelEventArgs>传递给事件处理程序`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-331">To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="4565e-332">当窗体显示为模式对话框中时，单击**关闭**按钮 （带有窗体的右上角的 X 按钮） 将导致要隐藏的窗体和<xref:System.Windows.Forms.Form.DialogResult%2A>属性设置为`DialogResult.Cancel`。</span><span class="sxs-lookup"><span data-stu-id="4565e-332">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="4565e-333">你可以重写的值分配给<xref:System.Windows.Forms.Form.DialogResult%2A>属性，当用户单击**关闭**通过设置按钮<xref:System.Windows.Forms.Form.DialogResult%2A>的事件处理程序中的属性<xref:System.Windows.Forms.Form.Closing>窗体的事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-333">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-334">当<xref:System.Windows.Forms.Form.Close%2A>方法调用<xref:System.Windows.Forms.Form>显示为一个无模式窗口，则不能调用<xref:System.Windows.Forms.Control.Show%2A>方法，以使表单可见，因为已释放了窗体的资源。</span><span class="sxs-lookup"><span data-stu-id="4565e-334">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="4565e-335">若要隐藏窗体，然后将其可见，请使用<xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-335">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4565e-336"><xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType>和<xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType>事件不是时引发<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>调用方法以退出应用程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-336">The <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="4565e-337">如果你有在上述任一事件，必须执行的验证代码，则应调用<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>单独之前调用每个打开的窗体的方法<xref:System.Windows.Forms.Application.Exit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-337">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 <span data-ttu-id="4565e-338">如果窗体是 MDI 父窗体，<xref:System.Windows.Forms.Form.Closing>所有 MDI 子窗体的事件引发 MDI 父窗体的<xref:System.Windows.Forms.Form.Closing>引发事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-338">If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="4565e-339">此外，<xref:System.Windows.Forms.Form.Closed>之前，将引发事件的所有 MDI 子窗体<xref:System.Windows.Forms.Form.Closed>引发 MDI 父窗体的事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-339">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span> <span data-ttu-id="4565e-340">取消<xref:System.Windows.Forms.Form.Closing>的 MDI 子窗体的事件不会阻止<xref:System.Windows.Forms.Form.Closing>引发 MDI 父窗体的事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-340">Canceling the <xref:System.Windows.Forms.Form.Closing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.Closing> event of the MDI parent form from being raised.</span></span> <span data-ttu-id="4565e-341">但是，取消该事件将设置为`true`<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.ComponentModel.CancelEventArgs>，作为参数传递到父窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-341">However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> that is passed as a parameter to the parent form.</span></span> <span data-ttu-id="4565e-342">若要强制所有 MDI 父和子窗体关闭，设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`false`在 MDI 父窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-342">To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.</span></span>  
  
 <span data-ttu-id="4565e-343">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-343">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-344">下面的代码示例使用<xref:System.Windows.Forms.Form.Closing>以测试是否中的文本<xref:System.Windows.Forms.TextBox>已更改。</span><span class="sxs-lookup"><span data-stu-id="4565e-344">The following code example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed.</span></span> <span data-ttu-id="4565e-345">如果具有，则要求用户是否将所做的更改保存到文件。</span><span class="sxs-lookup"><span data-stu-id="4565e-345">If it has, the user is asked whether to save the changes to a file.</span></span>  
  
 [!code-cpp[Form.Closing#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Closing/CPP/form1.cpp#1)]
 [!code-csharp[Form.Closing#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Closing/CS/form1.cs#1)]
 [!code-vb[Form.Closing#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Closing/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ControlBox">
      <MemberSignature Language="C#" Value="public bool ControlBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ControlBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlBox { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-346">获取或设置一个值，该值指示在该窗体的标题栏中是否显示控件框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-346">Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-347">
            <see langword="true" /> 如果窗体的窗体，则右上角显示控件框否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-347">
              <see langword="true" /> if the form displays a control box in the upper-right corner of the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-348">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-348">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-349">如果<xref:System.Windows.Forms.Form.ControlBox%2A>属性设置为`true`中的标题栏的右上角显示控件框。</span><span class="sxs-lookup"><span data-stu-id="4565e-349">If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is set to `true`, the control box is displayed in the upper-right corner of the caption bar.</span></span> <span data-ttu-id="4565e-350">控件框可以包含最小化、 最大化，并帮助此外关闭按钮的按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-350">The control box can include minimize, maximize, and help buttons in addition to a close button.</span></span> <span data-ttu-id="4565e-351">有关`ControlBox`属性产生任何影响，还必须设置窗体的<xref:System.Windows.Forms.Form.FormBorderStyle%2A>属性<xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>，或<xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4565e-351">For the `ControlBox` property to have any effect, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4565e-352">如果你设置<xref:System.Windows.Forms.Form.ControlBox%2A>到`false`并且还设置<xref:System.Windows.Forms.Form.Location%2A>属性，<xref:System.Windows.Forms.Form.Size%2A>窗体的属性未更新以反映该窗体的非工作区已被隐藏。</span><span class="sxs-lookup"><span data-stu-id="4565e-352">If you set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and also set the <xref:System.Windows.Forms.Form.Location%2A> property, the <xref:System.Windows.Forms.Form.Size%2A> property of the form is not updated to reflect that the non-client area of the form has been hidden.</span></span> <span data-ttu-id="4565e-353">若要解决此问题，请将更改的代码放<xref:System.Windows.Forms.Form.Location%2A>中的属性<xref:System.Windows.Forms.Control.HandleCreated>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-353">To fix this problem, put the code that alters the <xref:System.Windows.Forms.Form.Location%2A> property in the <xref:System.Windows.Forms.Control.HandleCreated> event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-354">当设置为`false`、<xref:System.Windows.Forms.Form.ControlBox%2A>属性不起作用创建时最大化显示多文档界面 (MDI) 子窗体上的。</span><span class="sxs-lookup"><span data-stu-id="4565e-354">When set to `false`, the <xref:System.Windows.Forms.Form.ControlBox%2A> property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-355">下面的代码示例使用<xref:System.Windows.Forms.Form.ControlBox%2A>， <xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>属性创建不具有任何边框或标题中的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-355">The following code example uses the <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to create a form that does not have any border or caption box.</span></span> <span data-ttu-id="4565e-356">在此示例中创建的窗体无法用于创建应用程序的初始屏幕。</span><span class="sxs-lookup"><span data-stu-id="4565e-356">The form created in this example could be used to create a splash screen for an application.</span></span> <span data-ttu-id="4565e-357">该示例需要示例的方法是在窗体类中定义并在初始化窗体时调用。</span><span class="sxs-lookup"><span data-stu-id="4565e-357">The example requires that the example's method is defined in a form class and called when the form is being initialized.</span></span>  
  
 [!code-cpp[Classic Form.ControlBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ControlBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ControlBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ControlBox Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ControlBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ControlBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ShowIcon" />
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4565e-358">为控件创建控件集合的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-358">Creates a new instance of the control collection for the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-359">分配给控件的 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-359">A new instance of <see cref="T:System.Windows.Forms.Control.ControlCollection" /> assigned to the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControlsInstance" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4565e-360">为窗体创建句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-360">Creates the handle for the form.</span>
          </span>
          <span data-ttu-id="4565e-361">如果派生类重写了该函数，它必须调用基实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-361">If a derived class overrides this function, it must call the base implementation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4565e-362">
            <see cref="T:System.Windows.Forms.Form" /> 的句柄已创建。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-362">A handle for this <see cref="T:System.Windows.Forms.Form" /> has already been created.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-363">获取创建控件句柄时所需要的创建参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-363">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-364">
            <see cref="T:System.Windows.Forms.CreateParams" />，包含创建控件的句柄时所需的创建参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-364">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-365">当窗体失去焦点并不再是活动窗体时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-365">Occurs when the form loses focus and is no longer the active form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-366">此事件可用于执行任务，例如已停用窗体中的数据更新应用程序中的另一个窗口。</span><span class="sxs-lookup"><span data-stu-id="4565e-366">You can use this event to perform tasks such as updating another window in your application with data from the deactivated form.</span></span>  
  
 <span data-ttu-id="4565e-367">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-367">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-368">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-368">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-369">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.Deactivate>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-369">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.Deactivate> event.</span></span> <span data-ttu-id="4565e-370">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-370">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-371">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-371">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-372">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-372">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-373">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.Deactivate>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-373">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.Deactivate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#393](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#393)]
 [!code-vb[System.Windows.Forms.EventExamples#393](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#393)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="M:System.Windows.Forms.Form.Activate" />
        <altmember cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-374">获取控件支持的默认输入法编辑器 (IME) 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-374">Gets the default Input Method Editor (IME) mode supported by the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-375">
            <see cref="T:System.Windows.Forms.ImeMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-375">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-376">输入的法编辑器 (IME) 是一个程序，允许用户通过使用标准键盘输入复杂字符和符号，如日语汉字字符。</span><span class="sxs-lookup"><span data-stu-id="4565e-376">An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</span></span>  
  
 <span data-ttu-id="4565e-377">在中实现<xref:System.Windows.Forms.Form>类，此属性始终返回<xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType>值。</span><span class="sxs-lookup"><span data-stu-id="4565e-377">As implemented in the <xref:System.Windows.Forms.Form> class, this property always returns the <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="4565e-378">此属性的值分配给<xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-378">The value of this property is assigned to the <xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-379">获取控件的默认大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-379">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-380">控件的默认 <see cref="T:System.Drawing.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-380">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected override void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="4565e-381">要处理的 Windows <see cref="T:System.Windows.Forms.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-381">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-382">向默认窗口过程发送指定消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-382">Sends the specified message to the default window procedure.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DesktopBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle DesktopBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DesktopBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DesktopBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property DesktopBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle DesktopBounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-383">获取或设置 Windows 桌面上窗体的大小和位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-383">Gets or sets the size and location of the form on the Windows desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-384">
            <see cref="T:System.Drawing.Rectangle" />，它使用桌面坐标表示 Windows 桌面上窗体的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-384">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the form on the Windows desktop using desktop coordinates.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-385">桌面坐标相对于屏幕，其中不包括任务栏的工作区域。</span><span class="sxs-lookup"><span data-stu-id="4565e-385">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="4565e-386">桌面坐标系统是基于像素的。</span><span class="sxs-lookup"><span data-stu-id="4565e-386">The coordinate system of the desktop is pixel-based.</span></span> <span data-ttu-id="4565e-387">如果你的应用程序正在运行的多个监视器系统上，在窗体坐标是合并后的桌面的坐标。</span><span class="sxs-lookup"><span data-stu-id="4565e-387">If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.</span></span>  
  
 <span data-ttu-id="4565e-388">此属性可用于调整大小和在 Windows 桌面上的位置相对于其他窗体或应用程序的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-388">You can use this property to size and position a form relative to other forms or applications on the Windows desktop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-389">下面的代码示例设置的大小和窗体的位置，以便该窗体是定位 50 像素，距左边框的顶部的桌面的桌面版和 50 像素。</span><span class="sxs-lookup"><span data-stu-id="4565e-389">The following code example sets the size and position of a form so that the form is positioned 50 pixels from the left border of the desktop and 50 pixels from the top of the desktop.</span></span> <span data-ttu-id="4565e-390">此示例需要在窗体类中定义方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-390">This example requires that the method is defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.DesktopBounds Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DesktopBounds Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DesktopBounds Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.DesktopLocation" />
      </Docs>
    </Member>
    <Member MemberName="DesktopLocation">
      <MemberSignature Language="C#" Value="public System.Drawing.Point DesktopLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point DesktopLocation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DesktopLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property DesktopLocation As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point DesktopLocation { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-391">获取或设置 Windows 桌面上窗体的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-391">Gets or sets the location of the form on the Windows desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-392">
            <see cref="T:System.Drawing.Point" />，表示桌面上窗体的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-392">A <see cref="T:System.Drawing.Point" /> that represents the location of the form on the desktop.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-393">桌面坐标相对于屏幕，其中不包括任务栏的工作区域。</span><span class="sxs-lookup"><span data-stu-id="4565e-393">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="4565e-394">桌面坐标系统是基于像素。</span><span class="sxs-lookup"><span data-stu-id="4565e-394">The coordinate system of the desktop is pixel based.</span></span> <span data-ttu-id="4565e-395">如果你的应用程序正在运行的多监视器系统上，在窗体的坐标为合并后的桌面的坐标。</span><span class="sxs-lookup"><span data-stu-id="4565e-395">If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.</span></span>  
  
 <span data-ttu-id="4565e-396">此属性可用于在 Windows 桌面上的位置相对于其他窗体和应用程序窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-396">You can use this property to position your form relative to other forms and applications on the Windows desktop.</span></span>  
  
 <span data-ttu-id="4565e-397">如果调用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>方法之前调用<xref:System.Windows.Forms.Form.Show%2A>方法，将在其默认位置，它由系统定位你的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-397">If you call the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method before calling the <xref:System.Windows.Forms.Form.Show%2A> method, your form will be positioned at its default location, which is determined by the operating system.</span></span> <span data-ttu-id="4565e-398">有关窗口定位的详细信息，请参阅在 MSDN 库中的"窗口功能"文档"窗口大小和位置"部分http://msdn.microsoft.com/library。</span><span class="sxs-lookup"><span data-stu-id="4565e-398">For more information about window positioning, see the "Window Size and Position" section of the "Window Features" document in the MSDN library at http://msdn.microsoft.com/library.</span></span>  
  
 <span data-ttu-id="4565e-399">如果调用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>之后调用<xref:System.Windows.Forms.Form.Show%2A>，你的窗体将位于你指定的位置。</span><span class="sxs-lookup"><span data-stu-id="4565e-399">If you call <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> after calling <xref:System.Windows.Forms.Form.Show%2A>, your form will be positioned at the location you specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-400">下面的代码示例设置窗体的位置，以便窗体为定位的 100 个像素，距左边框的顶部的桌面的桌面和 100 个像素。</span><span class="sxs-lookup"><span data-stu-id="4565e-400">The following code example sets the position of a form so that the form is positioned 100 pixels from the left border of the desktop and 100 pixels from the top of the desktop.</span></span> <span data-ttu-id="4565e-401">此示例需要已在窗体类中定义的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-401">This example requires that method has been defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.DesktopLocation Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DesktopLocation Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DesktopLocation Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-402">获取或设置窗体的对话框结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-402">Gets or sets the dialog result for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-403">
            <see cref="T:System.Windows.Forms.DialogResult" />，表示当窗体用作对话框时该窗体的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-403">A <see cref="T:System.Windows.Forms.DialogResult" /> that represents the result of the form when used as a dialog box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-404">窗体的对话框结果是它显示为模式对话框时，从窗体返回的值。</span><span class="sxs-lookup"><span data-stu-id="4565e-404">The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box.</span></span> <span data-ttu-id="4565e-405">如果该窗体显示为对话框中，设置此属性的值<xref:System.Windows.Forms.DialogResult>枚举设置窗体的对话框结果的值，隐藏模式对话框，并将控制权返回给调用窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-405">If the form is displayed as a dialog box, setting this property with a value from the <xref:System.Windows.Forms.DialogResult> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form.</span></span> <span data-ttu-id="4565e-406">此属性通常由设置<xref:System.Windows.Forms.Button.DialogResult%2A>属性<xref:System.Windows.Forms.Button>窗体上的控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-406">This property is typically set by the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> control on the form.</span></span> <span data-ttu-id="4565e-407">当用户单击<xref:System.Windows.Forms.Button>控制分配给值<xref:System.Windows.Forms.Button.DialogResult%2A>属性<xref:System.Windows.Forms.Button>分配给<xref:System.Windows.Forms.Form.DialogResult%2A>窗体的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-407">When the user clicks the <xref:System.Windows.Forms.Button> control, the value assigned to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of the <xref:System.Windows.Forms.Button> is assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.</span></span>  
  
 <span data-ttu-id="4565e-408">当窗体显示为模式对话框中时，单击**关闭**按钮 （带有中窗体的右上角的 X 按钮） 将导致要隐藏的窗体和<xref:System.Windows.Forms.Form.DialogResult%2A>属性设置为`DialogResult.Cancel`。</span><span class="sxs-lookup"><span data-stu-id="4565e-408">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X in the top-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="4565e-409"><xref:System.Windows.Forms.Form.Close%2A>方法时不会自动调用用户单击**关闭**按钮的对话框中设置的值或<xref:System.Windows.Forms.Form.DialogResult%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-409">The <xref:System.Windows.Forms.Form.Close%2A> method is not automatically called when the user clicks the **Close** button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="4565e-410">相反，窗体区域不可用，可以再次显示而无需创建对话框中的新实例。</span><span class="sxs-lookup"><span data-stu-id="4565e-410">Instead, the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="4565e-411">由于此行为，必须调用<xref:System.Windows.Forms.Control.Dispose%2A>时窗体应用程序不再需要该窗体的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-411">Because of this behavior, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="4565e-412">此属性可用于确定如何将对话框中关闭以便正确处理在对话框中执行的操作。</span><span class="sxs-lookup"><span data-stu-id="4565e-412">You can use this property to determine how a dialog box is closed in order to properly process the actions performed in the dialog box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-413">你可以重写的值分配给<xref:System.Windows.Forms.Form.DialogResult%2A>属性，当用户单击**关闭**通过设置按钮<xref:System.Windows.Forms.Form.DialogResult%2A>的事件处理程序中的属性<xref:System.Windows.Forms.Form.Closing>窗体的事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-413">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-414">如果<xref:System.Windows.Forms.Form>显示无模式窗口中，返回的值为<xref:System.Windows.Forms.Form.DialogResult%2A>属性可能不返回值分配给窗体，因为关闭窗体时自动释放窗体的资源。</span><span class="sxs-lookup"><span data-stu-id="4565e-414">If a <xref:System.Windows.Forms.Form> is displayed as a modeless window, the value returned by the <xref:System.Windows.Forms.Form.DialogResult%2A> property might not return a value assigned to the form because the form's resources are automatically released when the form is closed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-415">下面的代码示例将窗体显示为对话框中，并显示消息框，该值指示是否通过引用被单击的窗体的确定或取消按钮<xref:System.Windows.Forms.Form.DialogResult%2A>窗体的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-415">The following code example displays a form as a dialog box and displays a message box indicating whether the OK or Cancel button of the form was clicked by referencing the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.</span></span>  
  
 [!code-cpp[Classic Form.DialogResult Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DialogResult Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DialogResult Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DialogResult Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DialogResult Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DialogResult Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="4565e-416">指定值不在有效值范围内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-416">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.DialogResult" />
        <altmember cref="P:System.Windows.Forms.Button.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="4565e-417">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-417">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-418">处置由 <see cref="T:System.Windows.Forms.Form" /> 占用的资源（内存除外）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-418">Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-419">此方法称为由公共`Dispose`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-419">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="4565e-420">`Dispose` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-420">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="4565e-421"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="4565e-421"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="4565e-422">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Windows.Forms.Form> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="4565e-422">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Form> references.</span></span> <span data-ttu-id="4565e-423">此方法调用每个引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-423">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 <span data-ttu-id="4565e-424"><xref:System.Windows.Forms.Form.Dispose%2A> 如果使用显示窗体将自动调用<xref:System.Windows.Forms.Form.Show%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-424"><xref:System.Windows.Forms.Form.Dispose%2A> will be called automatically if the form is shown using the <xref:System.Windows.Forms.Form.Show%2A> method.</span></span> <span data-ttu-id="4565e-425">如果另一种方法，如<xref:System.Windows.Forms.Form.ShowDialog%2A>使用时，或根本永远不会显示窗体，则必须调用<xref:System.Windows.Forms.Form.Dispose%2A>中你的应用程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-425">If another method such as <xref:System.Windows.Forms.Form.ShowDialog%2A> is used, or the form is never shown at all, you must call <xref:System.Windows.Forms.Form.Dispose%2A> yourself within your application.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-426">
              <see langword="Dispose" /> 可以由其他对象多次调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-426">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="4565e-427">重写 <see langword="Dispose(Boolean)" /> 时，请注意不要引用在以前调用 <see langword="Dispose" /> 时已释放的对象。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-427">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="4565e-428">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-428">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="4565e-429">有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-429">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-430">当前显示窗体的显示设备上的 DPI 设置更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-430">Occurs when the DPI setting changes on the display device where the form is currently displayed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormBorderStyle FormBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormBorderStyle FormBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.FormBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FormBorderStyle As FormBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormBorderStyle FormBorderStyle { System::Windows::Forms::FormBorderStyle get(); void set(System::Windows::Forms::FormBorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-431">获取或设置窗体的边框样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-431">Gets or sets the border style of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-432">
            <see cref="T:System.Windows.Forms.FormBorderStyle" />，表示要为窗体显示的边框样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-432">A <see cref="T:System.Windows.Forms.FormBorderStyle" /> that represents the style of border to display for the form.</span>
          </span>
          <span data-ttu-id="4565e-433">默认值为 <see langword="FormBorderStyle.Sizable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-433">The default is <see langword="FormBorderStyle.Sizable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-434">窗体的边框样式确定的外边缘的窗体的显示方式。</span><span class="sxs-lookup"><span data-stu-id="4565e-434">The border style of the form determines how the outer edge of the form appears.</span></span> <span data-ttu-id="4565e-435">除了更改窗体的边框显示，某些边框样式阻止窗体的大小。</span><span class="sxs-lookup"><span data-stu-id="4565e-435">In addition to changing the border display for a form, certain border styles prevent the form from being sized.</span></span> <span data-ttu-id="4565e-436">例如，`FormBorderStyle.FixedDialog`边框样式更改为的对话框中的窗体的边框，并阻止窗体在正调整大小。</span><span class="sxs-lookup"><span data-stu-id="4565e-436">For example, the `FormBorderStyle.FixedDialog` border style changes the border of the form to that of a dialog box and prevents the form from being resized.</span></span> <span data-ttu-id="4565e-437">大小或窗体的标题栏区域的可用性，还会影响的边框样式。</span><span class="sxs-lookup"><span data-stu-id="4565e-437">The border style can also affect the size or availability of the caption bar section of a form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-438">与<xref:System.Windows.Forms.FormBorderStyle.Sizable>样式，就是无法调整大小窗口下面某些最小值，即使已设置<xref:System.Windows.Forms.Form.ControlBox%2A>到`false`并分配到一个零长度字符串<xref:System.Windows.Forms.Form.Text%2A>。</span><span class="sxs-lookup"><span data-stu-id="4565e-438">With the <xref:System.Windows.Forms.FormBorderStyle.Sizable> style, it is impossible to resize the window below a certain minimum value, even if you have set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and assigned a zero-length string to <xref:System.Windows.Forms.Form.Text%2A>.</span></span> <span data-ttu-id="4565e-439">请解决这考虑通过使用<xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow>改为样式。</span><span class="sxs-lookup"><span data-stu-id="4565e-439">Consider working around this by using the <xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow> style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-440">下面的代码示例创建的新实例<xref:System.Windows.Forms.Form>和调用<xref:System.Windows.Forms.Form.ShowDialog%2A>窗体显示为对话框中的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-440">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="4565e-441">该示例设置<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>属性来更改到对话框的外观和表单的功能。</span><span class="sxs-lookup"><span data-stu-id="4565e-441">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="4565e-442">此示例还使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>方法的窗体的<xref:System.Windows.Forms.Control.Controls%2A>集合来添加两个<xref:System.Windows.Forms.Button>控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-442">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="4565e-443">该示例使用<xref:System.Windows.Forms.Form.HelpButton%2A>属性对话框中的标题栏中显示帮助按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-443">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="4565e-444">指定值不在有效值范围内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-444">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="FormClosed">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.FormClosedEventHandler FormClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.FormClosedEventHandler FormClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.FormClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormClosed As FormClosedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::FormClosedEventHandler ^ FormClosed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormClosedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-445">关闭窗体后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-445">Occurs after the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-446"><xref:System.Windows.Forms.Form.FormClosed>事件发生在由用户或通过关闭窗体之后<xref:System.Windows.Forms.Form.Close%2A>方法或<xref:System.Windows.Forms.Application.Exit%2A>方法<xref:System.Windows.Forms.Application>类。</span><span class="sxs-lookup"><span data-stu-id="4565e-446">The <xref:System.Windows.Forms.Form.FormClosed> event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method or the <xref:System.Windows.Forms.Application.Exit%2A> method of the <xref:System.Windows.Forms.Application> class.</span></span> <span data-ttu-id="4565e-447">若要阻止关闭窗体，处理<xref:System.Windows.Forms.Form.FormClosing>事件并设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.ComponentModel.CancelEventArgs>传递给事件处理程序`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-447">To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.FormClosing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="4565e-448">若要执行任务，如释放资源由窗体和保存在窗体中输入信息或更新其父窗体，你可以使用此事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-448">You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</span></span>  
  
 <span data-ttu-id="4565e-449">如果窗体是多文档界面 (MDI) 父窗体，<xref:System.Windows.Forms.Form.FormClosing>所有 MDI 子窗体的事件引发 MDI 父窗体的<xref:System.Windows.Forms.Form.FormClosing>引发事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-449">If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised.</span></span> <span data-ttu-id="4565e-450">同样，<xref:System.Windows.Forms.Form.FormClosed>之前，将引发事件的所有 MDI 子窗体<xref:System.Windows.Forms.Form.FormClosed>引发 MDI 父窗体的事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-450">Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.</span></span>  
  
 <span data-ttu-id="4565e-451">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-451">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-452">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-452">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-453">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.FormClosed>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-453">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.FormClosed> event.</span></span> <span data-ttu-id="4565e-454">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-454">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-455">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-455">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-456">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-456">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-457">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.FormClosed>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-457">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.FormClosed> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#395](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#395)]
 [!code-vb[System.Windows.Forms.EventExamples#395](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#395)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="M:System.Windows.Forms.Application.Exit" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="FormClosing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.FormClosingEventHandler FormClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.FormClosingEventHandler FormClosing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.FormClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormClosing As FormClosingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::FormClosingEventHandler ^ FormClosing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormClosingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-458">关闭窗体前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-458">Occurs before the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-459"><xref:System.Windows.Forms.Form.FormClosing>事件发生，因为正在关闭窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-459">The <xref:System.Windows.Forms.Form.FormClosing> event occurs as the form is being closed.</span></span> <span data-ttu-id="4565e-460">关闭窗体时，它将被释放，释放与表单关联的所有资源。</span><span class="sxs-lookup"><span data-stu-id="4565e-460">When a form is closed, it is disposed, releasing all resources associated with the form.</span></span> <span data-ttu-id="4565e-461">如果您取消此事件，该窗体保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="4565e-461">If you cancel this event, the form remains opened.</span></span> <span data-ttu-id="4565e-462">若要取消窗体的关闭，<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Windows.Forms.FormClosingEventArgs>传递给事件处理程序`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-462">To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="4565e-463">当窗体显示为模式对话框中时，单击**关闭**按钮 （带有窗体的右上角的 X 按钮） 将导致要隐藏的窗体和<xref:System.Windows.Forms.Form.DialogResult%2A>属性设置为`DialogResult.Cancel`。</span><span class="sxs-lookup"><span data-stu-id="4565e-463">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="4565e-464">你可以重写的值分配给<xref:System.Windows.Forms.Form.DialogResult%2A>属性，当用户单击**关闭**通过设置按钮<xref:System.Windows.Forms.Form.DialogResult%2A>的事件处理程序中的属性<xref:System.Windows.Forms.Form.FormClosing>窗体的事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-464">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.FormClosing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-465">当<xref:System.Windows.Forms.Form.Close%2A>方法调用<xref:System.Windows.Forms.Form>显示为一个无模式窗口，则不能调用<xref:System.Windows.Forms.Control.Show%2A>方法，以使表单可见，因为已释放了窗体的资源。</span><span class="sxs-lookup"><span data-stu-id="4565e-465">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="4565e-466">若要隐藏窗体，然后将其可见，请使用<xref:System.Windows.Forms.Control.Hide%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-466">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A> method.</span></span>  
  
 <span data-ttu-id="4565e-467">如果窗体是多文档界面 (MDI) 父窗体，<xref:System.Windows.Forms.Form.FormClosing>所有 MDI 子窗体的事件引发 MDI 父窗体的<xref:System.Windows.Forms.Form.FormClosing>引发事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-467">If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised.</span></span> <span data-ttu-id="4565e-468">同样，<xref:System.Windows.Forms.Form.FormClosed>之前，将引发事件的所有 MDI 子窗体<xref:System.Windows.Forms.Form.FormClosed>引发 MDI 父窗体的事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-468">Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.</span></span> <span data-ttu-id="4565e-469">取消<xref:System.Windows.Forms.Form.FormClosing>的 MDI 子窗体的事件不会阻止<xref:System.Windows.Forms.Form.FormClosing>引发 MDI 父窗体的事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-469">Canceling the <xref:System.Windows.Forms.Form.FormClosing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.FormClosing> event of the MDI parent form from being raised.</span></span> <span data-ttu-id="4565e-470">但是，取消该事件将设置为`true`<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Windows.Forms.FormClosingEventArgs>作为参数传递到父窗体的类。</span><span class="sxs-lookup"><span data-stu-id="4565e-470">However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> class that is passed as a parameter to the parent form.</span></span> <span data-ttu-id="4565e-471">若要强制所有 MDI 父和子窗体关闭，设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`false`在 MDI 父窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-471">To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.</span></span>  
  
 <span data-ttu-id="4565e-472">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-472">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-473">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-473">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-474">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.FormClosing>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-474">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.FormClosing> event.</span></span> <span data-ttu-id="4565e-475">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-475">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-476">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-476">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-477">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-477">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-478">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.FormClosing>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-478">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.FormClosing> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#394](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#394)]
 [!code-vb[System.Windows.Forms.EventExamples#394](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#394)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="GetAutoScaleSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.SizeF GetAutoScaleSize (System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF GetAutoScaleSize(class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::SizeF GetAutoScaleSize(System::Drawing::Font ^ font);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use the AutoScaleDimensions property instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="font">
          <span data-ttu-id="4565e-479">
            <see cref="T:System.Drawing.Font" />，表示确定窗体的自动缩放基大小的字体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-479">A <see cref="T:System.Drawing.Font" /> representing the font to determine the autoscaled base size of the form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-480">获取根据指定的字体自动缩放窗体时的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-480">Gets the size when autoscaling the form based on a specified font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-481">
            <see cref="T:System.Drawing.SizeF" />，表示窗体的自动缩放大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-481">A <see cref="T:System.Drawing.SizeF" /> representing the autoscaled size of the form.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4565e-482"><xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>方法是过时在.net Framework 2.0 版。</span><span class="sxs-lookup"><span data-stu-id="4565e-482">The <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method is obsolete in.NET Framework version 2.0.</span></span> <span data-ttu-id="4565e-483">此成员已保留用于向后兼容。</span><span class="sxs-lookup"><span data-stu-id="4565e-483">This member has been retained for backward compatibility.</span></span> <span data-ttu-id="4565e-484">有关自动缩放的详细信息，请参阅[Windows 窗体中的自动缩放](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-484">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="4565e-485">此方法可用于确定窗体将字体应用于窗体之前将自动缩放到特定字体的大小。</span><span class="sxs-lookup"><span data-stu-id="4565e-485">You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form.</span></span> <span data-ttu-id="4565e-486">如果你想要确定大小的形式是自动缩放到基于当前分配给窗体的字体，请使用<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-486">If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetScaledBounds(valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetScaledBounds (bounds As Rectangle, factor As SizeF, specified As BoundsSpecified) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetScaledBounds(System::Drawing::Rectangle bounds, System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="bounds">
          <span data-ttu-id="4565e-487">指定要在显示器边界中检索的区域的 <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-487">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</span>
          </span>
        </param>
        <param name="factor">
          <span data-ttu-id="4565e-488">控件边界的高度和宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-488">The height and width of the control's bounds.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="4565e-489">
            <see cref="T:System.Windows.Forms.BoundsSpecified" /> 值之一，指定在定义控件大小和位置时要使用的控件边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-489">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-490">检索缩放控件时的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-490">Retrieves the bounds within which the control is scaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-491">一个表示控件缩放边界的 <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-491">A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="HelpButton">
      <MemberSignature Language="C#" Value="public bool HelpButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HelpButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.HelpButton" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HelpButton { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-492">获取或设置一个值，该值指示是否应在窗体的标题框中显示“帮助”按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-492">Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-493">如果为 <see langword="true" />，则在窗体的标题栏中显示“帮助”按钮；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-493">
              <see langword="true" /> to display a Help button in the form's caption bar; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-494">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-494">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-495">当此属性设置为`true`，问号的小按钮将出现在左侧的标题栏中**关闭**按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-495">When this property is set to `true`, a small button with a question mark appears in the caption bar to the left of the **Close** button.</span></span> <span data-ttu-id="4565e-496">此按钮可用于显示有关你的应用程序的帮助。</span><span class="sxs-lookup"><span data-stu-id="4565e-496">You can use this button to display help for your application.</span></span> <span data-ttu-id="4565e-497">你可以创建的事件处理程序<xref:System.Windows.Forms.Control.HelpRequested>事件来单击的窗体帮助按钮时，向用户显示帮助信息。</span><span class="sxs-lookup"><span data-stu-id="4565e-497">You can create an event handler for the <xref:System.Windows.Forms.Control.HelpRequested> event to display Help information to the user when the Help button of the form is clicked.</span></span>  

<span data-ttu-id="4565e-498">若要显示帮助按钮，窗体的值<xref:System.Windows.Forms.Form.ControlBox>属性必须为`true`，其默认值。</span><span class="sxs-lookup"><span data-stu-id="4565e-498">To display a Help button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span> <span data-ttu-id="4565e-499"><xref:System.Windows.Forms.Form.ControlBox>属性确定的标题栏的右上角是否包含如最大化按钮、 最小化按钮、 帮助按钮和关闭按钮的控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-499">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="4565e-500">此外，还必须设置窗体的<xref:System.Windows.Forms.Form.FormBorderStyle%2A>属性<xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>，或<xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4565e-500">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  


> [!IMPORTANT]
>  <span data-ttu-id="4565e-501">值<xref:System.Windows.Forms.Form.HelpButton%2A>如果忽略属性**最大化**或**最小化**显示按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-501">The value of the <xref:System.Windows.Forms.Form.HelpButton%2A> property is ignored if the **Maximize** or **Minimize** buttons are shown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-502">下面的代码示例创建的新实例<xref:System.Windows.Forms.Form>和调用<xref:System.Windows.Forms.Form.ShowDialog%2A>窗体显示为对话框中的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-502">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="4565e-503">该示例设置<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>属性来更改到对话框的外观和表单的功能。</span><span class="sxs-lookup"><span data-stu-id="4565e-503">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="4565e-504">此示例还使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>方法的窗体的<xref:System.Windows.Forms.Control.Controls%2A>集合来添加两个<xref:System.Windows.Forms.Button>控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-504">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="4565e-505">该示例使用<xref:System.Windows.Forms.Form.HelpButton%2A>属性对话框中的标题栏中显示帮助按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-505">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a Help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
        <altmember cref="E:System.Windows.Forms.Form.HelpButtonClicked" />
      </Docs>
    </Member>
    <Member MemberName="HelpButtonClicked">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler HelpButtonClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler HelpButtonClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.HelpButtonClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpButtonClicked As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ HelpButtonClicked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-506">单击“帮助”按钮时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-506">Occurs when the **Help** button is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-507"><xref:System.Windows.Forms.Form.HelpButtonClicked>事件发生时**帮助**单击窗体的标题栏中的按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-507">The <xref:System.Windows.Forms.Form.HelpButtonClicked> event occurs when the **Help** button in the form's caption bar is clicked.</span></span> <span data-ttu-id="4565e-508">**帮助**显示按钮时<xref:System.Windows.Forms.Form.HelpButton%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-508">The **Help** button is displayed when the <xref:System.Windows.Forms.Form.HelpButton%2A> property is set to `true`.</span></span> <span data-ttu-id="4565e-509"><xref:System.Windows.Forms.Form.HelpButtonClicked> 可以取消。</span><span class="sxs-lookup"><span data-stu-id="4565e-509"><xref:System.Windows.Forms.Form.HelpButtonClicked> can be canceled.</span></span>  
  
 <span data-ttu-id="4565e-510">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-510">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-511">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-511">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-512">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.HelpButtonClicked>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-512">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.HelpButtonClicked> event.</span></span> <span data-ttu-id="4565e-513">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-513">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-514">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-514">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-515">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-515">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-516">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.HelpButtonClicked>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-516">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.HelpButtonClicked> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#388](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#388)]
 [!code-vb[System.Windows.Forms.EventExamples#388](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#388)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.HelpButton" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
        <altmember cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.HelpRequested" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-517">获取或设置窗体的图标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-517">Gets or sets the icon for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-518">
            <see cref="T:System.Drawing.Icon" />，表示窗体的图标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-518">An <see cref="T:System.Drawing.Icon" /> that represents the icon for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-519">窗体的图标指定表示任务栏，以及此图标显示为在窗体控件框中的窗体中的图片。</span><span class="sxs-lookup"><span data-stu-id="4565e-519">A form's icon designates the picture that represents the form in the taskbar as well as the icon that is displayed for the control box of the form.</span></span>  
  
 <span data-ttu-id="4565e-520">此属性将产生任何影响，如果<xref:System.Windows.Forms.Form.FormBorderStyle%2A>设置为<xref:System.Windows.Forms.FormBorderStyle.FixedDialog>。</span><span class="sxs-lookup"><span data-stu-id="4565e-520">This property will have no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>.</span></span> <span data-ttu-id="4565e-521">在这种情况下，窗体将不会显示一个图标。</span><span class="sxs-lookup"><span data-stu-id="4565e-521">In that case, the form will not display an icon.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguageChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.InputLanguageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InputLanguageChanged As InputLanguageChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InputLanguageChangedEventHandler ^ InputLanguageChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguageChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-522">更改窗体的输入语言后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-522">Occurs after the input language of the form has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-523">此事件可用于对表单的外观和基于窗体的输入语言所做的更改的文本进行更改。</span><span class="sxs-lookup"><span data-stu-id="4565e-523">You can use this event to make changes to your form's appearance and text based on changes made to the input language of the form.</span></span>  
  
 <span data-ttu-id="4565e-524">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-524">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-525">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-525">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-526">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.InputLanguageChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-526">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanged> event.</span></span> <span data-ttu-id="4565e-527">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-527">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-528">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-528">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-529">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-529">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-530">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.InputLanguageChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-530">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <altmember cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguageChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.InputLanguageChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InputLanguageChanging As InputLanguageChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InputLanguageChangingEventHandler ^ InputLanguageChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguageChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-531">当用户尝试更改窗体的输入语言时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-531">Occurs when the user attempts to change the input language for the form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-532">窗体进行的输入语言更改之前，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-532">This event occurs before the change of input language is made for the form.</span></span> <span data-ttu-id="4565e-533">你可以通过设置取消语言更改<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Windows.Forms.InputLanguageChangingEventArgs>传递给事件处理程序`false`。</span><span class="sxs-lookup"><span data-stu-id="4565e-533">You can cancel the language change by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.InputLanguageChangingEventArgs> passed to your event handler to `false`.</span></span> <span data-ttu-id="4565e-534">如果取消了该事件，不会更改输入的语言。</span><span class="sxs-lookup"><span data-stu-id="4565e-534">If the event is canceled, the input language is not changed.</span></span> <span data-ttu-id="4565e-535">你可以使用此事件以确定请求的输入的语言更改是否适合你的应用程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-535">You can use this event to determine whether the requested input language change is appropriate for your application.</span></span>  
  
 <span data-ttu-id="4565e-536">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-536">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-537">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-537">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-538">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.InputLanguageChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-538">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanging> event.</span></span> <span data-ttu-id="4565e-539">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-539">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-540">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-540">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-541">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-541">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-542">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.InputLanguageChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-542">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanging> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#401](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#401)]
 [!code-vb[System.Windows.Forms.EventExamples#401](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#401)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <altmember cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="IsMdiChild">
      <MemberSignature Language="C#" Value="public bool IsMdiChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMdiChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsMdiChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMdiChild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMdiChild { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-543">获取一个值，该值指示窗体是否为多文档界面 (MDI) 子窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-543">Gets a value indicating whether the form is a multiple-document interface (MDI) child form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-544">如果该窗体是 MDI 子窗体，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-544">
              <see langword="true" /> if the form is an MDI child form; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-545">在运行时，MDI 子窗体将显示在一个 MDI 父窗体工作区。</span><span class="sxs-lookup"><span data-stu-id="4565e-545">At run time, MDI child forms are displayed inside the client area of an MDI parent form.</span></span> <span data-ttu-id="4565e-546">可以最大化、 最小化，和 MDI 父窗体中移动的 MDI 子窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-546">An MDI child form can be maximized, minimized, and moved within the MDI parent form.</span></span> <span data-ttu-id="4565e-547">若要创建的 MDI 子窗体，将分配<xref:System.Windows.Forms.Form>将到 MDI 父窗体<xref:System.Windows.Forms.Form.MdiParent%2A>子窗体的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-547">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span> <span data-ttu-id="4565e-548">你可以使用<xref:System.Windows.Forms.Form.IsMdiContainer%2A>属性来确定窗体是 MDI 父窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-548">You can use the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to determine whether a form is an MDI parent form.</span></span>  
  
 <span data-ttu-id="4565e-549">你可以使用<xref:System.Windows.Forms.Form.IsMdiChild%2A>属性来确定由方法或属性返回的窗体是 MDI 子窗体或在你的应用程序，如对话框中的标准窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-549">You can use the <xref:System.Windows.Forms.Form.IsMdiChild%2A> property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-550">所有 MDI 子窗体都具有可调整大小的边框、 一个控件菜单框中和最小化和**最大化**按钮，而不考虑的设置<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.ControlBox%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>，和<xref:System.Windows.Forms.Form.MaximizeBox%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-550">All MDI child forms have sizable borders, a control-menu box, and Minimize and **Maximize** buttons, regardless of the settings of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
      </Docs>
    </Member>
    <Member MemberName="IsMdiContainer">
      <MemberSignature Language="C#" Value="public bool IsMdiContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMdiContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsMdiContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMdiContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMdiContainer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-551">获取或设置一个值，该值指示窗体是否为多文档界面 (MDI) 子窗体的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-551">Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-552">如果该窗体是 MDI 子窗体的容器，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-552">
              <see langword="true" /> if the form is a container for MDI child forms; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-553">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-553">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-554">此属性更改为一个 MDI 父窗体的显示和行为的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-554">This property changes the display and behavior of the form to an MDI parent form.</span></span> <span data-ttu-id="4565e-555">当此属性设置为`true`，窗体显示具有凸起边框的凹陷工作区。</span><span class="sxs-lookup"><span data-stu-id="4565e-555">When this property is set to `true`, the form displays a sunken client area with a raised border.</span></span> <span data-ttu-id="4565e-556">分配给父窗体的所有 MDI 子窗体将都显示在其工作区内。</span><span class="sxs-lookup"><span data-stu-id="4565e-556">All MDI child forms assigned to the parent form are displayed within its client area.</span></span>  
  
 <span data-ttu-id="4565e-557">当关闭 MDI 父窗体时，<xref:System.Windows.Forms.Form.Closing>所有 MDI 子窗体的事件引发 MDI 父窗体的<xref:System.Windows.Forms.Form.Closing>引发事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-557">When an MDI parent form is closed, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="4565e-558">此外，<xref:System.Windows.Forms.Form.Closed>之前，将引发事件的所有 MDI 子窗体<xref:System.Windows.Forms.Form.Closed>引发 MDI 父窗体的事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-558">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-559">如果有两个<xref:System.Windows.Forms.MenuStrip>上设置的 MDI 子窗体的控件<xref:System.Windows.Forms.Form.IsMdiContainer%2A>到`true`父窗体将只有其中一个的内容合并<xref:System.Windows.Forms.MenuStrip>控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-559">If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls.</span></span> <span data-ttu-id="4565e-560">使用<xref:System.Windows.Forms.ToolStripManager.Merge%2A>其他子的内容合并<xref:System.Windows.Forms.MenuStrip>MDI 父窗体上的控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-560">Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-561">下面的代码示例演示如何使用<xref:System.Windows.Forms.Form.IsMdiContainer%2A>属性以及更改`BackColor`的 MDI 窗体的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-561">The following code example demonstrates using the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property as well as changing the `BackColor` property of an MDI Form.</span></span> <span data-ttu-id="4565e-562">若要运行此示例，请在新的窗体中粘贴以下代码。</span><span class="sxs-lookup"><span data-stu-id="4565e-562">To run this example, paste the following code in a new form.</span></span>  
  
 [!code-csharp[System.Windows.Forms.MdiClientExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MdiClientExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MdiClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MdiClientExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
      </Docs>
    </Member>
    <Member MemberName="IsRestrictedWindow">
      <MemberSignature Language="C#" Value="public bool IsRestrictedWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRestrictedWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsRestrictedWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRestrictedWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRestrictedWindow { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-563">获取一个值，该值指示窗体是否可以不受限制地使用所有窗口和用户输入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-563">Gets a value indicating whether the form can use all windows and user input events without restriction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-564">如果窗体有限制，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-564">
              <see langword="true" /> if the form has restrictions; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-565">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-565">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-566"><xref:System.Windows.Forms.Form.IsRestrictedWindow%2A>属性确定是否<xref:System.Security.Permissions.UIPermissionWindow.AllWindows>授予权限。</span><span class="sxs-lookup"><span data-stu-id="4565e-566">The <xref:System.Windows.Forms.Form.IsRestrictedWindow%2A> property determines whether the <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> permission is granted.</span></span> <span data-ttu-id="4565e-567">此属性设置在窗体的构造函数中的运行时，窗体的生存期内缓存。</span><span class="sxs-lookup"><span data-stu-id="4565e-567">This property is set at run time in the form's constructor, and is cached for the lifetime of the form.</span></span> <span data-ttu-id="4565e-568">在部分信任环境中运行的 Windows 窗体应用程序不能避开此检查，因为公共语言运行时可确保，在部分信任情况下始终调用父构造函数。</span><span class="sxs-lookup"><span data-stu-id="4565e-568">Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPreview">
      <MemberSignature Language="C#" Value="public bool KeyPreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeyPreview" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.KeyPreview" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeyPreview { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-569">获取或设置一个值，该值指示在将键事件传递到具有焦点的控件前，窗体是否将接收此键事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-569">Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-570">如果窗体将接收所有键事件，则为 <see langword="true" />；如果窗体上当前选定控件接收键事件，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-570">
              <see langword="true" /> if the form will receive all key events; <see langword="false" /> if the currently selected control on the form receives key events.</span>
          </span>
          <span data-ttu-id="4565e-571">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-571">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-572">当此属性设置为`true`，窗体将接收所有<xref:System.Windows.Forms.Control.KeyPress>， <xref:System.Windows.Forms.Control.KeyDown>，和<xref:System.Windows.Forms.Control.KeyUp>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-572">When this property is set to `true`, the form will receive all <xref:System.Windows.Forms.Control.KeyPress>, <xref:System.Windows.Forms.Control.KeyDown>, and <xref:System.Windows.Forms.Control.KeyUp> events.</span></span> <span data-ttu-id="4565e-573">窗体的事件处理程序已完成处理击键后，键击然后指派给具有焦点的控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-573">After the form's event handlers have completed processing the keystroke, the keystroke is then assigned to the control with focus.</span></span> <span data-ttu-id="4565e-574">例如，如果<xref:System.Windows.Forms.Form.KeyPreview%2A>属性设置为`true`和当前选择的控件是<xref:System.Windows.Forms.TextBox>之后由窗体的事件处理程序处理击键,<xref:System.Windows.Forms.TextBox>控件将接收已按下的键。</span><span class="sxs-lookup"><span data-stu-id="4565e-574">For example, if the <xref:System.Windows.Forms.Form.KeyPreview%2A> property is set to `true` and the currently selected control is a <xref:System.Windows.Forms.TextBox>, after the keystroke is handled by the event handlers of the form the <xref:System.Windows.Forms.TextBox> control will receive the key that was pressed.</span></span> <span data-ttu-id="4565e-575">若要仅在窗体级别处理键盘事件而不允许控件接收到键盘事件，<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType>中窗体的属性<xref:System.Windows.Forms.Control.KeyPress>事件处理程序`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-575">To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event handler to `true`.</span></span>  
  
 <span data-ttu-id="4565e-576">此属性可用于处理大多数击键中你的应用程序并可以处理键击或调用来处理击键的相应控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-576">You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke.</span></span> <span data-ttu-id="4565e-577">例如，当应用程序使用功能键，你可能想要处理窗体级别，而不是为每个控件都可能会收到击键事件编写代码。</span><span class="sxs-lookup"><span data-stu-id="4565e-577">For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-578">如果窗体不具有任何可见或启用的控件，它会自动获得所有键盘事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-578">If a form has no visible or enabled controls, it automatically receives all keyboard events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-579">窗体上的控件可能进行编程，从而取消它接收任何击键。</span><span class="sxs-lookup"><span data-stu-id="4565e-579">A control on a form may be programmed to cancel any keystrokes it receives.</span></span> <span data-ttu-id="4565e-580">由于控件永远不会将这些击键发送到窗体，该窗体将不会看到它们不管如何设置<xref:System.Windows.Forms.Form.KeyPreview%2A>。</span><span class="sxs-lookup"><span data-stu-id="4565e-580">Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <xref:System.Windows.Forms.Form.KeyPreview%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-581">下面的代码示例演示如何设置窗体的<xref:System.Windows.Forms.Form.KeyPreview%2A>为 true，处理窗体级别的关键事件的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-581">The following code example demonstrates setting a form's <xref:System.Windows.Forms.Form.KeyPreview%2A> property to true and handling the key events at the form level.</span></span> <span data-ttu-id="4565e-582">若要运行该示例，请在空白的窗体中粘贴以下代码。</span><span class="sxs-lookup"><span data-stu-id="4565e-582">To run the example, paste the following code in a blank form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="LayoutMdi">
      <MemberSignature Language="C#" Value="public void LayoutMdi (System.Windows.Forms.MdiLayout value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LayoutMdi(valuetype System.Windows.Forms.MdiLayout value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LayoutMdi (value As MdiLayout)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LayoutMdi(System::Windows::Forms::MdiLayout value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.MdiLayout" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4565e-583">
            <see cref="T:System.Windows.Forms.MdiLayout" /> 值之一，定义 MDI 子窗体的布局。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-583">One of the <see cref="T:System.Windows.Forms.MdiLayout" /> values that defines the layout of MDI child forms.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-584">在 MDI 父窗体内排列多文档界面 (MDI) 子窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-584">Arranges the multiple-document interface (MDI) child forms within the MDI parent form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-585">此方法可用于在 MDI 父窗体，以便更轻松导航和操作的 MDI 子窗体中排列 MDI 子窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-585">You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms.</span></span> <span data-ttu-id="4565e-586">MDI 子窗体可以平铺水平和垂直，级联，或者显示为在 MDI 父窗体内的图标。</span><span class="sxs-lookup"><span data-stu-id="4565e-586">MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-587">下面的代码示例演示在 MDI 应用程序的父窗体的窗口菜单的菜单项的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-587">The following code example shows the event handlers for the menu items of a Window menu in an MDI application's parent form.</span></span> <span data-ttu-id="4565e-588">每个事件处理程序调用<xref:System.Windows.Forms.Form.LayoutMdi%2A>排列任何子窗体的方法是在应用程序中当前打开。</span><span class="sxs-lookup"><span data-stu-id="4565e-588">Each event handler makes calls to the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to arrange any child forms that are currently open in the application.</span></span>  
  
 [!code-cpp[Classic Form.LayoutMdi Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.LayoutMdi Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/CS/source.cs#1)]
 [!code-vb[Classic Form.LayoutMdi Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MdiLayout" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public event EventHandler Load;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Load" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Load" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Load As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Load;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-589">在第一次显示窗体前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-589">Occurs before a form is displayed for the first time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-590">此事件可用于执行任务，例如分配由窗体的资源。</span><span class="sxs-lookup"><span data-stu-id="4565e-590">You can use this event to perform tasks such as allocating resources used by the form.</span></span>  
  
 <span data-ttu-id="4565e-591">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-591">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-592">下面的代码示例演示如何使用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>， <xref:System.Windows.Forms.Form.Load>， <xref:System.Windows.Forms.Form.Activated>，和<xref:System.Windows.Forms.Form.Activate%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-592">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="4565e-593">若要运行该示例，请将以下代码粘贴在窗体调用`Form1`包含<xref:System.Windows.Forms.Button>调用`Button1`和两个<xref:System.Windows.Forms.Label>控件称为`Label1`和`Label2`。</span><span class="sxs-lookup"><span data-stu-id="4565e-593">To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-594">获取或设置以屏幕坐标表示的代表 <see cref="T:System.Windows.Forms.Form" /> 左上角的 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-594">Gets or sets the <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the <see cref="T:System.Windows.Forms.Form" /> in screen coordinates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-595">以屏幕坐标表示的代表 <see cref="T:System.Windows.Forms.Form" /> 左上角的 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-595">The <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the <see cref="T:System.Windows.Forms.Form" /> in screen coordinates.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-596"><xref:System.Drawing.Point> 是一种结构，这意味着它是值类型。</span><span class="sxs-lookup"><span data-stu-id="4565e-596"><xref:System.Drawing.Point> is a structure, which means that it is a value type.</span></span> <span data-ttu-id="4565e-597">如果访问中的属性<xref:System.Drawing.Point>，返回的属性的副本。</span><span class="sxs-lookup"><span data-stu-id="4565e-597">If you access a property in <xref:System.Drawing.Point>, a copy of the property is returned.</span></span> <span data-ttu-id="4565e-598">因此，更改<xref:System.Drawing.Point.X%2A>或<xref:System.Drawing.Point.Y%2A>属性<xref:System.Drawing.Point>从返回<xref:System.Windows.Forms.Control.Location%2A>属性将不会影响<xref:System.Windows.Forms.Control.Left%2A>， <xref:System.Windows.Forms.Control.Right%2A>， <xref:System.Windows.Forms.Control.Top%2A>，或<xref:System.Windows.Forms.Control.Bottom%2A>属性值<xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="4565e-598">Therefore, changing the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from the <xref:System.Windows.Forms.Control.Location%2A> property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="4565e-599">若要调整这些属性，分别设置每个属性值，或设置<xref:System.Windows.Forms.Form.Location%2A>为一个新的属性<xref:System.Drawing.Point>。</span><span class="sxs-lookup"><span data-stu-id="4565e-599">To adjust these properties, set each property value individually, or set the <xref:System.Windows.Forms.Form.Location%2A> property with a new <xref:System.Drawing.Point>.</span></span>  
  
 <span data-ttu-id="4565e-600"><xref:System.Windows.Forms.Form.Location%2A>属性获取或设置<xref:System.Windows.Forms.Control.Location%2A>属性<xref:System.Windows.Forms.Control>基类，并设置<xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-600">The <xref:System.Windows.Forms.Form.Location%2A> property gets or sets the <xref:System.Windows.Forms.Control.Location%2A> property of the <xref:System.Windows.Forms.Control> base class, and sets the <xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A> property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="MainMenuStrip">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuStrip MainMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MenuStrip MainMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MainMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Property MainMenuStrip As MenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MenuStrip ^ MainMenuStrip { System::Windows::Forms::MenuStrip ^ get(); void set(System::Windows::Forms::MenuStrip ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-601">获取或设置窗体的主菜单容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-601">Gets or sets the primary menu container for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-602">
            <see cref="T:System.Windows.Forms.MenuStrip" /> 表示窗体菜单结构的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-602">A <see cref="T:System.Windows.Forms.MenuStrip" /> that represents the container for the menu structure of the form.</span>
          </span>
          <span data-ttu-id="4565e-603">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-603">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-604">除了设置<xref:System.Windows.Forms.Form.MainMenuStrip%2A>属性，你必须<xref:System.Windows.Forms.Control.ControlCollection.Add%2A><xref:System.Windows.Forms.MenuStrip>控制转移到<xref:System.Windows.Forms.Control.Controls%2A>窗体的集合。</span><span class="sxs-lookup"><span data-stu-id="4565e-604">In addition to setting the <xref:System.Windows.Forms.Form.MainMenuStrip%2A> property, you must <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> the <xref:System.Windows.Forms.MenuStrip> control to the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form.</span></span>  
  
 <span data-ttu-id="4565e-605"><xref:System.Windows.Forms.MenuStrip>类取代<xref:System.Windows.Forms.MainMenu>在以前版本的.NET Framework 的类。</span><span class="sxs-lookup"><span data-stu-id="4565e-605">The <xref:System.Windows.Forms.MenuStrip> class supersedes the <xref:System.Windows.Forms.MainMenu> class in previous versions of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuStrip" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Margin { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-606">获取或设置控件之间的空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-606">Gets or sets the space between controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-607">表示控件之间的空间的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-607">A value that represents the space between controls.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MarginChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MarginChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MarginChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MarginChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MarginChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-608">当 <see cref="P:System.Windows.Forms.Form.Margin" /> 属性更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-608">Occurs when the <see cref="P:System.Windows.Forms.Form.Margin" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximizeBox">
      <MemberSignature Language="C#" Value="public bool MaximizeBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaximizeBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximizeBox" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximizeBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaximizeBox { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-609">获取或设置一个值，该值指示是否在窗体的标题栏中显示“最大化”按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-609">Gets or sets a value indicating whether the **Maximize** button is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-610">
            <see langword="true" /> 若要显示**最大化**按钮窗体; 否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-610">
              <see langword="true" /> to display a **Maximize** button for the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-611">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-611">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="4565e-612">A**最大化**按钮使用户得以扩大到全屏幕大小的窗口。</span><span class="sxs-lookup"><span data-stu-id="4565e-612">A **Maximize** button enables users to enlarge a window to full-screen size.</span></span> <span data-ttu-id="4565e-613">若要显示**最大化**按钮的窗体的值<xref:System.Windows.Forms.Form.ControlBox>属性必须为`true`，其默认值。</span><span class="sxs-lookup"><span data-stu-id="4565e-613">To display a **Maximize** button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span>  <span data-ttu-id="4565e-614"><xref:System.Windows.Forms.Form.ControlBox>属性确定的标题栏的右上角是否包含如最大化按钮、 最小化按钮、 帮助按钮和关闭按钮的控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-614">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="4565e-615">此外，还必须设置窗体的<xref:System.Windows.Forms.Form.FormBorderStyle%2A>属性<xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>，或<xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4565e-615">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4565e-616">A**最大化**按钮自动变成一个还原按钮最大化窗口时。</span><span class="sxs-lookup"><span data-stu-id="4565e-616">A **Maximize** button automatically becomes a restore button when a window is maximized.</span></span> <span data-ttu-id="4565e-617">最小化或还原窗口将自动更改还原按钮返回到**最大化**按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-617">Minimizing or restoring a window automatically changes the restore button back to a **Maximize** button.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-618">在运行时将窗体最大程度地生成<xref:System.Windows.Forms.Control.Resize>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-618">Maximizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event.</span></span> <span data-ttu-id="4565e-619"><xref:System.Windows.Forms.Form.WindowState%2A>属性反映窗口的当前状态。</span><span class="sxs-lookup"><span data-stu-id="4565e-619">The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window.</span></span> <span data-ttu-id="4565e-620">如果你设置<xref:System.Windows.Forms.Form.WindowState%2A>属性`FormWindowState.Maximized`，窗体最大化独立于任何设置实际上适用于<xref:System.Windows.Forms.Form.MaximizeBox%2A>和<xref:System.Windows.Forms.Form.FormBorderStyle%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-620">If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Maximized`, the form is maximized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MaximizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-621">下面的代码示例创建的新实例<xref:System.Windows.Forms.Form>和调用<xref:System.Windows.Forms.Form.ShowDialog%2A>窗体显示为对话框中的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-621">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="4565e-622">该示例设置<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>属性来更改到对话框的外观和表单的功能。</span><span class="sxs-lookup"><span data-stu-id="4565e-622">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="4565e-623">此示例还使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>方法的窗体的<xref:System.Windows.Forms.Control.Controls%2A>集合来添加两个<xref:System.Windows.Forms.Button>控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-623">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="4565e-624">该示例使用<xref:System.Windows.Forms.Form.HelpButton%2A>属性对话框中的标题栏中显示帮助按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-624">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="MaximizedBounds">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle MaximizedBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle MaximizedBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximizedBounds" />
      <MemberSignature Language="VB.NET" Value="Protected Property MaximizedBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Drawing::Rectangle MaximizedBounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-625">获取和设置窗体最大化后的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-625">Gets and sets the size of the form when it is maximized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-626">
            <see cref="T:System.Drawing.Rectangle" />，表示窗体最大化后的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-626">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the form when it is maximized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4565e-627">
            <see cref="P:System.Drawing.Rectangle.Top" /> 属性的值大于窗体的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-627">The value of the <see cref="P:System.Drawing.Rectangle.Top" /> property is greater than the height of the form.</span>
          </span>
          <span data-ttu-id="4565e-628">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-628">-or-</span>
          </span>
          <span data-ttu-id="4565e-629">
            <see cref="P:System.Drawing.Rectangle.Left" /> 属性的值大于窗体的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-629">The value of the <see cref="P:System.Drawing.Rectangle.Left" /> property is greater than the width of the form.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-630">继承自的类<see cref="T:System.Windows.Forms.Form" />可以重写此方法，以最大化时窗体提供新边界。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-630">Classes that inherit from <see cref="T:System.Windows.Forms.Form" /> can override this method to provide new bounds for the form when it is maximized.</span>
            </span>
            <span data-ttu-id="4565e-631">类将此属性设置内部时窗体的**最大化**单击按钮。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-631">The class sets this property internally when the form's **Maximize** button is clicked.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximizedBoundsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaximizedBoundsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaximizedBoundsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaximizedBoundsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MaximizedBoundsChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-632">在 <see cref="P:System.Windows.Forms.Form.MaximizedBounds" /> 属性的值更改后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-632">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximizedBounds" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-633">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-633">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-634">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-634">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-635">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.MaximizedBoundsChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-635">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> event.</span></span> <span data-ttu-id="4565e-636">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-636">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-637">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-637">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-638">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-638">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-639">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.MaximizedBoundsChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-639">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#389](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#389)]
 [!code-vb[System.Windows.Forms.EventExamples#389](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#389)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MaximumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MaximumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "0, 0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-640">获取窗体可调整到的最大大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-640">Gets the maximum size the form can be resized to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-641">
            <see cref="T:System.Drawing.Size" />，表示该窗体的最大大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-641">A <see cref="T:System.Drawing.Size" /> that represents the maximum size for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-642">此属性可限制为指定的最大大小的窗体的大小。</span><span class="sxs-lookup"><span data-stu-id="4565e-642">This property enables you to limit the size of a form to a specified maximum size.</span></span> <span data-ttu-id="4565e-643">你可以使用此功能，同时显示多个窗口时以确保单个窗口不会导致其他窗口来隐藏。</span><span class="sxs-lookup"><span data-stu-id="4565e-643">You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden.</span></span> <span data-ttu-id="4565e-644">如果此属性设置为<xref:System.Drawing.Size>是 0 高度和宽度，窗体中的为 0 的对象将具有由 Windows 设置的限制之外没有最大大小。</span><span class="sxs-lookup"><span data-stu-id="4565e-644">If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-645">下面的代码示例演示了如何设置<xref:System.Windows.Forms.Form.MaximumSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-645">The following code example demonstrates setting the <xref:System.Windows.Forms.Form.MaximumSize%2A> property.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.FormExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.FormExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4565e-646">
            <see cref="T:System.Drawing.Size" /> 对象内的高或宽的值小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-646">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.SystemInformation.MaxWindowTrackSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximumSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaximumSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaximumSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MaximumSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaximumSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MaximumSizeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-647">在 <see cref="P:System.Windows.Forms.Form.MaximumSize" /> 属性的值更改后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-647">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximumSize" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-648">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-648">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-649">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-649">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-650">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.MaximumSizeChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-650">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MaximumSizeChanged> event.</span></span> <span data-ttu-id="4565e-651">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-651">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-652">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-652">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-653">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-653">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-654">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.MaximumSizeChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-654">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MaximumSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#390](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#390)]
 [!code-vb[System.Windows.Forms.EventExamples#390](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#390)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MdiChildActivate">
      <MemberSignature Language="C#" Value="public event EventHandler MdiChildActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MdiChildActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MdiChildActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MdiChildActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MdiChildActivate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-655">在多文档界面 (MDI) 应用程序内激活或关闭 MDI 子窗体时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-655">Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-656">你可以使用此事件来执行任务，如更新 MDI 子窗体的内容和更改的菜单选项 MDI 父窗体中提供基于状态的已激活 MDI 子窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-656">You can use this event to perform tasks such as updating the contents of the MDI child form and changing the menu options available in the MDI parent form based on the status of the MDI child form that is activated.</span></span>  
  
 <span data-ttu-id="4565e-657">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-657">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-658">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-658">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-659">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.MdiChildActivate>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-659">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span> <span data-ttu-id="4565e-660">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-660">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-661">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-661">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-662">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-662">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-663">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.MdiChildActivate>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-663">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#397](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#397)]
 [!code-vb[System.Windows.Forms.EventExamples#397](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#397)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MdiChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form[] MdiChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form[] MdiChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MdiChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MdiChildren As Form()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Windows::Forms::Form ^&gt; ^ MdiChildren { cli::array &lt;System::Windows::Forms::Form ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-664">获取窗体的数组，这些窗体表示以此窗体作为父级的多文档界面 (MDI) 子窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-664">Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-665">
            <see cref="T:System.Windows.Forms.Form" /> 对象的数组，每个对象都标识此窗体的一个 MDI 子窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-665">An array of <see cref="T:System.Windows.Forms.Form" /> objects, each of which identifies one of this form's MDI child forms.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-666">此属性，可获取对所有 MDI 子窗体在 MDI 父窗体中当前打开的引用。</span><span class="sxs-lookup"><span data-stu-id="4565e-666">This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form.</span></span> <span data-ttu-id="4565e-667">若要创建的 MDI 子窗体，将分配<xref:System.Windows.Forms.Form>将到 MDI 父窗体<xref:System.Windows.Forms.Form.MdiParent%2A>子窗体的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-667">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span>  
  
 <span data-ttu-id="4565e-668">此属性可用于循环访问所有 MDI 子窗体来执行操作，例如将数据保存到数据库，MDI 父窗体关闭时或更新基于你的应用程序中执行的操作将子窗体上的字段。</span><span class="sxs-lookup"><span data-stu-id="4565e-668">You can use this property to loop through all the MDI child forms to perform operations such as saving data to a database when the MDI parent form closes or to update fields on the child forms based on actions performed in your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-669">下面的代码示例演示如何使用<xref:System.Windows.Forms.Form.MdiChildren%2A>属性循环访问列表的 MDI 子窗体并添加<xref:System.Windows.Forms.Button>到每个控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-669">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property to iterate through the list of MDI child forms and add a <xref:System.Windows.Forms.Button> control to each.</span></span>  
  
 [!code-cpp[Form.MDIChildren#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.MDIChildren/CPP/form1.cpp#1)]
 [!code-csharp[Form.MDIChildren#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.MDIChildren/CS/form1.cs#1)]
 [!code-vb[Form.MDIChildren#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.MDIChildren/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
      </Docs>
    </Member>
    <Member MemberName="MdiParent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form MdiParent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MdiParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MdiParent" />
      <MemberSignature Language="VB.NET" Value="Public Property MdiParent As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ MdiParent { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-670">获取或设置此窗体的当前多文档界面 (MDI) 父窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-670">Gets or sets the current multiple-document interface (MDI) parent form of this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-671">
            <see cref="T:System.Windows.Forms.Form" />，表示 MDI 父窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-671">A <see cref="T:System.Windows.Forms.Form" /> that represents the MDI parent form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-672">若要创建的 MDI 子窗体，将分配<xref:System.Windows.Forms.Form>将到 MDI 父窗体<xref:System.Windows.Forms.Form.MdiParent%2A>子窗体的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-672">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span> <span data-ttu-id="4565e-673">若要获取所有子窗体都需要的全局信息或调用执行所有子窗体的操作的方法，可以使用此属性从 MDI 子窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-673">You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-674">如果有两个<xref:System.Windows.Forms.MenuStrip>上设置的 MDI 子窗体的控件<xref:System.Windows.Forms.Form.IsMdiContainer%2A>到`true`父窗体将只有其中一个的内容合并<xref:System.Windows.Forms.MenuStrip>控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-674">If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls.</span></span> <span data-ttu-id="4565e-675">使用<xref:System.Windows.Forms.ToolStripManager.Merge%2A>其他子的内容合并<xref:System.Windows.Forms.MenuStrip>MDI 父窗体上的控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-675">Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-676">下面的代码示例演示如何在 MDI 应用程序中创建子窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-676">The following code example demonstrates how to create child forms in an MDI application.</span></span> <span data-ttu-id="4565e-677">此代码示例创建具有唯一的文本，以标识的子窗体的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-677">The example code creates a form with unique text to identify the child form.</span></span> <span data-ttu-id="4565e-678">该示例使用<xref:System.Windows.Forms.Form.MdiParent%2A>属性来指定窗体是子窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-678">The example uses the <xref:System.Windows.Forms.Form.MdiParent%2A> property to specify that a form is a child form.</span></span> <span data-ttu-id="4565e-679">此示例需要在示例中的代码称为从窗体具有其<xref:System.Windows.Forms.Form.IsMdiContainer%2A>属性设置为`true`和窗体具有一个名为的私有类级别的整型变量`childCount`。</span><span class="sxs-lookup"><span data-stu-id="4565e-679">This example requires that the code in the example is called from a form that has its <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property set to `true` and that the form has a private class level integer variable named `childCount`.</span></span>  
  
 [!code-cpp[Form.MDIParent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.MDIParent/CPP/form1.cpp#1)]
 [!code-csharp[Form.MDIParent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.MDIParent/CS/form1.cs#1)]
 [!code-vb[Form.MDIParent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.MDIParent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="4565e-680">分配给此属性的 <see cref="T:System.Windows.Forms.Form" /> 没有被标记为 MDI 容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-680">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is not marked as an MDI container.</span>
          </span>
          <span data-ttu-id="4565e-681">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-681">-or-</span>
          </span>
          <span data-ttu-id="4565e-682">分配给此属性的 <see cref="T:System.Windows.Forms.Form" /> 同时作为子 MDI 窗体和 MDI 容器窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-682">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is both a child and an MDI container form.</span>
          </span>
          <span data-ttu-id="4565e-683">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-683">-or-</span>
          </span>
          <span data-ttu-id="4565e-684">分配给此属性的 <see cref="T:System.Windows.Forms.Form" /> 位于其他线程上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-684">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is located on a different thread.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4565e-685">用于请求窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-685">for requesting a form.</span>
          </span>
          <span data-ttu-id="4565e-686">关联枚举：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-686">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
      </Docs>
    </Member>
    <Member MemberName="Menu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu Menu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MainMenu Menu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Menu" />
      <MemberSignature Language="VB.NET" Value="Public Property Menu As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MainMenu ^ Menu { System::Windows::Forms::MainMenu ^ get(); void set(System::Windows::Forms::MainMenu ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-687">获取或设置在窗体中显示的 <see cref="T:System.Windows.Forms.MainMenu" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-687">Gets or sets the <see cref="T:System.Windows.Forms.MainMenu" /> that is displayed in the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-688">
            <see cref="T:System.Windows.Forms.MainMenu" />，表示要在窗体中显示的菜单。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-688">A <see cref="T:System.Windows.Forms.MainMenu" /> that represents the menu to display in the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-689">可以使用此属性在运行时的整个菜单集合间进行切换。</span><span class="sxs-lookup"><span data-stu-id="4565e-689">You can use this property to switch between complete menu sets at run time.</span></span> <span data-ttu-id="4565e-690">例如，你可以定义一个<xref:System.Windows.Forms.MainMenu>时多文档界面 (MDI) 窗体具有没有活动的 MDI 子窗体和另一个要显示<xref:System.Windows.Forms.MainMenu>显示子窗口时显示。</span><span class="sxs-lookup"><span data-stu-id="4565e-690">For example, you can define one <xref:System.Windows.Forms.MainMenu> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <xref:System.Windows.Forms.MainMenu> to display when a child window is displayed.</span></span> <span data-ttu-id="4565e-691">你还可以使用不同<xref:System.Windows.Forms.MainMenu>要求显示不同的菜单集的应用程序中存在特定条件时。</span><span class="sxs-lookup"><span data-stu-id="4565e-691">You can also use a different <xref:System.Windows.Forms.MainMenu> when specific conditions exist in your application that require displaying a different menu set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-692">下面的代码示例创建<xref:System.Windows.Forms.MainMenu>，将两个分配<xref:System.Windows.Forms.MenuItem>对象添加到<xref:System.Windows.Forms.MainMenu>并将其绑定到窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-692">The following code example creates a <xref:System.Windows.Forms.MainMenu>, assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> and binds it to a form.</span></span> <span data-ttu-id="4565e-693">此示例要求你拥有<xref:System.Windows.Forms.Form>创建命名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-693">This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.</span></span>  
  
 [!code-cpp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CS/source.cs#1)]
 [!code-vb[Classic MainMenu.MainMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.Menu" />
      </Docs>
    </Member>
    <Member MemberName="MenuComplete">
      <MemberSignature Language="C#" Value="public event EventHandler MenuComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MenuComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-694">当窗体菜单失去焦点时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-694">Occurs when the menu of a form loses focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-695">当你单击菜单中的任何菜单项中正在执行的命令该结果和该菜单失去焦点时，引发此事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-695">This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus.</span></span> <span data-ttu-id="4565e-696">你可以使用此事件来执行任务，例如更新的文本<xref:System.Windows.Forms.StatusBar>控件或上启用和禁用按钮<xref:System.Windows.Forms.ToolBar>。</span><span class="sxs-lookup"><span data-stu-id="4565e-696">You can use this event to perform tasks such as updating the text of a <xref:System.Windows.Forms.StatusBar> control or enabling and disabling buttons on a <xref:System.Windows.Forms.ToolBar>.</span></span>  
  
 <span data-ttu-id="4565e-697">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-697">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-698">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-698">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-699">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.MenuComplete>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-699">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MenuComplete> event.</span></span> <span data-ttu-id="4565e-700">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-700">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-701">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-701">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-702">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-702">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-703">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.MenuComplete>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-703">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MenuComplete> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#398](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#398)]
 [!code-vb[System.Windows.Forms.EventExamples#398](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#398)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuStart">
      <MemberSignature Language="C#" Value="public event EventHandler MenuStart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuStart" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MenuStart" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuStart As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuStart;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-704">当窗体菜单接收焦点时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-704">Occurs when the menu of a form receives focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-705">用户单击菜单中的任何菜单项时，引发此事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-705">This event is raised when any menu item in the menu is clicked by the user.</span></span> <span data-ttu-id="4565e-706">此事件可用于执行任务，例如启用和禁用菜单在访问时不应由用户访问窗体上的控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-706">You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.</span></span>  
  
 <span data-ttu-id="4565e-707">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-707">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-708">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-708">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-709">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.MenuStart>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-709">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MenuStart> event.</span></span> <span data-ttu-id="4565e-710">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-710">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-711">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-711">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-712">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-712">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-713">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.MenuStart>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-713">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MenuStart> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#399](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#399)]
 [!code-vb[System.Windows.Forms.EventExamples#399](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#399)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MergedMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu MergedMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MainMenu MergedMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MergedMenu" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergedMenu As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MainMenu ^ MergedMenu { System::Windows::Forms::MainMenu ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-714">获取窗体的合并菜单。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-714">Gets the merged menu for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-715">
            <see cref="T:System.Windows.Forms.MainMenu" />，表示窗体的合并菜单。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-715">A <see cref="T:System.Windows.Forms.MainMenu" /> that represents the merged menu of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-716">在窗体合并了其父窗体的菜单的其菜单多文档界面 (MDI) 子窗体时，主要使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-716">This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form's menu.</span></span> <span data-ttu-id="4565e-717">此属性可用于获取 MDI 应用程序以进行更改或元素添加到菜单结构中的当前菜单结构。</span><span class="sxs-lookup"><span data-stu-id="4565e-717">You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure.</span></span> <span data-ttu-id="4565e-718">若要获取的未合并<xref:System.Windows.Forms.MainMenu>分配给窗体，使用<xref:System.Windows.Forms.Form.Menu%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-718">To obtain the nonmerged <xref:System.Windows.Forms.MainMenu> assigned to a form, use the <xref:System.Windows.Forms.Form.Menu%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="P:System.Windows.Forms.Form.Menu" />
      </Docs>
    </Member>
    <Member MemberName="MinimizeBox">
      <MemberSignature Language="C#" Value="public bool MinimizeBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MinimizeBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MinimizeBox" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimizeBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MinimizeBox { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-719">获取或设置一个值，该值指示是否在窗体的标题栏中显示“最小化”按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-719">Gets or sets a value indicating whether the **Minimize** button is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-720">
            <see langword="true" /> 若要显示**最小化**按钮窗体; 否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-720">
              <see langword="true" /> to display a **Minimize** button for the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-721">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-721">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-722">A**最小化**按钮使用户得以最小化窗口图标。</span><span class="sxs-lookup"><span data-stu-id="4565e-722">A **Minimize** button enables users to minimize a window to an icon.</span></span> <span data-ttu-id="4565e-723">若要显示**最小化**按钮的窗体的值<xref:System.Windows.Forms.Form.ControlBox>属性必须为`true`，其默认值。</span><span class="sxs-lookup"><span data-stu-id="4565e-723">To display a **Minimize** button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span>  <span data-ttu-id="4565e-724"><xref:System.Windows.Forms.Form.ControlBox>属性确定的标题栏的右上角是否包含如最大化按钮、 最小化按钮、 帮助按钮和关闭按钮的控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-724">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="4565e-725">此外，还必须设置窗体的<xref:System.Windows.Forms.Form.FormBorderStyle%2A>属性<xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>，或<xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4565e-725">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-726">最小化窗体，在运行时生成<xref:System.Windows.Forms.Control.Resize>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-726">Minimizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event.</span></span> <span data-ttu-id="4565e-727"><xref:System.Windows.Forms.Form.WindowState%2A>属性反映窗口的当前状态。</span><span class="sxs-lookup"><span data-stu-id="4565e-727">The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window.</span></span> <span data-ttu-id="4565e-728">如果你设置<xref:System.Windows.Forms.Form.WindowState%2A>属性`FormWindowState.Minimized`，窗体将独立于任何设置实际上适用于最小化<xref:System.Windows.Forms.Form.MinimizeBox%2A>和<xref:System.Windows.Forms.Form.FormBorderStyle%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-728">If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Minimized`, the form is minimized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MinimizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-729">下面的代码示例创建的新实例<xref:System.Windows.Forms.Form>和调用<xref:System.Windows.Forms.Form.ShowDialog%2A>窗体显示为对话框中的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-729">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="4565e-730">该示例设置<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>属性来更改到对话框的外观和表单的功能。</span><span class="sxs-lookup"><span data-stu-id="4565e-730">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="4565e-731">此示例还使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>方法的窗体的<xref:System.Windows.Forms.Control.Controls%2A>集合来添加两个<xref:System.Windows.Forms.Button>控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-731">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="4565e-732">该示例使用<xref:System.Windows.Forms.Form.HelpButton%2A>属性对话框中的标题栏中显示帮助按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-732">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MinimumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-733">获取或设置窗体可调整到的最小大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-733">Gets or sets the minimum size the form can be resized to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-734">
            <see cref="T:System.Drawing.Size" />，表示该窗体的最小大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-734">A <see cref="T:System.Drawing.Size" /> that represents the minimum size for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-735">此属性可限制为指定的最小大小的窗体的大小。</span><span class="sxs-lookup"><span data-stu-id="4565e-735">This property enables you to limit the size of a form to a specified minimum size.</span></span> <span data-ttu-id="4565e-736">此功能可用于防止用户将窗口调整为不合需要的大小。</span><span class="sxs-lookup"><span data-stu-id="4565e-736">You can use this feature to prevent a user from sizing a window to an undesirable size.</span></span> <span data-ttu-id="4565e-737">如果此属性设置为<xref:System.Drawing.Size>是 0 高度和宽度，窗体中的为 0 的对象将具有由 Windows 设置的限制之外没有最小大小。</span><span class="sxs-lookup"><span data-stu-id="4565e-737">If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4565e-738">
            <see cref="T:System.Drawing.Size" /> 对象内的高或宽的值小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-738">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MinimumSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MinimumSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MinimumSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MinimumSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MinimumSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MinimumSizeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-739">在 <see cref="P:System.Windows.Forms.Form.MinimumSize" /> 属性的值更改后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-739">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MinimumSize" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-740">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-740">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-741">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-741">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-742">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.MinimumSizeChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-742">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MinimumSizeChanged> event.</span></span> <span data-ttu-id="4565e-743">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-743">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-744">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-744">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-745">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-745">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-746">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.MinimumSizeChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-746">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MinimumSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#391](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#391)]
 [!code-vb[System.Windows.Forms.EventExamples#391](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#391)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="Modal">
      <MemberSignature Language="C#" Value="public bool Modal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Modal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modal { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-747">获取一个值，该值指示是否有模式地显示此窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-747">Gets a value indicating whether this form is displayed modally.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-748">如果该窗体进行模式显示，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-748">
              <see langword="true" /> if the form is displayed modally; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-749">有模式地显示窗体时，不需要输入 （键盘或鼠标单击） 能对模式的窗体上的对象进行除外。</span><span class="sxs-lookup"><span data-stu-id="4565e-749">When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form.</span></span> <span data-ttu-id="4565e-750">该程序必须隐藏或关闭模式中的窗体 （通常对某些用户执行任何操作的响应） 到另一种形式的输入之前进行。</span><span class="sxs-lookup"><span data-stu-id="4565e-750">The program must hide or close a modal form (usually in response to some user action) before input to another form can occur.</span></span> <span data-ttu-id="4565e-751">有模式地显示的窗体通常用作应用程序中的对话框。</span><span class="sxs-lookup"><span data-stu-id="4565e-751">Forms that are displayed modally are typically used as dialog boxes in an application.</span></span>  
  
 <span data-ttu-id="4565e-752">此属性可用于确定你获取从方法或属性的窗体是否已有模式地显示。</span><span class="sxs-lookup"><span data-stu-id="4565e-752">You can use this property to determine whether a form that you have obtained from a method or property has been displayed modally.</span></span>  
  
 <span data-ttu-id="4565e-753">若要显示窗体以模式方式使用<xref:System.Windows.Forms.Form.ShowDialog%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-753">To display a form modally use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-754">下面的代码示例使用<xref:System.Windows.Forms.Form.Modal%2A>属性来确定是否窗体将显示为模式的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-754">The following code example uses the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form.</span></span> <span data-ttu-id="4565e-755">如果不是<xref:System.Windows.Forms.Form.FormBorderStyle%2A>和<xref:System.Windows.Forms.Form.TopLevel%2A>属性将更改以使工具窗口边框的非顶级窗体的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-755">If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form a non-top-level form with a tool window border.</span></span>  
  
 [!code-cpp[Form.Modal#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Modal/CPP/form1.cpp#1)]
 [!code-csharp[Form.Modal#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Modal/CS/form1.cs#1)]
 [!code-vb[Form.Modal#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Modal/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.ShowDialog" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-756">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-756">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-757">引发 <see cref="E:System.Windows.Forms.Form.Activated" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-757">Raises the <see cref="E:System.Windows.Forms.Form.Activated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-758">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-758">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-759">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-759">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-760"><xref:System.Windows.Forms.Form.OnActivated%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-760">The <xref:System.Windows.Forms.Form.OnActivated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-761">重写此方法是处理派生类中的事件的首选的技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-761">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-762">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-762">When overriding <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-763">包该数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-763">An <see cref="T:System.EventArgs" /> that contains the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-764">引发 <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-764">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-765">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-765">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-766">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-766">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-767"><xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-767">The <xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-768">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-768">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-769">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-769">When overriding <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageLayoutChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-770">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-770">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-771">引发 <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-771">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-772">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-772">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-773">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-773">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-774"><xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-774">The <xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-775">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-775">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-776">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-776">When overriding <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-777">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-777">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-778">引发 <see cref="E:System.Windows.Forms.Form.Closed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-778">Raises the <see cref="E:System.Windows.Forms.Form.Closed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="4565e-779"><xref:System.Windows.Forms.Form.OnClosed%2A>方法是.NET Framework 2.0 版中过时的; 使用<xref:System.Windows.Forms.Form.OnFormClosed%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="4565e-779">The <xref:System.Windows.Forms.Form.OnClosed%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosed%2A> method instead.</span></span>  
  
 <span data-ttu-id="4565e-780">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-780">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-781">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-781">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-782"><xref:System.Windows.Forms.Form.OnFormClosed%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-782">The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-783">重写此方法是处理派生类中的事件的首选的技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-783">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4565e-784"><xref:System.Windows.Forms.Form.OnClosed%2A>和<xref:System.Windows.Forms.Form.OnClosing%2A>方法不调用时<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>调用方法以退出应用程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-784">The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="4565e-785">如果你有必须执行这些方法之一的验证代码，则应调用<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>单独之前调用每个打开的窗体的方法<xref:System.Windows.Forms.Application.Exit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-785">If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-786">下面的代码示例演示如何重写<xref:System.Windows.Forms.Form.OnClosed%2A>从派生类中的方法<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="4565e-786">The following code example demonstrates how to override the <xref:System.Windows.Forms.Form.OnClosed%2A> method in a class derived from <xref:System.Windows.Forms.Form> .</span></span>  
  
 [!code-cpp[System.Drawing.PointsAndSizes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.PointsAndSizes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.PointsAndSizes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-787">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-787">When overriding <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Closed" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosing(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosing (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosing(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-788">包含事件数据的 <see cref="T:System.ComponentModel.CancelEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-788">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-789">引发 <see cref="E:System.Windows.Forms.Form.Closing" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-789">Raises the <see cref="E:System.Windows.Forms.Form.Closing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="4565e-790"><xref:System.Windows.Forms.Form.OnClosing%2A>方法是.NET Framework 2.0 版中过时的; 使用<xref:System.Windows.Forms.Form.OnFormClosing%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="4565e-790">The <xref:System.Windows.Forms.Form.OnClosing%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosing%2A> method instead.</span></span>  
  
 <span data-ttu-id="4565e-791">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-791">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-792">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-792">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-793"><xref:System.Windows.Forms.Form.OnClosing%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-793">The <xref:System.Windows.Forms.Form.OnClosing%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-794">重写此方法是处理派生类中的事件的首选的技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-794">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4565e-795"><xref:System.Windows.Forms.Form.OnClosed%2A>和<xref:System.Windows.Forms.Form.OnClosing%2A>方法不调用时<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>调用方法以退出应用程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-795">The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="4565e-796">如果你有必须执行这些方法之一的验证代码，则应调用<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>单独之前调用每个打开的窗体的方法<xref:System.Windows.Forms.Application.Exit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-796">If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-797">下面的代码示例使用<xref:System.Windows.Forms.Form.Closing>以测试是否中的文本<xref:System.Windows.Forms.TextBox>已更改。</span><span class="sxs-lookup"><span data-stu-id="4565e-797">The following code example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed.</span></span> <span data-ttu-id="4565e-798">如果具有，则要求用户是否将所做的更改保存到文件。</span><span class="sxs-lookup"><span data-stu-id="4565e-798">If it has, the user is asked whether to save the changes to a file.</span></span>  
  
 [!code-cpp[Form.Closing#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Closing/CPP/form1.cpp#1)]
 [!code-csharp[Form.Closing#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Closing/CS/form1.cs#1)]
 [!code-vb[Form.Closing#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Closing/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-799">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-799">When overriding <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Closing" />
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateControl">
      <MemberSignature Language="C#" Value="protected override void OnCreateControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnCreateControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateControl ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4565e-800">引发 <see langword="CreateControl" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-800">Raises the <see langword="CreateControl" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-801">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-801">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-802">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-802">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-803">在重写<see cref="M:System.Windows.Forms.Form.OnCreateControl" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.Form.OnCreateControl" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-803">When overriding <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivate">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivate(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-804">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-804">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-805">引发 <see cref="E:System.Windows.Forms.Form.Deactivate" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-805">Raises the <see cref="E:System.Windows.Forms.Form.Deactivate" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-806">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-806">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-807">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-807">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-808"><xref:System.Windows.Forms.Form.OnDeactivate%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-808">The <xref:System.Windows.Forms.Form.OnDeactivate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-809">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-809">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-810">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-810">When overriding <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Deactivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.Forms.DpiChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(class System.Windows.Forms.DpiChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (e As DpiChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::Forms::DpiChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DpiChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-811">包含事件数据的 <see cref="T:System.Windows.Forms.DpiChangedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-811">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-812">引发 <see cref="E:System.Windows.Forms.Form.DpiChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-812">Raises the <see cref="E:System.Windows.Forms.Form.DpiChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-813">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-813">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-814">引发 <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-814">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnter(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-815">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-815">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-816">引发 <see cref="E:System.Windows.Forms.Control.Enter" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-816">Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-817">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-817">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-818">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-818">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-819"><xref:System.Windows.Forms.Form.OnEnter%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-819">The <xref:System.Windows.Forms.Form.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-820">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-820">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-821">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-821">When overriding <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-822">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-822">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-823">引发 <see cref="E:System.Windows.Forms.Control.FontChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-823">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFormClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnFormClosed (System.Windows.Forms.FormClosedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormClosed(class System.Windows.Forms.FormClosedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormClosed (e As FormClosedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormClosed(System::Windows::Forms::FormClosedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.FormClosedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-824">包含事件数据的 <see cref="T:System.Windows.Forms.FormClosedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-824">A <see cref="T:System.Windows.Forms.FormClosedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-825">引发 <see cref="E:System.Windows.Forms.Form.FormClosed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-825">Raises the <see cref="E:System.Windows.Forms.Form.FormClosed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-826"><xref:System.Windows.Forms.Form.OnFormClosing%2A>方法可以删除从当前窗体<xref:System.Windows.Forms.Application.OpenForms%2A>的关联集合<xref:System.Windows.Forms.Application>。</span><span class="sxs-lookup"><span data-stu-id="4565e-826">The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method removes the current form from the <xref:System.Windows.Forms.Application.OpenForms%2A> collection of the associated <xref:System.Windows.Forms.Application>.</span></span>  
  
 <span data-ttu-id="4565e-827">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-827">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-828">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-828">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-829"><xref:System.Windows.Forms.Form.OnFormClosed%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-829">The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-830">重写此方法是处理派生类中的事件的首选的技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-830">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-831">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-831">When overriding <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFormClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnFormClosing (System.Windows.Forms.FormClosingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormClosing(class System.Windows.Forms.FormClosingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormClosing (e As FormClosingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormClosing(System::Windows::Forms::FormClosingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.FormClosingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-832">包含事件数据的 <see cref="T:System.Windows.Forms.FormClosingEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-832">A <see cref="T:System.Windows.Forms.FormClosingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-833">引发 <see cref="E:System.Windows.Forms.Form.FormClosing" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-833">Raises the <see cref="E:System.Windows.Forms.Form.FormClosing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-834">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-834">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-835">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-835">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-836"><xref:System.Windows.Forms.Form.OnFormClosing%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-836">The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-837">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-837">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-838">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-838">When overriding <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGetDpiScaledSize">
      <MemberSignature Language="C#" Value="protected virtual bool OnGetDpiScaledSize (int deviceDpiOld, int deviceDpiNew, ref System.Drawing.Size desiredSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnGetDpiScaledSize(int32 deviceDpiOld, int32 deviceDpiNew, valuetype System.Drawing.Size&amp; desiredSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetDpiScaledSize (deviceDpiOld As Integer, deviceDpiNew As Integer, ByRef desiredSize As Size) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnGetDpiScaledSize(int deviceDpiOld, int deviceDpiNew, System::Drawing::Size % desiredSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDpiOld" Type="System.Int32" />
        <Parameter Name="deviceDpiNew" Type="System.Int32" />
        <Parameter Name="desiredSize" Type="System.Drawing.Size&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="deviceDpiOld">
          <span data-ttu-id="4565e-839">以前显示窗体的显示设备的 DPI 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-839">The DPI value for the display device where the form was previously displayed.</span>
          </span>
        </param>
        <param name="deviceDpiNew">
          <span data-ttu-id="4565e-840">将显示窗体的显示设备的 DPI 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-840">The DPI value for the display device where the form will be displayed.</span>
          </span>
        </param>
        <param name="desiredSize">
          <span data-ttu-id="4565e-841">表示基于新 DPI 值的窗体的新大小的 <see cref="T:System.Drawing.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-841">A <see cref="T:System.Drawing.Size" /> representing the new size of the form based on the new DPI value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-842">引发 GetDpiScaledSize 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-842">Raises the GetDpiScaledSize event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-843">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-843">
              <see langword="true" /> if successful; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-844">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-844">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-845">引发 <see cref="E:System.Windows.Forms.Control.HandleCreated" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-845">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-846">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-846">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-847">引发 <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-847">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHelpButtonClicked">
      <MemberSignature Language="C#" Value="protected virtual void OnHelpButtonClicked (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHelpButtonClicked(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHelpButtonClicked (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHelpButtonClicked(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-848">包含事件数据的 <see cref="T:System.ComponentModel.CancelEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-848">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-849">引发 <see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-849">Raises the <see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-850">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-850">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-851">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-851">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-852"><xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-852">The <xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-853">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-853">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-854">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-854">When overriding <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.HelpButtonClicked" />
        <altmember cref="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
        <altmember cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInputLanguageChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnInputLanguageChanged (System.Windows.Forms.InputLanguageChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInputLanguageChanged(class System.Windows.Forms.InputLanguageChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInputLanguageChanged (e As InputLanguageChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInputLanguageChanged(System::Windows::Forms::InputLanguageChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InputLanguageChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-855">包含事件数据的 <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-855">The <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-856">引发 <see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-856">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-857">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-857">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-858">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-858">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-859"><xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-859">The <xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-860">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-860">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-861">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-861">When overriding <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <altmember cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInputLanguageChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnInputLanguageChanging (System.Windows.Forms.InputLanguageChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInputLanguageChanging(class System.Windows.Forms.InputLanguageChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInputLanguageChanging (e As InputLanguageChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInputLanguageChanging(System::Windows::Forms::InputLanguageChangingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InputLanguageChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-862">包含事件数据的 <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-862">The <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-863">引发 <see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-863">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-864">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-864">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-865">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-865">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-866"><xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-866">The <xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-867">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-867">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-868">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-868">When overriding <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <altmember cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent">
          <span data-ttu-id="4565e-869">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-869">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-870">引发 <see cref="E:System.Windows.Forms.Control.Layout" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-870">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-871">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-871">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-872">引发 <see cref="E:System.Windows.Forms.Form.Load" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-872">Raises the <see cref="E:System.Windows.Forms.Form.Load" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-873">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-873">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-874">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-874">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-875"><xref:System.Windows.Forms.Form.OnLoad%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-875">The <xref:System.Windows.Forms.Form.OnLoad%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-876">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-876">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-877">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-877">When overriding <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMaximizedBoundsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaximizedBoundsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaximizedBoundsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaximizedBoundsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaximizedBoundsChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-878">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-878">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-879">引发 <see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-879">Raises the <see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-880">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-880">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-881">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-881">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-882"><xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-882">The <xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-883">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-883">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-884">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-884">When overriding <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMaximumSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaximumSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaximumSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaximumSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaximumSizeChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-885">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-885">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-886">引发 <see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-886">Raises the <see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-887">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-887">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-888">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-888">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-889"><xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-889">The <xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-890">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-890">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-891">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-891">When overriding <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="E:System.Windows.Forms.Form.MaximumSizeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMdiChildActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnMdiChildActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMdiChildActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMdiChildActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMdiChildActivate(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-892">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-892">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-893">引发 <see cref="E:System.Windows.Forms.Form.MdiChildActivate" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-893">Raises the <see cref="E:System.Windows.Forms.Form.MdiChildActivate" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-894">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-894">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-895">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-895">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-896"><xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-896">The <xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-897">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-897">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-898">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-898">When overriding <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MdiChildActivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuComplete(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-899">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-899">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-900">引发 <see cref="E:System.Windows.Forms.Form.MenuComplete" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-900">Raises the <see cref="E:System.Windows.Forms.Form.MenuComplete" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-901">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-901">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-902">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-902">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-903"><xref:System.Windows.Forms.Form.OnMenuComplete%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-903">The <xref:System.Windows.Forms.Form.OnMenuComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-904">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-904">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-905">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-905">When overriding <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MenuComplete" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuStart">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuStart (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuStart(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuStart (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuStart(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-906">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-906">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-907">引发 <see cref="E:System.Windows.Forms.Form.MenuStart" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-907">Raises the <see cref="E:System.Windows.Forms.Form.MenuStart" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-908">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-908">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-909">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-909">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-910"><xref:System.Windows.Forms.Form.OnMenuStart%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-910">The <xref:System.Windows.Forms.Form.OnMenuStart%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-911">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-911">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-912">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-912">When overriding <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MenuStart" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMinimumSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMinimumSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMinimumSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMinimumSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMinimumSizeChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-913">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-913">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-914">引发 <see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-914">Raises the <see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-915">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-915">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-916">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-916">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-917"><xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-917">The <xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-918">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-918">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-919">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-919">When overriding <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MinimumSizeChanged" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-920">包含事件数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-920">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-921">引发 <see cref="E:System.Windows.Forms.Control.Paint" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-921">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-922">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-922">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-923">引发 <see cref="E:System.Windows.Forms.Control.Resize" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-923">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResizeBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnResizeBegin (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizeBegin(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizeBegin (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizeBegin(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-924">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-924">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-925">引发 <see cref="E:System.Windows.Forms.Form.ResizeBegin" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-925">Raises the <see cref="E:System.Windows.Forms.Form.ResizeBegin" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-926"><xref:System.Windows.Forms.Form.ResizeBegin>将仅引发事件，如果窗体的<xref:System.Windows.Forms.Control.CanRaiseEvents%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-926">The <xref:System.Windows.Forms.Form.ResizeBegin> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="4565e-927">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-927">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-928">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-928">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-929"><xref:System.Windows.Forms.Form.OnResizeBegin%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-929">The <xref:System.Windows.Forms.Form.OnResizeBegin%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-930">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-930">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-931">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-931">When overriding <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.ResizeBegin" />
        <altmember cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResizeEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnResizeEnd (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizeEnd(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizeEnd (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizeEnd(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-932">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-932">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-933">引发 <see cref="E:System.Windows.Forms.Form.ResizeEnd" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-933">Raises the <see cref="E:System.Windows.Forms.Form.ResizeEnd" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-934"><xref:System.Windows.Forms.Form.ResizeEnd>将仅引发事件，如果窗体的<xref:System.Windows.Forms.Control.CanRaiseEvents%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-934">The <xref:System.Windows.Forms.Form.ResizeEnd> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="4565e-935">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-935">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-936">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-936">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-937"><xref:System.Windows.Forms.Form.OnResizeEnd%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-937">The <xref:System.Windows.Forms.Form.OnResizeEnd%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-938">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-938">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-939">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-939">When overriding <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.ResizeEnd" />
        <altmember cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-940">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-940">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-941">引发 <see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-941">Raises the <see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-942">如果当前窗体或其父级之一正在释放资源，<xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A>方法将返回而不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="4565e-942">If the current form or one of its parents is disposing of resources, the <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method will return without performing any action.</span></span> <span data-ttu-id="4565e-943">如果<xref:System.Windows.Forms.Control.RightToLeft%2A>窗体的属性具有的值<xref:System.Windows.Forms.RightToLeft.Yes>，然后将通过对的调用中重新创建窗体及其子控件的句柄<xref:System.Windows.Forms.Control.RecreateHandle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-943">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the form has a value of <xref:System.Windows.Forms.RightToLeft.Yes>, then the handles of the form and its child controls will be recreated through calls to the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 <span data-ttu-id="4565e-944">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-944">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-945">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-945">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-946"><xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-946">The <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-947">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-947">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-948">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-948">When overriding <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
        <altmember cref="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="Overload:System.Windows.Forms.Form.Dispose" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="OnShown">
      <MemberSignature Language="C#" Value="protected virtual void OnShown (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShown(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShown (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShown(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-949">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-949">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-950">引发 <see cref="E:System.Windows.Forms.Form.Shown" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-950">Raises the <see cref="E:System.Windows.Forms.Form.Shown" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-951"><xref:System.Windows.Forms.Form.Shown>事件发生时首次显示窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-951">The <xref:System.Windows.Forms.Form.Shown> event occurs whenever the form is first shown.</span></span>  
  
 <span data-ttu-id="4565e-952">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-952">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-953">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-953">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-954"><xref:System.Windows.Forms.Form.OnShown%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-954">The <xref:System.Windows.Forms.Form.OnShown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-955">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-955">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-956">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-956">When overriding <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected override void OnStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStyleChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-957">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-957">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-958">引发 <see cref="E:System.Windows.Forms.Control.StyleChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-958">Raises the <see cref="E:System.Windows.Forms.Control.StyleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-959">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-959">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-960">引发 <see cref="E:System.Windows.Forms.Control.TextChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-960">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected override void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnVisibleChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4565e-961">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-961">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-962">引发 <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-962">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-963">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-963">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4565e-964">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-964">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4565e-965"><xref:System.Windows.Forms.Form.OnVisibleChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4565e-965">The <xref:System.Windows.Forms.Form.OnVisibleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4565e-966">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4565e-966">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4565e-967">在派生类中重写 <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4565e-967">When overriding <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.OpacityConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-968">获取或设置窗体的不透明度级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-968">Gets or sets the opacity level of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-969">窗体的不透明度级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-969">The level of opacity for the form.</span>
          </span>
          <span data-ttu-id="4565e-970">默认值为 1.00。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-970">The default is 1.00.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-971"><xref:System.Windows.Forms.Form.Opacity%2A>属性使您能够指定为窗体及其控件的透明度级别。</span><span class="sxs-lookup"><span data-stu-id="4565e-971">The <xref:System.Windows.Forms.Form.Opacity%2A> property enables you to specify a level of transparency for the form and its controls.</span></span> <span data-ttu-id="4565e-972">当此属性设置为小于 100%(1.00) 的值时，整个窗体中，包括边框、 进行更加透明。</span><span class="sxs-lookup"><span data-stu-id="4565e-972">When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent.</span></span> <span data-ttu-id="4565e-973">此属性设置为值为 0%(0.00) 使窗体完全不可见。</span><span class="sxs-lookup"><span data-stu-id="4565e-973">Setting this property to a value of 0 percent (0.00) makes the form completely invisible.</span></span> <span data-ttu-id="4565e-974">你可以使用此属性，以提供不同级别的透明度或提供如窗体逐渐加入或退出视图的效果。</span><span class="sxs-lookup"><span data-stu-id="4565e-974">You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view.</span></span> <span data-ttu-id="4565e-975">例如，你可以一个窗体逐渐到视图通过设置<xref:System.Windows.Forms.Form.Opacity%2A>属性 0%(0.00)，而且逐渐增加的值，直至其达到 100%(1.00) 的值。</span><span class="sxs-lookup"><span data-stu-id="4565e-975">For example, you can phase a form into view by setting the <xref:System.Windows.Forms.Form.Opacity%2A> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).</span></span>  
  
 <span data-ttu-id="4565e-976"><xref:System.Windows.Forms.Form.Opacity%2A> 不同于由提供的透明度<xref:System.Windows.Forms.Form.TransparencyKey%2A>、 这只是使窗体和其控件完全透明如果它们是中指定的值与相同的颜色<xref:System.Windows.Forms.Form.TransparencyKey%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-976"><xref:System.Windows.Forms.Form.Opacity%2A> differs from the transparency provided by the <xref:System.Windows.Forms.Form.TransparencyKey%2A>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property.</span></span>  
  
 <span data-ttu-id="4565e-977">此属性不是支持时<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-977">This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.</span></span>  
  
 <span data-ttu-id="4565e-978"><xref:System.Windows.Forms.Form.Opacity%2A>属性依赖于分层的 Windows API 引入了在 Windows 2000 中使用。</span><span class="sxs-lookup"><span data-stu-id="4565e-978">The <xref:System.Windows.Forms.Form.Opacity%2A> property depends on the Layered Windows API that was introduced with Windows 2000.</span></span> <span data-ttu-id="4565e-979">有关详细信息，请参阅"分层 Windows:: 新方式对使用透明度和透明度效果在 Windows 应用程序"中的平台 SDK 文档[ http://msdn.microsoft.com ](http://msdn.microsoft.com/)。</span><span class="sxs-lookup"><span data-stu-id="4565e-979">For more information, see the "Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications" in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-980">下面的代码示例演示如何创建带有 75%的不透明度级别显示窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-980">The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</span></span> <span data-ttu-id="4565e-981">此代码示例创建一个在与屏幕的中心中放置的新窗体<xref:System.Windows.Forms.Form.Opacity%2A>属性设置以更改窗体的不透明度级别。</span><span class="sxs-lookup"><span data-stu-id="4565e-981">The code example creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form.</span></span> <span data-ttu-id="4565e-982">代码示例还将设置<xref:System.Windows.Forms.Form.Size%2A>属性，以提供更大大小超过默认大小的窗体的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-982">The code example also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form.</span></span> <span data-ttu-id="4565e-983">编写此代码示例时，在此示例中定义此方法叫做从事件处理程序或其他方法中的另一种形式的假设。</span><span class="sxs-lookup"><span data-stu-id="4565e-983">This code example was written under the assumption that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.Opacity#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Opacity/CPP/form1.cpp#1)]
 [!code-csharp[Form.Opacity#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Opacity/CS/form1.cs#1)]
 [!code-vb[Form.Opacity#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Opacity/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.TransparencyKey" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="OwnedForms">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form[] OwnedForms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form[] OwnedForms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.OwnedForms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnedForms As Form()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Windows::Forms::Form ^&gt; ^ OwnedForms { cli::array &lt;System::Windows::Forms::Form ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-984">获取 <see cref="T:System.Windows.Forms.Form" /> 对象的数组，这些对象表示此窗体拥有的所有窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-984">Gets an array of <see cref="T:System.Windows.Forms.Form" /> objects that represent all forms that are owned by this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-985">
            <see cref="T:System.Windows.Forms.Form" /> 数组，它表示此窗体的附属窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-985">A <see cref="T:System.Windows.Forms.Form" /> array that represents the owned forms for this form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-986">此属性返回一个数组，包含此窗体拥有的所有窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-986">This property returns an array that contains all forms that are owned by this form.</span></span> <span data-ttu-id="4565e-987">若要使窗体拥有的另一种形式，调用<xref:System.Windows.Forms.Form.AddOwnedForm%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-987">To make a form owned by another form, call the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method.</span></span> <span data-ttu-id="4565e-988">分配给所有者窗体的窗体将保持拥有直到<xref:System.Windows.Forms.Form.RemoveOwnedForm%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-988">The form assigned to the owner form will remain owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="4565e-989">你还可以通过设置拥有的另一个窗体<xref:System.Windows.Forms.Form.Owner%2A>与对其所有者窗体的引用的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-989">You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.</span></span>  
  
 <span data-ttu-id="4565e-990">当窗体拥有的另一种形式时，它被关闭或隐藏与所有者窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-990">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="4565e-991">例如，考虑名为窗体`Form2`归名为窗体`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-991">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="4565e-992">如果`Form1`关闭或最小化，`Form2`也会关闭或隐藏。</span><span class="sxs-lookup"><span data-stu-id="4565e-992">If `Form1` is closed or minimized, `Form2` is also closed or hidden.</span></span> <span data-ttu-id="4565e-993">附属窗体还永远不会显示在其所有者的窗体后面。</span><span class="sxs-lookup"><span data-stu-id="4565e-993">Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="4565e-994">可以拥有的窗体以 windows 使用如查找和替换 windows，不应在选择所有者窗体时显示在所有者窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-994">You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-995">如果窗体是多文档界面 (MDI) 父窗体，该属性将返回当前任何 MDI 子窗体除了显示的所有窗体打开。</span><span class="sxs-lookup"><span data-stu-id="4565e-995">If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open.</span></span> <span data-ttu-id="4565e-996">若要获取在 MDI 父窗体中打开的 MDI 子窗体，请使用<xref:System.Windows.Forms.Form.MdiChildren%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-996">To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-997">下面的代码示例演示如何使用<xref:System.Windows.Forms.Form.OwnedForms%2A>属性修改所有者窗体拥有的所有窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-997">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property to modify all forms owned by the owner form.</span></span> <span data-ttu-id="4565e-998">在示例中第一种方法将窗体添加到与附属窗体的附属窗体的数组。</span><span class="sxs-lookup"><span data-stu-id="4565e-998">The first method in the example adds forms to the array of owned forms associated with the owned form.</span></span> <span data-ttu-id="4565e-999">第二种方法遍历所有附属窗体，并更改标题。</span><span class="sxs-lookup"><span data-stu-id="4565e-999">The second method loops through all owned forms and changes the caption.</span></span> <span data-ttu-id="4565e-1000">此示例需要这两种方法调用的事件或表单的其他方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-1000">This example requires that both methods are called by an event or other method of a form.</span></span>  
  
 [!code-cpp[Form.OwnedForms#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.OwnedForms/CPP/form1.cpp#1)]
 [!code-csharp[Form.OwnedForms#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.OwnedForms/CS/form1.cs#1)]
 [!code-vb[Form.OwnedForms#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.OwnedForms/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ Owner { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1001">获取或设置拥有此窗体的窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1001">Gets or sets the form that owns this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1002">
            <see cref="T:System.Windows.Forms.Form" />，表示作为此窗体的所有者的窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1002">A <see cref="T:System.Windows.Forms.Form" /> that represents the form that is the owner of this form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1003">要将另一个窗体拥有的窗体，将分配其<xref:System.Windows.Forms.Form.Owner%2A>的引用将成为所有者的窗体的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-1003">To make a form owned by another form, assign its <xref:System.Windows.Forms.Form.Owner%2A> property a reference to the form that will be the owner.</span></span>  
  
 <span data-ttu-id="4565e-1004">当窗体拥有的另一种形式时，它被关闭或隐藏与所有者窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1004">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="4565e-1005">例如，考虑名为窗体`Form2`归名为窗体`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1005">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="4565e-1006">如果`Form1`关闭或最小化，`Form2`也会关闭或隐藏。附属窗体还永远不会显示在其所有者的窗体后面。</span><span class="sxs-lookup"><span data-stu-id="4565e-1006">If `Form1` is closed or minimized, `Form2` is also closed or hidden.Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="4565e-1007">你可以拥有的窗体以 windows 使用如查找和替换 windows，选中所有者窗体时应不会消失。</span><span class="sxs-lookup"><span data-stu-id="4565e-1007">You can use owned forms for windows such as find and replace windows, which should not disappear when the owner form is selected.</span></span> <span data-ttu-id="4565e-1008">若要确定属于父窗体的窗体，请使用<xref:System.Windows.Forms.Form.OwnedForms%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-1008">To determine the forms that are owned by a parent form, use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="4565e-1009">顶级窗口不能具有所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1009">A top-level window cannot have an owner.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="4565e-1010">通过引用传递的 <see cref="T:System.Windows.Forms.Message" />，它表示要处理的 Win32 消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1010">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the Win32 message to process.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="4565e-1011">
            <see cref="T:System.Windows.Forms.Keys" /> 值之一，表示要处理的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1011">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1012">处理命令键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1012">Processes a command key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-1013">如果控件处理并使用击键，则为 <see langword="true" />；否则为 <see langword="false" />，以允许进一步处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1013">
              <see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1014"><xref:System.Windows.Forms.Form.ProcessCmdKey%2A>方法重写基</span><span class="sxs-lookup"><span data-stu-id="4565e-1014">The <xref:System.Windows.Forms.Form.ProcessCmdKey%2A> method overrides the base</span></span>  
  
 <span data-ttu-id="4565e-1015"><xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType> 实现以提供的主菜单命令键和 MDI 快捷键的其他处理。</span><span class="sxs-lookup"><span data-stu-id="4565e-1015"><xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType> implementation to provide additional handling of main menu command keys and MDI accelerators.</span></span>  
  
 <span data-ttu-id="4565e-1016">有关捕获击键的信息，请参阅"如何使用 Visual C# 陷阱控件中的键击"和"如何捕获.NET 中的键击控件通过使用 Visual Basic.NET"Microsoft 知识库中在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="4565e-1016">For information about trapping keystrokes, see "How to trap keystrokes in controls by using Visual C#" and "How to trap keystrokes in .NET controls by using Visual Basic .NET" in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="T:System.Windows.Forms.Message" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogChar">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogChar(char charCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="4565e-1017">要处理的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1017">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1018">处理对话框字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1018">Processes a dialog character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-1019">如果字符已由控件处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1019">
              <see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="4565e-1020">
            <see cref="T:System.Windows.Forms.Keys" /> 值之一，表示要处理的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1020">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1021">处理对话框键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1021">Processes a dialog box key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-1022">如果控件处理并使用击键，则为 <see langword="true" />；否则为 <see langword="false" />，以允许进一步处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1022">
              <see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1023"><xref:System.Windows.Forms.Form.ProcessDialogKey%2A>方法重写基<xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType>实现以提供的对话框中的返回和转义键的其他处理。</span><span class="sxs-lookup"><span data-stu-id="4565e-1023">The <xref:System.Windows.Forms.Form.ProcessDialogKey%2A> method overrides the base <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes.</span></span> <span data-ttu-id="4565e-1024">该方法对包括的 ALT 或控件的修饰符的击键执行不会进行处理。</span><span class="sxs-lookup"><span data-stu-id="4565e-1024">The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="4565e-1025">通过引用传递的 <see cref="T:System.Windows.Forms.Message" />，表示要处理的窗口消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1025">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1026">预览键盘消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1026">Previews a keyboard message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-1027">如果消息已由控件处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1027">
              <see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="4565e-1028">要处理的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1028">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1029">处理助记键字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1029">Processes a mnemonic character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-1030">如果字符由控件作为助记键处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1030">
              <see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTabKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessTabKey (bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessTabKey(bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessTabKey (forward As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessTabKey(bool forward);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forward">
          <span data-ttu-id="4565e-1031">如果在 ContainerControl 内的控件中向前循环，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1031">
              <see langword="true" /> to cycle forward through the controls in the ContainerControl; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1032">选择下一个可用控件并使其成为活动控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1032">Selects the next available control and makes it the active control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-1033">如果选择了一个控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1033">
              <see langword="true" /> if a control is selected; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessTabKey(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOwnedForm">
      <MemberSignature Language="C#" Value="public void RemoveOwnedForm (System.Windows.Forms.Form ownedForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveOwnedForm(class System.Windows.Forms.Form ownedForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveOwnedForm (ownedForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveOwnedForm(System::Windows::Forms::Form ^ ownedForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="ownedForm">
          <span data-ttu-id="4565e-1034">
            <see cref="T:System.Windows.Forms.Form" />，表示要从此窗体的附属窗体列表中移除的窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1034">A <see cref="T:System.Windows.Forms.Form" /> representing the form to remove from the list of owned forms for this form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1035">从此窗体移除附属窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1035">Removes an owned form from this form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1036">分配给所有者窗体的窗体将保持被拥有直到<xref:System.Windows.Forms.Form.RemoveOwnedForm%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-1036">The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="4565e-1037">除了附属窗体移除附属窗体的列表，此方法还将所有者窗体设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1037">In addition to removing the owned form from the list of owned form, this method also sets the owner form to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
      </Docs>
    </Member>
    <Member MemberName="ResizeBegin">
      <MemberSignature Language="C#" Value="public event EventHandler ResizeBegin;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResizeBegin" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.ResizeBegin" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResizeBegin As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResizeBegin;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1038">窗体进入大小调整模式时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1038">Occurs when a form enters resizing mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1039"><xref:System.Windows.Forms.Form.ResizeBegin>在用户开始调整窗体中，大小通常，通过单击和拖动其中一个边框或位于在窗体右下角的大小调整手柄时引发事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1039">The <xref:System.Windows.Forms.Form.ResizeBegin> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form.</span></span> <span data-ttu-id="4565e-1040">此操作将窗体进入大小调整模式循环，直到大小调整操作完成。</span><span class="sxs-lookup"><span data-stu-id="4565e-1040">This action puts the form into a modal sizing loop until the resize operation is completed.</span></span> <span data-ttu-id="4565e-1041">通常情况下，调整大小操作期间发生以下一组事件：</span><span class="sxs-lookup"><span data-stu-id="4565e-1041">Typically, the following set of events occurs during a resize operation:</span></span>  
  
1.  <span data-ttu-id="4565e-1042">单个<xref:System.Windows.Forms.Form.ResizeBegin>事件发生窗体进入大小调整模式。</span><span class="sxs-lookup"><span data-stu-id="4565e-1042">A single <xref:System.Windows.Forms.Form.ResizeBegin> event occurs as the form enters resizing mode.</span></span>  
  
2.  <span data-ttu-id="4565e-1043">零个或多个对<xref:System.Windows.Forms.Control.Resize>和<xref:System.Windows.Forms.Control.SizeChanged>事件发生为窗体的<xref:System.Windows.Forms.Form.Size%2A>被修改。</span><span class="sxs-lookup"><span data-stu-id="4565e-1043">Zero or more pairs of <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> events occur as the form's <xref:System.Windows.Forms.Form.Size%2A> is modified.</span></span>  
  
3.  <span data-ttu-id="4565e-1044">单个<xref:System.Windows.Forms.Form.ResizeEnd>事件发生窗体退出大小调整模式。</span><span class="sxs-lookup"><span data-stu-id="4565e-1044">A single <xref:System.Windows.Forms.Form.ResizeEnd> event occurs as the form exits resizing mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-1045">只通过单击而无需拖动边框或大小调整手柄将生成<xref:System.Windows.Forms.Form.ResizeBegin>和<xref:System.Windows.Forms.Form.ResizeEnd>事件而无需任何中间<xref:System.Windows.Forms.Control.Resize>和<xref:System.Windows.Forms.Control.SizeChanged>事件对。</span><span class="sxs-lookup"><span data-stu-id="4565e-1045">Just clicking without dragging on a border or resizing grip will generate the <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> events without any intermediate <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> event pairs.</span></span>  
  
 <span data-ttu-id="4565e-1046"><xref:System.Windows.Forms.Form.ResizeBegin>和<xref:System.Windows.Forms.Form.ResizeEnd>当用户将窗体中，通常通过单击和拖动在标题栏上，也会引发的事件对。</span><span class="sxs-lookup"><span data-stu-id="4565e-1046">The <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar.</span></span> <span data-ttu-id="4565e-1047">这些事件不由生成的窗体中，编程操作例如通过更改<xref:System.Windows.Forms.Form.Size%2A>或<xref:System.Windows.Forms.Control.Location%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-1047">These events are not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.</span></span>  
  
 <span data-ttu-id="4565e-1048">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-1048">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1049">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-1049">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-1050">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.ResizeBegin>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1050">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span> <span data-ttu-id="4565e-1051">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-1051">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-1052">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-1052">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-1053">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1053">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-1054">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.ResizeBegin>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1054">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#404](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#404)]
 [!code-vb[System.Windows.Forms.EventExamples#404](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#404)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.Control.PreferredSize" />
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Form.SizeGripStyle" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
        <altmember cref="E:System.Windows.Forms.Form.ResizeEnd" />
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResizeEnd">
      <MemberSignature Language="C#" Value="public event EventHandler ResizeEnd;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResizeEnd" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.ResizeEnd" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResizeEnd As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResizeEnd;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1055">窗体退出大小调整模式时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1055">Occurs when a form exits resizing mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1056"><xref:System.Windows.Forms.Form.ResizeEnd>用户完成调整大小操作窗体中，通常通过拖动其中一个边框或大小调整手柄的右下角的窗体中，然后将其释放时，将引发事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1056">The <xref:System.Windows.Forms.Form.ResizeEnd> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it.</span></span> <span data-ttu-id="4565e-1057">有关大小调整操作的详细信息，请参阅<xref:System.Windows.Forms.Form.ResizeBegin>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1057">For more information about the resizing operation, see the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span>  
  
 <span data-ttu-id="4565e-1058"><xref:System.Windows.Forms.Form.ResizeEnd>之后用户移动窗体中，通常通过单击和拖动在标题栏上，也会生成事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1058">The <xref:System.Windows.Forms.Form.ResizeEnd> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar.</span></span> <span data-ttu-id="4565e-1059">此事件不由生成的窗体中，编程操作例如通过更改<xref:System.Windows.Forms.Form.Size%2A>或<xref:System.Windows.Forms.Control.Location%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-1059">This event is not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.</span></span>  
  
 <span data-ttu-id="4565e-1060">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-1060">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1061">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-1061">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-1062">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.ResizeEnd>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1062">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.ResizeEnd> event.</span></span> <span data-ttu-id="4565e-1063">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-1063">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-1064">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-1064">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-1065">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1065">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-1066">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.ResizeEnd>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1066">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.ResizeEnd> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#405](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#405)]
 [!code-vb[System.Windows.Forms.EventExamples#405](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#405)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.Control.PreferredSize" />
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Form.SizeGripStyle" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
        <altmember cref="E:System.Windows.Forms.Form.ResizeBegin" />
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="RestoreBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RestoreBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle RestoreBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.RestoreBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle RestoreBounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1067">获取窗体在其正常窗口状态下的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1067">Gets the location and size of the form in its normal window state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1068">
            <see cref="T:System.Drawing.Rectangle" />，包含窗体在正常窗口状态下的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1068">A <see cref="T:System.Drawing.Rectangle" /> that contains the location and size of the form in the normal window state.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1069">通常情况下，使用<xref:System.Windows.Forms.Form.RestoreBounds%2A>属性跟踪用户的窗口大小，并在其正常窗口状态放置窗体的首选项。</span><span class="sxs-lookup"><span data-stu-id="4565e-1069">Typically, you use the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property to track the user's window size and position preferences for the form in its normal window state.</span></span> <span data-ttu-id="4565e-1070">应跟踪这两个值的<xref:System.Windows.Forms.Form.WindowState%2A>和<xref:System.Windows.Forms.Form.RestoreBounds%2A>属性跟踪用户的窗口首选项时。</span><span class="sxs-lookup"><span data-stu-id="4565e-1070">You should track both the value of the <xref:System.Windows.Forms.Form.WindowState%2A> and <xref:System.Windows.Forms.Form.RestoreBounds%2A> properties when tracking the user's window preferences.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-1071">值<xref:System.Windows.Forms.Form.RestoreBounds%2A>属性是仅当<xref:System.Windows.Forms.Form.WindowState%2A>属性<xref:System.Windows.Forms.Form>类是否不等于<xref:System.Windows.Forms.FormWindowState.Normal>。</span><span class="sxs-lookup"><span data-stu-id="4565e-1071">The value of the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property is valid only when the <xref:System.Windows.Forms.Form.WindowState%2A> property of the <xref:System.Windows.Forms.Form> class is not equal to <xref:System.Windows.Forms.FormWindowState.Normal>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1072">获取或设置一个值，该值指示是否打开从右向左的镜像放置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1072">Gets or sets a value indicating whether right-to-left mirror placement is turned on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1073">如果打开了从右到左的镜像放置，则为 <see langword="true" />；否则对于标准子控件放置，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1073">
              <see langword="true" /> if right-to-left mirror placement is turned on; otherwise, <see langword="false" /> for standard child control placement.</span>
          </span>
          <span data-ttu-id="4565e-1074">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1074">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1075"><xref:System.Windows.Forms.Form.RightToLeftLayout%2A>属性是主要用于为全球受众开发全球通用的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1075">The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is primarily useful for developing world-ready forms for worldwide audiences.</span></span> <span data-ttu-id="4565e-1076">许多窗体经过专门设计，因此，以从左到右的方式在窗体上的控件进行布局。</span><span class="sxs-lookup"><span data-stu-id="4565e-1076">Many forms are designed so that controls are laid out on a form in a left-to-right fashion.</span></span> <span data-ttu-id="4565e-1077">这些窗体将遵循此编写指导的语言与兼容。</span><span class="sxs-lookup"><span data-stu-id="4565e-1077">These forms are compatible with languages that follow this writing direction.</span></span> <span data-ttu-id="4565e-1078">但是，当向右到左语言的用户显示相同的窗体时，通常最好是反向窗体上控件的顺序。</span><span class="sxs-lookup"><span data-stu-id="4565e-1078">However, when you display the same forms to users of right-to-left languages, it is often preferable to reverse the order of the controls on the form.</span></span> <span data-ttu-id="4565e-1079">如果这两个<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>和<xref:System.Windows.Forms.Control.RightToLeft%2A>属性`true`，镜像将打开窗体，并且控件放置和文本流将为从右到左。</span><span class="sxs-lookup"><span data-stu-id="4565e-1079">If both the <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties are `true`, mirroring will be turned on for the form, and control placement and text flow will be right-to-left.</span></span>  
  
 <span data-ttu-id="4565e-1080">与不同<xref:System.Windows.Forms.Control.RightToLeft%2A>，<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>不会继承。</span><span class="sxs-lookup"><span data-stu-id="4565e-1080">Unlike <xref:System.Windows.Forms.Control.RightToLeft%2A>, <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> does not inherit.</span></span> <span data-ttu-id="4565e-1081">如果您希望其生效子控件，你必须将它设置每个要镜像的子控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1081">If you want it to take effect for child controls, you must set it on each child control that you want mirrored.</span></span>  
  
 <span data-ttu-id="4565e-1082">不是所有者描述支持时<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>设置为`Yes`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1082">Owner draw is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `Yes`.</span></span> <span data-ttu-id="4565e-1083">仍将发生所有者 draw 事件，但未定义这些事件中编写任何代码的行为。</span><span class="sxs-lookup"><span data-stu-id="4565e-1083">The owner draw events will still occur, but the behavior of any code you author in these events is not defined.</span></span> <span data-ttu-id="4565e-1084">此外， <xref:System.Windows.Forms.Control.BackgroundImage%2A>， <xref:System.Windows.Forms.Form.Opacity%2A>， <xref:System.Windows.Forms.Form.TransparencyKey%2A>，并且不支持绘制事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1084">Additionally, <xref:System.Windows.Forms.Control.BackgroundImage%2A>, <xref:System.Windows.Forms.Form.Opacity%2A>, <xref:System.Windows.Forms.Form.TransparencyKey%2A>, and the painting events are not supported.</span></span>  
  
 <span data-ttu-id="4565e-1085"><xref:System.Windows.Forms.Form.RightToLeftLayout%2A>和<xref:System.Windows.Forms.Control.RightToLeft%2A>属性会导致以下 Win32 API 窗口样式设置：</span><span class="sxs-lookup"><span data-stu-id="4565e-1085">The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties cause the following Win32 API window styles to be set:</span></span>  
  
-   <span data-ttu-id="4565e-1086">当<xref:System.Windows.Forms.Control.RightToLeft%2A>设置为`Yes`和<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>设置为`true`，Windows 窗体设置`WS_EX_LAYOUTRTL`窗口样式，并移除`WS_EX_RIGHT`和`WS_EX_RTLREADING`样式。</span><span class="sxs-lookup"><span data-stu-id="4565e-1086">When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `true`, Windows Forms sets the `WS_EX_LAYOUTRTL` window style, and removes the `WS_EX_RIGHT` and `WS_EX_RTLREADING` styles.</span></span>  
  
-   <span data-ttu-id="4565e-1087">当<xref:System.Windows.Forms.Control.RightToLeft%2A>设置为`Yes`但<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>设置为`No`，Windows 窗体设置`WS_EX_RIGHT`和`WS_EX_RTLREADING`窗口样式。</span><span class="sxs-lookup"><span data-stu-id="4565e-1087">When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` but <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `No`, Windows Forms sets the `WS_EX_RIGHT` and `WS_EX_RTLREADING` window styles.</span></span>  
  
 <span data-ttu-id="4565e-1088">更改此属性的值引发<xref:System.Windows.Forms.Form.RightToLeftLayoutChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1088">Changing the value of this property raises the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span>  
  
 <span data-ttu-id="4565e-1089">有关的全球化问题的详细信息，请参阅[开发全球通用应用程序的最佳实践](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-1089">For more information about globalization issues, see [Best Practices for Developing World-Ready Applications](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="Overload:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1090">更改 <see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /> 属性值之后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1090">Occurs after the value of the <see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1091"><xref:System.Windows.Forms.Control.RightToLeft%2A>和<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>属性通常用在开发全球通用应用程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-1091">The <xref:System.Windows.Forms.Control.RightToLeft%2A> and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> properties are typically used in developing World-Ready applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1092">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-1092">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-1093">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.RightToLeftLayoutChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1093">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span> <span data-ttu-id="4565e-1094">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-1094">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-1095">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-1095">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-1096">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1096">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-1097">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.RightToLeftLayoutChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1097">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#402](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#402)]
 [!code-vb[System.Windows.Forms.EventExamples#402](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#402)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <altmember cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="factor">
          <span data-ttu-id="4565e-1098">控件高度和宽度的缩放因子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1098">The factor by which the height and width of the control are scaled.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="4565e-1099">一个 <see cref="T:System.Windows.Forms.BoundsSpecified" /> 值，指定在定义控件的大小和位置时要使用的控件边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1099">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1100">缩放控件的位置、大小、空白和边距。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1100">Scales the location, size, padding, and margin of a control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleCore">
      <MemberSignature Language="C#" Value="protected override void ScaleCore (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleCore(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleCore (x As Single, y As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleCore(float x, float y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="4565e-1101">水平缩放窗体的百分比</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1101">Percentage to scale the form horizontally</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="4565e-1102">垂直缩放窗体的百分比</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1102">Percentage to scale the form vertically</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1103">执行窗体缩放操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1103">Performs scaling of the form.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected override void Select (bool directed, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Select(bool directed, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Select (directed As Boolean, forward As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Select(bool directed, bool forward);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directed" Type="System.Boolean" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directed">
          <span data-ttu-id="4565e-1104">如果设置为 true，则更改活动控件</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1104">If set to true that the active control is changed</span>
          </span>
        </param>
        <param name="forward">
          <span data-ttu-id="4565e-1105">如果 directed 为 true，则它控制焦点移动的方向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1105">If directed is true, then this controls the direction in which focus is moved.</span>
          </span>
          <span data-ttu-id="4565e-1106">如果此项为 <see langword="true" />，则下一个控件被选定；否则，上一个控件被选定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1106">If this is <see langword="true" />, then the next control is selected; otherwise, the previous control is selected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1107">选择此窗体，并且可以选择下一个或上一个控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1107">Selects this form, and optionally selects the next or previous control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4565e-1108">用于更改焦点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1108">For changing focus.</span>
          </span>
          <span data-ttu-id="4565e-1109">关联枚举：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1109">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="4565e-1110">控件的新 <see cref="P:System.Windows.Forms.Control.Left" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1110">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="4565e-1111">控件的新 <see cref="P:System.Windows.Forms.Control.Top" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1111">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="4565e-1112">控件的新 <see cref="P:System.Windows.Forms.Control.Width" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1112">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="4565e-1113">控件的新 <see cref="P:System.Windows.Forms.Control.Height" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1113">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="4565e-1114">
            <see cref="T:System.Windows.Forms.BoundsSpecified" /> 值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1114">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1115">执行设置该控件的指定边界的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1115">Performs the work of setting the specified bounds of this control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="SetClientSizeCore">
      <MemberSignature Language="C#" Value="protected override void SetClientSizeCore (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetClientSizeCore(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetClientSizeCore (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetClientSizeCore(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="4565e-1116">请求的工作区宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1116">Requested width of the client region.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="4565e-1117">请求的工作区高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1117">Requested height of the client region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1118">设置窗体的工作区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1118">Sets the client size of the form.</span>
          </span>
          <span data-ttu-id="4565e-1119">这将调整窗体的界限，以将工作区大小设置为请求的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1119">This will adjust the bounds of the form to make the client size the requested size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
      </Docs>
    </Member>
    <Member MemberName="SetDesktopBounds">
      <MemberSignature Language="C#" Value="public void SetDesktopBounds (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDesktopBounds(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDesktopBounds (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDesktopBounds(int x, int y, int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="4565e-1120">窗体位置的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1120">The x-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="4565e-1121">窗体位置的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1121">The y-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="4565e-1122">窗体的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1122">The width of the form.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="4565e-1123">窗体的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1123">The height of the form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1124">以桌面坐标设置窗体的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1124">Sets the bounds of the form in desktop coordinates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1125">桌面坐标相对于屏幕，其中不包括任务栏的工作区域。</span><span class="sxs-lookup"><span data-stu-id="4565e-1125">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="4565e-1126">你可以使用此方法在桌面上设置的位置和大小的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1126">You can use this method to set the position and size of your form on the desktop.</span></span> <span data-ttu-id="4565e-1127">因为桌面坐标基于窗体的工作区域，可以使用此方法以确保你的窗体是完全在桌面上可见。</span><span class="sxs-lookup"><span data-stu-id="4565e-1127">Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1128">下面的代码示例演示如何使用<xref:System.Windows.Forms.Form.SetDesktopBounds%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-1128">The following code example demonstrates using the <xref:System.Windows.Forms.Form.SetDesktopBounds%2A> method.</span></span> <span data-ttu-id="4565e-1129">若要运行此示例中，粘贴以下代码中包含名为的按钮的窗体`Button2`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1129">To run this example, paste the following code in a form that contains a button named `Button2`.</span></span> <span data-ttu-id="4565e-1130">确保所有事件都都其事件处理程序关联。</span><span class="sxs-lookup"><span data-stu-id="4565e-1130">Ensure all events are associated with their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.FormExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.FormExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDesktopLocation">
      <MemberSignature Language="C#" Value="public void SetDesktopLocation (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDesktopLocation(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDesktopLocation (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDesktopLocation(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="4565e-1131">窗体位置的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1131">The x-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="4565e-1132">窗体位置的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1132">The y-coordinate of the form's location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1133">以桌面坐标设置窗体的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1133">Sets the location of the form in desktop coordinates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1134">桌面坐标相对于屏幕，其中不包括任务栏的工作区域。</span><span class="sxs-lookup"><span data-stu-id="4565e-1134">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="4565e-1135">此方法可用于在桌面上定位你的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1135">You can use this method to position your form on the desktop.</span></span> <span data-ttu-id="4565e-1136">因为桌面坐标基于窗体的工作区域，可以使用此方法以确保你的窗体是完全在桌面上可见。</span><span class="sxs-lookup"><span data-stu-id="4565e-1136">Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</span></span> <span data-ttu-id="4565e-1137">此方法应主要用于顶级窗体;使用<xref:System.Windows.Forms.Form.LayoutMdi%2A>方法定位多文档界面 (MDI) 子窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1137">This method is intended to be used primarily for top-level forms; use the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to position multiple-document interface (MDI) child forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1138">下面的代码示例演示如何使用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>，<xref:System.Windows.Forms.Form.Load>和<xref:System.Windows.Forms.Form.Activate%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-1138">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="4565e-1139">若要运行该示例，请将以下代码粘贴在窗体调用`Form1`包含一个按钮调用`Button1`和两个`Label`控件称为`Label1`和`Label2`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1139">To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected override void SetVisibleCore (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetVisibleCore(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetVisibleCore (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetVisibleCore(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4565e-1140">
            <see langword="true" /> 表示使控件可见；<see langword="false" /> 表示使控件不可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1140">
              <see langword="true" /> to make the control visible; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1141">将控件设置为指定的可见状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1141">Sets the control to the specified visible state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (owner As IWin32Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="4565e-1142">任何实现 <see cref="T:System.Windows.Forms.IWin32Window" /> 并表示将拥有此窗体的顶级窗口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1142">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> and represents the top-level window that will own this form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1143">向用户显示具有指定所有者的窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1143">Shows the form with the specified owner to the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1144">此方法可用于显示的非模式窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1144">You can use this method to display a non-modal form.</span></span> <span data-ttu-id="4565e-1145">当你使用此方法，<xref:System.Windows.Forms.Form.Owner%2A>窗体的属性设置为`owner`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1145">When you use this method, the <xref:System.Windows.Forms.Form.Owner%2A> property of the form is set to `owner`.</span></span> <span data-ttu-id="4565e-1146">非模式窗体可以使用<xref:System.Windows.Forms.Form.Owner%2A>属性以获取有关所属的窗体的信息。</span><span class="sxs-lookup"><span data-stu-id="4565e-1146">The non-modal form can use the <xref:System.Windows.Forms.Form.Owner%2A> property to get information about the owning form.</span></span>  <span data-ttu-id="4565e-1147">调用此方法等同于设置<xref:System.Windows.Forms.Form.Owner%2A>非模式的属性，然后再调用<xref:System.Windows.Forms.Control.Show>方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-1147">Calling this method is identical to setting the <xref:System.Windows.Forms.Form.Owner%2A> property of the non-modal and then calling the <xref:System.Windows.Forms.Control.Show> method.</span></span>  
  
 <span data-ttu-id="4565e-1148">显示窗体等效于设置<xref:System.Windows.Forms.Control.Visible%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1148">Showing the form is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`.</span></span> <span data-ttu-id="4565e-1149">后<xref:System.Windows.Forms.Form.Show%2A>调用方法时，<xref:System.Windows.Forms.Control.Visible%2A>属性返回的值`true`直到<xref:System.Windows.Forms.Control.Hide%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-1149">After the <xref:System.Windows.Forms.Form.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4565e-1150">要显示的窗体已经可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1150">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="4565e-1151">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1151">-or-</span>
          </span>
          <span data-ttu-id="4565e-1152">
            <paramref name="owner" /> 参数中指定的窗体就是显示的窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1152">The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span>
          </span>
          <span data-ttu-id="4565e-1153">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1153">-or-</span>
          </span>
          <span data-ttu-id="4565e-1154">所显示窗体被禁用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1154">The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="4565e-1155">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1155">-or-</span>
          </span>
          <span data-ttu-id="4565e-1156">显示的窗体不是顶级窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1156">The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="4565e-1157">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1157">-or-</span>
          </span>
          <span data-ttu-id="4565e-1158">显示为对话框的窗体已经是模式窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1158">The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="4565e-1159">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1159">-or-</span>
          </span>
          <span data-ttu-id="4565e-1160">当前进程不是以用户交互模式运行的（有关更多信息，请参见 <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1160">The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Forms.Form.ShowDialog" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
        <altmember cref="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <altmember cref="P:System.Windows.Forms.Form.ShowIcon" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowDialog">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1161">将窗体显示为模式对话框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1161">Shows the form as a modal dialog box.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1162">将窗体显示为模式对话框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1162">Shows the form as a modal dialog box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-1163">
            <see cref="T:System.Windows.Forms.DialogResult" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1163">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1164">此方法可用于在你的应用程序中显示模式对话框。</span><span class="sxs-lookup"><span data-stu-id="4565e-1164">You can use this method to display a modal dialog box in your application.</span></span> <span data-ttu-id="4565e-1165">当调用此方法时，后面的代码后关闭该对话框不执行之前。</span><span class="sxs-lookup"><span data-stu-id="4565e-1165">When this method is called, the code following it is not executed until after the dialog box is closed.</span></span> <span data-ttu-id="4565e-1166">对话框中可以分配的值之一<xref:System.Windows.Forms.DialogResult>枚举通过将其分配给<xref:System.Windows.Forms.Button.DialogResult%2A>属性<xref:System.Windows.Forms.Button>窗体上或通过设置<xref:System.Windows.Forms.Form.DialogResult%2A>的窗体代码中的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-1166">The dialog box can be assigned one of the values of the <xref:System.Windows.Forms.DialogResult> enumeration by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code.</span></span> <span data-ttu-id="4565e-1167">此方法然后返回此值。</span><span class="sxs-lookup"><span data-stu-id="4565e-1167">This value is then returned by this method.</span></span> <span data-ttu-id="4565e-1168">此返回值可用于确定如何处理发生在对话框中的操作。</span><span class="sxs-lookup"><span data-stu-id="4565e-1168">You can use this return value to determine how to process the actions that occurred in the dialog box.</span></span> <span data-ttu-id="4565e-1169">例如，如果对话框已关闭并返回`DialogResult.Cancel`值通过这种方法，你可以阻止之后对调用代码<xref:System.Windows.Forms.Form.ShowDialog%2A>执行。</span><span class="sxs-lookup"><span data-stu-id="4565e-1169">For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.</span></span>  
  
 <span data-ttu-id="4565e-1170">当窗体显示为模式对话框中时，单击**关闭**按钮 （带有窗体的右上角的 X 按钮） 将导致要隐藏的窗体和<xref:System.Windows.Forms.Form.DialogResult%2A>属性设置为`DialogResult.Cancel`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1170">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="4565e-1171">与非模式窗体，不同<xref:System.Windows.Forms.Form.Close%2A>方法不在用户单击对话框中的关闭窗体按钮或设置的值时由.NET Framework 调用<xref:System.Windows.Forms.Form.DialogResult%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-1171">Unlike non-modal forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="4565e-1172">改为窗体将隐藏，并且可以再次显示而无需创建对话框中的新实例。</span><span class="sxs-lookup"><span data-stu-id="4565e-1172">Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="4565e-1173">因为窗体显示为对话框中隐藏而不是关闭，你必须调用<xref:System.Windows.Forms.Control.Dispose%2A>时窗体应用程序不再需要该窗体的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-1173">Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="4565e-1174">此版本的<xref:System.Windows.Forms.Form.ShowDialog%2A>方法没有指定窗体或控件作为其所有者。</span><span class="sxs-lookup"><span data-stu-id="4565e-1174">This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method does not specify a form or control as its owner.</span></span> <span data-ttu-id="4565e-1175">当调用此版本时，当前处于活动状态窗口进行对话框框的所有者。</span><span class="sxs-lookup"><span data-stu-id="4565e-1175">When this version is called, the currently active window is made the owner of the dialog box.</span></span> <span data-ttu-id="4565e-1176">如果你想要指定特定的所有者，则使用此方法的其他版本。</span><span class="sxs-lookup"><span data-stu-id="4565e-1176">If you want to specify a specific owner, use the other version of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1177">下面的代码示例将窗体显示为模式对话框，并才能决定是否要读取的值计算对话框中的返回值<xref:System.Windows.Forms.TextBox>对话框框中窗体上的控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1177">The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form.</span></span> <span data-ttu-id="4565e-1178">此示例需要<xref:System.Windows.Forms.Form>名为`testDialog`创建及其所含的<xref:System.Windows.Forms.TextBox>控件名为`TextBox1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1178">This example requires that a <xref:System.Windows.Forms.Form> named `testDialog` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`.</span></span> <span data-ttu-id="4565e-1179">此外，该示例需要在此示例中的代码是包含和从其他调用<xref:System.Windows.Forms.Form>为了显示`testDialog`为模式对话框。</span><span class="sxs-lookup"><span data-stu-id="4565e-1179">Furthermore, the example requires that code in this example is contained and called from a different <xref:System.Windows.Forms.Form> in order to display `testDialog` as a modal dialog box.</span></span> <span data-ttu-id="4565e-1180">此示例使用的版本<xref:System.Windows.Forms.Form.ShowDialog%2A>，它指定所有者为对话框。</span><span class="sxs-lookup"><span data-stu-id="4565e-1180">The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.ShowDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ShowDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ShowDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ShowDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4565e-1181">要显示的窗体已经可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1181">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="4565e-1182">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1182">-or-</span>
          </span>
          <span data-ttu-id="4565e-1183">所显示窗体被禁用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1183">The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="4565e-1184">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1184">-or-</span>
          </span>
          <span data-ttu-id="4565e-1185">显示的窗体不是顶级窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1185">The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="4565e-1186">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1186">-or-</span>
          </span>
          <span data-ttu-id="4565e-1187">显示为对话框的窗体已经是模式窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1187">The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="4565e-1188">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1188">-or-</span>
          </span>
          <span data-ttu-id="4565e-1189">当前进程不是以用户交互模式运行的（有关更多信息，请参见 <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1189">The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog (owner As IWin32Window) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="4565e-1190">任何实现 <see cref="T:System.Windows.Forms.IWin32Window" />（表示将拥有模式对话框的顶级窗口）的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1190">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the top-level window that will own the modal dialog box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1191">将窗体显示为具有指定所有者的模式对话框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1191">Shows the form as a modal dialog box with the specified owner.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-1192">
            <see cref="T:System.Windows.Forms.DialogResult" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1192">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1193">此方法可用于在你的应用程序中显示模式对话框。</span><span class="sxs-lookup"><span data-stu-id="4565e-1193">You can use this method to display a modal dialog box in your application.</span></span> <span data-ttu-id="4565e-1194">当调用此方法时，后面的代码后关闭该对话框不执行之前。</span><span class="sxs-lookup"><span data-stu-id="4565e-1194">When this method is called, the code following it is not executed until after the dialog box is closed.</span></span> <span data-ttu-id="4565e-1195">对话框中可以分配的值之一<xref:System.Windows.Forms.DialogResult>通过将其分配给<xref:System.Windows.Forms.Button.DialogResult%2A>属性<xref:System.Windows.Forms.Button>窗体上或通过设置<xref:System.Windows.Forms.Form.DialogResult%2A>的窗体代码中的属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-1195">The dialog box can be assigned one of the values of <xref:System.Windows.Forms.DialogResult> by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code.</span></span> <span data-ttu-id="4565e-1196">此方法然后返回此值。</span><span class="sxs-lookup"><span data-stu-id="4565e-1196">This value is then returned by this method.</span></span> <span data-ttu-id="4565e-1197">此返回值可用于确定如何处理发生在对话框中的操作。</span><span class="sxs-lookup"><span data-stu-id="4565e-1197">You can use this return value to determine how to process the actions that occurred in the dialog box.</span></span> <span data-ttu-id="4565e-1198">例如，如果对话框已关闭并返回`DialogResult.Cancel`值通过这种方法，你可以阻止之后对调用代码<xref:System.Windows.Forms.Form.ShowDialog%2A>执行。</span><span class="sxs-lookup"><span data-stu-id="4565e-1198">For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.</span></span>  
  
 <span data-ttu-id="4565e-1199">当窗体显示为模式对话框中时，单击**关闭**按钮 （带有窗体的右上角的 X 按钮） 将导致要隐藏的窗体和<xref:System.Windows.Forms.Form.DialogResult%2A>属性设置为`DialogResult.Cancel`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1199">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="4565e-1200">与无模式的窗体，不同<xref:System.Windows.Forms.Form.Close%2A>方法不在用户单击对话框中的关闭窗体按钮或设置的值时由.NET Framework 调用<xref:System.Windows.Forms.Form.DialogResult%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-1200">Unlike modeless forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="4565e-1201">改为窗体将隐藏，并且可以再次显示而无需创建对话框中的新实例。</span><span class="sxs-lookup"><span data-stu-id="4565e-1201">Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="4565e-1202">因为窗体显示为对话框中隐藏而不是关闭，你必须调用<xref:System.Windows.Forms.Control.Dispose%2A>时窗体应用程序不再需要该窗体的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-1202">Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="4565e-1203">此版本的<xref:System.Windows.Forms.Form.ShowDialog%2A>方法允许你指定将拥有显示的对话框中的特定形式。</span><span class="sxs-lookup"><span data-stu-id="4565e-1203">This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method allows you to specify a specific form that will own the dialog box that is shown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1204">下面的代码示例将窗体显示为模式对话框，并才能决定是否要读取的值计算对话框中的返回值<xref:System.Windows.Forms.TextBox>对话框框中窗体上的控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1204">The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form.</span></span> <span data-ttu-id="4565e-1205">此示例需要<xref:System.Windows.Forms.Form>名为`Form2`创建及其所含的<xref:System.Windows.Forms.TextBox>控件名为`TextBox1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1205">This example requires that a <xref:System.Windows.Forms.Form> named `Form2` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`.</span></span> <span data-ttu-id="4565e-1206">此示例使用的版本<xref:System.Windows.Forms.Form.ShowDialog%2A>，它指定所有者为对话框。</span><span class="sxs-lookup"><span data-stu-id="4565e-1206">The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.ShowDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ShowDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ShowDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ShowDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4565e-1207">
            <paramref name="owner" /> 参数中指定的窗体就是显示的窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1207">The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4565e-1208">要显示的窗体已经可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1208">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="4565e-1209">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1209">-or-</span>
          </span>
          <span data-ttu-id="4565e-1210">所显示窗体被禁用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1210">The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="4565e-1211">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1211">-or-</span>
          </span>
          <span data-ttu-id="4565e-1212">显示的窗体不是顶级窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1212">The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="4565e-1213">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1213">-or-</span>
          </span>
          <span data-ttu-id="4565e-1214">显示为对话框的窗体已经是模式窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1214">The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="4565e-1215">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1215">-or-</span>
          </span>
          <span data-ttu-id="4565e-1216">当前进程不是以用户交互模式运行的（有关更多信息，请参见 <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1216">The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowIcon">
      <MemberSignature Language="C#" Value="public bool ShowIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowIcon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowIcon { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1217">获取或设置一个值，该值指示是否在窗体的标题栏中显示图标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1217">Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1218">如果窗体在标题栏中显示图标，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1218">
              <see langword="true" /> if the form displays an icon in the caption bar; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-1219">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1219">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1220"><xref:System.Windows.Forms.Form.ShowIcon%2A>属性包含<xref:System.Boolean>值，该值指示是否在窗体的<xref:System.Windows.Forms.Form.Icon%2A>窗体的标题栏中显示。</span><span class="sxs-lookup"><span data-stu-id="4565e-1220">The <xref:System.Windows.Forms.Form.ShowIcon%2A> property contains a <xref:System.Boolean> value that indicates whether the form's <xref:System.Windows.Forms.Form.Icon%2A> is displayed in the caption bar of the form.</span></span> <span data-ttu-id="4565e-1221">如果<xref:System.Windows.Forms.Form.ControlBox%2A>属性是`false`，将抑制图标和控件框。</span><span class="sxs-lookup"><span data-stu-id="4565e-1221">If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is `false`, both the icon and control box will be suppressed.</span></span>  
  
 <span data-ttu-id="4565e-1222">如果<xref:System.Windows.Forms.Form.ShowIcon%2A>是`false`的通用图标时显示主窗体，将显示在应用程序的任务栏按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-1222">If <xref:System.Windows.Forms.Form.ShowIcon%2A> is `false` when the primary form is shown, a generic icon will be displayed in the taskbar button for the application.</span></span>  
  
 <span data-ttu-id="4565e-1223">此属性如果不起作用<xref:System.Windows.Forms.Form.FormBorderStyle%2A>设置为<xref:System.Windows.Forms.FormBorderStyle.FixedDialog>。</span><span class="sxs-lookup"><span data-stu-id="4565e-1223">This property has no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>.</span></span> <span data-ttu-id="4565e-1224">在这种情况下，窗体不显示一个图标。</span><span class="sxs-lookup"><span data-stu-id="4565e-1224">In that case, the form does not display an icon.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.Icon" />
        <altmember cref="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInTaskbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInTaskbar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1225">获取或设置一个值，该值指示是否在 Windows 任务栏中显示窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1225">Gets or sets a value indicating whether the form is displayed in the Windows taskbar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1226">如果为 <see langword="true" />，则运行时在 Windows 任务栏中显示窗体；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1226">
              <see langword="true" /> to display the form in the Windows taskbar at run time; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-1227">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1227">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1228">如果窗体有父级在另一个窗体，该父窗体不会显示 Windows 任务栏中。</span><span class="sxs-lookup"><span data-stu-id="4565e-1228">If a form is parented within another form, the parented form is not displayed in the Windows taskbar.</span></span>  
  
 <span data-ttu-id="4565e-1229">此属性可用于防止用户选择通过 Windows 任务栏窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1229">You can use this property to prevent users from selecting your form through the Windows taskbar.</span></span> <span data-ttu-id="4565e-1230">例如，如果你的应用程序中显示的查找和替换工具窗口，你可能想要防止该窗口被选中通过 Windows 任务栏中，因为你将需要应用程序的主窗口和查找和替换工具窗口显示，以便适当地处理搜索。</span><span class="sxs-lookup"><span data-stu-id="4565e-1230">For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application's main window and the Find and Replace tool window displayed in order to process searches appropriately.</span></span>  
  
 <span data-ttu-id="4565e-1231">你将通常想要使用此属性时创建的窗体具有<xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow>样式。</span><span class="sxs-lookup"><span data-stu-id="4565e-1231">You will often wish to use this property when creating a form with the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style.</span></span> <span data-ttu-id="4565e-1232">设置<xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow>样式不单独保证不将在任务栏中出现一个窗口。</span><span class="sxs-lookup"><span data-stu-id="4565e-1232">Setting the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style does not alone guarantee that a window will not appear in the taskbar.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1233">下面的代码示例演示如何使用<xref:System.Windows.Forms.Form.ShowInTaskbar%2A>属性以使对话框框中，不会显示在 Windows 任务栏。</span><span class="sxs-lookup"><span data-stu-id="4565e-1233">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.ShowInTaskbar%2A> property to make a dialog box that is not displayed in the Windows taskbar.</span></span>  
  
 [!code-cpp[Form.ShowInTaskbar#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.ShowInTaskbar/CPP/form1.cpp#1)]
 [!code-csharp[Form.ShowInTaskbar#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.ShowInTaskbar/CS/form1.cs#1)]
 [!code-vb[Form.ShowInTaskbar#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.ShowInTaskbar/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shown">
      <MemberSignature Language="C#" Value="public event EventHandler Shown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Shown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Shown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Shown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Shown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1234">只要窗体是首次显示就发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1234">Occurs whenever the form is first displayed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1235"><xref:System.Windows.Forms.Form.Shown>第一次显示窗体时才引发事件; 随后最小化、 最大化、 还原、 隐藏、 显示，或使失效并重新绘制不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1235">The <xref:System.Windows.Forms.Form.Shown> event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event.</span></span> <span data-ttu-id="4565e-1236">窗体的事件的顺序的详细信息，请参阅[Windows 窗体中的事件顺序的](~/docs/framework/winforms/order-of-events-in-windows-forms.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-1236">For more information about the order of events of a form, see [Order of Events in Windows Forms](~/docs/framework/winforms/order-of-events-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="4565e-1237">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4565e-1237">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1238">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4565e-1238">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="4565e-1239">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Form.Shown>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1239">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.Shown> event.</span></span> <span data-ttu-id="4565e-1240">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="4565e-1240">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="4565e-1241">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4565e-1241">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="4565e-1242">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1242">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="4565e-1243">然后，确保与事件处理程序<xref:System.Windows.Forms.Form.Shown>事件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1243">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.Shown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#403](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#403)]
 [!code-vb[System.Windows.Forms.EventExamples#403](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#403)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
      </Docs>
    </Member>
    <Member MemberName="ShowWithoutActivation">
      <MemberSignature Language="C#" Value="protected virtual bool ShowWithoutActivation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWithoutActivation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowWithoutActivation" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ShowWithoutActivation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ShowWithoutActivation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1244">获取一个值，该值指示显示窗口时是否激活它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1244">Gets a value indicating whether the window will be activated when it is shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1245">如果显示窗口时不将其激活，则为 <see langword="True" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1245">
              <see langword="True" /> if the window will not be activated when it is shown; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-1246">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1246">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1247">如果你想要显示在顶级窗口，但不希望采用输入的焦点离开当前窗口中断用户的工作，请使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-1247">Use this property if you want to show a top-level window, but don't want to interrupt a user's work by taking the input focus away from the current window.</span></span> <span data-ttu-id="4565e-1248">这可以是信息性的弹出窗口或浮动窗口，如绘制应用程序中的工具调色板。</span><span class="sxs-lookup"><span data-stu-id="4565e-1248">This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.</span></span>  
  
 <span data-ttu-id="4565e-1249">由于此属性是只读的你可以仅将其值更改通过重写<xref:System.Windows.Forms.Form.ShowWithoutActivation%2A>中自己窗体，并对其返回进行编程`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1249">Because this property is read-only, you can only change its value by overriding <xref:System.Windows.Forms.Form.ShowWithoutActivation%2A> in your own form, and programming it to return `true`.</span></span>  
  
 <span data-ttu-id="4565e-1250">如果您非激活的窗口需要使用 UI 控件，则应考虑使用<xref:System.Windows.Forms.ToolStrip>控件，如<xref:System.Windows.Forms.ToolStripDropDown>。</span><span class="sxs-lookup"><span data-stu-id="4565e-1250">If your non-activated window needs to use UI controls, you should consider using the <xref:System.Windows.Forms.ToolStrip> controls, such as <xref:System.Windows.Forms.ToolStripDropDown>.</span></span> <span data-ttu-id="4565e-1251">这些控件无窗口，并且不会导致窗口在激活时选择它们。</span><span class="sxs-lookup"><span data-stu-id="4565e-1251">These controls are windowless, and will not cause a window to activate when they are selected.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1252">获取或设置窗体的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1252">Gets or sets the size of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1253">
            <see cref="T:System.Drawing.Size" />，它表示窗体的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1253">A <see cref="T:System.Drawing.Size" /> that represents the size of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1254">此属性可以在同一时间而不是设置中设置高度和宽度 （以像素为单位） 的窗体<xref:System.Windows.Forms.Control.Height%2A>和<xref:System.Windows.Forms.Control.Width%2A>属性单独。</span><span class="sxs-lookup"><span data-stu-id="4565e-1254">This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually.</span></span> <span data-ttu-id="4565e-1255">如果你想要设置的大小和窗体的位置，则可以使用<xref:System.Windows.Forms.Form.DesktopBounds%2A>属性来调整大小和找到的表单基于桌面坐标或使用<xref:System.Windows.Forms.Control.Bounds%2A>属性<xref:System.Windows.Forms.Control>类来设置的大小和窗体位置基于屏幕坐标inates。</span><span class="sxs-lookup"><span data-stu-id="4565e-1255">If you want to set the size and location of a form, you can use the <xref:System.Windows.Forms.Form.DesktopBounds%2A> property to size and locate the form based on desktop coordinates or use the <xref:System.Windows.Forms.Control.Bounds%2A> property of the <xref:System.Windows.Forms.Control> class to set the size and location of the form based on screen coordinates.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-1256">此属性的最大值受到窗体在其运行的屏幕的分辨率。</span><span class="sxs-lookup"><span data-stu-id="4565e-1256">The maximum value of this property is limited by the resolution of the screen on which the form runs.</span></span> <span data-ttu-id="4565e-1257">值不能通过每个屏幕维度 （水平 + 12 和垂直 + 12） 大于 12 的像素为单位。</span><span class="sxs-lookup"><span data-stu-id="4565e-1257">The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4565e-1258">在 Pocket PC 设备中，你可以创建可调整大小窗口通过设置<xref:System.Windows.Forms.Form.FormBorderStyle%2A>到`None`和删除任何<xref:System.Windows.Forms.MainMenu>控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1258">On Pocket PC devices, you can create a resizable window by setting <xref:System.Windows.Forms.Form.FormBorderStyle%2A> to `None` and removing any <xref:System.Windows.Forms.MainMenu> control.</span></span> <span data-ttu-id="4565e-1259">您可以在永远不会被调整 SmartPhone 设备上<xref:System.Windows.Forms.Form>-它始终将填充整个屏幕。</span><span class="sxs-lookup"><span data-stu-id="4565e-1259">On SmartPhone devices, you can never resize a <xref:System.Windows.Forms.Form> - it will always fill the entire screen.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1260">下面的代码示例演示如何创建带有 75%的不透明度级别显示窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1260">The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</span></span> <span data-ttu-id="4565e-1261">该示例代码创建一个在与屏幕的中心中放置的新窗体<xref:System.Windows.Forms.Form.Opacity%2A>属性设置以更改窗体的不透明度级别。</span><span class="sxs-lookup"><span data-stu-id="4565e-1261">The example code creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form.</span></span> <span data-ttu-id="4565e-1262">此示例代码还设置<xref:System.Windows.Forms.Form.Size%2A>属性，以提供更大大小超过默认大小的窗体的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1262">The example code also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form.</span></span> <span data-ttu-id="4565e-1263">此示例需要在此示例中定义方法从另一种形式的事件处理程序或其他方法中调用。</span><span class="sxs-lookup"><span data-stu-id="4565e-1263">This example requires that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.Opacity#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Opacity/CPP/form1.cpp#1)]
 [!code-csharp[Form.Opacity#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Opacity/CS/form1.cs#1)]
 [!code-vb[Form.Opacity#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Opacity/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Width" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="SizeGripStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SizeGripStyle SizeGripStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SizeGripStyle SizeGripStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.SizeGripStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeGripStyle As SizeGripStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SizeGripStyle SizeGripStyle { System::Windows::Forms::SizeGripStyle get(); void set(System::Windows::Forms::SizeGripStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SizeGripStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1264">获取或设置在窗体右下角显示的大小调整手柄的样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1264">Gets or sets the style of the size grip to display in the lower-right corner of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1265">
            <see cref="T:System.Windows.Forms.SizeGripStyle" />，表示要显示的大小手柄的样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1265">A <see cref="T:System.Windows.Forms.SizeGripStyle" /> that represents the style of the size grip to display.</span>
          </span>
          <span data-ttu-id="4565e-1266">默认值为 <see cref="F:System.Windows.Forms.SizeGripStyle.Auto" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1266">The default is <see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /></span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1267">此属性使您能够确定当窗体上显示大小调整手柄。</span><span class="sxs-lookup"><span data-stu-id="4565e-1267">This property enables you to determine when the sizing grip is displayed on the form.</span></span> <span data-ttu-id="4565e-1268">你可以设置此属性，以显示大小调整手柄或者使它自动显示于的设置基于<xref:System.Windows.Forms.Form.FormBorderStyle%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-1268">You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1269">下面的代码示例演示如何隐藏有关的大小调整手柄<xref:System.Windows.Forms.Form>时<xref:System.Windows.Forms.Form>不可调整大小。</span><span class="sxs-lookup"><span data-stu-id="4565e-1269">The following code example demonstrates how to hide the size grip for a <xref:System.Windows.Forms.Form> when the <xref:System.Windows.Forms.Form> is not resizable.</span></span>  
  
 [!code-cpp[Form.SizeGripStyle#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.SizeGripStyle/CPP/form1.cpp#1)]
 [!code-csharp[Form.SizeGripStyle#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.SizeGripStyle/CS/form1.cs#1)]
 [!code-vb[Form.SizeGripStyle#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.SizeGripStyle/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="4565e-1270">指定值不在有效值范围内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1270">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="T:System.Windows.Forms.SizeGripStyle" />
      </Docs>
    </Member>
    <Member MemberName="StartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormStartPosition StartPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormStartPosition StartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.StartPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property StartPosition As FormStartPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormStartPosition StartPosition { System::Windows::Forms::FormStartPosition get(); void set(System::Windows::Forms::FormStartPosition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormStartPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1271">获取或设置运行时窗体的起始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1271">Gets or sets the starting position of the form at run time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1272">
            <see cref="T:System.Windows.Forms.FormStartPosition" />，表示窗体的起始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1272">A <see cref="T:System.Windows.Forms.FormStartPosition" /> that represents the starting position of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1273">此属性使您可以在运行时显示时设置窗体的起始位置。</span><span class="sxs-lookup"><span data-stu-id="4565e-1273">This property enables you to set the starting position of the form when it is displayed at run time.</span></span> <span data-ttu-id="4565e-1274">可以通过将设置手动指定窗体的位置<xref:System.Windows.Forms.Form.Location%2A>属性或使用 Windows 所指定的默认位置。</span><span class="sxs-lookup"><span data-stu-id="4565e-1274">The form’s position can be specified manually by setting the <xref:System.Windows.Forms.Form.Location%2A> property or use the default location specified by Windows.</span></span> <span data-ttu-id="4565e-1275">您可以定位要在屏幕的中心或如多文档界面 (MDI) 子窗体的窗体其父窗体的中心中显示的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1275">You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.</span></span>  
  
 <span data-ttu-id="4565e-1276">显示窗体之前，应设置此属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-1276">This property should be set before the form is shown.</span></span>  <span data-ttu-id="4565e-1277">你可以设置此属性，然后才能调用<xref:System.Windows.Forms.Form.Show%2A>或<xref:System.Windows.Forms.Form.ShowDialog%2A>方法或在窗体的构造函数中。</span><span class="sxs-lookup"><span data-stu-id="4565e-1277">You can set this property before you call the <xref:System.Windows.Forms.Form.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method or in your form's constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1278">下面的代码示例创建的新实例<xref:System.Windows.Forms.Form>和调用<xref:System.Windows.Forms.Form.ShowDialog%2A>窗体显示为对话框中的方法。</span><span class="sxs-lookup"><span data-stu-id="4565e-1278">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="4565e-1279">该示例设置<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>属性来更改到对话框的外观和表单的功能。</span><span class="sxs-lookup"><span data-stu-id="4565e-1279">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="4565e-1280">此示例还使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>方法的窗体的<xref:System.Windows.Forms.Control.Controls%2A>集合来添加两个<xref:System.Windows.Forms.Button>控件。</span><span class="sxs-lookup"><span data-stu-id="4565e-1280">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="4565e-1281">该示例使用<xref:System.Windows.Forms.Form.HelpButton%2A>属性对话框中的标题栏中显示帮助按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-1281">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.StartPosition Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.StartPosition Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.StartPosition Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.StartPosition Example/CS/source.cs#1)]
 [!code-vb[Classic Form.StartPosition Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.StartPosition Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="4565e-1282">指定值不在有效值范围内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1282">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public int TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TabIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TabIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1283">获取或设置控件在其容器内的 Tab 键顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1283">Gets or sets the tab order of the control within its container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1284">
            <see cref="T:System.Int32" />，它包含其容器内按 Tab 键顺序包括的控件集内的控件索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1284">An <see cref="T:System.Int32" /> containing the index of the control within the set of controls within its container that is included in the tab order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1285">窗体不包括的 tab 键顺序。</span><span class="sxs-lookup"><span data-stu-id="4565e-1285">Forms are not included in the tab order.</span></span> <span data-ttu-id="4565e-1286">设置<xref:System.Windows.Forms.Form.TabIndex%2A>属性不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="4565e-1286">Setting the <xref:System.Windows.Forms.Form.TabIndex%2A> property does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.TabIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabIndexChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1287">当 <see cref="P:System.Windows.Forms.Form.TabIndex" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1287">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.TabIndex" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-516)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1288">获取或设置一个值，该值指示用户能否使用 Tab 键将焦点放到该控件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1288">Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1289">如果用户可以用 Tab 键将焦点放到此控件上，则为 <see langword="true" />；反之，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1289">
              <see langword="true" /> if the user can give the focus to the control using the TAB key; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-1290">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1290">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1291">当 <see cref="P:System.Windows.Forms.Form.TabStop" /> 属性更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1291">Occurs when the <see cref="P:System.Windows.Forms.Form.TabStop" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1292">获取或设置与此控件关联的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1292">Gets or sets the text associated with this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1293">与该控件关联的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1293">The text associated with this control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="TopLevel">
      <MemberSignature Language="C#" Value="public bool TopLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TopLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TopLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TopLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TopLevel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1294">获取或设置一个值，该值指示是否将窗体显示为顶层窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1294">Gets or sets a value indicating whether to display the form as a top-level window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1295">如果为 <see langword="true" />，则将窗体显示为顶级窗口；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1295">
              <see langword="true" /> to display the form as a top-level window; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-1296">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1296">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1297">顶级窗体是一个窗口，其没有父窗体中，或其父窗体是在桌面窗口。</span><span class="sxs-lookup"><span data-stu-id="4565e-1297">A top-level form is a window that has no parent form, or whose parent form is the desktop window.</span></span> <span data-ttu-id="4565e-1298">顶级窗口通常作为主窗体应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="4565e-1298">Top-level windows are typically used as the main form in an application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1299">下面的代码示例使用<xref:System.Windows.Forms.Form.Modal%2A>属性来确定是否窗体将显示为模式的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1299">The following code example use the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form.</span></span> <span data-ttu-id="4565e-1300">如果不是<xref:System.Windows.Forms.Form.FormBorderStyle%2A>和<xref:System.Windows.Forms.Form.TopLevel%2A>属性发生更改以使具有工具窗口边框的窗体非顶级窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1300">If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form non-top-level form with a tool window border.</span></span>  
  
 [!code-cpp[Form.Modal#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Modal/CPP/form1.cpp#1)]
 [!code-csharp[Form.Modal#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Modal/CS/form1.cs#1)]
 [!code-vb[Form.Modal#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Modal/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="4565e-1301">多文档界面 (MDI) 父窗体必须是顶级窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1301">A Multiple-document interface (MDI) parent form must be a top-level window.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.TopMost" />
      </Docs>
    </Member>
    <Member MemberName="TopMost">
      <MemberSignature Language="C#" Value="public bool TopMost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TopMost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TopMost" />
      <MemberSignature Language="VB.NET" Value="Public Property TopMost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TopMost { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1302">获取或设置一个值，指示该窗体是否应显示为最顶层窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1302">Gets or sets a value indicating whether the form should be displayed as a topmost form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1303">如果将窗体显示为最顶层窗体，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1303">
              <see langword="true" /> to display the form as a topmost form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-1304">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1304">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1305">最顶层窗体是重叠所有其他 （非顶层） 形式，即使它并不是活动或前台形式。</span><span class="sxs-lookup"><span data-stu-id="4565e-1305">A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form.</span></span> <span data-ttu-id="4565e-1306">最顶层窗体始终显示在桌面上的 windows 的 z 顺序最高数据点。</span><span class="sxs-lookup"><span data-stu-id="4565e-1306">Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop.</span></span> <span data-ttu-id="4565e-1307">此属性可用于创建始终应用程序，如查找和替换工具窗口中显示的窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1307">You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1308">下面的代码示例演示如何创建最顶层窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1308">The following code example demonstrates how to create a topmost form.</span></span> <span data-ttu-id="4565e-1309">该示例创建两个窗体，一个是在最大化，一个将显示为最顶层窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1309">The example creates two forms, one that is maximized and one that will be displayed as a topmost form.</span></span> <span data-ttu-id="4565e-1310">第一个窗体中，名为`bottomForm`，将显示最大化时，使用<xref:System.Windows.Forms.Form.WindowState%2A>属性，以更好地演示的最顶层窗体的能力。</span><span class="sxs-lookup"><span data-stu-id="4565e-1310">The first form, named `bottomForm`, is displayed maximized, using the <xref:System.Windows.Forms.Form.WindowState%2A> property, to better demonstrate the abilities of the topmost form.</span></span> <span data-ttu-id="4565e-1311">第二个窗体中，名为`topMostForm`，设置<xref:System.Windows.Forms.Form.TopMost%2A>属性`true`窗体显示为最顶层窗体。</span><span class="sxs-lookup"><span data-stu-id="4565e-1311">The second form, named `topMostForm`, sets the <xref:System.Windows.Forms.Form.TopMost%2A> property to `true` to display the form as a topmost form.</span></span> <span data-ttu-id="4565e-1312">当运行此代码时，单击最大化窗体上不会导致最顶层窗体最大化窗体下显示。</span><span class="sxs-lookup"><span data-stu-id="4565e-1312">When this code is run, clicking on the maximized form will not cause the topmost form to be displayed below the maximized form.</span></span> <span data-ttu-id="4565e-1313">该示例需要在示例中定义此方法叫做从另一种形式。</span><span class="sxs-lookup"><span data-stu-id="4565e-1313">The example requires that the method defined in the example is called from another form.</span></span>  
  
 [!code-cpp[Form.TopMost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.TopMost/CPP/form1.cpp#1)]
 [!code-csharp[Form.TopMost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.TopMost/CS/form1.cs#1)]
 [!code-vb[Form.TopMost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.TopMost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.TopLevel" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1314">获取表示当前窗体实例的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1314">Gets a string representing the current instance of the form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-1315">由窗体对象类的完全限定名组成的字符串，窗体的 <see cref="P:System.Windows.Forms.Form.Text" /> 属性追加到字符串的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1315">A string consisting of the fully qualified name of the form object's class, with the <see cref="P:System.Windows.Forms.Form.Text" /> property of the form appended to the end.</span>
          </span>
          <span data-ttu-id="4565e-1316">例如，如果该窗体派生自 <c>MyNamespace</c> 命名空间中的类 <c>MyForm</c>，并且 <see cref="P:System.Windows.Forms.Form.Text" /> 属性设置为 <c>Hello, World</c>，则此方法会返回 <c>MyNamespace.MyForm, Text: Hello, World</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1316">For example, if the form is derived from the class <c>MyForm</c> in the <c>MyNamespace</c> namespace, and the <see cref="P:System.Windows.Forms.Form.Text" /> property is set to <c>Hello, World</c>, this method will return <c>MyNamespace.MyForm, Text: Hello, World</c>.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransparencyKey">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TransparencyKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TransparencyKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TransparencyKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransparencyKey As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TransparencyKey { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1317">获取或设置将表示窗体透明区域的颜色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1317">Gets or sets the color that will represent transparent areas of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1318">
            <see cref="T:System.Drawing.Color" />，表示要在窗体上透明显示的颜色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1318">A <see cref="T:System.Drawing.Color" /> that represents the color to display transparently on the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1319">当<xref:System.Windows.Forms.Form.TransparencyKey%2A>属性分配<xref:System.Drawing.Color>，具有相同的窗体区域<xref:System.Windows.Forms.Control.BackColor%2A>将以透明方式显示。</span><span class="sxs-lookup"><span data-stu-id="4565e-1319">When the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is assigned a <xref:System.Drawing.Color>, the areas of the form that have the same <xref:System.Windows.Forms.Control.BackColor%2A> will be displayed transparently.</span></span> <span data-ttu-id="4565e-1320">鼠标的任何操作，例如单击鼠标，在窗体透明区域执行将传输到下的透明区域的窗口。</span><span class="sxs-lookup"><span data-stu-id="4565e-1320">Any mouse actions, such as the click of the mouse, that are performed on the transparent areas of the form will be transferred to the windows below the transparent area.</span></span> <span data-ttu-id="4565e-1321">例如，如果窗体的客户端区域进行透明，则该区域上单击鼠标将发送到低于其任何窗口的单击事件通知。</span><span class="sxs-lookup"><span data-stu-id="4565e-1321">For example, if the client region of a form is made transparent, clicking the mouse on that area would send the event notification of the click to any window that is below it.</span></span> <span data-ttu-id="4565e-1322">如果颜色分配给<xref:System.Windows.Forms.Form.TransparencyKey%2A>属性等同于窗体上任何控件，则它们还将显示以透明方式。</span><span class="sxs-lookup"><span data-stu-id="4565e-1322">If the color assigned to the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is the same as any controls on the form, they also will be displayed transparently.</span></span> <span data-ttu-id="4565e-1323">例如，如果你有<xref:System.Windows.Forms.Button>具有窗体上的控件其<xref:System.Windows.Forms.Form.TransparencyKey%2A>属性设置为`SystemColors.Control`，控件将以透明方式显示，除非<xref:System.Windows.Forms.Control.BackColor%2A>属性<xref:System.Windows.Forms.Button>控件更改为另一种颜色。</span><span class="sxs-lookup"><span data-stu-id="4565e-1323">For example, if you have a <xref:System.Windows.Forms.Button> control on a form that has its <xref:System.Windows.Forms.Form.TransparencyKey%2A> property set to `SystemColors.Control`, the control will be displayed transparently unless the <xref:System.Windows.Forms.Control.BackColor%2A> property of the <xref:System.Windows.Forms.Button> control is changed to a different color.</span></span>  
  
 <span data-ttu-id="4565e-1324">此属性不是支持时<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="4565e-1324">This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1325">下面的代码示例创建该窗口具有透明的客户端区域而不考虑的窗体的背景色。</span><span class="sxs-lookup"><span data-stu-id="4565e-1325">The following code example creates a window that has a transparent client region regardless of background color of the form.</span></span> <span data-ttu-id="4565e-1326">此示例需要示例方法在窗体类中定义。</span><span class="sxs-lookup"><span data-stu-id="4565e-1326">This example requires that the example method is defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.TransparencyKey Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.TransparencyKey Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/CS/source.cs#1)]
 [!code-vb[Classic Form.TransparencyKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDefaultButton">
      <MemberSignature Language="C#" Value="protected override void UpdateDefaultButton ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateDefaultButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.UpdateDefaultButton" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateDefaultButton ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateDefaultButton();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1327">更新哪个按钮为默认按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1327">Updates which button is the default button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1328"><xref:System.Windows.Forms.Form.UpdateDefaultButton%2A>方法确定窗体上的按钮引发其 Click 事件，当用户按 ENTER，根据以下优先级：</span><span class="sxs-lookup"><span data-stu-id="4565e-1328">The <xref:System.Windows.Forms.Form.UpdateDefaultButton%2A> method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:</span></span>  
  
1.  <span data-ttu-id="4565e-1329">如果<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>属性实现<xref:System.Windows.Forms.IButtonControl>接口，控制为默认按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-1329">If the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property implements the <xref:System.Windows.Forms.IButtonControl> interface, that control is the default button.</span></span>  
  
2.  <span data-ttu-id="4565e-1330"><xref:System.Windows.Forms.Form.AcceptButton%2A>属性为默认按钮。</span><span class="sxs-lookup"><span data-stu-id="4565e-1330">The <xref:System.Windows.Forms.Form.AcceptButton%2A> property is the default button.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateChildren">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1331">验证窗体中所有可选择的子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1331">Validates all selectable child controls in the form.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateChildren">
      <MemberSignature Language="C#" Value="public override bool ValidateChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ValidateChildren" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateChildren () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateChildren();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1332">使控件内支持验证的所有子控件都对其数据进行验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1332">Causes all of the child controls within a control that support validation to validate their data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-1333">如果成功验证所有子级，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1333">
              <see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-1334">如果是从 <see cref="E:System.Windows.Forms.Control.Validating" /> 或 <see cref="E:System.Windows.Forms.Control.Validated" /> 事件处理程序调用的，则该方法将始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1334">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ValidateChildren" />
      </Docs>
    </Member>
    <Member MemberName="ValidateChildren">
      <MemberSignature Language="C#" Value="public override bool ValidateChildren (System.Windows.Forms.ValidationConstraints validationConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateChildren(valuetype System.Windows.Forms.ValidationConstraints validationConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateChildren(System::Windows::Forms::ValidationConstraints validationConstraints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationConstraints" Type="System.Windows.Forms.ValidationConstraints" />
      </Parameters>
      <Docs>
        <param name="validationConstraints">
          <span data-ttu-id="4565e-1335">添加对哪些控件可以引发其 <see cref="E:System.Windows.Forms.Control.Validating" /> 事件的限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1335">Places restrictions on which controls have their <see cref="E:System.Windows.Forms.Control.Validating" /> event raised.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1336">使控件内支持验证的所有子控件都对其数据进行验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1336">Causes all of the child controls within a control that support validation to validate their data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4565e-1337">如果成功验证所有子级，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1337">
              <see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4565e-1338">如果是从 <see cref="E:System.Windows.Forms.Control.Validating" /> 或 <see cref="E:System.Windows.Forms.Control.Validated" /> 事件处理程序调用的，则该方法将始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1338">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As FormWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormWindowState WindowState { System::Windows::Forms::FormWindowState get(); void set(System::Windows::Forms::FormWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4565e-1339">获取或设置一个值，该值指示窗体是最小化、最大化还是正常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1339">Gets or sets a value that indicates whether form is minimized, maximized, or normal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4565e-1340">
            <see cref="T:System.Windows.Forms.FormWindowState" />，它表示窗体是最小化、 最大化，还是正常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1340">A <see cref="T:System.Windows.Forms.FormWindowState" /> that represents whether form is minimized, maximized, or normal.</span>
          </span>
          <span data-ttu-id="4565e-1341">默认值为 <see langword="FormWindowState.Normal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1341">The default is <see langword="FormWindowState.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4565e-1342">表单显示之前，<xref:System.Windows.Forms.Form.WindowState%2A>属性始终设置为`FormWindowState.Normal`，不管其初始设置。</span><span class="sxs-lookup"><span data-stu-id="4565e-1342">Before a form is displayed, the <xref:System.Windows.Forms.Form.WindowState%2A> property is always set to `FormWindowState.Normal`, regardless of its initial setting.</span></span> <span data-ttu-id="4565e-1343">这反映在<xref:System.Windows.Forms.Control.Height%2A>， <xref:System.Windows.Forms.Control.Left%2A>， <xref:System.Windows.Forms.Control.Top%2A>，和<xref:System.Windows.Forms.Control.Width%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="4565e-1343">This is reflected in the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Top%2A>, and <xref:System.Windows.Forms.Control.Width%2A> property settings.</span></span> <span data-ttu-id="4565e-1344">如果窗体隐藏后已被证实，这些属性反映以前的状态，直到再次，而不考虑对所做任何更改显示窗体<xref:System.Windows.Forms.Form.WindowState%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4565e-1344">If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the <xref:System.Windows.Forms.Form.WindowState%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4565e-1345">下面的代码示例演示如何设置<xref:System.Windows.Forms.Form.WindowState%2A>为最大化。</span><span class="sxs-lookup"><span data-stu-id="4565e-1345">The following code example demonstrates how to set the <xref:System.Windows.Forms.Form.WindowState%2A> to maximized.</span></span> <span data-ttu-id="4565e-1346">从调用代码<xref:System.Windows.Forms.Form.Shown>创建窗体后，事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4565e-1346">The code is called from the <xref:System.Windows.Forms.Form.Shown> event handler after the form has been created.</span></span>  
  
```csharp  
private void Form1_Shown(object sender, EventArgs e)  
        {  
            this.WindowState = System.Windows.Forms.FormWindowState.Maximized;  
        }  
```  
  
```vb  
Private  Sub Form1_Shown(ByVal sender As Object, ByVal e As EventArgs)  
            Me.WindowState = System.Windows.Forms.FormWindowState.Maximized  
End Sub  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="4565e-1347">指定值不在有效值范围内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1347">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormWindowState" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="4565e-1348">要处理的 Windows <see cref="T:System.Windows.Forms.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1348">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4565e-1349">处理 Windows 消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4565e-1349">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>