<Type Name="DataGridViewTextBoxCell" FullName="System.Windows.Forms.DataGridViewTextBoxCell">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="25368b099397b9f5bb43b0d165fa530fc6572dd0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36523370" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewTextBoxCell : System.Windows.Forms.DataGridViewCell" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewTextBoxCell extends System.Windows.Forms.DataGridViewCell" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewTextBoxCell" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewTextBoxCell&#xA;Inherits DataGridViewCell" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewTextBoxCell : System::Windows::Forms::DataGridViewCell" />
  <TypeSignature Language="F#" Value="type DataGridViewTextBoxCell = class&#xA;    inherit DataGridViewCell" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewCell</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>显示 <see cref="T:System.Windows.Forms.DataGridView" /> 控件中的可编辑文本信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewTextBoxCell>类是特殊的类型的<xref:System.Windows.Forms.DataGridViewCell>用来显示可编辑基于文本的信息的单个字符串。 当前所选<xref:System.Windows.Forms.DataGridViewTextBoxCell>主机<xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>控制用户可以在其中编辑单元格的值 (假设<xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A>属性<xref:System.Windows.Forms.DataGridViewTextBoxCell>设置为`false`)。  
  
 <xref:System.Windows.Forms.DataGridViewTextBoxColumn>列类型专用于保留此类型的单元格。 默认情况下，<xref:System.Windows.Forms.DataGridViewTextBoxColumn.CellTemplate%2A?displayProperty=nameWithType>函数将初始化为一个新<xref:System.Windows.Forms.DataGridViewTextBoxCell>。 若要在列的单元格模式的现有后<xref:System.Windows.Forms.DataGridViewTextBoxCell>，设置列的<xref:System.Windows.Forms.DataGridViewTextBoxColumn.CellTemplate%2A>到要用作一种模式的单元格的属性。  
  
 列的单元格相关属性是同样名称的属性的模板单元格的包装。 更改模板单元格的属性值将只影响单元格在基于的模板在更改后添加。 更改列的单元格相关的属性值，但是，将更新模板单元格和列中的所有其他单元格并刷新列显示如有必要。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.DataGridViewCell>为模板，供<xref:System.Windows.Forms.DataGridViewColumn>。 对列中的任意单元格所做的样式更改会影响所有列的单元格。 此代码示例摘自更大的示例为提供<xref:System.Windows.Forms.DataGridViewColumn>类。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewColumnDemo.cpp#120)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewColumnDemo.cs#120)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewcolumndemo.vb#120)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>派生自<see cref="T:System.Windows.Forms.DataGridViewTextBoxCell" />并将新属性添加到派生的类，请确保重写<see cref="M:System.Windows.Forms.DataGridViewTextBoxCell.Clone" />方法以在克隆操作过程中复制新属性。你还应调用基类的<see cref="M:System.Windows.Forms.DataGridViewTextBoxCell.Clone" />方法，以便基类的属性复制到新的单元格。</para>
    </block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxColumn" />
    <altmember cref="P:System.Windows.Forms.DataGridViewTextBoxColumn.CellTemplate" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewTextBoxCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewTextBoxCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataGridViewTextBoxCell" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.DataGridViewCell>为模板，供<xref:System.Windows.Forms.DataGridViewColumn>。 对列中的任意单元格所做的样式更改会影响所有列的单元格。 此代码示例摘自更大的示例为提供<xref:System.Windows.Forms.DataGridViewColumn>类。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewColumnDemo.cpp#120)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewColumnDemo.cs#120)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewcolumndemo.vb#120)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="dataGridViewTextBoxCell.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此单元格的精确副本。</summary>
        <returns>一个 <see cref="T:System.Object" />，表示克隆的 <see cref="T:System.Windows.Forms.DataGridViewTextBoxCell" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 重写<xref:System.Windows.Forms.DataGridViewTextBoxCell.Clone%2A>方法每当派生自<xref:System.Windows.Forms.DataGridViewTextBoxCell>并将新属性添加到派生的类。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Windows.Forms.DataGridViewTextBoxCell.Clone" />派生类中调用基类的<see cref="M:System.Windows.Forms.DataGridViewTextBoxCell.Clone" />方法，以便基类的属性复制到新的单元格，并确保也将复制任何已添加到派生的类的属性的值。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridViewTextBoxCell.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为此 <see cref="T:System.Windows.Forms.DataGridViewTextBoxCell" /> 实例创建新 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
        <returns>支持 ControlType UI 自动化属性的 <see cref="T:System.Windows.Forms.AccessibleObject" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<xref:System.Windows.Forms.AccessibleObject>返回对象`CreateAccessibilityInstance`方法支持<see cref="T:System.Windows.Automation.ControlType" /> [UI 自动化](~/docs/framework/ui-automation/ui-automation-overview.md)仅在开始使用.NET 的.NET framework 目标版本，将重新编译的应用程序中的属性Framework 4.7.2。 面向.NET Framework 的早期版本，但在.NET Framework 4.7.2 上运行的应用程序可以选择启用此功能使用兼容性开关。
有关其他信息，请参阅[What's New in.NET Framework 中的辅助功能](~/docs/framework/whats-new/whats-new-in-accessibility.md)。
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachEditingControl">
      <MemberSignature Language="C#" Value="public override void DetachEditingControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DetachEditingControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.DetachEditingControl" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DetachEditingControl ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DetachEditingControl();" />
      <MemberSignature Language="F#" Value="override this.DetachEditingControl : unit -&gt; unit" Usage="dataGridViewTextBoxCell.DetachEditingControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从 <see cref="T:System.Windows.Forms.DataGridView" /> 中删除单元格的编辑控件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.DetachEditingControl" />
      </Docs>
    </Member>
    <Member MemberName="FormattedValueType">
      <MemberSignature Language="C#" Value="public override Type FormattedValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FormattedValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewTextBoxCell.FormattedValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FormattedValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ FormattedValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormattedValueType : Type" Usage="System.Windows.Forms.DataGridViewTextBoxCell.FormattedValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与单元格关联的格式化值的类型。</summary>
        <value>在任何情况下都表示 <see cref="T:System.Type" /> 类型的 <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 基础的格式化值类型始终是<xref:System.String>因为文本框中仅处理文本信息  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A?displayProperty=nameWithType>属性来确定在单元格内容的类型。 在此示例中，<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A?displayProperty=nameWithType>属性用于确定该单元格是否包含<xref:System.String>尝试将该值转换前。 此示例摘自更大的示例中提供<xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType>事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewTextBoxCell.ValueType" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
      </Docs>
    </Member>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetContentBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetContentBounds(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetContentBounds(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.GetContentBounds : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int -&gt; System.Drawing.Rectangle" Usage="dataGridViewTextBoxCell.GetContentBounds (graphics, cellStyle, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">单元格的图形上下文。</param>
        <param name="cellStyle">要对单元格应用的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>返回围绕单元格内容区域的边框，该区域是使用指定的 <see cref="T:System.Drawing.Graphics" /> 和单元格样式计算的。</summary>
        <returns>限定单元格内容区域的 <see cref="T:System.Drawing.Rectangle" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorIconBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetErrorIconBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetErrorIconBounds(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetErrorIconBounds(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.GetErrorIconBounds : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int -&gt; System.Drawing.Rectangle" Usage="dataGridViewTextBoxCell.GetErrorIconBounds (graphics, cellStyle, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">单元格的图形上下文。</param>
        <param name="cellStyle">要对单元格应用的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>如果显示了单元格的错误图标，则返回环绕该图标的边框。</summary>
        <returns>如果显示了单元格的错误图标，则为包围该图标的 <see cref="T:System.Drawing.Rectangle" />；否则为 <see cref="F:System.Drawing.Rectangle.Empty" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size GetPreferredSize (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex, System.Drawing.Size constraintSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Size GetPreferredSize(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex, valuetype System.Drawing.Size constraintSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Size GetPreferredSize(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex, System::Drawing::Size constraintSize);" />
      <MemberSignature Language="F#" Value="override this.GetPreferredSize : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int * System.Drawing.Size -&gt; System.Drawing.Size" Usage="dataGridViewTextBoxCell.GetPreferredSize (graphics, cellStyle, rowIndex, constraintSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="constraintSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="graphics">用于绘制单元格的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="cellStyle">表示单元格样式的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <param name="rowIndex">单元格的从零开始的行索引。</param>
        <param name="constraintSize">单元格允许的最大大小。</param>
        <summary>计算单元格的首选大小（以像素为单位）。</summary>
        <returns>表示单元格的首选大小的 <see cref="T:System.Drawing.Size" />（以像素为单位）。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeEditingControl">
      <MemberSignature Language="C#" Value="public override void InitializeEditingControl (int rowIndex, object initialFormattedValue, System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeEditingControl(int32 rowIndex, object initialFormattedValue, class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeEditingControl(int rowIndex, System::Object ^ initialFormattedValue, System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberSignature Language="F#" Value="override this.InitializeEditingControl : int * obj * System.Windows.Forms.DataGridViewCellStyle -&gt; unit" Usage="dataGridViewTextBoxCell.InitializeEditingControl (rowIndex, initialFormattedValue, dataGridViewCellStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="initialFormattedValue" Type="System.Object" />
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="rowIndex">所编辑的行的索引。</param>
        <param name="initialFormattedValue">要在控件中显示的初始值。</param>
        <param name="dataGridViewCellStyle">用于确定寄宿控件外观的单元格样式。</param>
        <summary>附加并初始化寄宿的编辑控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewTextBoxCell.InitializeEditingControl%2A>方法初始化所承载的编辑控件，如基中所述<xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A?displayProperty=nameWithType>方法。 对于每个调用，此方法还设置编辑控件的以下可视特性：  
  
-   <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> 属性设置为 <xref:System.Windows.Forms.BorderStyle.None>。  
  
-   <xref:System.Windows.Forms.TextBox.Multiline%2A> 和 <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> 属性设置为 `true`。  
  
-   <xref:System.Windows.Forms.TextBox.Text%2A>属性设置为`initialFormattedValue`参数。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
        <altmember cref="P:System.Windows.Forms.TextBox.Multiline" />
        <altmember cref="P:System.Windows.Forms.TextBox.AcceptsReturn" />
        <altmember cref="P:System.Windows.Forms.TextBox.Text" />
      </Docs>
    </Member>
    <Member MemberName="KeyEntersEditMode">
      <MemberSignature Language="C#" Value="public override bool KeyEntersEditMode (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool KeyEntersEditMode(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.KeyEntersEditMode(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function KeyEntersEditMode (e As KeyEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool KeyEntersEditMode(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.KeyEntersEditMode : System.Windows.Forms.KeyEventArgs -&gt; bool" Usage="dataGridViewTextBoxCell.KeyEntersEditMode e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个 <see cref="T:System.Windows.Forms.KeyEventArgs" />，表示按下的键。</param>
        <summary>确定是否应基于给定键启动编辑模式。</summary>
        <returns>如果应启动编辑模式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Windows.Forms.DataGridView.EditMode%2A>属性<xref:System.Windows.Forms.DataGridView>控件设置为<xref:System.Windows.Forms.DataGridViewEditMode.EditOnKeystroke>或<xref:System.Windows.Forms.DataGridViewEditMode.EditOnKeystrokeOrF2>，控件使用此方法来确定是否以外此单元格有焦点用户按下 F2 键将导致单元格以进入编辑模式。  
  
 此方法返回`true`如果 e 参数指示按 ALT 或 CTRL 以未修改形式的普通的数据输入密钥 （如字母、 数字、 标点符号或空间密钥），不包括按 SHIFT + 空格键，由该控件用于选择目的。 有关详细信息，请参阅[默认键盘和鼠标处理在 Windows 窗体 DataGridView 控件中](~/docs/framework/winforms/controls/default-keyboard-and-mouse-handling-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditMode" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MaxInputLength">
      <MemberSignature Language="C#" Value="public virtual int MaxInputLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInputLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewTextBoxCell.MaxInputLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxInputLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInputLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxInputLength : int with get, set" Usage="System.Windows.Forms.DataGridViewTextBoxCell.MaxInputLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(32767)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置可以在文本框中输入的最大字符数。</summary>
        <value>可以在文本框中输入的最大字符数，默认值是 32767。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewTextBoxCell.MaxInputLength%2A>属性不会影响通过单元格的值或单元格格式以编程方式输入的文本的长度。 它仅影响哪些用户可以输入和编辑。  
  
 设置<xref:System.Windows.Forms.DataGridViewTextBoxColumn.MaxInputLength%2A>所属列的属性也设置<xref:System.Windows.Forms.DataGridViewTextBoxCell.MaxInputLength%2A>的列中每个单元格的属性。 若要替代各个单元格的指定的值，请设置该列的值后设置单元格的值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">值小于 0。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewTextBoxColumn.MaxInputLength" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.OnEnter(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnter (rowIndex As Integer, throughMouseClick As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnter(int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="override this.OnEnter : int * bool -&gt; unit" Usage="dataGridViewTextBoxCell.OnEnter (rowIndex, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">鼠标输入的行的索引。</param>
        <param name="throughMouseClick">如果单击鼠标后的结果是输入此单元格，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>当选择光标移动到单元格时由 <see cref="T:System.Windows.Forms.DataGridView" /> 调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.Control.OnEnter%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.Control.Enter?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Windows.Forms.DataGridViewTextBoxCell.OnEnter(System.Int32,System.Boolean)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.DataGridViewTextBoxCell.OnEnter(System.Int32,System.Boolean)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected override void OnLeave (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLeave(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.OnLeave(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLeave (rowIndex As Integer, throughMouseClick As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLeave(int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="override this.OnLeave : int * bool -&gt; unit" Usage="dataGridViewTextBoxCell.OnLeave (rowIndex, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">鼠标已经离开的行的索引。</param>
        <param name="throughMouseClick">如果单击鼠标的结果是离开此单元格，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>当鼠标离开单元格时，由 <see cref="T:System.Windows.Forms.DataGridView" /> 调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 单击该实例的状态，以确保该离开后重新输入该单元格的重置需要双击才能启动编辑模式。  
  
 此方法类似于是<xref:System.Windows.Forms.Control.OnLeave%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.Control.Leave?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Windows.Forms.DataGridViewTextBoxCell.OnLeave(System.Int32,System.Boolean)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.DataGridViewTextBoxCell.OnLeave(System.Int32,System.Boolean)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseClick">
      <MemberSignature Language="C#" Value="protected override void OnMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewTextBoxCell.OnMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary>当鼠标离开单元格时，由 <see cref="T:System.Windows.Forms.DataGridView" /> 调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewTextBoxCell.OnMouseClick%2A> 确定单击鼠标是否启动的编辑会话双击的一部分。  
  
 此方法类似于是<xref:System.Windows.Forms.Control.OnMouseClick%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Windows.Forms.DataGridViewTextBoxCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.DataGridViewTextBoxCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected override void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates cellState, object value, object formattedValue, string errorText, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle cellBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates cellState, object value, object formattedValue, string errorText, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle cellBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates cellState, System::Object ^ value, System::Object ^ formattedValue, System::String ^ errorText, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="override this.Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * obj * obj * string * System.Windows.Forms.DataGridViewCellStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewTextBoxCell.Paint (graphics, clipBounds, cellBounds, rowIndex, cellState, value, formattedValue, errorText, cellStyle, advancedBorderStyle, paintParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cellState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="formattedValue" Type="System.Object" />
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics">用于绘制 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="T:System.Windows.Forms.DataGridViewCell" />。</param>
        <param name="clipBounds">
          <see cref="T:System.Drawing.Rectangle" />，它表示需要重新绘制的 <see cref="T:System.Windows.Forms.DataGridView" /> 区域。</param>
        <param name="cellBounds">包含要绘制的 <see cref="T:System.Drawing.Rectangle" /> 的边界的 <see cref="T:System.Windows.Forms.DataGridViewCell" />。</param>
        <param name="rowIndex">当前所绘制的单元格的行索引。</param>
        <param name="cellState">
          <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 值的按位组合，用于指定单元格的状态。</param>
        <param name="value">当前所绘制的 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 的数据。</param>
        <param name="formattedValue">当前所绘制的 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 的格式化数据。</param>
        <param name="errorText">与单元格关联的错误消息。</param>
        <param name="cellStyle">
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />，它包含有关单元格的格式设置和样式的信息。</param>
        <param name="advancedBorderStyle">
          <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />，它包含当前所绘制的单元格的边框样式。</param>
        <param name="paintParts">
          <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> 值的按位组合，用于指定需要绘制的单元格部分。</param>
        <summary>绘制当前的 <see cref="T:System.Windows.Forms.DataGridViewCell" />。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
      </Docs>
    </Member>
    <Member MemberName="PositionEditingControl">
      <MemberSignature Language="C#" Value="public override void PositionEditingControl (bool setLocation, bool setSize, System.Drawing.Rectangle cellBounds, System.Drawing.Rectangle cellClip, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PositionEditingControl(bool setLocation, bool setSize, valuetype System.Drawing.Rectangle cellBounds, valuetype System.Drawing.Rectangle cellClip, class System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub PositionEditingControl (setLocation As Boolean, setSize As Boolean, cellBounds As Rectangle, cellClip As Rectangle, cellStyle As DataGridViewCellStyle, singleVerticalBorderAdded As Boolean, singleHorizontalBorderAdded As Boolean, isFirstDisplayedColumn As Boolean, isFirstDisplayedRow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void PositionEditingControl(bool setLocation, bool setSize, System::Drawing::Rectangle cellBounds, System::Drawing::Rectangle cellClip, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="F#" Value="override this.PositionEditingControl : bool * bool * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Windows.Forms.DataGridViewCellStyle * bool * bool * bool * bool -&gt; unit" Usage="dataGridViewTextBoxCell.PositionEditingControl (setLocation, setSize, cellBounds, cellClip, cellStyle, singleVerticalBorderAdded, singleHorizontalBorderAdded, isFirstDisplayedColumn, isFirstDisplayedRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setLocation" Type="System.Boolean" />
        <Parameter Name="setSize" Type="System.Boolean" />
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellClip" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="singleVerticalBorderAdded" Type="System.Boolean" />
        <Parameter Name="singleHorizontalBorderAdded" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedColumn" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="setLocation">如果将控件置于其他参数指定的位置，则为 <see langword="true" />；若要允许控件自行放置，则为 <see langword="false" />。</param>
        <param name="setSize">如果要指定大小，则为 <see langword="true" />；若要允许控件自行决定大小，则为 <see langword="false" />。</param>
        <param name="cellBounds">定义单元格界限的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="cellClip">将用于绘制编辑控件的区域。</param>
        <param name="cellStyle">
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />，它表示当前所编辑的单元格的样式。</param>
        <param name="singleVerticalBorderAdded">若要向单元格添加竖框线，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="singleHorizontalBorderAdded">若要向单元格添加横框线，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isFirstDisplayedColumn">如果宿主单元格位于第一个可见列中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isFirstDisplayedRow">如果宿主单元格位于第一个可见行中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>设置由 DataGridView 控件中的单元格承载的编辑控件的位置和大小。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewTextBoxCell.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataGridViewTextBoxCell.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回描述当前对象的字符串。</summary>
        <returns>表示当前对象的字符串。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public override Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewTextBoxCell.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.Windows.Forms.DataGridViewTextBoxCell.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格中值的数据类型。</summary>
        <value>表示单元格中值的数据类型的 <see cref="T:System.Type" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
      </Docs>
    </Member>
  </Members>
</Type>