<Type Name="GiveFeedbackEventHandler" FullName="System.Windows.Forms.GiveFeedbackEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="184abf5679334cd20da31e7fc07205413400bd28" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36521407" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void GiveFeedbackEventHandler(object sender, GiveFeedbackEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed GiveFeedbackEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.GiveFeedbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub GiveFeedbackEventHandler(sender As Object, e As GiveFeedbackEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void GiveFeedbackEventHandler(System::Object ^ sender, GiveFeedbackEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type GiveFeedbackEventHandler = delegate of obj * GiveFeedbackEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="ee15f-101">事件源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee15f-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="ee15f-102">包含事件数据的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee15f-102">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="ee15f-103">表示处理 <see cref="T:System.Windows.Forms.Control" /> 的 <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> 事件的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee15f-103">Represents the method that handles the <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> event of a <see cref="T:System.Windows.Forms.Control" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee15f-104">创建 <xref:System.Windows.Forms.GiveFeedbackEventHandler> 委托时，需要标识将处理该事件的方法。</span><span class="sxs-lookup"><span data-stu-id="ee15f-104">When you create a <xref:System.Windows.Forms.GiveFeedbackEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="ee15f-105">若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。</span><span class="sxs-lookup"><span data-stu-id="ee15f-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="ee15f-106">除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="ee15f-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="ee15f-107">有关与委托一起处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="ee15f-107">For more information about handling events with delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee15f-108">下面的示例演示两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="ee15f-108">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="ee15f-109">该示例通过调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>方法的拖放操作启动时。</span><span class="sxs-lookup"><span data-stu-id="ee15f-109">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="ee15f-110">如果鼠标已移动的拖放操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>从期间的鼠标位置<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="ee15f-110">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="ee15f-111"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在将拖动的项的索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="ee15f-111">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="ee15f-112">该示例还演示如何使用自定义光标拖放操作。</span><span class="sxs-lookup"><span data-stu-id="ee15f-112">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="ee15f-113">该示例假定两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和非放置光标，分别。</span><span class="sxs-lookup"><span data-stu-id="ee15f-113">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="ee15f-114">如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>已选中。</span><span class="sxs-lookup"><span data-stu-id="ee15f-114">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="ee15f-115">自定义光标设置<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="ee15f-115">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="ee15f-116">键盘状态评估中<xref:System.Windows.Forms.Control.DragOver>事件处理程序右侧`ListBox`，以确定将哪些拖动操作根据 SHIFT、 CTRL、 alt 键或 CTRL + ALT 键的状态。</span><span class="sxs-lookup"><span data-stu-id="ee15f-116">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="ee15f-117">中的位置`ListBox`期间还确定将发生放置`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="ee15f-117">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="ee15f-118">如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ee15f-118">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ee15f-119">最后，下拉的状态将显示在`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="ee15f-119">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="ee15f-120">要为权限放置的数据`ListBox`中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值添加中的适当位置`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="ee15f-120">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="ee15f-121">如果在拖动操作超出边界的窗体中，则采用取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="ee15f-121">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="ee15f-122">此代码片段演示如何使用<xref:System.Windows.Forms.GiveFeedbackEventHandler>委托以及<xref:System.Windows.Forms.Control.GiveFeedback>事件。</span><span class="sxs-lookup"><span data-stu-id="ee15f-122">This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventHandler> delegate with the <xref:System.Windows.Forms.Control.GiveFeedback> event.</span></span> <span data-ttu-id="ee15f-123">请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="ee15f-123">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.GiveFeedback" />
    <altmember cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />
  </Docs>
</Type>