<Type Name="ToolBarButton" FullName="System.Windows.Forms.ToolBarButton">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e1623514f0d05afe861321eeb72d397338375b9" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65005226" /></Metadata><TypeSignature Language="C#" Value="public class ToolBarButton : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolBarButton extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolBarButton" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolBarButton&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolBarButton : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ToolBarButton = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolBarButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolBarButtonDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolBarButtonDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d4de7-101">表示一个 Windows 工具栏按钮。</span><span class="sxs-lookup"><span data-stu-id="d4de7-101">Represents a Windows toolbar button.</span></span> <span data-ttu-id="d4de7-102">尽管 <see cref="T:System.Windows.Forms.ToolStripButton" /> 替换并扩展了早期版本的 <see cref="T:System.Windows.Forms.ToolBarButton" /> 控件，但也可以选择保留 <see cref="T:System.Windows.Forms.ToolBarButton" /> 以备向后兼容性和将来使用。</span><span class="sxs-lookup"><span data-stu-id="d4de7-102">Although <see cref="T:System.Windows.Forms.ToolStripButton" /> replaces and extends the <see cref="T:System.Windows.Forms.ToolBarButton" /> control of previous versions, <see cref="T:System.Windows.Forms.ToolBarButton" /> is retained for both backward compatibility and future use if you choose.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-103"><xref:System.Windows.Forms.ToolBarButton> 控件为父级<xref:System.Windows.Forms.ToolBar>控件。</span><span class="sxs-lookup"><span data-stu-id="d4de7-103"><xref:System.Windows.Forms.ToolBarButton> controls are parented by <xref:System.Windows.Forms.ToolBar> controls.</span></span> <span data-ttu-id="d4de7-104">要设置创建工具栏按钮后的常见属性是<xref:System.Windows.Forms.ToolBarButton.Text%2A>和<xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A>。</span><span class="sxs-lookup"><span data-stu-id="d4de7-104">Common properties to set once the toolbar button has been created are <xref:System.Windows.Forms.ToolBarButton.Text%2A> and <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A>.</span></span> <span data-ttu-id="d4de7-105">设置<xref:System.Windows.Forms.ToolBarButton.Text%2A>的按钮以显示文本下方或右侧的图像的属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-105">Set the <xref:System.Windows.Forms.ToolBarButton.Text%2A> property of the button to display text beneath or to the right of the image.</span></span> <span data-ttu-id="d4de7-106">若要通过创建将图像分配给按钮<xref:System.Windows.Forms.ImageList>，将其分配给<xref:System.Windows.Forms.ToolBar.ImageList%2A>属性工具栏; 然后将分配到的映像索引值<xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A>按钮的属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-106">To assign images to the buttons by creating an <xref:System.Windows.Forms.ImageList>, assigning it to the <xref:System.Windows.Forms.ToolBar.ImageList%2A> property of the toolbar; then assign the image index value to the <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A> property of the button.</span></span>  
  
 <span data-ttu-id="d4de7-107">若要更改分配给工具栏的工具栏按钮的外观，请设置<xref:System.Windows.Forms.ToolBar.Appearance%2A>父工具栏控件的属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-107">To change the appearance of the toolbar buttons assigned to the toolbar, set the <xref:System.Windows.Forms.ToolBar.Appearance%2A> property of the parent toolbar control.</span></span> <span data-ttu-id="d4de7-108">`ToolBarAppearance.Flat`外观使按钮为平面外观。</span><span class="sxs-lookup"><span data-stu-id="d4de7-108">The `ToolBarAppearance.Flat` appearance gives the buttons a flat appearance.</span></span> <span data-ttu-id="d4de7-109">在鼠标指针移到按钮的外观变为三维上。</span><span class="sxs-lookup"><span data-stu-id="d4de7-109">As the mouse pointer moves over the buttons, their appearance changes to three-dimensional.</span></span> <span data-ttu-id="d4de7-110">按钮分隔符将显示为线，而不是当按钮具有平面外观时，按钮之间的空格。</span><span class="sxs-lookup"><span data-stu-id="d4de7-110">Button separators appear as lines rather than spaces between the buttons when the buttons have a flat appearance.</span></span> <span data-ttu-id="d4de7-111">如果<xref:System.Windows.Forms.ToolBar.Appearance%2A>属性设置为`ToolBarAppearance.Normal`、 凸起和三维，显示的按钮和分隔符将显示为在按钮之间间隙。</span><span class="sxs-lookup"><span data-stu-id="d4de7-111">If the <xref:System.Windows.Forms.ToolBar.Appearance%2A> property is set to `ToolBarAppearance.Normal`, the buttons appear raised and three-dimensional, and the separators appear as a gap between the buttons.</span></span>  
  
 <span data-ttu-id="d4de7-112">可以将分配<xref:System.Windows.Forms.ContextMenu>向按钮如果<xref:System.Windows.Forms.ToolBarButton.Style%2A>属性设置为`ToolBarButtonStyle.DropDown`。</span><span class="sxs-lookup"><span data-stu-id="d4de7-112">You can assign a <xref:System.Windows.Forms.ContextMenu> to a button if the <xref:System.Windows.Forms.ToolBarButton.Style%2A> property is set to `ToolBarButtonStyle.DropDown`.</span></span> <span data-ttu-id="d4de7-113">单击该按钮，将显示已分配的菜单。</span><span class="sxs-lookup"><span data-stu-id="d4de7-113">When the button is clicked, the assigned menu is displayed.</span></span>  
  
 <span data-ttu-id="d4de7-114">若要创建的集合<xref:System.Windows.Forms.ToolBarButton>控件以显示有关<xref:System.Windows.Forms.ToolBar>，使用单独添加按钮<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>方法的<xref:System.Windows.Forms.ToolBar.Buttons%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-114">To create a collection of <xref:System.Windows.Forms.ToolBarButton> controls to display on a <xref:System.Windows.Forms.ToolBar>, add the buttons individually by using the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> method of the <xref:System.Windows.Forms.ToolBar.Buttons%2A> property.</span></span> <span data-ttu-id="d4de7-115">或者，可以添加多个工具栏按钮使用<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d4de7-115">Alternatively, you can add several toolbar buttons using the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4de7-116">下面的代码示例将创建<xref:System.Windows.Forms.ToolBar>和三个<xref:System.Windows.Forms.ToolBarButton>控件。</span><span class="sxs-lookup"><span data-stu-id="d4de7-116">The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls.</span></span> <span data-ttu-id="d4de7-117">工具栏按钮分配给按钮集合、 集合分配给工具栏和工具栏添加到窗体。</span><span class="sxs-lookup"><span data-stu-id="d4de7-117">The toolbar buttons are assigned to the button collection, the collection is assigned to the toolbar, and the toolbar is added to the form.</span></span> <span data-ttu-id="d4de7-118">上<xref:System.Windows.Forms.ToolBar.ButtonClick>工具栏上，事件<xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A>属性的<xref:System.Windows.Forms.ToolBarButtonClickEventArgs>计算和适当的对话框打开。</span><span class="sxs-lookup"><span data-stu-id="d4de7-118">On the <xref:System.Windows.Forms.ToolBar.ButtonClick> event of the toolbar, the <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A> property of the <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> is evaluated and the appropriate dialog box opened.</span></span> <span data-ttu-id="d4de7-119">此代码需要<xref:System.Windows.Forms.Form>、 一个<xref:System.Windows.Forms.OpenFileDialog>即<xref:System.Windows.Forms.SaveFileDialog>，和一个<xref:System.Windows.Forms.PrintDialog>所有已创建。</span><span class="sxs-lookup"><span data-stu-id="d4de7-119">This code requires that a <xref:System.Windows.Forms.Form>, an <xref:System.Windows.Forms.OpenFileDialog>, a <xref:System.Windows.Forms.SaveFileDialog>, and a <xref:System.Windows.Forms.PrintDialog> have all been created.</span></span>  
  
 [!code-cpp[Classic ToolBar.ToolBar Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBar Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBar Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolBar" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="T:System.Windows.Forms.ToolTip" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d4de7-120">初始化 <see cref="T:System.Windows.Forms.ToolBarButton" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d4de7-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolBarButton" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d4de7-121">初始化 <see cref="T:System.Windows.Forms.ToolBarButton" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d4de7-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolBarButton" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-122">一个新创建的<xref:System.Windows.Forms.ToolBarButton>没有默认值<xref:System.Windows.Forms.ToolBarButton.Text%2A>或<xref:System.Drawing.Image>分配给它。</span><span class="sxs-lookup"><span data-stu-id="d4de7-122">A newly created <xref:System.Windows.Forms.ToolBarButton> has no default <xref:System.Windows.Forms.ToolBarButton.Text%2A> or <xref:System.Drawing.Image> assigned to it.</span></span> <span data-ttu-id="d4de7-123">按钮的默认样式为`ToolBarButtonStyle.PushButton`。</span><span class="sxs-lookup"><span data-stu-id="d4de7-123">The button's default style is `ToolBarButtonStyle.PushButton`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4de7-124">下面的代码示例将创建<xref:System.Windows.Forms.ToolBar>和三个<xref:System.Windows.Forms.ToolBarButton>控件，将这些按钮分配到工具栏，并设置几个按钮的通用属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-124">The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties.</span></span> <span data-ttu-id="d4de7-125">此代码需要<xref:System.Windows.Forms.MenuItem>， <xref:System.Windows.Forms.ImageList>，<xref:System.Windows.Forms.ToolTip>和一个<xref:System.Windows.Forms.Form>已创建并<xref:System.Windows.Forms.ImageList>至少有一个<xref:System.Drawing.Image>分配给它。</span><span class="sxs-lookup"><span data-stu-id="d4de7-125">This code requires that a <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> and a <xref:System.Windows.Forms.Form> have been created and the <xref:System.Windows.Forms.ImageList> has at least one <xref:System.Drawing.Image> assigned to it.</span></span>  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButton (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarButton(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolBarButton : string -&gt; System.Windows.Forms.ToolBarButton" Usage="new System.Windows.Forms.ToolBarButton text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="d4de7-126">要新显示的文本<see cref="T:System.Windows.Forms.ToolBarButton" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-126">The text to display on the new <see cref="T:System.Windows.Forms.ToolBarButton" />.</span></span></param>
        <summary><span data-ttu-id="d4de7-127">初始化的新实例<see cref="T:System.Windows.Forms.ToolBarButton" />类，并在按钮上显示分配的文本。</span><span class="sxs-lookup"><span data-stu-id="d4de7-127">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolBarButton" /> class and displays the assigned text on the button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-128">新创建<xref:System.Windows.Forms.ToolBarButton>不具有<xref:System.Drawing.Image>分配给它。</span><span class="sxs-lookup"><span data-stu-id="d4de7-128">The newly created <xref:System.Windows.Forms.ToolBarButton> has no <xref:System.Drawing.Image> assigned to it.</span></span> <span data-ttu-id="d4de7-129">按钮的默认样式为<xref:System.Windows.Forms.ToolBarButtonStyle.PushButton>。</span><span class="sxs-lookup"><span data-stu-id="d4de7-129">The button's default style is <xref:System.Windows.Forms.ToolBarButtonStyle.PushButton>.</span></span> <span data-ttu-id="d4de7-130">`text`参数分配给<xref:System.Windows.Forms.ToolBarButton.Text%2A>属性和新的工具栏按钮控件上显示。</span><span class="sxs-lookup"><span data-stu-id="d4de7-130">The `text` parameter is assigned to the <xref:System.Windows.Forms.ToolBarButton.Text%2A> property and is displayed on the new toolbar button control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4de7-131">下面的代码示例将创建<xref:System.Windows.Forms.ToolBar>和三个<xref:System.Windows.Forms.ToolBarButton>控件，将这些按钮分配到工具栏，并设置几个按钮的通用属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-131">The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties.</span></span> <span data-ttu-id="d4de7-132">此代码需要<xref:System.Windows.Forms.MenuItem>， <xref:System.Windows.Forms.ImageList>，<xref:System.Windows.Forms.ToolTip>和一个<xref:System.Windows.Forms.Form>已创建并<xref:System.Windows.Forms.ImageList>至少有一个<xref:System.Drawing.Image>分配给它。</span><span class="sxs-lookup"><span data-stu-id="d4de7-132">This code requires that a <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> and a <xref:System.Windows.Forms.Form> have been created and the <xref:System.Windows.Forms.ImageList> has at least one <xref:System.Drawing.Image> assigned to it.</span></span>  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBarButton.Text" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="toolBarButton.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d4de7-133">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-133"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d4de7-134">释放由 <see cref="T:System.Windows.Forms.ToolBarButton" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="d4de7-134">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ToolBarButton" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-135">调用此方法由公共`Dispose`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d4de7-135">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="d4de7-136">`Dispose` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="d4de7-136">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="d4de7-137"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="d4de7-137"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="d4de7-138">当`disposing`参数为 true 时，此方法释放任何托管对象所持有的所有资源，此<xref:System.Windows.Forms.ToolBarButton>的引用。</span><span class="sxs-lookup"><span data-stu-id="d4de7-138">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ToolBarButton> references.</span></span> <span data-ttu-id="d4de7-139">此方法调用每个引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="d4de7-139">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d4de7-140">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="d4de7-140">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="d4de7-141">重写时<see langword="Dispose(Boolean)" />小心不要引用已经释放的早期调用中的对象<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-141">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="d4de7-142">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="d4de7-142">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="d4de7-143">有关详细信息<see langword="Dispose" />并<see cref="M:System.Object.Finalize" />，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="d4de7-143">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DropDownMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Menu DropDownMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Menu DropDownMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.DropDownMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownMenu As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Menu ^ DropDownMenu { System::Windows::Forms::Menu ^ get(); void set(System::Windows::Forms::Menu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DropDownMenu : System.Windows.Forms.Menu with get, set" Usage="System.Windows.Forms.ToolBarButton.DropDownMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4de7-144">获取或设置要在下拉工具栏按钮中显示的菜单。</span><span class="sxs-lookup"><span data-stu-id="d4de7-144">Gets or sets the menu to be displayed in the drop-down toolbar button.</span></span></summary>
        <value><span data-ttu-id="d4de7-145">一个<see cref="T:System.Windows.Forms.ContextMenu" />下拉工具栏按钮中显示。</span><span class="sxs-lookup"><span data-stu-id="d4de7-145">A <see cref="T:System.Windows.Forms.ContextMenu" /> to be displayed in the drop-down toolbar button.</span></span> <span data-ttu-id="d4de7-146">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-146">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-147">您可以指定<xref:System.Windows.Forms.ContextMenu>单击下拉列表按钮时显示。</span><span class="sxs-lookup"><span data-stu-id="d4de7-147">You can specify a <xref:System.Windows.Forms.ContextMenu> to be displayed when the drop-down button is clicked.</span></span> <span data-ttu-id="d4de7-148">此属性不使用，除非<xref:System.Windows.Forms.ToolBarButton.Style%2A>属性值设置为<xref:System.Windows.Forms.ToolBarButtonStyle.DropDownButton?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d4de7-148">This property is not used unless the <xref:System.Windows.Forms.ToolBarButton.Style%2A> property value is set to <xref:System.Windows.Forms.ToolBarButtonStyle.DropDownButton?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4de7-149">尽管<xref:System.Windows.Forms.ToolBarButton.DropDownMenu%2A>属性被定义为<xref:System.Windows.Forms.Menu>类型，您必须将其分配<xref:System.Windows.Forms.ContextMenu>，才能正确显示。</span><span class="sxs-lookup"><span data-stu-id="d4de7-149">Although the <xref:System.Windows.Forms.ToolBarButton.DropDownMenu%2A> property is defined as a <xref:System.Windows.Forms.Menu> type, you must assign it a <xref:System.Windows.Forms.ContextMenu> for it to display properly.</span></span> <span data-ttu-id="d4de7-150">如果要创建您自己<xref:System.Windows.Forms.MenuItem>派生的类必须将分配到该对象<xref:System.Windows.Forms.ContextMenu>，并将分配<xref:System.Windows.Forms.ContextMenu>到<xref:System.Windows.Forms.ToolBarButton.DropDownMenu%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-150">If you are creating your own <xref:System.Windows.Forms.MenuItem> derived class you must assign that object to a <xref:System.Windows.Forms.ContextMenu> and assign the <xref:System.Windows.Forms.ContextMenu> to the <xref:System.Windows.Forms.ToolBarButton.DropDownMenu%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4de7-151">下面的代码示例将创建<xref:System.Windows.Forms.ToolBar>和三个<xref:System.Windows.Forms.ToolBarButton>控件，将这些按钮分配到工具栏，并设置几个按钮的通用属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-151">The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties.</span></span> <span data-ttu-id="d4de7-152">此代码需要<xref:System.Windows.Forms.ImageList>，<xref:System.Windows.Forms.ToolTip>和一个<xref:System.Windows.Forms.Form>已创建并<xref:System.Windows.Forms.ImageList>至少有一个<xref:System.Drawing.Image>分配给它。</span><span class="sxs-lookup"><span data-stu-id="d4de7-152">This code requires that an <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> and a <xref:System.Windows.Forms.Form> have been created and the <xref:System.Windows.Forms.ImageList> has at least one <xref:System.Drawing.Image> assigned to it.</span></span>  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d4de7-153">已分配的对象不是<see cref="T:System.Windows.Forms.ContextMenu" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-153">The assigned object is not a <see cref="T:System.Windows.Forms.ContextMenu" />.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4de7-154">获取或设置一个值，该值指示是否启用按钮。</span><span class="sxs-lookup"><span data-stu-id="d4de7-154">Gets or sets a value indicating whether the button is enabled.</span></span></summary>
        <value><span data-ttu-id="d4de7-155"><see langword="true" /> 如果启用该按钮;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-155"><see langword="true" /> if the button is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d4de7-156">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-156">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-157">当<xref:System.Windows.Forms.ToolBarButton.Enabled%2A>属性设置为`false`，不能单击工具栏按钮，并更改按钮的外观。</span><span class="sxs-lookup"><span data-stu-id="d4de7-157">When the <xref:System.Windows.Forms.ToolBarButton.Enabled%2A> property is set to `false`, the toolbar button cannot be clicked, and the button's appearance changes.</span></span> <span data-ttu-id="d4de7-158"><xref:System.Drawing.Image>和<xref:System.Windows.Forms.ToolBarButton.Text%2A>分配给此按钮会显示为灰色。如果图像或文本有多个颜色，它们显示在为单一的灰色。</span><span class="sxs-lookup"><span data-stu-id="d4de7-158">The <xref:System.Drawing.Image> and <xref:System.Windows.Forms.ToolBarButton.Text%2A> assigned to the button appear grayed out. If the image or text has multiple colors, they display in a monochromatic gray.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.ToolBarButton.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4de7-159">获取或设置分配给按钮的图像的索引值。</span><span class="sxs-lookup"><span data-stu-id="d4de7-159">Gets or sets the index value of the image assigned to the button.</span></span></summary>
        <value><span data-ttu-id="d4de7-160">索引值<see cref="T:System.Drawing.Image" />分配给工具栏按钮。</span><span class="sxs-lookup"><span data-stu-id="d4de7-160">The index value of the <see cref="T:System.Drawing.Image" /> assigned to the toolbar button.</span></span> <span data-ttu-id="d4de7-161">默认值为 -1。</span><span class="sxs-lookup"><span data-stu-id="d4de7-161">The default is -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-162"><xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A>值引用中的图像的索引的值<xref:System.Windows.Forms.ImageList>分配给父<xref:System.Windows.Forms.ToolBar>控件。</span><span class="sxs-lookup"><span data-stu-id="d4de7-162">The <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A> value references the indexed value of the images in an <xref:System.Windows.Forms.ImageList> assigned to the parent <xref:System.Windows.Forms.ToolBar> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4de7-163">下面的代码示例将创建<xref:System.Windows.Forms.ToolBar>和三个<xref:System.Windows.Forms.ToolBarButton>控件，将这些按钮分配到工具栏，并设置几个按钮的通用属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-163">The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties.</span></span> <span data-ttu-id="d4de7-164">此代码需要<xref:System.Windows.Forms.MenuItem>， <xref:System.Windows.Forms.ImageList>，<xref:System.Windows.Forms.ToolTip>和一个<xref:System.Windows.Forms.Form>已创建并<xref:System.Windows.Forms.ImageList>至少有一个<xref:System.Drawing.Image>分配给它。</span><span class="sxs-lookup"><span data-stu-id="d4de7-164">This code requires that a <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> and a <xref:System.Windows.Forms.Form> have been created and the <xref:System.Windows.Forms.ImageList> has at least one <xref:System.Drawing.Image> assigned to it.</span></span>  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d4de7-165">所分配的值小于 -1。</span><span class="sxs-lookup"><span data-stu-id="d4de7-165">The assigned value is less than -1.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="T:System.Windows.Forms.ImageList" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.ToolBarButton.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4de7-166">获取或设置分配给按钮的图像的名称。</span><span class="sxs-lookup"><span data-stu-id="d4de7-166">Gets or sets the name of the image assigned to the button.</span></span></summary>
        <value><span data-ttu-id="d4de7-167">名称<see cref="T:System.Drawing.Image" />分配给工具栏按钮。</span><span class="sxs-lookup"><span data-stu-id="d4de7-167">The name of the <see cref="T:System.Drawing.Image" /> assigned to the toolbar button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-168"><xref:System.Windows.Forms.ToolBarButton.ImageKey%2A>值指示的图像<xref:System.Windows.Forms.ImageList>分配给父<xref:System.Windows.Forms.ToolBar>控件。</span><span class="sxs-lookup"><span data-stu-id="d4de7-168">The <xref:System.Windows.Forms.ToolBarButton.ImageKey%2A> value indicates an image in the <xref:System.Windows.Forms.ImageList> assigned to the parent <xref:System.Windows.Forms.ToolBar> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBar.ImageList" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.ToolBarButton.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4de7-169">按钮的名称。</span><span class="sxs-lookup"><span data-stu-id="d4de7-169">The name of the button.</span></span></summary>
        <value><span data-ttu-id="d4de7-170">按钮的名称。</span><span class="sxs-lookup"><span data-stu-id="d4de7-170">The name of the button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-171">可以使用按钮名称作为键来检索<xref:System.Windows.Forms.ToolBarButton>从<xref:System.Windows.Forms.ToolBar.Buttons%2A>的集合<xref:System.Windows.Forms.ToolBar>控件。</span><span class="sxs-lookup"><span data-stu-id="d4de7-171">You can use the button name as a key to retrieve the <xref:System.Windows.Forms.ToolBarButton> from the <xref:System.Windows.Forms.ToolBar.Buttons%2A> collection of a <xref:System.Windows.Forms.ToolBar> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolBar Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBar Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As ToolBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolBar ^ Parent { System::Windows::Forms::ToolBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.ToolBar" Usage="System.Windows.Forms.ToolBarButton.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4de7-172">获取工具栏按钮分配给工具栏控件。</span><span class="sxs-lookup"><span data-stu-id="d4de7-172">Gets the toolbar control that the toolbar button is assigned to.</span></span></summary>
        <value><span data-ttu-id="d4de7-173"><see cref="T:System.Windows.Forms.ToolBar" />控制的<see cref="T:System.Windows.Forms.ToolBarButton" />分配给。</span><span class="sxs-lookup"><span data-stu-id="d4de7-173">The <see cref="T:System.Windows.Forms.ToolBar" /> control that the <see cref="T:System.Windows.Forms.ToolBarButton" /> is assigned to.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
      </Docs>
    </Member>
    <Member MemberName="PartialPush">
      <MemberSignature Language="C#" Value="public bool PartialPush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PartialPush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.PartialPush" />
      <MemberSignature Language="VB.NET" Value="Public Property PartialPush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PartialPush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PartialPush : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.PartialPush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4de7-174">获取或设置一个值，该值指示切换式工具栏按钮为部分按下。</span><span class="sxs-lookup"><span data-stu-id="d4de7-174">Gets or sets a value indicating whether a toggle-style toolbar button is partially pushed.</span></span></summary>
        <value><span data-ttu-id="d4de7-175"><see langword="true" /> 如果切换式工具栏按钮部分按下状态;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-175"><see langword="true" /> if a toggle-style toolbar button is partially pushed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d4de7-176">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-176">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-177">当<xref:System.Windows.Forms.ToolBarButton.PartialPush%2A>设置为`true`，工具栏按钮显示为具有灰其人脸。</span><span class="sxs-lookup"><span data-stu-id="d4de7-177">When <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> is set to `true`, the toolbar button appears to have its face grayed.</span></span> <span data-ttu-id="d4de7-178">此外观会不同于为灰色的外观时<xref:System.Windows.Forms.ToolBarButton.Enabled%2A>属性设置为`false`由于部分按下的外观将对为整个按钮表面。</span><span class="sxs-lookup"><span data-stu-id="d4de7-178">This appearance is different from the dimmed appearance when the <xref:System.Windows.Forms.ToolBarButton.Enabled%2A> property is set to `false` since the partial-push appearance gives a haze to the entire button face.</span></span> <span data-ttu-id="d4de7-179">此属性无任何效果，除非<xref:System.Windows.Forms.ToolBarButtonStyle>设置为`ToggleButton`。</span><span class="sxs-lookup"><span data-stu-id="d4de7-179">This property has no effect unless the <xref:System.Windows.Forms.ToolBarButtonStyle> is set to `ToggleButton`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4de7-180">下面的代码示例演示如何使用<xref:System.Windows.Forms.ToolBarButton.Pushed%2A>，和<xref:System.Windows.Forms.ToolBarButton.PartialPush%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-180">The following code example demonstrates how to use the <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, and <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> properties.</span></span> <span data-ttu-id="d4de7-181">若要运行该示例，请将以下代码粘贴在一个窗体，其中包含<xref:System.Windows.Forms.RichTextBox>控件调用`RichTextBox1`。调用`InitializeToolBar`窗体的构造函数中的方法或`Load`方法。</span><span class="sxs-lookup"><span data-stu-id="d4de7-181">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`.Call the `InitializeToolBar` method in the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Pushed">
      <MemberSignature Language="C#" Value="public bool Pushed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Pushed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Pushed" />
      <MemberSignature Language="VB.NET" Value="Public Property Pushed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Pushed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Pushed : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.Pushed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4de7-182">获取或设置一个值，该值指示切换式工具栏按钮当前是否处于按下状态。</span><span class="sxs-lookup"><span data-stu-id="d4de7-182">Gets or sets a value indicating whether a toggle-style toolbar button is currently in the pushed state.</span></span></summary>
        <value><span data-ttu-id="d4de7-183"><see langword="true" /> 如果切换式工具栏按钮当前处于按下状态;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-183"><see langword="true" /> if a toggle-style toolbar button is currently in the pushed state; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d4de7-184">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-184">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-185">当<xref:System.Windows.Forms.ToolBarButton.Pushed%2A>设置为`true`，工具栏按钮将呈凹陷状或嵌入相对于其他按钮的状态显示。</span><span class="sxs-lookup"><span data-stu-id="d4de7-185">When <xref:System.Windows.Forms.ToolBarButton.Pushed%2A> is set to `true`, the toolbar button appears sunken or inset relative to the other buttons.</span></span> <span data-ttu-id="d4de7-186">此属性无任何效果，除非<xref:System.Windows.Forms.ToolBarButtonStyle>设置为`ToggleButton`。</span><span class="sxs-lookup"><span data-stu-id="d4de7-186">This property has no effect unless the <xref:System.Windows.Forms.ToolBarButtonStyle> is set to `ToggleButton`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4de7-187">下面的代码示例演示如何使用<xref:System.Windows.Forms.ToolBarButton.Pushed%2A>，和<xref:System.Windows.Forms.ToolBarButton.PartialPush%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-187">The following code example demonstrates how to use the <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, and <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> properties.</span></span> <span data-ttu-id="d4de7-188">若要运行该示例，请将以下代码粘贴在一个窗体，其中包含<xref:System.Windows.Forms.RichTextBox>控件调用`RichTextBox1`。</span><span class="sxs-lookup"><span data-stu-id="d4de7-188">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`.</span></span> <span data-ttu-id="d4de7-189">调用`InitializeToolBar`窗体的构造函数中的方法或`Load`方法。</span><span class="sxs-lookup"><span data-stu-id="d4de7-189">Call the `InitializeToolBar` method in the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Rectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Rectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Rectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Rectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Rectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Rectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.ToolBarButton.Rectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4de7-190">获取工具栏按钮的边框。</span><span class="sxs-lookup"><span data-stu-id="d4de7-190">Gets the bounding rectangle for a toolbar button.</span></span></summary>
        <value><span data-ttu-id="d4de7-191">边界<see cref="T:System.Drawing.Rectangle" />工具栏按钮。</span><span class="sxs-lookup"><span data-stu-id="d4de7-191">The bounding <see cref="T:System.Drawing.Rectangle" /> for a toolbar button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-192">如果<xref:System.Windows.Forms.ToolBar>和当前按钮均<xref:System.Windows.Forms.ToolBarButton.Visible%2A>，则此属性检索中当前包含按钮的边框。</span><span class="sxs-lookup"><span data-stu-id="d4de7-192">If the <xref:System.Windows.Forms.ToolBar> and the current button are both <xref:System.Windows.Forms.ToolBarButton.Visible%2A>, then this property retrieves the bounding rectangle the button is currently contained in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBarButton.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolBarButtonStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolBarButtonStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As ToolBarButtonStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolBarButtonStyle Style { System::Windows::Forms::ToolBarButtonStyle get(); void set(System::Windows::Forms::ToolBarButtonStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Windows.Forms.ToolBarButtonStyle with get, set" Usage="System.Windows.Forms.ToolBarButton.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButtonStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4de7-193">获取或设置工具栏按钮的样式。</span><span class="sxs-lookup"><span data-stu-id="d4de7-193">Gets or sets the style of the toolbar button.</span></span></summary>
        <value><span data-ttu-id="d4de7-194"><see cref="T:System.Windows.Forms.ToolBarButtonStyle" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="d4de7-194">One of the <see cref="T:System.Windows.Forms.ToolBarButtonStyle" /> values.</span></span> <span data-ttu-id="d4de7-195">默认值为 <see langword="ToolBarButtonStyle.PushButton" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-195">The default is <see langword="ToolBarButtonStyle.PushButton" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-196">如果按钮<xref:System.Windows.Forms.ToolBarButton.Style%2A>设置为<xref:System.Windows.Forms.ToolBarButtonStyle.DropDownButton>可以指定<xref:System.Windows.Forms.MenuItem>按下拉按钮时显示。</span><span class="sxs-lookup"><span data-stu-id="d4de7-196">If the button <xref:System.Windows.Forms.ToolBarButton.Style%2A> is set to <xref:System.Windows.Forms.ToolBarButtonStyle.DropDownButton> you can specify a <xref:System.Windows.Forms.MenuItem> to be displayed when the drop-down button is pressed.</span></span> <span data-ttu-id="d4de7-197">如果样式设置为`ToolBarButtonStyle.Separator`，工具栏按钮将显示为按钮分隔符而不是一个按钮。</span><span class="sxs-lookup"><span data-stu-id="d4de7-197">If the style is set to `ToolBarButtonStyle.Separator`, the toolbar button appears as a button separator and not as a button.</span></span> <span data-ttu-id="d4de7-198">`ToolBarButtonStyle.ToggleButton`样式会导致该工具栏按钮充当切换按钮; 它可以是在中打开或关闭状态。</span><span class="sxs-lookup"><span data-stu-id="d4de7-198">The `ToolBarButtonStyle.ToggleButton` style causes the toolbar button to act like a toggle button; it can be in an on or off state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4de7-199">下面的代码示例将创建<xref:System.Windows.Forms.ToolBar>和三个<xref:System.Windows.Forms.ToolBarButton>控件，将这些按钮分配到工具栏，并设置几个按钮的通用属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-199">The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties.</span></span> <span data-ttu-id="d4de7-200">此代码需要<xref:System.Windows.Forms.MenuItem>， <xref:System.Windows.Forms.ImageList>，<xref:System.Windows.Forms.ToolTip>和一个<xref:System.Windows.Forms.Form>已创建并<xref:System.Windows.Forms.ImageList>至少有一个<xref:System.Drawing.Image>分配给它。</span><span class="sxs-lookup"><span data-stu-id="d4de7-200">This code requires that a <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> and a <xref:System.Windows.Forms.Form> have been created and the <xref:System.Windows.Forms.ImageList> has at least one <xref:System.Drawing.Image> assigned to it.</span></span>  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="d4de7-201">分配的值不是 <see cref="T:System.Windows.Forms.ToolBarButtonStyle" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="d4de7-201">The assigned value is not one of the <see cref="T:System.Windows.Forms.ToolBarButtonStyle" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ToolBarButton.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4de7-202">获取或设置包含有关工具栏按钮的数据的对象。</span><span class="sxs-lookup"><span data-stu-id="d4de7-202">Gets or sets the object that contains data about the toolbar button.</span></span></summary>
        <value><span data-ttu-id="d4de7-203"><see cref="T:System.Object" /> ，其中包含有关工具栏按钮的数据。</span><span class="sxs-lookup"><span data-stu-id="d4de7-203">An <see cref="T:System.Object" /> that contains data about the toolbar button.</span></span> <span data-ttu-id="d4de7-204">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-204">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-205">检索或分配与工具栏按钮当前关联的数据。</span><span class="sxs-lookup"><span data-stu-id="d4de7-205">Retrieves or assigns the data currently associated with the toolbar button.</span></span> <span data-ttu-id="d4de7-206">任何<xref:System.Object>派生的类型可以分配给此属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-206">Any <xref:System.Object> derived type can be assigned to this property.</span></span> <span data-ttu-id="d4de7-207">如果此属性设置通过 Windows 窗体设计器中，可以分配纯文本。</span><span class="sxs-lookup"><span data-stu-id="d4de7-207">If this property is being set through the Windows Forms designer, only text can be assigned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4de7-208">下面的代码示例演示如何使用<xref:System.Windows.Forms.ToolBarButton.Pushed%2A>， <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A>，和<xref:System.Windows.Forms.ToolBarButton.Tag%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-208">The following code example demonstrates how to use the <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A>, and <xref:System.Windows.Forms.ToolBarButton.Tag%2A> properties.</span></span> <span data-ttu-id="d4de7-209">若要运行该示例，请将以下代码粘贴在一个窗体，其中包含<xref:System.Windows.Forms.RichTextBox>控件调用`RichTextBox1`。</span><span class="sxs-lookup"><span data-stu-id="d4de7-209">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`.</span></span> <span data-ttu-id="d4de7-210">调用`InitializeToolBar`窗体的构造函数中的方法或`Load`方法。</span><span class="sxs-lookup"><span data-stu-id="d4de7-210">Call the `InitializeToolBar` method in the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ToolBarButton.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4de7-211">获取或设置工具栏按钮上显示的文本。</span><span class="sxs-lookup"><span data-stu-id="d4de7-211">Gets or sets the text displayed on the toolbar button.</span></span></summary>
        <value><span data-ttu-id="d4de7-212">工具栏按钮上显示的文本。</span><span class="sxs-lookup"><span data-stu-id="d4de7-212">The text displayed on the toolbar button.</span></span> <span data-ttu-id="d4de7-213">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="d4de7-213">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-214">默认的文本属性值为空字符串 ("") 创建具有控件才<xref:System.Windows.Forms.ToolBar.%23ctor%2A>接受文本字符串作为参数的构造函数。</span><span class="sxs-lookup"><span data-stu-id="d4de7-214">The default the Text property value is an empty string ("") unless you created the control with the <xref:System.Windows.Forms.ToolBar.%23ctor%2A> constructor that accepts the text string as a parameter.</span></span> <span data-ttu-id="d4de7-215">工具栏按钮上文本的方向由<xref:System.Windows.Forms.ToolBar.TextAlign%2A>属性的按钮的父<xref:System.Windows.Forms.ToolBar>，它可以设置为其中一个<xref:System.Windows.Forms.ToolBarTextAlign>枚举值。</span><span class="sxs-lookup"><span data-stu-id="d4de7-215">The orientation of the text on the toolbar button is determined by the <xref:System.Windows.Forms.ToolBar.TextAlign%2A> property of the button's parent <xref:System.Windows.Forms.ToolBar>, which can be set to one of the <xref:System.Windows.Forms.ToolBarTextAlign> enumeration values.</span></span> <span data-ttu-id="d4de7-216">方向为相对于分配给按钮的图像。</span><span class="sxs-lookup"><span data-stu-id="d4de7-216">The orientation is in relation to the image assigned to the button.</span></span> <span data-ttu-id="d4de7-217">如果没有图像分配给此按钮，将有空间留下一个工具栏按钮的图面上。</span><span class="sxs-lookup"><span data-stu-id="d4de7-217">If no image is assigned to the button, there will be space left for one on the surface of the toolbar button.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4de7-218">下面的代码示例将创建<xref:System.Windows.Forms.ToolBar>和三个<xref:System.Windows.Forms.ToolBarButton>控件，将这些按钮分配到工具栏，并设置几个按钮的通用属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-218">The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties.</span></span> <span data-ttu-id="d4de7-219">此代码需要<xref:System.Windows.Forms.MenuItem>， <xref:System.Windows.Forms.ImageList>，<xref:System.Windows.Forms.ToolTip>和一个<xref:System.Windows.Forms.Form>已创建并<xref:System.Windows.Forms.ImageList>至少有一个<xref:System.Drawing.Image>分配给它。</span><span class="sxs-lookup"><span data-stu-id="d4de7-219">This code requires that a <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> and a <xref:System.Windows.Forms.Form> have been created and the <xref:System.Windows.Forms.ImageList> has at least one <xref:System.Drawing.Image> assigned to it.</span></span>  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.ToolBarButton.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4de7-220">获取或设置显示为按钮的工具提示的文本。</span><span class="sxs-lookup"><span data-stu-id="d4de7-220">Gets or sets the text that appears as a ToolTip for the button.</span></span></summary>
        <value><span data-ttu-id="d4de7-221">当鼠标指针移到工具栏按钮上时显示的文本。</span><span class="sxs-lookup"><span data-stu-id="d4de7-221">The text that is displayed when the mouse pointer moves over the toolbar button.</span></span> <span data-ttu-id="d4de7-222">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="d4de7-222">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-223">若要启用的工具提示文本显示，当鼠标指针移动到按钮上方时，设置<xref:System.Windows.Forms.ToolBar.ShowToolTips%2A>属性的按钮的父<xref:System.Windows.Forms.ToolBar>到`true`。</span><span class="sxs-lookup"><span data-stu-id="d4de7-223">To enable the display of the ToolTip text when the mouse pointer is moved over the button, set the <xref:System.Windows.Forms.ToolBar.ShowToolTips%2A> property of the button's parent <xref:System.Windows.Forms.ToolBar> to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4de7-224">下面的代码示例将创建<xref:System.Windows.Forms.ToolBar>和三个<xref:System.Windows.Forms.ToolBarButton>控件，将这些按钮分配到工具栏，并设置几个按钮的通用属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-224">The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties.</span></span> <span data-ttu-id="d4de7-225">此代码需要<xref:System.Windows.Forms.MenuItem>， <xref:System.Windows.Forms.ImageList>，<xref:System.Windows.Forms.ToolTip>和一个<xref:System.Windows.Forms.Form>已创建并<xref:System.Windows.Forms.ImageList>至少有一个<xref:System.Drawing.Image>分配给它。</span><span class="sxs-lookup"><span data-stu-id="d4de7-225">This code requires that a <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> and a <xref:System.Windows.Forms.Form> have been created and the <xref:System.Windows.Forms.ImageList> has at least one <xref:System.Drawing.Image> assigned to it.</span></span>  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolBar.ShowToolTips" />
        <altmember cref="T:System.Windows.Forms.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="toolBarButton.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d4de7-226">返回表示 <see cref="T:System.Windows.Forms.ToolBarButton" /> 控件的字符串。</span><span class="sxs-lookup"><span data-stu-id="d4de7-226">Returns a string that represents the <see cref="T:System.Windows.Forms.ToolBarButton" /> control.</span></span></summary>
        <returns><span data-ttu-id="d4de7-227">表示当前 <see cref="T:System.Windows.Forms.ToolBarButton" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="d4de7-227">A string that represents the current <see cref="T:System.Windows.Forms.ToolBarButton" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-228"><xref:System.Windows.Forms.ToolBarButton.ToString%2A>方法返回包含类型和值的字符串<xref:System.Windows.Forms.ToolBarButton.Style%2A>和<xref:System.Windows.Forms.ToolBarButton.Text%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d4de7-228">The <xref:System.Windows.Forms.ToolBarButton.ToString%2A> method returns a string that includes the type and the value of the <xref:System.Windows.Forms.ToolBarButton.Style%2A> and <xref:System.Windows.Forms.ToolBarButton.Text%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4de7-229">获取或设置一个值，该值指示工具栏按钮是否可见。</span><span class="sxs-lookup"><span data-stu-id="d4de7-229">Gets or sets a value indicating whether the toolbar button is visible.</span></span></summary>
        <value><span data-ttu-id="d4de7-230"><see langword="true" /> 如果工具栏按钮是否可见的;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-230"><see langword="true" /> if the toolbar button is visible; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d4de7-231">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="d4de7-231">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4de7-232">如果工具栏按钮不可见，它将不会显示在工具栏中，并因此不能接收用户输入。</span><span class="sxs-lookup"><span data-stu-id="d4de7-232">If the toolbar button is not visible, it will not be displayed on the toolbar, and therefore cannot receive user input.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>