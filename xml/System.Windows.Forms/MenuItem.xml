<Type Name="MenuItem" FullName="System.Windows.Forms.MenuItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8e96b9a562587ce1b84c0314819619ffe1f760d2" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55340280" /></Metadata><TypeSignature Language="C#" Value="public class MenuItem : System.Windows.Forms.Menu" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuItem extends System.Windows.Forms.Menu" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuItem&#xA;Inherits Menu" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItem : System::Windows::Forms::Menu" />
  <TypeSignature Language="F#" Value="type MenuItem = class&#xA;    inherit Menu" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Menu</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f6fea-101">表示在 <see cref="T:System.Windows.Forms.MainMenu" /> 或 <see cref="T:System.Windows.Forms.ContextMenu" /> 内显示的单个项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-101">Represents an individual item that is displayed within a <see cref="T:System.Windows.Forms.MainMenu" /> or <see cref="T:System.Windows.Forms.ContextMenu" />.</span></span> <span data-ttu-id="f6fea-102">尽管 <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> 替换了早期版本的 <see cref="T:System.Windows.Forms.MenuItem" /> 控件并添加了功能；但是也可选择保留 <see cref="T:System.Windows.Forms.MenuItem" /> 以备向后兼容和将来使用。</span><span class="sxs-lookup"><span data-stu-id="f6fea-102">Although <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> replaces and adds functionality to the <see cref="T:System.Windows.Forms.MenuItem" /> control of previous versions, <see cref="T:System.Windows.Forms.MenuItem" /> is retained for both backward compatibility and future use if you choose.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-103">为了使<xref:System.Windows.Forms.MenuItem>要显示，您必须将其添加到<xref:System.Windows.Forms.MainMenu>或<xref:System.Windows.Forms.ContextMenu>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-103">In order for a <xref:System.Windows.Forms.MenuItem> to be displayed, you must add it to a <xref:System.Windows.Forms.MainMenu> or <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="f6fea-104">若要创建子菜单，可以添加<xref:System.Windows.Forms.MenuItem>对象添加到<xref:System.Windows.Forms.Menu.MenuItems%2A>的父对象<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-104">To create submenus, you can add <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.Menu.MenuItems%2A> property of the parent <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
 <span data-ttu-id="f6fea-105"><xref:System.Windows.Forms.MenuItem>类提供了可配置的外观和功能的菜单项的属性。</span><span class="sxs-lookup"><span data-stu-id="f6fea-105">The <xref:System.Windows.Forms.MenuItem> class provides properties that enable you to configure the appearance and functionality of a menu item.</span></span> <span data-ttu-id="f6fea-106">若要显示的菜单项旁边的复选标记，请使用<xref:System.Windows.Forms.MenuItem.Checked%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f6fea-106">To display a check mark next to a menu item, use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property.</span></span> <span data-ttu-id="f6fea-107">此功能可用于标识互相排斥的菜单项的列表中选定的菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-107">You can use this feature to identify a menu item that is selected in a list of mutually exclusive menu items.</span></span> <span data-ttu-id="f6fea-108">例如，如果有一组设置中的文本颜色的菜单项<xref:System.Windows.Forms.TextBox>控件，可以使用<xref:System.Windows.Forms.MenuItem.Checked%2A>属性来标识当前选定的颜色。</span><span class="sxs-lookup"><span data-stu-id="f6fea-108">For example, if you have a set of menu items for setting the color of text in a <xref:System.Windows.Forms.TextBox> control, you can use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to identify which color is currently selected.</span></span> <span data-ttu-id="f6fea-109"><xref:System.Windows.Forms.MenuItem.Shortcut%2A>属性可以用于定义某一键盘组合可以按下选择菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-109">The <xref:System.Windows.Forms.MenuItem.Shortcut%2A> property can be used to define a keyboard combination that can be pressed to select the menu item.</span></span>  
  
 <span data-ttu-id="f6fea-110">有关<xref:System.Windows.Forms.MenuItem>多文档界面 (MDI) 应用程序中显示的对象，则可以使用<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>方法要合并的 MDI 菜单与创建合并的菜单结构及其子窗体的父级。</span><span class="sxs-lookup"><span data-stu-id="f6fea-110">For <xref:System.Windows.Forms.MenuItem> objects displayed in a Multiple Document Interface (MDI) application, you can use the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to merge the menus of an MDI parent for with that of its child forms to create a consolidated menu structure.</span></span> <span data-ttu-id="f6fea-111">因为<xref:System.Windows.Forms.MenuItem>不能在多个位置在同一时间，如在中重用<xref:System.Windows.Forms.MainMenu>和一个<xref:System.Windows.Forms.ContextMenu>，可以使用<xref:System.Windows.Forms.MenuItem.CloneMenu%2A>方法来创建一份<xref:System.Windows.Forms.MenuItem>在另一个位置中使用。</span><span class="sxs-lookup"><span data-stu-id="f6fea-111">Because a <xref:System.Windows.Forms.MenuItem> cannot be reused in multiple locations at the same time, such as in a <xref:System.Windows.Forms.MainMenu> and a <xref:System.Windows.Forms.ContextMenu>, you can use the <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> method to create a copy of a <xref:System.Windows.Forms.MenuItem> for use in another location.</span></span>  
  
 <span data-ttu-id="f6fea-112"><xref:System.Windows.Forms.MenuItem.Popup>事件使您可以执行任务之前将显示一个菜单。</span><span class="sxs-lookup"><span data-stu-id="f6fea-112">The <xref:System.Windows.Forms.MenuItem.Popup> event enables you to perform tasks before a menu is displayed.</span></span> <span data-ttu-id="f6fea-113">例如，可以创建此事件来显示或隐藏菜单项根据您的代码状态的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6fea-113">For example, you can create an event handler for this event to display or hide menu items based on the state of your code.</span></span> <span data-ttu-id="f6fea-114"><xref:System.Windows.Forms.MenuItem.Select>事件使您可以执行任务，例如当用户将鼠标指针放在菜单项上的应用程序的菜单项提供的详细的帮助。</span><span class="sxs-lookup"><span data-stu-id="f6fea-114">The <xref:System.Windows.Forms.MenuItem.Select> event enables you to perform tasks such as providing detailed help for your application's menu items when the user places the mouse pointer over a menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-115">下面的代码示例创建一个窗体菜单结构。</span><span class="sxs-lookup"><span data-stu-id="f6fea-115">The following code example creates a menu structure for a form.</span></span> <span data-ttu-id="f6fea-116">示例代码将添加<xref:System.Windows.Forms.MenuItem>来表示顶级菜单项中，选择字体大小，将子菜单项添加到它，然后将两个子菜单项添加到表示应用程序中的大型和小型字体选择该菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-116">The example code adds a <xref:System.Windows.Forms.MenuItem> to represent the top-level menu item, adds a submenu item to it for selecting a font size, and then adds two submenu items to that menu item that represent large and small font choices in an application.</span></span> <span data-ttu-id="f6fea-117">该示例需要有<xref:System.Windows.Forms.MainMenu>名为对象`mainMenu1`和四<xref:System.Windows.Forms.MenuItem>对象命名`menuItem1`， `menuItem2`， `menuItem3`，和`menuItem4`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-117">The example requires that there is a <xref:System.Windows.Forms.MainMenu> object named `mainMenu1` and four <xref:System.Windows.Forms.MenuItem> objects named `menuItem1`, `menuItem2`, `menuItem3`, and `menuItem4`.</span></span>  
  
 [!code-cpp[Classic Menu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu Example/CS/source.cs#1)]
 [!code-vb[Classic Menu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MainMenu" />
    <altmember cref="T:System.Windows.Forms.Menu" />
    <altmember cref="T:System.Windows.Forms.MenuMerge" />
    <altmember cref="T:System.Windows.Forms.ContextMenu" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6fea-118">初始化 <see cref="T:System.Windows.Forms.MenuItem" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f6fea-118">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6fea-119">使用空白标题初始化 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-119">Initializes a <see cref="T:System.Windows.Forms.MenuItem" /> with a blank caption.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-120">创建空白后<xref:System.Windows.Forms.MenuItem>使用此构造函数，可以使用的属性和方法<xref:System.Windows.Forms.MenuItem>类，以指定的外观和行为在<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-120">Once you have created a blank <xref:System.Windows.Forms.MenuItem> using this constructor, you can use the properties and methods of the <xref:System.Windows.Forms.MenuItem> class to specify the appearance and behavior of your <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-121">下面的代码示例创建<xref:System.Windows.Forms.MenuItem>使用此版本的构造函数。</span><span class="sxs-lookup"><span data-stu-id="f6fea-121">The following code example creates a <xref:System.Windows.Forms.MenuItem> using this version of the constructor.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="f6fea-122">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="f6fea-122">The caption for the menu item.</span></span></param>
        <summary><span data-ttu-id="f6fea-123">使用菜单项的指定标题初始化 <see cref="T:System.Windows.Forms.MenuItem" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="f6fea-123">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class with a specified caption for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-124">为菜单项具有指定标题时`text`参数，您还可以指定访问密钥通过前放置一个 & 字符的字符要用作访问键。</span><span class="sxs-lookup"><span data-stu-id="f6fea-124">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' character before the character to be used as the access key.</span></span> <span data-ttu-id="f6fea-125">例如，若要指定访问密钥"文件"中的"F"，您将指定为菜单项的标题"和文件"。</span><span class="sxs-lookup"><span data-stu-id="f6fea-125">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="f6fea-126">此功能可用于提供用于在菜单的键盘导航。</span><span class="sxs-lookup"><span data-stu-id="f6fea-126">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="f6fea-127">设置`text`到参数"`-`"导致菜单项显示为分隔符 （一条横线），而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-127">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-128">下面的代码示例创建<xref:System.Windows.Forms.MenuItem>，在构造它时指定的菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="f6fea-128">The following code example creates a <xref:System.Windows.Forms.MenuItem> that specifies the caption of the menu item at the time it is constructed.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, onClick As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, EventHandler ^ onClick);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string * EventHandler -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (text, onClick)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="f6fea-129">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="f6fea-129">The caption for the menu item.</span></span></param>
        <param name="onClick"><span data-ttu-id="f6fea-130">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Click" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-130">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span></span></param>
        <summary><span data-ttu-id="f6fea-131">用指定标题和菜单项的 <see cref="E:System.Windows.Forms.MenuItem.Click" /> 事件的事件处理程序初始化该类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="f6fea-131">Initializes a new instance of the class with a specified caption and event handler for the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event of the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-132">为菜单项具有指定标题时`text`参数，您还可以指定访问密钥通过前放置一个 & 字符用作访问键。</span><span class="sxs-lookup"><span data-stu-id="f6fea-132">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="f6fea-133">例如，若要指定访问密钥"文件"中的"F"，您将指定为菜单项的标题"和文件"。</span><span class="sxs-lookup"><span data-stu-id="f6fea-133">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="f6fea-134">此功能可用于提供用于在菜单的键盘导航。</span><span class="sxs-lookup"><span data-stu-id="f6fea-134">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="f6fea-135">设置`text`到参数"`-`"导致菜单项显示为分隔符 （一条横线），而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-135">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="f6fea-136">此外，可以使用此构造函数指定一个委托，它将处理<xref:System.Windows.Forms.MenuItem.Click>正在创建的菜单项的事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-136">In addition, you can use this constructor to specify a delegate that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item being created.</span></span> <span data-ttu-id="f6fea-137"><xref:System.EventHandler>传递给此构造函数必须将配置为调用的事件处理程序可以处理<xref:System.Windows.Forms.MenuItem.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-137">The <xref:System.EventHandler> that you pass to this constructor must be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="f6fea-138">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-138">For more information on handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-139">下面的代码示例将创建<xref:System.Windows.Forms.MenuItem>用指定标题的对象和一个<xref:System.EventHandler>委托连接到的事件处理程序将处理<xref:System.Windows.Forms.MenuItem.Click>菜单项的事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-139">The following code example creates a <xref:System.Windows.Forms.MenuItem> object with a specified caption and an <xref:System.EventHandler> delegate connected to an event handler that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, items As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string * System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (text, items)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="f6fea-140">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="f6fea-140">The caption for the menu item.</span></span></param>
        <param name="items"><span data-ttu-id="f6fea-141">包含该菜单项的子菜单项的一组 <see cref="T:System.Windows.Forms.MenuItem" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f6fea-141">An array of <see cref="T:System.Windows.Forms.MenuItem" /> objects that contains the submenu items for this menu item.</span></span></param>
        <summary><span data-ttu-id="f6fea-142">用指定标题和为菜单项定义的一组子菜单项初始化该类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="f6fea-142">Initializes a new instance of the class with a specified caption and an array of submenu items defined for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-143">为菜单项具有指定标题时`text`参数，您还可以指定访问密钥通过前放置一个 & 字符用作访问键。</span><span class="sxs-lookup"><span data-stu-id="f6fea-143">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="f6fea-144">例如，若要指定访问密钥"文件"中的"F"，您将指定为菜单项的标题"和文件"。</span><span class="sxs-lookup"><span data-stu-id="f6fea-144">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="f6fea-145">此功能可用于提供用于在菜单的键盘导航。</span><span class="sxs-lookup"><span data-stu-id="f6fea-145">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="f6fea-146">设置`text`到参数"`-`"导致菜单项显示为分隔符 （一条横线），而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-146">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="f6fea-147">`items`参数使你可以分配来定义此菜单项的子菜单的菜单项的数组。</span><span class="sxs-lookup"><span data-stu-id="f6fea-147">The `items` parameter enables you to assign an array of menu items to define a submenu of this menu item.</span></span> <span data-ttu-id="f6fea-148">数组中的每个项还可以分配给它的菜单项的数组。</span><span class="sxs-lookup"><span data-stu-id="f6fea-148">Each item in the array can also have an array of menu items assigned to it.</span></span> <span data-ttu-id="f6fea-149">这使您创建完整的菜单结构，并将其分配为菜单项的构造函数。</span><span class="sxs-lookup"><span data-stu-id="f6fea-149">This enables you to create complete menu structures and assign them to the constructor for the menu item.</span></span>  
  
 <span data-ttu-id="f6fea-150">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-150">For more information on handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-151">下面的代码示例创建一个对象用指定标题，连接到将处理的事件的方法的事件处理程序每个菜单项中的子菜单项的数组。</span><span class="sxs-lookup"><span data-stu-id="f6fea-151">The following code example creates an object with a specified caption, an event handler connected to a method that will handle the event each menu item in an array of submenu items.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, EventHandler onClick, System.Windows.Forms.Shortcut shortcut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.EventHandler onClick, valuetype System.Windows.Forms.Shortcut shortcut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, EventHandler ^ onClick, System::Windows::Forms::Shortcut shortcut);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string * EventHandler * System.Windows.Forms.Shortcut -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (text, onClick, shortcut)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
        <Parameter Name="shortcut" Type="System.Windows.Forms.Shortcut" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="f6fea-152">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="f6fea-152">The caption for the menu item.</span></span></param>
        <param name="onClick"><span data-ttu-id="f6fea-153">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Click" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-153">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span></span></param>
        <param name="shortcut"><span data-ttu-id="f6fea-154"><see cref="T:System.Windows.Forms.Shortcut" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f6fea-154">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span></param>
        <summary><span data-ttu-id="f6fea-155">用指定标题、事件处理程序和菜单项的关联快捷键初始化该类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="f6fea-155">Initializes a new instance of the class with a specified caption, event handler, and associated shortcut key for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-156">为菜单项具有指定标题时`text`参数，您还可以指定访问密钥通过前放置一个 & 字符用作访问键。</span><span class="sxs-lookup"><span data-stu-id="f6fea-156">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="f6fea-157">例如，若要指定访问密钥"文件"中的"F"，您将指定为菜单项的标题"和文件"。</span><span class="sxs-lookup"><span data-stu-id="f6fea-157">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="f6fea-158">此功能可用于提供用于在菜单的键盘导航。</span><span class="sxs-lookup"><span data-stu-id="f6fea-158">You can use this feature to provide keyboard navigation for your menus.</span></span> <span data-ttu-id="f6fea-159">此构造函数还可以指定除了访问密钥，以提供键盘导航的快捷键。</span><span class="sxs-lookup"><span data-stu-id="f6fea-159">This constructor also enables you to specify a shortcut key in addition to an access key to provide keyboard navigation.</span></span> <span data-ttu-id="f6fea-160">键盘快捷方式，可以指定可用于激活该菜单项的键的组合。</span><span class="sxs-lookup"><span data-stu-id="f6fea-160">Shortcut keys allow you to specify a combination of keys that can be used to activate the menu item.</span></span>  
  
 <span data-ttu-id="f6fea-161">设置`text`到参数"`-`"导致菜单项显示为分隔符 （一条横线），而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-161">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="f6fea-162">此外，可以使用此构造函数指定一个委托，它将处理<xref:System.Windows.Forms.MenuItem.Click>正在创建的菜单项的事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-162">In addition, you can use this constructor to specify a delegate that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item being created.</span></span> <span data-ttu-id="f6fea-163"><xref:System.EventHandler>传递给此构造函数必须将配置为调用的事件处理程序可以处理<xref:System.Windows.Forms.MenuItem.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-163">The <xref:System.EventHandler> that you pass to this constructor must be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="f6fea-164">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-164">For more information on handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-165">下面的代码示例创建一个对象具有指定的标题、 快捷方式键和事件处理程序连接到将处理菜单项的事件的方法。</span><span class="sxs-lookup"><span data-stu-id="f6fea-165">The following code example creates an object with a specified caption, shortcut key, and an event handler connected to a method that will handle the event for the menu item.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (System.Windows.Forms.MenuMerge mergeType, int mergeOrder, System.Windows.Forms.Shortcut shortcut, string text, EventHandler onClick, EventHandler onPopup, EventHandler onSelect, System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.MenuMerge mergeType, int32 mergeOrder, valuetype System.Windows.Forms.Shortcut shortcut, string text, class System.EventHandler onClick, class System.EventHandler onPopup, class System.EventHandler onSelect, class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::Windows::Forms::MenuMerge mergeType, int mergeOrder, System::Windows::Forms::Shortcut shortcut, System::String ^ text, EventHandler ^ onClick, EventHandler ^ onPopup, EventHandler ^ onSelect, cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : System.Windows.Forms.MenuMerge * int * System.Windows.Forms.Shortcut * string * EventHandler * EventHandler * EventHandler * System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (mergeType, mergeOrder, shortcut, text, onClick, onPopup, onSelect, items)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mergeType" Type="System.Windows.Forms.MenuMerge" />
        <Parameter Name="mergeOrder" Type="System.Int32" />
        <Parameter Name="shortcut" Type="System.Windows.Forms.Shortcut" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
        <Parameter Name="onPopup" Type="System.EventHandler" />
        <Parameter Name="onSelect" Type="System.EventHandler" />
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="mergeType"><span data-ttu-id="f6fea-166"><see cref="T:System.Windows.Forms.MenuMerge" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f6fea-166">One of the <see cref="T:System.Windows.Forms.MenuMerge" /> values.</span></span></param>
        <param name="mergeOrder"><span data-ttu-id="f6fea-167">此菜单项在合并菜单中将占有的相对位置。</span><span class="sxs-lookup"><span data-stu-id="f6fea-167">The relative position that this menu item will take in a merged menu.</span></span></param>
        <param name="shortcut"><span data-ttu-id="f6fea-168"><see cref="T:System.Windows.Forms.Shortcut" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f6fea-168">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span></param>
        <param name="text"><span data-ttu-id="f6fea-169">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="f6fea-169">The caption for the menu item.</span></span></param>
        <param name="onClick"><span data-ttu-id="f6fea-170">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Click" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-170">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span></span></param>
        <param name="onPopup"><span data-ttu-id="f6fea-171">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Popup" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-171">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event for this menu item.</span></span></param>
        <param name="onSelect"><span data-ttu-id="f6fea-172">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Select" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-172">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event for this menu item.</span></span></param>
        <param name="items"><span data-ttu-id="f6fea-173">包含该菜单项的子菜单项的一组 <see cref="T:System.Windows.Forms.MenuItem" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f6fea-173">An array of <see cref="T:System.Windows.Forms.MenuItem" /> objects that contains the submenu items for this menu item.</span></span></param>
        <summary><span data-ttu-id="f6fea-174">用指定标题、为（<see cref="T:System.Windows.Forms.MenuItem" />、<see cref="E:System.Windows.Forms.MenuItem.Click" /> 和 <see cref="E:System.Windows.Forms.MenuItem.Select" />）事件定义的事件处理程序、快捷键、合并类型和为菜单项指定的顺序来初始化 <see cref="E:System.Windows.Forms.MenuItem.Popup" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="f6fea-174">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class with a specified caption; defined event-handlers for the <see cref="E:System.Windows.Forms.MenuItem.Click" />, <see cref="E:System.Windows.Forms.MenuItem.Select" /> and <see cref="E:System.Windows.Forms.MenuItem.Popup" /> events; a shortcut key; a merge type; and order specified for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-175">为菜单项具有指定标题时`text`参数，您还可以指定访问密钥通过前放置一个 & 字符用作访问键。</span><span class="sxs-lookup"><span data-stu-id="f6fea-175">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="f6fea-176">例如，若要指定访问密钥"文件"中的"F"，您将指定为菜单项的标题"和文件"。</span><span class="sxs-lookup"><span data-stu-id="f6fea-176">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="f6fea-177">此功能可用于提供用于在菜单的键盘导航。</span><span class="sxs-lookup"><span data-stu-id="f6fea-177">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="f6fea-178">设置`text`到参数"`-`"导致菜单项显示为分隔符 （一条横线），而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-178">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="f6fea-179">`items`参数使你可以分配来定义此菜单项的子菜单的菜单项的数组。</span><span class="sxs-lookup"><span data-stu-id="f6fea-179">The `items` parameter enables you to assign an array of menu items to define a submenu of this menu item.</span></span> <span data-ttu-id="f6fea-180">数组中的每个项还可以分配给它的菜单项的数组。</span><span class="sxs-lookup"><span data-stu-id="f6fea-180">Each item in the array can also have an array of menu items assigned to it.</span></span> <span data-ttu-id="f6fea-181">这使您创建完整的菜单结构，并将其分配为菜单项的构造函数。</span><span class="sxs-lookup"><span data-stu-id="f6fea-181">This enables you to create complete menu structures and assign them to the constructor for the menu item.</span></span>  
  
 <span data-ttu-id="f6fea-182">`mergeType`和`mergeOrder`参数可用于确定此菜单项与另一个菜单合并的菜单项时的行为。</span><span class="sxs-lookup"><span data-stu-id="f6fea-182">The `mergeType` and `mergeOrder` parameters allow you to determine how this menu item will behave when the menu item is merged with another menu.</span></span> <span data-ttu-id="f6fea-183">为指定具体取决于值`mergeType`参数，您可以添加、 删除、 替换，或合并的菜单项和与使用合并的菜单及其子菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-183">Depending on the value you specify for the `mergeType` parameter, you can either add, remove, replace, or merge the menu item and its submenu items with the menu that it is merging with.</span></span> <span data-ttu-id="f6fea-184">`mergeOrder`参数用于确定正在创建的菜单项在菜单合并时的放置位置。</span><span class="sxs-lookup"><span data-stu-id="f6fea-184">The `mergeOrder` parameter determines where the menu item being created will be positioned when the menu is merged.</span></span>  
  
 <span data-ttu-id="f6fea-185">此外，您可以使用此构造函数创建<xref:System.Windows.Forms.MenuItem>，并将其连接到在代码中的将处理菜单项的单击事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6fea-185">In addition, you can use this constructor to create a <xref:System.Windows.Forms.MenuItem> and have it connected to an event handler in your code that will process the click of the menu item.</span></span> <span data-ttu-id="f6fea-186"><xref:System.EventHandler>将传入此构造函数应配置为调用的事件处理程序可以处理<xref:System.Windows.Forms.MenuItem.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-186">The <xref:System.EventHandler> that you pass into this constructor should be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="f6fea-187">通过使用此构造函数版本，还可以连接<xref:System.Windows.Forms.MenuItem.Popup>和<xref:System.Windows.Forms.MenuItem.Select>事件，以确定何时选择此菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-187">By using this constructor version, you can also connect the <xref:System.Windows.Forms.MenuItem.Popup> and <xref:System.Windows.Forms.MenuItem.Select> events to determine when this menu item is selected.</span></span> <span data-ttu-id="f6fea-188">这些事件可用于任务，例如确定显示子菜单项旁边的复选标记或以启用或禁用基于应用程序状态的菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-188">You can use these events for tasks such as determining whether or not to display a check mark next to submenu items or to enable or disable menu items based on the state of the application.</span></span> <span data-ttu-id="f6fea-189"><xref:System.Windows.Forms.MenuItem.Select>并<xref:System.Windows.Forms.MenuItem.Click>将仅对引发事件<xref:System.Windows.Forms.MenuItem>对象不是父菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-189">The <xref:System.Windows.Forms.MenuItem.Select> and <xref:System.Windows.Forms.MenuItem.Click> events are raised only for <xref:System.Windows.Forms.MenuItem> objects that are not parent menu items.</span></span> <span data-ttu-id="f6fea-190">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-190">For more information on handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-191">下面的代码示例创建具有标题和快捷方式的菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-191">The following code example creates a menu item that has a caption and shortcut key.</span></span> <span data-ttu-id="f6fea-192">菜单项还具有为定义的事件处理程序<xref:System.Windows.Forms.MenuItem.Popup>， <xref:System.Windows.Forms.MenuItem.Click>，和<xref:System.Windows.Forms.MenuItem.Select>事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-192">The menu item also has event handlers defined for the <xref:System.Windows.Forms.MenuItem.Popup>, <xref:System.Windows.Forms.MenuItem.Click>, and <xref:System.Windows.Forms.MenuItem.Select> events.</span></span> <span data-ttu-id="f6fea-193">如果此菜单项合并，它将具有零的合并顺序菜单添加菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-193">If this menu item is merged, it will add the menu item to the menu with the merge order of zero.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MenuItem.Popup" />
        <altmember cref="E:System.Windows.Forms.MenuItem.Select" />
        <altmember cref="E:System.Windows.Forms.MenuItem.Click" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeType" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeOrder" />
      </Docs>
    </Member>
    <Member MemberName="BarBreak">
      <MemberSignature Language="C#" Value="public bool BarBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BarBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.BarBreak" />
      <MemberSignature Language="VB.NET" Value="Public Property BarBreak As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BarBreak { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BarBreak : bool with get, set" Usage="System.Windows.Forms.MenuItem.BarBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-194">获取或设置一个值，通过该值指示是将 <see cref="T:System.Windows.Forms.MenuItem" /> 放在新行上（对于添加到 <see cref="T:System.Windows.Forms.MainMenu" /> 对象的菜单项），还是放在新列中（对于 <see cref="T:System.Windows.Forms.ContextMenu" /> 中显示的子菜单项或菜单项）。</span><span class="sxs-lookup"><span data-stu-id="f6fea-194">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.MenuItem" /> is placed on a new line (for a menu item added to a <see cref="T:System.Windows.Forms.MainMenu" /> object) or in a new column (for a submenu item or menu item displayed in a <see cref="T:System.Windows.Forms.ContextMenu" />).</span></span></summary>
        <value><span data-ttu-id="f6fea-195">如果菜单项放在新行上或新列中，则为 <see langword="true" />；如果菜单项保持在其默认位置，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-195"><see langword="true" /> if the menu item is placed on a new line or in a new column; <see langword="false" /> if the menu item is left in its default placement.</span></span> <span data-ttu-id="f6fea-196">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-196">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-197">可以使用<xref:System.Windows.Forms.MenuItem.BarBreak%2A>属性创建一个菜单，每个菜单项旁边彼此而不是水平放置垂直列表中。</span><span class="sxs-lookup"><span data-stu-id="f6fea-197">You can use the <xref:System.Windows.Forms.MenuItem.BarBreak%2A> property to create a menu where each menu item is placed next to each other horizontally instead of in a vertical list.</span></span> <span data-ttu-id="f6fea-198">此属性还可用于创建菜单栏包含多个行的顶级菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-198">You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</span></span>  
  
 <span data-ttu-id="f6fea-199">此属性不同于<xref:System.Windows.Forms.MenuItem.Break%2A>属性中每个菜单项的左边缘上会显示一个条形，具有<xref:System.Windows.Forms.MenuItem.Break%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-199">This property differs from the <xref:System.Windows.Forms.MenuItem.Break%2A> property in that a bar is displayed on the left edge of each menu item that has the <xref:System.Windows.Forms.MenuItem.Break%2A> property set to `true`.</span></span> <span data-ttu-id="f6fea-200">当菜单项不是顶级菜单项时，仅显示在栏。</span><span class="sxs-lookup"><span data-stu-id="f6fea-200">The bar is only displayed when the menu item is not a top-level menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-201">下面的代码示例创建<xref:System.Windows.Forms.MenuItem>具有两个子菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-201">The following code example creates a <xref:System.Windows.Forms.MenuItem> with two submenu items.</span></span> <span data-ttu-id="f6fea-202">这两个子菜单项水平显示而不是使用垂直<xref:System.Windows.Forms.MenuItem.BarBreak%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f6fea-202">The two submenu items are displayed horizontally instead of vertically using the <xref:System.Windows.Forms.MenuItem.BarBreak%2A> property.</span></span>  
  
 [!code-cpp[Classic MenuItem.BarBreak Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.BarBreak Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.BarBreak Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Break" />
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public bool Break { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Break" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Break" />
      <MemberSignature Language="VB.NET" Value="Public Property Break As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Break { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Break : bool with get, set" Usage="System.Windows.Forms.MenuItem.Break" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-203">获取或设置一个值，通过该值指示是将该项放在新行上（对于添加到 <see cref="T:System.Windows.Forms.MainMenu" /> 对象的菜单项），还是放在新列中（对于 <see cref="T:System.Windows.Forms.ContextMenu" /> 中显示的菜单项或子菜单项）。</span><span class="sxs-lookup"><span data-stu-id="f6fea-203">Gets or sets a value indicating whether the item is placed on a new line (for a menu item added to a <see cref="T:System.Windows.Forms.MainMenu" /> object) or in a new column (for a menu item or submenu item displayed in a <see cref="T:System.Windows.Forms.ContextMenu" />).</span></span></summary>
        <value><span data-ttu-id="f6fea-204">如果菜单项放在新行上或新列中，则为 <see langword="true" />；如果菜单项保持在其默认位置，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-204"><see langword="true" /> if the menu item is placed on a new line or in a new column; <see langword="false" /> if the menu item is left in its default placement.</span></span> <span data-ttu-id="f6fea-205">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-205">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-206">可以使用<xref:System.Windows.Forms.MenuItem.Break%2A>属性创建一个菜单，每个菜单彼此而不是水平放置垂直列表中。</span><span class="sxs-lookup"><span data-stu-id="f6fea-206">You can use the <xref:System.Windows.Forms.MenuItem.Break%2A> property to create a menu where each menu is placed next to each other horizontally instead of in a vertical list.</span></span> <span data-ttu-id="f6fea-207">此属性还可用于创建菜单栏包含多个行的顶级菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-207">You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-208">下面的代码示例使用两个顶级菜单项在最上面一行和一个菜单项，最后一行上创建一个菜单。</span><span class="sxs-lookup"><span data-stu-id="f6fea-208">The following code example creates a menu with two top-level menu items on the top row and one menu item on the bottom row.</span></span>  
  
 [!code-cpp[Classic MenuItem.Break Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Break Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Break Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Break Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Break Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Break Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.BarBreak" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Windows.Forms.MenuItem.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-209">获取或设置一个值，通过该值指示选中标记是否出现在菜单项文本的旁边。</span><span class="sxs-lookup"><span data-stu-id="f6fea-209">Gets or sets a value indicating whether a check mark appears next to the text of the menu item.</span></span></summary>
        <value><span data-ttu-id="f6fea-210">如果菜单项旁边有一个选中标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-210"><see langword="true" /> if there is a check mark next to the menu item; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f6fea-211">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-211">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-212">可以使用<xref:System.Windows.Forms.MenuItem.Checked%2A>组合中具有要提供应用程序状态中的菜单中的其他菜单项的属性。</span><span class="sxs-lookup"><span data-stu-id="f6fea-212">You can use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property in combination with other menu items in a menu to provide state for an application.</span></span> <span data-ttu-id="f6fea-213">例如，可以将复选标记放置在一组项以标识要显示的应用程序中的文本的字体大小的菜单项上。</span><span class="sxs-lookup"><span data-stu-id="f6fea-213">For example, you can place a check mark on a menu item in a group of items to identify the size of the font to be displayed for the text in an application.</span></span> <span data-ttu-id="f6fea-214">此外可以使用<xref:System.Windows.Forms.MenuItem.Checked%2A>属性标识一组互相排斥的菜单项中的选定的菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-214">You can also use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to identify the selected menu item in a group of mutually exclusive menu items.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6fea-215">无法将此属性设置为`true`对于顶级菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-215">This property cannot be set to `true` for top-level menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-216">下面的代码示例使用<xref:System.Windows.Forms.MenuItem.Checked%2A>属性以提供应用程序中的状态。</span><span class="sxs-lookup"><span data-stu-id="f6fea-216">The following code example uses the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to provide the state in an application.</span></span> <span data-ttu-id="f6fea-217">在此示例中，用一组菜单项来指定中的文本的颜色<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-217">In this example, a group of menu items are used to specify the color for the text in a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="f6fea-218">使用提供的事件处理程序<xref:System.Windows.Forms.MenuItem.Click>的三个菜单项的事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-218">The event handler provided is used by the <xref:System.Windows.Forms.MenuItem.Click> event of three menu items.</span></span> <span data-ttu-id="f6fea-219">每个菜单项指定的文本颜色`menuItemRed`（红色）， `menuItemGreen` （绿色），或`menuItemBlue`（蓝色）。</span><span class="sxs-lookup"><span data-stu-id="f6fea-219">Each menu item specifies a text color, `menuItemRed` (Red), `menuItemGreen` (Green), or `menuItemBlue` (Blue).</span></span> <span data-ttu-id="f6fea-220">事件处理程序确定被单击的菜单项，将放置到所选的菜单项，一个复选标记并更改窗体的文本颜色<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-220">The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="f6fea-221">该示例需要<xref:System.Drawing>命名空间添加到此代码放置在窗体。</span><span class="sxs-lookup"><span data-stu-id="f6fea-221">The example requires that the <xref:System.Drawing> namespace has been added to the form that this code is placed in.</span></span> <span data-ttu-id="f6fea-222">该示例还需要<xref:System.Windows.Forms.TextBox>已添加到窗体，此示例代码位于名为`textBox1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-222">The example also requires that a <xref:System.Windows.Forms.TextBox> has been added to the form that this example code is located in that is named `textBox1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Checked Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Checked Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Checked Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Checked Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Checked Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Checked Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f6fea-223"><see cref="T:System.Windows.Forms.MenuItem" /> 是顶级菜单，或有子级。</span><span class="sxs-lookup"><span data-stu-id="f6fea-223">The <see cref="T:System.Windows.Forms.MenuItem" /> is a top-level menu or has children.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-224">当单击菜单项或使用为该菜单项定义的快捷键或访问键选择菜单项时发生。</span><span class="sxs-lookup"><span data-stu-id="f6fea-224">Occurs when the menu item is clicked or selected using a shortcut key or access key defined for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-225"><xref:System.Windows.Forms.MenuItem.Click>事件发生时这<xref:System.Windows.Forms.MenuItem>用户单击。</span><span class="sxs-lookup"><span data-stu-id="f6fea-225">The <xref:System.Windows.Forms.MenuItem.Click> event occurs when this <xref:System.Windows.Forms.MenuItem> is clicked by the user.</span></span> <span data-ttu-id="f6fea-226">此事件还会发生，如果用户选择菜单项使用键盘，按 Enter 键。</span><span class="sxs-lookup"><span data-stu-id="f6fea-226">This event also occurs if the user selects the menu item using the keyboard and presses the Enter key.</span></span> <span data-ttu-id="f6fea-227">它也可能按快捷键关联<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-227">It can also occur if an access key or shortcut key is pressed that is associated with the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="f6fea-228">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-228">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6fea-229">如果<xref:System.Windows.Forms.Menu.MenuItems%2A>属性<xref:System.Windows.Forms.MenuItem>包含任何项，不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-229">If the <xref:System.Windows.Forms.Menu.MenuItems%2A> property for the <xref:System.Windows.Forms.MenuItem> contains any items, this event is not raised.</span></span> <span data-ttu-id="f6fea-230">对于父菜单项不引发此事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-230">This event is not raised for parent menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-231">下面的代码示例演示如何使用<xref:System.Windows.Forms.MenuItem.Click>事件，以便执行任务时<xref:System.Windows.Forms.MenuItem>单击。</span><span class="sxs-lookup"><span data-stu-id="f6fea-231">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Click> event to perform tasks when a <xref:System.Windows.Forms.MenuItem> is clicked.</span></span> <span data-ttu-id="f6fea-232">此示例将创建<xref:System.Windows.Forms.MainMenu>称为`mainMenu1`并添加两个<xref:System.Windows.Forms.MenuItem>对象， `topMenuItem` (`File`) 和`menuItem1`(`Open`)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-232">The example creates a <xref:System.Windows.Forms.MainMenu> called `mainMenu1` and adds two <xref:System.Windows.Forms.MenuItem> objects, `topMenuItem` (`File`) and `menuItem1` (`Open`).</span></span> <span data-ttu-id="f6fea-233">然后它会连接`Click`事件`menuItem1_Click`事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6fea-233">It then connects the `Click` event to the `menuItem1_Click` event handler.</span></span> <span data-ttu-id="f6fea-234">当用户单击`Open`菜单项<xref:System.Windows.Forms.OpenFileDialog>初始化，并且会显示。</span><span class="sxs-lookup"><span data-stu-id="f6fea-234">When the user clicks the `Open` menu item, an <xref:System.Windows.Forms.OpenFileDialog> is initialized and displayed.</span></span> <span data-ttu-id="f6fea-235">该示例需要您已创建<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-235">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[MenuItemClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItemClick/CPP/form1.cpp#1)]
 [!code-csharp[MenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItemClick/CS/form1.cs#1)]
 [!code-vb[MenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItemClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloneMenu">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6fea-236">创建 <see cref="T:System.Windows.Forms.MenuItem" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="f6fea-236">Creates a copy of a <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloneMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem CloneMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem CloneMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.CloneMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloneMenu () As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ CloneMenu();" />
      <MemberSignature Language="F#" Value="override this.CloneMenu : unit -&gt; System.Windows.Forms.MenuItem" Usage="menuItem.CloneMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6fea-237">创建当前 <see cref="T:System.Windows.Forms.MenuItem" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="f6fea-237">Creates a copy of the current <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <returns><span data-ttu-id="f6fea-238">表示重复菜单项的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-238">A <see cref="T:System.Windows.Forms.MenuItem" /> that represents the duplicated menu item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-239"><xref:System.Windows.Forms.MenuItem> 对象不能使用在多个位置中，除非你获取一份<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-239"><xref:System.Windows.Forms.MenuItem> objects cannot be used in more than one place unless you obtain a copy of the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="f6fea-240">可以调用此方法以创建在中使用此菜单项的副本<xref:System.Windows.Forms.ContextMenu>， <xref:System.Windows.Forms.MainMenu>，或其他<xref:System.Windows.Forms.MenuItem>应用程序中。</span><span class="sxs-lookup"><span data-stu-id="f6fea-240">You can call this method to create a copy of this menu item for use in a <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, or other <xref:System.Windows.Forms.MenuItem> within your application.</span></span> <span data-ttu-id="f6fea-241">当克隆的菜单项时，原始的菜单项中指定任何事件处理程序将继续在菜单项的克隆版本中正常工作。</span><span class="sxs-lookup"><span data-stu-id="f6fea-241">When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item.</span></span> <span data-ttu-id="f6fea-242">例如，如果您创建<xref:System.Windows.Forms.MenuItem>并已连接其<xref:System.Windows.Forms.MenuItem.Click>到事件处理程序的事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-242">For example, if you created a <xref:System.Windows.Forms.MenuItem> and connected its <xref:System.Windows.Forms.MenuItem.Click> event to an event handler.</span></span> <span data-ttu-id="f6fea-243">当克隆菜单项时，克隆的菜单项将调用相同的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6fea-243">When the menu item is cloned, the cloned menu item will call the same event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-244">下面的代码示例克隆<xref:System.Windows.Forms.MenuItem>并将其显示<xref:System.Windows.Forms.ContextMenu>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-244">The following code example clones a <xref:System.Windows.Forms.MenuItem> and displays it in a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="f6fea-245">该示例需要<xref:System.Windows.Forms.MenuItem>中存在<xref:System.Windows.Forms.MainMenu>上具有的名称的窗体`menuItem1`并且<xref:System.Windows.Forms.ContextMenu>对象名为`contextMenu1`也存在于窗体上。</span><span class="sxs-lookup"><span data-stu-id="f6fea-245">The example requires that a <xref:System.Windows.Forms.MenuItem> exists in a <xref:System.Windows.Forms.MainMenu> on a form with the name of `menuItem1` and that a <xref:System.Windows.Forms.ContextMenu> object named `contextMenu1` also exists on the form.</span></span>  
  
 [!code-cpp[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneMenu">
      <MemberSignature Language="C#" Value="protected void CloneMenu (System.Windows.Forms.MenuItem itemSrc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CloneMenu(class System.Windows.Forms.MenuItem itemSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CloneMenu (itemSrc As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CloneMenu(System::Windows::Forms::MenuItem ^ itemSrc);" />
      <MemberSignature Language="F#" Value="override this.CloneMenu : System.Windows.Forms.MenuItem -&gt; unit" Usage="menuItem.CloneMenu itemSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemSrc" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="itemSrc"><span data-ttu-id="f6fea-246">表示要复制的菜单项的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-246">The <see cref="T:System.Windows.Forms.MenuItem" /> that represents the menu item to copy.</span></span></param>
        <summary><span data-ttu-id="f6fea-247">创建指定 <see cref="T:System.Windows.Forms.MenuItem" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="f6fea-247">Creates a copy of the specified <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-248">调用此方法来创建已创建的快捷菜单或另一个菜单结构中使用应用程序中的菜单项的副本。</span><span class="sxs-lookup"><span data-stu-id="f6fea-248">Call this method to create copies of menu items that you have already created for use in a shortcut menu or another menu structure within your application.</span></span> <span data-ttu-id="f6fea-249">此版本的<xref:System.Windows.Forms.MenuItem.CloneMenu%2A>可以指定特定<xref:System.Windows.Forms.MenuItem>复制而不是调用方法的菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-249">This version of <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> allows you to specify a specific <xref:System.Windows.Forms.MenuItem> to copy instead of the menu item that is calling the method.</span></span> <span data-ttu-id="f6fea-250">可以使用此方法以初始化新<xref:System.Windows.Forms.MenuItem>对象的另一个副本<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-250">You can use this method to initialize a new <xref:System.Windows.Forms.MenuItem> object with a copy of another <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="f6fea-251">当克隆的菜单项时，原始的菜单项中指定任何事件处理程序将继续在菜单项的克隆版本中正常工作。</span><span class="sxs-lookup"><span data-stu-id="f6fea-251">When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item.</span></span> <span data-ttu-id="f6fea-252">例如，如果您创建<xref:System.Windows.Forms.MenuItem>并已连接其<xref:System.Windows.Forms.MenuItem.Click>到事件处理程序的事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-252">For example, if you created a <xref:System.Windows.Forms.MenuItem> and connected its <xref:System.Windows.Forms.MenuItem.Click> event to an event handler.</span></span> <span data-ttu-id="f6fea-253">当克隆菜单项时，克隆的菜单项将调用相同的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6fea-253">When the menu item is cloned, the cloned menu item will call the same event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-254">下面的代码示例初始化新<xref:System.Windows.Forms.MenuItem>副本的现有<xref:System.Windows.Forms.MenuItem>中使用的<xref:System.Windows.Forms.MainMenu>窗体上。</span><span class="sxs-lookup"><span data-stu-id="f6fea-254">The following code example initializes a new <xref:System.Windows.Forms.MenuItem> with a copy of an existing <xref:System.Windows.Forms.MenuItem> that is used in a <xref:System.Windows.Forms.MainMenu> on a form.</span></span> <span data-ttu-id="f6fea-255">然后代码将添加克隆<xref:System.Windows.Forms.MenuItem>到<xref:System.Windows.Forms.ContextMenu>窗体上。</span><span class="sxs-lookup"><span data-stu-id="f6fea-255">The code then adds the cloned <xref:System.Windows.Forms.MenuItem> to a <xref:System.Windows.Forms.ContextMenu> on the form.</span></span> <span data-ttu-id="f6fea-256">此示例需要<xref:System.Windows.Forms.MenuItem>已创建并命名为`menuItem1`并且<xref:System.Windows.Forms.ContextMenu>创建控件并将其命名为`contextMenu1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-256">This example requires that a <xref:System.Windows.Forms.MenuItem> is already created and named `menuItem1` and that a <xref:System.Windows.Forms.ContextMenu> control has been created and named `contextMenu1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultItem">
      <MemberSignature Language="C#" Value="public bool DefaultItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.DefaultItem" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DefaultItem { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultItem : bool with get, set" Usage="System.Windows.Forms.MenuItem.DefaultItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-257">获取或设置一个值，通过该值指示菜单项是否为默认菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-257">Gets or sets a value indicating whether the menu item is the default menu item.</span></span></summary>
        <value><span data-ttu-id="f6fea-258">如果菜单项是菜单中的默认菜单项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-258"><see langword="true" /> if the menu item is the default item in a menu; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f6fea-259">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-259">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-260">含有一个菜单的默认菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-260">The default menu item for a menu is boldfaced.</span></span> <span data-ttu-id="f6fea-261">当用户双击子菜单，其中包含默认项、 默认项被选定，和子菜单已关闭。</span><span class="sxs-lookup"><span data-stu-id="f6fea-261">When the user double-clicks a submenu that contains a default item, the default item is selected, and the submenu is closed.</span></span> <span data-ttu-id="f6fea-262">可以使用<xref:System.Windows.Forms.MenuItem.DefaultItem%2A>属性以指示应在菜单或快捷菜单中的默认操作。</span><span class="sxs-lookup"><span data-stu-id="f6fea-262">You can use the <xref:System.Windows.Forms.MenuItem.DefaultItem%2A> property to indicate, the default action that is expected in a menu or shortcut menu.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-263">下面的代码示例创建两个子菜单项与菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-263">The following code example creates a menu item with two submenu items.</span></span> <span data-ttu-id="f6fea-264">该示例设置`menuItem2`作为默认菜单项使用<xref:System.Windows.Forms.MenuItem.DefaultItem%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f6fea-264">The example sets `menuItem2` as the default menu item using the <xref:System.Windows.Forms.MenuItem.DefaultItem%2A> property.</span></span>  
  
 [!code-cpp[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="menuItem.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="f6fea-265"><see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="f6fea-265"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="f6fea-266">处置由 <see cref="T:System.Windows.Forms.MenuItem" /> 占用的资源（内存除外）。</span><span class="sxs-lookup"><span data-stu-id="f6fea-266">Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-267">在完成使用 <xref:System.Windows.Forms.MenuItem.Dispose%2A> 后，应调用 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-267">Call <xref:System.Windows.Forms.MenuItem.Dispose%2A> when you are finished using the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="f6fea-268"><xref:System.Windows.Forms.MenuItem.Dispose%2A> 方法使 <xref:System.Windows.Forms.MenuItem> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="f6fea-268">The <xref:System.Windows.Forms.MenuItem.Dispose%2A> method leaves the <xref:System.Windows.Forms.MenuItem> in an unusable state.</span></span> <span data-ttu-id="f6fea-269">在调用<xref:System.Windows.Forms.MenuItem.Dispose%2A>，必须释放对所有引用<xref:System.Windows.Forms.MenuItem>以便可以通过垃圾回收回收其占用的内存。</span><span class="sxs-lookup"><span data-stu-id="f6fea-269">After calling <xref:System.Windows.Forms.MenuItem.Dispose%2A>, you must release all references to the <xref:System.Windows.Forms.MenuItem> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6fea-270">每次释放对 <xref:System.Windows.Forms.MenuItem.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-270">Always call <xref:System.Windows.Forms.MenuItem.Dispose%2A> before you release your last reference to the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="f6fea-271">否则为资源<xref:System.Windows.Forms.MenuItem>是使用之前，不会释放垃圾回收调用<xref:System.Windows.Forms.MenuItem>对象的析构函数。</span><span class="sxs-lookup"><span data-stu-id="f6fea-271">Otherwise, the resources the <xref:System.Windows.Forms.MenuItem> is using will not be freed until garbage collection calls the <xref:System.Windows.Forms.MenuItem> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawItemEventHandler ^ DrawItem;" />
      <MemberSignature Language="F#" Value="member this.DrawItem : System.Windows.Forms.DrawItemEventHandler " Usage="member this.DrawItem : System.Windows.Forms.DrawItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-272">当菜单项的 <see cref="P:System.Windows.Forms.MenuItem.OwnerDraw" /> 属性设置为 <see langword="true" /> 并且发出绘制菜单项的请求时发生。</span><span class="sxs-lookup"><span data-stu-id="f6fea-272">Occurs when the <see cref="P:System.Windows.Forms.MenuItem.OwnerDraw" /> property of a menu item is set to <see langword="true" /> and a request is made to draw the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-273"><xref:System.Windows.Forms.DrawItemEventArgs>自变量传递给<xref:System.Windows.Forms.MenuItem.DrawItem>事件处理程序提供了<xref:System.Drawing.Graphics>使您可以执行绘制和图面上的菜单项的其他图形操作的对象。</span><span class="sxs-lookup"><span data-stu-id="f6fea-273">The <xref:System.Windows.Forms.DrawItemEventArgs> argument passed to a <xref:System.Windows.Forms.MenuItem.DrawItem> event handler provides a <xref:System.Drawing.Graphics> object that enables you to perform drawing and other graphical operations on the surface of the menu item.</span></span> <span data-ttu-id="f6fea-274">此事件处理程序可用于创建满足你的应用程序的需求的自定义菜单。</span><span class="sxs-lookup"><span data-stu-id="f6fea-274">You can use this event handler to create custom menus that meet the needs of your application.</span></span> <span data-ttu-id="f6fea-275">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-275">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-276">下面的代码示例演示如何处理<xref:System.Windows.Forms.MenuItem.DrawItem>事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-276">The following code example demonstrates how to handle the <xref:System.Windows.Forms.MenuItem.DrawItem> event.</span></span> <span data-ttu-id="f6fea-277">此示例绘制一个菜单项使用<xref:System.Drawing.Brush>和一个<xref:System.Drawing.Font>，，然后绘制<xref:System.Drawing.Rectangle>菜单项的周围。</span><span class="sxs-lookup"><span data-stu-id="f6fea-277">This example draws a menu item using a <xref:System.Drawing.Brush> and a <xref:System.Drawing.Font>, and then draws a <xref:System.Drawing.Rectangle> around the menu item.</span></span> <span data-ttu-id="f6fea-278">通过执行绘图<xref:System.Drawing.Graphics>对象传递给事件处理程序中<xref:System.Windows.Forms.DrawItemEventArgs>参数。</span><span class="sxs-lookup"><span data-stu-id="f6fea-278">The drawing is performed through the <xref:System.Drawing.Graphics> object, which is passed to the event handler in the <xref:System.Windows.Forms.DrawItemEventArgs> parameter.</span></span> <span data-ttu-id="f6fea-279">此示例要求您已初始化<xref:System.Windows.Forms.MenuItem.OwnerDraw%2A>到项的属性， `true`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-279">This example requires that you have initialized the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property for the item to `true`.</span></span> <span data-ttu-id="f6fea-280">对于 C# 示例中，将窗体的构造函数中的以下代码添加后`InitializeComponent`，以便挂钩事件：</span><span class="sxs-lookup"><span data-stu-id="f6fea-280">For the C# example, add the following code in the form's constructor, after `InitializeComponent`, to hook up the event:</span></span>  
  
 `this.menuItem1.DrawItem += new DrawItemEventHandler(menuItem1_DrawItem);`  
  
 [!code-cpp[OwnerDraw example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/OwnerDraw example/CPP/form1.cpp#1)]
 [!code-csharp[OwnerDraw example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/OwnerDraw example/CS/form1.cs#1)]
 [!code-vb[OwnerDraw example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/OwnerDraw example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.MenuItem.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.MenuItem.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-281">获取或设置一个值，通过该值指示菜单项是否启用。</span><span class="sxs-lookup"><span data-stu-id="f6fea-281">Gets or sets a value indicating whether the menu item is enabled.</span></span></summary>
        <value><span data-ttu-id="f6fea-282">如果启用菜单项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-282"><see langword="true" /> if the menu item is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f6fea-283">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-283">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-284">一个<xref:System.Windows.Forms.MenuItem>，它是以灰色，以指示其状态显示已禁用。</span><span class="sxs-lookup"><span data-stu-id="f6fea-284">A <xref:System.Windows.Forms.MenuItem> that is disabled is displayed in a gray color to indicate its state.</span></span> <span data-ttu-id="f6fea-285">当父菜单项被禁用时，不显示所有子菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-285">When a parent menu item is disabled, all submenu items are not displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-286">下面的代码示例演示如何使用<xref:System.Windows.Forms.MenuItem.Popup>事件以确定是否<xref:System.Windows.Forms.MenuItem>中所显示的菜单显示之前启用支持剪切、 复制和删除操作的对象。</span><span class="sxs-lookup"><span data-stu-id="f6fea-286">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="f6fea-287">该示例确定是否`textBox1`、 一个<xref:System.Windows.Forms.TextBox>控制窗体上，启用了、 具有输入焦点，并且具有在启用之前所选文本<xref:System.Windows.Forms.MenuItem>对象。</span><span class="sxs-lookup"><span data-stu-id="f6fea-287">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="f6fea-288">此示例要求三个<xref:System.Windows.Forms.MenuItem>对象所创建的名为`menuCut`， `menuCopy`，和`menuDelete`已创建。</span><span class="sxs-lookup"><span data-stu-id="f6fea-288">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Index" />
      <MemberSignature Language="VB.NET" Value="Public Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Index : int with get, set" Usage="System.Windows.Forms.MenuItem.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-289">获取或设置一个值，通过该值指示菜单项在其父菜单中的位置。</span><span class="sxs-lookup"><span data-stu-id="f6fea-289">Gets or sets a value indicating the position of the menu item in its parent menu.</span></span></summary>
        <value><span data-ttu-id="f6fea-290">表示菜单项在其父菜单中位置的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="f6fea-290">The zero-based index representing the position of the menu item in its parent menu.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-291">此属性提供其父菜单的菜单项集合中的菜单项的索引的位置。</span><span class="sxs-lookup"><span data-stu-id="f6fea-291">This property provides the indexed position of a menu item in the menu item collection of its parent menu.</span></span> <span data-ttu-id="f6fea-292">可以使用此属性来重新定位其菜单内的不同位置的菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-292">You can use this property to reposition a menu item to a different location within its menu.</span></span> <span data-ttu-id="f6fea-293">创建时，还可以使用此属性<xref:System.Windows.Forms.MenuItem>能够在创建时指定其菜单结构中的位置。</span><span class="sxs-lookup"><span data-stu-id="f6fea-293">You can also use this property when creating a <xref:System.Windows.Forms.MenuItem> to specify its position in a menu structure at the time of creation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-294">下面的代码示例会将两个菜单项的菜单中的位置。</span><span class="sxs-lookup"><span data-stu-id="f6fea-294">The following code example switches the position of two menu items in a menu.</span></span> <span data-ttu-id="f6fea-295">下面的代码示例要求将两个<xref:System.Windows.Forms.MenuItem>对象所创建的名为`menuItem1`和`menuItem2`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-295">The following code example requires that two <xref:System.Windows.Forms.MenuItem> objects are created named `menuItem1` and `menuItem2`.</span></span> <span data-ttu-id="f6fea-296">`menuItem1`菜单项将下移一个位置的菜单中，而`menuItem2`将上移一个位置。</span><span class="sxs-lookup"><span data-stu-id="f6fea-296">The `menuItem1` menu item moves down one position in the menu, while `menuItem2` moves up one position.</span></span>  
  
 [!code-cpp[Classic MenuItem.Index Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Index Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Index Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Index Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Index Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Index Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f6fea-297">赋值小于零或大于项的数目。</span><span class="sxs-lookup"><span data-stu-id="f6fea-297">The assigned value is less than zero or greater than the item count.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsParent">
      <MemberSignature Language="C#" Value="public override bool IsParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.IsParent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsParent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsParent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsParent : bool" Usage="System.Windows.Forms.MenuItem.IsParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-298">获取一个值，通过该值指示菜单项是否包含子菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-298">Gets a value indicating whether the menu item contains child menu items.</span></span></summary>
        <value><span data-ttu-id="f6fea-299">如果菜单项包含子菜单项，则为 <see langword="true" />；如果菜单为独立菜单项，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-299"><see langword="true" /> if the menu item contains child menu items; <see langword="false" /> if the menu is a standalone menu item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-300">可以使用此属性与<xref:System.Windows.Forms.MenuItem.Parent%2A>属性以在代码中通过整个菜单结构中导航。</span><span class="sxs-lookup"><span data-stu-id="f6fea-300">You can use this property with the <xref:System.Windows.Forms.MenuItem.Parent%2A> property to navigate in code through an entire menu structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-301">下面的代码示例确定是否有任何子菜单与相关联<xref:System.Windows.Forms.MenuItem>名为`menuItem1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-301">The following code example determines whether there are any submenus associated with a <xref:System.Windows.Forms.MenuItem> named `menuItem1`.</span></span> <span data-ttu-id="f6fea-302">如果存在任何子菜单，它会禁用它们通过设置<xref:System.Windows.Forms.MenuItem.Enabled%2A>属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-302">If any submenus exist, it disables them by setting the <xref:System.Windows.Forms.MenuItem.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="f6fea-303">该示例需要有<xref:System.Windows.Forms.MenuItem>创建的名为`menuItem1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-303">The example requires that there is a <xref:System.Windows.Forms.MenuItem> created named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.IsParent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.IsParent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.IsParent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MdiList">
      <MemberSignature Language="C#" Value="public bool MdiList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MdiList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MdiList" />
      <MemberSignature Language="VB.NET" Value="Public Property MdiList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MdiList { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MdiList : bool with get, set" Usage="System.Windows.Forms.MenuItem.MdiList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-304">获取或设置一个值，通过该值指示是否使用在关联窗体内显示的多文档界面 (MDI) 子窗口列表来填充菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-304">Gets or sets a value indicating whether the menu item will be populated with a list of the Multiple Document Interface (MDI) child windows that are displayed within the associated form.</span></span></summary>
        <value><span data-ttu-id="f6fea-305">如果要在此菜单项中显示 MDI 子窗口列表，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-305"><see langword="true" /> if a list of the MDI child windows is displayed in this menu item; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f6fea-306">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-306">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-307">选择菜单项以显示 MDI 子窗口列表，列表显示为子菜单的菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-307">When a menu item is selected to display an MDI child window list, the list is displayed as a submenu of the menu item.</span></span> <span data-ttu-id="f6fea-308">仅定义为 MDI 子窗体的窗体窗口列表中显示。</span><span class="sxs-lookup"><span data-stu-id="f6fea-308">Only forms that are defined as MDI child forms are displayed in the window list.</span></span> <span data-ttu-id="f6fea-309">仅有九个子窗口可以显示一次。</span><span class="sxs-lookup"><span data-stu-id="f6fea-309">Only nine child windows can be displayed at a time.</span></span> <span data-ttu-id="f6fea-310">如果有多个九个显示的子窗口，"更多 Windows..."菜单项显示在窗口列表的末尾。</span><span class="sxs-lookup"><span data-stu-id="f6fea-310">If there are more than nine child windows displayed, a "More Windows..." menu item is displayed at the end of the window list.</span></span> <span data-ttu-id="f6fea-311">单击此菜单项显示一个带有的完整列表的子窗口的当前处于活动状态的对话框。</span><span class="sxs-lookup"><span data-stu-id="f6fea-311">Clicking this menu item displays a dialog box with a complete list of the child windows that are currently active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-312">下面的代码示例创建<xref:System.Windows.Forms.MenuItem>，用来显示当前打开的 MDI 子窗体的列表中的 MDI 窗体。</span><span class="sxs-lookup"><span data-stu-id="f6fea-312">The following code example creates a <xref:System.Windows.Forms.MenuItem> that is used to display the list of currently open MDI child forms in an MDI form.</span></span>  
  
 [!code-cpp[Classic MenuItem.MdiList Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MdiList Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MdiList Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MeasureItemEventHandler MeasureItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.MeasureItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MeasureItem As MeasureItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MeasureItemEventHandler ^ MeasureItem;" />
      <MemberSignature Language="F#" Value="member this.MeasureItem : System.Windows.Forms.MeasureItemEventHandler " Usage="member this.MeasureItem : System.Windows.Forms.MeasureItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MeasureItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-313">当菜单在绘制菜单项之前需要知道菜单项大小时发生。</span><span class="sxs-lookup"><span data-stu-id="f6fea-313">Occurs when the menu needs to know the size of a menu item before drawing it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-314">为了使引发此事件，必须具有<xref:System.Windows.Forms.MenuItem.OwnerDraw%2A>菜单项的属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-314">In order for this event to be raised, you must have the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property of the menu item set to `true`.</span></span> <span data-ttu-id="f6fea-315">绘制所有者描述的菜单的菜单项的大小允许指定要绘制前引发此事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-315">This event is raised before owner drawn menus are drawn to allow for the size of the menu item to be drawn to be specified.</span></span> <span data-ttu-id="f6fea-316">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-316">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-317">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="f6fea-317">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="f6fea-318">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.MenuItem.MeasureItem>事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-318">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.MenuItem.MeasureItem> event.</span></span> <span data-ttu-id="f6fea-319">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="f6fea-319">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="f6fea-320">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.MenuItem>名为`MenuItem1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-320">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MenuItem> named `MenuItem1`.</span></span> <span data-ttu-id="f6fea-321">然后，确保事件处理程序相关联<xref:System.Windows.Forms.MenuItem.MeasureItem>事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-321">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.MenuItem.MeasureItem> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#499](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#499)]
 [!code-vb[System.Windows.Forms.EventExamples#499](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#499)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.MenuItem.DrawItem" />
      </Docs>
    </Member>
    <Member MemberName="MenuID">
      <MemberSignature Language="C#" Value="protected int MenuID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MenuID" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MenuID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property MenuID As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int MenuID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MenuID : int" Usage="System.Windows.Forms.MenuItem.MenuID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-322">获取一个值，通过该值指示此菜单项的 Windows 标识符。</span><span class="sxs-lookup"><span data-stu-id="f6fea-322">Gets a value indicating the Windows identifier for this menu item.</span></span></summary>
        <value><span data-ttu-id="f6fea-323">此菜单项的 Windows 标识符。</span><span class="sxs-lookup"><span data-stu-id="f6fea-323">The Windows identifier for this menu item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MergeMenu">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6fea-324">将此 <see cref="T:System.Windows.Forms.MenuItem" /> 与另一个 <see cref="T:System.Windows.Forms.MenuItem" /> 合并。</span><span class="sxs-lookup"><span data-stu-id="f6fea-324">Merges this <see cref="T:System.Windows.Forms.MenuItem" /> with another <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MergeMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem MergeMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem MergeMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.MergeMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MergeMenu () As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ MergeMenu();" />
      <MemberSignature Language="F#" Value="override this.MergeMenu : unit -&gt; System.Windows.Forms.MenuItem" Usage="menuItem.MergeMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6fea-325">将此 <see cref="T:System.Windows.Forms.MenuItem" /> 与另一个 <see cref="T:System.Windows.Forms.MenuItem" /> 合并并返回合并后的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-325">Merges this <see cref="T:System.Windows.Forms.MenuItem" /> with another <see cref="T:System.Windows.Forms.MenuItem" /> and returns the resulting merged <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <returns><span data-ttu-id="f6fea-326">表示合并菜单项的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-326">A <see cref="T:System.Windows.Forms.MenuItem" /> that represents the merged menu item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-327">当调用此版本的<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>，则<xref:System.Windows.Forms.MenuItem>返回是当前菜单项可以合并使用而不会影响当前项的功能的另一个菜单项的副本。</span><span class="sxs-lookup"><span data-stu-id="f6fea-327">When you call this version of <xref:System.Windows.Forms.MenuItem.MergeMenu%2A>, the <xref:System.Windows.Forms.MenuItem> returned is a copy of the current menu item that can be merged with another menu item without affecting the functionality of the current item.</span></span> <span data-ttu-id="f6fea-328">此版本的<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>方法是类似于调用<xref:System.Windows.Forms.MenuItem.CloneMenu%2A>不包含任何参数的方法。</span><span class="sxs-lookup"><span data-stu-id="f6fea-328">This version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method is similar to calling the <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> method that contains no parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeMenu">
      <MemberSignature Language="C#" Value="public void MergeMenu (System.Windows.Forms.MenuItem itemSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeMenu(class System.Windows.Forms.MenuItem itemSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeMenu (itemSrc As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeMenu(System::Windows::Forms::MenuItem ^ itemSrc);" />
      <MemberSignature Language="F#" Value="override this.MergeMenu : System.Windows.Forms.MenuItem -&gt; unit" Usage="menuItem.MergeMenu itemSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemSrc" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="itemSrc"><span data-ttu-id="f6fea-329">指定要与该菜单项合并的菜单项的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-329">A <see cref="T:System.Windows.Forms.MenuItem" /> that specifies the menu item to merge with this one.</span></span></param>
        <summary><span data-ttu-id="f6fea-330">将另一菜单项与该菜单项合并。</span><span class="sxs-lookup"><span data-stu-id="f6fea-330">Merges another menu item with this menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-331">菜单项合并的菜单项的值根据<xref:System.Windows.Forms.MenuItem.MergeType%2A>和<xref:System.Windows.Forms.MenuItem.MergeOrder%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f6fea-331">Menu items are merged according to the value of the menu item's <xref:System.Windows.Forms.MenuItem.MergeType%2A> and <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> properties.</span></span> <span data-ttu-id="f6fea-332">此版本的<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>方法，可以合并两个<xref:System.Windows.Forms.MenuItem>为单个菜单对象 （和它们的子菜单）。</span><span class="sxs-lookup"><span data-stu-id="f6fea-332">This version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method enables you to merge two <xref:System.Windows.Forms.MenuItem> objects (and their submenus) into a single menu.</span></span> <span data-ttu-id="f6fea-333">多文档界面 (MDI) 父窗体和子级都具有菜单时，将自动处理菜单合并。</span><span class="sxs-lookup"><span data-stu-id="f6fea-333">Menu merging is handled automatically when a Multiple Document Interface (MDI) parent form and a child both have menus.</span></span> <span data-ttu-id="f6fea-334">可以使用此版本的合并两个方法<xref:System.Windows.Forms.MenuItem>对象 （和及其子菜单项） 中的位置<xref:System.Windows.Forms.MainMenu>为单个菜单中的控件<xref:System.Windows.Forms.ContextMenu>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-334">You can use this version of the method to merge two <xref:System.Windows.Forms.MenuItem> objects (and their submenu items) located in a <xref:System.Windows.Forms.MainMenu> control into a single menu within a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="f6fea-335">例如，可以调用此版本的<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>方法以将文件和编辑菜单的菜单项合并到单个<xref:System.Windows.Forms.MenuItem>，可添加到和显示<xref:System.Windows.Forms.ContextMenu>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-335">For example, you can call this version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to merge the menu items of a File and Edit menu into a single <xref:System.Windows.Forms.MenuItem> that can then be added to and displayed by a <xref:System.Windows.Forms.ContextMenu>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-336">下面的代码示例使用此版本的<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>方法来创建一份<xref:System.Windows.Forms.MenuItem>并将其合并与另一个。</span><span class="sxs-lookup"><span data-stu-id="f6fea-336">The following code example uses this version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to create a copy of a <xref:System.Windows.Forms.MenuItem> and merge it with another.</span></span> <span data-ttu-id="f6fea-337">合并<xref:System.Windows.Forms.MenuItem>随后将添加到<xref:System.Windows.Forms.ContextMenu>控件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-337">The merged <xref:System.Windows.Forms.MenuItem> is then added to a <xref:System.Windows.Forms.ContextMenu> control.</span></span> <span data-ttu-id="f6fea-338">此示例需要有两个菜单项，称为`menuItem1`并`menuItem2`包含其中的子菜单项和一个<xref:System.Windows.Forms.ContextMenu>名为`contextMenu1`来显示菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-338">This example requires that there are two menu items called `menuItem1` and `menuItem2` that contain submenu items within them and a <xref:System.Windows.Forms.ContextMenu> named `contextMenu1` to display the menu items.</span></span> <span data-ttu-id="f6fea-339">`menuItem1` 和`menuItem2`具有其中所包含的不同的菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-339">`menuItem1` and `menuItem2` have different menu items contained within them.</span></span> <span data-ttu-id="f6fea-340">在调用<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>进行时，合并创建菜单。</span><span class="sxs-lookup"><span data-stu-id="f6fea-340">After the call to <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> is made, a consolidated menu is created.</span></span>  
  
 [!code-cpp[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeOrder">
      <MemberSignature Language="C#" Value="public int MergeOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MergeOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MergeOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MergeOrder { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOrder : int with get, set" Usage="System.Windows.Forms.MenuItem.MergeOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-341">获取或设置一个值，通过该值指示菜单项与另一个项合并时的相对位置。</span><span class="sxs-lookup"><span data-stu-id="f6fea-341">Gets or sets a value indicating the relative position of the menu item when it is merged with another.</span></span></summary>
        <value><span data-ttu-id="f6fea-342">表示该菜单项的合并顺序位置的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="f6fea-342">A zero-based index representing the merge order position for this menu item.</span></span> <span data-ttu-id="f6fea-343">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="f6fea-343">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-344">菜单项的合并顺序指定如果菜单结构，将需要此菜单项的相对位置<xref:System.Windows.Forms.MenuItem>包含在合并与另一个。</span><span class="sxs-lookup"><span data-stu-id="f6fea-344">The merge order of a menu item specifies the relative position that this menu item will take if the menu structure that the <xref:System.Windows.Forms.MenuItem> is contained in is merged with another.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-345">下面的代码示例演示了如何使用<xref:System.Windows.Forms.MenuItem.MergeOrder%2A>属性来控制合并的菜单的显示的方式。</span><span class="sxs-lookup"><span data-stu-id="f6fea-345">The following code example demonstrates using the <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> property to control the way a merged menu is displayed.</span></span> <span data-ttu-id="f6fea-346">这是一个完整的示例，准备好运行后将其添加到你的项目。</span><span class="sxs-lookup"><span data-stu-id="f6fea-346">This is a complete example, ready to run once you add it to your project.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeType" />
        <altmember cref="M:System.Windows.Forms.MenuItem.MergeMenu" />
      </Docs>
    </Member>
    <Member MemberName="MergeType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuMerge MergeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MenuMerge MergeType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MergeType" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeType As MenuMerge" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MenuMerge MergeType { System::Windows::Forms::MenuMerge get(); void set(System::Windows::Forms::MenuMerge value); };" />
      <MemberSignature Language="F#" Value="member this.MergeType : System.Windows.Forms.MenuMerge with get, set" Usage="System.Windows.Forms.MenuItem.MergeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuMerge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-347">获取或设置一个值，通过该值指示该菜单项的菜单与另一个菜单合并时该菜单项的行为。</span><span class="sxs-lookup"><span data-stu-id="f6fea-347">Gets or sets a value indicating the behavior of this menu item when its menu is merged with another.</span></span></summary>
        <value><span data-ttu-id="f6fea-348">一个 <see cref="T:System.Windows.Forms.MenuMerge" /> 值，该值表示菜单项的合并类型。</span><span class="sxs-lookup"><span data-stu-id="f6fea-348">A <see cref="T:System.Windows.Forms.MenuMerge" /> value that represents the menu item's merge type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-349">菜单项的合并类型指示菜单项时它具有另一个要合并的菜单项的合并顺序相同的行为。</span><span class="sxs-lookup"><span data-stu-id="f6fea-349">The merge type of a menu item indicates how the menu item behaves when it has the same merge order as another menu item being merged.</span></span> <span data-ttu-id="f6fea-350">合并的菜单可用于创建基于两个或多个现有菜单合并的菜单。</span><span class="sxs-lookup"><span data-stu-id="f6fea-350">You can use merged menus to create a consolidated menu based on two or more existing menus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-351">下面的代码示例将创建<xref:System.Windows.Forms.MenuItem>与<xref:System.Windows.Forms.MenuItem.MergeType%2A>和<xref:System.Windows.Forms.MenuItem.MergeOrder%2A>指定菜单项添加到第一个位置处的合并菜单。</span><span class="sxs-lookup"><span data-stu-id="f6fea-351">The following code example creates a <xref:System.Windows.Forms.MenuItem> with the <xref:System.Windows.Forms.MenuItem.MergeType%2A> and <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> specified so that the menu item is added to the merged menu at first position.</span></span>  
  
 [!code-cpp[Classic MenuItem.MergeType Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MergeType Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MergeType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="f6fea-352">分配的值不是 <see cref="T:System.Windows.Forms.MenuMerge" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f6fea-352">The assigned value is not one of the <see cref="T:System.Windows.Forms.MenuMerge" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.MenuMerge" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeOrder" />
      </Docs>
    </Member>
    <Member MemberName="Mnemonic">
      <MemberSignature Language="C#" Value="public char Mnemonic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Mnemonic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Mnemonic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mnemonic As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char Mnemonic { char get(); };" />
      <MemberSignature Language="F#" Value="member this.Mnemonic : char" Usage="System.Windows.Forms.MenuItem.Mnemonic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-353">获取一个值，通过该值指示与此菜单项关联的助记字符。</span><span class="sxs-lookup"><span data-stu-id="f6fea-353">Gets a value indicating the mnemonic character that is associated with this menu item.</span></span></summary>
        <value><span data-ttu-id="f6fea-354">表示与此菜单项关联的助记字符的字符。</span><span class="sxs-lookup"><span data-stu-id="f6fea-354">A character that represents the mnemonic character associated with this menu item.</span></span> <span data-ttu-id="f6fea-355">如果在 <see cref="T:System.Windows.Forms.MenuItem" /> 的文本中没有指定助记字符，则返回空字符（ASCII 值为 0）。</span><span class="sxs-lookup"><span data-stu-id="f6fea-355">Returns the NUL character (ASCII value 0) if no mnemonic character is specified in the text of the <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-356">助记键字符等于第一个字符的文本中后一个 & 号字符 (&) <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-356">The mnemonic character is the first character after an ampersand character (&) in the text of the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="f6fea-357">此属性将返回助记键，如果两个 & 符它们放在一起使用 & 符的文本中显示 & 符<xref:System.Windows.Forms.MenuItem>而不是定义助记键字符。</span><span class="sxs-lookup"><span data-stu-id="f6fea-357">This property will not return a mnemonic if two ampersand characters are placed together as the ampersands are used to display an ampersand in the text of the <xref:System.Windows.Forms.MenuItem> instead of defining a mnemonic character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Text" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="menuItem.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f6fea-358">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-358">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f6fea-359">引发 <see cref="E:System.Windows.Forms.MenuItem.Click" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-359">Raises the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-360">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6fea-360">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f6fea-361">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-361">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-362">下面的代码示例演示如何使用<xref:System.Windows.Forms.MenuItem.Click>事件，以便执行任务时<xref:System.Windows.Forms.MenuItem>单击。</span><span class="sxs-lookup"><span data-stu-id="f6fea-362">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Click> event to perform tasks when a <xref:System.Windows.Forms.MenuItem> is clicked.</span></span> <span data-ttu-id="f6fea-363">此示例将创建<xref:System.Windows.Forms.MainMenu>称为`mainMenu1`并添加两个<xref:System.Windows.Forms.MenuItem>对象， `topMenuItem` (`File`) 和`menuItem1`(`Open`)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-363">The example creates a <xref:System.Windows.Forms.MainMenu> called `mainMenu1` and adds two <xref:System.Windows.Forms.MenuItem> objects, `topMenuItem` (`File`) and `menuItem1` (`Open`).</span></span> <span data-ttu-id="f6fea-364">然后它会连接`Click`事件`menuItem1_Click`事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6fea-364">It then connects the `Click` event to the `menuItem1_Click` event handler.</span></span> <span data-ttu-id="f6fea-365">当用户单击`Open`菜单项<xref:System.Windows.Forms.OpenFileDialog>初始化，并且会显示。</span><span class="sxs-lookup"><span data-stu-id="f6fea-365">When the user clicks the `Open` menu item, an <xref:System.Windows.Forms.OpenFileDialog> is initialized and displayed.</span></span> <span data-ttu-id="f6fea-366">该示例需要您已创建<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-366">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[MenuItemClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItemClick/CPP/form1.cpp#1)]
 [!code-csharp[MenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItemClick/CS/form1.cs#1)]
 [!code-vb[MenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItemClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f6fea-367">重写时<see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" />在派生类中，请务必调用基类的<see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="f6fea-367">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit&#xA;override this.OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit" Usage="menuItem.OnDrawItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f6fea-368">包含事件数据的 <see cref="T:System.Windows.Forms.DrawItemEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-368">A <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f6fea-369">引发 <see cref="E:System.Windows.Forms.MenuItem.DrawItem" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-369">Raises the <see cref="E:System.Windows.Forms.MenuItem.DrawItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-370">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6fea-370">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f6fea-371">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-371">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f6fea-372">重写时<see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />在派生类中，请务必调用基类的<see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="f6fea-372">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DrawItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInitMenuPopup">
      <MemberSignature Language="C#" Value="protected virtual void OnInitMenuPopup (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitMenuPopup(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitMenuPopup (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitMenuPopup(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInitMenuPopup : EventArgs -&gt; unit&#xA;override this.OnInitMenuPopup : EventArgs -&gt; unit" Usage="menuItem.OnInitMenuPopup e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f6fea-373">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-373">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f6fea-374">引发 <see cref="E:System.Windows.Forms.MenuItem.Popup" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-374">Raises the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMeasureItem">
      <MemberSignature Language="C#" Value="protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMeasureItem(class System.Windows.Forms.MeasureItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMeasureItem (e As MeasureItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMeasureItem(System::Windows::Forms::MeasureItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMeasureItem : System.Windows.Forms.MeasureItemEventArgs -&gt; unit&#xA;override this.OnMeasureItem : System.Windows.Forms.MeasureItemEventArgs -&gt; unit" Usage="menuItem.OnMeasureItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MeasureItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f6fea-375">包含事件数据的 <see cref="T:System.Windows.Forms.MeasureItemEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-375">A <see cref="T:System.Windows.Forms.MeasureItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f6fea-376">引发 <see cref="E:System.Windows.Forms.MenuItem.MeasureItem" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-376">Raises the <see cref="E:System.Windows.Forms.MenuItem.MeasureItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-377">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6fea-377">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f6fea-378">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-378">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f6fea-379">重写时<see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />在派生类中，请务必调用基类的<see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="f6fea-379">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.MeasureItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPopup">
      <MemberSignature Language="C#" Value="protected virtual void OnPopup (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPopup(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPopup (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPopup(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPopup : EventArgs -&gt; unit&#xA;override this.OnPopup : EventArgs -&gt; unit" Usage="menuItem.OnPopup e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f6fea-380">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-380">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f6fea-381">引发 <see cref="E:System.Windows.Forms.MenuItem.Popup" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-381">Raises the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-382">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6fea-382">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f6fea-383">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-383">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-384">下面的代码示例演示如何使用<xref:System.Windows.Forms.MenuItem.Popup>事件以确定是否<xref:System.Windows.Forms.MenuItem>中所显示的菜单显示之前启用支持剪切、 复制和删除操作的对象。</span><span class="sxs-lookup"><span data-stu-id="f6fea-384">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="f6fea-385">该示例确定是否`textBox1`、 一个<xref:System.Windows.Forms.TextBox>控制窗体上，启用了、 具有输入焦点，并且具有在启用之前所选文本<xref:System.Windows.Forms.MenuItem>对象。</span><span class="sxs-lookup"><span data-stu-id="f6fea-385">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="f6fea-386">此示例要求三个<xref:System.Windows.Forms.MenuItem>对象所创建的名为`menuCut`， `menuCopy`，和`menuDelete`已创建。</span><span class="sxs-lookup"><span data-stu-id="f6fea-386">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f6fea-387">重写时<see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" />在派生类中，请务必调用基类的<see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="f6fea-387">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelect">
      <MemberSignature Language="C#" Value="protected virtual void OnSelect (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelect(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelect (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelect(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelect : EventArgs -&gt; unit&#xA;override this.OnSelect : EventArgs -&gt; unit" Usage="menuItem.OnSelect e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f6fea-388">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-388">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f6fea-389">引发 <see cref="E:System.Windows.Forms.MenuItem.Select" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-389">Raises the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-390">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6fea-390">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f6fea-391">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-391">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-392">下面的代码示例演示如何使用<xref:System.Windows.Forms.MenuItem.Select>的事件<xref:System.Windows.Forms.MenuItem>类，以将分配到的帮助文本<xref:System.Windows.Forms.StatusBarPanel>的<xref:System.Windows.Forms.StatusBar>控件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-392">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Select> event of the <xref:System.Windows.Forms.MenuItem> class to assign help text to a <xref:System.Windows.Forms.StatusBarPanel> of a <xref:System.Windows.Forms.StatusBar> control.</span></span> <span data-ttu-id="f6fea-393">此示例需要<xref:System.Windows.Forms.MenuItem>名为的对象`menuOpen`， `menuSave`，和`menuExit`添加到<xref:System.Windows.Forms.MainMenu>窗体上的控件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-393">This example requires that <xref:System.Windows.Forms.MenuItem> objects named `menuOpen`, `menuSave`, and `menuExit` are added to a <xref:System.Windows.Forms.MainMenu> control on a form.</span></span> <span data-ttu-id="f6fea-394">该示例还需要<xref:System.Windows.Forms.StatusBar>控件，名为`statusBar1`已添加到窗体。</span><span class="sxs-lookup"><span data-stu-id="f6fea-394">The example also requires that a <xref:System.Windows.Forms.StatusBar> control, named `statusBar1` has been added to the form.</span></span> <span data-ttu-id="f6fea-395"><xref:System.Windows.Forms.StatusBar>控制应包含<xref:System.Windows.Forms.StatusBarPanel>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-395">The <xref:System.Windows.Forms.StatusBar> control should contain a <xref:System.Windows.Forms.StatusBarPanel>.</span></span>  
  
 [!code-cpp[MenuItem.Select#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Select/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Select#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Select/CS/form1.cs#1)]
 [!code-vb[MenuItem.Select#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Select/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f6fea-396">重写时<see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" />在派生类中，请务必调用基类的<see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="f6fea-396">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OwnerDraw">
      <MemberSignature Language="C#" Value="public bool OwnerDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerDraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.OwnerDraw" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerDraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OwnerDraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDraw : bool with get, set" Usage="System.Windows.Forms.MenuItem.OwnerDraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-397">获取或设置一个字值，通过该值指示是由所提供的代码绘制菜单项还是由 Windows 绘制菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-397">Gets or sets a value indicating whether the code that you provide draws the menu item or Windows draws the menu item.</span></span></summary>
        <value><span data-ttu-id="f6fea-398">如果使用代码绘制菜单项，则为 <see langword="true" />；如果由 Windows 绘制菜单项，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-398"><see langword="true" /> if the menu item is to be drawn using code; <see langword="false" /> if the menu item is to be drawn by Windows.</span></span> <span data-ttu-id="f6fea-399">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-399">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-400">当<xref:System.Windows.Forms.MenuItem.OwnerDraw%2A>属性设置为`true`，您需要处理的菜单项的所有绘图。</span><span class="sxs-lookup"><span data-stu-id="f6fea-400">When the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property is set to `true`, you need to handle all drawing of the menu item.</span></span> <span data-ttu-id="f6fea-401">此功能可用于创建您自己的专用菜单显示。</span><span class="sxs-lookup"><span data-stu-id="f6fea-401">You can use this capability to create your own special menu displays.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-402">下面的代码示例演示具有一个所有者描述菜单项的菜单。</span><span class="sxs-lookup"><span data-stu-id="f6fea-402">The following code example demonstrates a menu with an owner-drawn menu item.</span></span> <span data-ttu-id="f6fea-403">此示例设置<xref:System.Windows.Forms.MenuItem.OwnerDraw%2A>属性，并使用`AddHandler`语句和`AddressOf`运算符来指定一个委托来处理<xref:System.Windows.Forms.MenuItem.DrawItem>事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-403">This example set the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property and uses the `AddHandler` statement and the `AddressOf` operator to designate a delegate to handle the <xref:System.Windows.Forms.MenuItem.DrawItem> event.</span></span> <span data-ttu-id="f6fea-404">若要运行该示例，请将其粘贴在导入的窗体<xref:System>， <xref:System.Windows.Forms>，和<xref:System.Drawing>命名空间。</span><span class="sxs-lookup"><span data-stu-id="f6fea-404">To run the example, paste it in a form that imports the <xref:System>, <xref:System.Windows.Forms>, and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="f6fea-405">调用`InitializeMenu`从窗体的构造函数或`Load`方法。</span><span class="sxs-lookup"><span data-stu-id="f6fea-405">Call `InitializeMenu` from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.Menu" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Menu Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Menu Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Menu ^ Parent { System::Windows::Forms::Menu ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.Menu" Usage="System.Windows.Forms.MenuItem.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-406">获取一个值，该值指示包含此菜单项的菜单。</span><span class="sxs-lookup"><span data-stu-id="f6fea-406">Gets a value indicating the menu that contains this menu item.</span></span></summary>
        <value><span data-ttu-id="f6fea-407">表示包含此菜单项的菜单的 <see cref="T:System.Windows.Forms.Menu" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-407">A <see cref="T:System.Windows.Forms.Menu" /> that represents the menu that contains this menu item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-408">可以使用此属性以获取<xref:System.Windows.Forms.Menu>子菜单的对象。</span><span class="sxs-lookup"><span data-stu-id="f6fea-408">You can use this property to obtain the <xref:System.Windows.Forms.Menu> object for a submenu.</span></span> <span data-ttu-id="f6fea-409">可以强制转换<xref:System.Windows.Forms.Menu>到此属性返回的对象<xref:System.Windows.Forms.MenuItem>对象对其进行操作。</span><span class="sxs-lookup"><span data-stu-id="f6fea-409">You can cast the <xref:System.Windows.Forms.Menu> object returned by this property to a <xref:System.Windows.Forms.MenuItem> object to manipulate it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-410">在此示例中，将创建主菜单和一个顶级菜单项， `menuItem1` (`File`)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-410">In this example, you create a main menu and a top-level menu item, `menuItem1` (`File`).</span></span> <span data-ttu-id="f6fea-411">你还创建两个菜单项，请`menuItem2`(`New`) 和`menuItem3`(`Open`)，并将其添加到菜单项列表的`menuItem1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-411">You also create two menu items, `menuItem2` (`New`) and `menuItem3` (`Open`), and add them to the menu item list of `menuItem1`.</span></span> <span data-ttu-id="f6fea-412">然后检查以查看是否`menuItem3`有父菜单上，为 true，并显示此父菜单的信息在消息框中。</span><span class="sxs-lookup"><span data-stu-id="f6fea-412">Then you check to see if `menuItem3` has got a parent menu, which is true, and display the information of this parent menu in message box.</span></span> <span data-ttu-id="f6fea-413">此示例要求您已创建<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-413">This example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[ParentMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ParentMenu/CPP/form1.cpp#1)]
 [!code-csharp[ParentMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ParentMenu/CS/form1.cs#1)]
 [!code-vb[ParentMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ParentMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformClick();" />
      <MemberSignature Language="F#" Value="member this.PerformClick : unit -&gt; unit" Usage="menuItem.PerformClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6fea-414">为 <see cref="E:System.Windows.Forms.Control.Click" /> 生成一个 <see cref="T:System.Windows.Forms.MenuItem" /> 事件，模拟用户的单击操作。</span><span class="sxs-lookup"><span data-stu-id="f6fea-414">Generates a <see cref="E:System.Windows.Forms.Control.Click" /> event for the <see cref="T:System.Windows.Forms.MenuItem" />, simulating a click by a user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-415">此菜单可用于通过代码的菜单项激活而不传递任何事件信息。</span><span class="sxs-lookup"><span data-stu-id="f6fea-415">You can use this menu to activate a menu item through code without passing any event information.</span></span> <span data-ttu-id="f6fea-416">例如，如果你想要激活菜单项上发生在应用程序中，可以调用一个操作基于<xref:System.Windows.Forms.MenuItem.PerformClick%2A>方法的<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-416">For example, if you want to activate a menu item based on an action that occurs in your application, you can call the <xref:System.Windows.Forms.MenuItem.PerformClick%2A> method for that <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-417">在此示例中以编程方式通过单击菜单项`PerformClick`方法。</span><span class="sxs-lookup"><span data-stu-id="f6fea-417">In this example you programmatically click a menu item by using the `PerformClick` method.</span></span> <span data-ttu-id="f6fea-418">首先，创建主菜单 (`mainMenu1`) 并向其中添加两个菜单项，请`menuItem1`(`File`) 和`menuItem2`(`Edit`)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-418">First, you create a main menu (`mainMenu1`) and add to it two menu items, `menuItem1` (`File`) and `menuItem2` (`Edit`).</span></span> <span data-ttu-id="f6fea-419">此外使用<xref:System.Windows.Forms.MenuItem.Click>事件以将数据发送到事件处理程序中，单击菜单项时。</span><span class="sxs-lookup"><span data-stu-id="f6fea-419">You also use the <xref:System.Windows.Forms.MenuItem.Click> event to send data to the event handler when a menu item is clicked.</span></span> <span data-ttu-id="f6fea-420">然后，使用`PerformClick`方法来单击`File`菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-420">Then you use the `PerformClick` method to click the `File` menu item.</span></span> <span data-ttu-id="f6fea-421">当启动应用程序，`File`激活菜单项，并且一个消息框包含文本"文件菜单上单击。</span><span class="sxs-lookup"><span data-stu-id="f6fea-421">When you start the application, the `File` menu item is activated, and a message box that contains the text "The File menu is clicked."</span></span> <span data-ttu-id="f6fea-422">在屏幕上显示。</span><span class="sxs-lookup"><span data-stu-id="f6fea-422">appears on the screen.</span></span> <span data-ttu-id="f6fea-423">该示例需要您已创建<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-423">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[PerformClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PerformClick/CPP/form1.cpp#1)]
 [!code-csharp[PerformClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PerformClick/CS/form1.cs#1)]
 [!code-vb[PerformClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PerformClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="public virtual void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.PerformSelect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PerformSelect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PerformSelect();" />
      <MemberSignature Language="F#" Value="abstract member PerformSelect : unit -&gt; unit&#xA;override this.PerformSelect : unit -&gt; unit" Usage="menuItem.PerformSelect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6fea-424">引发该菜单项的 <see cref="E:System.Windows.Forms.MenuItem.Select" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-424">Raises the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event for this menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-425">此方法，可引发<xref:System.Windows.Forms.MenuItem.Select>无需将任何事件信息传递给事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6fea-425">This method allows you to raise the <xref:System.Windows.Forms.MenuItem.Select> event without passing any event information to the event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-426">在此示例中以编程方式通过使用选择的菜单项`PerformSelect`方法。</span><span class="sxs-lookup"><span data-stu-id="f6fea-426">In this example you programmatically select a menu item by using the `PerformSelect` method.</span></span> <span data-ttu-id="f6fea-427">首先，创建主菜单 (`mainMenu1`) 并向其中添加两个菜单项，请`menuItem1`(`File`) 和`menuItem2`(`Edit`)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-427">First, you create a main menu (`mainMenu1`) and add to it two menu items, `menuItem1` (`File`) and `menuItem2` (`Edit`).</span></span> <span data-ttu-id="f6fea-428">此外使用<xref:System.Windows.Forms.MenuItem.Select>事件来选择菜单项时，将数据发送到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6fea-428">You also use the <xref:System.Windows.Forms.MenuItem.Select> event to send data to the event handler when a menu item is selected.</span></span> <span data-ttu-id="f6fea-429">然后，使用`PerformSelect`方法来选择`File`菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-429">Then you use the `PerformSelect` method to select the `File` menu item.</span></span> <span data-ttu-id="f6fea-430">当启动应用程序，`File`菜单项被选中，并且一个消息框包含文本"菜单中选定的文件。"</span><span class="sxs-lookup"><span data-stu-id="f6fea-430">When you start the application, the `File` menu item is selected, and a message box that contains the text "The File menu is selected."</span></span> <span data-ttu-id="f6fea-431">在屏幕上显示。</span><span class="sxs-lookup"><span data-stu-id="f6fea-431">appears on the screen.</span></span> <span data-ttu-id="f6fea-432">该示例需要您已创建<xref:System.Windows.Forms.Form>名为`Form1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-432">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[PerformSelect#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PerformSelect/CPP/form1.cpp#1)]
 [!code-csharp[PerformSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PerformSelect/CS/form1.cs#1)]
 [!code-vb[PerformSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PerformSelect/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.MenuItem.PerformClick" />
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public event EventHandler Popup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Popup" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Popup" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Popup As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Popup;" />
      <MemberSignature Language="F#" Value="member this.Popup : EventHandler " Usage="member this.Popup : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-433">在显示菜单项的菜单项列表之前发生。</span><span class="sxs-lookup"><span data-stu-id="f6fea-433">Occurs before a menu item's list of menu items is displayed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-434">此事件仅当菜单项具有要显示的子菜单项时发生。</span><span class="sxs-lookup"><span data-stu-id="f6fea-434">This event only occurs when a menu item has submenu items to display.</span></span> <span data-ttu-id="f6fea-435">此事件处理程序可用于添加、 删除、 启用、 禁用、 检查，或取消选中菜单项显示这些基于应用程序的状态。</span><span class="sxs-lookup"><span data-stu-id="f6fea-435">You can use this event handler to add, remove, enable, disable, check, or uncheck menu items based on the state of your application before they are displayed.</span></span> <span data-ttu-id="f6fea-436">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-436">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-437">下面的代码示例演示如何使用<xref:System.Windows.Forms.MenuItem.Popup>事件以确定是否<xref:System.Windows.Forms.MenuItem>中所显示的菜单显示之前启用支持剪切、 复制和删除操作的对象。</span><span class="sxs-lookup"><span data-stu-id="f6fea-437">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="f6fea-438">该示例确定是否`textBox1`、 一个<xref:System.Windows.Forms.TextBox>控制窗体上，启用了、 具有输入焦点，并且具有在启用之前所选文本<xref:System.Windows.Forms.MenuItem>对象。</span><span class="sxs-lookup"><span data-stu-id="f6fea-438">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="f6fea-439">此示例要求三个<xref:System.Windows.Forms.MenuItem>对象所创建的名为`menuCut`， `menuCopy`，和`menuDelete`已创建。</span><span class="sxs-lookup"><span data-stu-id="f6fea-439">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadioCheck">
      <MemberSignature Language="C#" Value="public bool RadioCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RadioCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.RadioCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property RadioCheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RadioCheck { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RadioCheck : bool with get, set" Usage="System.Windows.Forms.MenuItem.RadioCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-440">获取或设置一个值，通过该值指示 <see cref="T:System.Windows.Forms.MenuItem" />（如果已选中）是否显示单选按钮而不是选中标记。</span><span class="sxs-lookup"><span data-stu-id="f6fea-440">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.MenuItem" />, if checked, displays a radio-button instead of a check mark.</span></span></summary>
        <value><span data-ttu-id="f6fea-441">如果要使用的是单选按钮而不是选中标记，则为 <see langword="true" />；如果菜单项选中时要显示的是标准选中标记，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-441"><see langword="true" /> if a radio-button is to be used instead of a check mark; <see langword="false" /> if the standard check mark is to be displayed when the menu item is checked.</span></span> <span data-ttu-id="f6fea-442">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-442">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-443">复选标记不一定意味着一组菜单项的互斥状态。</span><span class="sxs-lookup"><span data-stu-id="f6fea-443">Check marks do not necessarily imply a mutually exclusive state for a group of menu items.</span></span> <span data-ttu-id="f6fea-444">此属性可用于向用户指示菜单项的复选标记是互相排斥。</span><span class="sxs-lookup"><span data-stu-id="f6fea-444">You can use this property to indicate to the user that the check mark of a menu item is mutually exclusive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-445">下面的代码示例使用<xref:System.Windows.Forms.MenuItem.Checked%2A>属性以更改应用程序的状态。</span><span class="sxs-lookup"><span data-stu-id="f6fea-445">The following code example uses the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to change the state of an application.</span></span> <span data-ttu-id="f6fea-446">在示例中，一组菜单项将提供用来指定中的文本的颜色<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-446">In the example, a group of menu items are provided that are used to specify the color for the text in an <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="f6fea-447">在示例中，使用提供的事件处理程序<xref:System.Windows.Forms.MenuItem.Click>的三个菜单项的事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-447">In the example, the event handler provided is used by the <xref:System.Windows.Forms.MenuItem.Click> event of the three menu items.</span></span> <span data-ttu-id="f6fea-448">每个菜单项指定一种颜色， `menuItemRed`， `menuItemGreen`，或`menuItemBlue`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-448">Each menu item specifies a color, `menuItemRed`, `menuItemGreen`, or `menuItemBlue`.</span></span> <span data-ttu-id="f6fea-449">事件处理程序确定被单击的菜单项，将放置到所选的菜单项，一个复选标记并更改窗体的文本颜色<xref:System.Windows.Forms.TextBox>控件，名为`textBox1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-449">The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <xref:System.Windows.Forms.TextBox> control, named `textBox1`.</span></span> <span data-ttu-id="f6fea-450">此示例还使用<xref:System.Windows.Forms.MenuItem.RadioCheck%2A>属性演示了如何使用单选按钮检查要显示的是互斥的菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-450">The example also uses the <xref:System.Windows.Forms.MenuItem.RadioCheck%2A> property to demonstrate how a radio-button check is used to show menu items that are mutually exclusive.</span></span> <span data-ttu-id="f6fea-451">此示例需要<xref:System.Drawing?displayProperty=nameWithType>命名空间添加到窗体，其中包含此代码。</span><span class="sxs-lookup"><span data-stu-id="f6fea-451">This example requires that the <xref:System.Drawing?displayProperty=nameWithType> namespace has been added to the form that contains this code.</span></span>  
  
 [!code-cpp[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Checked" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public event EventHandler Select;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Select" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Select" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Select As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Select;" />
      <MemberSignature Language="F#" Value="member this.Select : EventHandler " Usage="member this.Select : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-452">当用户将指针放在菜单项上时发生。</span><span class="sxs-lookup"><span data-stu-id="f6fea-452">Occurs when the user places the pointer over a menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-453">当用户将鼠标指针置于菜单项上方时，通常会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-453">This event is typically raised when the user places the mouse pointer over the menu item.</span></span> <span data-ttu-id="f6fea-454">当用户突出显示了使用键盘，方法是使用箭头键滚动到菜单项的菜单项时，也可以引发该事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-454">The event can also be raised when the user highlights a menu item using the keyboard by scrolling to the menu item with the arrow keys.</span></span> <span data-ttu-id="f6fea-455">此事件可用于显示有关应用程序的状态栏中此菜单项的详细的帮助字符串。</span><span class="sxs-lookup"><span data-stu-id="f6fea-455">You can use this event to display a detailed help string pertaining to this menu item in an application's status bar.</span></span> <span data-ttu-id="f6fea-456">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f6fea-456">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6fea-457">如果<xref:System.Windows.Forms.Menu.MenuItems%2A>属性<xref:System.Windows.Forms.MenuItem>包含任何项，不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-457">If the <xref:System.Windows.Forms.Menu.MenuItems%2A> property for the <xref:System.Windows.Forms.MenuItem> contains any items, this event is not raised.</span></span> <span data-ttu-id="f6fea-458">对于父菜单项不引发此事件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-458">This event is not raised for parent menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-459">下面的代码示例演示如何使用<xref:System.Windows.Forms.MenuItem.Select>的事件<xref:System.Windows.Forms.MenuItem>类，以将分配到的帮助文本<xref:System.Windows.Forms.StatusBarPanel>的<xref:System.Windows.Forms.StatusBar>控件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-459">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Select> event of the <xref:System.Windows.Forms.MenuItem> class to assign help text to a <xref:System.Windows.Forms.StatusBarPanel> of a <xref:System.Windows.Forms.StatusBar> control.</span></span> <span data-ttu-id="f6fea-460">此示例需要<xref:System.Windows.Forms.MenuItem>名为的对象`menuOpen`， `menuSave`，和`menuExit`添加到<xref:System.Windows.Forms.MainMenu>窗体上的控件。</span><span class="sxs-lookup"><span data-stu-id="f6fea-460">This example requires that <xref:System.Windows.Forms.MenuItem> objects named `menuOpen`, `menuSave`, and `menuExit` are added to a <xref:System.Windows.Forms.MainMenu> control on a form.</span></span> <span data-ttu-id="f6fea-461">该示例还需要<xref:System.Windows.Forms.StatusBar>控件，名为`statusBar1`已添加到窗体。</span><span class="sxs-lookup"><span data-stu-id="f6fea-461">The example also requires that a <xref:System.Windows.Forms.StatusBar> control, named `statusBar1` has been added to the form.</span></span> <span data-ttu-id="f6fea-462"><xref:System.Windows.Forms.StatusBar>控制应包含<xref:System.Windows.Forms.StatusBarPanel>。</span><span class="sxs-lookup"><span data-stu-id="f6fea-462">The <xref:System.Windows.Forms.StatusBar> control should contain a <xref:System.Windows.Forms.StatusBarPanel>.</span></span>  
  
 [!code-cpp[MenuItem.Select#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Select/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Select#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Select/CS/form1.cs#1)]
 [!code-vb[MenuItem.Select#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Select/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MenuItem.Click" />
      </Docs>
    </Member>
    <Member MemberName="Shortcut">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Shortcut Shortcut { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Shortcut Shortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Shortcut" />
      <MemberSignature Language="VB.NET" Value="Public Property Shortcut As Shortcut" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Shortcut Shortcut { System::Windows::Forms::Shortcut get(); void set(System::Windows::Forms::Shortcut value); };" />
      <MemberSignature Language="F#" Value="member this.Shortcut : System.Windows.Forms.Shortcut with get, set" Usage="System.Windows.Forms.MenuItem.Shortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Shortcut</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-463">获取或设置一个值，通过该值指示与菜单项关联的快捷键。</span><span class="sxs-lookup"><span data-stu-id="f6fea-463">Gets or sets a value indicating the shortcut key associated with the menu item.</span></span></summary>
        <value><span data-ttu-id="f6fea-464"><see cref="T:System.Windows.Forms.Shortcut" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f6fea-464">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span> <span data-ttu-id="f6fea-465">默认值为 <see langword="Shortcut.None" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-465">The default is <see langword="Shortcut.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-466">键盘快捷方式提供菜单系统中，并提供对你的应用程序为这些用户不具有到鼠标或其他指针设备的访问权限的键盘访问，用户经常激活的方法使用菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-466">Shortcut keys provide a method for users to activate frequently used menu items in your menu system and to provide keyboard access to your application for those users who do not have access to a mouse or other pointer device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-467">下面的代码示例创建菜单项，设置的标题、 将分配快捷键、 使菜单项可见，并显示菜单项的快捷方式键显示。</span><span class="sxs-lookup"><span data-stu-id="f6fea-467">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="f6fea-468">该示例需要<xref:System.Windows.Forms.MenuItem>，它是已创建名为`menuItem1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-468">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="f6fea-469">分配的值不是 <see cref="T:System.Windows.Forms.Shortcut" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f6fea-469">The assigned value is not one of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.Shortcut" />
      </Docs>
    </Member>
    <Member MemberName="ShowShortcut">
      <MemberSignature Language="C#" Value="public bool ShowShortcut { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.ShowShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowShortcut As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowShortcut { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowShortcut : bool with get, set" Usage="System.Windows.Forms.MenuItem.ShowShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-470">获取或设置一个值，通过该值指示与菜单项关联的快捷键是否在菜单项标题的旁边显示。</span><span class="sxs-lookup"><span data-stu-id="f6fea-470">Gets or sets a value indicating whether the shortcut key that is associated with the menu item is displayed next to the menu item caption.</span></span></summary>
        <value><span data-ttu-id="f6fea-471">如果快捷组合键在菜单项标题的旁边显示，则为 <see langword="true" />；如果不显示快捷组合键，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-471"><see langword="true" /> if the shortcut key combination is displayed next to the menu item caption; <see langword="false" /> if the shortcut key combination is not to be displayed.</span></span> <span data-ttu-id="f6fea-472">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-472">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-473">此属性可用于提供用户若要隐藏菜单快捷方式来节省菜单空间或隐藏显示的快捷键的选项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-473">You can use this property to provide the option for users to hide shortcuts from menus to conserve menu space or to hide a shortcut key from being displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-474">下面的代码示例创建菜单项，设置的标题、 将分配快捷键、 使菜单项可见，并显示菜单项的快捷方式键显示。</span><span class="sxs-lookup"><span data-stu-id="f6fea-474">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="f6fea-475">该示例需要<xref:System.Windows.Forms.MenuItem>，它是已创建名为`menuItem1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-475">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Shortcut" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.MenuItem.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-476">获取或设置一个值，通过该值指示菜单项标题。</span><span class="sxs-lookup"><span data-stu-id="f6fea-476">Gets or sets a value indicating the caption of the menu item.</span></span></summary>
        <value><span data-ttu-id="f6fea-477">菜单项的文本标题。</span><span class="sxs-lookup"><span data-stu-id="f6fea-477">The text caption of the menu item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-478">当菜单项指定标题时，还可以通过将放置一个 & 字符用作访问键之前指定的访问密钥。</span><span class="sxs-lookup"><span data-stu-id="f6fea-478">When you specify a caption for your menu item, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="f6fea-479">例如，若要指定访问密钥"文件"中的"F"，您将指定为菜单项的标题"和文件"。</span><span class="sxs-lookup"><span data-stu-id="f6fea-479">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="f6fea-480">此功能可用于提供用于在菜单的键盘导航。</span><span class="sxs-lookup"><span data-stu-id="f6fea-480">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="f6fea-481">此属性设置为"`-`"导致菜单项显示为分隔符 （一条横线），而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="f6fea-481">Setting this property to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-482">下面的代码示例创建菜单项，设置的标题、 将分配快捷键、 使菜单项可见，并显示菜单项的快捷方式键显示。</span><span class="sxs-lookup"><span data-stu-id="f6fea-482">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="f6fea-483">该示例需要<xref:System.Windows.Forms.MenuItem>，它是已创建名为`menuItem1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-483">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Mnemonic" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="menuItem.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6fea-484">返回表示 <see cref="T:System.Windows.Forms.MenuItem" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="f6fea-484">Returns a string that represents the <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <returns><span data-ttu-id="f6fea-485">表示当前 <see cref="T:System.Windows.Forms.MenuItem" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="f6fea-485">A string that represents the current <see cref="T:System.Windows.Forms.MenuItem" />.</span></span> <span data-ttu-id="f6fea-486">该字符串包括该控件的类型和 <see cref="P:System.Windows.Forms.MenuItem.Text" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="f6fea-486">The string includes the type and the <see cref="P:System.Windows.Forms.MenuItem.Text" /> property of the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.MenuItem.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6fea-487">获取或设置一个值，通过该值指示菜单项是否可见。</span><span class="sxs-lookup"><span data-stu-id="f6fea-487">Gets or sets a value indicating whether the menu item is visible.</span></span></summary>
        <value><span data-ttu-id="f6fea-488">如果菜单项在菜单上为可见，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-488"><see langword="true" /> if the menu item will be made visible on the menu; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f6fea-489">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f6fea-489">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6fea-490">此属性可用于修改而无需合并菜单或禁用菜单的菜单结构。</span><span class="sxs-lookup"><span data-stu-id="f6fea-490">You can use this property to modify a menu structure without having to merge menus or disable menus.</span></span> <span data-ttu-id="f6fea-491">例如，如果你想要隐藏的应用程序的菜单中的功能完整部分，则可以隐藏它们从用户通过将此属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-491">For example, if you want to hide a complete section of functionality from the menus for your application, you can hide them from the user by setting this property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6fea-492">下面的代码示例创建菜单项，设置的标题、 将分配快捷键、 使菜单项可见，并显示菜单项的快捷方式键显示。</span><span class="sxs-lookup"><span data-stu-id="f6fea-492">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="f6fea-493">该示例需要<xref:System.Windows.Forms.MenuItem>，它是已创建名为`menuItem1`。</span><span class="sxs-lookup"><span data-stu-id="f6fea-493">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>