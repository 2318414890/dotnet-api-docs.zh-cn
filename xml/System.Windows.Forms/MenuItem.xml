<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MenuItem.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b891ec5d-4b60-42d7-ac21-95eab9e3ef828a283dcf6b2831ac5f93e9eab903a709ed1e0846.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a283dcf6b2831ac5f93e9eab903a709ed1e0846</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">058bfa0b75b777d3171411d35da8f11617fc06b0</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/04/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.MenuItem">
          <source>Represents an individual item that is displayed within a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph>.</source>
          <target state="translated">表示在 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> 内显示的单个项。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.MenuItem">
          <source>Although <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolStripMenuItem" /&gt;</ph> replaces and adds functionality to the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> control of previous versions, <ph id="ph3">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> is retained for both backward compatibility and future use if you choose.</source>
          <target state="translated">尽管 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolStripMenuItem" /&gt;</ph> 替换了早期版本的 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 控件并添加了功能；但是也可选择保留 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 以备向后兼容和将来使用。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>In order for a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> to be displayed, you must add it to a <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">为了使<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>若要显示，你必须将其添加到<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>To create submenus, you can add <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> property of the parent <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated">若要创建子菜单，可以添加<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象添加到<ph id="ph2">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph>的父属性<ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> class provides properties that enable you to configure the appearance and functionality of a menu item.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>类提供了使你能够配置的外观和功能的菜单项的属性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>To display a check mark next to a menu item, use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> property.</source>
          <target state="translated">若要显示的菜单项旁边的复选标记，请使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>You can use this feature to identify a menu item that is selected in a list of mutually exclusive menu items.</source>
          <target state="translated">可以使用此功能来确定的互相排斥的菜单项列表中选择的菜单项。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>For example, if you have a set of menu items for setting the color of text in a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control, you can use the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> property to identify which color is currently selected.</source>
          <target state="translated">例如，如果你有一组用于设置中文本的颜色的菜单项<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件，你可以使用<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph>属性来标识当前选定的颜色。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Shortcut%2A&gt;</ph> property can be used to define a keyboard combination that can be pressed to select the menu item.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Shortcut%2A&gt;</ph>属性可以用于定义某一键盘组合可以按下选择的菜单项。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>For <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects displayed in a Multiple Document Interface (MDI) application, you can use the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> method to merge the menus of an MDI parent for with that of its child forms to create a consolidated menu structure.</source>
          <target state="translated">有关<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>多文档界面 (MDI) 应用程序中显示的对象，则可以使用<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph>方法合并的菜单 MDI 父对于为其的子窗体上来创建合并的菜单结构。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>Because a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> cannot be reused in multiple locations at the same time, such as in a <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, you can use the <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt;</ph> method to create a copy of a <ph id="ph5">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> for use in another location.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>不能重复使用在多个位置在同一时间，如在<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>，你可以使用<ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt;</ph>方法来创建一份<ph id="ph5">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>在另一个位置中使用。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> event enables you to perform tasks before a menu is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph>事件可用于执行任务之前将显示一个菜单。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>For example, you can create an event handler for this event to display or hide menu items based on the state of your code.</source>
          <target state="translated">例如，你可以创建的事件处理程序以显示或隐藏菜单项在你的代码的状态上基于此事件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> event enables you to perform tasks such as providing detailed help for your application's menu items when the user places the mouse pointer over a menu item.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph>事件可用于执行任务，例如当用户将鼠标指针放在菜单项的应用程序的菜单项提供详细的帮助。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>The following code example creates a menu structure for a form.</source>
          <target state="translated">下面的代码示例创建一个窗体的菜单结构。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>The example code adds a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> to represent the top-level menu item, adds a submenu item to it for selecting a font size, and then adds two submenu items to that menu item that represent large and small font choices in an application.</source>
          <target state="translated">该示例代码将添加<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>表示顶级菜单项，用于选择字体大小，将子菜单项添加到它，然后将两个子菜单项添加到表示应用程序中的大型和小型字体选择该菜单项。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>The example requires that there is a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> object named <ph id="ph2">`mainMenu1`</ph> and four <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects named <ph id="ph4">`menuItem1`</ph>, <ph id="ph5">`menuItem2`</ph>, <ph id="ph6">`menuItem3`</ph>, and <ph id="ph7">`menuItem4`</ph>.</source>
          <target state="translated">该示例需要有<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>对象名为<ph id="ph2">`mainMenu1`</ph>和第四个<ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象命名的<ph id="ph4">`menuItem1`</ph>， <ph id="ph5">`menuItem2`</ph>， <ph id="ph6">`menuItem3`</ph>，和<ph id="ph7">`menuItem4`</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.MenuItem">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor">
          <source>Initializes a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> with a blank caption.</source>
          <target state="translated">使用空白标题初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor">
          <source>Once you have created a blank <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> using this constructor, you can use the properties and methods of the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> class to specify the appearance and behavior of your <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated">创建空白后<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>使用此构造函数，可以使用的属性和方法<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>类指定的外观和行为你<ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> using this version of the constructor.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>使用此版本的构造函数。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String)">
          <source>The caption for the menu item.</source>
          <target state="translated">菜单项的标题。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> class with a specified caption for the menu item.</source>
          <target state="translated">使用菜单项的指定标题初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 类的一个新实例。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String)">
          <source>When you specify a caption for your menu item with the <ph id="ph1">`text`</ph> parameter, you can also specify an access key by placing an '&amp;' character before the character to be used as the access key.</source>
          <target state="translated">当你具有的菜单项指定标题<ph id="ph1">`text`</ph>参数，你还可以指定访问密钥由前放置一个 &amp; 字符的字符，用作访问密钥。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String)">
          <source>For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&amp;File".</source>
          <target state="translated">例如，若要为访问键指定"文件"中的"F"，你将指定为该菜单项标题"&amp; 文件"。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String)">
          <source>You can use this feature to provide keyboard navigation for your menus.</source>
          <target state="translated">可以使用此功能可供你菜单的键盘导航。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String)">
          <source>Setting the <ph id="ph1">`text`</ph> parameter to "<ph id="ph2">`-`</ph>" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</source>
          <target state="translated">设置<ph id="ph1">`text`</ph>参数"<ph id="ph2">`-`</ph>"会导致菜单项显示为分隔符 （一条横线），而不是标准菜单项。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> that specifies the caption of the menu item at the time it is constructed.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>，在构造时指定的菜单项的标题。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>The caption for the menu item.</source>
          <target state="translated">菜单项的标题。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> that handles the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> event for this menu item.</source>
          <target state="translated">处理该菜单项的 <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> 事件的 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>Initializes a new instance of the class with a specified caption and event handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> event of the menu item.</source>
          <target state="translated">用指定标题和菜单项的 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> 事件的事件处理程序初始化该类的一个新实例。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>When you specify a caption for your menu item with the <ph id="ph1">`text`</ph> parameter, you can also specify an access key by placing an '&amp;' before the character to be used as the access key.</source>
          <target state="translated">当你具有的菜单项指定标题<ph id="ph1">`text`</ph>参数，你还可以指定访问密钥由前放置一个 &amp; 字符用作访问密钥。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&amp;File".</source>
          <target state="translated">例如，若要为访问键指定"文件"中的"F"，你将指定为该菜单项标题"&amp; 文件"。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>You can use this feature to provide keyboard navigation for your menus.</source>
          <target state="translated">可以使用此功能可供你菜单的键盘导航。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>Setting the <ph id="ph1">`text`</ph> parameter to "<ph id="ph2">`-`</ph>" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</source>
          <target state="translated">设置<ph id="ph1">`text`</ph>参数"<ph id="ph2">`-`</ph>"会导致菜单项显示为分隔符 （一条横线），而不是标准菜单项。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>In addition, you can use this constructor to specify a delegate that will handle the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event for the menu item being created.</source>
          <target state="translated">此外，你可以使用此构造函数指定一个委托，可将处理<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>正在创建的菜单项的事件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> that you pass to this constructor must be configured to call an event handler that can handle the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>传递给此构造函数必须将配置为调用的事件处理程序可以处理<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>For more information on handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> object with a specified caption and an <ph id="ph2">&lt;xref:System.EventHandler&gt;</ph> delegate connected to an event handler that will handle the <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event for the menu item.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>用指定标题的对象和<ph id="ph2">&lt;xref:System.EventHandler&gt;</ph>委托连接到的事件处理程序将处理<ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>菜单项的事件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>The caption for the menu item.</source>
          <target state="translated">菜单项的标题。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> objects that contains the submenu items for this menu item.</source>
          <target state="translated">包含该菜单项的子菜单项的一组 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>Initializes a new instance of the class with a specified caption and an array of submenu items defined for the menu item.</source>
          <target state="translated">用指定标题和为菜单项定义的一组子菜单项初始化该类的一个新实例。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>When you specify a caption for your menu item with the <ph id="ph1">`text`</ph> parameter, you can also specify an access key by placing an '&amp;' before the character to be used as the access key.</source>
          <target state="translated">当你具有的菜单项指定标题<ph id="ph1">`text`</ph>参数，你还可以指定访问密钥由前放置一个 &amp; 字符用作访问密钥。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&amp;File".</source>
          <target state="translated">例如，若要为访问键指定"文件"中的"F"，你将指定为该菜单项标题"&amp; 文件"。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>You can use this feature to provide keyboard navigation for your menus.</source>
          <target state="translated">可以使用此功能可供你菜单的键盘导航。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>Setting the <ph id="ph1">`text`</ph> parameter to "<ph id="ph2">`-`</ph>" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</source>
          <target state="translated">设置<ph id="ph1">`text`</ph>参数"<ph id="ph2">`-`</ph>"会导致菜单项显示为分隔符 （一条横线），而不是标准菜单项。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">`items`</ph> parameter enables you to assign an array of menu items to define a submenu of this menu item.</source>
          <target state="translated"><ph id="ph1">`items`</ph>参数使你可以分配来定义该菜单项的子菜单的菜单项的数组。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>Each item in the array can also have an array of menu items assigned to it.</source>
          <target state="translated">数组中的每个项还可以分配给它的菜单项的数组。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>This enables you to create complete menu structures and assign them to the constructor for the menu item.</source>
          <target state="translated">这使你可以创建完整的菜单结构并将它们分配到的菜单项的构造函数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>For more information on handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>The following code example creates an object with a specified caption, an event handler connected to a method that will handle the event each menu item in an array of submenu items.</source>
          <target state="translated">下面的代码示例创建一个对象用指定标题，连接到将处理该事件的方法的事件处理程序每个菜单项中子菜单项的数组。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>The caption for the menu item.</source>
          <target state="translated">菜单项的标题。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> that handles the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> event for this menu item.</source>
          <target state="translated">处理该菜单项的 <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> 事件的 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>Initializes a new instance of the class with a specified caption, event handler, and associated shortcut key for the menu item.</source>
          <target state="translated">用指定标题、事件处理程序和菜单项的关联快捷键初始化该类的一个新实例。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>When you specify a caption for your menu item with the <ph id="ph1">`text`</ph> parameter, you can also specify an access key by placing an '&amp;' before the character to be used as the access key.</source>
          <target state="translated">当你具有的菜单项指定标题<ph id="ph1">`text`</ph>参数，你还可以指定访问密钥由前放置一个 &amp; 字符用作访问密钥。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&amp;File".</source>
          <target state="translated">例如，若要为访问键指定"文件"中的"F"，你将指定为该菜单项标题"&amp; 文件"。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>You can use this feature to provide keyboard navigation for your menus.</source>
          <target state="translated">可以使用此功能可供你菜单的键盘导航。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>This constructor also enables you to specify a shortcut key in addition to an access key to provide keyboard navigation.</source>
          <target state="translated">此构造函数还可以指定除了提供键盘导航的访问密钥的快捷键。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>Shortcut keys allow you to specify a combination of keys that can be used to activate the menu item.</source>
          <target state="translated">键盘快捷方式，可以指定可用来激活该菜单项的键的组合。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>Setting the <ph id="ph1">`text`</ph> parameter to "<ph id="ph2">`-`</ph>" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</source>
          <target state="translated">设置<ph id="ph1">`text`</ph>参数"<ph id="ph2">`-`</ph>"会导致菜单项显示为分隔符 （一条横线），而不是标准菜单项。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>In addition, you can use this constructor to specify a delegate that will handle the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event for the menu item being created.</source>
          <target state="translated">此外，你可以使用此构造函数指定一个委托，可将处理<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>正在创建的菜单项的事件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>The <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> that you pass to this constructor must be configured to call an event handler that can handle the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>传递给此构造函数必须将配置为调用的事件处理程序可以处理<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>For more information on handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>The following code example creates an object with a specified caption, shortcut key, and an event handler connected to a method that will handle the event for the menu item.</source>
          <target state="translated">下面的代码示例指定的标题、 快捷键，与事件处理程序连接到将处理菜单项的事件的方法创建对象。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuMerge" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuMerge" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The relative position that this menu item will take in a merged menu.</source>
          <target state="translated">此菜单项在合并菜单中将占有的相对位置。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The caption for the menu item.</source>
          <target state="translated">菜单项的标题。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> that handles the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> event for this menu item.</source>
          <target state="translated">处理该菜单项的 <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> 事件的 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> that handles the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph> event for this menu item.</source>
          <target state="translated">处理该菜单项的 <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> 事件的 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> that handles the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph> event for this menu item.</source>
          <target state="translated">处理该菜单项的 <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> 事件的 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> objects that contains the submenu items for this menu item.</source>
          <target state="translated">包含该菜单项的子菜单项的一组 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> class with a specified caption; defined event-handlers for the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph>, <ph id="ph3">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph> and <ph id="ph4">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph> events; a shortcut key; a merge type; and order specified for the menu item.</source>
          <target state="translated">用指定标题、为（<ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>、<ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph>）事件定义的事件处理程序、快捷键、合并类型和为菜单项指定的顺序来初始化 <ph id="ph4">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph> 类的一个新实例。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>When you specify a caption for your menu item with the <ph id="ph1">`text`</ph> parameter, you can also specify an access key by placing an '&amp;' before the character to be used as the access key.</source>
          <target state="translated">当你具有的菜单项指定标题<ph id="ph1">`text`</ph>参数，你还可以指定访问密钥由前放置一个 &amp; 字符用作访问密钥。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&amp;File".</source>
          <target state="translated">例如，若要为访问键指定"文件"中的"F"，你将指定为该菜单项标题"&amp; 文件"。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>You can use this feature to provide keyboard navigation for your menus.</source>
          <target state="translated">可以使用此功能可供你菜单的键盘导航。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>Setting the <ph id="ph1">`text`</ph> parameter to "<ph id="ph2">`-`</ph>" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</source>
          <target state="translated">设置<ph id="ph1">`text`</ph>参数"<ph id="ph2">`-`</ph>"会导致菜单项显示为分隔符 （一条横线），而不是标准菜单项。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">`items`</ph> parameter enables you to assign an array of menu items to define a submenu of this menu item.</source>
          <target state="translated"><ph id="ph1">`items`</ph>参数使你可以分配来定义该菜单项的子菜单的菜单项的数组。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>Each item in the array can also have an array of menu items assigned to it.</source>
          <target state="translated">数组中的每个项还可以分配给它的菜单项的数组。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>This enables you to create complete menu structures and assign them to the constructor for the menu item.</source>
          <target state="translated">这使你可以创建完整的菜单结构并将它们分配到的菜单项的构造函数。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">`mergeType`</ph> and <ph id="ph2">`mergeOrder`</ph> parameters allow you to determine how this menu item will behave when the menu item is merged with another menu.</source>
          <target state="translated"><ph id="ph1">`mergeType`</ph>和<ph id="ph2">`mergeOrder`</ph>参数允许你确定此菜单项与另一个菜单合并的菜单项时的行为。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>Depending on the value you specify for the <ph id="ph1">`mergeType`</ph> parameter, you can either add, remove, replace, or merge the menu item and its submenu items with the menu that it is merging with.</source>
          <target state="translated">你为根据的值的指定<ph id="ph1">`mergeType`</ph>参数，你可以添加、 删除、 替换或合并的菜单项和与它合并的菜单及其子菜单项。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">`mergeOrder`</ph> parameter determines where the menu item being created will be positioned when the menu is merged.</source>
          <target state="translated"><ph id="ph1">`mergeOrder`</ph>参数确定正在创建的菜单项在菜单合并时的放置位置。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>In addition, you can use this constructor to create a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> and have it connected to an event handler in your code that will process the click of the menu item.</source>
          <target state="translated">此外，你可以使用此构造函数创建<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>并将其连接到在代码中将处理菜单项的单击事件处理程序。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> that you pass into this constructor should be configured to call an event handler that can handle the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>将传入此构造函数应配置为调用的事件处理程序可以处理<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>By using this constructor version, you can also connect the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> events to determine when this menu item is selected.</source>
          <target state="translated">通过使用此构造函数版本，还可以连接<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph>事件，以确定何时选择此菜单项。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>You can use these events for tasks such as determining whether or not to display a check mark next to submenu items or to enable or disable menu items based on the state of the application.</source>
          <target state="translated">这些事件可用于任务，例如确定显示子菜单项旁边的复选标记或用于启用或禁用菜单项基于应用程序的状态。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> events are raised only for <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that are not parent menu items.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>将仅对引发事件<ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象不父菜单项。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>For more information on handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The following code example creates a menu item that has a caption and shortcut key.</source>
          <target state="translated">下面的代码示例创建具有标题和快捷菜单项。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The menu item also has event handlers defined for the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> events.</source>
          <target state="translated">该菜单项还具有为定义的事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>If this menu item is merged, it will add the menu item to the menu with the merge order of zero.</source>
          <target state="translated">如果此菜单项合并时，它会将菜单项添加到具有零的合并顺序菜单。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> is placed on a new line (for a menu item added to a <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> object) or in a new column (for a submenu item or menu item displayed in a <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph>).</source>
          <target state="translated">获取或设置一个值，通过该值指示是将 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 放在新行上（对于添加到 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 对象的菜单项），还是放在新列中（对于 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> 中显示的子菜单项或菜单项）。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu item is placed on a new line or in a new column; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the menu item is left in its default placement.</source>
          <target state="translated">如果菜单项放在新行上或新列中，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果菜单项保持在其默认位置，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.BarBreak%2A&gt;</ph> property to create a menu where each menu item is placed next to each other horizontally instead of in a vertical list.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.BarBreak%2A&gt;</ph>属性创建每个菜单项旁边相互而不是水平放置在垂直列表菜单。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</source>
          <target state="translated">此属性还可用于创建包含多个行的顶级菜单项的菜单栏。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>This property differs from the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Break%2A&gt;</ph> property in that a bar is displayed on the left edge of each menu item that has the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Break%2A&gt;</ph> property set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">此属性不同于<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Break%2A&gt;</ph>，其属性中的每个菜单项的左边缘显示一个栏<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Break%2A&gt;</ph>属性设置为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>The bar is only displayed when the menu item is not a top-level menu item.</source>
          <target state="translated">在菜单项不是顶级菜单项时，将仅显示栏。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> with two submenu items.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>包含两个子菜单项。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>The two submenu items are displayed horizontally instead of vertically using the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.BarBreak%2A&gt;</ph> property.</source>
          <target state="translated">这两个子菜单项水平显示而不是使用垂直<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.BarBreak%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Break">
          <source>Gets or sets a value indicating whether the item is placed on a new line (for a menu item added to a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> object) or in a new column (for a menu item or submenu item displayed in a <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph>).</source>
          <target state="translated">获取或设置一个值，通过该值指示是将该项放在新行上（对于添加到 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 对象的菜单项），还是放在新列中（对于 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> 中显示的菜单项或子菜单项）。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Break">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu item is placed on a new line or in a new column; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the menu item is left in its default placement.</source>
          <target state="translated">如果菜单项放在新行上或新列中，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果菜单项保持在其默认位置，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Break">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Break">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Break%2A&gt;</ph> property to create a menu where each menu is placed next to each other horizontally instead of in a vertical list.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Break%2A&gt;</ph>属性创建每个菜单彼此而不是水平放置在垂直列表菜单。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Break">
          <source>You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</source>
          <target state="translated">此属性还可用于创建包含多个行的顶级菜单项的菜单栏。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Break">
          <source>The following code example creates a menu with two top-level menu items on the top row and one menu item on the bottom row.</source>
          <target state="translated">下面的代码示例使用两个顶级菜单项顶部行和一个菜单项底部行上创建一个菜单。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>Gets or sets a value indicating whether a check mark appears next to the text of the menu item.</source>
          <target state="translated">获取或设置一个值，通过该值指示选中标记是否出现在菜单项文本的旁边。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there is a check mark next to the menu item; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果菜单项旁边有一个选中标记，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> property in combination with other menu items in a menu to provide state for an application.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph>结合与其他菜单提供应用程序的状态中的菜单项的属性。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>For example, you can place a check mark on a menu item in a group of items to identify the size of the font to be displayed for the text in an application.</source>
          <target state="translated">例如，可以在一组项来标识要为应用程序中的文本显示的字体大小的菜单项上放置一个复选标记。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> property to identify the selected menu item in a group of mutually exclusive menu items.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph>属性来标识一组互斥菜单项中的所选的菜单项。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>This property cannot be set to <ph id="ph1">`true`</ph> for top-level menu items.</source>
          <target state="translated">此属性不能设置为<ph id="ph1">`true`</ph>顶级菜单项。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> property to provide the state in an application.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph>属性，以便在应用程序的状态。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>In this example, a group of menu items are used to specify the color for the text in a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">在此示例中，一组菜单项用于指定中的文本的颜色<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>The event handler provided is used by the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event of three menu items.</source>
          <target state="translated">通过使用提供的事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>的三个菜单项的事件。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>Each menu item specifies a text color, <ph id="ph1">`menuItemRed`</ph> (Red), <ph id="ph2">`menuItemGreen`</ph> (Green), or <ph id="ph3">`menuItemBlue`</ph> (Blue).</source>
          <target state="translated">每个菜单项指定一种文本颜色， <ph id="ph1">`menuItemRed`</ph> （红色） <ph id="ph2">`menuItemGreen`</ph> （绿色），或<ph id="ph3">`menuItemBlue`</ph>（蓝色）。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">事件处理程序确定被单击的菜单项，将放置到选定的菜单项中，选中并更改窗体的文本颜色<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>The example requires that the <ph id="ph1">&lt;xref:System.Drawing&gt;</ph> namespace has been added to the form that this code is placed in.</source>
          <target state="translated">该示例需要<ph id="ph1">&lt;xref:System.Drawing&gt;</ph>命名空间添加到此代码放置在窗体。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>The example also requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> has been added to the form that this example code is located in that is named <ph id="ph2">`textBox1`</ph>.</source>
          <target state="translated">该示例还要求<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>已添加到窗体此代码示例将位于名为<ph id="ph2">`textBox1`</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> is a top-level menu or has children.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 是顶级菜单，或有子级。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>Occurs when the menu item is clicked or selected using a shortcut key or access key defined for the menu item.</source>
          <target state="translated">当单击菜单项或使用为该菜单项定义的快捷键或访问键选择菜单项时发生。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event occurs when this <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> is clicked by the user.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>事件发生时这<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>单击用户。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>This event also occurs if the user selects the menu item using the keyboard and presses the Enter key.</source>
          <target state="translated">此事件还会发生如果用户选择菜单项使用键盘，按 Enter 键。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>It can also occur if an access key or shortcut key is pressed that is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated">也可能发生此如果按下的访问密钥或快捷键关联<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> property for the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> contains any items, this event is not raised.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>包含任何项，则不会引发此事件。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>This event is not raised for parent menu items.</source>
          <target state="translated">适用于父菜单项不引发此事件。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event to perform tasks when a <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> is clicked.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>事件以执行任务时<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>单击。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> called <ph id="ph2">`mainMenu1`</ph> and adds two <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects, <ph id="ph4">`topMenuItem`</ph> (<ph id="ph5">`File`</ph>) and <ph id="ph6">`menuItem1`</ph> (<ph id="ph7">`Open`</ph>).</source>
          <target state="translated">该示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>调用<ph id="ph2">`mainMenu1`</ph>并添加两个<ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象， <ph id="ph4">`topMenuItem`</ph> (<ph id="ph5">`File`</ph>) 和<ph id="ph6">`menuItem1`</ph>(<ph id="ph7">`Open`</ph>)。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>It then connects the <ph id="ph1">`Click`</ph> event to the <ph id="ph2">`menuItem1_Click`</ph> event handler.</source>
          <target state="translated">然后它会连接<ph id="ph1">`Click`</ph>事件<ph id="ph2">`menuItem1_Click`</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>When the user clicks the <ph id="ph1">`Open`</ph> menu item, an <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> is initialized and displayed.</source>
          <target state="translated">当用户单击<ph id="ph1">`Open`</ph>菜单项<ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>初始化，并且会显示。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>The example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">该示例需要你已创建了<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名为<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.MenuItem">
          <source>Creates a copy of a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated">创建 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 的副本。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>Creates a copy of the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated">创建当前 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 的副本。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> that represents the duplicated menu item.</source>
          <target state="translated">表示重复菜单项的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects cannot be used in more than one place unless you obtain a copy of the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 对象无法使用在多个位置中，除非你获取一份<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>You can call this method to create a copy of this menu item for use in a <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, or other <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> within your application.</source>
          <target state="translated">你可以调用此方法以创建一份在中使用此菜单项<ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>，或其他<ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>应用程序中。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item.</source>
          <target state="translated">当克隆菜单项时，原始的菜单项中指定任何事件处理程序将继续在菜单项的克隆版本中正常工作。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>For example, if you created a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> and connected its <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event to an event handler.</source>
          <target state="translated">例如，如果你创建<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>和连接其<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>事件的事件处理程序。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>When the menu item is cloned, the cloned menu item will call the same event handler.</source>
          <target state="translated">当克隆菜单项时，克隆的菜单项将调用相同的事件处理程序。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>The following code example clones a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> and displays it in a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">下面的代码示例克隆<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>和将其显示在<ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>The example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> exists in a <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> on a form with the name of <ph id="ph3">`menuItem1`</ph> and that a <ph id="ph4">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> object named <ph id="ph5">`contextMenu1`</ph> also exists on the form.</source>
          <target state="translated">该示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>中存在<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>同名的窗体上<ph id="ph3">`menuItem1`</ph>且<ph id="ph4">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>对象名为<ph id="ph5">`contextMenu1`</ph>窗体上还存在。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> that represents the menu item to copy.</source>
          <target state="translated">表示要复制的菜单项的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>Creates a copy of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated">创建指定 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 的副本。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>Call this method to create copies of menu items that you have already created for use in a shortcut menu or another menu structure within your application.</source>
          <target state="translated">调用此方法以创建你已在你的应用程序中创建的快捷菜单或另一个菜单结构中使用的菜单项的副本。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>This version of <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt;</ph> allows you to specify a specific <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> to copy instead of the menu item that is calling the method.</source>
          <target state="translated">此版本的<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt;</ph>允许你指定特定<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>复制而不是调用方法的菜单项。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>You can use this method to initialize a new <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> object with a copy of another <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated">你可以使用此方法以初始化新<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象与另一个副本<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item.</source>
          <target state="translated">当克隆菜单项时，原始的菜单项中指定任何事件处理程序将继续在菜单项的克隆版本中正常工作。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>For example, if you created a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> and connected its <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event to an event handler.</source>
          <target state="translated">例如，如果你创建<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>和连接其<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>事件的事件处理程序。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>When the menu item is cloned, the cloned menu item will call the same event handler.</source>
          <target state="translated">当克隆菜单项时，克隆的菜单项将调用相同的事件处理程序。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>The following code example initializes a new <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> with a copy of an existing <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> that is used in a <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> on a form.</source>
          <target state="translated">下面的代码示例初始化新<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>提供的现有副本<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>，但中使用<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>窗体上。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>The code then adds the cloned <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> to a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> on the form.</source>
          <target state="translated">然后该代码将添加克隆<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>到<ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>窗体上。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> is already created and named <ph id="ph2">`menuItem1`</ph> and that a <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> control has been created and named <ph id="ph4">`contextMenu1`</ph>.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>已被创建并命名为<ph id="ph2">`menuItem1`</ph>且<ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>创建控件和将其命名<ph id="ph4">`contextMenu1`</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source>Gets or sets a value indicating whether the menu item is the default menu item.</source>
          <target state="translated">获取或设置一个值，通过该值指示菜单项是否为默认菜单项。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu item is the default item in a menu; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果菜单项是菜单中的默认菜单项，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source>The default menu item for a menu is boldfaced.</source>
          <target state="translated">菜单默认菜单项为粗体。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source>When the user double-clicks a submenu that contains a default item, the default item is selected, and the submenu is closed.</source>
          <target state="translated">当用户双击子菜单包含默认项、 选择默认项目时，和子菜单已关闭。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.DefaultItem%2A&gt;</ph> property to indicate, the default action that is expected in a menu or shortcut menu.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.DefaultItem%2A&gt;</ph>属性以指示应为菜单或快捷菜单中的默认操作。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source>The following code example creates a menu item with two submenu items.</source>
          <target state="translated">下面的代码示例创建两个子菜单项与菜单项。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source>The example sets <ph id="ph1">`menuItem2`</ph> as the default menu item using the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.DefaultItem%2A&gt;</ph> property.</source>
          <target state="translated">该示例设置<ph id="ph1">`menuItem2`</ph>作为默认菜单项使用<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.DefaultItem%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)">
          <source>Disposes of the resources (other than memory) used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated">处置由 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 占用的资源（内存除外）。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated">在完成使用 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph> 后，应调用 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph> 方法使 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)">
          <source>After calling <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> so the memory it was occupying can be reclaimed by garbage collection.</source>
          <target state="translated">在调用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph>，必须释放对所有引用<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>以便可以通过垃圾回收回收其占用的内存。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)">
          <source>Always call <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated">每次释放对 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph> 的最后一个引用前，均应调用 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)">
          <source>Otherwise, the resources the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> is using will not be freed until garbage collection calls the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> object's destructor.</source>
          <target state="translated">否则为资源<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>是使用不会被释放之前垃圾集合调用<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象的析构函数。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.MenuItem.OwnerDraw" /&gt;</ph> property of a menu item is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> and a request is made to draw the menu item.</source>
          <target state="translated">当菜单项的 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.MenuItem.OwnerDraw" /&gt;</ph> 属性设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 并且发出绘制菜单项的请求时发生。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DrawItemEventArgs&gt;</ph> argument passed to a <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.DrawItem&gt;</ph> event handler provides a <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> object that enables you to perform drawing and other graphical operations on the surface of the menu item.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DrawItemEventArgs&gt;</ph>自变量传递给<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.DrawItem&gt;</ph>事件处理程序提供<ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph>使您可以执行绘制和图面上的菜单项的其他图形操作的对象。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>You can use this event handler to create custom menus that meet the needs of your application.</source>
          <target state="translated">此事件处理程序可用于创建自定义菜单可满足你的应用程序的需求。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>The following code example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.DrawItem&gt;</ph> event.</source>
          <target state="translated">下面的代码示例演示如何处理<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.DrawItem&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>This example draws a menu item using a <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph> and a <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph>, and then draws a <ph id="ph3">&lt;xref:System.Drawing.Rectangle&gt;</ph> around the menu item.</source>
          <target state="translated">此示例绘制菜单项使用<ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>和<ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph>，，然后绘制<ph id="ph3">&lt;xref:System.Drawing.Rectangle&gt;</ph>菜单项周围。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>The drawing is performed through the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object, which is passed to the event handler in the <ph id="ph2">&lt;xref:System.Windows.Forms.DrawItemEventArgs&gt;</ph> parameter.</source>
          <target state="translated">通过执行绘图<ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>对象传递给事件处理程序中的<ph id="ph2">&lt;xref:System.Windows.Forms.DrawItemEventArgs&gt;</ph>参数。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>This example requires that you have initialized the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph> property for the item to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">此示例需要您初始化<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph>到项的属性， <ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>For the C# example, add the following code in the form's constructor, after <ph id="ph1">`InitializeComponent`</ph>, to hook up the event:</source>
          <target state="translated">对于 C# 示例中，添加窗体的构造函数，下面的代码之后<ph id="ph1">`InitializeComponent`</ph>，以便挂钩事件：</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source>Gets or sets a value indicating whether the menu item is enabled.</source>
          <target state="translated">获取或设置一个值，通过该值指示菜单项是否启用。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu item is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果启用菜单项，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> that is disabled is displayed in a gray color to indicate its state.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> ，它是已禁用显示在相应的灰色颜色指示其状态。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source>When a parent menu item is disabled, all submenu items are not displayed.</source>
          <target state="translated">当禁用父菜单项时，不会显示所有子菜单项。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> event to determine whether <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph>事件，以确定是否<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>中所显示的菜单显示之前启用提供支持进行剪切、 复制和删除操作的对象。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source>The example determines if <ph id="ph1">`textBox1`</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control on the form, is enabled, has input focus, and has text selected before enabling the <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects.</source>
          <target state="translated">该示例可确定如果<ph id="ph1">`textBox1`</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控制窗体上，启用了、 具有输入焦点，并且具有在启用之前选择的文本<ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source>This example requires that three <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects are created named <ph id="ph2">`menuCut`</ph>, <ph id="ph3">`menuCopy`</ph>, and <ph id="ph4">`menuDelete`</ph> have been created.</source>
          <target state="translated">此示例需要三个<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象创建命名<ph id="ph2">`menuCut`</ph>， <ph id="ph3">`menuCopy`</ph>，和<ph id="ph4">`menuDelete`</ph>已创建。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>Gets or sets a value indicating the position of the menu item in its parent menu.</source>
          <target state="translated">获取或设置一个值，通过该值指示菜单项在其父菜单中的位置。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>The zero-based index representing the position of the menu item in its parent menu.</source>
          <target state="translated">表示菜单项在其父菜单中位置的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>This property provides the indexed position of a menu item in the menu item collection of its parent menu.</source>
          <target state="translated">此属性提供其父菜单的菜单项集合中的菜单项的索引的位置。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>You can use this property to reposition a menu item to a different location within its menu.</source>
          <target state="translated">此属性可用于重新定位到其菜单内的不同位置的菜单项。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>You can also use this property when creating a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> to specify its position in a menu structure at the time of creation.</source>
          <target state="translated">你还可以使用此属性，在创建时<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>在创建时指定它的菜单结构中的位置。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>The following code example switches the position of two menu items in a menu.</source>
          <target state="translated">下面的代码示例将两个菜单项的菜单中的位置。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>The following code example requires that two <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects are created named <ph id="ph2">`menuItem1`</ph> and <ph id="ph3">`menuItem2`</ph>.</source>
          <target state="translated">下面的代码示例要求将两个<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象创建命名<ph id="ph2">`menuItem1`</ph>和<ph id="ph3">`menuItem2`</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>The <ph id="ph1">`menuItem1`</ph> menu item moves down one position in the menu, while <ph id="ph2">`menuItem2`</ph> moves up one position.</source>
          <target state="translated"><ph id="ph1">`menuItem1`</ph>菜单项下移一个位置在菜单中，而<ph id="ph2">`menuItem2`</ph>将上移一个位置。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>The assigned value is less than zero or greater than the item count.</source>
          <target state="translated">赋值小于零或大于项的数目。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.IsParent">
          <source>Gets a value indicating whether the menu item contains child menu items.</source>
          <target state="translated">获取一个值，通过该值指示菜单项是否包含子菜单项。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.IsParent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu item contains child menu items; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the menu is a standalone menu item.</source>
          <target state="translated">如果菜单项包含子菜单项，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果菜单为独立菜单项，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.IsParent">
          <source>You can use this property with the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Parent%2A&gt;</ph> property to navigate in code through an entire menu structure.</source>
          <target state="translated">你可以使用此属性与<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Parent%2A&gt;</ph>属性在代码中通过整个菜单结构中进行导航。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.IsParent">
          <source>The following code example determines whether there are any submenus associated with a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> named <ph id="ph2">`menuItem1`</ph>.</source>
          <target state="translated">下面的代码示例确定是否存在任何与关联的子菜单<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>名为<ph id="ph2">`menuItem1`</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.IsParent">
          <source>If any submenus exist, it disables them by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">如果存在任何子菜单，它将禁用它们通过设置<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Enabled%2A&gt;</ph>属性<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.IsParent">
          <source>The example requires that there is a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> created named <ph id="ph2">`menuItem1`</ph>.</source>
          <target state="translated">该示例需要有<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>创建的名为<ph id="ph2">`menuItem1`</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>Gets or sets a value indicating whether the menu item will be populated with a list of the Multiple Document Interface (MDI) child windows that are displayed within the associated form.</source>
          <target state="translated">获取或设置一个值，通过该值指示是否使用在关联窗体内显示的多文档界面 (MDI) 子窗口列表来填充菜单项。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a list of the MDI child windows is displayed in this menu item; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果要在此菜单项中显示 MDI 子窗口列表，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>When a menu item is selected to display an MDI child window list, the list is displayed as a submenu of the menu item.</source>
          <target state="translated">选中菜单项时要显示 MDI 子窗口列表，列表显示为子菜单的菜单项。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>Only forms that are defined as MDI child forms are displayed in the window list.</source>
          <target state="translated">仅定义为 MDI 子窗体的窗体窗口列表中显示。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>Only nine child windows can be displayed at a time.</source>
          <target state="translated">只有九个子窗口可以显示一次。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>If there are more than nine child windows displayed, a "More Windows..." menu item is displayed at the end of the window list.</source>
          <target state="translated">如果有多个九个显示的子窗口，"更多 Windows..."菜单项显示在窗口列表的末尾。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>Clicking this menu item displays a dialog box with a complete list of the child windows that are currently active.</source>
          <target state="translated">单击此菜单项显示一个包含的完整列表的当前处于活动状态的子窗口的对话框。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> that is used to display the list of currently open MDI child forms in an MDI form.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>用于的 MDI 窗体中显示当前打开的 MDI 子窗体的列表。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>Occurs when the menu needs to know the size of a menu item before drawing it.</source>
          <target state="translated">当菜单在绘制菜单项之前需要知道菜单项大小时发生。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>In order for this event to be raised, you must have the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph> property of the menu item set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">引发此事件的顺序，您必须拥有<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph>的菜单项的属性设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>This event is raised before owner drawn menus are drawn to allow for the size of the menu item to be drawn to be specified.</source>
          <target state="translated">绘制所有者描述的菜单允许的菜单项的大小绘制指定之前，将引发此事件。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MeasureItem&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MeasureItem&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> named <ph id="ph2">`MenuItem1`</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>名为<ph id="ph2">`MenuItem1`</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MeasureItem&gt;</ph> event.</source>
          <target state="translated">然后，确保与事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MeasureItem&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.MenuID">
          <source>Gets a value indicating the Windows identifier for this menu item.</source>
          <target state="translated">获取一个值，通过该值指示此菜单项的 Windows 标识符。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MenuID">
          <source>The Windows identifier for this menu item.</source>
          <target state="translated">此菜单项的 Windows 标识符。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.MenuItem">
          <source>Merges this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> with another <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 与另一个 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 合并。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.MergeMenu">
          <source>Merges this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> with another <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> and returns the resulting merged <ph id="ph3">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 与另一个 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 合并并返回合并后的 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.MergeMenu">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> that represents the merged menu item.</source>
          <target state="translated">表示合并菜单项的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu">
          <source>When you call this version of <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> returned is a copy of the current menu item that can be merged with another menu item without affecting the functionality of the current item.</source>
          <target state="translated">当调用此版本的<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>返回是当前菜单项可以合并使用而不会影响当前项的功能的另一菜单项的副本。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> method is similar to calling the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt;</ph> method that contains no parameters.</source>
          <target state="translated">此版本的<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph>方法是类似于调用<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt;</ph>不包含任何参数的方法。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> that specifies the menu item to merge with this one.</source>
          <target state="translated">指定要与该菜单项合并的菜单项的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>Merges another menu item with this menu item.</source>
          <target state="translated">将另一菜单项与该菜单项合并。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>Menu items are merged according to the value of the menu item's <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeType%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.MergeOrder%2A&gt;</ph> properties.</source>
          <target state="translated">菜单项合并的菜单项的值根据<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeType%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.MergeOrder%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> method enables you to merge two <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects (and their submenus) into a single menu.</source>
          <target state="translated">此版本的<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph>方法可以合并两个<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>为单个菜单对象 （和它们的子菜单）。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>Menu merging is handled automatically when a Multiple Document Interface (MDI) parent form and a child both have menus.</source>
          <target state="translated">当多文档界面 (MDI) 父窗体和子菜单时，将自动处理菜单合并。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>You can use this version of the method to merge two <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects (and their submenu items) located in a <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> control into a single menu within a <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">你可以使用此版本的合并两个方法<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象 （和及其子菜单项） 位于<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>为单个菜单内的控件<ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>For example, you can call this version of the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> method to merge the menu items of a File and Edit menu into a single <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> that can then be added to and displayed by a <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">例如，你可以调用此版本的<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph>方法以将文件和编辑菜单的菜单项合并到单个<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>，可以然后要添加到由和显示<ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>The following code example uses this version of the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> method to create a copy of a <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> and merge it with another.</source>
          <target state="translated">下面的代码示例使用此版本的<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph>方法来创建一份<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>并将它与另一个合并。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>The merged <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> is then added to a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> control.</source>
          <target state="translated">合并<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>随后添加到<ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>This example requires that there are two menu items called <ph id="ph1">`menuItem1`</ph> and <ph id="ph2">`menuItem2`</ph> that contain submenu items within them and a <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> named <ph id="ph4">`contextMenu1`</ph> to display the menu items.</source>
          <target state="translated">此示例需要有两个菜单项名<ph id="ph1">`menuItem1`</ph>和<ph id="ph2">`menuItem2`</ph>包含其中的子菜单项和<ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>名为<ph id="ph4">`contextMenu1`</ph>来显示菜单项。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source><ph id="ph1">`menuItem1`</ph> and <ph id="ph2">`menuItem2`</ph> have different menu items contained within them.</source>
          <target state="translated"><ph id="ph1">`menuItem1`</ph> 和<ph id="ph2">`menuItem2`</ph>具有不同的菜单项包含在它们。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>After the call to <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> is made, a consolidated menu is created.</source>
          <target state="translated">在调用后<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph>进行，合并创建菜单。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.MergeOrder">
          <source>Gets or sets a value indicating the relative position of the menu item when it is merged with another.</source>
          <target state="translated">获取或设置一个值，通过该值指示菜单项与另一个项合并时的相对位置。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeOrder">
          <source>A zero-based index representing the merge order position for this menu item.</source>
          <target state="translated">表示该菜单项的合并顺序位置的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeOrder">
          <source>The default is 0.</source>
          <target state="translated">默认值为 0。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeOrder">
          <source>The merge order of a menu item specifies the relative position that this menu item will take if the menu structure that the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> is contained in is merged with another.</source>
          <target state="translated">菜单项的合并顺序指定如果菜单结构，将需要此菜单项的相对位置<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>包含在与另一个合并。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeOrder">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeOrder%2A&gt;</ph> property to control the way a merged menu is displayed.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeOrder%2A&gt;</ph>属性来控制显示合并的菜单的方式。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeOrder">
          <source>This is a complete example, ready to run once you add it to your project.</source>
          <target state="translated">这是一个完整的示例，准备好运行后将其添加到你的项目。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.MergeType">
          <source>Gets or sets a value indicating the behavior of this menu item when its menu is merged with another.</source>
          <target state="translated">获取或设置一个值，通过该值指示该菜单项的菜单与另一个菜单合并时该菜单项的行为。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuMerge" /&gt;</ph> value that represents the menu item's merge type.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuMerge" /&gt;</ph> 值，该值表示菜单项的合并类型。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeType">
          <source>The merge type of a menu item indicates how the menu item behaves when it has the same merge order as another menu item being merged.</source>
          <target state="translated">菜单项的合并类型指示菜单项时它具有要合并的另一菜单项的合并顺序相同的行为方式。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeType">
          <source>You can use merged menus to create a consolidated menu based on two or more existing menus.</source>
          <target state="translated">合并的菜单可用于创建基于两个或多个现有菜单合并的菜单。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeType">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> with the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.MergeType%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem.MergeOrder%2A&gt;</ph> specified so that the menu item is added to the merged menu at first position.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>与<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.MergeType%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem.MergeOrder%2A&gt;</ph>指定，这样的菜单项添加到的第一个位置的合并菜单。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.MergeType">
          <source>The assigned value is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuMerge" /&gt;</ph> values.</source>
          <target state="translated">分配的值不是 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuMerge" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Mnemonic">
          <source>Gets a value indicating the mnemonic character that is associated with this menu item.</source>
          <target state="translated">获取一个值，通过该值指示与此菜单项关联的助记字符。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Mnemonic">
          <source>A character that represents the mnemonic character associated with this menu item.</source>
          <target state="translated">表示与此菜单项关联的助记字符的字符。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Mnemonic">
          <source>Returns the NUL character (ASCII value 0) if no mnemonic character is specified in the text of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated">如果在 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 的文本中没有指定助记字符，则返回空字符（ASCII 值为 0）。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Mnemonic">
          <source>The mnemonic character is the first character after an ampersand character (&amp;) in the text of the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated">助记键字符等于第一个字符的文本中后 &amp; 号字符 (&amp;) <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Mnemonic">
          <source>This property will not return a mnemonic if two ampersand characters are placed together as the ampersands are used to display an ampersand in the text of the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> instead of defining a mnemonic character.</source>
          <target state="translated">此属性将不会返回助记键，如果两个 &amp; 符它们放在一起使用 &amp; 符的文本中显示 and 符<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>而不是定义助记键字符。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event to perform tasks when a <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> is clicked.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>事件以执行任务时<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>单击。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> called <ph id="ph2">`mainMenu1`</ph> and adds two <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects, <ph id="ph4">`topMenuItem`</ph> (<ph id="ph5">`File`</ph>) and <ph id="ph6">`menuItem1`</ph> (<ph id="ph7">`Open`</ph>).</source>
          <target state="translated">该示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>调用<ph id="ph2">`mainMenu1`</ph>并添加两个<ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象， <ph id="ph4">`topMenuItem`</ph> (<ph id="ph5">`File`</ph>) 和<ph id="ph6">`menuItem1`</ph>(<ph id="ph7">`Open`</ph>)。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>It then connects the <ph id="ph1">`Click`</ph> event to the <ph id="ph2">`menuItem1_Click`</ph> event handler.</source>
          <target state="translated">然后它会连接<ph id="ph1">`Click`</ph>事件<ph id="ph2">`menuItem1_Click`</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>When the user clicks the <ph id="ph1">`Open`</ph> menu item, an <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> is initialized and displayed.</source>
          <target state="translated">当用户单击<ph id="ph1">`Open`</ph>菜单项<ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>初始化，并且会显示。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>The example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">该示例需要你已创建了<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名为<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DrawItemEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DrawItemEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.DrawItem" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.DrawItem" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MeasureItemEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MeasureItemEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.MeasureItem" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.MeasureItem" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> event to determine whether <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph>事件，以确定是否<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>中所显示的菜单显示之前启用提供支持进行剪切、 复制和删除操作的对象。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>The example determines if <ph id="ph1">`textBox1`</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control on the form, is enabled, has input focus, and has text selected before enabling the <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects.</source>
          <target state="translated">该示例可确定如果<ph id="ph1">`textBox1`</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控制窗体上，启用了、 具有输入焦点，并且具有在启用之前选择的文本<ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>This example requires that three <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects are created named <ph id="ph2">`menuCut`</ph>, <ph id="ph3">`menuCopy`</ph>, and <ph id="ph4">`menuDelete`</ph> have been created.</source>
          <target state="translated">此示例需要三个<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象创建命名<ph id="ph2">`menuCut`</ph>， <ph id="ph3">`menuCopy`</ph>，和<ph id="ph4">`menuDelete`</ph>已创建。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> class to assign help text to a <ph id="ph3">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph> of a <ph id="ph4">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph>事件<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>类将分配到的帮助文本<ph id="ph3">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph>的<ph id="ph4">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>This example requires that <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects named <ph id="ph2">`menuOpen`</ph>, <ph id="ph3">`menuSave`</ph>, and <ph id="ph4">`menuExit`</ph> are added to a <ph id="ph5">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> control on a form.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象命名的<ph id="ph2">`menuOpen`</ph>， <ph id="ph3">`menuSave`</ph>，和<ph id="ph4">`menuExit`</ph>添加到<ph id="ph5">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>窗体上的控件。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>The example also requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control, named <ph id="ph2">`statusBar1`</ph> has been added to the form.</source>
          <target state="translated">该示例还要求<ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph>控件，名为<ph id="ph2">`statusBar1`</ph>已添加到窗体。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control should contain a <ph id="ph2">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph>控件应包含<ph id="ph2">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>Gets or sets a value indicating whether the code that you provide draws the menu item or Windows draws the menu item.</source>
          <target state="translated">获取或设置一个字值，通过该值指示是由所提供的代码绘制菜单项还是由 Windows 绘制菜单项。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu item is to be drawn using code; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the menu item is to be drawn by Windows.</source>
          <target state="translated">如果使用代码绘制菜单项，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果由 Windows 绘制菜单项，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, you need to handle all drawing of the menu item.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph>属性设置为<ph id="ph2">`true`</ph>，你需要处理的菜单项的所有绘制。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>You can use this capability to create your own special menu displays.</source>
          <target state="translated">此功能可用于创建你自己的专用菜单显示。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>The following code example demonstrates a menu with an owner-drawn menu item.</source>
          <target state="translated">下面的代码示例演示一个菜单，其中一个所有者描述的菜单项。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>This example set the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph> property and uses the <ph id="ph2">`AddHandler`</ph> statement and the <ph id="ph3">`AddressOf`</ph> operator to designate a delegate to handle the <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem.DrawItem&gt;</ph> event.</source>
          <target state="translated">此示例设置<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph>属性并使用<ph id="ph2">`AddHandler`</ph>语句和<ph id="ph3">`AddressOf`</ph>运算符指定一个委托来处理<ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem.DrawItem&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>To run the example, paste it in a form that imports the <ph id="ph1">&lt;xref:System&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms&gt;</ph>, and <ph id="ph3">&lt;xref:System.Drawing&gt;</ph> namespaces.</source>
          <target state="translated">若要运行该示例，请将其粘贴在导入的窗体<ph id="ph1">&lt;xref:System&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms&gt;</ph>，和<ph id="ph3">&lt;xref:System.Drawing&gt;</ph>命名空间。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>Call <ph id="ph1">`InitializeMenu`</ph> from the form's constructor or <ph id="ph2">`Load`</ph> method.</source>
          <target state="translated">调用<ph id="ph1">`InitializeMenu`</ph>从窗体的构造函数或<ph id="ph2">`Load`</ph>方法。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>Gets a value indicating the menu that contains this menu item.</source>
          <target state="translated">获取一个值，该值指示包含此菜单项的菜单。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Menu" /&gt;</ph> that represents the menu that contains this menu item.</source>
          <target state="translated">表示包含此菜单项的菜单的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Menu" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>You can use this property to obtain the <ph id="ph1">&lt;xref:System.Windows.Forms.Menu&gt;</ph> object for a submenu.</source>
          <target state="translated">你可以使用此属性来获取<ph id="ph1">&lt;xref:System.Windows.Forms.Menu&gt;</ph>对于子菜单的对象。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>You can cast the <ph id="ph1">&lt;xref:System.Windows.Forms.Menu&gt;</ph> object returned by this property to a <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> object to manipulate it.</source>
          <target state="translated">你可以强制转换<ph id="ph1">&lt;xref:System.Windows.Forms.Menu&gt;</ph>到此属性返回的对象<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象对其进行操作。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>In this example, you create a main menu and a top-level menu item, <ph id="ph1">`menuItem1`</ph> (<ph id="ph2">`File`</ph>).</source>
          <target state="translated">在此示例中，创建一个主菜单和顶级菜单项， <ph id="ph1">`menuItem1`</ph> (<ph id="ph2">`File`</ph>)。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>You also create two menu items, <ph id="ph1">`menuItem2`</ph> (<ph id="ph2">`New`</ph>) and <ph id="ph3">`menuItem3`</ph> (<ph id="ph4">`Open`</ph>), and add them to the menu item list of <ph id="ph5">`menuItem1`</ph>.</source>
          <target state="translated">你还创建两个菜单项， <ph id="ph1">`menuItem2`</ph> (<ph id="ph2">`New`</ph>) 和<ph id="ph3">`menuItem3`</ph>(<ph id="ph4">`Open`</ph>)，并将其添加到的菜单项列表<ph id="ph5">`menuItem1`</ph>。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>Then you check to see if <ph id="ph1">`menuItem3`</ph> has got a parent menu, which is true, and display the information of this parent menu in message box.</source>
          <target state="translated">然后检查以查看是否<ph id="ph1">`menuItem3`</ph>有父菜单上，则为 true，并显示此父菜单的信息在消息框中。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>This example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">此示例需要你已创建了<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名为<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>Generates a <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> event for the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>, simulating a click by a user.</source>
          <target state="translated">为 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> 生成一个 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 事件，模拟用户的单击操作。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>You can use this menu to activate a menu item through code without passing any event information.</source>
          <target state="translated">可以使用此菜单可以激活菜单项通过代码，而无需任何事件信息。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>For example, if you want to activate a menu item based on an action that occurs in your application, you can call the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.PerformClick%2A&gt;</ph> method for that <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated">例如，如果你想要激活菜单项基于操作发生在你的应用程序，你可以调用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.PerformClick%2A&gt;</ph>方法， <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>In this example you programmatically click a menu item by using the <ph id="ph1">`PerformClick`</ph> method.</source>
          <target state="translated">在此示例中以编程方式通过单击菜单项<ph id="ph1">`PerformClick`</ph>方法。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>First, you create a main menu (<ph id="ph1">`mainMenu1`</ph>) and add to it two menu items, <ph id="ph2">`menuItem1`</ph> (<ph id="ph3">`File`</ph>) and <ph id="ph4">`menuItem2`</ph> (<ph id="ph5">`Edit`</ph>).</source>
          <target state="translated">首先，创建一个主菜单 (<ph id="ph1">`mainMenu1`</ph>) 并向其中添加两个菜单项<ph id="ph2">`menuItem1`</ph>(<ph id="ph3">`File`</ph>) 和<ph id="ph4">`menuItem2`</ph>(<ph id="ph5">`Edit`</ph>)。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>You also use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event to send data to the event handler when a menu item is clicked.</source>
          <target state="translated">你还使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>将数据发送到事件处理程序中，单击菜单项时的事件。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>Then you use the <ph id="ph1">`PerformClick`</ph> method to click the <ph id="ph2">`File`</ph> menu item.</source>
          <target state="translated">然后，您使用<ph id="ph1">`PerformClick`</ph>方法单击<ph id="ph2">`File`</ph>菜单项。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>When you start the application, the <ph id="ph1">`File`</ph> menu item is activated, and a message box that contains the text "The File menu is clicked."</source>
          <target state="translated">当启动应用程序，<ph id="ph1">`File`</ph>激活菜单项，并且一个消息框包含文本"单击菜单上的文件。"</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>appears on the screen.</source>
          <target state="translated">屏幕上显示。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>The example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">该示例需要你已创建了<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名为<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph> event for this menu item.</source>
          <target state="translated">引发该菜单项的 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>This method allows you to raise the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> event without passing any event information to the event handler.</source>
          <target state="translated">此方法允许您以引发<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph>而无需将任何事件信息传递给事件处理程序的事件。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>In this example you programmatically select a menu item by using the <ph id="ph1">`PerformSelect`</ph> method.</source>
          <target state="translated">在此示例中以编程方式通过选择菜单项<ph id="ph1">`PerformSelect`</ph>方法。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>First, you create a main menu (<ph id="ph1">`mainMenu1`</ph>) and add to it two menu items, <ph id="ph2">`menuItem1`</ph> (<ph id="ph3">`File`</ph>) and <ph id="ph4">`menuItem2`</ph> (<ph id="ph5">`Edit`</ph>).</source>
          <target state="translated">首先，创建一个主菜单 (<ph id="ph1">`mainMenu1`</ph>) 并向其中添加两个菜单项<ph id="ph2">`menuItem1`</ph>(<ph id="ph3">`File`</ph>) 和<ph id="ph4">`menuItem2`</ph>(<ph id="ph5">`Edit`</ph>)。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>You also use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> event to send data to the event handler when a menu item is selected.</source>
          <target state="translated">你还使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph>事件将选定菜单项时，将数据发送到事件处理程序。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>Then you use the <ph id="ph1">`PerformSelect`</ph> method to select the <ph id="ph2">`File`</ph> menu item.</source>
          <target state="translated">然后，您使用<ph id="ph1">`PerformSelect`</ph>方法来选择<ph id="ph2">`File`</ph>菜单项。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>When you start the application, the <ph id="ph1">`File`</ph> menu item is selected, and a message box that contains the text "The File menu is selected."</source>
          <target state="translated">当启动应用程序，<ph id="ph1">`File`</ph>选择菜单项，并且一个消息框包含文本"选定菜单上的文件。"</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>appears on the screen.</source>
          <target state="translated">屏幕上显示。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>The example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">该示例需要你已创建了<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名为<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.MenuItem.Popup">
          <source>Occurs before a menu item's list of menu items is displayed.</source>
          <target state="translated">在显示菜单项的菜单项列表之前发生。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Popup">
          <source>This event only occurs when a menu item has submenu items to display.</source>
          <target state="translated">如果菜单项包含子菜单项以显示仅发生此事件。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Popup">
          <source>You can use this event handler to add, remove, enable, disable, check, or uncheck menu items based on the state of your application before they are displayed.</source>
          <target state="translated">此事件处理程序可用于添加、 删除、 启用、 禁用、 检查，或取消选中基于你的应用程序的状态之前所显示的菜单项。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Popup">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Popup">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> event to determine whether <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph>事件，以确定是否<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>中所显示的菜单显示之前启用提供支持进行剪切、 复制和删除操作的对象。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Popup">
          <source>The example determines if <ph id="ph1">`textBox1`</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control on the form, is enabled, has input focus, and has text selected before enabling the <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects.</source>
          <target state="translated">该示例可确定如果<ph id="ph1">`textBox1`</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控制窗体上，启用了、 具有输入焦点，并且具有在启用之前选择的文本<ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Popup">
          <source>This example requires that three <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects are created named <ph id="ph2">`menuCut`</ph>, <ph id="ph3">`menuCopy`</ph>, and <ph id="ph4">`menuDelete`</ph> have been created.</source>
          <target state="translated">此示例需要三个<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象创建命名<ph id="ph2">`menuCut`</ph>， <ph id="ph3">`menuCopy`</ph>，和<ph id="ph4">`menuDelete`</ph>已创建。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>, if checked, displays a radio-button instead of a check mark.</source>
          <target state="translated">获取或设置一个值，通过该值指示 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>（如果已选中）是否显示单选按钮而不是选中标记。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a radio-button is to be used instead of a check mark; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the standard check mark is to be displayed when the menu item is checked.</source>
          <target state="translated">如果要使用的是单选按钮而不是选中标记，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果菜单项选中时要显示的是标准选中标记，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>Check marks do not necessarily imply a mutually exclusive state for a group of menu items.</source>
          <target state="translated">选中标记并不一定表示一组菜单项的互斥状态。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>You can use this property to indicate to the user that the check mark of a menu item is mutually exclusive.</source>
          <target state="translated">此属性可用于向用户指示菜单项的复选标记是互斥的。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> property to change the state of an application.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph>属性来更改应用程序的状态。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>In the example, a group of menu items are provided that are used to specify the color for the text in an <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">在示例中，一组菜单项将提供用于指定中的文本的颜色<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>In the example, the event handler provided is used by the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event of the three menu items.</source>
          <target state="translated">在示例中，使用提供的事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>的三个菜单项的事件。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>Each menu item specifies a color, <ph id="ph1">`menuItemRed`</ph>, <ph id="ph2">`menuItemGreen`</ph>, or <ph id="ph3">`menuItemBlue`</ph>.</source>
          <target state="translated">每个菜单项指定一种颜色， <ph id="ph1">`menuItemRed`</ph>， <ph id="ph2">`menuItemGreen`</ph>，或<ph id="ph3">`menuItemBlue`</ph>。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control, named <ph id="ph2">`textBox1`</ph>.</source>
          <target state="translated">事件处理程序确定被单击的菜单项，将放置到选定的菜单项中，选中并更改窗体的文本颜色<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件，名为<ph id="ph2">`textBox1`</ph>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.RadioCheck%2A&gt;</ph> property to demonstrate how a radio-button check is used to show menu items that are mutually exclusive.</source>
          <target state="translated">此示例还使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.RadioCheck%2A&gt;</ph>属性来演示如何使用单选按钮检查来显示菜单项互相排斥。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Drawing?displayProperty=nameWithType&gt;</ph> namespace has been added to the form that contains this code.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Drawing?displayProperty=nameWithType&gt;</ph>命名空间添加到窗体，其中包含此代码。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>Occurs when the user places the pointer over a menu item.</source>
          <target state="translated">当用户将指针放在菜单项上时发生。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>This event is typically raised when the user places the mouse pointer over the menu item.</source>
          <target state="translated">通常，用户将鼠标指针放在菜单项时，将引发此事件。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>The event can also be raised when the user highlights a menu item using the keyboard by scrolling to the menu item with the arrow keys.</source>
          <target state="translated">用户突出显示菜单项使用键盘，使用箭头键滚动到的菜单项时，也可以引发该事件。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>You can use this event to display a detailed help string pertaining to this menu item in an application's status bar.</source>
          <target state="translated">此事件可用于显示有关应用程序的状态栏中该菜单项的详细的帮助字符串。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> property for the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> contains any items, this event is not raised.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>包含任何项，则不会引发此事件。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>This event is not raised for parent menu items.</source>
          <target state="translated">适用于父菜单项不引发此事件。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> class to assign help text to a <ph id="ph3">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph> of a <ph id="ph4">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph>事件<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>类将分配到的帮助文本<ph id="ph3">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph>的<ph id="ph4">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>This example requires that <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects named <ph id="ph2">`menuOpen`</ph>, <ph id="ph3">`menuSave`</ph>, and <ph id="ph4">`menuExit`</ph> are added to a <ph id="ph5">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> control on a form.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象命名的<ph id="ph2">`menuOpen`</ph>， <ph id="ph3">`menuSave`</ph>，和<ph id="ph4">`menuExit`</ph>添加到<ph id="ph5">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>窗体上的控件。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>The example also requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control, named <ph id="ph2">`statusBar1`</ph> has been added to the form.</source>
          <target state="translated">该示例还要求<ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph>控件，名为<ph id="ph2">`statusBar1`</ph>已添加到窗体。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control should contain a <ph id="ph2">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph>控件应包含<ph id="ph2">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Shortcut">
          <source>Gets or sets a value indicating the shortcut key associated with the menu item.</source>
          <target state="translated">获取或设置一个值，通过该值指示与菜单项关联的快捷键。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Shortcut">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Shortcut">
          <source>The default is <ph id="ph1">&lt;see langword="Shortcut.None" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="Shortcut.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Shortcut">
          <source>Shortcut keys provide a method for users to activate frequently used menu items in your menu system and to provide keyboard access to your application for those users who do not have access to a mouse or other pointer device.</source>
          <target state="translated">键盘快捷方式提供菜单系统中，并提供对你的应用程序为这些用户不具有到鼠标或其他指针设备的访问权限的键盘访问，用户经常激活的方法使用菜单项。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Shortcut">
          <source>The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</source>
          <target state="translated">下面的代码示例创建一个菜单项、 设置的标题，将分配的快捷键，进行菜单项可见，并显示菜单项的快捷键显示。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Shortcut">
          <source>The example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> has been created that is named <ph id="ph2">`menuItem1`</ph>.</source>
          <target state="translated">该示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>已创建了名为<ph id="ph2">`menuItem1`</ph>。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Shortcut">
          <source>The assigned value is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> values.</source>
          <target state="translated">分配的值不是 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.ShowShortcut">
          <source>Gets or sets a value indicating whether the shortcut key that is associated with the menu item is displayed next to the menu item caption.</source>
          <target state="translated">获取或设置一个值，通过该值指示与菜单项关联的快捷键是否在菜单项标题的旁边显示。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.ShowShortcut">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the shortcut key combination is displayed next to the menu item caption; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the shortcut key combination is not to be displayed.</source>
          <target state="translated">如果快捷组合键在菜单项标题的旁边显示，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果不显示快捷组合键，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.ShowShortcut">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.ShowShortcut">
          <source>You can use this property to provide the option for users to hide shortcuts from menus to conserve menu space or to hide a shortcut key from being displayed.</source>
          <target state="translated">此属性可用于提供用户隐藏快捷方式菜单中的选项来节省菜单空间或隐藏显示的快捷键。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.ShowShortcut">
          <source>The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</source>
          <target state="translated">下面的代码示例创建一个菜单项、 设置的标题，将分配的快捷键，进行菜单项可见，并显示菜单项的快捷键显示。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.ShowShortcut">
          <source>The example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> has been created that is named <ph id="ph2">`menuItem1`</ph>.</source>
          <target state="translated">该示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>已创建了名为<ph id="ph2">`menuItem1`</ph>。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>Gets or sets a value indicating the caption of the menu item.</source>
          <target state="translated">获取或设置一个值，通过该值指示菜单项标题。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>The text caption of the menu item.</source>
          <target state="translated">菜单项的文本标题。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>When you specify a caption for your menu item, you can also specify an access key by placing an '&amp;' before the character to be used as the access key.</source>
          <target state="translated">为菜单项指定标题时，还可以通过将一个 &amp; 字符用作访问密钥之前指定的访问密钥。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&amp;File".</source>
          <target state="translated">例如，若要为访问键指定"文件"中的"F"，你将指定为该菜单项标题"&amp; 文件"。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>You can use this feature to provide keyboard navigation for your menus.</source>
          <target state="translated">可以使用此功能可供你菜单的键盘导航。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>Setting this property to "<ph id="ph1">`-`</ph>" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</source>
          <target state="translated">此属性设置为"<ph id="ph1">`-`</ph>"会导致菜单项显示为分隔符 （一条横线），而不是标准菜单项。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</source>
          <target state="translated">下面的代码示例创建一个菜单项、 设置的标题，将分配的快捷键，进行菜单项可见，并显示菜单项的快捷键显示。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>The example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> has been created that is named <ph id="ph2">`menuItem1`</ph>.</source>
          <target state="translated">该示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>已创建了名为<ph id="ph2">`menuItem1`</ph>。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.ToString">
          <source>Returns a string that represents the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated">返回表示 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 的字符串。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.ToString">
          <source>A string that represents the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated">表示当前 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 的字符串。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.ToString">
          <source>The string includes the type and the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.MenuItem.Text" /&gt;</ph> property of the control.</source>
          <target state="translated">该字符串包括该控件的类型和 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.MenuItem.Text" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Visible">
          <source>Gets or sets a value indicating whether the menu item is visible.</source>
          <target state="translated">获取或设置一个值，通过该值指示菜单项是否可见。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Visible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu item will be made visible on the menu; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果菜单项在菜单上为可见，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Visible">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Visible">
          <source>You can use this property to modify a menu structure without having to merge menus or disable menus.</source>
          <target state="translated">此属性可用于修改而无需合并菜单或禁用菜单的菜单结构。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Visible">
          <source>For example, if you want to hide a complete section of functionality from the menus for your application, you can hide them from the user by setting this property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">例如，如果你想要隐藏完成从你的应用程序的菜单的功能的一部分，您可以隐藏它们从用户通过将此属性设置为<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Visible">
          <source>The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</source>
          <target state="translated">下面的代码示例创建一个菜单项、 设置的标题，将分配的快捷键，进行菜单项可见，并显示菜单项的快捷键显示。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Visible">
          <source>The example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> has been created that is named <ph id="ph2">`menuItem1`</ph>.</source>
          <target state="translated">该示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>已创建了名为<ph id="ph2">`menuItem1`</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>