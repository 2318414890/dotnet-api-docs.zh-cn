<Type Name="HtmlHistory" FullName="System.Windows.Forms.HtmlHistory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2baaff48a61e5aea965dfd5b7445ce38e3fb6224" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30638981" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HtmlHistory : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlHistory extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.HtmlHistory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlHistory&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlHistory sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>管理当前会话内用户访问过的文档和网站列表。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 托管 HTML 文档对象模型 (DOM) 将跟踪的用户访问过内的站点给定*会话*。 A*会话*承载托管的 HTML DOM 的应用程序启动之前应用程序关闭时，指从时间的长度。  
  
 当你使用<xref:System.Windows.Forms.WebBrowser.Url%2A>属性或<xref:System.Windows.Forms.WebBrowser.Navigate%2A>方法<xref:System.Windows.Forms.WebBrowser>控件导航到新的 Web 页中，Internet 资源管理器可以从服务器检索该页面的最新版本，或显示当前处于的版本Internet Explorer 缓存。 与此相反，当使用<xref:System.Windows.Forms.HtmlHistory>导航此堆栈中向前和向后，Internet Explorer 将显示页面从本地计算机的缓存已下载的 Web 内容，除非服务器指示文档的内容应过期立即。 历史记录列表和在 Internet Explorer 中缓存的详细信息，请参阅 234067，"如何到防止缓存在 Internet Explorer 中，"在 Microsoft 知识库文章在[ http://support.microsoft.com ](http://go.microsoft.com/fwlink/?linkid=37115)。  
  
 主体方法<xref:System.Windows.Forms.HtmlHistory>是<xref:System.Windows.Forms.HtmlHistory.Go%2A>，它定位到导航堆栈中的指定位置或到新的统一资源定位器 (URL)。 <xref:System.Windows.Forms.HtmlHistory.Forward%2A>和<xref:System.Windows.Forms.HtmlHistory.Back%2A>方法和向下定位向上导航堆栈中，分别按所需的条目数。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Back">
      <MemberSignature Language="C#" Value="public void Back (int numberBack);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Back(int32 numberBack) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlHistory.Back(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Back (numberBack As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Back(int numberBack);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberBack" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberBack">要在导航堆栈中向后定位的项数。 此数字必须是正整数。</param>
        <summary>根据指定的项数在导航堆栈中向后定位。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果数提供给`numBack`超过的历史记录中以前访问过的项数<xref:System.Windows.Forms.WebBrowser>控件将导航到历史记录中的第一项，例如，第一个统一资源定位器 (URL) 访问在当前过程浏览器会话。  
  
 如果不存在的导航堆栈中、 当前页面后面项，则调用<xref:System.Windows.Forms.HtmlHistory.Back%2A>不会有不起作用，但它不会引发错误。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">参数不是一个 32 位正整数。</exception>
        <altmember cref="M:System.Windows.Forms.HtmlHistory.Forward(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlHistory.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放由 <see cref="T:System.Windows.Forms.HtmlHistory" /> 使用的所有资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用<xref:System.Windows.Forms.HtmlHistory.Dispose%2A>方法完成后使用<xref:System.Windows.Forms.HtmlHistory>对象。 <xref:System.Windows.Forms.HtmlHistory.Dispose%2A> 离开<xref:System.Windows.Forms.HtmlHistory>中不可用状态的对象。 在调用<xref:System.Windows.Forms.HtmlHistory.Dispose%2A>，必须释放对所有引用<xref:System.Windows.Forms.HtmlHistory>以便垃圾回收器才能回收的内存，<xref:System.Windows.Forms.HtmlHistory>占用。 有关详细信息，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
> [!NOTE]
>  始终调用<xref:System.Windows.Forms.HtmlHistory.Dispose%2A>在发布到最后一个引用之前<xref:System.Windows.Forms.HtmlHistory>。 否则为资源<xref:System.Windows.Forms.HtmlHistory>是使用不会被释放之前垃圾回收器调用对象的`Finalize`方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DomHistory">
      <MemberSignature Language="C#" Value="public object DomHistory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DomHistory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlHistory.DomHistory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomHistory As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DomHistory { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此类包装的非托管接口。</summary>
        <value>可以强制转换为 <see langword="IOmHistory" /> 接口指针的 <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你将需要将添加到非托管 MSHTML.dll 的引用，以便使用<xref:System.Windows.Forms.HtmlHistory.DomHistory%2A>。 有关详细信息，请参阅[导入类型库当作程序集](~/docs/framework/interop/importing-a-type-library-as-an-assembly.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Forward">
      <MemberSignature Language="C#" Value="public void Forward (int numberForward);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Forward(int32 numberForward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlHistory.Forward(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Forward (numberForward As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Forward(int numberForward);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberForward" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberForward">要在导航堆栈中向前定位的项数。 此数字必须是正整数。</param>
        <summary>根据指定的项数在导航堆栈中向前定位。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果数提供给`numForward`超过的历史记录中以前访问过的项数<xref:System.Windows.Forms.WebBrowser>控件将导航至最后一项的历史记录中。  
  
 如果不存在导航堆栈中的当前页面之前项，则调用<xref:System.Windows.Forms.HtmlHistory.Forward%2A>不会有不起作用，但它不会引发错误。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">参数不是一个 32 位正整数。</exception>
        <altmember cref="M:System.Windows.Forms.HtmlHistory.Back(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Go">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>定位到指定为统一资源定位器 (URL) 或导航堆栈中某一位置的网页。</summary>
        <altmember cref="M:System.Windows.Forms.HtmlHistory.Back(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.HtmlHistory.Forward(System.Int32)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Go">
      <MemberSignature Language="C#" Value="public void Go (int relativePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Go(int32 relativePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlHistory.Go(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Go (relativePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Go(int relativePosition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="relativePosition">导航堆栈中要显示的项。</param>
        <summary>定位到浏览器历史记录中的指定相对位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.HtmlHistory.Go%2A>带负参数等效于使用<xref:System.Windows.Forms.HtmlHistory.Back%2A>方法; 相反，使用<xref:System.Windows.Forms.HtmlHistory.Go%2A>正数的参数与相当于使用<xref:System.Windows.Forms.HtmlHistory.Forward%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.HtmlHistory.Go" />
      </Docs>
    </Member>
    <Member MemberName="Go">
      <MemberSignature Language="C#" Value="public void Go (string urlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Go(string urlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlHistory.Go(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Go (urlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Go(System::String ^ urlString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">要显示的 URL。 它可以是相对 URL 或虚拟 URL（如 page.html、path/page.html 或 /path/to/page.html），在这种情况下，当前网页的 URL 用作基准。</param>
        <summary>定位到指定的统一资源定位器 (URL)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.HtmlHistory.Go%2A>等效于使用<xref:System.Windows.Forms.WebBrowser.Url%2A>属性或<xref:System.Windows.Forms.WebBrowser.Navigate%2A>方法<xref:System.Windows.Forms.WebBrowser>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.HtmlHistory.Go" />
      </Docs>
    </Member>
    <Member MemberName="Go">
      <MemberSignature Language="C#" Value="public void Go (Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Go(class System.Uri url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlHistory.Go(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Go (url As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Go(Uri ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="url">作为 <see cref="T:System.Uri" /> 对象的 URL。</param>
        <summary>定位到指定的统一资源定位器 (URL)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.HtmlHistory.Go%2A>等效于使用<xref:System.Windows.Forms.WebBrowser.Url%2A>属性或<xref:System.Windows.Forms.WebBrowser.Navigate%2A>方法<xref:System.Windows.Forms.WebBrowser>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.HtmlHistory.Go" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlHistory.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取历史记录堆栈的大小。</summary>
        <value>统一资源定位器 (URL) 历史记录中的当前项数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你想要确定多少个条目存在之前或之后导航堆栈中当前的 URL，你将需要自己维护此计数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>