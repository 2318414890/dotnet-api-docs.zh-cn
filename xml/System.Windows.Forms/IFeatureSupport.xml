<Type Name="IFeatureSupport" FullName="System.Windows.Forms.IFeatureSupport">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f7822b74e5b3d6a5a1659ccc7dde76db7ef9dc7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30645441" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFeatureSupport" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFeatureSupport" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IFeatureSupport" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFeatureSupport" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFeatureSupport" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>指定一个标准接口，用于从当前系统检索功能信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在类中实现时<xref:System.Windows.Forms.IFeatureSupport>提供可用来确定系统上当前是否安装了一项功能，并以获取一项功能的版本号的方法。 调用<xref:System.Windows.Forms.IFeatureSupport.IsPresent%2A>以确定是否一项功能或特定版本的一项功能，当前已安装。 调用<xref:System.Windows.Forms.IFeatureSupport.GetVersionPresent%2A>以确定安装的功能的版本号。  
  
 请参阅<xref:System.Windows.Forms.FeatureSupport>和<xref:System.Windows.Forms.OSFeature>为此接口的实现的类。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Windows.Forms.OSFeature>实现<xref:System.Windows.Forms.IFeatureSupport>，将查询来<xref:System.Windows.Forms.OSFeature.LayeredWindows>功能。 版本检查以查看它是否是`null`，以确定是否存在该功能。 结果显示在文本框中。 此代码假定`textBox1`已创建并放置在窗体上。  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FeatureSupport" />
    <altmember cref="T:System.Windows.Forms.OSFeature" />
  </Docs>
  <Members>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public Version GetVersionPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Version GetVersionPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IFeatureSupport.GetVersionPresent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVersionPresent (feature As Object) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version ^ GetVersionPresent(System::Object ^ feature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature">所要求版本的功能。</param>
        <summary>检索指定功能的版本。</summary>
        <returns>表示指定功能的版本号的 <see cref="T:System.Version" />；如果该功能未安装，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法的实现，请参阅<xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Windows.Forms.OSFeature>实现<xref:System.Windows.Forms.IFeatureSupport>，将查询来<xref:System.Windows.Forms.OSFeature.LayeredWindows>功能。 版本检查以查看它是否是`null`，以确定是否存在该功能。 结果显示在文本框中。 此代码假定`textBox1`已创建并放置在窗体上。  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="T:System.Windows.Forms.OSFeature" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>确定指定的功能在系统中当前是否可用。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public bool IsPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IFeatureSupport.IsPresent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsPresent (feature As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsPresent(System::Object ^ feature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature">要查找的功能。</param>
        <summary>确定系统当前是否有指定功能的任意版本。</summary>
        <returns>
          如果提供该功能，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例使用<xref:System.Windows.Forms.OSFeature>实现<xref:System.Windows.Forms.IFeatureSupport>，将查询来<xref:System.Windows.Forms.OSFeature.LayeredWindows>功能。 版本检查以查看它是否是`null`，以确定是否存在该功能。 结果显示在文本框中。 此代码假定`textBox1`已创建并放置在窗体上。  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="T:System.Windows.Forms.OSFeature" />
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public bool IsPresent (object feature, Version minimumVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPresent(object feature, class System.Version minimumVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IFeatureSupport.IsPresent(System.Object,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsPresent (feature As Object, minimumVersion As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsPresent(System::Object ^ feature, Version ^ minimumVersion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
        <Parameter Name="minimumVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="feature">要查找的功能。</param>
        <param name="minimumVersion">
          <see cref="T:System.Version" /> 表示要查找功能的最小版本号。</param>
        <summary>确定系统当前是否有指定功能的指定版本或更新版本。</summary>
        <returns>
          如果有所请求的该功能版本，值为 <see langword="true" />；反之，值为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例使用<xref:System.Windows.Forms.OSFeature>实现<xref:System.Windows.Forms.IFeatureSupport>，将查询来<xref:System.Windows.Forms.OSFeature.LayeredWindows>功能。 版本检查以查看它是否是`null`，以确定是否存在该功能。 结果显示在文本框中。 此代码假定`textBox1`已创建并放置在窗体上。  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="T:System.Windows.Forms.OSFeature" />
      </Docs>
    </Member>
  </Members>
</Type>