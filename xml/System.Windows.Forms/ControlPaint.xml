<Type Name="ControlPaint" FullName="System.Windows.Forms.ControlPaint">
  <TypeSignature Language="C#" Value="public sealed class ControlPaint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlPaint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlPaint" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ControlPaint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlPaint sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="36818-101">提供用于绘制常用 Windows 控件及其元素的方法。</span><span class="sxs-lookup"><span data-stu-id="36818-101">Provides methods used to paint common Windows controls and their elements.</span></span> <span data-ttu-id="36818-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="36818-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-103">中包含的方法<xref:System.Windows.Forms.ControlPaint>类可用于绘制自己的控件或元素的控件。</span><span class="sxs-lookup"><span data-stu-id="36818-103">The methods contained in the <xref:System.Windows.Forms.ControlPaint> class enable you to draw your own controls or elements of controls.</span></span> <span data-ttu-id="36818-104">如果满足以下条件，你可以控制你自己的控件的绘制<xref:System.Windows.Forms.ControlStyles.UserPaint>位设置为`true`控件。</span><span class="sxs-lookup"><span data-stu-id="36818-104">You can control the drawing of your own controls if the <xref:System.Windows.Forms.ControlStyles.UserPaint> bit is set to `true` for the control.</span></span> <span data-ttu-id="36818-105">你可以获取或设置样式位，通过调用<xref:System.Windows.Forms.Control.GetStyle%2A>或<xref:System.Windows.Forms.Control.SetStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="36818-105">You can get or set the style bits by calling the <xref:System.Windows.Forms.Control.GetStyle%2A> or <xref:System.Windows.Forms.Control.SetStyle%2A> methods.</span></span> <span data-ttu-id="36818-106">你可以设置为任何控件的多个样式位。</span><span class="sxs-lookup"><span data-stu-id="36818-106">You can set multiple style bits for any control.</span></span> <span data-ttu-id="36818-107"><xref:System.Windows.Forms.ControlStyles>可以与按位运算组合枚举成员。</span><span class="sxs-lookup"><span data-stu-id="36818-107">The <xref:System.Windows.Forms.ControlStyles> enumeration members can be combined with bitwise operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36818-108">下面的代码示例使用之一<xref:System.Windows.Forms.ControlPaint>构造函数来绘制一个平面<xref:System.Windows.Forms.Button>控件。</span><span class="sxs-lookup"><span data-stu-id="36818-108">The following code example uses one of the <xref:System.Windows.Forms.ControlPaint> constructors to draw a flat <xref:System.Windows.Forms.Button> control.</span></span>  
  
 [!code-cpp[ButtonState#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ButtonState/CPP/buttonstate1.cpp#2)]
 [!code-csharp[ButtonState#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ButtonState/CS/buttonstate1.cs#2)]
 [!code-vb[ButtonState#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ButtonState/VB/buttonstate1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Control" />
    <altmember cref="T:System.Windows.Forms.ControlStyles" />
  </Docs>
  <Members>
    <Member MemberName="ContrastControlDark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color ContrastControlDark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Color ContrastControlDark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ControlPaint.ContrastControlDark" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContrastControlDark As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Color ContrastControlDark { System::Drawing::Color get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36818-109">获取用作 <see cref="P:System.Drawing.SystemColors.ControlDark" /> 颜色的颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-109">Gets the color to use as the <see cref="P:System.Drawing.SystemColors.ControlDark" /> color.</span></span></summary>
        <value><span data-ttu-id="36818-110">用作 <see cref="T:System.Drawing.Color" /> 颜色的 <see cref="P:System.Drawing.SystemColors.ControlDark" />。</span><span class="sxs-lookup"><span data-stu-id="36818-110">The <see cref="T:System.Drawing.Color" /> to use as the <see cref="P:System.Drawing.SystemColors.ControlDark" /> color.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-111">如果用户已启用<xref:System.Windows.Forms.SystemInformation.HighContrast%2A>模式下，此属性设置为<xref:System.Drawing.SystemColors.WindowFrame%2A?displayProperty=nameWithType>; 否则为它设置为<xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36818-111">If the user has enabled the <xref:System.Windows.Forms.SystemInformation.HighContrast%2A> mode, this property is set to <xref:System.Drawing.SystemColors.WindowFrame%2A?displayProperty=nameWithType>; otherwise, it is set to <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemInformation" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmap16Bit">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmap16Bit (System.Drawing.Bitmap bitmap, System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmap16Bit(class System.Drawing.Bitmap bitmap, valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(System.Drawing.Bitmap,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateHBitmap16Bit(System::Drawing::Bitmap ^ bitmap, System::Drawing::Color background);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="bitmap"><span data-ttu-id="36818-112">要创建的 <see cref="T:System.Drawing.Bitmap" />。</span><span class="sxs-lookup"><span data-stu-id="36818-112">The <see cref="T:System.Drawing.Bitmap" /> to create.</span></span></param>
        <param name="background"><span data-ttu-id="36818-113">作为背景色的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-113">The <see cref="T:System.Drawing.Color" /> of the background.</span></span></param>
        <summary><span data-ttu-id="36818-114">创建 16 位颜色位图。</span><span class="sxs-lookup"><span data-stu-id="36818-114">Creates a 16-bit color bitmap.</span></span></summary>
        <returns><span data-ttu-id="36818-115">表示位图句柄的 <see cref="T:System.IntPtr" />。</span><span class="sxs-lookup"><span data-stu-id="36818-115">An <see cref="T:System.IntPtr" /> representing the handle to the bitmap.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmapColorMask">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmapColorMask (System.Drawing.Bitmap bitmap, IntPtr monochromeMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmapColorMask(class System.Drawing.Bitmap bitmap, native int monochromeMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(System.Drawing.Bitmap,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateHBitmapColorMask(System::Drawing::Bitmap ^ bitmap, IntPtr monochromeMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="monochromeMask" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="bitmap"><span data-ttu-id="36818-116">要创建的 <see cref="T:System.Drawing.Bitmap" />。</span><span class="sxs-lookup"><span data-stu-id="36818-116">The <see cref="T:System.Drawing.Bitmap" /> to create.</span></span></param>
        <param name="monochromeMask"><span data-ttu-id="36818-117">指向单色掩码的指针。</span><span class="sxs-lookup"><span data-stu-id="36818-117">A pointer to the monochrome mask.</span></span></param>
        <summary><span data-ttu-id="36818-118">在图像外创建 Win32 <see langword="HBITMAP" />。</span><span class="sxs-lookup"><span data-stu-id="36818-118">Creates a Win32 <see langword="HBITMAP" /> out of the image.</span></span></summary>
        <returns><span data-ttu-id="36818-119">表示位图句柄的 <see cref="T:System.IntPtr" />。</span><span class="sxs-lookup"><span data-stu-id="36818-119">An <see cref="T:System.IntPtr" /> representing the handle to the bitmap.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-120">你将负责取消将分配给`HBITMAP`。</span><span class="sxs-lookup"><span data-stu-id="36818-120">You are responsible for de-allocating the `HBITMAP`.</span></span> <span data-ttu-id="36818-121">如果映像使用透明度，则将用指定颜色填充背景。</span><span class="sxs-lookup"><span data-stu-id="36818-121">If the image uses transparency, the background will be filled with the specified color.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmapTransparencyMask">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmapTransparencyMask (System.Drawing.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmapTransparencyMask(class System.Drawing.Bitmap bitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(System.Drawing.Bitmap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateHBitmapTransparencyMask(System::Drawing::Bitmap ^ bitmap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
      </Parameters>
      <Docs>
        <param name="bitmap"><span data-ttu-id="36818-122">要为其创建透明屏蔽的 <see cref="T:System.Drawing.Bitmap" />。</span><span class="sxs-lookup"><span data-stu-id="36818-122">The <see cref="T:System.Drawing.Bitmap" /> to create the transparency mask for.</span></span></param>
        <summary><span data-ttu-id="36818-123">为指定位图创建颜色掩码，指示哪种颜色应显示为透明。</span><span class="sxs-lookup"><span data-stu-id="36818-123">Creates a color mask for the specified bitmap that indicates which color should be displayed as transparent.</span></span></summary>
        <returns><span data-ttu-id="36818-124"><see cref="T:System.Drawing.Bitmap" /> 屏蔽的句柄。</span><span class="sxs-lookup"><span data-stu-id="36818-124">The handle to the <see cref="T:System.Drawing.Bitmap" /> mask.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-125">你负责释放位图。</span><span class="sxs-lookup"><span data-stu-id="36818-125">You are responsible for de-allocating the bitmap.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dark">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-126">为控件创建一个新的深颜色对象。</span><span class="sxs-lookup"><span data-stu-id="36818-126">Creates a new dark color object for the control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Dark (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Dark(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dark (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Dark(System::Drawing::Color baseColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor"><span data-ttu-id="36818-127">要变深的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-127">The <see cref="T:System.Drawing.Color" /> to be darkened.</span></span></param>
        <summary><span data-ttu-id="36818-128">按指定的颜色为控件创建一个新的深颜色对象。</span><span class="sxs-lookup"><span data-stu-id="36818-128">Creates a new dark color object for the control from the specified color.</span></span></summary>
        <returns><span data-ttu-id="36818-129"><see cref="T:System.Drawing.Color" /> 表示控件上的深颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-129">A <see cref="T:System.Drawing.Color" /> that represents the dark color on the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-130">如果指定<xref:System.Drawing.Color>是之一<xref:System.Drawing.SystemColors>，颜色转换为<xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType>颜色; 否则，减少的颜色亮度值。</span><span class="sxs-lookup"><span data-stu-id="36818-130">If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType> color; otherwise, the color's luminosity value is decreased.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Dark (System.Drawing.Color baseColor, float percOfDarkDark);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Dark(valuetype System.Drawing.Color baseColor, float32 percOfDarkDark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dark (baseColor As Color, percOfDarkDark As Single) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Dark(System::Drawing::Color baseColor, float percOfDarkDark);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
        <Parameter Name="percOfDarkDark" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="baseColor"><span data-ttu-id="36818-131">要变深的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-131">The <see cref="T:System.Drawing.Color" /> to be darkened.</span></span></param>
        <param name="percOfDarkDark"><span data-ttu-id="36818-132">要将指定 <see cref="T:System.Drawing.Color" /> 变深的百分比。</span><span class="sxs-lookup"><span data-stu-id="36818-132">The percentage to darken the specified <see cref="T:System.Drawing.Color" />.</span></span></param>
        <summary><span data-ttu-id="36818-133">根据指定的颜色为控件创建一个新的深颜色对象并按照指定的百分比使其颜色变深。</span><span class="sxs-lookup"><span data-stu-id="36818-133">Creates a new dark color object for the control from the specified color and darkens it by the specified percentage.</span></span></summary>
        <returns><span data-ttu-id="36818-134">一个 <see cref="T:System.Drawing.Color" />，它代表控件上的深色。</span><span class="sxs-lookup"><span data-stu-id="36818-134">A <see cref="T:System.Drawing.Color" /> that represent the dark color on the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-135">如果指定<xref:System.Drawing.Color>是之一<xref:System.Drawing.SystemColors>，颜色转换为<xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType>颜色; 否则，减少的颜色亮度值。</span><span class="sxs-lookup"><span data-stu-id="36818-135">If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType> color; otherwise, the color's luminosity value is decreased.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DarkDark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color DarkDark (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color DarkDark(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DarkDark(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DarkDark (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color DarkDark(System::Drawing::Color baseColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor"><span data-ttu-id="36818-136">要变深的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-136">The <see cref="T:System.Drawing.Color" /> to be darkened.</span></span></param>
        <summary><span data-ttu-id="36818-137">按指定的颜色为控件创建一个新的深颜色对象。</span><span class="sxs-lookup"><span data-stu-id="36818-137">Creates a new dark color object for the control from the specified color.</span></span></summary>
        <returns><span data-ttu-id="36818-138"><see cref="T:System.Drawing.Color" /> 表示控件上的深颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-138">A <see cref="T:System.Drawing.Color" /> that represents the dark color on the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-139">如果指定<xref:System.Drawing.Color>是之一<xref:System.Drawing.SystemColors>，颜色转换为<xref:System.Drawing.SystemColors.ControlDarkDark%2A?displayProperty=nameWithType>颜色; 否则，增加的颜色亮度值。</span><span class="sxs-lookup"><span data-stu-id="36818-139">If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to the <xref:System.Drawing.SystemColors.ControlDarkDark%2A?displayProperty=nameWithType> color; otherwise, the color's luminosity value is increased.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBorder">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-140">在按钮样式的控件上绘制边框。</span><span class="sxs-lookup"><span data-stu-id="36818-140">Draws a border on a button-style control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBorder">
      <MemberSignature Language="C#" Value="public static void DrawBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Drawing.Color color, System.Windows.Forms.ButtonBorderStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color color, valuetype System.Windows.Forms.ButtonBorderStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.ButtonBorderStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds, System::Drawing::Color color, System::Windows::Forms::ButtonBorderStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="style" Type="System.Windows.Forms.ButtonBorderStyle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-141">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-141">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="bounds"><span data-ttu-id="36818-142">一个 <see cref="T:System.Drawing.Rectangle" />，它代表边框尺寸。</span><span class="sxs-lookup"><span data-stu-id="36818-142">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border.</span></span></param>
        <param name="color"><span data-ttu-id="36818-143">边框的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-143">The <see cref="T:System.Drawing.Color" /> of the border.</span></span></param>
        <param name="style"><span data-ttu-id="36818-144"><see cref="T:System.Windows.Forms.ButtonBorderStyle" /> 值之一，它指定边框的样式。</span><span class="sxs-lookup"><span data-stu-id="36818-144">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the border.</span></span></param>
        <summary><span data-ttu-id="36818-145">在按钮样式控件上指定的边界内、指定的图形表面上绘制具有指定样式和颜色的边框。</span><span class="sxs-lookup"><span data-stu-id="36818-145">Draws a border with the specified style and color, on the specified graphics surface, and within the specified bounds on a button-style control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36818-146">下面的代码示例演示如何使用之一的<xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="36818-146">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="36818-147">若要运行此示例，请将以下代码粘贴在导入的窗体<xref:System.Windows.Forms>和<xref:System.Drawing>命名空间。</span><span class="sxs-lookup"><span data-stu-id="36818-147">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="36818-148">确保窗体的<xref:System.Windows.Forms.Control.Paint>事件是与在此示例中的事件处理程序相关联。</span><span class="sxs-lookup"><span data-stu-id="36818-148">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder">
      <MemberSignature Language="C#" Value="public static void DrawBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Drawing.Color leftColor, int leftWidth, System.Windows.Forms.ButtonBorderStyle leftStyle, System.Drawing.Color topColor, int topWidth, System.Windows.Forms.ButtonBorderStyle topStyle, System.Drawing.Color rightColor, int rightWidth, System.Windows.Forms.ButtonBorderStyle rightStyle, System.Drawing.Color bottomColor, int bottomWidth, System.Windows.Forms.ButtonBorderStyle bottomStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color leftColor, int32 leftWidth, valuetype System.Windows.Forms.ButtonBorderStyle leftStyle, valuetype System.Drawing.Color topColor, int32 topWidth, valuetype System.Windows.Forms.ButtonBorderStyle topStyle, valuetype System.Drawing.Color rightColor, int32 rightWidth, valuetype System.Windows.Forms.ButtonBorderStyle rightStyle, valuetype System.Drawing.Color bottomColor, int32 bottomWidth, valuetype System.Windows.Forms.ButtonBorderStyle bottomStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds, System::Drawing::Color leftColor, int leftWidth, System::Windows::Forms::ButtonBorderStyle leftStyle, System::Drawing::Color topColor, int topWidth, System::Windows::Forms::ButtonBorderStyle topStyle, System::Drawing::Color rightColor, int rightWidth, System::Windows::Forms::ButtonBorderStyle rightStyle, System::Drawing::Color bottomColor, int bottomWidth, System::Windows::Forms::ButtonBorderStyle bottomStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="leftColor" Type="System.Drawing.Color" />
        <Parameter Name="leftWidth" Type="System.Int32" />
        <Parameter Name="leftStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="topColor" Type="System.Drawing.Color" />
        <Parameter Name="topWidth" Type="System.Int32" />
        <Parameter Name="topStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="rightColor" Type="System.Drawing.Color" />
        <Parameter Name="rightWidth" Type="System.Int32" />
        <Parameter Name="rightStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="bottomColor" Type="System.Drawing.Color" />
        <Parameter Name="bottomWidth" Type="System.Int32" />
        <Parameter Name="bottomStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-149">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-149">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="bounds"><span data-ttu-id="36818-150">一个 <see cref="T:System.Drawing.Rectangle" />，它代表边框尺寸。</span><span class="sxs-lookup"><span data-stu-id="36818-150">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border.</span></span></param>
        <param name="leftColor"><span data-ttu-id="36818-151">边框的左边的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-151">The <see cref="T:System.Drawing.Color" /> of the left of the border.</span></span></param>
        <param name="leftWidth"><span data-ttu-id="36818-152">左边框的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-152">The width of the left border.</span></span></param>
        <param name="leftStyle"><span data-ttu-id="36818-153"><see cref="T:System.Windows.Forms.ButtonBorderStyle" /> 值之一，它指定左边框的样式。</span><span class="sxs-lookup"><span data-stu-id="36818-153">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the left border.</span></span></param>
        <param name="topColor"><span data-ttu-id="36818-154">边框的上边的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-154">The <see cref="T:System.Drawing.Color" /> of the top of the border.</span></span></param>
        <param name="topWidth"><span data-ttu-id="36818-155">上边框的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-155">The width of the top border.</span></span></param>
        <param name="topStyle"><span data-ttu-id="36818-156"><see cref="T:System.Windows.Forms.ButtonBorderStyle" /> 值之一，它指定上边框的样式。</span><span class="sxs-lookup"><span data-stu-id="36818-156">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the top border.</span></span></param>
        <param name="rightColor"><span data-ttu-id="36818-157">边框的右边的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-157">The <see cref="T:System.Drawing.Color" /> of the right of the border.</span></span></param>
        <param name="rightWidth"><span data-ttu-id="36818-158">右边框的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-158">The width of the right border.</span></span></param>
        <param name="rightStyle"><span data-ttu-id="36818-159"><see cref="T:System.Windows.Forms.ButtonBorderStyle" /> 值之一，它指定右边框的样式。</span><span class="sxs-lookup"><span data-stu-id="36818-159">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the right border.</span></span></param>
        <param name="bottomColor"><span data-ttu-id="36818-160">边框的底边的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-160">The <see cref="T:System.Drawing.Color" /> of the bottom of the border.</span></span></param>
        <param name="bottomWidth"><span data-ttu-id="36818-161">下边框的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-161">The width of the bottom border.</span></span></param>
        <param name="bottomStyle"><span data-ttu-id="36818-162"><see cref="T:System.Windows.Forms.ButtonBorderStyle" /> 值之一，它指定下边框的样式。</span><span class="sxs-lookup"><span data-stu-id="36818-162">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the bottom border.</span></span></param>
        <summary><span data-ttu-id="36818-163">在按钮样式控件上指定的边界内、指定的图形表面上绘制具有指定的样式、颜色和边框宽度的边框。</span><span class="sxs-lookup"><span data-stu-id="36818-163">Draws a border on a button-style control with the specified styles, colors, and border widths; on the specified graphics surface; and within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36818-164">下面的代码示例演示如何使用之一的<xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="36818-164">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="36818-165">若要运行此示例，请将以下代码粘贴在导入的窗体<xref:System.Windows.Forms>和<xref:System.Drawing>命名空间。</span><span class="sxs-lookup"><span data-stu-id="36818-165">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="36818-166">确保窗体的<xref:System.Windows.Forms.Control.Paint>事件是与在此示例中的事件处理程序相关联。</span><span class="sxs-lookup"><span data-stu-id="36818-166">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ButtonBorderStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBorder3D">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-167">在控件上绘制三维样式边框。</span><span class="sxs-lookup"><span data-stu-id="36818-167">Draws a three-dimensional style border on a control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-168">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-168">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-169">一个 <see cref="T:System.Drawing.Rectangle" />，它代表边框尺寸。</span><span class="sxs-lookup"><span data-stu-id="36818-169">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border.</span></span></param>
        <summary><span data-ttu-id="36818-170">在控件上指定的边界内、指定的图形表面上绘制三维样式边框。</span><span class="sxs-lookup"><span data-stu-id="36818-170">Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-171"><xref:System.Windows.Forms.Border3DStyle.Etched?displayProperty=nameWithType>默认用样式来绘制边框。</span><span class="sxs-lookup"><span data-stu-id="36818-171">The <xref:System.Windows.Forms.Border3DStyle.Etched?displayProperty=nameWithType> style is used by default to draw the border.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36818-172">下面的代码示例演示如何使用之一的<xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="36818-172">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="36818-173">若要运行此示例，请将以下代码粘贴在导入的窗体<xref:System.Windows.Forms>和<xref:System.Drawing>命名空间。</span><span class="sxs-lookup"><span data-stu-id="36818-173">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="36818-174">确保窗体的<xref:System.Windows.Forms.Control.Paint>事件是与在此示例中的事件处理程序相关联。</span><span class="sxs-lookup"><span data-stu-id="36818-174">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.Border3DStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.Border3DStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::Border3DStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-175">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-175">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-176">一个 <see cref="T:System.Drawing.Rectangle" />，它代表边框尺寸。</span><span class="sxs-lookup"><span data-stu-id="36818-176">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border.</span></span></param>
        <param name="style"><span data-ttu-id="36818-177"><see cref="T:System.Windows.Forms.Border3DStyle" /> 值之一，它指定边框的样式。</span><span class="sxs-lookup"><span data-stu-id="36818-177">One of the <see cref="T:System.Windows.Forms.Border3DStyle" /> values that specifies the style of the border.</span></span></param>
        <summary><span data-ttu-id="36818-178">在控件上指定的边界内、指定的图形表面上绘制具有指定样式的三维样式边框。</span><span class="sxs-lookup"><span data-stu-id="36818-178">Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36818-179">下面的代码示例演示如何使用之一的<xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="36818-179">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="36818-180">若要运行此示例，请将以下代码粘贴在导入的窗体<xref:System.Windows.Forms>和<xref:System.Drawing>命名空间。</span><span class="sxs-lookup"><span data-stu-id="36818-180">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="36818-181">确保窗体的<xref:System.Windows.Forms.Control.Paint>事件是与在此示例中的事件处理程序相关联。</span><span class="sxs-lookup"><span data-stu-id="36818-181">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.Border3DStyle style, System.Windows.Forms.Border3DSide sides);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.Border3DStyle style, valuetype System.Windows.Forms.Border3DSide sides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::Border3DStyle style, System::Windows::Forms::Border3DSide sides);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
        <Parameter Name="sides" Type="System.Windows.Forms.Border3DSide" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-182">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-182">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-183">一个 <see cref="T:System.Drawing.Rectangle" />，它代表边框尺寸。</span><span class="sxs-lookup"><span data-stu-id="36818-183">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border.</span></span></param>
        <param name="style"><span data-ttu-id="36818-184"><see cref="T:System.Windows.Forms.Border3DStyle" /> 值之一，它指定边框的样式。</span><span class="sxs-lookup"><span data-stu-id="36818-184">One of the <see cref="T:System.Windows.Forms.Border3DStyle" /> values that specifies the style of the border.</span></span></param>
        <param name="sides"><span data-ttu-id="36818-185"><see cref="T:System.Windows.Forms.Border3DSide" /> 值之一，它指定要在上面绘制边框的矩形的边。</span><span class="sxs-lookup"><span data-stu-id="36818-185">One of the <see cref="T:System.Windows.Forms.Border3DSide" /> values that specifies the side of the rectangle to draw the border on.</span></span></param>
        <summary><span data-ttu-id="36818-186">在控件上指定的边界内、指定的图形表面和边上绘制具有指定样式的三维样式边框。</span><span class="sxs-lookup"><span data-stu-id="36818-186">Draws a three-dimensional style border with the specified style, on the specified graphics surface and sides, and within the specified bounds on a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36818-187">下面的代码示例演示如何使用之一的<xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="36818-187">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="36818-188">若要运行此示例，请将以下代码粘贴在导入的窗体<xref:System.Windows.Forms>和<xref:System.Drawing>命名空间。</span><span class="sxs-lookup"><span data-stu-id="36818-188">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="36818-189">确保窗体的<xref:System.Windows.Forms.Control.Paint>事件是与在此示例中的事件处理程序相关联。</span><span class="sxs-lookup"><span data-stu-id="36818-189">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
        <altmember cref="T:System.Windows.Forms.Border3DSide" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-190">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-190">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="36818-191">矩形边框左上角的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-191">The x-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="36818-192">矩形边框左上角的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-192">The y-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="36818-193">矩形边框的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-193">The width of the border rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="36818-194">矩形边框的高度。</span><span class="sxs-lookup"><span data-stu-id="36818-194">The height of the border rectangle.</span></span></param>
        <summary><span data-ttu-id="36818-195">在控件上指定的边界内、指定的图形表面上绘制三维样式边框。</span><span class="sxs-lookup"><span data-stu-id="36818-195">Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-196"><xref:System.Windows.Forms.Border3DStyle.Etched?displayProperty=nameWithType>默认用样式来绘制边框。</span><span class="sxs-lookup"><span data-stu-id="36818-196">The <xref:System.Windows.Forms.Border3DStyle.Etched?displayProperty=nameWithType> style is used by default to draw the border.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36818-197">下面的代码示例演示如何使用之一的<xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="36818-197">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="36818-198">若要运行此示例，请将以下代码粘贴在导入的窗体<xref:System.Windows.Forms>和<xref:System.Drawing>命名空间。</span><span class="sxs-lookup"><span data-stu-id="36818-198">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="36818-199">确保窗体的<xref:System.Windows.Forms.Control.Paint>事件是与在此示例中的事件处理程序相关联。</span><span class="sxs-lookup"><span data-stu-id="36818-199">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.Border3DStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.Border3DStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::Border3DStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-200">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-200">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="36818-201">矩形边框左上角的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-201">The x-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="36818-202">矩形边框左上角的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-202">The y-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="36818-203">矩形边框的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-203">The width of the border rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="36818-204">矩形边框的高度。</span><span class="sxs-lookup"><span data-stu-id="36818-204">The height of the border rectangle.</span></span></param>
        <param name="style"><span data-ttu-id="36818-205"><see cref="T:System.Windows.Forms.Border3DStyle" /> 值之一，它指定边框的样式。</span><span class="sxs-lookup"><span data-stu-id="36818-205">One of the <see cref="T:System.Windows.Forms.Border3DStyle" /> values that specifies the style of the border.</span></span></param>
        <summary><span data-ttu-id="36818-206">在控件上指定的边界内、指定的图形表面上绘制具有指定样式的三维样式边框。</span><span class="sxs-lookup"><span data-stu-id="36818-206">Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36818-207">下面的代码示例演示如何使用之一的<xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="36818-207">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="36818-208">若要运行此示例，请将以下代码粘贴在导入的窗体<xref:System.Windows.Forms>和<xref:System.Drawing>命名空间。</span><span class="sxs-lookup"><span data-stu-id="36818-208">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="36818-209">确保窗体的<xref:System.Windows.Forms.Control.Paint>事件是与在此示例中的事件处理程序相关联。</span><span class="sxs-lookup"><span data-stu-id="36818-209">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.Border3DStyle style, System.Windows.Forms.Border3DSide sides);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.Border3DStyle style, valuetype System.Windows.Forms.Border3DSide sides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::Border3DStyle style, System::Windows::Forms::Border3DSide sides);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
        <Parameter Name="sides" Type="System.Windows.Forms.Border3DSide" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-210">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-210">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="36818-211">矩形边框左上角的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-211">The x-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="36818-212">矩形边框左上角的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-212">The y-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="36818-213">矩形边框的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-213">The width of the border rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="36818-214">矩形边框的高度。</span><span class="sxs-lookup"><span data-stu-id="36818-214">The height of the border rectangle.</span></span></param>
        <param name="style"><span data-ttu-id="36818-215"><see cref="T:System.Windows.Forms.Border3DStyle" /> 值之一，它指定边框的样式。</span><span class="sxs-lookup"><span data-stu-id="36818-215">One of the <see cref="T:System.Windows.Forms.Border3DStyle" /> values that specifies the style of the border.</span></span></param>
        <param name="sides"><span data-ttu-id="36818-216">在其上绘制边框的矩形的 <see cref="T:System.Windows.Forms.Border3DSide" />。</span><span class="sxs-lookup"><span data-stu-id="36818-216">The <see cref="T:System.Windows.Forms.Border3DSide" /> of the rectangle to draw the border on.</span></span></param>
        <summary><span data-ttu-id="36818-217">在控件上指定的边界内、指定的图形表面和边上绘制具有指定样式的三维样式边框。</span><span class="sxs-lookup"><span data-stu-id="36818-217">Draws a three-dimensional style border with the specified style, on the specified graphics surface and side, and within the specified bounds on a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36818-218">下面的代码示例演示如何使用之一的<xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="36818-218">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="36818-219">若要运行此示例，请将以下代码粘贴在导入的窗体<xref:System.Windows.Forms>和<xref:System.Drawing>命名空间。</span><span class="sxs-lookup"><span data-stu-id="36818-219">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="36818-220">确保窗体的<xref:System.Windows.Forms.Control.Paint>事件是与在此示例中的事件处理程序相关联。</span><span class="sxs-lookup"><span data-stu-id="36818-220">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
        <altmember cref="T:System.Windows.Forms.Border3DSide" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-221">绘制按钮控件。</span><span class="sxs-lookup"><span data-stu-id="36818-221">Draws a button control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-222">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-222">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-223">代表按钮尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-223">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the button.</span></span></param>
        <param name="state"><span data-ttu-id="36818-224"><see cref="T:System.Windows.Forms.ButtonState" /> 值的按位组合，指定将按钮画入的状态。</span><span class="sxs-lookup"><span data-stu-id="36818-224">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the button in.</span></span></param>
        <summary><span data-ttu-id="36818-225">在指定的边界内、指定的图形表面上，绘制处于指定状态的按钮控件。</span><span class="sxs-lookup"><span data-stu-id="36818-225">Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Button" />
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-226">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-226">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="36818-227">所绘制矩形左上角的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-227">The x-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="36818-228">所绘制矩形左上角的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-228">The y-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="36818-229">按钮的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-229">The width of the button.</span></span></param>
        <param name="height"><span data-ttu-id="36818-230">按钮的高度。</span><span class="sxs-lookup"><span data-stu-id="36818-230">The height of the button.</span></span></param>
        <param name="state"><span data-ttu-id="36818-231"><see cref="T:System.Windows.Forms.ButtonState" /> 值的按位组合，指定将按钮画入的状态。</span><span class="sxs-lookup"><span data-stu-id="36818-231">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the button in.</span></span></param>
        <summary><span data-ttu-id="36818-232">在指定的边界内、指定的图形表面上，绘制处于指定状态的按钮控件。</span><span class="sxs-lookup"><span data-stu-id="36818-232">Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[ButtonState#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ButtonState/CPP/buttonstate1.cpp#2)]
 [!code-csharp[ButtonState#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ButtonState/CS/buttonstate1.cs#2)]
 [!code-vb[ButtonState#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ButtonState/VB/buttonstate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Button" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawCaptionButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-233">绘制标题按钮控件。</span><span class="sxs-lookup"><span data-stu-id="36818-233">Draws a caption button control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawCaptionButton">
      <MemberSignature Language="C#" Value="public static void DrawCaptionButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.CaptionButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCaptionButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.CaptionButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCaptionButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::CaptionButton button, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="button" Type="System.Windows.Forms.CaptionButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-234">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-234">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-235">代表标题按钮尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-235">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the caption button.</span></span></param>
        <param name="button"><span data-ttu-id="36818-236"><see cref="T:System.Windows.Forms.CaptionButton" /> 值之一，指定要绘制的标题按钮的类型。</span><span class="sxs-lookup"><span data-stu-id="36818-236">One of the <see cref="T:System.Windows.Forms.CaptionButton" /> values that specifies the type of caption button to draw.</span></span></param>
        <param name="state"><span data-ttu-id="36818-237"><see cref="T:System.Windows.Forms.ButtonState" /> 值的按位组合，指定将按钮画入的状态。</span><span class="sxs-lookup"><span data-stu-id="36818-237">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the button in.</span></span></param>
        <summary><span data-ttu-id="36818-238">在指定的边界内、指定的图形表面上，绘制处于指定状态的指定标题按钮控件。</span><span class="sxs-lookup"><span data-stu-id="36818-238">Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36818-239">下面的代码示例演示如何将<xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A?displayProperty=nameWithType>方法和<xref:System.Windows.Forms.CaptionButton>枚举。</span><span class="sxs-lookup"><span data-stu-id="36818-239">The following code example demonstrates the use of the <xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A?displayProperty=nameWithType> method and the <xref:System.Windows.Forms.CaptionButton> enumeration.</span></span> <span data-ttu-id="36818-240">若要运行此示例中，粘贴以下代码中包含名为的按钮的窗体`Button1`。</span><span class="sxs-lookup"><span data-stu-id="36818-240">To run this example, paste the following code in a form containing a Button named `Button1`.</span></span> <span data-ttu-id="36818-241">应导入窗体<xref:System.Windows.Forms>和<xref:System.Drawing>命名空间。</span><span class="sxs-lookup"><span data-stu-id="36818-241">The form should import the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="36818-242">确保该按钮的<xref:System.Windows.Forms.Control.Paint>事件是与在此示例中的事件处理程序相关联。</span><span class="sxs-lookup"><span data-stu-id="36818-242">Ensure the button's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CaptionButton" />
      </Docs>
    </Member>
    <Member MemberName="DrawCaptionButton">
      <MemberSignature Language="C#" Value="public static void DrawCaptionButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.CaptionButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCaptionButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.CaptionButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCaptionButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::CaptionButton button, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Forms.CaptionButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-243">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-243">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="36818-244">所绘制矩形左上角的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-244">The x-coordinate of the top left of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="36818-245">所绘制矩形左上角的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-245">The y-coordinate of the top left of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="36818-246">所绘制矩形的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-246">The width of the drawing rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="36818-247">所绘制矩形的高度。</span><span class="sxs-lookup"><span data-stu-id="36818-247">The height of the drawing rectangle.</span></span></param>
        <param name="button"><span data-ttu-id="36818-248"><see cref="T:System.Windows.Forms.CaptionButton" /> 值之一，指定要绘制的标题按钮的类型。</span><span class="sxs-lookup"><span data-stu-id="36818-248">One of the <see cref="T:System.Windows.Forms.CaptionButton" /> values that specifies the type of caption button to draw.</span></span></param>
        <param name="state"><span data-ttu-id="36818-249"><see cref="T:System.Windows.Forms.ButtonState" /> 值的按位组合，指定将按钮画入的状态。</span><span class="sxs-lookup"><span data-stu-id="36818-249">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the button in.</span></span></param>
        <summary><span data-ttu-id="36818-250">在指定的边界内、指定的图形表面上，绘制处于指定状态的指定标题按钮控件。</span><span class="sxs-lookup"><span data-stu-id="36818-250">Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36818-251">下面的代码示例演示如何将<xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A>方法和<xref:System.Windows.Forms.CaptionButton>枚举。</span><span class="sxs-lookup"><span data-stu-id="36818-251">The following code example demonstrates the use of the <xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A> method and the <xref:System.Windows.Forms.CaptionButton> enumeration.</span></span> <span data-ttu-id="36818-252">若要运行此示例中，粘贴以下代码中一个窗体包含<xref:System.Windows.Forms.Button>名为`Button1`。</span><span class="sxs-lookup"><span data-stu-id="36818-252">To run this example, paste the following code in a form containing a <xref:System.Windows.Forms.Button> named `Button1`.</span></span> <span data-ttu-id="36818-253">应导入窗体<xref:System.Windows.Forms>和<xref:System.Drawing>命名空间。</span><span class="sxs-lookup"><span data-stu-id="36818-253">The form should import the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="36818-254">确保该按钮的<xref:System.Windows.Forms.Control.Paint>事件是与在此示例中的事件处理程序相关联。</span><span class="sxs-lookup"><span data-stu-id="36818-254">Ensure the button's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CaptionButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawCheckBox">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-255">绘制复选框控件。</span><span class="sxs-lookup"><span data-stu-id="36818-255">Draws a check box control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawCheckBox (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCheckBox(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCheckBox(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-256">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-256">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-257">代表复选框尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-257">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the check box.</span></span></param>
        <param name="state"><span data-ttu-id="36818-258"><see cref="T:System.Windows.Forms.ButtonState" /> 值的按位组合，指定将复选框画入的状态。</span><span class="sxs-lookup"><span data-stu-id="36818-258">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the check box in.</span></span></param>
        <summary><span data-ttu-id="36818-259">在指定边界内、指定的图形表面上，绘制处于指定状态的复选框控件。</span><span class="sxs-lookup"><span data-stu-id="36818-259">Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawCheckBox (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCheckBox(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCheckBox(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-260">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-260">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="36818-261">所绘制矩形左上角的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-261">The x-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="36818-262">所绘制矩形左上角的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-262">The y-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="36818-263">复选框的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-263">The width of the check box.</span></span></param>
        <param name="height"><span data-ttu-id="36818-264">复选框的高度。</span><span class="sxs-lookup"><span data-stu-id="36818-264">The height of the check box.</span></span></param>
        <param name="state"><span data-ttu-id="36818-265"><see cref="T:System.Windows.Forms.ButtonState" /> 值的按位组合，指定将复选框画入的状态。</span><span class="sxs-lookup"><span data-stu-id="36818-265">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the check box in.</span></span></param>
        <summary><span data-ttu-id="36818-266">在指定边界内、指定的图形表面上，绘制处于指定状态的复选框控件。</span><span class="sxs-lookup"><span data-stu-id="36818-266">Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawComboButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-267">在组合框控件上绘制下拉按钮。</span><span class="sxs-lookup"><span data-stu-id="36818-267">Draws a drop-down button on a combo box control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawComboButton">
      <MemberSignature Language="C#" Value="public static void DrawComboButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawComboButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawComboButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-268">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-268">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-269">代表组合框尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-269">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the combo box.</span></span></param>
        <param name="state"><span data-ttu-id="36818-270"><see cref="T:System.Windows.Forms.ButtonState" /> 值的按位组合，指定将组合框画入的状态。</span><span class="sxs-lookup"><span data-stu-id="36818-270">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the combo box in.</span></span></param>
        <summary><span data-ttu-id="36818-271">在组合框控件上绘制位于指定边界内、在指定的图形表面上、处于指定状态的下拉按钮。</span><span class="sxs-lookup"><span data-stu-id="36818-271">Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawComboButton">
      <MemberSignature Language="C#" Value="public static void DrawComboButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawComboButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawComboButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-272">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-272">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="36818-273">矩形边框左上角的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-273">The x-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="36818-274">矩形边框左上角的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-274">The y-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="36818-275">组合框的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-275">The width of the combo box.</span></span></param>
        <param name="height"><span data-ttu-id="36818-276">组合框的高度。</span><span class="sxs-lookup"><span data-stu-id="36818-276">The height of the combo box.</span></span></param>
        <param name="state"><span data-ttu-id="36818-277"><see cref="T:System.Windows.Forms.ButtonState" /> 值的按位组合，指定将组合框画入的状态。</span><span class="sxs-lookup"><span data-stu-id="36818-277">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the combo box in.</span></span></param>
        <summary><span data-ttu-id="36818-278">在组合框控件上绘制位于指定边界内、在指定的图形表面上、处于指定状态的下拉按钮。</span><span class="sxs-lookup"><span data-stu-id="36818-278">Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawContainerGrabHandle">
      <MemberSignature Language="C#" Value="public static void DrawContainerGrabHandle (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawContainerGrabHandle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawContainerGrabHandle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-279">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-279">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="bounds"><span data-ttu-id="36818-280">代表抓取柄标志符号尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-280">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grab handle glyph.</span></span></param>
        <summary><span data-ttu-id="36818-281">在指定的边界内、指定的图形表面上绘制容器控件抓取柄标志符号。</span><span class="sxs-lookup"><span data-stu-id="36818-281">Draws a container control grab handle glyph on the specified graphics surface and within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-282">由容器使用的抓取手柄用于向用户指示用户可以直接操作容器。</span><span class="sxs-lookup"><span data-stu-id="36818-282">Grab handles are used by containers to indicate to the user that the user can directly manipulate the containers.</span></span> <span data-ttu-id="36818-283">操作可以包含的操作，例如大小调整和移动。</span><span class="sxs-lookup"><span data-stu-id="36818-283">The manipulation can consist of actions such as sizing and moving.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawFocusRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-284">绘制聚焦框。</span><span class="sxs-lookup"><span data-stu-id="36818-284">Draws a focus rectangle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public static void DrawFocusRectangle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawFocusRectangle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawFocusRectangle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-285">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-285">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-286">代表抓取柄标志符号尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-286">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grab handle glyph.</span></span></param>
        <summary><span data-ttu-id="36818-287">在指定边界内、指定的图形表面上绘制聚焦框。</span><span class="sxs-lookup"><span data-stu-id="36818-287">Draws a focus rectangle on the specified graphics surface and within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-288">聚焦框是 Windows 用来指示哪个控件具有当前的键盘焦点的点分的矩形。</span><span class="sxs-lookup"><span data-stu-id="36818-288">A focus rectangle is a dotted rectangle that Windows uses to indicate what control has the current keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36818-289">下面的代码示例演示如何使用<xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A>方法和<xref:System.Windows.Forms.Control.Handle%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36818-289">The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A> method and the <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="36818-290">若要运行此示例，请在窗体中粘贴以下代码。</span><span class="sxs-lookup"><span data-stu-id="36818-290">To run this example, paste the following code in a form.</span></span> <span data-ttu-id="36818-291">添加名为的两个按钮`Button1`和`Button2`到窗体，并确保所有事件都连接到其事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="36818-291">Add two buttons named `Button1` and `Button2` to the form and ensure all events are connected to their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public static void DrawFocusRectangle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawFocusRectangle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawFocusRectangle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-292">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-292">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-293">代表抓取柄标志符号尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-293">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grab handle glyph.</span></span></param>
        <param name="foreColor"><span data-ttu-id="36818-294"><see cref="T:System.Drawing.Color" /> 是在其上绘制聚焦框的对象的前景色。</span><span class="sxs-lookup"><span data-stu-id="36818-294">The <see cref="T:System.Drawing.Color" /> that is the foreground color of the object to draw the focus rectangle on.</span></span></param>
        <param name="backColor"><span data-ttu-id="36818-295"><see cref="T:System.Drawing.Color" /> 是在其上绘制聚焦框的对象的背景色。</span><span class="sxs-lookup"><span data-stu-id="36818-295">The <see cref="T:System.Drawing.Color" /> that is the background color of the object to draw the focus rectangle on.</span></span></param>
        <summary><span data-ttu-id="36818-296">在指定边界内、指定的图形表面上绘制聚焦框。</span><span class="sxs-lookup"><span data-stu-id="36818-296">Draws a focus rectangle on the specified graphics surface and within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-297">聚焦框是 Windows 用来指示哪个控件具有当前的键盘焦点的点分的矩形。</span><span class="sxs-lookup"><span data-stu-id="36818-297">A focus rectangle is a dotted rectangle that Windows uses to indicate what control has the current keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36818-298">下面的代码示例演示如何使用<xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A>方法和<xref:System.Windows.Forms.Control.Handle%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36818-298">The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A> method and the <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="36818-299">若要运行此示例，请在窗体中粘贴以下代码。</span><span class="sxs-lookup"><span data-stu-id="36818-299">To run this example, paste the following code in a form.</span></span> <span data-ttu-id="36818-300">添加名为的两个按钮`Button1`和 Button2 到窗体，并确保所有事件都连接到其事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="36818-300">Add two buttons named `Button1` and Button2 to the form and ensure all events are connected to their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawGrabHandle">
      <MemberSignature Language="C#" Value="public static void DrawGrabHandle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, bool primary, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawGrabHandle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, bool primary, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawGrabHandle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, bool primary, bool enabled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="primary" Type="System.Boolean" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-301">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-301">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-302">代表抓取柄标志符号尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-302">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grab handle glyph.</span></span></param>
        <param name="primary">
          <span data-ttu-id="36818-303">若要将该句柄绘制为主抓取柄，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36818-303"><see langword="true" /> to draw the handle as a primary grab handle; otherwise, <see langword="false" />.</span></span></param>
        <param name="enabled">
          <span data-ttu-id="36818-304">若要绘制处于启用状态的句柄，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36818-304"><see langword="true" /> to draw the handle in an enabled state; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="36818-305">在指定的边界内、指定的图形表面上，按样式绘制处于指定状态的标准的选择抓取柄标志符号。</span><span class="sxs-lookup"><span data-stu-id="36818-305">Draws a standard selection grab handle glyph on the specified graphics surface, within the specified bounds, and in the specified state and style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-306">由对象使用的抓取手柄用于向用户指示用户可以直接操作对象。</span><span class="sxs-lookup"><span data-stu-id="36818-306">Grab handles are used by objects to indicate to the user that the user can directly manipulate the object.</span></span> <span data-ttu-id="36818-307">操作可以包含的操作，例如大小调整和移动。</span><span class="sxs-lookup"><span data-stu-id="36818-307">The manipulation can consist of actions such as sizing and moving.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawGrid">
      <MemberSignature Language="C#" Value="public static void DrawGrid (System.Drawing.Graphics graphics, System.Drawing.Rectangle area, System.Drawing.Size pixelsBetweenDots, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawGrid(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle area, valuetype System.Drawing.Size pixelsBetweenDots, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawGrid(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle area, System::Drawing::Size pixelsBetweenDots, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="area" Type="System.Drawing.Rectangle" />
        <Parameter Name="pixelsBetweenDots" Type="System.Drawing.Size" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-308">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-308">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="area"><span data-ttu-id="36818-309">表示网格尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-309">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grid.</span></span></param>
        <param name="pixelsBetweenDots"><span data-ttu-id="36818-310">指定了网格点之间的高度和宽度的 <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="36818-310">The <see cref="T:System.Drawing.Size" /> that specified the height and width between the dots of the grid.</span></span></param>
        <param name="backColor"><span data-ttu-id="36818-311">网格的背景的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-311">The <see cref="T:System.Drawing.Color" /> of the background behind the grid.</span></span></param>
        <summary><span data-ttu-id="36818-312">在指定的边界内、指定的图形表面上，按指定颜色绘制由点（大小为一个像素，互相之间具有指定的间距）组成的网格。</span><span class="sxs-lookup"><span data-stu-id="36818-312">Draws a grid of one-pixel dots with the specified spacing, within the specified bounds, on the specified graphics surface, and in the specified color.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-313">`backColor`参数用于计算点的填充颜色，以便始终可见背景网格。</span><span class="sxs-lookup"><span data-stu-id="36818-313">The `backColor` parameter is used to calculate the fill color of the dots so that the grid is always visible against the background.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawImageDisabled">
      <MemberSignature Language="C#" Value="public static void DrawImageDisabled (System.Drawing.Graphics graphics, System.Drawing.Image image, int x, int y, System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawImageDisabled(class System.Drawing.Graphics graphics, class System.Drawing.Image image, int32 x, int32 y, valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawImageDisabled(System::Drawing::Graphics ^ graphics, System::Drawing::Image ^ image, int x, int y, System::Drawing::Color background);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-314">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-314">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="image"><span data-ttu-id="36818-315">要绘制的 <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="36818-315">The <see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="36818-316">边框图像左上角的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-316">The x-coordinate of the top left of the border image.</span></span></param>
        <param name="y"><span data-ttu-id="36818-317">边框图像左上角的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-317">The y-coordinate of the top left of the border image.</span></span></param>
        <param name="background"><span data-ttu-id="36818-318">图像的背景的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-318">The <see cref="T:System.Drawing.Color" /> of the background behind the image.</span></span></param>
        <summary><span data-ttu-id="36818-319">绘制处于禁用状态的指定图像。</span><span class="sxs-lookup"><span data-stu-id="36818-319">Draws the specified image in a disabled state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-320">`background`参数用于计算禁用图像的填充颜色，以便它始终是可见的背景。</span><span class="sxs-lookup"><span data-stu-id="36818-320">The `background` parameter is used to calculate the fill color of the disabled image so that it is always visible against the background.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="DrawLockedFrame">
      <MemberSignature Language="C#" Value="public static void DrawLockedFrame (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, bool primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawLockedFrame(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, bool primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawLockedFrame(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawLockedFrame(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, bool primary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="primary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-321">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-321">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-322">代表框架尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-322">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the frame.</span></span></param>
        <param name="primary">
          <span data-ttu-id="36818-323">若要使用主选择方案的颜色绘制此框架，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36818-323"><see langword="true" /> to draw this frame with the colors used for the primary selection; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="36818-324">在屏幕上指定的边界内、指定的图形表面上，绘制锁定的选择框。</span><span class="sxs-lookup"><span data-stu-id="36818-324">Draws a locked selection frame on the screen within the specified bounds and on the specified graphics surface.</span></span> <span data-ttu-id="36818-325">指定是否使用主选择方案的颜色来绘制框架。</span><span class="sxs-lookup"><span data-stu-id="36818-325">Specifies whether to draw the frame with the primary selected colors.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawMenuGlyph">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-326">在菜单项控件上绘制菜单标志符号。</span><span class="sxs-lookup"><span data-stu-id="36818-326">Draws a menu glyph on a menu item control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.MenuGlyph glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.MenuGlyph glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::MenuGlyph glyph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-327">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-327">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-328">代表标志符号尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-328">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the glyph.</span></span></param>
        <param name="glyph"><span data-ttu-id="36818-329"><see cref="T:System.Windows.Forms.MenuGlyph" /> 值的其中之一，指定将要绘制的图像。</span><span class="sxs-lookup"><span data-stu-id="36818-329">One of the <see cref="T:System.Windows.Forms.MenuGlyph" /> values that specifies the image to draw.</span></span></param>
        <summary><span data-ttu-id="36818-330">在菜单项控件上指定的边界内、指定的表面上，绘制指定的菜单标志符号。</span><span class="sxs-lookup"><span data-stu-id="36818-330">Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-331">当所有者描述<xref:System.Windows.Forms.MenuItem>控件，您需要先验证属性值来确定正确的标志符号，以绘制或删除。</span><span class="sxs-lookup"><span data-stu-id="36818-331">When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove.</span></span> <span data-ttu-id="36818-332">例如，当<xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType>属性设置为`true`，必须调用<xref:System.Windows.Forms.MenuGlyph.Checkmark>值<xref:System.Windows.Forms.MenuGlyph>上绘制一个复选标记<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="36818-332">For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph.Checkmark> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MenuGlyph" />
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.MenuGlyph glyph, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.MenuGlyph glyph, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::MenuGlyph glyph, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-333">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-333">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-334">代表标志符号尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-334">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the glyph.</span></span></param>
        <param name="glyph"><span data-ttu-id="36818-335"><see cref="T:System.Windows.Forms.MenuGlyph" /> 值的其中之一，指定将要绘制的图像。</span><span class="sxs-lookup"><span data-stu-id="36818-335">One of the <see cref="T:System.Windows.Forms.MenuGlyph" /> values that specifies the image to draw.</span></span></param>
        <param name="foreColor"><span data-ttu-id="36818-336">替换 <see cref="P:System.Drawing.Color.White" /> 作为前景色的颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-336">The color that replaces <see cref="P:System.Drawing.Color.White" /> as the foreground color.</span></span></param>
        <param name="backColor"><span data-ttu-id="36818-337">替换 <see cref="P:System.Drawing.Color.Black" /> 作为背景色的颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-337">The color that replaces <see cref="P:System.Drawing.Color.Black" /> as the background color.</span></span></param>
        <summary><span data-ttu-id="36818-338">在菜单项控件上指定的边界内、指定的图面上绘制指定的菜单标志符号，用 <paramref name="backColor" /> 参数中指定的颜色替换 <see cref="P:System.Drawing.Color.White" />，并用 <paramref name="foreColor" /> 参数中指定的颜色替换 <see cref="P:System.Drawing.Color.Black" />。</span><span class="sxs-lookup"><span data-stu-id="36818-338">Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface, replacing <see cref="P:System.Drawing.Color.White" /> with the color specified in the <paramref name="backColor" /> parameter and replacing <see cref="P:System.Drawing.Color.Black" /> with the color specified in the <paramref name="foreColor" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-339">当所有者描述<xref:System.Windows.Forms.MenuItem>控件，您需要先验证属性值来确定正确的标志符号，以绘制或删除。</span><span class="sxs-lookup"><span data-stu-id="36818-339">When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove.</span></span> <span data-ttu-id="36818-340">例如，当<xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType>属性设置为`true`，必须调用<xref:System.Windows.Forms.MenuGlyph.Checkmark>值<xref:System.Windows.Forms.MenuGlyph>上绘制一个复选标记<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="36818-340">For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph.Checkmark> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MenuGlyph" />
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.MenuGlyph glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.MenuGlyph glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::MenuGlyph glyph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-341">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-341">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="36818-342">所绘制矩形左上角的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-342">The x-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="36818-343">所绘制矩形左上角的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-343">The y-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="36818-344">菜单标志符号的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-344">The width of the menu glyph.</span></span></param>
        <param name="height"><span data-ttu-id="36818-345">菜单标志符号的高度。</span><span class="sxs-lookup"><span data-stu-id="36818-345">The height of the menu glyph.</span></span></param>
        <param name="glyph"><span data-ttu-id="36818-346"><see cref="T:System.Windows.Forms.MenuGlyph" /> 值的其中之一，指定将要绘制的图像。</span><span class="sxs-lookup"><span data-stu-id="36818-346">One of the <see cref="T:System.Windows.Forms.MenuGlyph" /> values that specifies the image to draw.</span></span></param>
        <summary><span data-ttu-id="36818-347">在菜单项控件上指定的边界内、指定的表面上，绘制指定的菜单标志符号。</span><span class="sxs-lookup"><span data-stu-id="36818-347">Draws the specified menu glyph on a menu item control with the specified bounds and on the specified surface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-348">当所有者描述<xref:System.Windows.Forms.MenuItem>控件，您需要先验证属性值来确定正确的标志符号，以绘制或删除。</span><span class="sxs-lookup"><span data-stu-id="36818-348">When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove.</span></span> <span data-ttu-id="36818-349">例如，当<xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType>属性设置为 true，则调用<xref:System.Windows.Forms.MenuGlyph.Checkmark>值<xref:System.Windows.Forms.MenuGlyph>上绘制一个复选标记<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="36818-349">For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> property is set to true, you call the <xref:System.Windows.Forms.MenuGlyph.Checkmark> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.MenuGlyph glyph, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.MenuGlyph glyph, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::MenuGlyph glyph, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-350">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-350">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="36818-351">所绘制矩形左上角的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-351">The x-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="36818-352">所绘制矩形左上角的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-352">The y-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="36818-353">菜单标志符号的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-353">The width of the menu glyph.</span></span></param>
        <param name="height"><span data-ttu-id="36818-354">菜单标志符号的高度。</span><span class="sxs-lookup"><span data-stu-id="36818-354">The height of the menu glyph.</span></span></param>
        <param name="glyph"><span data-ttu-id="36818-355"><see cref="T:System.Windows.Forms.MenuGlyph" /> 值的其中之一，指定将要绘制的图像。</span><span class="sxs-lookup"><span data-stu-id="36818-355">One of the <see cref="T:System.Windows.Forms.MenuGlyph" /> values that specifies the image to draw.</span></span></param>
        <param name="foreColor"><span data-ttu-id="36818-356">替换 <see cref="P:System.Drawing.Color.White" /> 作为前景色的颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-356">The color that replaces <see cref="P:System.Drawing.Color.White" /> as the foreground color.</span></span></param>
        <param name="backColor"><span data-ttu-id="36818-357">替换 <see cref="P:System.Drawing.Color.Black" /> 作为背景色的颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-357">The color that replaces <see cref="P:System.Drawing.Color.Black" /> as the background color.</span></span></param>
        <summary><span data-ttu-id="36818-358">在菜单项控件上指定的图面上，以指定的坐标、高度和宽度绘制指定的菜单标志符号，用 <paramref name="backColor" /> 参数中指定的颜色替换 <see cref="P:System.Drawing.Color.White" />，并用 <paramref name="foreColor" /> 参数中指定的颜色替换 <see cref="P:System.Drawing.Color.Black" />。</span><span class="sxs-lookup"><span data-stu-id="36818-358">Draws the specified menu glyph on a menu item control within the specified coordinates, height, and width on the specified surface, replacing <see cref="P:System.Drawing.Color.White" /> with the color specified in the <paramref name="backColor" /> parameter and replacing <see cref="P:System.Drawing.Color.Black" /> with the color specified in the <paramref name="foreColor" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-359">当所有者描述<xref:System.Windows.Forms.MenuItem>控件，您需要先验证属性值来确定正确的标志符号，以绘制或删除。</span><span class="sxs-lookup"><span data-stu-id="36818-359">When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove.</span></span> <span data-ttu-id="36818-360">例如，当<xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType>属性设置为`true`，必须调用<xref:System.Windows.Forms.MenuGlyph.Checkmark>值<xref:System.Windows.Forms.MenuGlyph>上绘制一个复选标记<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="36818-360">For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph.Checkmark> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MenuGlyph" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawMixedCheckBox">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-361">绘制三态复选框控件。</span><span class="sxs-lookup"><span data-stu-id="36818-361">Draws a three-state check box control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawMixedCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawMixedCheckBox (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMixedCheckBox(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMixedCheckBox(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-362">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-362">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-363">代表复选框尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-363">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the check box.</span></span></param>
        <param name="state"><span data-ttu-id="36818-364"><see cref="T:System.Windows.Forms.ButtonState" /> 值的按位组合，指定将复选框画入的状态。</span><span class="sxs-lookup"><span data-stu-id="36818-364">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the check box in.</span></span></param>
        <summary><span data-ttu-id="36818-365">在指定边界内、指定的图形表面上，绘制处于指定状态的三态复选框控件。</span><span class="sxs-lookup"><span data-stu-id="36818-365">Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
      </Docs>
    </Member>
    <Member MemberName="DrawMixedCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawMixedCheckBox (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMixedCheckBox(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMixedCheckBox(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-366">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-366">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="36818-367">所绘制矩形左上角的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-367">The x-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="36818-368">所绘制矩形左上角的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-368">The y-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="36818-369">复选框的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-369">The width of the check box.</span></span></param>
        <param name="height"><span data-ttu-id="36818-370">复选框的高度。</span><span class="sxs-lookup"><span data-stu-id="36818-370">The height of the check box.</span></span></param>
        <param name="state"><span data-ttu-id="36818-371"><see cref="T:System.Windows.Forms.ButtonState" /> 值的按位组合，指定将复选框画入的状态。</span><span class="sxs-lookup"><span data-stu-id="36818-371">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the check box in.</span></span></param>
        <summary><span data-ttu-id="36818-372">在指定边界内、指定的图形表面上，绘制处于指定状态的三态复选框控件。</span><span class="sxs-lookup"><span data-stu-id="36818-372">Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawRadioButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-373">绘制单选按钮控件。</span><span class="sxs-lookup"><span data-stu-id="36818-373">Draws a radio button control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawRadioButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-374">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-374">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-375">代表单选按钮尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-375">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the radio button.</span></span></param>
        <param name="state"><span data-ttu-id="36818-376"><see cref="T:System.Windows.Forms.ButtonState" /> 值的按位组合，指定将单选按钮画入的状态。</span><span class="sxs-lookup"><span data-stu-id="36818-376">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the radio button in.</span></span></param>
        <summary><span data-ttu-id="36818-377">在指定边界内、指定的图形表面上，绘制处于指定状态的单选按钮控件。</span><span class="sxs-lookup"><span data-stu-id="36818-377">Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawRadioButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-378">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-378">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="36818-379">所绘制矩形左上角的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-379">The x-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="36818-380">所绘制矩形左上角的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-380">The y-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="36818-381">单选按钮的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-381">The width of the radio button.</span></span></param>
        <param name="height"><span data-ttu-id="36818-382">单选按钮的高度。</span><span class="sxs-lookup"><span data-stu-id="36818-382">The height of the radio button.</span></span></param>
        <param name="state"><span data-ttu-id="36818-383"><see cref="T:System.Windows.Forms.ButtonState" /> 值的按位组合，指定将单选按钮画入的状态。</span><span class="sxs-lookup"><span data-stu-id="36818-383">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the radio button in.</span></span></param>
        <summary><span data-ttu-id="36818-384">在指定边界内、指定的图形表面上，绘制处于指定状态的单选按钮控件。</span><span class="sxs-lookup"><span data-stu-id="36818-384">Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawReversibleFrame">
      <MemberSignature Language="C#" Value="public static void DrawReversibleFrame (System.Drawing.Rectangle rectangle, System.Drawing.Color backColor, System.Windows.Forms.FrameStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawReversibleFrame(valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.FrameStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawReversibleFrame(System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.FrameStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawReversibleFrame(System::Drawing::Rectangle rectangle, System::Drawing::Color backColor, System::Windows::Forms::FrameStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="style" Type="System.Windows.Forms.FrameStyle" />
      </Parameters>
      <Docs>
        <param name="rectangle"><span data-ttu-id="36818-385">代表要绘制矩形的尺寸的 <see cref="T:System.Drawing.Rectangle" />（采用屏幕坐标）。</span><span class="sxs-lookup"><span data-stu-id="36818-385">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the rectangle to draw, in screen coordinates.</span></span></param>
        <param name="backColor"><span data-ttu-id="36818-386">框架的背景的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-386">The <see cref="T:System.Drawing.Color" /> of the background behind the frame.</span></span></param>
        <param name="style"><span data-ttu-id="36818-387"><see cref="T:System.Windows.Forms.FrameStyle" /> 值之一，它指定框架的样式。</span><span class="sxs-lookup"><span data-stu-id="36818-387">One of the <see cref="T:System.Windows.Forms.FrameStyle" /> values that specifies the style of the frame.</span></span></param>
        <summary><span data-ttu-id="36818-388">在屏幕上的指定边界内，按指定背景色绘制处于指定状态的可逆框架。</span><span class="sxs-lookup"><span data-stu-id="36818-388">Draws a reversible frame on the screen within the specified bounds, with the specified background color, and in the specified state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-389">`backColor`参数用于计算框架的填充颜色，以便它始终是可见的背景。</span><span class="sxs-lookup"><span data-stu-id="36818-389">The `backColor` parameter is used to calculate the fill color of the frame so that it is always visible against the background.</span></span>  
  
 <span data-ttu-id="36818-390">可以通过再次绘制同一帧逆转此方法的结果。</span><span class="sxs-lookup"><span data-stu-id="36818-390">The results of this method can be reversed by drawing the same frame again.</span></span> <span data-ttu-id="36818-391">绘制框架中，使用此方法具有类似于反转屏幕中，一个区域，只不过它提供更好的性能更广泛的颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-391">Drawing a frame using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36818-392">下面的代码示例演示如何使用<xref:System.Windows.Forms.Control.RectangleToScreen%2A?displayProperty=nameWithType>， <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=nameWithType>，和<xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="36818-392">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.RectangleToScreen%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=nameWithType>, and the <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A> members.</span></span> <span data-ttu-id="36818-393">若要运行该示例，请将以下代码粘贴在窗体调用`Form1`包含多个控件。</span><span class="sxs-lookup"><span data-stu-id="36818-393">To run the example, paste the following code in a form called `Form1` containing several controls.</span></span> <span data-ttu-id="36818-394">此示例需要的鼠标事件连接到示例中定义的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="36818-394">This example requires that the mouse events are connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.FrameStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawReversibleLine">
      <MemberSignature Language="C#" Value="public static void DrawReversibleLine (System.Drawing.Point start, System.Drawing.Point end, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawReversibleLine(valuetype System.Drawing.Point start, valuetype System.Drawing.Point end, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawReversibleLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawReversibleLine (start As Point, end As Point, backColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawReversibleLine(System::Drawing::Point start, System::Drawing::Point end, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Drawing.Point" />
        <Parameter Name="end" Type="System.Drawing.Point" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="36818-395">用屏幕坐标表示的线的起始 <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="36818-395">The starting <see cref="T:System.Drawing.Point" /> of the line, in screen coordinates.</span></span></param>
        <param name="end"><span data-ttu-id="36818-396">用屏幕坐标表示的线的结束 <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="36818-396">The ending <see cref="T:System.Drawing.Point" /> of the line, in screen coordinates.</span></span></param>
        <param name="backColor"><span data-ttu-id="36818-397">线的背景的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-397">The <see cref="T:System.Drawing.Color" /> of the background behind the line.</span></span></param>
        <summary><span data-ttu-id="36818-398">在屏幕上指定的起始点和结束点内绘制具有指定背景色的可逆线。</span><span class="sxs-lookup"><span data-stu-id="36818-398">Draws a reversible line on the screen within the specified starting and ending points and with the specified background color.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-399">`backColor`参数用于计算的填充颜色的行，以便它始终是可见的背景。</span><span class="sxs-lookup"><span data-stu-id="36818-399">The `backColor` parameter is used to calculate the fill color of the line so that it is always visible against the background.</span></span>  
  
 <span data-ttu-id="36818-400">可以通过再次绘制同一行逆转此方法的结果。</span><span class="sxs-lookup"><span data-stu-id="36818-400">The results of this method can be reversed by drawing the same line again.</span></span> <span data-ttu-id="36818-401">绘制一条直线使用此方法具有类似于反转屏幕中，一个区域，只不过它提供更好的性能更广泛的颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-401">Drawing a line using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36818-402">下面的代码示例演示如何使用<xref:System.Windows.Forms.ControlPaint.DrawReversibleLine%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="36818-402">The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawReversibleLine%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="36818-403">若要运行该示例，请在窗体中粘贴以下代码。</span><span class="sxs-lookup"><span data-stu-id="36818-403">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="36818-404">添加名为的按钮`Button3`到窗体，并确保所有事件都连接到其事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="36818-404">Add a button named `Button3` to the form and ensure all events are connected to their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.FrameStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawScrollButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-405">在滚动条控件上绘制滚动按钮。</span><span class="sxs-lookup"><span data-stu-id="36818-405">Draws a scroll button on a scroll bar control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawScrollButton">
      <MemberSignature Language="C#" Value="public static void DrawScrollButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ScrollButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawScrollButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ScrollButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawScrollButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ScrollButton button, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="button" Type="System.Windows.Forms.ScrollButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-406">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-406">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="36818-407">代表标志符号尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-407">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the glyph.</span></span></param>
        <param name="button"><span data-ttu-id="36818-408"><see cref="T:System.Windows.Forms.ScrollButton" /> 值的其中之一，指定要绘制的滚动箭头的类型。</span><span class="sxs-lookup"><span data-stu-id="36818-408">One of the <see cref="T:System.Windows.Forms.ScrollButton" /> values that specifies the type of scroll arrow to draw.</span></span></param>
        <param name="state"><span data-ttu-id="36818-409"><see cref="T:System.Windows.Forms.ButtonState" /> 值的按位组合，指定要将滚动按钮画入的状态。</span><span class="sxs-lookup"><span data-stu-id="36818-409">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the scroll button in.</span></span></param>
        <summary><span data-ttu-id="36818-410">在滚动条控件上绘制位于指定边界内、在指定的图形表面上、处于指定状态的指定滚动按钮。</span><span class="sxs-lookup"><span data-stu-id="36818-410">Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ScrollButton" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
        <altmember cref="T:System.Windows.Forms.ScrollBar" />
      </Docs>
    </Member>
    <Member MemberName="DrawScrollButton">
      <MemberSignature Language="C#" Value="public static void DrawScrollButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ScrollButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawScrollButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ScrollButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawScrollButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ScrollButton button, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Forms.ScrollButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-411">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-411">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="36818-412">所绘制矩形左上角的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-412">The x-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="36818-413">所绘制矩形左上角的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-413">The y-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="36818-414">滚动按钮的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-414">The width of the scroll button.</span></span></param>
        <param name="height"><span data-ttu-id="36818-415">滚动按钮的高度。</span><span class="sxs-lookup"><span data-stu-id="36818-415">The height of the scroll button.</span></span></param>
        <param name="button"><span data-ttu-id="36818-416"><see cref="T:System.Windows.Forms.ScrollButton" /> 值的其中之一，指定要绘制的滚动箭头的类型。</span><span class="sxs-lookup"><span data-stu-id="36818-416">One of the <see cref="T:System.Windows.Forms.ScrollButton" /> values that specifies the type of scroll arrow to draw.</span></span></param>
        <param name="state"><span data-ttu-id="36818-417"><see cref="T:System.Windows.Forms.ButtonState" /> 值的按位组合，指定要将滚动按钮画入的状态。</span><span class="sxs-lookup"><span data-stu-id="36818-417">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the scroll button in.</span></span></param>
        <summary><span data-ttu-id="36818-418">在滚动条控件上绘制位于指定边界内、在指定的图形表面上、处于指定状态的指定滚动按钮。</span><span class="sxs-lookup"><span data-stu-id="36818-418">Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ScrollButton" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
        <altmember cref="T:System.Windows.Forms.ScrollBar" />
      </Docs>
    </Member>
    <Member MemberName="DrawSelectionFrame">
      <MemberSignature Language="C#" Value="public static void DrawSelectionFrame (System.Drawing.Graphics graphics, bool active, System.Drawing.Rectangle outsideRect, System.Drawing.Rectangle insideRect, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSelectionFrame(class System.Drawing.Graphics graphics, bool active, valuetype System.Drawing.Rectangle outsideRect, valuetype System.Drawing.Rectangle insideRect, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSelectionFrame(System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawSelectionFrame(System::Drawing::Graphics ^ graphics, bool active, System::Drawing::Rectangle outsideRect, System::Drawing::Rectangle insideRect, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="active" Type="System.Boolean" />
        <Parameter Name="outsideRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="insideRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-419">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-419">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="active">
          <span data-ttu-id="36818-420">若要绘制处于活动状态的选择框架，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36818-420"><see langword="true" /> to draw the selection frame in an active state; otherwise, <see langword="false" />.</span></span></param>
        <param name="outsideRect"><span data-ttu-id="36818-421">代表选择框架外边界的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-421">The <see cref="T:System.Drawing.Rectangle" /> that represents the outer boundary of the selection frame.</span></span></param>
        <param name="insideRect"><span data-ttu-id="36818-422">代表选择框架内边界的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-422">The <see cref="T:System.Drawing.Rectangle" /> that represents the inner boundary of the selection frame.</span></span></param>
        <param name="backColor"><span data-ttu-id="36818-423">框架的背景的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-423">The <see cref="T:System.Drawing.Color" /> of the background behind the frame.</span></span></param>
        <summary><span data-ttu-id="36818-424">在指定的图形表面上，按指定的内部与外部尺寸和指定的背景色绘制处于指定状态的标准选择框架。</span><span class="sxs-lookup"><span data-stu-id="36818-424">Draws a standard selection frame in the specified state, on the specified graphics surface, with the specified inner and outer dimensions, and with the specified background color.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-425">选择框架是在设计时绘制围绕选定的组件的帧。</span><span class="sxs-lookup"><span data-stu-id="36818-425">A selection frame is a frame that is drawn around a selected component at design time.</span></span>  
  
 <span data-ttu-id="36818-426">`backColor`参数用于计算框架的填充颜色，以便它始终是可见的背景。</span><span class="sxs-lookup"><span data-stu-id="36818-426">The `backColor` parameter is used to calculate the fill color of the frame so that it is always visible against the background.</span></span>  
  
 <span data-ttu-id="36818-427">如果`active`参数设置为`true`，选择框绘制为一组，该值指示该组件已激活的阴影标记; 否则，选择框绘制具有线模式或 nothing，具体取决于实现.</span><span class="sxs-lookup"><span data-stu-id="36818-427">If the `active` parameter is set to `true`, the selection frame is drawn as a set of hatch marks indicating that the component has been activated; otherwise, the selection frame is drawn with a dotted pattern or nothing, depending on the implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawSizeGrip">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-428">在窗体上绘制大小手柄。</span><span class="sxs-lookup"><span data-stu-id="36818-428">Draws a size grip on a form.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawSizeGrip">
      <MemberSignature Language="C#" Value="public static void DrawSizeGrip (System.Drawing.Graphics graphics, System.Drawing.Color backColor, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSizeGrip(class System.Drawing.Graphics graphics, valuetype System.Drawing.Color backColor, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawSizeGrip(System::Drawing::Graphics ^ graphics, System::Drawing::Color backColor, System::Drawing::Rectangle bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-429">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-429">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="backColor"><span data-ttu-id="36818-430">背景的 <see cref="T:System.Drawing.Color" />，使用它来确定大小手柄的颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-430">The <see cref="T:System.Drawing.Color" /> of the background used to determine the colors of the size grip.</span></span></param>
        <param name="bounds"><span data-ttu-id="36818-431">代表大小手柄尺寸的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="36818-431">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the size grip.</span></span></param>
        <summary><span data-ttu-id="36818-432">在窗体上绘制位于指定的图形表面上、具有指定边界和背景色的大小手柄。</span><span class="sxs-lookup"><span data-stu-id="36818-432">Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-433">`backColor`参数用于计算的大小调整手柄的颜色，以便它始终是可见的背景。</span><span class="sxs-lookup"><span data-stu-id="36818-433">The `backColor` parameter is used to calculate the color of the size grip so that it is always visible against the background.</span></span>  
  
 <span data-ttu-id="36818-434">在定义调整大小的窗口，你可以纳入大小调整手柄。</span><span class="sxs-lookup"><span data-stu-id="36818-434">When you define a sizable window, you can include a size grip.</span></span> <span data-ttu-id="36818-435">大小调整手柄是一个特殊的句柄，使用户能够调整窗口的大小。</span><span class="sxs-lookup"><span data-stu-id="36818-435">A size grip is a special handle that enables the user to resize a window.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.SizeGripStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawSizeGrip">
      <MemberSignature Language="C#" Value="public static void DrawSizeGrip (System.Drawing.Graphics graphics, System.Drawing.Color backColor, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSizeGrip(class System.Drawing.Graphics graphics, valuetype System.Drawing.Color backColor, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawSizeGrip(System::Drawing::Graphics ^ graphics, System::Drawing::Color backColor, int x, int y, int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-436">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-436">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="backColor"><span data-ttu-id="36818-437">背景的 <see cref="T:System.Drawing.Color" />，使用它来确定大小手柄的颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-437">The <see cref="T:System.Drawing.Color" /> of the background used to determine the colors of the size grip.</span></span></param>
        <param name="x"><span data-ttu-id="36818-438">大小手柄的左上角的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-438">The x-coordinate of the upper left corner of the size grip.</span></span></param>
        <param name="y"><span data-ttu-id="36818-439">大小手柄的左上角的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="36818-439">The y-coordinate of the upper left corner of the size grip.</span></span></param>
        <param name="width"><span data-ttu-id="36818-440">大小手柄的宽度。</span><span class="sxs-lookup"><span data-stu-id="36818-440">The width of the size grip.</span></span></param>
        <param name="height"><span data-ttu-id="36818-441">大小手柄的高度。</span><span class="sxs-lookup"><span data-stu-id="36818-441">The height of the size grip.</span></span></param>
        <summary><span data-ttu-id="36818-442">在窗体上绘制位于指定的图形表面上、具有指定边界和背景色的大小手柄。</span><span class="sxs-lookup"><span data-stu-id="36818-442">Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-443">`backColor`参数用于计算的大小调整手柄的颜色，以便它始终是可见的背景。</span><span class="sxs-lookup"><span data-stu-id="36818-443">The `backColor` parameter is used to calculate the color of the size grip so that it is always visible against the background.</span></span>  
  
 <span data-ttu-id="36818-444">在定义调整大小的窗口，你可以纳入大小调整手柄。</span><span class="sxs-lookup"><span data-stu-id="36818-444">When you define a sizable window, you can include a size grip.</span></span> <span data-ttu-id="36818-445">大小调整手柄是一个特殊的句柄，使用户能够调整窗口的大小。</span><span class="sxs-lookup"><span data-stu-id="36818-445">A size grip is a special handle that enables the user to resize a window.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.SizeGripStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawStringDisabled">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-446">绘制处于禁用状态的指定字符串。</span><span class="sxs-lookup"><span data-stu-id="36818-446">Draws the specified string in a disabled state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawStringDisabled">
      <MemberSignature Language="C#" Value="public static void DrawStringDisabled (System.Drawing.Graphics graphics, string s, System.Drawing.Font font, System.Drawing.Color color, System.Drawing.RectangleF layoutRectangle, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawStringDisabled(class System.Drawing.Graphics graphics, string s, class System.Drawing.Font font, valuetype System.Drawing.Color color, valuetype System.Drawing.RectangleF layoutRectangle, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawStringDisabled(System::Drawing::Graphics ^ graphics, System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Color color, System::Drawing::RectangleF layoutRectangle, System::Drawing::StringFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-447">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-447">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="s"><span data-ttu-id="36818-448">要绘制的字符串。</span><span class="sxs-lookup"><span data-stu-id="36818-448">The string to draw.</span></span></param>
        <param name="font"><span data-ttu-id="36818-449">绘制字符串所用的 <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="36818-449">The <see cref="T:System.Drawing.Font" /> to draw the string with.</span></span></param>
        <param name="color"><span data-ttu-id="36818-450">字符串背景的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-450">The <see cref="T:System.Drawing.Color" /> of the background behind the string.</span></span></param>
        <param name="layoutRectangle"><span data-ttu-id="36818-451">一个 <see cref="T:System.Drawing.RectangleF" />，它表示字符串的尺寸。</span><span class="sxs-lookup"><span data-stu-id="36818-451">The <see cref="T:System.Drawing.RectangleF" /> that represents the dimensions of the string.</span></span></param>
        <param name="format"><span data-ttu-id="36818-452">应用于字符串的 <see cref="T:System.Drawing.StringFormat" />。</span><span class="sxs-lookup"><span data-stu-id="36818-452">The <see cref="T:System.Drawing.StringFormat" /> to apply to the string.</span></span></param>
        <summary><span data-ttu-id="36818-453">在指定图形表面上的指定边界内，以指定的字体、颜色和格式绘制处于禁用状态的指定字符串。</span><span class="sxs-lookup"><span data-stu-id="36818-453">Draws the specified string in a disabled state on the specified graphics surface; within the specified bounds; and in the specified font, color, and format.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawStringDisabled">
      <MemberSignature Language="C#" Value="public static void DrawStringDisabled (System.Drawing.IDeviceContext dc, string s, System.Drawing.Font font, System.Drawing.Color color, System.Drawing.Rectangle layoutRectangle, System.Windows.Forms.TextFormatFlags format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawStringDisabled(class System.Drawing.IDeviceContext dc, string s, class System.Drawing.Font font, valuetype System.Drawing.Color color, valuetype System.Drawing.Rectangle layoutRectangle, valuetype System.Windows.Forms.TextFormatFlags format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawStringDisabled(System::Drawing::IDeviceContext ^ dc, System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Color color, System::Drawing::Rectangle layoutRectangle, System::Windows::Forms::TextFormatFlags format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc"><span data-ttu-id="36818-454">基于 GDI 的 <see cref="T:System.Windows.Forms.TextRenderer" />。</span><span class="sxs-lookup"><span data-stu-id="36818-454">The GDI-based <see cref="T:System.Windows.Forms.TextRenderer" />.</span></span></param>
        <param name="s"><span data-ttu-id="36818-455">要绘制的字符串。</span><span class="sxs-lookup"><span data-stu-id="36818-455">The string to draw.</span></span></param>
        <param name="font"><span data-ttu-id="36818-456">绘制字符串所用的 <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="36818-456">The <see cref="T:System.Drawing.Font" /> to draw the string with.</span></span></param>
        <param name="color"><span data-ttu-id="36818-457">字符串背景的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-457">The <see cref="T:System.Drawing.Color" /> of the background behind the string.</span></span></param>
        <param name="layoutRectangle"><span data-ttu-id="36818-458">一个 <see cref="T:System.Drawing.RectangleF" />，它表示字符串的尺寸。</span><span class="sxs-lookup"><span data-stu-id="36818-458">The <see cref="T:System.Drawing.RectangleF" /> that represents the dimensions of the string.</span></span></param>
        <param name="format"><span data-ttu-id="36818-459">应用于字符串的 <see cref="T:System.Drawing.StringFormat" />。</span><span class="sxs-lookup"><span data-stu-id="36818-459">The <see cref="T:System.Drawing.StringFormat" /> to apply to the string.</span></span></param>
        <summary><span data-ttu-id="36818-460">使用基于 GDI 的专用 <see cref="T:System.Windows.Forms.TextRenderer" />，在指定图形表面上的指定边界内，以指定的字体、颜色和格式绘制处于禁用状态的指定字符串。</span><span class="sxs-lookup"><span data-stu-id="36818-460">Draws the specified string in a disabled state on the specified graphics surface, within the specified bounds, and in the specified font, color, and format, using the specified GDI-based <see cref="T:System.Windows.Forms.TextRenderer" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawVisualStyleBorder">
      <MemberSignature Language="C#" Value="public static void DrawVisualStyleBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawVisualStyleBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawVisualStyleBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="36818-461">要进行绘制的 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="36818-461">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="bounds"><span data-ttu-id="36818-462">一个 <see cref="T:System.Drawing.Rectangle" />，它代表边框尺寸。</span><span class="sxs-lookup"><span data-stu-id="36818-462">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border.</span></span></param>
        <summary><span data-ttu-id="36818-463">按照适合禁用项的样式绘制边框。</span><span class="sxs-lookup"><span data-stu-id="36818-463">Draws a border in the style appropriate for disabled items.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillReversibleRectangle">
      <MemberSignature Language="C#" Value="public static void FillReversibleRectangle (System.Drawing.Rectangle rectangle, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FillReversibleRectangle(valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.FillReversibleRectangle(System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FillReversibleRectangle(System::Drawing::Rectangle rectangle, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="rectangle"><span data-ttu-id="36818-464">代表要填充矩形的尺寸的 <see cref="T:System.Drawing.Rectangle" />（采用屏幕坐标）。</span><span class="sxs-lookup"><span data-stu-id="36818-464">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the rectangle to fill, in screen coordinates.</span></span></param>
        <param name="backColor"><span data-ttu-id="36818-465">填充区域的背景的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-465">The <see cref="T:System.Drawing.Color" /> of the background behind the fill.</span></span></param>
        <summary><span data-ttu-id="36818-466">在屏幕上绘制实心的可逆矩形。</span><span class="sxs-lookup"><span data-stu-id="36818-466">Draws a filled, reversible rectangle on the screen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-467">`backColor`参数用于计算矩形的填充颜色，以便它始终是可见的背景。</span><span class="sxs-lookup"><span data-stu-id="36818-467">The `backColor` parameter is used to calculate the fill color of the rectangle so that it is always visible against the background.</span></span>  
  
 <span data-ttu-id="36818-468">可以通过再次绘制相同的矩形逆转此方法的结果。</span><span class="sxs-lookup"><span data-stu-id="36818-468">The results of this method can be reversed by drawing the same rectangle again.</span></span> <span data-ttu-id="36818-469">绘制矩形使用此方法具有类似于反转屏幕中，一个区域，只不过它提供更好的性能更广泛的颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-469">Drawing a rectangle using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36818-470">下面的代码示例演示如何使用<xref:System.Windows.Forms.ControlPaint.FillReversibleRectangle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="36818-470">The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.FillReversibleRectangle%2A> method.</span></span> <span data-ttu-id="36818-471">若要运行该示例，请在窗体中粘贴以下代码。</span><span class="sxs-lookup"><span data-stu-id="36818-471">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="36818-472">添加名为的按钮`Button2`到窗体，并确保所有事件都连接到其事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="36818-472">Add a button named `Button2` to the form and ensure all events are connected to their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Light">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36818-473">为控件创建一个新的浅颜色对象。</span><span class="sxs-lookup"><span data-stu-id="36818-473">Creates a new light color object for the control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Light (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Light(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Light(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Light (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Light(System::Drawing::Color baseColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor"><span data-ttu-id="36818-474">要变浅的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-474">The <see cref="T:System.Drawing.Color" /> to be lightened.</span></span></param>
        <summary><span data-ttu-id="36818-475">根据指定的颜色为控件创建一个新的浅颜色对象。</span><span class="sxs-lookup"><span data-stu-id="36818-475">Creates a new light color object for the control from the specified color.</span></span></summary>
        <returns><span data-ttu-id="36818-476">一个 <see cref="T:System.Drawing.Color" />，它代表控件上的浅颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-476">A <see cref="T:System.Drawing.Color" /> that represents the light color on the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-477">如果指定<xref:System.Drawing.Color>是之一<xref:System.Drawing.SystemColors>，颜色转换为<xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=nameWithType>颜色; 否则，减少的颜色亮度值。</span><span class="sxs-lookup"><span data-stu-id="36818-477">If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=nameWithType> color; otherwise, the color's luminosity value is decreased.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Light (System.Drawing.Color baseColor, float percOfLightLight);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Light(valuetype System.Drawing.Color baseColor, float32 percOfLightLight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Light(System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Light (baseColor As Color, percOfLightLight As Single) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Light(System::Drawing::Color baseColor, float percOfLightLight);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
        <Parameter Name="percOfLightLight" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="baseColor"><span data-ttu-id="36818-478">要变浅的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-478">The <see cref="T:System.Drawing.Color" /> to be lightened.</span></span></param>
        <param name="percOfLightLight"><span data-ttu-id="36818-479">要将指定 <see cref="T:System.Drawing.Color" /> 变浅的百分比。</span><span class="sxs-lookup"><span data-stu-id="36818-479">The percentage to lighten the specified <see cref="T:System.Drawing.Color" />.</span></span></param>
        <summary><span data-ttu-id="36818-480">按指定颜色为控件创建一个新的浅颜色对象，并按指定的百分比将其变浅。</span><span class="sxs-lookup"><span data-stu-id="36818-480">Creates a new light color object for the control from the specified color and lightens it by the specified percentage.</span></span></summary>
        <returns><span data-ttu-id="36818-481">一个 <see cref="T:System.Drawing.Color" />，它代表控件上的浅颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-481">A <see cref="T:System.Drawing.Color" /> that represents the light color on the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-482">如果指定<xref:System.Drawing.Color>是之一<xref:System.Drawing.SystemColors>，颜色转换为<xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=nameWithType>颜色; 否则，减少的颜色亮度值。</span><span class="sxs-lookup"><span data-stu-id="36818-482">If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=nameWithType> color; otherwise, the color's luminosity value is decreased.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LightLight">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color LightLight (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color LightLight(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.LightLight(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LightLight (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color LightLight(System::Drawing::Color baseColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor"><span data-ttu-id="36818-483">要变浅的 <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="36818-483">The <see cref="T:System.Drawing.Color" /> to be lightened.</span></span></param>
        <summary><span data-ttu-id="36818-484">根据指定的颜色为控件创建一个新的浅颜色对象。</span><span class="sxs-lookup"><span data-stu-id="36818-484">Creates a new light color object for the control from the specified color.</span></span></summary>
        <returns><span data-ttu-id="36818-485">一个 <see cref="T:System.Drawing.Color" />，它代表控件上的浅颜色。</span><span class="sxs-lookup"><span data-stu-id="36818-485">A <see cref="T:System.Drawing.Color" /> that represents the light color on the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36818-486">如果指定<xref:System.Drawing.Color>是之一<xref:System.Drawing.SystemColors>，颜色转换为<xref:System.Drawing.SystemColors.ControlLightLight%2A?displayProperty=nameWithType>颜色; 否则，增加的颜色亮度值。</span><span class="sxs-lookup"><span data-stu-id="36818-486">If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to the <xref:System.Drawing.SystemColors.ControlLightLight%2A?displayProperty=nameWithType> color; otherwise, the color's luminosity value is increased.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>