<Type Name="IDataGridViewEditingControl" FullName="System.Windows.Forms.IDataGridViewEditingControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="50269d82218fb858d594b5025d5cea2d72788127" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52193327" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataGridViewEditingControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataGridViewEditingControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataGridViewEditingControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataGridViewEditingControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataGridViewEditingControl" />
  <TypeSignature Language="F#" Value="type IDataGridViewEditingControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="108f8-101">定义承载在 <see cref="T:System.Windows.Forms.DataGridView" /> 的单元格内的控件的常见功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="108f8-101">Defines common functionality for controls that are hosted within cells of a <see cref="T:System.Windows.Forms.DataGridView" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="108f8-102">此接口实现的控件，如<xref:System.Windows.Forms.DataGridViewComboBoxEditingControl>和<xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>，由相应托管<xref:System.Windows.Forms.DataGridView>单元格，如<xref:System.Windows.Forms.DataGridViewComboBoxCell>和<xref:System.Windows.Forms.DataGridViewTextBoxCell>，当它们处于编辑模式。</span><span class="sxs-lookup"><span data-stu-id="108f8-102">This interface is implemented by controls, such as <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> and <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>, that are hosted by corresponding <xref:System.Windows.Forms.DataGridView> cells, such as <xref:System.Windows.Forms.DataGridViewComboBoxCell> and <xref:System.Windows.Forms.DataGridViewTextBoxCell>, when they are in edit mode.</span></span>  
  
 <span data-ttu-id="108f8-103">单元格可以托管编辑控件集的类型及其<xref:System.Windows.Forms.DataGridViewCell.EditType%2A>属性设置为<xref:System.Type>表示编辑控件类型。</span><span class="sxs-lookup"><span data-stu-id="108f8-103">Cell types that can host editing controls set their <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> property to a <xref:System.Type> representing the editing control type.</span></span> <span data-ttu-id="108f8-104">当单元格进入编辑模式时，执行以下步骤：</span><span class="sxs-lookup"><span data-stu-id="108f8-104">When the cell enters edit mode, the following steps are performed:</span></span>  
  
1.  <span data-ttu-id="108f8-105"><xref:System.Windows.Forms.DataGridView>控件创建编辑控件类型的实例。</span><span class="sxs-lookup"><span data-stu-id="108f8-105">The <xref:System.Windows.Forms.DataGridView> control creates an instance of the editing control type.</span></span>  
  
2.  <span data-ttu-id="108f8-106"><xref:System.Windows.Forms.DataGridView>控件调用单元格<xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="108f8-106">The <xref:System.Windows.Forms.DataGridView> control calls the cell <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> method.</span></span> <span data-ttu-id="108f8-107">您可以重写此方法将传输到编辑控件的单元格的值。</span><span class="sxs-lookup"><span data-stu-id="108f8-107">You can override this method to transfer the cell value to the editing control.</span></span>  
  
3.  <span data-ttu-id="108f8-108"><xref:System.Windows.Forms.DataGridView>控件调用编辑控件<xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A>方法并传入当前单元格的样式。</span><span class="sxs-lookup"><span data-stu-id="108f8-108">The <xref:System.Windows.Forms.DataGridView> control calls the editing control <xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A> method and passes in the cell's current style.</span></span> <span data-ttu-id="108f8-109">您可以实现此方法来初始化编辑控件的外观，使其匹配的单元格的外观。</span><span class="sxs-lookup"><span data-stu-id="108f8-109">You can implement this method to initialize the appearance of the editing control so that it matches the appearance of the cell.</span></span>  
  
4.  <span data-ttu-id="108f8-110"><xref:System.Windows.Forms.DataGridView>控件调用编辑控件<xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="108f8-110">The <xref:System.Windows.Forms.DataGridView> control calls the editing control <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> method.</span></span> <span data-ttu-id="108f8-111">您可以实现此方法进行最终调整到编辑控件，如选择控件的值。</span><span class="sxs-lookup"><span data-stu-id="108f8-111">You can implement this method to make final adjustments to the editing control, such as selecting the control value.</span></span>  
  
 <span data-ttu-id="108f8-112">有关实现详细信息<xref:System.Windows.Forms.IDataGridViewEditingControl>，请参阅[如何： 在 Windows 窗体 DataGridView 单元格中的宿主控件](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。</span><span class="sxs-lookup"><span data-stu-id="108f8-112">For more information about implementing <xref:System.Windows.Forms.IDataGridViewEditingControl>, see [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 <span data-ttu-id="108f8-113">单元格类型，如<xref:System.Windows.Forms.DataGridViewCheckBoxCell>，为指定值，而不必寄宿编辑控件实现提供用户界面 (UI)<xref:System.Windows.Forms.IDataGridViewEditingCell>接口。</span><span class="sxs-lookup"><span data-stu-id="108f8-113">Cell types such as <xref:System.Windows.Forms.DataGridViewCheckBoxCell> that provide a user interface (UI) for specifying values without hosting an editing control implement the <xref:System.Windows.Forms.IDataGridViewEditingCell> interface.</span></span> <span data-ttu-id="108f8-114">在这种情况下，UI 将显示而不考虑该单元格是否处于编辑模式。</span><span class="sxs-lookup"><span data-stu-id="108f8-114">The UI in this case is displayed regardless of whether the cell is in edit mode.</span></span>  
  
 <span data-ttu-id="108f8-115">其他单元格类型，如<xref:System.Windows.Forms.DataGridViewButtonCell>、 提供 UI，但不是存储用户指定的值。</span><span class="sxs-lookup"><span data-stu-id="108f8-115">Other cell types, such as <xref:System.Windows.Forms.DataGridViewButtonCell>, provide a UI but do not store user-specified values.</span></span> <span data-ttu-id="108f8-116">在这种情况下，单元格类型未实现<xref:System.Windows.Forms.IDataGridViewEditingCell>或承载编辑控件。</span><span class="sxs-lookup"><span data-stu-id="108f8-116">In this case, the cell type does not implement <xref:System.Windows.Forms.IDataGridViewEditingCell> or host an editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="108f8-117">下面的代码示例提供了派生此接口的实现<xref:System.Windows.Forms.DateTimePicker>。</span><span class="sxs-lookup"><span data-stu-id="108f8-117">The following code example provides an implementation of this interface that derives from <xref:System.Windows.Forms.DateTimePicker>.</span></span> <span data-ttu-id="108f8-118">此示例中提供一个更大示例摘自[如何： 在 Windows 窗体 DataGridView 单元格中的宿主控件](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。</span><span class="sxs-lookup"><span data-stu-id="108f8-118">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#300)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#300)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.IDataGridViewEditingCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxCell" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/e79a9d4e-64ec-41f5-93ec-f5492633cbb2">
      <span data-ttu-id="108f8-119">如何：在 Windows 窗体 DataGridView 单元格中承载控件</span>
      <span class="sxs-lookup">
        <span data-stu-id="108f8-119">How to: Host Controls in Windows Forms DataGridView Cells</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="ApplyCellStyleToEditingControl">
      <MemberSignature Language="C#" Value="public void ApplyCellStyleToEditingControl (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCellStyleToEditingControl(class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyCellStyleToEditingControl(System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberSignature Language="F#" Value="abstract member ApplyCellStyleToEditingControl : System.Windows.Forms.DataGridViewCellStyle -&gt; unit" Usage="iDataGridViewEditingControl.ApplyCellStyleToEditingControl dataGridViewCellStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCellStyle">
          <span data-ttu-id="108f8-120">用作用户界面模型的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-120">The <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> to use as the model for the UI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="108f8-121">更改控件的用户界面 (UI)，使之与指定单元格样式一致。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-121">Changes the control's user interface (UI) to be consistent with the specified cell style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="108f8-122">此方法的实现通常情况下，将编辑控件，如字体、 背景色和前景色，UI 属性设置中的相应属性的值为`dataGridViewCellStyle`，这是用于承载的单元格的样式控件。</span><span class="sxs-lookup"><span data-stu-id="108f8-122">Typically, an implementation of this method will set UI properties for the editing control, such as font, background color, and foreground color, to the values of corresponding properties in the `dataGridViewCellStyle`, which is the style used for the cell hosting the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="108f8-123">下面的代码示例提供了此成员的实现。</span><span class="sxs-lookup"><span data-stu-id="108f8-123">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="108f8-124">此示例中提供一个更大示例摘自[如何： 在 Windows 窗体 DataGridView 单元格中的宿主控件](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。</span><span class="sxs-lookup"><span data-stu-id="108f8-124">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#303)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlDataGridView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridView EditingControlDataGridView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridView EditingControlDataGridView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlDataGridView As DataGridView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridView ^ EditingControlDataGridView { System::Windows::Forms::DataGridView ^ get(); void set(System::Windows::Forms::DataGridView ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlDataGridView : System.Windows.Forms.DataGridView with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="108f8-125">获取或设置包含单元格的 <see cref="T:System.Windows.Forms.DataGridView" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-125">Gets or sets the <see cref="T:System.Windows.Forms.DataGridView" /> that contains the cell.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="108f8-126">包含正在编辑的 <see cref="T:System.Windows.Forms.DataGridView" /> 的 <see cref="T:System.Windows.Forms.DataGridViewCell" />；如果没有关联的 <see cref="T:System.Windows.Forms.DataGridView" />，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-126">The <see cref="T:System.Windows.Forms.DataGridView" /> that contains the <see cref="T:System.Windows.Forms.DataGridViewCell" /> that is being edited; <see langword="null" /> if there is no associated <see cref="T:System.Windows.Forms.DataGridView" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object EditingControlFormattedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditingControlFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditingControlFormattedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlFormattedValue : obj with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="108f8-127">获取或设置编辑器正在修改的单元格的格式化值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-127">Gets or sets the formatted value of the cell being modified by the editor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="108f8-128">一个 <see cref="T:System.Object" />，表示单元格的格式化值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-128">An <see cref="T:System.Object" /> that represents the formatted value of the cell.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="108f8-129">带格式的值表示控件的用户界面中显示的值。</span><span class="sxs-lookup"><span data-stu-id="108f8-129">The formatted value represents the value as it is displayed in the control's user interface.</span></span> <span data-ttu-id="108f8-130">带格式的值可能包含控件中的实际值中绝对值的数值，即使数据类型不同。</span><span class="sxs-lookup"><span data-stu-id="108f8-130">The formatted value may be different in absolute value and even data type from the actual value contained in the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="108f8-131">下面的代码示例提供了此成员的实现。</span><span class="sxs-lookup"><span data-stu-id="108f8-131">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="108f8-132">此示例中提供一个更大示例摘自[如何： 在 Windows 窗体 DataGridView 单元格中的宿主控件](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。</span><span class="sxs-lookup"><span data-stu-id="108f8-132">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#301)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#301)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlRowIndex">
      <MemberSignature Language="C#" Value="public int EditingControlRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditingControlRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditingControlRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlRowIndex : int with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="108f8-133">获取或设置该承载单元格的父行的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-133">Gets or sets the index of the hosting cell's parent row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="108f8-134">包含该单元格的行的索引，如果没有父行，则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-134">The index of the row that contains the cell, or –1 if there is no parent row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="108f8-135"><xref:System.Windows.Forms.IDataGridViewEditingControl>接口不会定义相应`ColumnIndex`属性。</span><span class="sxs-lookup"><span data-stu-id="108f8-135">The <xref:System.Windows.Forms.IDataGridViewEditingControl> interface does not define a corresponding `ColumnIndex` property.</span></span> <span data-ttu-id="108f8-136">可以使用<xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A>属性来检索父<xref:System.Windows.Forms.DataGridView>控件，并使用<xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=nameWithType>属性来确定的活动单元格的行和列索引。</span><span class="sxs-lookup"><span data-stu-id="108f8-136">You can use the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A> property to retrieve the parent <xref:System.Windows.Forms.DataGridView> control and use the <xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=nameWithType> property to determine the row and column indexes of the active cell.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlValueChanged">
      <MemberSignature Language="C#" Value="public bool EditingControlValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditingControlValueChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlValueChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditingControlValueChanged { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlValueChanged : bool with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="108f8-137">获取或设置一个值，该值指示编辑控件的值是否与承载单元格的值不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-137">Gets or sets a value indicating whether the value of the editing control differs from the value of the hosting cell.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="108f8-138">如果控件的值与单元格的值不同，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-138">
              <see langword="true" /> if the value of the control differs from the cell value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="108f8-139"><xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged%2A>属性设置为`true`以指示承载单元格的状态已发生更改，并且其用户界面 (UI) 需要更新以反映此值中的更改。</span><span class="sxs-lookup"><span data-stu-id="108f8-139">The <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged%2A> property is set to `true` to indicate that the hosting cell's state has changed and its user interface (UI) needs to be updated to reflect this change in value.</span></span> <span data-ttu-id="108f8-140">所属单元格或表将重置此属性设置为`false`后更新。</span><span class="sxs-lookup"><span data-stu-id="108f8-140">The owning cell or table will reset this property to `false` after an update.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="108f8-141">返回<see langword="true" />此属性在实现中不会自动更改显示的值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="108f8-141">Returning <see langword="true" /> in your implementation of this property does not automatically change the displayed value.</span>
            </span>
            <span data-ttu-id="108f8-142">当编辑控件中更改的值时，必须通知<see cref="T:System.Windows.Forms.DataGridView" />的更改通过传递<see langword="true" />到<see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="108f8-142">When the value changes in the editing control, you must notify the <see cref="T:System.Windows.Forms.DataGridView" /> of the change by passing <see langword="true" /> to the <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlWantsInputKey">
      <MemberSignature Language="C#" Value="public bool EditingControlWantsInputKey (System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EditingControlWantsInputKey(valuetype System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditingControlWantsInputKey (keyData As Keys, dataGridViewWantsInputKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EditingControlWantsInputKey(System::Windows::Forms::Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="F#" Value="abstract member EditingControlWantsInputKey : System.Windows.Forms.Keys * bool -&gt; bool" Usage="iDataGridViewEditingControl.EditingControlWantsInputKey (keyData, dataGridViewWantsInputKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="dataGridViewWantsInputKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="108f8-143">一个 <see cref="T:System.Windows.Forms.Keys" />，表示按下的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-143">A <see cref="T:System.Windows.Forms.Keys" /> that represents the key that was pressed.</span>
          </span>
        </param>
        <param name="dataGridViewWantsInputKey">
          <span data-ttu-id="108f8-144">当 <see cref="T:System.Windows.Forms.DataGridView" /> 要处理 <paramref name="keyData" /> 中的 <see cref="T:System.Windows.Forms.Keys" /> 时，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-144">
              <see langword="true" /> when the <see cref="T:System.Windows.Forms.DataGridView" /> wants to process the <see cref="T:System.Windows.Forms.Keys" /> in <paramref name="keyData" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="108f8-145">确定指定的键是应由编辑控件处理的常规输入键，还是应由 <see cref="T:System.Windows.Forms.DataGridView" /> 处理的特殊键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-145">Determines whether the specified key is a regular input key that the editing control should process or a special key that the <see cref="T:System.Windows.Forms.DataGridView" /> should process.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="108f8-146">如果指定的键是应由编辑控件处理的常规输入键，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-146">
              <see langword="true" /> if the specified key is a regular input key that should be handled by the editing control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="108f8-147">编辑控件实现此方法，以确定哪些输入的键应处理由控件，以及哪些输入键应处理由<xref:System.Windows.Forms.DataGridView>。</span><span class="sxs-lookup"><span data-stu-id="108f8-147">An editing control implements this method to determine which input keys should be processed by the control, and which input keys should be processed by the <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
 <span data-ttu-id="108f8-148"><xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A>方法由调用<xref:System.Windows.Forms.DataGridView>。</span><span class="sxs-lookup"><span data-stu-id="108f8-148">The <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> method is called by the <xref:System.Windows.Forms.DataGridView>.</span></span> <span data-ttu-id="108f8-149"><xref:System.Windows.Forms.DataGridView>将传入`true`有关`dataGridViewWantsInputKey`时，它可以处理`keyData`。</span><span class="sxs-lookup"><span data-stu-id="108f8-149">The <xref:System.Windows.Forms.DataGridView> will pass in `true` for `dataGridViewWantsInputKey` when it can process the `keyData`.</span></span> <span data-ttu-id="108f8-150">如果编辑的控件可以让<xref:System.Windows.Forms.DataGridView>处理`keyData`，<xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A>应返回`false`时`dataGridViewWantsInputKey`是`true`。</span><span class="sxs-lookup"><span data-stu-id="108f8-150">If the editing control can let the <xref:System.Windows.Forms.DataGridView> handle the `keyData`, <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> should return `false` when `dataGridViewWantsInputKey` is `true`.</span></span> <span data-ttu-id="108f8-151">其他实现<xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A>可能会忽略`dataGridViewWantsInputKey`的值`true`并处理`keyData`编辑控件中。</span><span class="sxs-lookup"><span data-stu-id="108f8-151">Other implementations of <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> may ignore a `dataGridViewWantsInputKey` value of `true` and handle the `keyData` in the editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="108f8-152">下面的代码示例提供了此成员的实现。</span><span class="sxs-lookup"><span data-stu-id="108f8-152">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="108f8-153">此示例中提供一个更大示例摘自[如何： 在 Windows 窗体 DataGridView 单元格中的宿主控件](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。</span><span class="sxs-lookup"><span data-stu-id="108f8-153">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#305)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#305)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingPanelCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Cursor EditingPanelCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor EditingPanelCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingPanelCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Cursor ^ EditingPanelCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingPanelCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="108f8-154">获取当鼠标指针位于 <see cref="P:System.Windows.Forms.DataGridView.EditingPanel" /> 上方但不位于编辑控件上方时所使用的光标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-154">Gets the cursor used when the mouse pointer is over the <see cref="P:System.Windows.Forms.DataGridView.EditingPanel" /> but not over the editing control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="108f8-155">一个 <see cref="T:System.Windows.Forms.Cursor" />，表示用于编辑面板的鼠标指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-155">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the mouse pointer used for the editing panel.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="108f8-156">编辑面板是<xref:System.Windows.Forms.Panel>主机的编辑控制何时<xref:System.Windows.Forms.DataGridView>控件处于编辑模式。</span><span class="sxs-lookup"><span data-stu-id="108f8-156">The editing panel is the <xref:System.Windows.Forms.Panel> that hosts the editing control when the <xref:System.Windows.Forms.DataGridView> control is in edit mode.</span></span> <span data-ttu-id="108f8-157">实际的编辑控件可能无法涵盖的编辑面板的整个区域。</span><span class="sxs-lookup"><span data-stu-id="108f8-157">The actual editing control may not cover the entire area of the editing panel.</span></span> <span data-ttu-id="108f8-158">在这种情况下，<xref:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor%2A>实现应返回鼠标指针位于面板上方但不是需要通过该控件时要使用的游标。</span><span class="sxs-lookup"><span data-stu-id="108f8-158">In this case, the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor%2A> implementation should return the cursor to use when the mouse pointer is over the panel but not over the control.</span></span> <span data-ttu-id="108f8-159">通常情况下，想要返回该控件使用的同一个游标。</span><span class="sxs-lookup"><span data-stu-id="108f8-159">Typically, you will want to return the same cursor that the control uses.</span></span> <span data-ttu-id="108f8-160">如果你想要更改鼠标指针位于控件上方时显示的光标，则必须设置<xref:System.Windows.Forms.Control.Cursor%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="108f8-160">If you want to change the cursor that appears when the pointer is over the control, you must set the <xref:System.Windows.Forms.Control.Cursor%2A> property.</span></span> <span data-ttu-id="108f8-161">可将其设置的构造函数中<xref:System.Windows.Forms.IDataGridViewEditingControl>实现，或者你可以将其设置<xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A>实现。</span><span class="sxs-lookup"><span data-stu-id="108f8-161">You can set this in the constructor of the <xref:System.Windows.Forms.IDataGridViewEditingControl> implementation, or you can set it in the <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="108f8-162">下面的代码示例提供了此成员的实现。</span><span class="sxs-lookup"><span data-stu-id="108f8-162">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="108f8-163">此示例中提供一个更大示例摘自[如何： 在 Windows 窗体 DataGridView 单元格中的宿主控件](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。</span><span class="sxs-lookup"><span data-stu-id="108f8-163">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#311)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#311)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.Panel" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetEditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditingControlFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditingControlFormattedValue(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditingControlFormattedValue (context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditingControlFormattedValue(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="abstract member GetEditingControlFormattedValue : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="iDataGridViewEditingControl.GetEditingControlFormattedValue context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="108f8-164">
            <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 值的按位组合，它指定需要数据的上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-164">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> values that specifies the context in which the data is needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="108f8-165">检索单元格的格式化值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-165">Retrieves the formatted value of the cell.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="108f8-166">一个 <see cref="T:System.Object" />，表示单元格内容的格式化版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-166">An <see cref="T:System.Object" /> that represents the formatted version of the cell contents.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="108f8-167">带格式的值表示控件的用户界面中显示的值。</span><span class="sxs-lookup"><span data-stu-id="108f8-167">The formatted value represents the value as it is displayed in the control's user interface.</span></span> <span data-ttu-id="108f8-168">带格式的值可能包含控件中的实际值中绝对值的数值，即使数据类型不同。</span><span class="sxs-lookup"><span data-stu-id="108f8-168">The formatted value may be different in absolute value and even data type from the actual value contained in the control.</span></span>  
  
 <span data-ttu-id="108f8-169">若要设置控件的格式化的值，使用<xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="108f8-169">To set the formatted value of the control, use the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="108f8-170">更改此方法的实现中返回的值不会自动更改显示的值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="108f8-170">Changing the return value in your implementation of this method does not automatically change the displayed value.</span>
            </span>
            <span data-ttu-id="108f8-171">当编辑控件中更改的值时，必须通知<see cref="T:System.Windows.Forms.DataGridView" />的更改通过传递<see langword="true" />到<see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="108f8-171">When the value changes in the editing control, you must notify the <see cref="T:System.Windows.Forms.DataGridView" /> of the change by passing <see langword="true" /> to the <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareEditingControlForEdit">
      <MemberSignature Language="C#" Value="public void PrepareEditingControlForEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareEditingControlForEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrepareEditingControlForEdit (selectAll As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrepareEditingControlForEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member PrepareEditingControlForEdit : bool -&gt; unit" Usage="iDataGridViewEditingControl.PrepareEditingControlForEdit selectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll">
          <span data-ttu-id="108f8-172">为 <see langword="true" />，则选择单元格的全部内容；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-172">
              <see langword="true" /> to select all of the cell's content; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="108f8-173">准备当前选中的单元格以进行编辑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-173">Prepares the currently selected cell for editing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="108f8-174">此方法旨在准备要进行编辑控件及其内容。</span><span class="sxs-lookup"><span data-stu-id="108f8-174">The purpose of this method is to prepare the control and its contents for editing.</span></span> <span data-ttu-id="108f8-175">例如，你可能想要将插入点定位末尾的内容，或更改内容的对齐方式。</span><span class="sxs-lookup"><span data-stu-id="108f8-175">For example, you might want to put the insertion point at the end of the contents, or change how the contents are aligned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="RepositionEditingControlOnValueChange">
      <MemberSignature Language="C#" Value="public bool RepositionEditingControlOnValueChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RepositionEditingControlOnValueChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RepositionEditingControlOnValueChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RepositionEditingControlOnValueChange { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RepositionEditingControlOnValueChange : bool" Usage="System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="108f8-176">获取或设置一个值，该值指示每当值更改时，是否需要重新定位单元格的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-176">Gets or sets a value indicating whether the cell contents need to be repositioned whenever the value changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="108f8-177">如果需要重新定位单元格内容，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="108f8-177">
              <see langword="true" /> if the contents need to be repositioned; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="108f8-178">某些情况下需要单元格内容的值更改时重新定位。</span><span class="sxs-lookup"><span data-stu-id="108f8-178">Some situations require that cell contents reposition when the value changes.</span></span> <span data-ttu-id="108f8-179">例如，单元格内容可能需要重新定位单元格使文本换行和内容变得更大时。</span><span class="sxs-lookup"><span data-stu-id="108f8-179">For example, cell contents may need to reposition when a cell wraps text and the contents become larger.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>