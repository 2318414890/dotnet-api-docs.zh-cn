<Type Name="ContextMenuStrip" FullName="System.Windows.Forms.ContextMenuStrip">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b6944fd7ef4556ef18bbbfbfed3db7d28046a482" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30638871" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContextMenuStrip : System.Windows.Forms.ToolStripDropDownMenu" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextMenuStrip extends System.Windows.Forms.ToolStripDropDownMenu" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ContextMenuStrip" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextMenuStrip&#xA;Inherits ToolStripDropDownMenu" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextMenuStrip : System::Windows::Forms::ToolStripDropDownMenu" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStripDropDownMenu</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Opening")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示快捷菜单。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ContextMenuStrip> 替换<xref:System.Windows.Forms.ContextMenu>。 你可以将关联<xref:System.Windows.Forms.ContextMenuStrip>任何控件，与鼠标右键单击将自动显示的快捷菜单。 你可以显示<xref:System.Windows.Forms.ContextMenuStrip>以编程方式通过使用<xref:System.Windows.Forms.ToolStripDropDown.Show%2A>方法。 <xref:System.Windows.Forms.ContextMenuStrip> 支持可取消<xref:System.Windows.Forms.ToolStripDropDown.Opening>和<xref:System.Windows.Forms.ToolStripDropDown.Closing>事件，以处理动态填充和多次单击方案。 <xref:System.Windows.Forms.ContextMenuStrip> 支持映像、 菜单项检查状态、 文本、 访问密钥、 快捷方式，和级联菜单。  
  
 以下各项专门用于与都无缝配合<xref:System.Windows.Forms.ToolStripSystemRenderer>和<xref:System.Windows.Forms.ToolStripProfessionalRenderer>中所有的方向。 会在设计时按默认提供的<xref:System.Windows.Forms.ContextMenuStrip>控件：  
  
-   <xref:System.Windows.Forms.ToolStripMenuItem>  
  
-   <xref:System.Windows.Forms.ToolStripSeparator>  
  
-   <xref:System.Windows.Forms.ToolStripTextBox>  
  
-   <xref:System.Windows.Forms.ToolStripComboBox>  
  
 快捷菜单通常用于组合不同的菜单项从<xref:System.Windows.Forms.MenuStrip>窗体，可用于用户给出的应用程序的上下文。 例如，你可以使用快捷菜单分配给<xref:System.Windows.Forms.TextBox>控件将查找控件或复制并粘贴文本的剪贴板功能中的文本的文本字体更改为提供菜单项。 此外可以公开新<xref:System.Windows.Forms.ToolStripMenuItem>快捷菜单中的对象，并不位于<xref:System.Windows.Forms.MenuStrip>提供有不适合于特定情况命令<xref:System.Windows.Forms.MenuStrip>以显示。  
  
 通常情况下，当用户单击鼠标右键按钮的控件或窗体本身通过显示快捷菜单。 许多可见控件，以及<xref:System.Windows.Forms.Form>本身，<xref:System.Windows.Forms.Control.ContextMenuStrip%2A?displayProperty=nameWithType>将绑定的属性<xref:System.Windows.Forms.ContextMenuStrip>到显示的快捷菜单的控件的类。 可以使用多个控件<xref:System.Windows.Forms.ContextMenuStrip>。  
  
 设置<xref:System.Windows.Forms.ToolStripDropDownMenu.ShowCheckMargin%2A?displayProperty=nameWithType>属性`true`将空间添加到左侧的<xref:System.Windows.Forms.ToolStripMenuItem>项是启用还是选择显示的菜单的选中标记。 <xref:System.Windows.Forms.ToolStripDropDownMenu.ShowImageMargin%2A?displayProperty=nameWithType>属性设置为`true`默认情况下。 使用左侧的此空间<xref:System.Windows.Forms.ToolStripMenuItem>才会显示该菜单项图像。  
  
 尽管<xref:System.Windows.Forms.ContextMenuStrip>替换并添加了功能<xref:System.Windows.Forms.ContextMenu>的早期版本中，控件<xref:System.Windows.Forms.ContextMenu>如果需要的话，以备向后兼容性和将来使用保留。  
  
   
  
## Examples  
 下面的代码示例演示<xref:System.Windows.Forms.ContextMenuStrip>具有动态添加项，动态<xref:System.Windows.Forms.ContextMenuStrip.SourceControl%2A>确定与重复使用和处理<xref:System.Windows.Forms.ToolStripDropDown.Opening>事件。  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#40)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#40)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolStripDropDownMenu" />
    <altmember cref="P:System.Windows.Forms.ToolStripDropDownMenu.ShowCheckMargin" />
    <altmember cref="P:System.Windows.Forms.ToolStripDropDownMenu.ShowImageMargin" />
    <altmember cref="P:System.Windows.Forms.Control.ContextMenuStrip" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.ContextMenuStrip" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenuStrip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenuStrip.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenuStrip();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.ContextMenuStrip" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenuStrip (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenuStrip.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenuStrip(System::ComponentModel::IContainer ^ container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">一个组件，它实现作为 <see cref="T:System.ComponentModel.IContainer" /> 的容器的 <see cref="T:System.Windows.Forms.ContextMenuStrip" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ContextMenuStrip" /> 类的新实例，并将它与指定容器相关联。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数以确保<xref:System.Windows.Forms.ContextMenuStrip>得以正确处理，因为它不是窗体的子级。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenuStrip.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
        <summary>释放由 <see cref="T:System.Windows.Forms.ContextMenuStrip" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法称为由公共`Dispose`方法和<xref:System.Object.Finalize%2A>方法。 `Dispose` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。 <xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。  
  
 当`disposing`参数为 true 时，此方法释放由任何托管对象持有的全部资源此<xref:System.Windows.Forms.ContextMenuStrip>引用。 此方法调用每个引用对象的 `Dispose` 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> 可以由其他对象多次调用。 在重写<see langword="Dispose(Boolean)" />请注意不要引用已释放的以前调用中的对象<see langword="Dispose" />。 有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
 有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)，和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected override void SetVisibleCore (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetVisibleCore(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenuStrip.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetVisibleCore (visible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetVisibleCore(bool visible);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">
          <see langword="true" /> 表示使控件可见；<see langword="false" /> 表示使控件不可见。</param>
        <summary>将控件设置为指定的可见状态。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SourceControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control SourceControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control SourceControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ContextMenuStrip.SourceControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ SourceControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取上一个使此 <see cref="T:System.Windows.Forms.ContextMenuStrip" /> 被显示的控件。</summary>
        <value>使此 <see cref="T:System.Windows.Forms.ContextMenuStrip" /> 被显示的控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 常见用途的<xref:System.Windows.Forms.ContextMenuStrip.SourceControl%2A>属性包括：  
  
-   添加、 删除、 启用，或禁用菜单项在<xref:System.Windows.Forms.ToolStripDropDown.Opening>事件。  
  
-   确定选命令修改基于上一次显示控件<xref:System.Windows.Forms.ContextMenuStrip>。  
  
   
  
## Examples  
 下面的代码示例演示如何动态<xref:System.Windows.Forms.ContextMenuStrip.SourceControl%2A>确定与重复使用和处理<xref:System.Windows.Forms.ToolStripDropDown.Opening>事件。 此示例摘自更大的示例为提供<xref:System.Windows.Forms.ContextMenuStrip>类。  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#42](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#42)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#42](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#42)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">若要设置此属性的值的所有窗口。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>