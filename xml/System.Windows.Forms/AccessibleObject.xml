<Type Name="AccessibleObject" FullName="System.Windows.Forms.AccessibleObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c6b0b37de3d859046b3e4db29f5ca1146d7145e" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53334582" /></Metadata><TypeSignature Language="C#" Value="public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessibleObject extends System.Runtime.InteropServices.StandardOleMarshalObject implements class Accessibility.IAccessible, class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessibleObject&#xA;Inherits StandardOleMarshalObject&#xA;Implements IAccessible, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessibleObject : System::Runtime::InteropServices::StandardOleMarshalObject, Accessibility::IAccessible, System::Reflection::IReflect" />
  <TypeSignature Language="F#" Value="type AccessibleObject = class&#xA;    inherit StandardOleMarshalObject&#xA;    interface IReflect&#xA;    interface IAccessible" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.StandardOleMarshalObject</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Accessibility.IAccessible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6b401-101">提供辅助功能应用程序用于为残障用户调整应用程序的用户界面 (UI) 的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-101">Provides information that accessibility applications use to adjust an application's user interface (UI) for users with impairments.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-102">辅助功能应用程序可以调整应用程序以提高可用性为残障用户的功能。</span><span class="sxs-lookup"><span data-stu-id="6b401-102">Accessibility applications can adjust features of the application to improve usability for users with disabilities.</span></span>  
  
 <span data-ttu-id="6b401-103">对于有视觉障碍的用户，可以调整以符合其需求的软件和操作系统功能。</span><span class="sxs-lookup"><span data-stu-id="6b401-103">For users who are visually impaired, you can adjust software and operating system features to comply with their needs.</span></span> <span data-ttu-id="6b401-104">例如，您可以放大文本和图像并进行呈现与形成对比。</span><span class="sxs-lookup"><span data-stu-id="6b401-104">For example, you can enlarge text and images and render them with a contrast.</span></span> <span data-ttu-id="6b401-105">此外，可以容纳适当的颜色使用色盲用户的需要。</span><span class="sxs-lookup"><span data-stu-id="6b401-105">In addition, you can accommodate color-blindness with the appropriate use of colors.</span></span> <span data-ttu-id="6b401-106">对于有严重视觉障碍的用户，计算机时可通过屏幕检查功能，屏幕上转换为语音或动态的可刷新，盲文显示的文本。</span><span class="sxs-lookup"><span data-stu-id="6b401-106">For users who are severely visually impaired, computers are accessible with screen review aids that translate on-screen text to speech or to a dynamic, refreshable, Braille display.</span></span>  
  
 <span data-ttu-id="6b401-107">对于是听力不好的用户，您可以设计使用视觉提示，如闪烁工具栏; 的程序也可以以文本形式显示语音的消息。</span><span class="sxs-lookup"><span data-stu-id="6b401-107">For users who are hard of hearing, you can design programs that use visual cues, such as a flashing toolbar; or you can display spoken messages as text.</span></span> <span data-ttu-id="6b401-108">例如，在开启`SoundSentry`功能，在控制面板中的辅助功能选项提供可视警告系统发出警报声音时。</span><span class="sxs-lookup"><span data-stu-id="6b401-108">For example, when turned on, the `SoundSentry` feature, an accessibility option in Control Panel, provides a visual warning whenever the system makes an alarm sound.</span></span>  
  
 <span data-ttu-id="6b401-109">对于行动不便的用户，您可以设计简化或消除键盘和鼠标使用的控件因此提高了计算机可访问性。</span><span class="sxs-lookup"><span data-stu-id="6b401-109">For users with motion disabilities, you can design controls that refine or eliminate keyboard and mouse use, thereby improving computer accessibility.</span></span> <span data-ttu-id="6b401-110">控制面板提供协助。</span><span class="sxs-lookup"><span data-stu-id="6b401-110">Control Panel offers assistance.</span></span> <span data-ttu-id="6b401-111">例如，一种替代方法是使用数字键盘而不是鼠标导航。</span><span class="sxs-lookup"><span data-stu-id="6b401-111">For example, one alternative is to use the numeric keypad instead of the mouse for navigation.</span></span> <span data-ttu-id="6b401-112">另一种方式称作`StickyKeys`，使用户不能按下两个或多个键 （例如 CTRL + P) 的一次通过一次键入一个密钥来获取相同的结果。</span><span class="sxs-lookup"><span data-stu-id="6b401-112">Another option, called `StickyKeys`, enables users who cannot hold down two or more keys at a time (such as CTRL+P) to get the same result by typing one key at a time.</span></span>  
  
 <span data-ttu-id="6b401-113">对于使用认知的用户和语言障碍，您可以设计更好地满足其需求的软件程序。</span><span class="sxs-lookup"><span data-stu-id="6b401-113">For users with cognitive and language disabilities, you can design software programs to better accommodate their needs.</span></span> <span data-ttu-id="6b401-114">例如，使用记忆或带有提示的操作序列化、 简单的显示、 较少的文字和小学标准作为目标读取级别可以有益于这些用户。</span><span class="sxs-lookup"><span data-stu-id="6b401-114">For example, using conspicuous or cued sequencing, uncomplicated displays, fewer words, and a reading level targeted to elementary school standards can benefit these users.</span></span>  
  
 <span data-ttu-id="6b401-115">对于使用癫痫症的用户，您可以设计软件程序来消除导致发病。</span><span class="sxs-lookup"><span data-stu-id="6b401-115">For users with seizure disorders, you can design software programs to eliminate seizure provoking patterns.</span></span>  
  
 <span data-ttu-id="6b401-116">有关可访问性，包括有关辅助功能应用程序的信息的详细信息请参阅 MSDN 库中或在 Microsoft 网站上的 Microsoft 辅助功能的文档。</span><span class="sxs-lookup"><span data-stu-id="6b401-116">For more information about accessibility, including information about accessibility applications, see the documentation for Microsoft Accessibility in the MSDN library or at the Microsoft Web site.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b401-117">若要使用<xref:System.Windows.Forms.AccessibleObject>，必须添加对的引用`Accessibility`随一起安装的程序集[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="6b401-117">To use the <xref:System.Windows.Forms.AccessibleObject>, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="6b401-118">Windows 窗体仅支持 Active Accessibility 2.0。</span><span class="sxs-lookup"><span data-stu-id="6b401-118">Windows Forms only supports Active Accessibility 2.0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b401-119">下面的代码示例演示如何创建一个具有辅助功能的图表控件，并使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>类，以公开访问的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-119">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="6b401-120">控件绘制图例以及两条曲线。</span><span class="sxs-lookup"><span data-stu-id="6b401-120">The control plots two curves along with a legend.</span></span> <span data-ttu-id="6b401-121">`ChartControlAccessibleObject`类，该类派生自`ControlAccessibleObject`，在使用<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法以提供自定义访问图表控件的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-121">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="6b401-122">因为不是实际图表图例<xref:System.Windows.Forms.Control>-基于控制，但改为绘制由图表控件，它没有任何内置的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-122">Because the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="6b401-123">因此，`ChartControlAccessibleObject`类将重写<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法以返回`CurveLegendAccessibleObject`，它表示每个部分的图例可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-123">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="6b401-124">当辅助功能的应用程序使用该控件时，该控件可以提供所需的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-124">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#1)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#1)]
 [!code-vb[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="6b401-125">当从此类继承时，可以重写所有成员。</span><span class="sxs-lookup"><span data-stu-id="6b401-125">When you inherit from this class, you can override all the members.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessibleObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b401-126">初始化 <see cref="T:System.Windows.Forms.AccessibleObject" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6b401-126">Initializes a new instance of the <see cref="T:System.Windows.Forms.AccessibleObject" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-127">通常情况下，当使用此方法以创建可访问对象，提供自己的实现的属性和方法的类以提供特定于你的应用程序的功能。</span><span class="sxs-lookup"><span data-stu-id="6b401-127">Typically, when you use this method to create an accessible object, you are providing your own implementations of the properties and methods of the class to provide functionality specific to your application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accChildCount">
      <MemberSignature Language="C#" Value="int Accessibility.IAccessible.accChildCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Accessibility.IAccessible.accChildCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accChildCount As Integer Implements IAccessible.accChildCount" />
      <MemberSignature Language="C++ CLI" Value="property int Accessibility::IAccessible::accChildCount { int get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accChildCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accChildCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-128">获取属于该对象的子接口的数量。</span><span class="sxs-lookup"><span data-stu-id="6b401-128">Gets the number of child interfaces that belong to this object.</span></span> <span data-ttu-id="6b401-129">有关此成员的说明，请参见 <see cref="P:Accessibility.IAccessible.accChildCount" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-129">For a description of this member, see <see cref="P:Accessibility.IAccessible.accChildCount" />.</span></span></summary>
        <value><span data-ttu-id="6b401-130">属于该对象的子辅助性对象的数量。</span><span class="sxs-lookup"><span data-stu-id="6b401-130">The number of child accessible objects that belong to this object.</span></span> <span data-ttu-id="6b401-131">如果该对象无子对象，则此值为 0。</span><span class="sxs-lookup"><span data-stu-id="6b401-131">If the object has no child objects, this value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-132">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-132">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-133">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:Accessibility.IAccessible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-133">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accDoDefaultAction">
      <MemberSignature Language="C#" Value="void IAccessible.accDoDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accDoDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accDoDefaultAction (childID As Object) Implements IAccessible.accDoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accDoDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::accDoDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accDoDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID"><span data-ttu-id="6b401-134"><see cref="T:Accessibility.IAccessible" /> 接口/子级 ID 对中表示辅助性对象的子级 ID。</span><span class="sxs-lookup"><span data-stu-id="6b401-134">The child ID in the <see cref="T:Accessibility.IAccessible" /> interface/child ID pair that represents the accessible object.</span></span></param>
        <summary><span data-ttu-id="6b401-135">执行指定对象的默认操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-135">Performs the specified object's default action.</span></span> <span data-ttu-id="6b401-136">并非所有对象都有默认操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-136">Not all objects have a default action.</span></span> <span data-ttu-id="6b401-137">有关此成员的说明，请参阅 <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-137">For a description of this member, see <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-138">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-138">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-139">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:Accessibility.IAccessible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-139">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accFocus">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accFocus As Object Implements IAccessible.accFocus" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accFocus { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accFocus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-140">获取具有键盘焦点的对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-140">Gets the object that has the keyboard focus.</span></span> <span data-ttu-id="6b401-141">有关此成员的说明，请参见 <see cref="P:Accessibility.IAccessible.accFocus" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-141">For a description of this member, see <see cref="P:Accessibility.IAccessible.accFocus" />.</span></span></summary>
        <value><span data-ttu-id="6b401-142">具有键盘焦点的对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-142">The object that has keyboard focus.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-143">返回值类型<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A>属性依赖于具有键盘焦点的对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-143">The return value type of the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> property depends on the object that has keyboard focus.</span></span> <span data-ttu-id="6b401-144">下表描述了该对象类型的<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A>属性返回。</span><span class="sxs-lookup"><span data-stu-id="6b401-144">The following table describes the object types that the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> property returns.</span></span>  
  
|<span data-ttu-id="6b401-145">类型</span><span class="sxs-lookup"><span data-stu-id="6b401-145">Type</span></span>|<span data-ttu-id="6b401-146">描述</span><span class="sxs-lookup"><span data-stu-id="6b401-146">Description</span></span>|  
|----------|-----------------|  
|`null`|<span data-ttu-id="6b401-147">此对象不具有键盘焦点本身并不包含具有键盘焦点的子级。</span><span class="sxs-lookup"><span data-stu-id="6b401-147">This object does not have the keyboard focus itself and does not contain a child that has the keyboard focus.</span></span>|  
|<span data-ttu-id="6b401-148">整数</span><span class="sxs-lookup"><span data-stu-id="6b401-148">integer</span></span>|<span data-ttu-id="6b401-149">如果当前对象具有键盘焦点，则为 0否则为具有键盘焦点的子辅助性对象的子 ID。</span><span class="sxs-lookup"><span data-stu-id="6b401-149">0 if the current object has keyboard focus; otherwise, the child ID of the child accessible object with keyboard focus.</span></span>|  
|<xref:Accessibility.IAccessible>|<span data-ttu-id="6b401-150">具有键盘焦点的子辅助性对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-150">The child accessible object that has the keyboard focus.</span></span>|  
  
 <span data-ttu-id="6b401-151">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-151">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-152">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:Accessibility.IAccessible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-152">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accHitTest">
      <MemberSignature Language="C#" Value="object IAccessible.accHitTest (int xLeft, int yTop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accHitTest(int32 xLeft, int32 yTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function accHitTest (xLeft As Integer, yTop As Integer) As Object Implements IAccessible.accHitTest" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accHitTest(int xLeft, int yTop) = Accessibility::IAccessible::accHitTest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xLeft" Type="System.Int32" />
        <Parameter Name="yTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xLeft"><span data-ttu-id="6b401-153">水平坐标。</span><span class="sxs-lookup"><span data-stu-id="6b401-153">The horizontal coordinate.</span></span></param>
        <param name="yTop"><span data-ttu-id="6b401-154">垂直坐标。</span><span class="sxs-lookup"><span data-stu-id="6b401-154">The vertical coordinate.</span></span></param>
        <summary><span data-ttu-id="6b401-155">在指定的屏幕坐标位置获取子对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-155">Gets the child object at the specified screen coordinates.</span></span> <span data-ttu-id="6b401-156">有关此成员的说明，请参见 <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-156">For a description of this member, see <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />.</span></span></summary>
        <returns><span data-ttu-id="6b401-157">位于由 <paramref name="xLeft" /> 和 <paramref name="yTop" /> 指定的点位置的辅助性对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-157">The accessible object at the point specified by <paramref name="xLeft" /> and <paramref name="yTop" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-158">下表描述了该对象类型的<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A>方法可以返回。</span><span class="sxs-lookup"><span data-stu-id="6b401-158">The following table describes the object types that the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A> method can return.</span></span>  
  
|<span data-ttu-id="6b401-159">类型</span><span class="sxs-lookup"><span data-stu-id="6b401-159">Type</span></span>|<span data-ttu-id="6b401-160">描述</span><span class="sxs-lookup"><span data-stu-id="6b401-160">Description</span></span>|  
|----------|-----------------|  
|<xref:Accessibility.IAccessible>|<span data-ttu-id="6b401-161">在指定方向的可访问对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-161">The accessible object at the specified direction.</span></span>|  
|<span data-ttu-id="6b401-162">整数</span><span class="sxs-lookup"><span data-stu-id="6b401-162">integer</span></span>|<span data-ttu-id="6b401-163">0 指定的点是当前对象或对象的边界; 外否则为标识在指定方向的辅助性对象的子 ID。</span><span class="sxs-lookup"><span data-stu-id="6b401-163">0 if the point specified is either the current object or outside the object's boundaries; otherwise, the child ID that identifies the accessible object at the specified direction.</span></span>|  
  
 <span data-ttu-id="6b401-164">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-164">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-165">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:Accessibility.IAccessible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-165">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accLocation">
      <MemberSignature Language="C#" Value="void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accLocation([out] int32&amp; pxLeft, [out] int32&amp; pyTop, [out] int32&amp; pcxWidth, [out] int32&amp; pcyHeight, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accLocation (ByRef pxLeft As Integer, ByRef pyTop As Integer, ByRef pcxWidth As Integer, ByRef pcyHeight As Integer, childID As Object) Implements IAccessible.accLocation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accLocation([Runtime::InteropServices::Out] int % pxLeft, [Runtime::InteropServices::Out] int % pyTop, [Runtime::InteropServices::Out] int % pcxWidth, [Runtime::InteropServices::Out] int % pcyHeight, System::Object ^ childID) = Accessibility::IAccessible::accLocation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pxLeft" Type="System.Int32" RefType="out" />
        <Parameter Name="pyTop" Type="System.Int32" RefType="out" />
        <Parameter Name="pcxWidth" Type="System.Int32" RefType="out" />
        <Parameter Name="pcyHeight" Type="System.Int32" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pxLeft"><span data-ttu-id="6b401-166">该方法返回时，包含对象左边缘的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="6b401-166">When this method returns, contains the x-coordinate of the object's left edge.</span></span> <span data-ttu-id="6b401-167">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="6b401-167">This parameter is passed uninitialized.</span></span></param>
        <param name="pyTop"><span data-ttu-id="6b401-168">该方法返回时，包含对象上边缘的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="6b401-168">When this method returns, contains the y-coordinate of the object's top edge.</span></span> <span data-ttu-id="6b401-169">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="6b401-169">This parameter is passed uninitialized.</span></span></param>
        <param name="pcxWidth"><span data-ttu-id="6b401-170">该方法返回时，包含对象的宽度。</span><span class="sxs-lookup"><span data-stu-id="6b401-170">When this method returns, contains the width of the object.</span></span> <span data-ttu-id="6b401-171">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="6b401-171">This parameter is passed uninitialized.</span></span></param>
        <param name="pcyHeight"><span data-ttu-id="6b401-172">该方法返回时，包含对象的高度。</span><span class="sxs-lookup"><span data-stu-id="6b401-172">When this method returns, contains the height of the object.</span></span> <span data-ttu-id="6b401-173">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="6b401-173">This parameter is passed uninitialized.</span></span></param>
        <param name="childID"><span data-ttu-id="6b401-174">辅助性对象的 ID 号。</span><span class="sxs-lookup"><span data-stu-id="6b401-174">The ID number of the accessible object.</span></span> <span data-ttu-id="6b401-175">该参数为 0，则获取对象的位置；或者，如果该参数为子级 ID，则获取对象的一个子对象的位置。</span><span class="sxs-lookup"><span data-stu-id="6b401-175">This parameter is 0 to get the location of the object, or a child ID to get the location of one of the object's child objects.</span></span></param>
        <summary><span data-ttu-id="6b401-176">获取对象的当前屏幕位置。</span><span class="sxs-lookup"><span data-stu-id="6b401-176">Gets the object's current screen location.</span></span> <span data-ttu-id="6b401-177">有关此成员的说明，请参阅 <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-177">For a description of this member, see <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-178">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-178">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-179">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:Accessibility.IAccessible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-179">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accNavigate">
      <MemberSignature Language="C#" Value="object IAccessible.accNavigate (int navDir, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accNavigate(int32 navDir, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function accNavigate (navDir As Integer, childID As Object) As Object Implements IAccessible.accNavigate" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accNavigate(int navDir, System::Object ^ childID) = Accessibility::IAccessible::accNavigate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navDir" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navDir"><span data-ttu-id="6b401-180"><see cref="T:System.Windows.Forms.AccessibleNavigation" /> 枚举之一，它指定要定位的方向。</span><span class="sxs-lookup"><span data-stu-id="6b401-180">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> enumerations that specifies the direction to navigate.</span></span></param>
        <param name="childID"><span data-ttu-id="6b401-181">辅助性对象的 ID 号。</span><span class="sxs-lookup"><span data-stu-id="6b401-181">The ID number of the accessible object.</span></span> <span data-ttu-id="6b401-182">该参数为 0，则以该对象为起始位置；或者，如果该参数为子级 ID，则以该对象的一个子对象为起始位置。</span><span class="sxs-lookup"><span data-stu-id="6b401-182">This parameter is 0 to start from the object, or a child ID to start from one of the object's child objects.</span></span></param>
        <summary><span data-ttu-id="6b401-183">相对于当前对象定位到一个辅助性对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-183">Navigates to an accessible object relative to the current object.</span></span> <span data-ttu-id="6b401-184">有关此成员的说明，请参见 <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-184">For a description of this member, see <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="6b401-185">位于由 <paramref name="navDir" /> 值指定的位置的辅助性对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-185">The accessible object positioned at the value specified by <paramref name="navDir" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-186">下表描述了该对象类型的<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A>方法可以返回。</span><span class="sxs-lookup"><span data-stu-id="6b401-186">The following table describes the object types that the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A> method can return.</span></span>  
  
|<span data-ttu-id="6b401-187">类型</span><span class="sxs-lookup"><span data-stu-id="6b401-187">Type</span></span>|<span data-ttu-id="6b401-188">描述</span><span class="sxs-lookup"><span data-stu-id="6b401-188">Description</span></span>|  
|----------|-----------------|  
|`null`|<span data-ttu-id="6b401-189">在指定的方向不是可访问的对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-189">There is not an accessible object at the specified direction.</span></span>|  
|<xref:Accessibility.IAccessible>|<span data-ttu-id="6b401-190">在指定方向的可访问对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-190">The accessible object at the specified direction.</span></span>|  
|<span data-ttu-id="6b401-191">整数</span><span class="sxs-lookup"><span data-stu-id="6b401-191">integer</span></span>|<span data-ttu-id="6b401-192">标识在指定方向的辅助性对象的子 ID。</span><span class="sxs-lookup"><span data-stu-id="6b401-192">The child ID that identifies the accessible object at the specified direction.</span></span> <span data-ttu-id="6b401-193">使用父<xref:Accessibility.IAccessible>和要访问辅助性对象的子 ID。</span><span class="sxs-lookup"><span data-stu-id="6b401-193">Use the parent <xref:Accessibility.IAccessible> and the child ID to access the accessible object.</span></span>|  
  
 <span data-ttu-id="6b401-194">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-194">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-195">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:Accessibility.IAccessible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-195">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accParent">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accParent As Object Implements IAccessible.accParent" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accParent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accParent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-196">获取该对象的父辅助性对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-196">Gets the parent accessible object of this object.</span></span> <span data-ttu-id="6b401-197">有关此成员的说明，请参见 <see cref="P:Accessibility.IAccessible.accParent" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-197">For a description of this member, see <see cref="P:Accessibility.IAccessible.accParent" />.</span></span></summary>
        <value><span data-ttu-id="6b401-198">表示辅助性对象的父对象的 <see cref="T:Accessibility.IAccessible" />；或者，如果没有父对象，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-198">An <see cref="T:Accessibility.IAccessible" /> that represents the parent of the accessible object, or <see langword="null" /> if there is no parent object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-199">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-200">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:Accessibility.IAccessible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-200">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span> 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelect">
      <MemberSignature Language="C#" Value="void IAccessible.accSelect (int flagsSelect, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accSelect(int32 flagsSelect, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accSelect (flagsSelect As Integer, childID As Object) Implements IAccessible.accSelect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accSelect(int flagsSelect, System::Object ^ childID) = Accessibility::IAccessible::accSelect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flagsSelect" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="flagsSelect"><span data-ttu-id="6b401-201"><see cref="T:System.Windows.Forms.AccessibleSelection" /> 值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="6b401-201">A bitwise combination of the <see cref="T:System.Windows.Forms.AccessibleSelection" /> values.</span></span></param>
        <param name="childID"><span data-ttu-id="6b401-202">要对其执行选择操作的辅助性对象的 ID 号。</span><span class="sxs-lookup"><span data-stu-id="6b401-202">The ID number of the accessible object on which to perform the selection.</span></span> <span data-ttu-id="6b401-203">该参数为 0，则选择该对象；或者，如果该参数为子级 ID，则选择该对象的一个子对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-203">This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</span></span></param>
        <summary><span data-ttu-id="6b401-204">修改选择内容或移动辅助性对象的键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="6b401-204">Modifies the selection or moves the keyboard focus of the accessible object.</span></span> <span data-ttu-id="6b401-205">有关此成员的说明，请参见 <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-205">For a description of this member, see <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-206">以下内容说明了<xref:System.Windows.Forms.AccessibleSelection>值，以在调用时指定`Select`执行复杂的选择操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-206">The following describes which <xref:System.Windows.Forms.AccessibleSelection> values to specify when calling `Select` to perform complex selection operations.</span></span>  
  
|<span data-ttu-id="6b401-207">操作</span><span class="sxs-lookup"><span data-stu-id="6b401-207">Operation</span></span>|<span data-ttu-id="6b401-208">标志组合</span><span class="sxs-lookup"><span data-stu-id="6b401-208">Flag Combination</span></span>|  
|---------------|----------------------|  
|<span data-ttu-id="6b401-209">若要模拟单击</span><span class="sxs-lookup"><span data-stu-id="6b401-209">To simulate a click</span></span>|<span data-ttu-id="6b401-210"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.TakeSelection></span><span class="sxs-lookup"><span data-stu-id="6b401-210"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.TakeSelection></span></span>|  
|<span data-ttu-id="6b401-211">若要通过模拟 CTRL + 单击来选择目标项目</span><span class="sxs-lookup"><span data-stu-id="6b401-211">To select a target item by simulating CTRL+click</span></span>|<span data-ttu-id="6b401-212"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.AddSelection></span><span class="sxs-lookup"><span data-stu-id="6b401-212"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.AddSelection></span></span>|  
|<span data-ttu-id="6b401-213">通过模拟 CTRL + 单击来取消选择的目标项</span><span class="sxs-lookup"><span data-stu-id="6b401-213">To cancel selection of a target item by simulating CTRL+click</span></span>|<span data-ttu-id="6b401-214"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection></span><span class="sxs-lookup"><span data-stu-id="6b401-214"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection></span></span>|  
|<span data-ttu-id="6b401-215">若要模拟 SHIFT + 单击</span><span class="sxs-lookup"><span data-stu-id="6b401-215">To simulate SHIFT+click</span></span>|<span data-ttu-id="6b401-216"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection></span><span class="sxs-lookup"><span data-stu-id="6b401-216"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection></span></span>|  
|<span data-ttu-id="6b401-217">选择范围内的对象，并将焦点放在最后一个对象</span><span class="sxs-lookup"><span data-stu-id="6b401-217">To select a range of objects and put focus on the last object</span></span>|<span data-ttu-id="6b401-218">指定<xref:System.Windows.Forms.AccessibleSelection.TakeFocus>上要设置选择定位点的起始对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-218">Specify <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> on the starting object to set the selection anchor.</span></span> <span data-ttu-id="6b401-219">然后再次调用选择并指定<xref:System.Windows.Forms.AccessibleSelection.TakeFocus>或<xref:System.Windows.Forms.AccessibleSelection.ExtendSelection>上的最后一个对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-219">Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection> on the last object.</span></span>|  
|<span data-ttu-id="6b401-220">若要取消选择所有对象</span><span class="sxs-lookup"><span data-stu-id="6b401-220">To deselect all objects</span></span>|<span data-ttu-id="6b401-221">指定<xref:System.Windows.Forms.AccessibleSelection.TakeSelection>上任何对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-221">Specify <xref:System.Windows.Forms.AccessibleSelection.TakeSelection> on any object.</span></span> <span data-ttu-id="6b401-222">此标志可取消选择除刚才所选的所有选定的对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-222">This flag deselects all selected objects except the one just selected.</span></span> <span data-ttu-id="6b401-223">然后再次调用选择并指定<xref:System.Windows.Forms.AccessibleSelection.RemoveSelection>对同一对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-223">Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection> on the same object.</span></span>|  
  
 <span data-ttu-id="6b401-224">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-224">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-225">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:Accessibility.IAccessible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-225">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelection">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accSelection As Object Implements IAccessible.accSelection" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accSelection { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-226">获取辅助性对象的选定子对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-226">Gets the selected child objects of an accessible object.</span></span> <span data-ttu-id="6b401-227">有关此成员的说明，请参阅 <see cref="P:Accessibility.IAccessible.accSelection" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-227">For a description of this member, see <see cref="P:Accessibility.IAccessible.accSelection" />.</span></span></summary>
        <value><span data-ttu-id="6b401-228">辅助性对象的选定子对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-228">The selected child objects of an accessible object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-229">下表描述了该对象类型的<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A>属性将返回</span><span class="sxs-lookup"><span data-stu-id="6b401-229">The following table describes the object types that the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A> property returns</span></span>  
  
|<span data-ttu-id="6b401-230">类型</span><span class="sxs-lookup"><span data-stu-id="6b401-230">Type</span></span>|<span data-ttu-id="6b401-231">描述</span><span class="sxs-lookup"><span data-stu-id="6b401-231">Description</span></span>|  
|----------|-----------------|  
|`null`|<span data-ttu-id="6b401-232">不选择的任何子对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-232">No child objects are selected.</span></span>|  
|<xref:Accessibility.IAccessible>|<span data-ttu-id="6b401-233">选择子辅助性对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-233">The child accessible object that is selected.</span></span>|  
|<span data-ttu-id="6b401-234">整数</span><span class="sxs-lookup"><span data-stu-id="6b401-234">integer</span></span>|<span data-ttu-id="6b401-235">标识处于选中状态的辅助性对象的子 ID。</span><span class="sxs-lookup"><span data-stu-id="6b401-235">The child ID that identifies the accessible object that is selected.</span></span> <span data-ttu-id="6b401-236">使用父<xref:Accessibility.IAccessible>和要访问辅助性对象的子 ID。</span><span class="sxs-lookup"><span data-stu-id="6b401-236">Use the parent <xref:Accessibility.IAccessible> and the child ID to access the accessible object.</span></span>|  
|`IEnumVARIANT`|<span data-ttu-id="6b401-237">将所选的子对象的列表。</span><span class="sxs-lookup"><span data-stu-id="6b401-237">A list of child objects that are selected.</span></span>|  
  
 <span data-ttu-id="6b401-238">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-238">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-239">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:Accessibility.IAccessible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-239">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accChild">
      <MemberSignature Language="C#" Value="object IAccessible.get_accChild (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accChild(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accChild (childID As Object) As Object Implements IAccessible.get_accChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accChild(System::Object ^ childID) = Accessibility::IAccessible::get_accChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDefaultAction">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDefaultAction (childID As Object) As String Implements IAccessible.get_accDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::get_accDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDescription">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDescription (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDescription(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDescription (childID As Object) As String Implements IAccessible.get_accDescription" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDescription(System::Object ^ childID) = Accessibility::IAccessible::get_accDescription;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDescription(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelp">
      <MemberSignature Language="C#" Value="string IAccessible.get_accHelp (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accHelp(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelp (childID As Object) As String Implements IAccessible.get_accHelp" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accHelp(System::Object ^ childID) = Accessibility::IAccessible::get_accHelp;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelp(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelpTopic">
      <MemberSignature Language="C#" Value="int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Accessibility.IAccessible.get_accHelpTopic([out] string&amp; pszHelpFile, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelpTopic (ByRef pszHelpFile As String, childID As Object) As Integer Implements IAccessible.get_accHelpTopic" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Accessibility.IAccessible.get_accHelpTopic([Runtime::InteropServices::Out] System::String ^ % pszHelpFile, System::Object ^ childID) = Accessibility::IAccessible::get_accHelpTopic;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelpTopic(System.String@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszHelpFile" Type="System.String" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszHelpFile">To be added.</param>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accKeyboardShortcut">
      <MemberSignature Language="C#" Value="string IAccessible.get_accKeyboardShortcut (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accKeyboardShortcut(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accKeyboardShortcut (childID As Object) As String Implements IAccessible.get_accKeyboardShortcut" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accKeyboardShortcut(System::Object ^ childID) = Accessibility::IAccessible::get_accKeyboardShortcut;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accKeyboardShortcut(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accName">
      <MemberSignature Language="C#" Value="string IAccessible.get_accName (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accName(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accName (childID As Object) As String Implements IAccessible.get_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accName(System::Object ^ childID) = Accessibility::IAccessible::get_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accRole">
      <MemberSignature Language="C#" Value="object IAccessible.get_accRole (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accRole(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accRole (childID As Object) As Object Implements IAccessible.get_accRole" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accRole(System::Object ^ childID) = Accessibility::IAccessible::get_accRole;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accRole(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accState">
      <MemberSignature Language="C#" Value="object IAccessible.get_accState (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accState(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accState (childID As Object) As Object Implements IAccessible.get_accState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accState(System::Object ^ childID) = Accessibility::IAccessible::get_accState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accValue">
      <MemberSignature Language="C#" Value="string IAccessible.get_accValue (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accValue(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accValue (childID As Object) As String Implements IAccessible.get_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accValue(System::Object ^ childID) = Accessibility::IAccessible::get_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accName">
      <MemberSignature Language="C#" Value="void IAccessible.set_accName (object childID, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accName(object childID, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accName (childID As Object, newName As String) Implements IAccessible.set_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accName(System::Object ^ childID, System::String ^ newName) = Accessibility::IAccessible::set_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <param name="newName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accValue">
      <MemberSignature Language="C#" Value="void IAccessible.set_accValue (object childID, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accValue(object childID, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accValue (childID As Object, newValue As String) Implements IAccessible.set_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accValue(System::Object ^ childID, System::String ^ newValue) = Accessibility::IAccessible::set_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accValue(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-240">获取辅助性对象的位置和大小。</span><span class="sxs-lookup"><span data-stu-id="6b401-240">Gets the location and size of the accessible object.</span></span></summary>
        <value><span data-ttu-id="6b401-241">表示辅助性对象的边界的 <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-241">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the accessible object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-242"><xref:System.Windows.Forms.AccessibleObject.Bounds%2A>属性检索屏幕坐标中的对象的边框。</span><span class="sxs-lookup"><span data-stu-id="6b401-242">The <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> property retrieves the object's bounding rectangle in screen coordinates.</span></span> <span data-ttu-id="6b401-243">如果对象具有非矩形形状，则该属性表示完全涵盖了整个对象区域的最小矩形。</span><span class="sxs-lookup"><span data-stu-id="6b401-243">If the object has a nonrectangular shape, then this property represents the smallest rectangle that completely encompasses the entire object region.</span></span> <span data-ttu-id="6b401-244">因此，对于如列表视图项的非矩形对象，该对象的边界矩形的坐标可以如果失败测试，通过调用<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>方法，因为<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>确定像素的基础上的对象的边界。</span><span class="sxs-lookup"><span data-stu-id="6b401-244">Therefore, for nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle can fail, if tested, by calling the <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> method, because <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> determines the object's boundaries on a pixel-by-pixel basis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b401-245">下面的示例演示如何创建一个具有辅助功能的图表控件，并使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>类，以公开访问的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-245">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="6b401-246">控件绘制图例以及两条曲线。</span><span class="sxs-lookup"><span data-stu-id="6b401-246">The control plots two curves along with a legend.</span></span> <span data-ttu-id="6b401-247">`ChartControlAccessibleObject`类，该类派生自`ControlAccessibleObject`，在使用<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法以提供自定义访问图表控件的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-247">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="6b401-248">因为不是实际图表图例<xref:System.Windows.Forms.Control>-基于控制，但改为绘制由图表控件，它没有任何内置的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-248">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="6b401-249">因此，`ChartControlAccessibleObject`类将重写<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法以返回`CurveLegendAccessibleObject`，它表示每个部分的图例可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-249">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="6b401-250">当辅助功能的应用程序使用该控件时，该控件可以提供所需的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-250">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="6b401-251">此代码片段演示如何重写<xref:System.Windows.Forms.AccessibleObject.Bounds%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-251">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> property.</span></span> <span data-ttu-id="6b401-252">请参阅<xref:System.Windows.Forms.AccessibleObject>完整的代码示例的类概述。</span><span class="sxs-lookup"><span data-stu-id="6b401-252">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6b401-253">无法检索控件的界限。</span><span class="sxs-lookup"><span data-stu-id="6b401-253">The bounds of control cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-254">默认实现将返回该对象包装的系统控件; 如果可访问对象的边框否则，它将返回<see cref="F:System.Drawing.Rectangle.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-254">The default implementation returns the accessible object's bounding rectangle if the object wraps a system control; otherwise, it returns <see cref="F:System.Drawing.Rectangle.Empty" />.</span></span> <span data-ttu-id="6b401-255">所有可见的可访问对象必须支持此方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-255">All visible accessible objects must support this method.</span></span> <span data-ttu-id="6b401-256">声音对象不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-256">Sound objects do not support this method.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAction">
      <MemberSignature Language="C#" Value="public virtual string DefaultAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultAction { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAction : string" Usage="System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-257">获取描述对象默认操作的字符串。</span><span class="sxs-lookup"><span data-stu-id="6b401-257">Gets a string that describes the default action of the object.</span></span> <span data-ttu-id="6b401-258">并非所有对象都有默认操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-258">Not all objects have a default action.</span></span></summary>
        <value><span data-ttu-id="6b401-259">对对象默认操作的描述；如果此对象没有默认操作，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-259">A description of the default action for an object, or <see langword="null" /> if this object has no default action.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-260">该字符串描述对象，该对象不是作为结果执行的操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-260">The string describes the action that is performed on an object, not what the object does as a result.</span></span> <span data-ttu-id="6b401-261">打印文档的工具栏按钮，即具有的默认操作是"Press"而不是"将打印当前文档"。</span><span class="sxs-lookup"><span data-stu-id="6b401-261">That is, a toolbar button that prints a document has a default action of "Press" rather than "Prints the current document."</span></span> <span data-ttu-id="6b401-262">不要混淆及其值的对象的默认操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-262">Do not confuse an object's default action with its value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6b401-263">无法检索控件的默认操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-263">The default action for the control cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-264">默认实现返回可访问对象的默认操作，如果该对象包装的默认操作; 一个系统控件否则，它将返回<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-264">The default implementation returns the accessible object's default action if the object wraps a system control that has a default action; otherwise, it returns <see langword="null" />.</span></span> <span data-ttu-id="6b401-265">执行操作的控件应支持此方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-265">Only controls that perform actions should support this method.</span></span> <span data-ttu-id="6b401-266">并非所有对象都有默认操作，而某些对象可能都具有与相关的默认操作其<see cref="P:System.Windows.Forms.AccessibleObject.Value" />属性，例如如以下示例所示：选中的复选框，并且在"取消选中"默认操作的值为"选中。</span><span class="sxs-lookup"><span data-stu-id="6b401-266">Not all objects have default actions, and some objects might have a default action that is related to its <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> property, such as in the following examples: A selected check box has a default action of "Uncheck" and a value of "Checked."</span></span> <span data-ttu-id="6b401-267">已清除的复选框将没有默认操作的"检查"，值为"未选中。</span><span class="sxs-lookup"><span data-stu-id="6b401-267">A cleared check box has a default action of "Check" and a value of "Unchecked."</span></span> <span data-ttu-id="6b401-268">标记为"打印"按钮不带有任何值具有"Press，"默认操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-268">A button labeled "Print" has a default action of "Press," with no value.</span></span> <span data-ttu-id="6b401-269">静态文本控件或编辑控件显示"打印机"没有默认操作，但会具有值为"打印机。</span><span class="sxs-lookup"><span data-stu-id="6b401-269">A static text control or an edit control that shows "Printer" has no default action, but would have a value of "Printer."</span></span> <span data-ttu-id="6b401-270">对象的<see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />属性应为谓词或谓词短语。</span><span class="sxs-lookup"><span data-stu-id="6b401-270">An object's <see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" /> property should be a verb or a short verb phrase.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Windows.Forms.AccessibleObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-271">获取说明指定对象可视外观的字符串。</span><span class="sxs-lookup"><span data-stu-id="6b401-271">Gets a string that describes the visual appearance of the specified object.</span></span> <span data-ttu-id="6b401-272">并非所有对象都有说明。</span><span class="sxs-lookup"><span data-stu-id="6b401-272">Not all objects have a description.</span></span></summary>
        <value><span data-ttu-id="6b401-273">用户可看到的对象外观的说明，或者，如果该对象没有说明，则是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-273">A description of the object's visual appearance to the user, or <see langword="null" /> if the object does not have a description.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-274">此属性描述对象的外观的用户。</span><span class="sxs-lookup"><span data-stu-id="6b401-274">This property describes the object's visual appearance to the user.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6b401-275">无法检索控件的说明。</span><span class="sxs-lookup"><span data-stu-id="6b401-275">The description for the control cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-276">默认实现返回可访问对象包装的系统控件; 如果对象的说明否则，它将返回<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-276">The default implementation returns the accessible object's description if the object wraps a system control; otherwise, it returns <see langword="null" />.</span></span> <span data-ttu-id="6b401-277">说明通常用于为视力较差或盲人用户提供更大的上下文。</span><span class="sxs-lookup"><span data-stu-id="6b401-277">The description is typically used to provide greater context for low-vision or blind users.</span></span> <span data-ttu-id="6b401-278">它还可以使用上下文搜索或其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="6b401-278">It can also be used for context searching or other applications.</span></span> <span data-ttu-id="6b401-279">服务器需要支持<see cref="P:System.Windows.Forms.AccessibleObject.Description" />冗余是否在说明不明显，或者基于属性的对象上<see cref="P:System.Windows.Forms.AccessibleObject.Name" />， <see cref="P:System.Windows.Forms.AccessibleObject.Role" />， <see cref="P:System.Windows.Forms.AccessibleObject.State" />，和<see cref="P:System.Windows.Forms.AccessibleObject.Value" />属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-279">Servers need to support the <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> property if the description is not obvious, or if it is redundant based on the object's <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, <see cref="P:System.Windows.Forms.AccessibleObject.State" />, and <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> properties.</span></span> <span data-ttu-id="6b401-280">例如，一个具有"确定"按钮不需要的其他信息，但显示了兰图片的按钮将。</span><span class="sxs-lookup"><span data-stu-id="6b401-280">For example, a button with "OK" does not need additional information, but a button that shows a picture of a cactus would.</span></span> <span data-ttu-id="6b401-281"><see cref="P:System.Windows.Forms.AccessibleObject.Name" />， <see cref="P:System.Windows.Forms.AccessibleObject.Role" />，但也可能<see cref="P:System.Windows.Forms.AccessibleObject.Help" />兰按钮的属性描述其用途，但<see cref="P:System.Windows.Forms.AccessibleObject.Description" />属性传达不太明确，像"显示图片的兰的按钮"的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-281">The <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, and perhaps <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> properties for the cactus button describe its purpose, but the <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> property conveys information that is less tangible, like "A button that shows a picture of a cactus".</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="accessibleObject.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b401-282">执行与该辅助性对象相关的默认操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-282">Performs the default action associated with this accessible object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-283">客户端可以通过检查对象的检索对象的默认操作<xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-283">Clients can retrieve the object's default action by inspecting an object's <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> property.</span></span> <span data-ttu-id="6b401-284">客户端可以使用自动化 （如果支持） 而不是<xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A>以执行对象的默认操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-284">A client can use automation (if supported) instead of <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> to perform an object's default action.</span></span> <span data-ttu-id="6b401-285">但是，<xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A>提供了一种简单的方法来执行对象的最常用于操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-285">However, <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> provides an easy way to perform an object's most commonly used action.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6b401-286">无法执行该控件的默认操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-286">The default action for the control cannot be performed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-287">由系统提供用户界面元素的默认操作取决于键盘状态。</span><span class="sxs-lookup"><span data-stu-id="6b401-287">The default action performed by system-provided user interface elements depends on the keyboard state.</span></span> <span data-ttu-id="6b401-288">也就是说，如 SHIFT 修改键，alt 键或 CTRL 是否按下 （不管是由用户操作或以编程方式） 时<see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />调用时，默认值操作可能与这些密钥不向下相同。</span><span class="sxs-lookup"><span data-stu-id="6b401-288">That is, if a modifier key such as SHIFT, ALT, or CTRL is down (either by a user action or programmatically) when <see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" /> is called, the default action might not be the same as when those keys are not down.</span></span> <span data-ttu-id="6b401-289">并非所有对象都有默认操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-289">Not all objects have a default action.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChild (index As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetChild : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetChild : int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="6b401-290">可访问子级的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="6b401-290">The zero-based index of the accessible child.</span></span></param>
        <summary><span data-ttu-id="6b401-291">检索与指定索引对应的可访问子级。</span><span class="sxs-lookup"><span data-stu-id="6b401-291">Retrieves the accessible child corresponding to the specified index.</span></span></summary>
        <returns><span data-ttu-id="6b401-292">一个 <see cref="T:System.Windows.Forms.AccessibleObject" />，表示与指定索引对应的辅助性子级。</span><span class="sxs-lookup"><span data-stu-id="6b401-292">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the accessible child corresponding to the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6b401-293">下面的示例演示如何创建一个具有辅助功能的图表控件，并使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>类，以公开访问的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-293">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="6b401-294">控件绘制图例以及两条曲线。</span><span class="sxs-lookup"><span data-stu-id="6b401-294">The control plots two curves along with a legend.</span></span> <span data-ttu-id="6b401-295">`ChartControlAccessibleObject`类，该类派生自`ControlAccessibleObject`，在使用<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法以提供自定义访问图表控件的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-295">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="6b401-296">因为不是实际图表图例<xref:System.Windows.Forms.Control>-基于控制，但改为绘制由图表控件，它没有任何内置的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-296">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="6b401-297">因此，`ChartControlAccessibleObject`类将重写<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法以返回`CurveLegendAccessibleObject`，它表示每个部分的图例可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-297">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="6b401-298">当辅助功能的应用程序使用该控件时，该控件可以提供所需的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-298">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="6b401-299">此代码片段演示如何重写<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-299">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method.</span></span> <span data-ttu-id="6b401-300">请参阅<xref:System.Windows.Forms.AccessibleObject>完整的代码示例的类概述。</span><span class="sxs-lookup"><span data-stu-id="6b401-300">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-301">所有可访问对象必须支持此属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-301">All accessible objects must support this property.</span></span> <span data-ttu-id="6b401-302">如果未重写该方法，它将返回<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-302">If the method is not overridden, it returns <see langword="null" />.</span></span> <span data-ttu-id="6b401-303">重写此方法时需要提供自定义的可访问子级辅助性对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-303">Override this method when an accessible object needs to provide custom accessible children.</span></span> <span data-ttu-id="6b401-304">如果该索引不存在，则此方法应返回<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-304">If the index is invalid, then this method should return <see langword="null" />.</span></span> <span data-ttu-id="6b401-305">当你重写此方法时，还必须重写<see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-305">When you override this method, you must also override <see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChildCount">
      <MemberSignature Language="C#" Value="public virtual int GetChildCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChildCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildCount();" />
      <MemberSignature Language="F#" Value="abstract member GetChildCount : unit -&gt; int&#xA;override this.GetChildCount : unit -&gt; int" Usage="accessibleObject.GetChildCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b401-306">检索属于可访问对象的子级的个数。</span><span class="sxs-lookup"><span data-stu-id="6b401-306">Retrieves the number of children belonging to an accessible object.</span></span></summary>
        <returns><span data-ttu-id="6b401-307">属于可访问对象的子级的个数。</span><span class="sxs-lookup"><span data-stu-id="6b401-307">The number of children belonging to an accessible object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6b401-308">下面的示例演示如何创建一个具有辅助功能的图表控件，并使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>类，以公开访问的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-308">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="6b401-309">控件绘制图例以及两条曲线。</span><span class="sxs-lookup"><span data-stu-id="6b401-309">The control plots two curves along with a legend.</span></span> <span data-ttu-id="6b401-310">`ChartControlAccessibleObject`类，该类派生自`ControlAccessibleObject`，在使用<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法以提供自定义访问图表控件的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-310">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="6b401-311">因为不是实际图表图例<xref:System.Windows.Forms.Control>-基于控制，但改为绘制由图表控件，它没有任何内置的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-311">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="6b401-312">因此，`ChartControlAccessibleObject`类将重写<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法以返回`CurveLegendAccessibleObject`，它表示每个部分的图例可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-312">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="6b401-313">当辅助功能的应用程序使用该控件时，该控件可以提供所需的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-313">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="6b401-314">重写此代码演示<xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-314">This code demonstrates shows overriding the <xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A> method.</span></span> <span data-ttu-id="6b401-315">请参阅<xref:System.Windows.Forms.AccessibleObject>完整的代码示例的类概述。</span><span class="sxs-lookup"><span data-stu-id="6b401-315">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-316">所有对象都必须都支持此属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-316">All objects must support this property.</span></span> <span data-ttu-id="6b401-317">默认实现将返回 -1。</span><span class="sxs-lookup"><span data-stu-id="6b401-317">The default implementation returns -1.</span></span> <span data-ttu-id="6b401-318">重写此方法时需要提供自定义的可访问子级辅助性对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-318">Override this method when an accessible object needs to provide custom accessible children.</span></span> <span data-ttu-id="6b401-319">当你重写此方法时，还必须重写<see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-319">When you override this method, you must also override <see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetFocused">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetFocused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetFocused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetFocused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFocused () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetFocused();" />
      <MemberSignature Language="F#" Value="abstract member GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetFocused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b401-320">检索具有键盘焦点的对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-320">Retrieves the object that has the keyboard focus.</span></span></summary>
        <returns><span data-ttu-id="6b401-321"><see cref="T:System.Windows.Forms.AccessibleObject" />，指定当前已设定焦点的子级。</span><span class="sxs-lookup"><span data-stu-id="6b401-321">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that specifies the currently focused child.</span></span> <span data-ttu-id="6b401-322">如果对象本身设定了焦点，此方法返回调用对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-322">This method returns the calling object if the object itself is focused.</span></span> <span data-ttu-id="6b401-323">如果没有对象具有焦点，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-323">Returns <see langword="null" /> if no object has focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-324">键盘焦点的概念与有关的活动窗口。</span><span class="sxs-lookup"><span data-stu-id="6b401-324">The concept of keyboard focus is related to that of an active window.</span></span> <span data-ttu-id="6b401-325">活动窗口是用户正在前台窗口。</span><span class="sxs-lookup"><span data-stu-id="6b401-325">An active window is the foreground window in which the user is working.</span></span> <span data-ttu-id="6b401-326">具有键盘焦点的对象是活动窗口或活动窗口的子对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-326">The object with the keyboard focus is either the active window or a child object of the active window.</span></span>  
  
 <span data-ttu-id="6b401-327">在任一时刻，只能有一个对象或容器中的项可以具有焦点。</span><span class="sxs-lookup"><span data-stu-id="6b401-327">Only one object or item within a container can have the focus at any one time.</span></span> <span data-ttu-id="6b401-328">具有键盘焦点的对象不一定是所选的对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-328">The object with the keyboard focus is not necessarily the selected object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6b401-329">无法检索控件。</span><span class="sxs-lookup"><span data-stu-id="6b401-329">The control cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-330">可接收键盘焦点的所有对象都必须都支持此属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-330">All objects that can receive the keyboard focus must support this property.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHelpTopic">
      <MemberSignature Language="C#" Value="public virtual int GetHelpTopic (out string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHelpTopic([out] string&amp; fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHelpTopic (ByRef fileName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHelpTopic([Runtime::InteropServices::Out] System::String ^ % fileName);" />
      <MemberSignature Language="F#" Value="abstract member GetHelpTopic :  -&gt; int&#xA;override this.GetHelpTopic :  -&gt; int" Usage="accessibleObject.GetHelpTopic fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="6b401-331">返回时，该属性包含与辅助性对象关联的帮助文件的路径。</span><span class="sxs-lookup"><span data-stu-id="6b401-331">On return, this property contains the path to the Help file associated with this accessible object.</span></span></param>
        <summary><span data-ttu-id="6b401-332">获取帮助主题标识符及与该辅助性对象相关的帮助文件的路径。</span><span class="sxs-lookup"><span data-stu-id="6b401-332">Gets an identifier for a Help topic identifier and the path to the Help file associated with this accessible object.</span></span></summary>
        <returns><span data-ttu-id="6b401-333">帮助主题的标识符，或者，如果没有帮助主题，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="6b401-333">An identifier for a Help topic, or -1 if there is no Help topic.</span></span> <span data-ttu-id="6b401-334">返回时，<paramref name="fileName" /> 参数包含与该辅助性对象相关的帮助文件的路径。</span><span class="sxs-lookup"><span data-stu-id="6b401-334">On return, the <paramref name="fileName" /> parameter contains the path to the Help file associated with this accessible object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-335">若要显示的帮助<xref:System.Windows.Forms.AccessibleObject>使用 Windows 帮助系统，您可以将传递文件名称和主题 ID 给适当<xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType>方法的<xref:System.Windows.Forms.Help>。</span><span class="sxs-lookup"><span data-stu-id="6b401-335">To display help for the <xref:System.Windows.Forms.AccessibleObject> using the Windows Help system, you can pass the file name and topic ID to the appropriate <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType> method of <xref:System.Windows.Forms.Help>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6b401-336">无法检索控件的帮助主题。</span><span class="sxs-lookup"><span data-stu-id="6b401-336">The Help topic for the control cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-337">并非所有对象都必须支持此属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-337">Not all objects need to support this property.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
      </Docs>
    </Member>
    <Member MemberName="GetSelected">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetSelected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetSelected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetSelected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelected () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetSelected();" />
      <MemberSignature Language="F#" Value="abstract member GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetSelected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b401-338">检索当前选定的子级。</span><span class="sxs-lookup"><span data-stu-id="6b401-338">Retrieves the currently selected child.</span></span></summary>
        <returns><span data-ttu-id="6b401-339">表示当前选定子级的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-339">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the currently selected child.</span></span> <span data-ttu-id="6b401-340">如果选定了对象本身，则此方法返回调用对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-340">This method returns the calling object if the object itself is selected.</span></span> <span data-ttu-id="6b401-341">如果当前没有选定子级且对象本身没有焦点，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-341">Returns <see langword="null" /> if is no child is currently selected and the object itself does not have focus.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6b401-342">无法检索选定的子级。</span><span class="sxs-lookup"><span data-stu-id="6b401-342">The selected child cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-343">可以选择的所有对象都应都支持此属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-343">All objects that can be selected should support this property.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public virtual string Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Help" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Help As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Help { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : string" Usage="System.Windows.Forms.AccessibleObject.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-344">获取对象用途或如何使用对象的说明。</span><span class="sxs-lookup"><span data-stu-id="6b401-344">Gets a description of what the object does or how the object is used.</span></span></summary>
        <value><span data-ttu-id="6b401-345"><see cref="T:System.String" />，包含对象用途或如何使用对象的说明。</span><span class="sxs-lookup"><span data-stu-id="6b401-345">A <see cref="T:System.String" /> that contains the description of what the object does or how the object is used.</span></span> <span data-ttu-id="6b401-346">如果没有定义帮助，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-346">Returns <see langword="null" /> if no help is defined.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6b401-347">无法检索控件的帮助字符串。</span><span class="sxs-lookup"><span data-stu-id="6b401-347">The help string for the control cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-348">并非所有对象都必须支持此属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-348">Not all objects need to support this property.</span></span> <span data-ttu-id="6b401-349">通常情况下，此属性包含的工具提示样式信息用于描述对象用途或如何使用它。</span><span class="sxs-lookup"><span data-stu-id="6b401-349">Typically, this property contains ToolTip style information that is used either to describe what the object does or how to use it.</span></span> <span data-ttu-id="6b401-350">例如，<see cref="P:System.Windows.Forms.AccessibleObject.Help" />打印机可能显示的工具栏按钮的属性"将打印当前文档。"</span><span class="sxs-lookup"><span data-stu-id="6b401-350">For example, the <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> property for a toolbar button that shows a printer might be "Prints the current document."</span></span> <span data-ttu-id="6b401-351">文本<see cref="P:System.Windows.Forms.AccessibleObject.Help" />属性无需用户界面中是唯一的。</span><span class="sxs-lookup"><span data-stu-id="6b401-351">The text for the <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> property does not have to be unique within the user interface.</span></span> <span data-ttu-id="6b401-352">服务器不需要支持<see cref="P:System.Windows.Forms.AccessibleObject.Help" />属性的用途的其他属性提供有关对象的足够信息和该对象可能会执行哪些操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-352">Servers do not need to support the <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> property if other properties provide sufficient information about the object's purpose and what actions the object might perform.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HitTest (x As Integer, y As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6b401-353">水平屏幕坐标。</span><span class="sxs-lookup"><span data-stu-id="6b401-353">The horizontal screen coordinate.</span></span></param>
        <param name="y"><span data-ttu-id="6b401-354">垂直屏幕坐标。</span><span class="sxs-lookup"><span data-stu-id="6b401-354">The vertical screen coordinate.</span></span></param>
        <summary><span data-ttu-id="6b401-355">检索位于指定屏幕坐标的子对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-355">Retrieves the child object at the specified screen coordinates.</span></span></summary>
        <returns><span data-ttu-id="6b401-356">一个 <see cref="T:System.Windows.Forms.AccessibleObject" />，表示位于给定屏幕坐标位置的子对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-356">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the child object at the given screen coordinates.</span></span> <span data-ttu-id="6b401-357">如果对象本身位于指定位置，则此方法返回调用对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-357">This method returns the calling object if the object itself is at the location specified.</span></span> <span data-ttu-id="6b401-358">如果测试位置没有对象，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-358">Returns <see langword="null" /> if no object is at the tested location.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-359">对于如列表视图项的非矩形对象，该对象的坐标的边框来检索<xref:System.Windows.Forms.AccessibleObject.Bounds%2A>如果使用测试可能会失败<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>，这是因为<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>确定像素的基础上的对象的边界。</span><span class="sxs-lookup"><span data-stu-id="6b401-359">For nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle retrieved by <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> can fail if tested with <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>, because <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> determines the object's boundaries on a pixel-by-pixel basis.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6b401-360">无法对控件进行点击检测。</span><span class="sxs-lookup"><span data-stu-id="6b401-360">The control cannot be hit tested.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-361">所有视觉对象必须支持此方法。声音对象不支持它。</span><span class="sxs-lookup"><span data-stu-id="6b401-361">All visual objects must support this method; sound objects do not support it.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="KeyboardShortcut">
      <MemberSignature Language="C#" Value="public virtual string KeyboardShortcut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyboardShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardShortcut As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyboardShortcut { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardShortcut : string" Usage="System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-362">获取辅助性对象的快捷键或访问键。</span><span class="sxs-lookup"><span data-stu-id="6b401-362">Gets the shortcut key or access key for the accessible object.</span></span></summary>
        <value><span data-ttu-id="6b401-363">辅助性对象的快捷键或访问键，或者，如果没有与此对象相关联的快捷键，则是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-363">The shortcut key or access key for the accessible object, or <see langword="null" /> if there is no shortcut key associated with the object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-364">访问密钥，也称为助记键，是菜单、 菜单项、 一个按钮或一些其他控件的标签文本中带下划线的字符。</span><span class="sxs-lookup"><span data-stu-id="6b401-364">An access key, also known as a mnemonic, is an underlined character in the text of a menu, menu item, label of a button, or some other control.</span></span> <span data-ttu-id="6b401-365">例如，用户可以显示一个菜单，通过按 ALT 键的同时按指示带下划线的键，如 ALT + F，若要打开`File`菜单。</span><span class="sxs-lookup"><span data-stu-id="6b401-365">For example, a user can display a menu by pressing the ALT key while also pressing the indicated underlined key, such as ALT+F, to open the `File` menu.</span></span> <span data-ttu-id="6b401-366">若要使用的菜单项的访问密钥，包含的项菜单上必须处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="6b401-366">To use the access key of a menu item, the menu containing the item must be active.</span></span> <span data-ttu-id="6b401-367">工具栏按钮和菜单项控件通常具有关联的快捷键。</span><span class="sxs-lookup"><span data-stu-id="6b401-367">Controls such as toolbar buttons and menu items often have an associated shortcut key.</span></span> <span data-ttu-id="6b401-368">菜单项可以具有的访问密钥和与之相关联的快捷键。</span><span class="sxs-lookup"><span data-stu-id="6b401-368">A menu item can have both an access key and a shortcut key associated with it.</span></span> <span data-ttu-id="6b401-369">如果的值<xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A>属性为单个字符，则可以认为它是访问密钥。</span><span class="sxs-lookup"><span data-stu-id="6b401-369">If the value of the <xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A> property is a single character, you can assume it is an access key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6b401-370">无法检索控件的快捷方式。</span><span class="sxs-lookup"><span data-stu-id="6b401-370">The shortcut for the control cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-371">具有快捷键或访问键的所有对象都应都支持此属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-371">All objects that have a shortcut key or access key should support this property.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-372">获取或设置对象名。</span><span class="sxs-lookup"><span data-stu-id="6b401-372">Gets or sets the object name.</span></span></summary>
        <value><span data-ttu-id="6b401-373">对象名，或者，如果尚未设置属性，则是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-373">The object name, or <see langword="null" /> if the property has not been set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-374"><xref:System.Windows.Forms.AccessibleObject.Name%2A>属性是客户端用来识别、 查找或通告的用户对象的字符串。</span><span class="sxs-lookup"><span data-stu-id="6b401-374">The <xref:System.Windows.Forms.AccessibleObject.Name%2A> property is a string used by clients to identify, find, or announce an object for the user.</span></span> <span data-ttu-id="6b401-375">若要访问子对象的名称，必须首先调用<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>与要检索其名称的子级的索引。</span><span class="sxs-lookup"><span data-stu-id="6b401-375">To access the name of a child object, you must first call <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> with the index of the child whose name you are retrieving.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b401-376">下面的示例演示如何创建一个具有辅助功能的图表控件，并使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>类，以公开访问的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-376">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="6b401-377">控件绘制图例以及两条曲线。</span><span class="sxs-lookup"><span data-stu-id="6b401-377">The control plots two curves along with a legend.</span></span> <span data-ttu-id="6b401-378">`ChartControlAccessibleObject`类，该类派生自`ControlAccessibleObject`，在使用<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法以提供自定义访问图表控件的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-378">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="6b401-379">因为不是实际图表图例<xref:System.Windows.Forms.Control>-基于控制，但改为绘制由图表控件，它没有任何内置的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-379">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="6b401-380">因此，`ChartControlAccessibleObject`类将重写<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法以返回`CurveLegendAccessibleObject`，它表示每个部分的图例可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-380">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="6b401-381">当辅助功能的应用程序使用该控件时，该控件可以提供所需的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-381">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="6b401-382">此代码片段演示如何重写<xref:System.Windows.Forms.AccessibleObject.Name%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-382">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.Name%2A> property.</span></span> <span data-ttu-id="6b401-383">请参阅<xref:System.Windows.Forms.AccessibleObject>完整的代码示例的类概述。</span><span class="sxs-lookup"><span data-stu-id="6b401-383">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6b401-384">无法检索或设置控件名。</span><span class="sxs-lookup"><span data-stu-id="6b401-384">The name of the control cannot be retrieved or set.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-385">所有对象都应都支持此属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-385">All objects should support this property.</span></span> <span data-ttu-id="6b401-386">对象的名称应为直观，以便用户了解对象的含义或用途。</span><span class="sxs-lookup"><span data-stu-id="6b401-386">An object's name should be intuitive so that users understand the object's meaning or purpose.</span></span> <span data-ttu-id="6b401-387">此外，确保<see langword="Name" />属性是相对于任何同级对象的父代中唯一的。</span><span class="sxs-lookup"><span data-stu-id="6b401-387">Also, ensure that the <see langword="Name" /> property is unique relative to any sibling objects in the parent.</span></span> <span data-ttu-id="6b401-388">表中的导航提供了一些用户极其困难的问题。</span><span class="sxs-lookup"><span data-stu-id="6b401-388">Navigation within tables presents especially difficult problems for some users.</span></span> <span data-ttu-id="6b401-389">因此，server 开发人员应使表单元格名称尽可能具有描述性。</span><span class="sxs-lookup"><span data-stu-id="6b401-389">Therefore, server developers should make table cell names as descriptive as possible.</span></span> <span data-ttu-id="6b401-390">例如，可以通过合并的行和列占据，例如"A1。"的名称创建单元名称</span><span class="sxs-lookup"><span data-stu-id="6b401-390">For example, you might create a cell name by combining the names of the row and column it occupies, such as "A1."</span></span> <span data-ttu-id="6b401-391">但是，它是通常最好使用更具说明性的名称，例如"Karin，年 2 月。"</span><span class="sxs-lookup"><span data-stu-id="6b401-391">However, it is generally better to use more descriptive names, such as "Karin, February."</span></span> <span data-ttu-id="6b401-392">多个对象，例如图标、 菜单、 复选框、 组合框和其他控件中，已向用户显示的标签。</span><span class="sxs-lookup"><span data-stu-id="6b401-392">Many objects, such as icons, menus, check boxes, combo boxes, and other controls, have labels that are displayed to users.</span></span> <span data-ttu-id="6b401-393">向用户显示任何标签应用于对象的<see cref="P:System.Windows.Forms.AccessibleObject.Name" />属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-393">Any label displayed to users should be used for the object's <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> property.</span></span> <span data-ttu-id="6b401-394">有关详细信息，请参阅<see cref="P:System.Windows.Forms.AccessibleObject.Name" />属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-394">For more information, see the <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> Property.</span></span>  
  
<span data-ttu-id="6b401-395">如果您使用的菜单或按钮文本<see cref="P:System.Windows.Forms.AccessibleObject.Name" />属性，请抽出 &amp; 符 (&amp;) 标记键盘访问键。</span><span class="sxs-lookup"><span data-stu-id="6b401-395">If you are using menu or button text for the <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> property, strip out the ampersands (&amp;) that mark the keyboard access keys.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject Navigate(valuetype System.Windows.Forms.AccessibleNavigation navdir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Navigate (navdir As AccessibleNavigation) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ Navigate(System::Windows::Forms::AccessibleNavigation navdir);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.Navigate navdir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navdir" Type="System.Windows.Forms.AccessibleNavigation" />
      </Parameters>
      <Docs>
        <param name="navdir"><span data-ttu-id="6b401-396"><see cref="T:System.Windows.Forms.AccessibleNavigation" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="6b401-396">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> values.</span></span></param>
        <summary><span data-ttu-id="6b401-397">定位到另一个辅助性对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-397">Navigates to another accessible object.</span></span></summary>
        <returns><span data-ttu-id="6b401-398">表示 <see cref="T:System.Windows.Forms.AccessibleObject" /> 值之一的 <see cref="T:System.Windows.Forms.AccessibleNavigation" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-398">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents one of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-399">导航栏中，空间和逻辑，始终被限制到容器中的用户界面元素。</span><span class="sxs-lookup"><span data-stu-id="6b401-399">Navigation, both spatial and logical, is always restricted to the user interface elements within a container.</span></span> <span data-ttu-id="6b401-400">与空间导航栏中，客户端只能定位到起始对象的同级。</span><span class="sxs-lookup"><span data-stu-id="6b401-400">With spatial navigation, clients can navigate only to a sibling of the starting object.</span></span> <span data-ttu-id="6b401-401">具体取决于用于逻辑导航导航标志，客户端可以导航到的子级或同级起始对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-401">Depending on the navigational flag used with logical navigation, clients can navigate to either a child or to a sibling of the starting object.</span></span> <span data-ttu-id="6b401-402">此方法不更改选定内容或焦点。</span><span class="sxs-lookup"><span data-stu-id="6b401-402">This method does not change the selection or focus.</span></span> <span data-ttu-id="6b401-403">若要更改焦点或选择一个对象，请使用<xref:System.Windows.Forms.AccessibleObject.Select%2A>。</span><span class="sxs-lookup"><span data-stu-id="6b401-403">To change the focus or to select an object, use <xref:System.Windows.Forms.AccessibleObject.Select%2A>.</span></span> <span data-ttu-id="6b401-404"><xref:System.Windows.Forms.AccessibleObject.Navigate%2A>方法检索仅用户界面元素具有定义的屏幕位置。</span><span class="sxs-lookup"><span data-stu-id="6b401-404">The <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> method retrieves only user interface elements that have a defined screen location.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b401-405">下面的示例演示如何创建一个具有辅助功能的图表控件，并使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>类，以公开访问的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-405">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="6b401-406">控件绘制图例以及两条曲线。</span><span class="sxs-lookup"><span data-stu-id="6b401-406">The control plots two curves along with a legend.</span></span> <span data-ttu-id="6b401-407">`ChartControlAccessibleObject`类，该类派生自`ControlAccessibleObject`，在使用<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法以提供自定义访问图表控件的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-407">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="6b401-408">因为不是实际图表图例<xref:System.Windows.Forms.Control>-基于控制，但改为绘制由图表控件，它没有任何内置的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-408">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="6b401-409">因此，`ChartControlAccessibleObject`类将重写<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法以返回`CurveLegendAccessibleObject`，它表示每个部分的图例可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-409">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="6b401-410">当辅助功能的应用程序使用该控件时，该控件可以提供所需的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-410">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="6b401-411">重写此代码演示<xref:System.Windows.Forms.AccessibleObject.Navigate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-411">This code demonstrates shows overriding the <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> method.</span></span> <span data-ttu-id="6b401-412">请参阅<xref:System.Windows.Forms.AccessibleObject>完整的代码示例的类概述。</span><span class="sxs-lookup"><span data-stu-id="6b401-412">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6b401-413">导航尝试失败。</span><span class="sxs-lookup"><span data-stu-id="6b401-413">The navigation attempt fails.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-414">所有视觉对象必须支持此方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-414">All visual objects must support this method.</span></span> <span data-ttu-id="6b401-415">如果对象具有的状态<see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />，导航到此隐藏对象可能会失败。</span><span class="sxs-lookup"><span data-stu-id="6b401-415">If an object has the state <see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />, navigation to this hidden object might fail.</span></span> <span data-ttu-id="6b401-416">一些系统定义的界面元素，如菜单、 菜单项和弹出菜单允许导航到不是可见的对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-416">Some system-defined interface elements such as menus, menu items, and pop-up menus allow navigation to objects that are not visible.</span></span> <span data-ttu-id="6b401-417">但是，其他系统定义的用户界面元素不支持此。</span><span class="sxs-lookup"><span data-stu-id="6b401-417">However, other system-defined user interface elements do not support this.</span></span> <span data-ttu-id="6b401-418">如果可能，服务器应支持导航到对象的不可见，但不需要此支持和客户端不应期望它。</span><span class="sxs-lookup"><span data-stu-id="6b401-418">If possible, servers should support navigation to objects that are not visible, but this support is not required and clients should not expect it.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ Parent { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.AccessibleObject.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-419">获取辅助性对象的父级。</span><span class="sxs-lookup"><span data-stu-id="6b401-419">Gets the parent of an accessible object.</span></span></summary>
        <value><span data-ttu-id="6b401-420">表示可访问对象父级的 <see cref="T:System.Windows.Forms.AccessibleObject" />，如果没有父对象，则是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-420">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the parent of an accessible object, or <see langword="null" /> if there is no parent object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6b401-421">下面的示例演示如何创建一个具有辅助功能的图表控件，并使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>类，以公开访问的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-421">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="6b401-422">控件绘制图例以及两条曲线。</span><span class="sxs-lookup"><span data-stu-id="6b401-422">The control plots two curves along with a legend.</span></span> <span data-ttu-id="6b401-423">`ChartControlAccessibleObject`类，该类派生自`ControlAccessibleObject`，在使用<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法以提供自定义访问图表控件的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-423">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="6b401-424">因为不是实际图表图例<xref:System.Windows.Forms.Control>-基于控制，但改为绘制由图表控件，它没有任何内置的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-424">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="6b401-425">因此，`ChartControlAccessibleObject`类将重写<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法以返回`CurveLegendAccessibleObject`，它表示每个部分的图例可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-425">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="6b401-426">当辅助功能的应用程序使用该控件时，该控件可以提供所需的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-426">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="6b401-427">此代码片段演示如何重写<xref:System.Windows.Forms.AccessibleObject.Parent%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-427">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.Parent%2A> property.</span></span> <span data-ttu-id="6b401-428">请参阅<xref:System.Windows.Forms.AccessibleObject>完整的代码示例的类概述。</span><span class="sxs-lookup"><span data-stu-id="6b401-428">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-429">所有对象都应都支持此属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-429">All objects should support this property.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationNotification">
      <MemberSignature Language="C#" Value="public bool RaiseAutomationNotification (System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RaiseAutomationNotification(valuetype System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, valuetype System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseAutomationNotification(System.Windows.Forms.Automation.AutomationNotificationKind,System.Windows.Forms.Automation.AutomationNotificationProcessing,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RaiseAutomationNotification (notificationKind As AutomationNotificationKind, notificationProcessing As AutomationNotificationProcessing, notificationText As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RaiseAutomationNotification(System::Windows::Forms::Automation::AutomationNotificationKind notificationKind, System::Windows::Forms::Automation::AutomationNotificationProcessing notificationProcessing, System::String ^ notificationText);" />
      <MemberSignature Language="F#" Value="member this.RaiseAutomationNotification : System.Windows.Forms.Automation.AutomationNotificationKind * System.Windows.Forms.Automation.AutomationNotificationProcessing * string -&gt; bool" Usage="accessibleObject.RaiseAutomationNotification (notificationKind, notificationProcessing, notificationText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationKind" Type="System.Windows.Forms.Automation.AutomationNotificationKind" />
        <Parameter Name="notificationProcessing" Type="System.Windows.Forms.Automation.AutomationNotificationProcessing" />
        <Parameter Name="notificationText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="notificationKind"><span data-ttu-id="6b401-430">通知的类型。</span><span class="sxs-lookup"><span data-stu-id="6b401-430">The type of notification.</span></span></param>
        <param name="notificationProcessing"><span data-ttu-id="6b401-431">如何处理通知的指示器。</span><span class="sxs-lookup"><span data-stu-id="6b401-431">An indicator of how to process notifications.</span></span></param>
        <param name="notificationText"><span data-ttu-id="6b401-432">通知的文本。</span><span class="sxs-lookup"><span data-stu-id="6b401-432">The text of the notification.</span></span></param>
        <summary><span data-ttu-id="6b401-433">引发 UI 自动化通知事件。</span><span class="sxs-lookup"><span data-stu-id="6b401-433">Raises the UI automation notification event.</span></span></summary>
        <returns><span data-ttu-id="6b401-434">如果操作成功，则为 <see langword="true" />；如果基础的 Windows 基础结构不可用或操作失败，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-434"><see langword="true" /> if the operation succeeds; <see langword="false" /> if the underlying Windows infrastucture is not available or the operation failed.</span></span> <span data-ttu-id="6b401-435">调用 <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" /> 以获取详细信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-435">Call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" /> for details.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="6b401-436">此事件是从 Windows 10 1709年版开始提供。</span><span class="sxs-lookup"><span data-stu-id="6b401-436">This event is available starting with Windows 10, version 1709.</span></span>
  
       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseLiveRegionChanged">
      <MemberSignature Language="C#" Value="public virtual bool RaiseLiveRegionChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RaiseLiveRegionChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseLiveRegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RaiseLiveRegionChanged () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RaiseLiveRegionChanged();" />
      <MemberSignature Language="F#" Value="abstract member RaiseLiveRegionChanged : unit -&gt; bool&#xA;override this.RaiseLiveRegionChanged : unit -&gt; bool" Usage="accessibleObject.RaiseLiveRegionChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b401-437">引发 LiveRegionChanged UI 自动化事件。</span><span class="sxs-lookup"><span data-stu-id="6b401-437">Raises the LiveRegionChanged UI automation event.</span></span></summary>
        <returns><span data-ttu-id="6b401-438">如果操作成功，则为 <see langword="true" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-438"><see langword="true" /> if the operation succeeds; <see langword="False" /> otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="6b401-439">必须在支持 UI 自动化活动区域功能的派生类中重写此方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-439">This method must be overridden in derived classes that support the UI automation live region feature.</span></span>
  
     ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6b401-440">不支持可访问性对象活动区域。</span><span class="sxs-lookup"><span data-stu-id="6b401-440">Accessibility object live regions are not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Role" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Role As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleRole Role { System::Windows::Forms::AccessibleRole get(); };" />
      <MemberSignature Language="F#" Value="member this.Role : System.Windows.Forms.AccessibleRole" Usage="System.Windows.Forms.AccessibleObject.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-441">获取此辅助性对象的角色。</span><span class="sxs-lookup"><span data-stu-id="6b401-441">Gets the role of this accessible object.</span></span></summary>
        <value><span data-ttu-id="6b401-442"><see cref="T:System.Windows.Forms.AccessibleRole" /> 值之一；如果尚未指定角色，则为 <see cref="F:System.Windows.Forms.AccessibleRole.None" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-442">One of the <see cref="T:System.Windows.Forms.AccessibleRole" /> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None" /> if no role has been specified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-443">对象的角色可帮助描述对象的函数。</span><span class="sxs-lookup"><span data-stu-id="6b401-443">The role of the object helps describe the function of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b401-444">下面的示例演示如何创建一个具有辅助功能的图表控件，并使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>类，以公开访问的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-444">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="6b401-445">控件绘制图例以及两条曲线。</span><span class="sxs-lookup"><span data-stu-id="6b401-445">The control plots two curves along with a legend.</span></span> <span data-ttu-id="6b401-446">`ChartControlAccessibleObject`类，该类派生自`ControlAccessibleObject`，在使用<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法以提供自定义访问图表控件的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-446">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="6b401-447">因为不是实际图表图例<xref:System.Windows.Forms.Control>-基于控制，但改为绘制由图表控件，它没有任何内置的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-447">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="6b401-448">因此，`ChartControlAccessibleObject`类将重写<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法以返回`CurveLegendAccessibleObject`，它表示每个部分的图例可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-448">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="6b401-449">当辅助功能的应用程序使用该控件时，该控件可以提供所需的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-449">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="6b401-450">此代码片段演示如何重写<xref:System.Windows.Forms.AccessibleObject.Role%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-450">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.Role%2A> property.</span></span> <span data-ttu-id="6b401-451">请参阅<xref:System.Windows.Forms.AccessibleObject>完整的代码示例的类概述。</span><span class="sxs-lookup"><span data-stu-id="6b401-451">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-452">所有对象都应都支持此属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-452">All objects should support this property.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Windows.Forms.AccessibleSelection flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(valuetype System.Windows.Forms.AccessibleSelection flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (flags As AccessibleSelection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Windows::Forms::AccessibleSelection flags);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Windows.Forms.AccessibleSelection -&gt; unit&#xA;override this.Select : System.Windows.Forms.AccessibleSelection -&gt; unit" Usage="accessibleObject.Select flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.AccessibleSelection" />
      </Parameters>
      <Docs>
        <param name="flags"><span data-ttu-id="6b401-453"><see cref="T:System.Windows.Forms.AccessibleSelection" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="6b401-453">One of the <see cref="T:System.Windows.Forms.AccessibleSelection" /> values.</span></span></param>
        <summary><span data-ttu-id="6b401-454">修改选择内容或移动辅助性对象的键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="6b401-454">Modifies the selection or moves the keyboard focus of the accessible object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-455">应用程序可以使用此方法来执行复杂的选择操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-455">Applications can use this method to perform complex selection operations.</span></span>  
  
 <span data-ttu-id="6b401-456">以下内容说明了<xref:System.Windows.Forms.AccessibleSelection>值，以在调用时指定<xref:System.Windows.Forms.AccessibleObject.Select%2A>执行复杂的选择操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-456">The following describes which <xref:System.Windows.Forms.AccessibleSelection> values to specify when calling <xref:System.Windows.Forms.AccessibleObject.Select%2A> to perform complex selection operations.</span></span>  
  
|<span data-ttu-id="6b401-457">操作</span><span class="sxs-lookup"><span data-stu-id="6b401-457">Operation</span></span>|<span data-ttu-id="6b401-458">标志组合</span><span class="sxs-lookup"><span data-stu-id="6b401-458">Flag Combination</span></span>|  
|---------------|----------------------|  
|<span data-ttu-id="6b401-459">若要模拟单击</span><span class="sxs-lookup"><span data-stu-id="6b401-459">To simulate a click</span></span>|<span data-ttu-id="6b401-460"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> **注意：** 如果从自己的应用程序中调用，这种组合将选择所需的控制。</span><span class="sxs-lookup"><span data-stu-id="6b401-460"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> **Note:**  This combination will not select the desired control if called from within your own application.</span></span> <span data-ttu-id="6b401-461">但是，如果从外部应用程序调用，它将具有所需的效果。</span><span class="sxs-lookup"><span data-stu-id="6b401-461">It will have the desired effect, however, if called from an external application.</span></span>|  
|<span data-ttu-id="6b401-462">若要通过模拟 CTRL + 单击来选择目标项目</span><span class="sxs-lookup"><span data-stu-id="6b401-462">To select a target item by simulating CTRL + click</span></span>|<span data-ttu-id="6b401-463"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.AddSelection?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="6b401-463"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.AddSelection?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="6b401-464">通过模拟 CTRL + 单击来取消选择的目标项</span><span class="sxs-lookup"><span data-stu-id="6b401-464">To cancel selection of a target item by simulating CTRL + click</span></span>|<span data-ttu-id="6b401-465"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="6b401-465"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="6b401-466">若要模拟 SHIFT + 单击</span><span class="sxs-lookup"><span data-stu-id="6b401-466">To simulate SHIFT + click</span></span>|<span data-ttu-id="6b401-467"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="6b401-467"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="6b401-468">选择范围内的对象，并将焦点放在最后一个对象</span><span class="sxs-lookup"><span data-stu-id="6b401-468">To select a range of objects and put focus on the last object</span></span>|<span data-ttu-id="6b401-469">指定<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType>上要设置选择定位点的起始对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-469">Specify <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> on the starting object to set the selection anchor.</span></span> <span data-ttu-id="6b401-470">然后调用<xref:System.Windows.Forms.AccessibleObject.Select%2A>再次并指定<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType>上的最后一个对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-470">Then call <xref:System.Windows.Forms.AccessibleObject.Select%2A> again and specify <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType>`OR`<xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType> on the last object.</span></span>|  
|<span data-ttu-id="6b401-471">若要取消选择所有对象</span><span class="sxs-lookup"><span data-stu-id="6b401-471">To deselect all objects</span></span>|<span data-ttu-id="6b401-472">指定<xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType>上任何对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-472">Specify <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> on any object.</span></span> <span data-ttu-id="6b401-473">此标志可取消选择除刚才所选的所有选定的对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-473">This flag deselects all selected objects except the one just selected.</span></span> <span data-ttu-id="6b401-474">然后调用<xref:System.Windows.Forms.AccessibleObject.Select%2A>再次并指定<xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType>对同一对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-474">Then call <xref:System.Windows.Forms.AccessibleObject.Select%2A> again and specify <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType> on the same object.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6b401-475">下面的示例演示如何创建一个具有辅助功能的图表控件，并使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>类，以公开访问的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-475">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="6b401-476">控件绘制图例以及两条曲线。</span><span class="sxs-lookup"><span data-stu-id="6b401-476">The control plots two curves along with a legend.</span></span> <span data-ttu-id="6b401-477">`ChartControlAccessibleObject`类，该类派生自`ControlAccessibleObject`，在使用<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法以提供自定义访问图表控件的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-477">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="6b401-478">因为不是实际图表图例<xref:System.Windows.Forms.Control>-基于控制，但改为绘制由图表控件，它没有任何内置的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-478">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="6b401-479">因此，`ChartControlAccessibleObject`类将重写<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法以返回`CurveLegendAccessibleObject`，它表示每个部分的图例可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-479">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="6b401-480">当辅助功能的应用程序使用该控件时，该控件可以提供所需的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-480">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="6b401-481">重写此代码演示<xref:System.Windows.Forms.AccessibleObject.Select%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-481">This code demonstrates shows overriding the <xref:System.Windows.Forms.AccessibleObject.Select%2A> method.</span></span> <span data-ttu-id="6b401-482">请参阅<xref:System.Windows.Forms.AccessibleObject>完整的代码示例的类概述。</span><span class="sxs-lookup"><span data-stu-id="6b401-482">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6b401-483">无法执行选择。</span><span class="sxs-lookup"><span data-stu-id="6b401-483">The selection cannot be performed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-484">可以选择或接收键盘焦点的所有对象必须都支持此方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-484">All objects that can be selected or receive the keyboard focus must support this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.State" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property State As AccessibleStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleStates State { System::Windows::Forms::AccessibleStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.AccessibleStates" Usage="System.Windows.Forms.AccessibleObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-485">获取此辅助性对象的状态。</span><span class="sxs-lookup"><span data-stu-id="6b401-485">Gets the state of this accessible object.</span></span></summary>
        <value><span data-ttu-id="6b401-486"><see cref="T:System.Windows.Forms.AccessibleStates" /> 值之一，或者，如果没有设置状态，则是 <see cref="F:System.Windows.Forms.AccessibleStates.None" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-486">One of the <see cref="T:System.Windows.Forms.AccessibleStates" /> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None" />, if no state has been set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6b401-487">下面的示例演示如何创建一个具有辅助功能的图表控件，并使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>类，以公开访问的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-487">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="6b401-488">控件绘制图例以及两条曲线。</span><span class="sxs-lookup"><span data-stu-id="6b401-488">The control plots two curves along with a legend.</span></span> <span data-ttu-id="6b401-489">`ChartControlAccessibleObject`类，该类派生自`ControlAccessibleObject`，在使用<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法以提供自定义访问图表控件的信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-489">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="6b401-490">因为不是实际图表图例<xref:System.Windows.Forms.Control>-基于控制，但改为绘制由图表控件，它没有任何内置的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-490">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="6b401-491">因此，`ChartControlAccessibleObject`类将重写<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法以返回`CurveLegendAccessibleObject`，它表示每个部分的图例可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-491">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="6b401-492">当辅助功能的应用程序使用该控件时，该控件可以提供所需的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-492">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="6b401-493">此代码片段演示如何重写<xref:System.Windows.Forms.AccessibleObject.State%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-493">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.State%2A> property.</span></span> <span data-ttu-id="6b401-494">请参阅<xref:System.Windows.Forms.AccessibleObject>完整的代码示例的类概述。</span><span class="sxs-lookup"><span data-stu-id="6b401-494">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6b401-495">所有对象都应都支持此属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-495">All objects should support this property.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetField">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo System.Reflection.IReflect.GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo Implements IReflect.GetField" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::FieldInfo ^ System.Reflection.IReflect.GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6b401-496">要查找的字段的名称。</span><span class="sxs-lookup"><span data-stu-id="6b401-496">The name of the field to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6b401-497">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-497">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="6b401-498">获取与指定字段和绑定标志对应的 <see cref="T:System.Reflection.FieldInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-498">Gets the <see cref="T:System.Reflection.FieldInfo" /> object corresponding to the specified field and binding flag.</span></span> <span data-ttu-id="6b401-499">有关此成员的说明，请参阅 <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-499">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="6b401-500"><see cref="T:System.Reflection.FieldInfo" /> 对象，包含命名对象的符合 <paramref name="bindingAttr" /> 中指定的搜索约束的字段信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-500">A <see cref="T:System.Reflection.FieldInfo" /> object containing the field information for the named object that meets the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-501">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-501">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-502">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:System.Reflection.IReflect> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-502">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="6b401-503">该对象实现同名的多个字段。</span><span class="sxs-lookup"><span data-stu-id="6b401-503">The object implements multiple fields with the same name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetFields">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo[] System.Reflection.IReflect.GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetFields (bindingAttr As BindingFlags) As FieldInfo() Implements IReflect.GetFields" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ System.Reflection.IReflect.GetFields(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetFields;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="6b401-504">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-504">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="6b401-505">获取与当前类的所有字段对应的 <see cref="T:System.Reflection.FieldInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="6b401-505">Gets an array of <see cref="T:System.Reflection.FieldInfo" /> objects corresponding to all fields of the current class.</span></span> <span data-ttu-id="6b401-506">有关此成员的说明，请参见 <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-506">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="6b401-507"><see cref="T:System.Reflection.FieldInfo" /> 对象的数组，包含此反射对象的符合 <paramref name="bindingAttr" /> 中指定的搜索约束的所有字段信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-507">An array of <see cref="T:System.Reflection.FieldInfo" /> objects containing all the field information for this reflection object that meets the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-508">每个字段必须具有唯一名称。</span><span class="sxs-lookup"><span data-stu-id="6b401-508">Each field must have a unique name.</span></span> <span data-ttu-id="6b401-509"><xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType>标志以指定在搜索中包含非公共字段。</span><span class="sxs-lookup"><span data-stu-id="6b401-509">The <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> flag specifies that nonpublic fields are included in the search.</span></span> <span data-ttu-id="6b401-510"><xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType>标志以指定在搜索中包含公共字段。</span><span class="sxs-lookup"><span data-stu-id="6b401-510">The <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> flag specifies that public fields are included in the search.</span></span>  
  
 <span data-ttu-id="6b401-511">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-511">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-512">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:System.Reflection.IReflect> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-512">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMember">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6b401-513">要查找的成员的名称。</span><span class="sxs-lookup"><span data-stu-id="6b401-513">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6b401-514">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-514">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="6b401-515">获取 <see cref="T:System.Reflection.MemberInfo" /> 对象数组，这些对象对应于所有公共成员或与指定的名称匹配的所有成员。</span><span class="sxs-lookup"><span data-stu-id="6b401-515">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding to all public members or to all members that match a specified name.</span></span> <span data-ttu-id="6b401-516">有关此成员的说明，请参见 <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-516">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="6b401-517">与 name 参数匹配的 <see cref="T:System.Reflection.MemberInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="6b401-517">An array of <see cref="T:System.Reflection.MemberInfo" /> objects matching the name parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-518">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-518">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-519">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:System.Reflection.IReflect> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-519">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMembers">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMembers (bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMembers" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMembers(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMembers;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="6b401-520">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-520">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="6b401-521">获取 <see cref="T:System.Reflection.MemberInfo" /> 对象数组，这些对象对应于所有公共成员或者当前类的所有成员。</span><span class="sxs-lookup"><span data-stu-id="6b401-521">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding either to all public members or to all members of the current class.</span></span> <span data-ttu-id="6b401-522">有关此成员的说明，请参见 <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-522">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="6b401-523">包含此反射对象的所有成员信息的 <see cref="T:System.Reflection.MemberInfo" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="6b401-523">An array of <see cref="T:System.Reflection.MemberInfo" /> objects containing all the member information for this reflection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-524">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-524">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-525">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:System.Reflection.IReflect> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-525">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo Implements IReflect.GetMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6b401-526">要查找的成员的名称。</span><span class="sxs-lookup"><span data-stu-id="6b401-526">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6b401-527">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-527">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="6b401-528">在指定的搜索约束下获取与指定方法对应的 <see cref="T:System.Reflection.MethodInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-528">Gets a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method under specified search constraints.</span></span> <span data-ttu-id="6b401-529">有关此成员的说明，请参阅 <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-529">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="6b401-530">包含方法信息的 <see cref="T:System.Reflection.MethodInfo" /> 对象，匹配基于方法名和 <paramref name="bindingAttr" /> 中指定的搜索约束。</span><span class="sxs-lookup"><span data-stu-id="6b401-530">A <see cref="T:System.Reflection.MethodInfo" /> object containing the method information, with the match being based on the method name and search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-531">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-531">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-532">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:System.Reflection.IReflect> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-532">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="6b401-533">该对象实现同名的多个方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-533">The object implements multiple methods with the same name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6b401-534">要查找的成员的名称。</span><span class="sxs-lookup"><span data-stu-id="6b401-534">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6b401-535">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-535">The binding attributes used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="6b401-536">一个实现 <see cref="T:System.Reflection.Binder" /> 的对象，包含与此方法相关的属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-536">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="types"><span data-ttu-id="6b401-537">用于从重载方法中进行选择的数组。</span><span class="sxs-lookup"><span data-stu-id="6b401-537">An array used to choose among overloaded methods.</span></span></param>
        <param name="modifiers"><span data-ttu-id="6b401-538">参数修饰符的数组，用于使绑定可与在其中修改了类型的参数签名一起使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-538">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="6b401-539">获取与指定方法对应的 <see cref="T:System.Reflection.MethodInfo" /> 对象（使用类型数组从重载方法中进行选择）。</span><span class="sxs-lookup"><span data-stu-id="6b401-539">Gets a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method, using a Type array to choose from among overloaded methods.</span></span> <span data-ttu-id="6b401-540">有关此成员的说明，请参见 <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-540">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />.</span></span></summary>
        <returns><span data-ttu-id="6b401-541">匹配所有指定参数的请求的方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-541">The requested method that matches all the specified parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-542">返回值是根据方法名称的匹配项<xref:System.Reflection.BindingFlags?displayProperty=nameWithType>枚举、 由指定的类型转换的类型`binder`参数、 重载和<xref:System.Reflection.ParameterInfo?displayProperty=nameWithType>用于描述方法的签名。</span><span class="sxs-lookup"><span data-stu-id="6b401-542">The return value is a match based on the method name, the <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> enumeration, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo?displayProperty=nameWithType> that describes the signature of the method.</span></span>  
  
 <span data-ttu-id="6b401-543">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-543">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-544">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:System.Reflection.IReflect> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-544">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="6b401-545">该对象实现同名的多个方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-545">The object implements multiple methods with the same name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethods">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo[] System.Reflection.IReflect.GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethods (bindingAttr As BindingFlags) As MethodInfo() Implements IReflect.GetMethods" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ System.Reflection.IReflect.GetMethods(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethods;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="6b401-546">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-546">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="6b401-547">获取 <see cref="T:System.Reflection.MethodInfo" /> 对象的数组，其中包含了所有公共方法或当前类的所有方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-547">Gets an array of <see cref="T:System.Reflection.MethodInfo" /> objects with all public methods or all methods of the current class.</span></span> <span data-ttu-id="6b401-548">有关此成员的说明，请参见 <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-548">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="6b401-549"><see cref="T:System.Reflection.MethodInfo" /> 对象的数组，包含为此反射对象定义的符合 <see langword="bindingAttr" /> 中指定的搜索约束的所有方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-549">An array of <see cref="T:System.Reflection.MethodInfo" /> objects containing all the methods defined for this reflection object that meet the search constraints specified in <see langword="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-550">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-550">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-551">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:System.Reflection.IReflect> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-551">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperties">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] System.Reflection.IReflect.GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo() Implements IReflect.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ System.Reflection.IReflect.GetProperties(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="6b401-552">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-552">The binding attribute used to control the search.</span></span></param>
        <summary><span data-ttu-id="6b401-553">获取 <see cref="T:System.Reflection.PropertyInfo" /> 对象数组，这些对象对应于所有公共属性或当前类的所有属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-553">Gets an array of <see cref="T:System.Reflection.PropertyInfo" /> objects corresponding to all public properties or to all properties of the current class.</span></span> <span data-ttu-id="6b401-554">有关此成员的说明，请参见 <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-554">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="6b401-555">在反射对象上定义的所有属性的 <see cref="T:System.Reflection.PropertyInfo" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="6b401-555">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects for all the properties defined on the reflection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-556">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-556">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-557">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:System.Reflection.IReflect> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-557">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo Implements IReflect.GetProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6b401-558">要查找的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="6b401-558">The name of the property to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6b401-559">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-559">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="6b401-560">在指定的搜索约束下获取与指定属性对应的 <see cref="T:System.Reflection.PropertyInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-560">Gets a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property under specified search constraints.</span></span> <span data-ttu-id="6b401-561">有关此成员的说明，请参见 <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-561">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="6b401-562">找到的与 <paramref name="bindingAttr" /> 中指定的搜索约束相符的属性的 <see cref="T:System.Reflection.PropertyInfo" /> 对象；如果没有找到此属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-562">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property that meets the search constraints specified in <paramref name="bindingAttr" />, or <see langword="null" /> if the property was not located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-563">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-563">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-564">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:System.Reflection.IReflect> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-564">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="6b401-565">该对象实现同名的多个方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-565">The object implements multiple methods with the same name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6b401-566">要查找的成员的名称。</span><span class="sxs-lookup"><span data-stu-id="6b401-566">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6b401-567">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-567">The binding attributes used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="6b401-568">实现 Binder 的对象，它包含与此方法相关的属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-568">An object that implements Binder, containing properties related to this method.</span></span></param>
        <param name="returnType"><span data-ttu-id="6b401-569">用于从重载方法中进行选择的数组。</span><span class="sxs-lookup"><span data-stu-id="6b401-569">An array used to choose among overloaded methods.</span></span></param>
        <param name="types"><span data-ttu-id="6b401-570">参数修饰符的数组，用于使绑定可与在其中修改了类型的参数签名一起使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-570">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span></span></param>
        <param name="modifiers"><span data-ttu-id="6b401-571">用于选择参数修饰符的数组。</span><span class="sxs-lookup"><span data-stu-id="6b401-571">An array used to choose the parameter modifiers.</span></span></param>
        <summary><span data-ttu-id="6b401-572">在指定的搜索约束下获取与指定属性对应的 <see cref="T:System.Reflection.PropertyInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-572">Gets a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property with specified search constraints.</span></span> <span data-ttu-id="6b401-573">有关此成员的说明，请参见 <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-573">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />.</span></span></summary>
        <returns><span data-ttu-id="6b401-574">如果在此反射对象中找到了具有指定名称的属性，则为所找到的属性的 <see cref="T:System.Reflection.PropertyInfo" /> 对象；如果没有找到此属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-574">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property, if a property with the specified name was located in this reflection object, or <see langword="null" /> if the property was not located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-575">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-575">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-576">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:System.Reflection.IReflect> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-576">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.InvokeMember">
      <MemberSignature Language="C#" Value="object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Reflection.IReflect.InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Reflection.IReflect.InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters) = System::Reflection::IReflect::InvokeMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6b401-577">要查找的成员的名称。</span><span class="sxs-lookup"><span data-stu-id="6b401-577">The name of the member to find.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="6b401-578"><see cref="T:System.Reflection.BindingFlags" /> 调用特性之一。</span><span class="sxs-lookup"><span data-stu-id="6b401-578">One of the <see cref="T:System.Reflection.BindingFlags" /> invocation attributes.</span></span></param>
        <param name="binder"><span data-ttu-id="6b401-579"><see cref="T:System.Reflection.BindingFlags" /> 位标志之一。</span><span class="sxs-lookup"><span data-stu-id="6b401-579">One of the <see cref="T:System.Reflection.BindingFlags" /> bit flags.</span></span> <span data-ttu-id="6b401-580">实现 Binder，它包含与此方法相关的属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-580">Implements Binder, containing properties related to this method.</span></span></param>
        <param name="target"><span data-ttu-id="6b401-581">对其调用指定成员的对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-581">The object on which to invoke the specified member.</span></span> <span data-ttu-id="6b401-582">对于静态成员，此参数被忽略。</span><span class="sxs-lookup"><span data-stu-id="6b401-582">This parameter is ignored for static members.</span></span></param>
        <param name="args"><span data-ttu-id="6b401-583">包含要调用的成员的参数数目、顺序和类型的对象数组。</span><span class="sxs-lookup"><span data-stu-id="6b401-583">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span></span> <span data-ttu-id="6b401-584">如果没有参数，则这是一个空数组。</span><span class="sxs-lookup"><span data-stu-id="6b401-584">This is an empty array if there are no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="6b401-585">一个 <see cref="T:System.Reflection.ParameterModifier" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="6b401-585">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects.</span></span></param>
        <param name="culture"><span data-ttu-id="6b401-586">用于控制类型强制的 <see cref="T:System.Globalization.CultureInfo" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="6b401-586">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span></param>
        <param name="namedParameters"><span data-ttu-id="6b401-587">参数的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="6b401-587">A String array of parameters.</span></span></param>
        <summary><span data-ttu-id="6b401-588">调用指定的成员。</span><span class="sxs-lookup"><span data-stu-id="6b401-588">Invokes a specified member.</span></span> <span data-ttu-id="6b401-589">有关此成员的说明，请参见 <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-589">For a description of this member, see <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span></summary>
        <returns><span data-ttu-id="6b401-590">指定的成员。</span><span class="sxs-lookup"><span data-stu-id="6b401-590">The specified member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-591">`invokeAttr` 参数可以是构造函数、方法、属性或字段。</span><span class="sxs-lookup"><span data-stu-id="6b401-591">The `invokeAttr` parameter may be a constructor, method, property, or field.</span></span> <span data-ttu-id="6b401-592">必须指定合适的调用属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-592">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="6b401-593">通过将空字符串 ("") 作为成员的名称传递来调用类的默认成员。</span><span class="sxs-lookup"><span data-stu-id="6b401-593">Invoke the default member of a class by passing the empty string ("") as the name of the member.</span></span>  
  
 <span data-ttu-id="6b401-594">`modifiers`参数具有相同的长度`args`参数，表示被调用的成员的元数据中的参数属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-594">The `modifiers` parameter has the same length as the `args` parameter, representing the invoked member's argument attributes in the metadata.</span></span> <span data-ttu-id="6b401-595">参数可以具有以下属性： pdIn，pdOut，pdRetval，pdOptional，和 pdHasDefault。</span><span class="sxs-lookup"><span data-stu-id="6b401-595">A parameter can have the following attributes: pdIn, pdOut, pdRetval, pdOptional, and pdHasDefault.</span></span> <span data-ttu-id="6b401-596">这些属性分别表示 [In]、[Out]、[retval]、[optional] 和默认参数。</span><span class="sxs-lookup"><span data-stu-id="6b401-596">These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</span></span>  
  
 <span data-ttu-id="6b401-597">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-597">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-598">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:System.Reflection.IReflect> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-598">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6b401-599"><paramref name="invokeAttr" /> 是 <see cref="F:System.Reflection.BindingFlags.CreateInstance" /> 并且还设置了另一个位标志。</span><span class="sxs-lookup"><span data-stu-id="6b401-599"><paramref name="invokeAttr" /> is <see cref="F:System.Reflection.BindingFlags.CreateInstance" /> and another bit flag is also set.</span></span>

<span data-ttu-id="6b401-600">-或- <paramref name="invokeAttr" /> 不是 <see cref="F:System.Reflection.BindingFlags.CreateInstance" />，且 name 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-600">-or- <paramref name="invokeAttr" /> is not <see cref="F:System.Reflection.BindingFlags.CreateInstance" /> and name is <see langword="null" />.</span></span>

<span data-ttu-id="6b401-601">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6b401-601">-or-</span></span>

<span data-ttu-id="6b401-602"><paramref name="invokeAttr" /> 不是来自 <see cref="T:System.Reflection.BindingFlags" /> 的调用属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-602"><paramref name="invokeAttr" /> is not an invocation attribute from <see cref="T:System.Reflection.BindingFlags" />.</span></span>

<span data-ttu-id="6b401-603">或</span><span class="sxs-lookup"><span data-stu-id="6b401-603">-or-</span></span>

<span data-ttu-id="6b401-604"><paramref name="invokeAttr" /> 为属性或字段同时指定 get 和 set。</span><span class="sxs-lookup"><span data-stu-id="6b401-604"><paramref name="invokeAttr" /> specifies both get and set for a property or field.</span></span>

<span data-ttu-id="6b401-605">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6b401-605">-or-</span></span>

<span data-ttu-id="6b401-606"><paramref name="invokeAttr" /> 同时指定字段集和 Invoke 方法。提供 <paramref name="args" /> </span><span class="sxs-lookup"><span data-stu-id="6b401-606"><paramref name="invokeAttr" /> specifies both a field set and an Invoke method.<paramref name="args" /></span></span> <span data-ttu-id="6b401-607">用于字段 get 操作。</span><span class="sxs-lookup"><span data-stu-id="6b401-607">is provided for a field get operation.</span></span>

<span data-ttu-id="6b401-608">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6b401-608">-or-</span></span>

<span data-ttu-id="6b401-609">为字段 set 操作指定了多个参数。</span><span class="sxs-lookup"><span data-stu-id="6b401-609">More than one argument is specified for a field set operation.</span></span></exception>
        <exception cref="T:System.MissingFieldException"><span data-ttu-id="6b401-610">找不到此字段或属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-610">The field or property cannot be found.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6b401-611">找不到此方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-611">The method cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="6b401-612">在没有所需 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 的情况下调用私有成员。</span><span class="sxs-lookup"><span data-stu-id="6b401-612">A private member is invoked without the necessary <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.UnderlyingSystemType">
      <MemberSignature Language="C#" Value="Type System.Reflection.IReflect.UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UnderlyingSystemType As Type Implements IReflect.UnderlyingSystemType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Reflection::IReflect::UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-613">获取表示 <see cref="T:System.Reflection.IReflect" /> 对象的基础类型。</span><span class="sxs-lookup"><span data-stu-id="6b401-613">Gets the underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span></span> <span data-ttu-id="6b401-614">有关此成员的说明，请参见 <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-614">For a description of this member, see <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />.</span></span></summary>
        <value><span data-ttu-id="6b401-615">表示 <see cref="T:System.Reflection.IReflect" /> 对象的基础类型。</span><span class="sxs-lookup"><span data-stu-id="6b401-615">The underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-616">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6b401-616">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6b401-617">它只能在 <xref:System.Windows.Forms.AccessibleObject> 实例强制转换为 <xref:System.Reflection.IReflect> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6b401-617">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UseStdAccessibleObjects">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6b401-618">将对象与 <see cref="T:System.Windows.Forms.AccessibleObject" /> 的一个实例关联起来。</span><span class="sxs-lookup"><span data-stu-id="6b401-618">Associates an object with an instance of an <see cref="T:System.Windows.Forms.AccessibleObject" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b401-619"><see cref="T:System.IntPtr" />，它包含对象的句柄。</span><span class="sxs-lookup"><span data-stu-id="6b401-619">An <see cref="T:System.IntPtr" /> that contains the handle of the object.</span></span></param>
        <summary><span data-ttu-id="6b401-620">根据对象的句柄，将一个对象与 <see cref="T:System.Windows.Forms.AccessibleObject" /> 的一个实例关联起来。</span><span class="sxs-lookup"><span data-stu-id="6b401-620">Associates an object with an instance of an <see cref="T:System.Windows.Forms.AccessibleObject" /> based on the handle of the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-621">服务器应用程序可以调用此函数，在其中包含类似于一个系统提供的对象的自定义用户界面对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-621">Server applications can call this function when they contain a custom UI object that is similar to a system-provided object.</span></span> <span data-ttu-id="6b401-622">服务器应用程序调用`CreateStdAccessibleObject`并重写<xref:Accessibility.IAccessible>方法和属性，以匹配其自定义对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-622">Server applications call `CreateStdAccessibleObject` and override the <xref:Accessibility.IAccessible> methods and properties as needed to match their custom object.</span></span> <span data-ttu-id="6b401-623">该方法节约 server 开发人员的完全实现所有工作<xref:Accessibility.IAccessible>属性和方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-623">This approach saves server developers the work of fully implementing all the <xref:Accessibility.IAccessible> properties and methods.</span></span> <span data-ttu-id="6b401-624">此函数是类似于`CreateStdAccessibleProxy`，只不过`CreateStdAccessibleProxy`可用于指定类名称作为参数，而`CreateStdAccessibleObject`使用与关联的类名称`hwnd`。</span><span class="sxs-lookup"><span data-stu-id="6b401-624">This function is similar to `CreateStdAccessibleProxy`, except that `CreateStdAccessibleProxy` enables you to specify the class name as a parameter, whereas `CreateStdAccessibleObject` uses the class name associated with the `hwnd`.</span></span>  
  
 <span data-ttu-id="6b401-625">调用此版本的`UseStdAccessible`调用 objid 客户端使用的两个参数版本相同。</span><span class="sxs-lookup"><span data-stu-id="6b401-625">Calling this version of the `UseStdAccessible` is the same as calling the two parameter version with an objid of CLIENT.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle, int objid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle, int32 objid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr, objid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle, int objid);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint * int -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects (handle, objid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="objid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b401-626"><see cref="T:System.IntPtr" />，它包含对象的句柄。</span><span class="sxs-lookup"><span data-stu-id="6b401-626">An <see cref="T:System.IntPtr" /> that contains the handle of the object.</span></span></param>
        <param name="objid"><span data-ttu-id="6b401-627">一个整数，它定义 <paramref name="handle" /> 参数引用的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="6b401-627">An Int that defines the type of object that the <paramref name="handle" /> parameter refers to.</span></span></param>
        <summary><span data-ttu-id="6b401-628">根据对象的句柄和对象 ID，将一个对象与 <see cref="T:System.Windows.Forms.AccessibleObject" /> 的一个实例关联起来。</span><span class="sxs-lookup"><span data-stu-id="6b401-628">Associates an object with an instance of an <see cref="T:System.Windows.Forms.AccessibleObject" /> based on the handle and the object id of the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-629">使用的方法和属性系统提供的用户界面元素的指定类型创建可访问对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-629">Creates an accessible object with the methods and properties for the specified type of system-provided user interface element.</span></span>  
  
 <span data-ttu-id="6b401-630">服务器应用程序可以调用此函数，在其中包含类似于一个系统提供的对象的自定义用户界面对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-630">Server applications can call this function when they contain a custom UI object that is similar to a system-provided object.</span></span> <span data-ttu-id="6b401-631">服务器应用程序调用`CreateStdAccessibleObject`并重写<xref:Accessibility.IAccessible>方法和属性，以匹配其自定义对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-631">Server applications call `CreateStdAccessibleObject` and override the <xref:Accessibility.IAccessible> methods and properties as needed to match their custom object.</span></span> <span data-ttu-id="6b401-632">该方法节约 server 开发人员的完全实现所有工作<xref:Accessibility.IAccessible>属性和方法。</span><span class="sxs-lookup"><span data-stu-id="6b401-632">This approach saves server developers the work of fully implementing all the <xref:Accessibility.IAccessible> properties and methods.</span></span>  
  
 <span data-ttu-id="6b401-633">有效`objid`值。</span><span class="sxs-lookup"><span data-stu-id="6b401-633">Valid `objid` values.</span></span>  
  
|<span data-ttu-id="6b401-634">对象</span><span class="sxs-lookup"><span data-stu-id="6b401-634">Object</span></span>|<span data-ttu-id="6b401-635">值</span><span class="sxs-lookup"><span data-stu-id="6b401-635">Value</span></span>|<span data-ttu-id="6b401-636">描述</span><span class="sxs-lookup"><span data-stu-id="6b401-636">Description</span></span>|  
|------------|-----------|-----------------|  
|<span data-ttu-id="6b401-637">发出警报</span><span class="sxs-lookup"><span data-stu-id="6b401-637">ALERT</span></span>|<span data-ttu-id="6b401-638">0xFFFFFFF6</span><span class="sxs-lookup"><span data-stu-id="6b401-638">0xFFFFFFF6</span></span>|<span data-ttu-id="6b401-639">是指与窗口或应用程序关联的消息。</span><span class="sxs-lookup"><span data-stu-id="6b401-639">Refers to a message associated with a window or application.</span></span>|  
|<span data-ttu-id="6b401-640">插入符号</span><span class="sxs-lookup"><span data-stu-id="6b401-640">CARET</span></span>|<span data-ttu-id="6b401-641">0xFFFFFFF8</span><span class="sxs-lookup"><span data-stu-id="6b401-641">0xFFFFFFF8</span></span>|<span data-ttu-id="6b401-642">指的是文本插入栏 （脱字号），在窗口中。</span><span class="sxs-lookup"><span data-stu-id="6b401-642">Refers to the text insertion bar (caret) in the window.</span></span>|  
|<span data-ttu-id="6b401-643">客户端</span><span class="sxs-lookup"><span data-stu-id="6b401-643">CLIENT</span></span>|<span data-ttu-id="6b401-644">0xFFFFFFFC</span><span class="sxs-lookup"><span data-stu-id="6b401-644">0xFFFFFFFC</span></span>|<span data-ttu-id="6b401-645">表示窗口的工作区。</span><span class="sxs-lookup"><span data-stu-id="6b401-645">Refers to the window's client area.</span></span> <span data-ttu-id="6b401-646">在大多数情况下，由操作系统控制框架元素，并在客户端对象包含应用程序控制的所有元素。</span><span class="sxs-lookup"><span data-stu-id="6b401-646">In most cases, the operating system controls the frame elements, and the client object contains all elements that the application controls.</span></span>|  
|<span data-ttu-id="6b401-647">游标</span><span class="sxs-lookup"><span data-stu-id="6b401-647">CURSOR</span></span>|<span data-ttu-id="6b401-648">0xFFFFFFF7</span><span class="sxs-lookup"><span data-stu-id="6b401-648">0xFFFFFFF7</span></span>|<span data-ttu-id="6b401-649">表示鼠标指针。</span><span class="sxs-lookup"><span data-stu-id="6b401-649">Refers to the mouse pointer.</span></span> <span data-ttu-id="6b401-650">在系统中没有只有一个鼠标指针，它不是窗口的子级。</span><span class="sxs-lookup"><span data-stu-id="6b401-650">There is only one mouse pointer in the system and it is not a child of a window.</span></span>|  
|<span data-ttu-id="6b401-651">HSCROLL</span><span class="sxs-lookup"><span data-stu-id="6b401-651">HSCROLL</span></span>|<span data-ttu-id="6b401-652">0xFFFFFFFA</span><span class="sxs-lookup"><span data-stu-id="6b401-652">0xFFFFFFFA</span></span>|<span data-ttu-id="6b401-653">是指窗口的水平滚动条。</span><span class="sxs-lookup"><span data-stu-id="6b401-653">Refers to the window's horizontal scroll bar.</span></span>|  
|<span data-ttu-id="6b401-654">MENU</span><span class="sxs-lookup"><span data-stu-id="6b401-654">MENU</span></span>|<span data-ttu-id="6b401-655">0xFFFFFFFD</span><span class="sxs-lookup"><span data-stu-id="6b401-655">0xFFFFFFFD</span></span>|<span data-ttu-id="6b401-656">是指窗口的菜单栏。</span><span class="sxs-lookup"><span data-stu-id="6b401-656">Refers to the window's menu bar.</span></span>|  
|<span data-ttu-id="6b401-657">SIZEGRIP</span><span class="sxs-lookup"><span data-stu-id="6b401-657">SIZEGRIP</span></span>|<span data-ttu-id="6b401-658">0xFFFFFFF9</span><span class="sxs-lookup"><span data-stu-id="6b401-658">0xFFFFFFF9</span></span>|<span data-ttu-id="6b401-659">是指窗口的大小手柄，位于窗口框架的右下角的可选框架组件。</span><span class="sxs-lookup"><span data-stu-id="6b401-659">Refers to the window's size grip, an optional frame component located at the lower right corner of the window frame.</span></span>|  
|<span data-ttu-id="6b401-660">声音</span><span class="sxs-lookup"><span data-stu-id="6b401-660">SOUND</span></span>|<span data-ttu-id="6b401-661">0xFFFFFFF5</span><span class="sxs-lookup"><span data-stu-id="6b401-661">0xFFFFFFF5</span></span>|<span data-ttu-id="6b401-662">是指 sound 对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-662">Refers to a sound object.</span></span> <span data-ttu-id="6b401-663">声音对象没有所需的屏幕位置或子级，但具有名称和状态属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-663">Sound objects do not have screen locations or children, but do have name and state attributes.</span></span> <span data-ttu-id="6b401-664">它们是应用程序播放声音的子级。</span><span class="sxs-lookup"><span data-stu-id="6b401-664">They are children of the application playing the sound.</span></span>|  
|<span data-ttu-id="6b401-665">SYSMENU</span><span class="sxs-lookup"><span data-stu-id="6b401-665">SYSMENU</span></span>|<span data-ttu-id="6b401-666">0xFFFFFFFF</span><span class="sxs-lookup"><span data-stu-id="6b401-666">0xFFFFFFFF</span></span>|<span data-ttu-id="6b401-667">是指窗口的系统菜单。</span><span class="sxs-lookup"><span data-stu-id="6b401-667">Refers to the window's system menu.</span></span>|  
|<span data-ttu-id="6b401-668">标题栏</span><span class="sxs-lookup"><span data-stu-id="6b401-668">TITLEBAR</span></span>|<span data-ttu-id="6b401-669">0xFFFFFFFE</span><span class="sxs-lookup"><span data-stu-id="6b401-669">0xFFFFFFFE</span></span>|<span data-ttu-id="6b401-670">是指窗口的标题栏。</span><span class="sxs-lookup"><span data-stu-id="6b401-670">Refers to the window's title bar.</span></span>|  
|<span data-ttu-id="6b401-671">VSCROLL</span><span class="sxs-lookup"><span data-stu-id="6b401-671">VSCROLL</span></span>|<span data-ttu-id="6b401-672">0xFFFFFFFB</span><span class="sxs-lookup"><span data-stu-id="6b401-672">0xFFFFFFFB</span></span>|<span data-ttu-id="6b401-673">是指窗口的垂直滚动条。</span><span class="sxs-lookup"><span data-stu-id="6b401-673">Refers to the window's vertical scroll bar.</span></span>|  
|<span data-ttu-id="6b401-674">窗口</span><span class="sxs-lookup"><span data-stu-id="6b401-674">WINDOW</span></span>|<span data-ttu-id="6b401-675">0x00000000</span><span class="sxs-lookup"><span data-stu-id="6b401-675">0x00000000</span></span>|<span data-ttu-id="6b401-676">引用窗口本身，而不是子对象。</span><span class="sxs-lookup"><span data-stu-id="6b401-676">Refers to the window itself rather than to a child object.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b401-677">获取或设置辅助性对象的值。</span><span class="sxs-lookup"><span data-stu-id="6b401-677">Gets or sets the value of an accessible object.</span></span></summary>
        <value><span data-ttu-id="6b401-678">可访问对象的值，或如果该对象未设值，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b401-678">The value of an accessible object, or <see langword="null" /> if the object has no value set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b401-679">通常情况下，<xref:System.Windows.Forms.AccessibleObject.Value%2A>属性表示该对象包含的可视信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-679">Typically, the <xref:System.Windows.Forms.AccessibleObject.Value%2A> property represents visual information contained by the object.</span></span> <span data-ttu-id="6b401-680">并非所有对象都支持<xref:System.Windows.Forms.AccessibleObject.Value%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6b401-680">Not all objects support the <xref:System.Windows.Forms.AccessibleObject.Value%2A> property.</span></span>  
  
 <span data-ttu-id="6b401-681">在大多数情况下，<xref:System.Windows.Forms.AccessibleObject.Value%2A>使用属性需要了解的可视信息对象包含有关客户端。</span><span class="sxs-lookup"><span data-stu-id="6b401-681">In most cases, the <xref:System.Windows.Forms.AccessibleObject.Value%2A> property is used to tell the client about what visual information an object contains.</span></span> <span data-ttu-id="6b401-682">例如，一个编辑控件的值是它所包含的文本，但菜单项包含任何值。</span><span class="sxs-lookup"><span data-stu-id="6b401-682">For example, the value for an edit control is the text it contains, but a menu item has no value.</span></span>  
  
 <span data-ttu-id="6b401-683"><xref:System.Windows.Forms.AccessibleObject.Value%2A>属性可以提供在如树视图控件的情况下层次结构信息。</span><span class="sxs-lookup"><span data-stu-id="6b401-683">The <xref:System.Windows.Forms.AccessibleObject.Value%2A> property can provide hierarchical information in cases such as a tree view control.</span></span> <span data-ttu-id="6b401-684">尽管在树视图控件中的父对象不提供中的信息<xref:System.Windows.Forms.AccessibleObject.Value%2A>属性，该控件中的每个项目具有一个从零开始的值，表示在层次结构中的其级别。</span><span class="sxs-lookup"><span data-stu-id="6b401-684">Although the parent object in the tree view control does not provide information in the <xref:System.Windows.Forms.AccessibleObject.Value%2A> property, each item within the control has a zero-based value that represents its level within the hierarchy.</span></span> <span data-ttu-id="6b401-685">顶级项的值为零，第二个级别的项具有值 1，等等。</span><span class="sxs-lookup"><span data-stu-id="6b401-685">Top-level items have a value of zero, second-level items have a value of one, and so on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b401-686">返回的值从滚动条和 trackbar 可访问对象表示的是百分比，因此它们是介于 0 和 100 (含) 之间的整数。</span><span class="sxs-lookup"><span data-stu-id="6b401-686">The values returned from scroll bar and trackbar accessible objects indicate percentages, so they are integers between 0 and 100, inclusive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6b401-687">无法设置或检索值。</span><span class="sxs-lookup"><span data-stu-id="6b401-687">The value cannot be set or retrieved.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
      </Docs>
    </Member>
  </Members>
</Type>