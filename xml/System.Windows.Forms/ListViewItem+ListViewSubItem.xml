<Type Name="ListViewItem+ListViewSubItem" FullName="System.Windows.Forms.ListViewItem+ListViewSubItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f93907e07011912aeab4c7ac6d61e325d43e8712" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30649151" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewItem.ListViewSubItem" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi serializable beforefieldinit ListViewItem/ListViewSubItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewItem.ListViewSubItem" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListViewItem::ListViewSubItem" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ListViewSubItemConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.ListViewItem" /> 的子项。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.ListView>控件显示的项定义的列表<xref:System.Windows.Forms.ListViewItem>类。 每个<xref:System.Windows.Forms.ListViewItem>可以子项对象定义的存储<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>类。 显示子项时<xref:System.Windows.Forms.ListView.View%2A>属性<xref:System.Windows.Forms.ListView>控件设置为<xref:System.Windows.Forms.View.Details>。 通常，子项包含与其父项相关的信息。 例如，如果<xref:System.Windows.Forms.ListView>控件显示这些项表示订单，所以每个项可以显示订单号。 子项无法添加到每个项可显示如订购的产品信息、 订购，项的数量和订购的商品的总价格。 与不同<xref:System.Windows.Forms.ListViewItem>对象，<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>直接的用户无法编辑对象 (用户可以编辑<xref:System.Windows.Forms.ListViewItem>对象如果<xref:System.Windows.Forms.ListView.LabelEdit%2A>属性<xref:System.Windows.Forms.ListView>控件设置为`true`)。  
  
 由于子项不能直接编辑用户，并且不会显示图像，属性仅限于那些影响子项文本的样式，以显示时<xref:System.Windows.Forms.ListView>控件。 如果<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>属性<xref:System.Windows.Forms.ListView>包含子项设置为`false`，你可以使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A>， <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A>，和<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A>属性来更改应用于文本显示的样式。 通常情况下，项及其子项的样式都在相同的<xref:System.Windows.Forms.ListView>控件，但如果你想要更改的特定样式<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>以突出显示它，你可以在你想要以不同方式显示的项上使用这些属性。  
  
   
  
## Examples  
 下面的代码示例创建<xref:System.Windows.Forms.ListView>有三个控件<xref:System.Windows.Forms.ListViewItem>指定的对象和三个<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>为每个项指定的对象。 此示例还创建<xref:System.Windows.Forms.ColumnHeader>对象详细信息视图中显示子项。 两个<xref:System.Windows.Forms.ImageList>还在代码示例中提供的映像中创建对象<xref:System.Windows.Forms.ListViewItem>对象。 这些<xref:System.Windows.Forms.ImageList>对象添加到<xref:System.Windows.Forms.ListView.LargeImageList%2A>和<xref:System.Windows.Forms.ListView.SmallImageList%2A>属性。 该示例使用以下属性创建<xref:System.Windows.Forms.ListView>控件。  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 你需要将代码添加到<xref:System.Windows.Forms.Form>和调用中的示例构造函数或窗体上的另一种方法创建的方法。 该示例需要映像名为`MySmallImage1`， `MySmallImage2`， `MyLargeImage1`，和`MyLargeImage2`位于根目录下的驱动器 c。  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewSubItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewSubItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用默认值初始化 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewSubItem (System.Windows.Forms.ListViewItem owner, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem owner, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItem.#ctor(System.Windows.Forms.ListViewItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListViewItem, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewSubItem(System::Windows::Forms::ListViewItem ^ owner, System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListViewItem" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">
          <see cref="T:System.Windows.Forms.ListViewItem" />，表示拥有该子项的项。</param>
        <param name="text">要为该子项显示的文本。</param>
        <summary>用指定的所有者和文本初始化 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewSubItem (System.Windows.Forms.ListViewItem owner, string text, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem owner, string text, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItem.#ctor(System.Windows.Forms.ListViewItem,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewSubItem(System::Windows::Forms::ListViewItem ^ owner, System::String ^ text, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListViewItem" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="owner">
          <see cref="T:System.Windows.Forms.ListViewItem" />，表示拥有该子项的项。</param>
        <param name="text">要为该子项显示的文本。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，表示该子项的前景色。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，表示该子项的背景色。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，表示用于显示该子项文本的字体。</param>
        <summary>用指定的所有者、文本、前景色、背景色和字体值初始化 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置该子项文本的背景色。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示该子项文本的背景色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A>属性可以更改显示子项文本的背景的颜色。 可以使用此属性，如果你想要使用不同的背景和前景颜色组合 (使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A>要设置的前景色属性) 来区分从另一个子项。 例如，你可以设置<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A>属性<xref:System.Drawing.Color.Red%2A>来标识显示负值的子项。  
  
 如果<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>属性<xref:System.Windows.Forms.ListViewItem>拥有子项设置为`true`，设置此属性不起作用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的边框。</summary>
        <value>
          <see cref="T:System.Drawing.Rectangle" /> 的边框 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>尚未添加到<xref:System.Windows.Forms.ListViewItem>或拥有<xref:System.Windows.Forms.ListViewItem>尚未添加到<xref:System.Windows.Forms.ListView>、<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Bounds%2A>属性返回一个空<xref:System.Drawing.Rectangle>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置子项显示的文本的字体。</summary>
        <value>要应用于由控件显示的文本的 <see cref="T:System.Drawing.Font" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可用于更改应用于子项的文本的字体样式。 如果<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>属性<xref:System.Windows.Forms.ListViewItem>设置为`true`，更改此属性将产生任何影响。 因为<xref:System.Drawing.Font>不可变 （这意味着你无法调整其任何属性），您可以只分配<xref:System.Windows.Forms.Control.Font%2A>属性指定新<xref:System.Drawing.Font>。 但是，您可以基于新的字体基于现有的字体。  
  
 下面是如何调整现有字体以使其成为粗体的示例：  
  
```csharp  
listViewItem1.SubItems[1].Font = new Font(listViewItem1.SubItems[1].Font,   
       listViewItem1.SubItems[1].Font.Style | FontStyle.Bold);  
```  
  
```vb  
ListViewItem1.SubItems[1].Font = New Font(ListViewItem1.SubItems[1].Font, _   
       ListViewItem1.SubItems[1].Font.Style Or FontStyle.Bold)  
```  
  
 如果<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>属性<xref:System.Windows.Forms.ListViewItem>拥有子项设置为`true`，设置此属性不起作用。  
  
   
  
## Examples  
 下面的代码示例演示如何设置<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>属性`false`定义的自定义样式<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>对象。 该示例演示如何设置<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A>和<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A>属性。 若要运行该示例，请将以下代码粘贴到窗体，并调用`InitializeListView`窗体的构造函数中的方法或<xref:System.Windows.Forms.Form.Load>事件处理方法。  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置该子项文本的前景色。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示该子项文本的前景色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A>属性可以更改子项文本的颜色。 可以使用此属性，如果你想要使用不同的背景和前景颜色组合 (使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A>属性设置的背景色) 来区分从另一个项。 例如，你可以设置<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A>属性<xref:System.Drawing.Color.Red%2A>来标识必须与它们关联添加负号的项。  
  
 如果<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>属性<xref:System.Windows.Forms.ListViewItem>拥有子项设置为`true`，设置此属性不起作用。  
  
   
  
## Examples  
 下面的代码示例演示如何设置<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>属性`false`定义的自定义样式<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>对象。 该示例演示如何设置<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A>和<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A>属性。 若要运行该示例，请将以下代码粘贴到窗体，并调用`InitializeListView`窗体的构造函数中的方法或<xref:System.Windows.Forms.Form.Load>事件处理方法。  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的名称。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的名称，如果尚未设置名称，则为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A>属性对应的密钥<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>中<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetStyle">
      <MemberSignature Language="C#" Value="public void ResetStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItem.ResetStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将应用于子项的样式重置为默认字体和颜色。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可用于重置的字体、 背景色和前景色设置应用于子项。 当样式将重置时，子项将显示使用默认字体、 背景色和前景色设置。  
  
   
  
## Examples  
 下面的代码示例演示如何重置的子项的样式<xref:System.Windows.Forms.ListViewItem>使用<xref:System.Windows.Forms.ListView.TopItem%2A?displayProperty=nameWithType>属性和<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ResetStyle%2A>方法。 若要运行该示例，请将以下代码粘贴到包含名为的按钮的窗体`Button1`，并调用`InitializeListView`窗体的构造函数中的方法或<xref:System.Windows.Forms.Form.Load>事件处理方法。  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含有关 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的数据的对象。</summary>
        <value>一个 <see cref="T:System.Object" />，包含有关 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的数据。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Tag%2A>属性可用于存储有关的附加信息<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置子项的文本。</summary>
        <value>要为该子项显示的文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Text%2A>属性允许您确定为子项显示的文本。 你可以使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A>， <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A>，和<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A>属性以指定如何显示的文本。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListViewItem.Text" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Font" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回表示当前对象的字符串。</summary>
        <returns>表示当前对象的字符串。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>