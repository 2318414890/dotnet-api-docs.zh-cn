<Type Name="ControlStyles" FullName="System.Windows.Forms.ControlStyles">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc33f394b9675cc633b116b6039a1f3d0d639c2f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ControlStyles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ControlStyles extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlStyles" />
  <TypeSignature Language="VB.NET" Value="Public Enum ControlStyles" />
  <TypeSignature Language="C++ CLI" Value="public enum class ControlStyles" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="55738-101">指定控件的样式和行为。</span>
      <span class="sxs-lookup">
        <span data-stu-id="55738-101">Specifies the style and behavior of a control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55738-102">控件使用此枚举中各种属性和方法来指定功能。</span><span class="sxs-lookup"><span data-stu-id="55738-102">Controls use this enumeration in various properties and methods to specify functionality.</span></span> <span data-ttu-id="55738-103">控件可以通过调用来启用一种样式<xref:System.Windows.Forms.Control.SetStyle%2A>方法并传入适当<xref:System.Windows.Forms.ControlStyles>位 （或 bits） 和要设置该位的布尔值。</span><span class="sxs-lookup"><span data-stu-id="55738-103">A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to.</span></span> <span data-ttu-id="55738-104">例如，Visual Basic 代码的以下行将启用双缓冲。</span><span class="sxs-lookup"><span data-stu-id="55738-104">For example, the following line of Visual Basic code would enable double-buffering.</span></span>  
  
```  
myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)  
```  
  
 <span data-ttu-id="55738-105">如果 AllPaintingInWmPaint 位设置为`true`的窗口消息 WM_ERASEBKGND 将被忽略，并且两个<xref:System.Windows.Forms.Control.OnPaintBackground%2A>和<xref:System.Windows.Forms.Control.OnPaint%2A>中的窗口消息 WM_PAINT 直接调用方法。</span><span class="sxs-lookup"><span data-stu-id="55738-105">If the AllPaintingInWmPaint bit is set to `true`, the window message WM_ERASEBKGND is ignored, and both <xref:System.Windows.Forms.Control.OnPaintBackground%2A> and <xref:System.Windows.Forms.Control.OnPaint%2A> methods are called directly from the window message WM_PAINT.</span></span> <span data-ttu-id="55738-106">这通常可以减少闪烁，除非其他控件向控件发送的窗口消息 WM_ERASEBKGND。</span><span class="sxs-lookup"><span data-stu-id="55738-106">This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control.</span></span> <span data-ttu-id="55738-107">你可能会发送窗口消息 WM_ERASEBKGRND 可获得类似于 SupportsTransparentBackColor; 伪透明效果例如，<xref:System.Windows.Forms.ToolBar>具有平面外观如此。</span><span class="sxs-lookup"><span data-stu-id="55738-107">You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <xref:System.Windows.Forms.ToolBar> with flat appearance does this.</span></span>  
  
 <span data-ttu-id="55738-108">若要完全启用双缓冲，可以将 OptimizedDoubleBuffer 和 AllPaintingInWmPaint 位设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="55738-108">To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to `true`.</span></span> <span data-ttu-id="55738-109">但是这将产生相同的结果，启用双缓冲的首选的方法是设置<xref:System.Windows.Forms.Control.DoubleBuffered%2A>属性来控制对`true`。</span><span class="sxs-lookup"><span data-stu-id="55738-109">However the preferred method for enabling double buffering, which yields the same result, is to set the <xref:System.Windows.Forms.Control.DoubleBuffered%2A> property for the control to `true`.</span></span>  
  
 <span data-ttu-id="55738-110">如果 SupportsTransparentBackColor 位设置为`true`，和<xref:System.Windows.Forms.Control.BackColor%2A>设置为一种颜色的 alpha 分量为小于 255，<xref:System.Windows.Forms.Control.OnPaintBackground%2A>将模拟通过要求其父控件来绘制背景的透明度。</span><span class="sxs-lookup"><span data-stu-id="55738-110">If the SupportsTransparentBackColor bit is set to `true`, and the <xref:System.Windows.Forms.Control.BackColor%2A> is set to a color whose alpha component is less than 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> will simulate transparency by asking its parent control to paint the background.</span></span> <span data-ttu-id="55738-111">这不是真正的透明。</span><span class="sxs-lookup"><span data-stu-id="55738-111">This is not true transparency.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55738-112">如果没有在控件和其父级之间的另一个控件，当前控件将不显示在中间的控件。</span><span class="sxs-lookup"><span data-stu-id="55738-112">If there is another control between the control and its parent, the current control will not show the control in the middle.</span></span>  
  
 <span data-ttu-id="55738-113">当 UserMouse 位设置为`true`，仍调用以下方法： <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>， <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>， <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>， <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>， <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>， <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>，和<xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="55738-113">When the UserMouse bit is set to `true`, the following methods are still called: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="55738-114">单击控件时，如果 StandardClick 位设置为`true`<xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType>调用方法，它将引发<xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="55738-114">When the control is clicked, if the StandardClick bit is set to `true` the <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType> method is called and it raises the <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="55738-115">当双击控件，并且 StandardClick 和 StandardDoubleClick 位将设置为`true`，单击将传递给<xref:System.Windows.Forms.Control.DoubleClick>事件。</span><span class="sxs-lookup"><span data-stu-id="55738-115">When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to `true`, the click is passed on to the <xref:System.Windows.Forms.Control.DoubleClick> event.</span></span> <span data-ttu-id="55738-116">则<xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType>调用方法，它将引发<xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="55738-116">Then the <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType> method is called and it raises the <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="55738-117">但是，可以调用控件<xref:System.Windows.Forms.Control.OnClick%2A>或<xref:System.Windows.Forms.Control.OnDoubleClick%2A>直接而不考虑 StandardClick 和 StandardDoubleClick 位的值。</span><span class="sxs-lookup"><span data-stu-id="55738-117">However, the control can call <xref:System.Windows.Forms.Control.OnClick%2A> or <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directly regardless of the StandardClick and StandardDoubleClick bit values.</span></span> <span data-ttu-id="55738-118">有关详细信息控件单击和双击行为，请参阅<xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType>和<xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType>主题。</span><span class="sxs-lookup"><span data-stu-id="55738-118">For more information on control click and double click behaviors, see the <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> topics.</span></span>  
  
 <span data-ttu-id="55738-119">当 UseTextForAccessibility 位将设置和控件中没有值`Text`属性，该控件的值`Text`属性确定控件的默认 Active Accessibility 名称和快捷密钥。</span><span class="sxs-lookup"><span data-stu-id="55738-119">When the UseTextForAccessibility bit is set and there is a value in the control's `Text` property, the value of that control's `Text` property determines the control's default Active Accessibility name and shortcut key.</span></span> <span data-ttu-id="55738-120">否则为在前面的文本<xref:System.Windows.Forms.Label>将改为使用控件。</span><span class="sxs-lookup"><span data-stu-id="55738-120">Otherwise, the text of the preceding <xref:System.Windows.Forms.Label> control will be used instead.</span></span> <span data-ttu-id="55738-121">默认情况下设置了此样式。</span><span class="sxs-lookup"><span data-stu-id="55738-121">This style is set by default.</span></span> <span data-ttu-id="55738-122">某些内置控件类型，如<xref:System.Windows.Forms.TextBox>和<xref:System.Windows.Forms.ComboBox>，重置此样式，以便`Text`Active Accessibility 将不使用这些控件的属性。</span><span class="sxs-lookup"><span data-stu-id="55738-122">Certain built-in control types, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ComboBox>, reset this style so that the `Text` property of those controls will not be used by Active Accessibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55738-123">下面的示例演示使用<xref:System.Windows.Forms.ControlStyles>与<xref:System.Windows.Forms.Control.StyleChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="55738-123">The following example demonstrates a use of <xref:System.Windows.Forms.ControlStyles> with the <xref:System.Windows.Forms.Control.StyleChanged> event.</span></span>  
  
 [!code-cpp[Control_StyleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_StyleChanged/CPP/control_stylechanged.cpp#1)]
 [!code-csharp[Control_StyleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_StyleChanged/CS/control_stylechanged.cs#1)]
 [!code-vb[Control_StyleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_StyleChanged/VB/control_stylechanged.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="55738-124">从标准 Windows 窗体控件继承和更改<see cref="F:System.Windows.Forms.ControlStyles.StandardClick" />或<see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />位的值为<see langword="true" />可能导致意外的行为，或根本会产生任何效果，如果控件不支持<see cref="E:System.Windows.Forms.Control.Click" />或<see cref="E:System.Windows.Forms.Control.DoubleClick" />事件。</span>
        <span class="sxs-lookup">
          <span data-stu-id="55738-124">Inheriting from a standard Windows Forms control and changing the <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> or <see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /> bit values to <see langword="true" /> can cause unexpected behavior or can have no effect at all if the control does not support the <see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" /> events.</span>
        </span>
      </para>
    </block>
    <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
  </Docs>
  <Members>
    <Member MemberName="AllPaintingInWmPaint">
      <MemberSignature Language="C#" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles AllPaintingInWmPaint = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" />
      <MemberSignature Language="VB.NET" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="C++ CLI" Value="AllPaintingInWmPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-125">如果为 <see langword="true" />，则控件忽略窗口消息 WM_ERASEBKGND 以减少闪烁。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-125">If <see langword="true" />, the control ignores the window message WM_ERASEBKGND to reduce flicker.</span>
          </span>
          <span data-ttu-id="55738-126">仅当将 <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> 位设置为 <see langword="true" /> 时，才应用此样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-126">This style should only be applied if the <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit is set to <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CacheText">
      <MemberSignature Language="C#" Value="CacheText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles CacheText = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.CacheText" />
      <MemberSignature Language="VB.NET" Value="CacheText" />
      <MemberSignature Language="C++ CLI" Value="CacheText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-127">如果为 <see langword="true" />，则控件将保留文本的副本，而不是每次必需时从 <see cref="P:System.Windows.Forms.Control.Handle" /> 中获取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-127">If <see langword="true" />, the control keeps a copy of the text rather than getting it from the <see cref="P:System.Windows.Forms.Control.Handle" /> each time it is needed.</span>
          </span>
          <span data-ttu-id="55738-128">此样式默认为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-128">This style defaults to <see langword="false" />.</span>
          </span>
          <span data-ttu-id="55738-129">此行为可提高性能，但很难保持文本同步。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-129">This behavior improves performance, but makes it difficult to keep the text synchronized.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ContainerControl">
      <MemberSignature Language="C#" Value="ContainerControl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ContainerControl = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ContainerControl" />
      <MemberSignature Language="VB.NET" Value="ContainerControl" />
      <MemberSignature Language="C++ CLI" Value="ContainerControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-130">如果为 <see langword="true" />，则控件是类容器控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-130">If <see langword="true" />, the control is a container-like control.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffer">
      <MemberSignature Language="C#" Value="DoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles DoubleBuffer = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.DoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="DoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="DoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-131">如果为 <see langword="true" />，则在缓冲区中进行绘制，并且完成后将结果输出到屏幕。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-131">If <see langword="true" />, drawing is performed in a buffer, and after it completes, the result is output to the screen.</span>
          </span>
          <span data-ttu-id="55738-132">双缓冲可以防止因重绘控件而引起的闪烁。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-132">Double-buffering prevents flicker caused by the redrawing of the control.</span>
          </span>
          <span data-ttu-id="55738-133">如果将 <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> 设置为 <see langword="true" />，则还应将 <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> 和 <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> 设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-133">If you set <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> to <see langword="true" />, you should also set <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> and <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> to <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="EnableNotifyMessage">
      <MemberSignature Language="C#" Value="EnableNotifyMessage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles EnableNotifyMessage = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" />
      <MemberSignature Language="VB.NET" Value="EnableNotifyMessage" />
      <MemberSignature Language="C++ CLI" Value="EnableNotifyMessage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-134">如果为 <see langword="true" />，则将对发送到控件的 <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> 的每个消息调用 <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-134">If <see langword="true" />, the <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> method is called for every message sent to the control's <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</span>
          </span>
          <span data-ttu-id="55738-135">此样式默认为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-135">This style defaults to <see langword="false" />.</span>
          </span>
          <span data-ttu-id="55738-136">
            <see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> 在部分信任中不起作用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-136">
              <see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> does not work in partial trust.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="FixedHeight">
      <MemberSignature Language="C#" Value="FixedHeight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedHeight = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedHeight" />
      <MemberSignature Language="VB.NET" Value="FixedHeight" />
      <MemberSignature Language="C++ CLI" Value="FixedHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-137">如果为 <see langword="true" />，则控件在自动缩放时具有固定高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-137">If <see langword="true" />, the control has a fixed height when auto-scaled.</span>
          </span>
          <span data-ttu-id="55738-138">例如，如果布局操作尝试重新缩放控件以适应新的 <see cref="T:System.Drawing.Font" />，则控件的 <see cref="P:System.Windows.Forms.Control.Height" /> 保持不变。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-138">For example, if a layout operation attempts to rescale the control to accommodate a new <see cref="T:System.Drawing.Font" />, the control's <see cref="P:System.Windows.Forms.Control.Height" /> remains unchanged.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="FixedWidth">
      <MemberSignature Language="C#" Value="FixedWidth" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedWidth = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedWidth" />
      <MemberSignature Language="VB.NET" Value="FixedWidth" />
      <MemberSignature Language="C++ CLI" Value="FixedWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-139">如果为 <see langword="true" />，则控件在自动缩放时具有固定宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-139">If <see langword="true" />, the control has a fixed width when auto-scaled.</span>
          </span>
          <span data-ttu-id="55738-140">例如，如果布局操作尝试重新缩放控件以适应新的 <see cref="T:System.Drawing.Font" />，则控件的 <see cref="P:System.Windows.Forms.Control.Width" /> 保持不变。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-140">For example, if a layout operation attempts to rescale the control to accommodate a new <see cref="T:System.Drawing.Font" />, the control's <see cref="P:System.Windows.Forms.Control.Width" /> remains unchanged.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Opaque">
      <MemberSignature Language="C#" Value="Opaque" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Opaque = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Opaque" />
      <MemberSignature Language="VB.NET" Value="Opaque" />
      <MemberSignature Language="C++ CLI" Value="Opaque" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-141">如果为 <see langword="true" />，则控件会绘制为不透明，且不绘制背景。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-141">If <see langword="true" />, the control is drawn opaque and the background is not painted.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OptimizedDoubleBuffer">
      <MemberSignature Language="C#" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles OptimizedDoubleBuffer = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="OptimizedDoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-142">如果为 <see langword="true" />，则控件将首先绘制到缓冲区而不是直接绘制到屏幕，这可以减少闪烁。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-142">If <see langword="true" />, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker.</span>
          </span>
          <span data-ttu-id="55738-143">如果将此属性设置为 <see langword="true" />，则还应将 <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> 设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-143">If you set this property to <see langword="true" />, you should also set the <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> to <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ResizeRedraw">
      <MemberSignature Language="C#" Value="ResizeRedraw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ResizeRedraw = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ResizeRedraw" />
      <MemberSignature Language="VB.NET" Value="ResizeRedraw" />
      <MemberSignature Language="C++ CLI" Value="ResizeRedraw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-144">如果为 <see langword="true" />，则控件会在调整大小时进行重绘。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-144">If <see langword="true" />, the control is redrawn when it is resized.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="Selectable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Selectable = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Selectable" />
      <MemberSignature Language="VB.NET" Value="Selectable" />
      <MemberSignature Language="C++ CLI" Value="Selectable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-145">如果为 <see langword="true" />，则控件可以接收焦点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-145">If <see langword="true" />, the control can receive focus.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="StandardClick">
      <MemberSignature Language="C#" Value="StandardClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardClick = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardClick" />
      <MemberSignature Language="VB.NET" Value="StandardClick" />
      <MemberSignature Language="C++ CLI" Value="StandardClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-146">如果为 <see langword="true" />，则控件实现标准 <see cref="E:System.Windows.Forms.Control.Click" /> 行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-146">If <see langword="true" />, the control implements the standard <see cref="E:System.Windows.Forms.Control.Click" /> behavior.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="StandardDoubleClick">
      <MemberSignature Language="C#" Value="StandardDoubleClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardDoubleClick = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />
      <MemberSignature Language="VB.NET" Value="StandardDoubleClick" />
      <MemberSignature Language="C++ CLI" Value="StandardDoubleClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-147">如果为 <see langword="true" />，则控件实现标准 <see cref="E:System.Windows.Forms.Control.DoubleClick" /> 行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-147">If <see langword="true" />, the control implements the standard <see cref="E:System.Windows.Forms.Control.DoubleClick" /> behavior.</span>
          </span>
          <span data-ttu-id="55738-148">如果未将 <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> 位设置为 <see langword="true" />，则忽略此样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-148">This style is ignored if the <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> bit is not set to <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsTransparentBackColor">
      <MemberSignature Language="C#" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles SupportsTransparentBackColor = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor" />
      <MemberSignature Language="VB.NET" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="C++ CLI" Value="SupportsTransparentBackColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-149">如果为 <see langword="true" />，则控件接受 alpha 组件数小于 255 个的 <see cref="P:System.Windows.Forms.Control.BackColor" /> 来模拟透明度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-149">If <see langword="true" />, the control accepts a <see cref="P:System.Windows.Forms.Control.BackColor" /> with an alpha component of less than 255 to simulate transparency.</span>
          </span>
          <span data-ttu-id="55738-150">仅当将 <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> 位设置为 <see langword="true" /> 且父控件从 <see cref="T:System.Windows.Forms.Control" /> 派生时，才会模拟透明度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-150">Transparency will be simulated only if the <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit is set to <see langword="true" /> and the parent control is derived from <see cref="T:System.Windows.Forms.Control" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UserMouse">
      <MemberSignature Language="C#" Value="UserMouse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserMouse = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserMouse" />
      <MemberSignature Language="VB.NET" Value="UserMouse" />
      <MemberSignature Language="C++ CLI" Value="UserMouse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-151">如果为 <see langword="true" />，则将由控件而不是操作系统处理其自身的鼠标事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-151">If <see langword="true" />, the control does its own mouse processing, and mouse events are not handled by the operating system.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UserPaint">
      <MemberSignature Language="C#" Value="UserPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserPaint = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserPaint" />
      <MemberSignature Language="VB.NET" Value="UserPaint" />
      <MemberSignature Language="C++ CLI" Value="UserPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-152">如果为 <see langword="true" />，则会由控件而不是由操作系统来绘制控件自身。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-152">If <see langword="true" />, the control paints itself rather than the operating system doing so.</span>
          </span>
          <span data-ttu-id="55738-153">如果 <see langword="false" />，则不会引发 <see cref="E:System.Windows.Forms.Control.Paint" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-153">If <see langword="false" />, the <see cref="E:System.Windows.Forms.Control.Paint" /> event is not raised.</span>
          </span>
          <span data-ttu-id="55738-154">此样式仅适用于从 <see cref="T:System.Windows.Forms.Control" /> 派生的类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-154">This style only applies to classes derived from <see cref="T:System.Windows.Forms.Control" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UseTextForAccessibility">
      <MemberSignature Language="C#" Value="UseTextForAccessibility" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UseTextForAccessibility = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility" />
      <MemberSignature Language="VB.NET" Value="UseTextForAccessibility" />
      <MemberSignature Language="C++ CLI" Value="UseTextForAccessibility" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55738-155">指定控件的 <c>Text</c> 属性的值，若设置，则确定控件的默认 Active Accessibility 名称和快捷键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55738-155">Specifies that the value of the control's <c>Text</c> property, if set, determines the control's default Active Accessibility name and shortcut key.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>