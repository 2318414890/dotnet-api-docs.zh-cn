<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ControlStyles.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cc33f394b9675cc633b116b6039a1f3d0d639c2f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc33f394b9675cc633b116b6039a1f3d0d639c2f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.ControlStyles">
          <source>Specifies the style and behavior of a control.</source>
          <target state="translated">指定控件的样式和行为。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Controls use this enumeration in various properties and methods to specify functionality.</source>
          <target state="translated">控件使用此枚举中各种属性和方法来指定功能。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>A control can enable a style by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method and passing in the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit (or bits) and the Boolean value to set the bit(s) to.</source>
          <target state="translated">控件可以通过调用来启用一种样式<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph>方法并传入适当<ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>位 （或 bits） 和要设置该位的布尔值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>For example, the following line of Visual Basic code would enable double-buffering.</source>
          <target state="translated">例如，Visual Basic 代码的以下行将启用双缓冲。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>If the AllPaintingInWmPaint bit is set to <ph id="ph1">`true`</ph>, the window message WM_ERASEBKGND is ignored, and both <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> methods are called directly from the window message WM_PAINT.</source>
          <target state="translated">如果 AllPaintingInWmPaint 位设置为<ph id="ph1">`true`</ph>的窗口消息 WM_ERASEBKGND 将被忽略，并且两个<ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph>中的窗口消息 WM_PAINT 直接调用方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control.</source>
          <target state="translated">这通常可以减少闪烁，除非其他控件向控件发送的窗口消息 WM_ERASEBKGND。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> with flat appearance does this.</source>
          <target state="translated">你可能会发送窗口消息 WM_ERASEBKGRND 可获得类似于 SupportsTransparentBackColor; 伪透明效果例如，<ph id="ph1">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph>具有平面外观如此。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">若要完全启用双缓冲，可以将 OptimizedDoubleBuffer 和 AllPaintingInWmPaint 位设置为<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>However the preferred method for enabling double buffering, which yields the same result, is to set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> property for the control to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">但是这将产生相同的结果，启用双缓冲的首选的方法是设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph>属性来控制对<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>If the SupportsTransparentBackColor bit is set to <ph id="ph1">`true`</ph>, and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> is set to a color whose alpha component is less than 255, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> will simulate transparency by asking its parent control to paint the background.</source>
          <target state="translated">如果 SupportsTransparentBackColor 位设置为<ph id="ph1">`true`</ph>，和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>设置为一种颜色的 alpha 分量为小于 255，<ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph>将模拟通过要求其父控件来绘制背景的透明度。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>This is not true transparency.</source>
          <target state="translated">这不是真正的透明。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>If there is another control between the control and its parent, the current control will not show the control in the middle.</source>
          <target state="translated">如果没有在控件和其父级之间的另一个控件，当前控件将不显示在中间的控件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the UserMouse bit is set to <ph id="ph1">`true`</ph>, the following methods are still called: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph8">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">当 UserMouse 位设置为<ph id="ph1">`true`</ph>，仍调用以下方法： <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph6">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph7">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType&gt;</ph>，和<ph id="ph8">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the control is clicked, if the StandardClick bit is set to <ph id="ph1">`true`</ph> the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType&gt;</ph> method is called and it raises the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">单击控件时，如果 StandardClick 位设置为<ph id="ph1">`true`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType&gt;</ph>调用方法，它将引发<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to <ph id="ph1">`true`</ph>, the click is passed on to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event.</source>
          <target state="translated">当双击控件，并且 StandardClick 和 StandardDoubleClick 位将设置为<ph id="ph1">`true`</ph>，单击将传递给<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Then the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType&gt;</ph> method is called and it raises the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">则<ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType&gt;</ph>调用方法，它将引发<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>However, the control can call <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph> directly regardless of the StandardClick and StandardDoubleClick bit values.</source>
          <target state="translated">但是，可以调用控件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph>直接而不考虑 StandardClick 和 StandardDoubleClick 位的值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>For more information on control click and double click behaviors, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph> topics.</source>
          <target state="translated">有关详细信息控件单击和双击行为，请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph>主题。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the UseTextForAccessibility bit is set and there is a value in the control's <ph id="ph1">`Text`</ph> property, the value of that control's <ph id="ph2">`Text`</ph> property determines the control's default Active Accessibility name and shortcut key.</source>
          <target state="translated">当 UseTextForAccessibility 位将设置和控件中没有值<ph id="ph1">`Text`</ph>属性，该控件的值<ph id="ph2">`Text`</ph>属性确定控件的默认 Active Accessibility 名称和快捷密钥。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Otherwise, the text of the preceding <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> control will be used instead.</source>
          <target state="translated">否则为在前面的文本<ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>将改为使用控件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>This style is set by default.</source>
          <target state="translated">默认情况下设置了此样式。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Certain built-in control types, such as <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>, reset this style so that the <ph id="ph3">`Text`</ph> property of those controls will not be used by Active Accessibility.</source>
          <target state="translated">某些内置控件类型，如<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>，重置此样式，以便<ph id="ph3">`Text`</ph>Active Accessibility 将不使用这些控件的属性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>The following example demonstrates a use of <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> event.</source>
          <target state="translated">下面的示例演示使用<ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>与<ph id="ph2">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Inheriting from a standard Windows Forms control and changing the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /&gt;</ph> bit values to <ph id="ph3">&lt;see langword="true" /&gt;</ph> can cause unexpected behavior or can have no effect at all if the control does not support the <ph id="ph4">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> events.</source>
          <target state="translated">从标准 Windows 窗体控件继承和更改<ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph>或<ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /&gt;</ph>位的值为<ph id="ph3">&lt;see langword="true" /&gt;</ph>可能导致意外的行为，或根本会产生任何效果，如果控件不支持<ph id="ph4">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph>或<ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control ignores the window message WM_ERASEBKGND to reduce flicker.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则控件忽略窗口消息 WM_ERASEBKGND 以减少闪烁。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint">
          <source>This style should only be applied if the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> bit is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">仅当将 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> 位设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 时，才应用此样式。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.CacheText">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control keeps a copy of the text rather than getting it from the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> each time it is needed.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则控件将保留文本的副本，而不是每次必需时从 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> 中获取。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.CacheText">
          <source>This style defaults to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">此样式默认为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.CacheText">
          <source>This behavior improves performance, but makes it difficult to keep the text synchronized.</source>
          <target state="translated">此行为可提高性能，但很难保持文本同步。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.ContainerControl">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is a container-like control.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则控件是类容器控件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.DoubleBuffer">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, drawing is performed in a buffer, and after it completes, the result is output to the screen.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则在缓冲区中进行绘制，并且完成后将结果输出到屏幕。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.DoubleBuffer">
          <source>Double-buffering prevents flicker caused by the redrawing of the control.</source>
          <target state="translated">双缓冲可以防止因重绘控件而引起的闪烁。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.DoubleBuffer">
          <source>If you set <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /&gt;</ph> to <ph id="ph2">&lt;see langword="true" /&gt;</ph>, you should also set <ph id="ph3">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> and <ph id="ph4">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> to <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果将 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /&gt;</ph> 设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，则还应将 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> 设置为 <ph id="ph5">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> method is called for every message sent to the control's <ph id="ph3">&lt;see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /&gt;</ph>.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则将对发送到控件的 <ph id="ph3">&lt;see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /&gt;</ph> 的每个消息调用 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage">
          <source>This style defaults to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">此样式默认为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage">
          <source><ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /&gt;</ph> does not work in partial trust.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /&gt;</ph> 在部分信任中不起作用。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedHeight">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control has a fixed height when auto-scaled.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则控件在自动缩放时具有固定高度。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedHeight">
          <source>For example, if a layout operation attempts to rescale the control to accommodate a new <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>, the control's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> remains unchanged.</source>
          <target state="translated">例如，如果布局操作尝试重新缩放控件以适应新的 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>，则控件的 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> 保持不变。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedWidth">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control has a fixed width when auto-scaled.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则控件在自动缩放时具有固定宽度。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedWidth">
          <source>For example, if a layout operation attempts to rescale the control to accommodate a new <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>, the control's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> remains unchanged.</source>
          <target state="translated">例如，如果布局操作尝试重新缩放控件以适应新的 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>，则控件的 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> 保持不变。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.Opaque">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is drawn opaque and the background is not painted.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则控件会绘制为不透明，且不绘制背景。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则控件将首先绘制到缓冲区而不是直接绘制到屏幕，这可以减少闪烁。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer">
          <source>If you set this property to <ph id="ph1">&lt;see langword="true" /&gt;</ph>, you should also set the <ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果将此属性设置为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则还应将 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> 设置为 <ph id="ph3">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.ResizeRedraw">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is redrawn when it is resized.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则控件会在调整大小时进行重绘。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.Selectable">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control can receive focus.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则控件可以接收焦点。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.StandardClick">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control implements the standard <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> behavior.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则控件实现标准 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> 行为。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.StandardDoubleClick">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control implements the standard <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> behavior.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则控件实现标准 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> 行为。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.StandardDoubleClick">
          <source>This style is ignored if the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph> bit is not set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果未将 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph> 位设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，则忽略此样式。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control accepts a <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> with an alpha component of less than 255 to simulate transparency.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则控件接受 alpha 组件数小于 255 个的 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> 来模拟透明度。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor">
          <source>Transparency will be simulated only if the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> bit is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the parent control is derived from <ph id="ph3">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</source>
          <target state="translated">仅当将 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> 位设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 且父控件从 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 派生时，才会模拟透明度。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserMouse">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control does its own mouse processing, and mouse events are not handled by the operating system.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则将由控件而不是操作系统处理其自身的鼠标事件。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserPaint">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control paints itself rather than the operating system doing so.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则会由控件而不是由操作系统来绘制控件自身。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserPaint">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event is not raised.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，则不会引发 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserPaint">
          <source>This style only applies to classes derived from <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</source>
          <target state="translated">此样式仅适用于从 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 派生的类。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility">
          <source>Specifies that the value of the control's <bpt id="p1">&lt;c&gt;</bpt>Text<ept id="p1">&lt;/c&gt;</ept> property, if set, determines the control's default Active Accessibility name and shortcut key.</source>
          <target state="translated">指定控件的 <bpt id="p1">&lt;c&gt;</bpt>Text<ept id="p1">&lt;/c&gt;</ept> 属性的值，若设置，则确定控件的默认 Active Accessibility 名称和快捷键。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>