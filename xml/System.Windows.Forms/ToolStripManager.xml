<Type Name="ToolStripManager" FullName="System.Windows.Forms.ToolStripManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4c18020714f0e29f0855f4c28be8b9d66d779209" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51888326" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ToolStripManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ToolStripManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStripManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ToolStripManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolStripManager sealed" />
  <TypeSignature Language="F#" Value="type ToolStripManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>控制 <see cref="T:System.Windows.Forms.ToolStrip" /> 的呈现和漂浮，以及 <see cref="T:System.Windows.Forms.MenuStrip" />、<see cref="T:System.Windows.Forms.ToolStripDropDownMenu" /> 和 <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> 对象的合并。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripManager> 支持<xref:System.Windows.Forms.ToolStrip>-相关的任务对于整个应用程序，例如合并、 设置和呈现器的选项。 重载<xref:System.Windows.Forms.ToolStripManager.Merge%2A>方法结合<xref:System.Windows.Forms.ToolStrip>控件，以及重载<xref:System.Windows.Forms.ToolStripManager.RevertMerge%2A>方法撤消合并操作。  
  
 使用<xref:System.Windows.Forms.ToolStripRenderer>类的<xref:System.Windows.Forms.ToolStripManager>类，以针对绘画和布局样式获得更多控制和定制性。  
  
   
  
## Examples  
 下面的代码示例演示的菜单项合并的所有典型的方案。  
  
 [!code-csharp[System.Windows.Forms.ContextMenuStripMerge#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ContextMenuStripMerge#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/VB/form1.vb#1)]  
  
 下面的代码示例演示如何调用<xref:System.Windows.Forms.ToolStripManager>和其部分成员。  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.ToolStrip1#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolStripRenderer" />
    <altmember cref="T:System.Windows.Forms.ToolStripProfessionalRenderer" />
    <altmember cref="T:System.Windows.Forms.ToolStripContainer" />
    <altmember cref="T:System.Windows.Forms.MergeAction" />
    <altmember cref="P:System.Windows.Forms.ToolStripItem.MergeIndex" />
    <altmember cref="P:System.Windows.Forms.ToolStripItem.MergeAction" />
    <altmember cref="P:System.Windows.Forms.ToolStrip.AllowMerge" />
    <related type="Article" href="https://msdn.microsoft.com/library/e2752fe2-1afb-489e-ab96-b7805acd96bc">如何：自定义 ToolStrip 应用程序中的颜色</related>
    <related type="Article" href="https://msdn.microsoft.com/library/525e2347-0804-49aa-b9a3-9b2cabbf1c35">如何：在运行时设置 ToolStrip 呈现程序</related>
    <related type="Article" href="https://msdn.microsoft.com/library/46acef3e-9844-4ae8-9a2e-3006fe99cadf">如何：为应用程序设置 ToolStrip 呈现程序</related>
  </Docs>
  <Members>
    <Member MemberName="FindToolStrip">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.ToolStrip FindToolStrip (string toolStripName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.ToolStrip FindToolStrip(string toolStripName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.FindToolStrip(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindToolStrip (toolStripName As String) As ToolStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::ToolStrip ^ FindToolStrip(System::String ^ toolStripName);" />
      <MemberSignature Language="F#" Value="static member FindToolStrip : string -&gt; System.Windows.Forms.ToolStrip" Usage="System.Windows.Forms.ToolStripManager.FindToolStrip toolStripName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStrip</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolStripName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolStripName">一个字符串，指定要查找的 <see cref="T:System.Windows.Forms.ToolStrip" /> 或派生 <see cref="T:System.Windows.Forms.ToolStrip" /> 类型的名称。</param>
        <summary>查找指定的 <see cref="T:System.Windows.Forms.ToolStrip" /> 或从 <see cref="T:System.Windows.Forms.ToolStrip" /> 派生的类型。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ToolStrip" /> 或由 <paramref name="toolStripName" /> 参数指定的派生类型之一，如果找不到 <see cref="T:System.Windows.Forms.ToolStrip" />，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.ToolStripManager.FindToolStrip%2A>方法搜索<xref:System.Windows.Forms.ToolStrip>或一个派生自<xref:System.Windows.Forms.ToolStrip>。 派生的类型<xref:System.Windows.Forms.ToolStrip>都<xref:System.Windows.Forms.StatusStrip>， <xref:System.Windows.Forms.MenuStrip>， <xref:System.Windows.Forms.ToolStripDropDown>， <xref:System.Windows.Forms.ToolStripDropDownMenu>，并<xref:System.Windows.Forms.ContextMenuStrip>。 如果搜索的对象不是专门<xref:System.Windows.Forms.ToolStrip>但其中一种派生类型强制转换为所需的返回类型。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.ToolStripManager.FindToolStrip%2A>方法。 此示例摘自一个更大的示例为提供<xref:System.Windows.Forms.ToolStripManager.Renderer%2A>属性。  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#80](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#80)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#80](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#80)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShortcutDefined">
      <MemberSignature Language="C#" Value="public static bool IsShortcutDefined (System.Windows.Forms.Keys shortcut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsShortcutDefined(valuetype System.Windows.Forms.Keys shortcut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.IsShortcutDefined(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsShortcutDefined (shortcut As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsShortcutDefined(System::Windows::Forms::Keys shortcut);" />
      <MemberSignature Language="F#" Value="static member IsShortcutDefined : System.Windows.Forms.Keys -&gt; bool" Usage="System.Windows.Forms.ToolStripManager.IsShortcutDefined shortcut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortcut" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="shortcut">要搜索的快捷键。</param>
        <summary>检索一个值，该值指示指定的快捷键是否由窗体的任何 <see cref="T:System.Windows.Forms.ToolStrip" /> 控件使用。</summary>
        <returns>如果该快捷键由窗体上的任何 <see cref="T:System.Windows.Forms.ToolStrip" /> 使用，为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.IsValidShortcut(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidShortcut">
      <MemberSignature Language="C#" Value="public static bool IsValidShortcut (System.Windows.Forms.Keys shortcut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidShortcut(valuetype System.Windows.Forms.Keys shortcut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.IsValidShortcut(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidShortcut (shortcut As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidShortcut(System::Windows::Forms::Keys shortcut);" />
      <MemberSignature Language="F#" Value="static member IsValidShortcut : System.Windows.Forms.Keys -&gt; bool" Usage="System.Windows.Forms.ToolStripManager.IsValidShortcut shortcut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortcut" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="shortcut">要测试有效性的快捷键。</param>
        <summary>检索一个值，该值指示所定义的快捷键是否有效。</summary>
        <returns>如果快捷键有效，为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有效的快捷键是通过单独; F12 函数 F1 键功能键和 CTRL、 ALT 或 shift 键的修饰符;或 CTRL、 ALT 或 SHIFT 修饰符与其他键。 CTRL、 ALT 或 SHIFT 键和函数键以外的密钥不是有效的快捷键如果单独使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.IsShortcutDefined(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadSettings">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>加载 <see cref="T:System.Windows.Forms.Form" /> 的设置。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadSettings">
      <MemberSignature Language="C#" Value="public static void LoadSettings (System.Windows.Forms.Form targetForm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadSettings(class System.Windows.Forms.Form targetForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.LoadSettings(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadSettings (targetForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void LoadSettings(System::Windows::Forms::Form ^ targetForm);" />
      <MemberSignature Language="F#" Value="static member LoadSettings : System.Windows.Forms.Form -&gt; unit" Usage="System.Windows.Forms.ToolStripManager.LoadSettings targetForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="targetForm">
          <see cref="T:System.Windows.Forms.Form" />，其名称同时也是设置键。</param>
        <summary>将 <see cref="T:System.Windows.Forms.Form" /> 的全名作为设置键使用，从而加载给定 <see cref="T:System.Windows.Forms.Form" /> 的设置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip> 控件不在设计窗体上的时间<xref:System.Windows.Forms.ToolStrip>保存设置都将从中<xref:System.Windows.Forms.Form>时加载设置。 若要重置设置，请注释掉<xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A>行并保留<xref:System.Windows.Forms.ToolStripManager.SaveSettings%2A>行。 这不会加载任何设置，并且将会保留最后一个状态。 删除从注释时<xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A>行中，将应用这些设置。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetForm" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadSettings">
      <MemberSignature Language="C#" Value="public static void LoadSettings (System.Windows.Forms.Form targetForm, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadSettings(class System.Windows.Forms.Form targetForm, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.LoadSettings(System.Windows.Forms.Form,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadSettings (targetForm As Form, key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void LoadSettings(System::Windows::Forms::Form ^ targetForm, System::String ^ key);" />
      <MemberSignature Language="F#" Value="static member LoadSettings : System.Windows.Forms.Form * string -&gt; unit" Usage="System.Windows.Forms.ToolStripManager.LoadSettings (targetForm, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForm" Type="System.Windows.Forms.Form" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForm">要加载其设置的 <see cref="T:System.Windows.Forms.Form" />。</param>
        <param name="key">一个 <see cref="T:System.String" />，表示此 <see cref="T:System.Windows.Forms.Form" /> 的设置键。</param>
        <summary>使用指定的设置键加载指定 <see cref="T:System.Windows.Forms.Form" /> 的设置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip> 控件不在设计窗体上的时间<xref:System.Windows.Forms.ToolStrip>保存设置都将从中<xref:System.Windows.Forms.Form>时加载设置。 若要重置设置，请注释掉<xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A>行并保留<xref:System.Windows.Forms.ToolStripManager.SaveSettings%2A>行。 这不会加载任何设置，并且将会保留最后一个状态。 删除从注释时<xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A>行中，将应用这些设置。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> 参数为 <see langword="null" /> 或为空。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Merge">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>合并 <see cref="T:System.Windows.Forms.ToolStrip" /> 控件。</summary>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public static bool Merge (System.Windows.Forms.ToolStrip sourceToolStrip, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Merge(class System.Windows.Forms.ToolStrip sourceToolStrip, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Merge (sourceToolStrip As ToolStrip, targetName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Merge(System::Windows::Forms::ToolStrip ^ sourceToolStrip, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="static member Merge : System.Windows.Forms.ToolStrip * string -&gt; bool" Usage="System.Windows.Forms.ToolStripManager.Merge (sourceToolStrip, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceToolStrip" Type="System.Windows.Forms.ToolStrip" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceToolStrip">要与 <c>targetName</c> 参数所引用的 <see cref="T:System.Windows.Forms.ToolStrip" /> 合并的 <see cref="T:System.Windows.Forms.ToolStrip" />。</param>
        <param name="targetName">用于接收 <c>sourceToolStrip</c> 参数所引用的 <see cref="T:System.Windows.Forms.ToolStrip" /> 的 <see cref="T:System.Windows.Forms.ToolStrip" /> 名称。</param>
        <summary>合并两个同一类型的 <see cref="T:System.Windows.Forms.ToolStrip" /> 对象。</summary>
        <returns>如果合并成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.ToolStripManager.Merge%2A?displayProperty=nameWithType>方法，可以合并<xref:System.Windows.Forms.ToolStrip>完全相同的对象类型，如<xref:System.Windows.Forms.ToolStrip>与其他对象<xref:System.Windows.Forms.ToolStrip>对象，<xref:System.Windows.Forms.MenuStrip>与其他对象<xref:System.Windows.Forms.MenuStrip>对象，依次类推。  
  
 使用<xref:System.Windows.Forms.ToolStripManager.Merge%2A?displayProperty=nameWithType>方法，可以合并<xref:System.Windows.Forms.ToolStrip>不同类型的对象。  
  
 <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType>属性必须设置为`true`同时<xref:System.Windows.Forms.ToolStrip>对象和源和目标类型必须相同，或此方法返回`false`。  
  
> [!NOTE]
>  如果有两个<xref:System.Windows.Forms.MenuStrip>上设置的 MDI 子窗体控件<xref:System.Windows.Forms.Form.IsMdiContainer%2A>到`true`父窗体将仅其中一个的内容合并<xref:System.Windows.Forms.MenuStrip>控件。 使用<xref:System.Windows.Forms.ToolStripManager.Merge%2A>合并的其他子内容<xref:System.Windows.Forms.MenuStrip>MDI 父窗体上的控件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceToolStrip" /> 或 <paramref name="targetName" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceToolStrip" /> 或 <paramref name="targetName" /> 参数引用同一个 <see cref="T:System.Windows.Forms.ToolStrip" />。</exception>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip)" />
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public static bool Merge (System.Windows.Forms.ToolStrip sourceToolStrip, System.Windows.Forms.ToolStrip targetToolStrip);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Merge(class System.Windows.Forms.ToolStrip sourceToolStrip, class System.Windows.Forms.ToolStrip targetToolStrip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Merge (sourceToolStrip As ToolStrip, targetToolStrip As ToolStrip) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Merge(System::Windows::Forms::ToolStrip ^ sourceToolStrip, System::Windows::Forms::ToolStrip ^ targetToolStrip);" />
      <MemberSignature Language="F#" Value="static member Merge : System.Windows.Forms.ToolStrip * System.Windows.Forms.ToolStrip -&gt; bool" Usage="System.Windows.Forms.ToolStripManager.Merge (sourceToolStrip, targetToolStrip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceToolStrip" Type="System.Windows.Forms.ToolStrip" />
        <Parameter Name="targetToolStrip" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="sourceToolStrip">要与 <c>targetToolStrip</c> 参数所引用的 <see cref="T:System.Windows.Forms.ToolStrip" /> 合并的 <see cref="T:System.Windows.Forms.ToolStrip" />。</param>
        <param name="targetToolStrip">用于接收 <c>sourceToolStrip</c> 参数所引用的 <see cref="T:System.Windows.Forms.ToolStrip" /> 的 <see cref="T:System.Windows.Forms.ToolStrip" />。</param>
        <summary>合并两个不同类型的 <see cref="T:System.Windows.Forms.ToolStrip" /> 对象。</summary>
        <returns>如果合并成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.ToolStripManager.Merge%2A?displayProperty=nameWithType>方法，可以合并<xref:System.Windows.Forms.ToolStrip>不同类型的对象。  
  
 使用<xref:System.Windows.Forms.ToolStripManager.Merge%2A?displayProperty=nameWithType>方法，可以合并<xref:System.Windows.Forms.ToolStrip>完全相同的对象类型，如<xref:System.Windows.Forms.ToolStrip>与其他对象<xref:System.Windows.Forms.ToolStrip>对象，<xref:System.Windows.Forms.MenuStrip>与其他对象<xref:System.Windows.Forms.MenuStrip>对象，依次类推。  
  
 <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType>属性必须设置为`true`同时<xref:System.Windows.Forms.ToolStrip>对象，否则此方法将返回`false`。  
  
> [!NOTE]
>  如果有两个<xref:System.Windows.Forms.MenuStrip>上设置的 MDI 子窗体控件<xref:System.Windows.Forms.Form.IsMdiContainer%2A>到`true`父窗体将仅其中一个的内容合并<xref:System.Windows.Forms.MenuStrip>控件。 使用<xref:System.Windows.Forms.ToolStripManager.Merge%2A>合并的其他子内容<xref:System.Windows.Forms.MenuStrip>MDI 父窗体上的控件。  
  
   
  
## Examples  
 下面的代码示例将根据指定选项的菜单项。 此示例摘自一个更大的示例中提供<xref:System.Windows.Forms.ToolStripManager>类概述。  
  
 [!code-csharp[System.Windows.Forms.ContextMenuStripMerge#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ContextMenuStripMerge#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip)" />
      </Docs>
    </Member>
    <Member MemberName="Renderer">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.ToolStripRenderer Renderer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.ToolStripRenderer Renderer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripManager.Renderer" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Renderer As ToolStripRenderer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::ToolStripRenderer ^ Renderer { System::Windows::Forms::ToolStripRenderer ^ get(); void set(System::Windows::Forms::ToolStripRenderer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Renderer : System.Windows.Forms.ToolStripRenderer with get, set" Usage="System.Windows.Forms.ToolStripManager.Renderer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripRenderer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置窗体的默认绘制样式。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ToolStripRenderer" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这<xref:System.Windows.Forms.ToolStripManager.Renderer%2A>使用属性时<xref:System.Windows.Forms.ToolStrip.RenderMode%2A>属性与当前<xref:System.Windows.Forms.ToolStrip>设置为<xref:System.Windows.Forms.ToolStripRenderMode.ManagerRenderMode>。  
  
   
  
## Examples  
 下面的代码示例演示如何将自定义的专业呈现器应用于单个<xref:System.Windows.Forms.ToolStrip>或作为一个整体应用程序。  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#70)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#70)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendererChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler RendererChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RendererChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripManager.RendererChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event RendererChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ RendererChanged;" />
      <MemberSignature Language="F#" Value="member this.RendererChanged : EventHandler " Usage="member this.RendererChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="P:System.Windows.Forms.ToolStripManager.Renderer" /> 属性的值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
> [!CAUTION]
>  若要防止出现内存泄漏，禁用释放你的应用程序时此事件。  
  
   
  
## Examples  
 下面的代码示例演示如何将此成员。 在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.ToolStripManager.RendererChanged>事件。 此报告可帮助您了解事件发生的并可以帮助您进行调试。 若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.ToolStripManager>名为`ToolStripManager1`。 然后，确保事件处理程序相关联<xref:System.Windows.Forms.ToolStripManager.RendererChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#603](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#603)]
 [!code-vb[System.Windows.Forms.EventExamples#603](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#603)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.ToolStripManagerRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.ToolStripManagerRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripManager.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property RenderMode As ToolStripManagerRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::ToolStripManagerRenderMode RenderMode { System::Windows::Forms::ToolStripManagerRenderMode get(); void set(System::Windows::Forms::ToolStripManagerRenderMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderMode : System.Windows.Forms.ToolStripManagerRenderMode with get, set" Usage="System.Windows.Forms.ToolStripManager.RenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripManagerRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置窗体的默认主题。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ToolStripManagerRenderMode" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.ToolStripManager.RenderMode%2A>属性来获取或设置是否由绘制应用程序<xref:System.Windows.Forms.ToolStripProfessionalRenderer>，则<xref:System.Windows.Forms.ToolStripSystemRenderer>，或自定义<xref:System.Windows.Forms.ToolStripRenderer>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.ToolStripManager.RenderMode%2A>属性。 此示例摘自一个更大的示例为提供<xref:System.Windows.Forms.ToolStripManager.Renderer%2A>属性。  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#80](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#80)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#80](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#80)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">设置值不是 <see cref="T:System.Windows.Forms.ToolStripManagerRenderMode" /> 值之一。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Windows.Forms.ToolStripManagerRenderMode" /> 设置为 <see cref="F:System.Windows.Forms.ToolStripManagerRenderMode.Custom" />；使用 <see cref="P:System.Windows.Forms.ToolStripManager.Renderer" /> 属性。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RevertMerge">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>撤消两个 <see cref="T:System.Windows.Forms.ToolStrip" /> 对象的合并。</summary>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="RevertMerge">
      <MemberSignature Language="C#" Value="public static bool RevertMerge (string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RevertMerge(string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RevertMerge (targetName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RevertMerge(System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="static member RevertMerge : string -&gt; bool" Usage="System.Windows.Forms.ToolStripManager.RevertMerge targetName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetName">要撤消其合并操作的 <see cref="T:System.Windows.Forms.ToolStripItem" /> 的名称。</param>
        <summary>撤消两个 <see cref="T:System.Windows.Forms.ToolStrip" /> 对象的合并，将具有指定名称的 <see cref="T:System.Windows.Forms.ToolStrip" /> 还原到合并之前的状态，并使以前的所有合并操作无效。</summary>
        <returns>如果合并操作撤消成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType>属性必须设置为`true`同时<xref:System.Windows.Forms.ToolStrip>对象，否则此方法将返回`false`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      </Docs>
    </Member>
    <Member MemberName="RevertMerge">
      <MemberSignature Language="C#" Value="public static bool RevertMerge (System.Windows.Forms.ToolStrip targetToolStrip);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RevertMerge(class System.Windows.Forms.ToolStrip targetToolStrip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RevertMerge (targetToolStrip As ToolStrip) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RevertMerge(System::Windows::Forms::ToolStrip ^ targetToolStrip);" />
      <MemberSignature Language="F#" Value="static member RevertMerge : System.Windows.Forms.ToolStrip -&gt; bool" Usage="System.Windows.Forms.ToolStripManager.RevertMerge targetToolStrip" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetToolStrip" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="targetToolStrip">要撤消合并操作的 <see cref="T:System.Windows.Forms.ToolStripItem" />。</param>
        <summary>撤消两个 <see cref="T:System.Windows.Forms.ToolStrip" /> 对象的合并，将指定的 <see cref="T:System.Windows.Forms.ToolStrip" /> 还原到合并之前的状态，并使以前的所有合并操作无效。</summary>
        <returns>如果合并操作撤消成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType>属性必须设置为`true`同时<xref:System.Windows.Forms.ToolStrip>对象，否则此方法将返回`false`。  
  
   
  
## Examples  
 下面的代码示例撤消合并菜单项。 此示例摘自一个更大的示例中提供<xref:System.Windows.Forms.ToolStripManager>类概述。  
  
 [!code-csharp[System.Windows.Forms.ContextMenuStripMerge#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ContextMenuStripMerge#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RevertMerge">
      <MemberSignature Language="C#" Value="public static bool RevertMerge (System.Windows.Forms.ToolStrip targetToolStrip, System.Windows.Forms.ToolStrip sourceToolStrip);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RevertMerge(class System.Windows.Forms.ToolStrip targetToolStrip, class System.Windows.Forms.ToolStrip sourceToolStrip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RevertMerge (targetToolStrip As ToolStrip, sourceToolStrip As ToolStrip) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RevertMerge(System::Windows::Forms::ToolStrip ^ targetToolStrip, System::Windows::Forms::ToolStrip ^ sourceToolStrip);" />
      <MemberSignature Language="F#" Value="static member RevertMerge : System.Windows.Forms.ToolStrip * System.Windows.Forms.ToolStrip -&gt; bool" Usage="System.Windows.Forms.ToolStripManager.RevertMerge (targetToolStrip, sourceToolStrip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetToolStrip" Type="System.Windows.Forms.ToolStrip" />
        <Parameter Name="sourceToolStrip" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="targetToolStrip">要撤消其合并操作的 <see cref="T:System.Windows.Forms.ToolStripItem" /> 的名称。</param>
        <param name="sourceToolStrip">与 <c>targetToolStrip</c> 合并的 <see cref="T:System.Windows.Forms.ToolStrip" />。</param>
        <summary>撤消两个 <see cref="T:System.Windows.Forms.ToolStrip" /> 对象的合并，将两个 <see cref="T:System.Windows.Forms.ToolStrip" /> 控件还原到合并前的状态，并取消以前的所有合并操作。</summary>
        <returns>如果合并操作撤消成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType>属性必须设置为`true`同时<xref:System.Windows.Forms.ToolStrip>对象，否则此方法将返回`false`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceToolStrip" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveSettings">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>保存指定 <see cref="T:System.Windows.Forms.Form" /> 的设置。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public static void SaveSettings (System.Windows.Forms.Form sourceForm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveSettings(class System.Windows.Forms.Form sourceForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.SaveSettings(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SaveSettings (sourceForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveSettings(System::Windows::Forms::Form ^ sourceForm);" />
      <MemberSignature Language="F#" Value="static member SaveSettings : System.Windows.Forms.Form -&gt; unit" Usage="System.Windows.Forms.ToolStripManager.SaveSettings sourceForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="sourceForm">
          <see cref="T:System.Windows.Forms.Form" />，其名称同时也是设置键。</param>
        <summary>将 <see cref="T:System.Windows.Forms.Form" /> 的全名作为设置键使用，从而保存给定 <see cref="T:System.Windows.Forms.Form" /> 的设置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip> 控件不在设计窗体上的时间<xref:System.Windows.Forms.ToolStrip>保存设置都将从中<xref:System.Windows.Forms.Form>时加载设置。 若要重置设置，请注释掉<xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A>行并保留<xref:System.Windows.Forms.ToolStripManager.SaveSettings%2A>行。 这不会加载任何设置，并且将会保留最后一个状态。 删除从注释时<xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A>行中，将应用这些设置。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceForm" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public static void SaveSettings (System.Windows.Forms.Form sourceForm, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveSettings(class System.Windows.Forms.Form sourceForm, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.SaveSettings(System.Windows.Forms.Form,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SaveSettings (sourceForm As Form, key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveSettings(System::Windows::Forms::Form ^ sourceForm, System::String ^ key);" />
      <MemberSignature Language="F#" Value="static member SaveSettings : System.Windows.Forms.Form * string -&gt; unit" Usage="System.Windows.Forms.ToolStripManager.SaveSettings (sourceForm, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceForm" Type="System.Windows.Forms.Form" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceForm">要保存其设置的 <see cref="T:System.Windows.Forms.Form" />。</param>
        <param name="key">一个 <see cref="T:System.String" />，表示此 <see cref="T:System.Windows.Forms.Form" /> 的设置键。</param>
        <summary>使用指定的设置键保存指定 <see cref="T:System.Windows.Forms.Form" /> 的设置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip> 控件不在设计窗体上的时间<xref:System.Windows.Forms.ToolStrip>保存设置都将从中<xref:System.Windows.Forms.Form>时加载设置。 若要重置设置，请注释掉<xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A>行并保留<xref:System.Windows.Forms.ToolStripManager.SaveSettings%2A>行。 这不会加载任何设置，并且将会保留最后一个状态。 删除从注释时<xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A>行中，将应用这些设置。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> 参数为 <see langword="null" /> 或为空。</exception>
      </Docs>
    </Member>
    <Member MemberName="VisualStylesEnabled">
      <MemberSignature Language="C#" Value="public static bool VisualStylesEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool VisualStylesEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripManager.VisualStylesEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property VisualStylesEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool VisualStylesEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VisualStylesEnabled : bool with get, set" Usage="System.Windows.Forms.ToolStripManager.VisualStylesEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否使用称为主题的视觉样式信息呈现 <see cref="T:System.Windows.Forms.ToolStrip" />。</summary>
        <value>如果 <see cref="T:System.Windows.Forms.ToolStripItem" /> 是使用主题呈现的，为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>