<Type Name="ListViewItem" FullName="System.Windows.Forms.ListViewItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f352095351e05bb495b176809a03baea5548075b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650941" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewItem : ICloneable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ListViewItem extends System.Object implements class System.ICloneable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewItem&#xA;Implements ICloneable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewItem : ICloneable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ListViewItemConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.ListView" /> 控件中的一个项。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView>控件是类似于<xref:System.Windows.Forms.ListBox>，它显示的项的列表。 主要区别是，<xref:System.Windows.Forms.ListView>控件提供不同的方式项数可以由用户查看。 <xref:System.Windows.Forms.ListViewItem>类定义外观、 行为和与中显示的项关联的数据<xref:System.Windows.Forms.ListView>控件。 <xref:System.Windows.Forms.ListViewItem> 对象可以显示在<xref:System.Windows.Forms.ListView>四种不同视图之一中的控件。 可以显示项，为大或小图标或垂直列表中的小图标。 项目还可以包含与父项相关的信息的子项。 第四个视图，详细信息视图的样式，允许你以具有可以用于标识要显示在子项中的信息的列标题的网格中显示项及其子项。  
  
 属性的大多数<xref:System.Windows.Forms.ListViewItem>类提供了方法来更改中的项显示<xref:System.Windows.Forms.ListView>与之关联的控件。 <xref:System.Windows.Forms.ListViewItem.BackColor%2A>， <xref:System.Windows.Forms.ListViewItem.ForeColor%2A>，和<xref:System.Windows.Forms.ListViewItem.Font%2A>属性允许您更改项的文本中的显示方式<xref:System.Windows.Forms.ListView>控件。 <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>属性可以指定用于从加载的映像<xref:System.Windows.Forms.ImageList>，分配给<xref:System.Windows.Forms.ListView>控件 (通过设置<xref:System.Windows.Forms.ListView.LargeImageList%2A>或<xref:System.Windows.Forms.ListView.SmallImageList%2A>属性<xref:System.Windows.Forms.ListView>)。 项可以显示复选框，以便从类似于一种方法中的用户获取项选择<xref:System.Windows.Forms.CheckedListBox>控件。 你可以使用<xref:System.Windows.Forms.ListViewItem.Checked%2A>属性以确定是否已选中项，或者，选中或清除该复选框，在运行时。 项可以显示任意数量的子项时<xref:System.Windows.Forms.ListView.View%2A>属性关联的<xref:System.Windows.Forms.ListView>控件设置为<xref:System.Windows.Forms.View.Details>和列定义中<xref:System.Windows.Forms.ListView.ColumnHeaderCollection>的<xref:System.Windows.Forms.ListView>控件。 你可以将某个项的子项添加通过调用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A>方法<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>类。 <xref:System.Windows.Forms.ListViewItem.SubItems%2A>属性允许你访问<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>类及其成员。  
  
 属性和方法的一些<xref:System.Windows.Forms.ListViewItem>类是特定项的版本中的属性和方法<xref:System.Windows.Forms.ListView>控件。 例如，<xref:System.Windows.Forms.ListViewItem.EnsureVisible%2A>方法类似于是<xref:System.Windows.Forms.ListView>版本的方法，但<xref:System.Windows.Forms.ListViewItem>版本影响仅当前项。  
  
 <xref:System.Windows.Forms.ListViewItem>类还提供了不是新版的方法<xref:System.Windows.Forms.ListView>方法。 <xref:System.Windows.Forms.ListViewItem.BeginEdit%2A>方法将项的文本置于编辑模式以便用户可以更改项的文本 (时<xref:System.Windows.Forms.ListView.LabelEdit%2A>属性<xref:System.Windows.Forms.ListView>控件设置为`true`)。 <xref:System.Windows.Forms.ListViewItem.Clone%2A>方法允许你创建的现有副本<xref:System.Windows.Forms.ListViewItem>对象在其他重用<xref:System.Windows.Forms.ListView>控件。  
  
   
  
## Examples  
 下面的代码示例创建<xref:System.Windows.Forms.ListView>有三个控件<xref:System.Windows.Forms.ListViewItem>指定的对象和三个<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>为每个项指定的对象。 此示例还创建<xref:System.Windows.Forms.ColumnHeader>对象详细信息视图中显示子项。 两个<xref:System.Windows.Forms.ImageList>还在代码示例中提供的映像中创建对象<xref:System.Windows.Forms.ListViewItem>对象。 这些<xref:System.Windows.Forms.ImageList>对象添加到<xref:System.Windows.Forms.ListView.LargeImageList%2A>和<xref:System.Windows.Forms.ListView.SmallImageList%2A>属性。 该示例使用以下属性创建<xref:System.Windows.Forms.ListView>控件：  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 你需要将代码添加到<xref:System.Windows.Forms.Form>和调用中的示例构造函数或窗体上的另一种方法创建的方法。 该示例需要映像名为`MySmallImage1`， `MySmallImage2`， `MyLargeImage1`，和`MyLargeImage2`位于根目录下的驱动器 c。  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用默认值初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例创建<xref:System.Windows.Forms.ListView>有三个控件<xref:System.Windows.Forms.ListViewItem>指定的对象和三个<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>为每个项指定的对象。 此示例还创建<xref:System.Windows.Forms.ColumnHeader>对象详细信息视图中显示子项。 两个<xref:System.Windows.Forms.ImageList>还在代码示例中提供的映像中创建对象<xref:System.Windows.Forms.ListViewItem>对象。 这些<xref:System.Windows.Forms.ImageList>对象添加到<xref:System.Windows.Forms.ListView.LargeImageList%2A>和<xref:System.Windows.Forms.ListView.SmallImageList%2A>属性。 该示例使用以下属性创建<xref:System.Windows.Forms.ListView>控件：  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 你需要将代码添加到<xref:System.Windows.Forms.Form>和调用中的示例构造函数或窗体上的另一种方法创建的方法。 该示例需要映像名为`MySmallImage1`， `MySmallImage2`， `MyLargeImage1`，和`MyLargeImage2`位于根目录下的驱动器 c。  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要为该项显示的文本。 该文本不应该超过 259 个字符。</param>
        <summary>用指定的项文本初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文本<xref:System.Windows.Forms.ListViewItem>不应超过 259 个字符或可能出现意外的行为。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="items">表示此新项的子项的字符串数组。</param>
        <summary>用表示子项的字符串数组初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">要将项分配到的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例，并将它分配到指定的组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的构造函数，可指定项所属的组。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 组是仅适用于 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 有关更多信息，请参见 <xref:System.Windows.Forms.ListViewGroup> 概述主题。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ListViewItem (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ListViewItem(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，包含关于要初始化的 <see cref="T:System.Windows.Forms.ListViewItem" /> 的信息。</param>
        <param name="context">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" />，指示序列化的流的源和目标以及上下文信息。</param>
        <summary>使用指定的序列化信息和流上下文初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, int imageIndex);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">要为该项显示的文本。 该文本不应该超过 259 个字符。</param>
        <param name="imageIndex">图像的从零开始的索引，该图像位于与包含该项的 <see cref="T:System.Windows.Forms.ImageList" /> 关联的 <see cref="T:System.Windows.Forms.ListView" /> 中。</param>
        <summary>用指定的项文本和项图标的图像索引位置初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文本<xref:System.Windows.Forms.ListViewItem>不应超过 259 个字符或可能出现意外的行为。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, System::String ^ imageKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要为该项显示的文本。 该文本不应该超过 259 个字符。</param>
        <param name="imageKey">所属 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 中的图像的名称，将在 <see cref="T:System.Windows.Forms.ListViewItem" /> 中显示该名称。</param>
        <summary>用指定的文本和图像初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `imageKey`参数指定的图像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>与拥有关联<xref:System.Windows.Forms.ListView>控件，可通过访问<xref:System.Windows.Forms.ListViewItem.ImageList%2A>属性。  
  
 文本<xref:System.Windows.Forms.ListViewItem>不应超过 259 个字符或可能出现意外的行为。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="text">要为该项显示的文本。 该文本不应该超过 259 个字符。</param>
        <param name="group">要将项分配到的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>用指定的项文本初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例，并将它分配到指定的组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的构造函数，可指定项所属的组。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 组是仅适用于 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 有关更多信息，请参见 <xref:System.Windows.Forms.ListViewGroup> 概述主题。  
  
 文本<xref:System.Windows.Forms.ListViewItem>不应超过 259 个字符或可能出现意外的行为。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), imageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, int imageIndex);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="items">表示此新项的子项的字符串数组。</param>
        <param name="imageIndex">图像的从零开始的索引，该图像位于与包含该项的 <see cref="T:System.Windows.Forms.ImageList" /> 关联的 <see cref="T:System.Windows.Forms.ListView" /> 中。</param>
        <summary>用项图标的图像索引位置和表示子项的字符串数组初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), imageKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::String ^ imageKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="items">一个数组，它包含 <see cref="T:System.Windows.Forms.ListViewItem" /> 的子项的文本。</param>
        <param name="imageKey">所属 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 中的图像的名称，将在 <see cref="T:System.Windows.Forms.ListViewItem" /> 中显示该名称。</param>
        <summary>用指定的项和子项文本及图像初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `imageKey`参数指定的图像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>与拥有关联<xref:System.Windows.Forms.ListView>控件，可通过访问<xref:System.Windows.Forms.ListViewItem.ImageList%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">表示此新项的子项的字符串数组。</param>
        <param name="group">要将项分配到的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>用表示子项的字符串数组初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例，并将该项分配到指定的组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的构造函数，可指定项所属的组。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 组是仅适用于 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 有关更多信息，请参见 <xref:System.Windows.Forms.ListViewGroup> 概述主题。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewItem.ListViewSubItem[] subItems, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem/ListViewSubItem[] subItems, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewItem.ListViewSubItem[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subItems As ListViewItem.ListViewSubItem(), imageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ subItems, int imageIndex);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subItems" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="subItems">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 类型的数组，表示该项的子项。</param>
        <param name="imageIndex">图像的从零开始的索引，该图像位于与包含该项的 <see cref="T:System.Windows.Forms.ImageList" /> 关联的 <see cref="T:System.Windows.Forms.ListView" /> 中。</param>
        <summary>用项图标的图像索引位置和 <see cref="T:System.Windows.Forms.ListViewItem" /> 对象的数组初始化 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的构造函数是有用的在创建时<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>对象，然后再将它们添加到<xref:System.Windows.Forms.ListViewItem>（例如，以指示特殊格式设置或在多个项目中使用子项）。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewItem.ListViewSubItem[] subItems, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem/ListViewSubItem[] subItems, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewItem.ListViewSubItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subItems As ListViewItem.ListViewSubItem(), imageKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ subItems, System::String ^ imageKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subItems" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subItems">一个 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 对象数组。</param>
        <param name="imageKey">所属 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 中的图像的名称，将在 <see cref="T:System.Windows.Forms.ListViewItem" /> 中显示该名称。</param>
        <summary>用指定的子项和图像初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `imageKey`参数指定的图像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>与拥有关联<xref:System.Windows.Forms.ListView>控件，可通过访问<xref:System.Windows.Forms.ListViewItem.ImageList%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, int imageIndex, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, int imageIndex, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="text">要为该项显示的文本。 该文本不应该超过 259 个字符。</param>
        <param name="imageIndex">图像的从零开始的索引，该图像位于与包含该项的 <see cref="T:System.Windows.Forms.ImageList" /> 关联的 <see cref="T:System.Windows.Forms.ListView" /> 中。</param>
        <param name="group">要将项分配到的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>用指定的项文本和项图标的图像索引位置初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例，并将该项分配到指定的组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的构造函数，可指定项所属的组。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 组是仅适用于 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 有关更多信息，请参见 <xref:System.Windows.Forms.ListViewGroup> 概述主题。  
  
 文本<xref:System.Windows.Forms.ListViewItem>不应超过 259 个字符或可能出现意外的行为。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, string imageKey, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string imageKey, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.String,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageKey As String, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, System::String ^ imageKey, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="text">要为该项显示的文本。 该文本不应该超过 259 个字符。</param>
        <param name="imageKey">所属 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 中的图像的名称，将在该项中显示该名称。</param>
        <param name="group">要将项分配到的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>用指定的文本、图像和组初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的构造函数，可指定项所属的组。  
  
 `imageKey`参数指定的图像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>与拥有关联<xref:System.Windows.Forms.ListView>控件，可通过访问<xref:System.Windows.Forms.ListViewItem.ImageList%2A>属性。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 组是仅适用于 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 有关更多信息，请参见 <xref:System.Windows.Forms.ListViewGroup> 概述主题。  
  
 文本<xref:System.Windows.Forms.ListViewItem>不应超过 259 个字符或可能出现意外的行为。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, int imageIndex, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, int32 imageIndex, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), imageIndex As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, int imageIndex, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">表示此新项的子项的字符串数组。</param>
        <param name="imageIndex">图像的从零开始的索引，该图像位于与包含该项的 <see cref="T:System.Windows.Forms.ImageList" /> 关联的 <see cref="T:System.Windows.Forms.ListView" /> 中。</param>
        <param name="group">要将项分配到的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>用项图标的图像索引位置和表示子项的字符串数组初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例，并将该项分配到指定的组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的构造函数，可指定项所属的组。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 组是仅适用于 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 有关更多信息，请参见 <xref:System.Windows.Forms.ListViewGroup> 概述主题。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, string imageKey, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, string imageKey, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.String,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), imageKey As String, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::String ^ imageKey, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">一个字符串数组，表示 <see cref="T:System.Windows.Forms.ListViewItem" /> 的子项的文本。</param>
        <param name="imageKey">所属 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 中的图像的名称，将在该项中显示该名称。</param>
        <param name="group">要将项分配到的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>用包含指定文本、图像和组的子项初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的构造函数，可指定项所属的组。  
  
 `imageKey`参数指定的图像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>与拥有关联<xref:System.Windows.Forms.ListView>控件，可通过访问<xref:System.Windows.Forms.ListViewItem.ImageList%2A>属性。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 组是仅适用于 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 有关更多信息，请参见 <xref:System.Windows.Forms.ListViewGroup> 概述主题。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewItem.ListViewSubItem[] subItems, int imageIndex, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem/ListViewSubItem[] subItems, int32 imageIndex, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewItem.ListViewSubItem[],System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subItems As ListViewItem.ListViewSubItem(), imageIndex As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ subItems, int imageIndex, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subItems" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="subItems">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 类型的数组，表示该项的子项。</param>
        <param name="imageIndex">图像的从零开始的索引，该图像位于与包含该项的 <see cref="T:System.Windows.Forms.ImageList" /> 关联的 <see cref="T:System.Windows.Forms.ListView" /> 中。</param>
        <param name="group">要将项分配到的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>用项图标的图像索引位置和 <see cref="T:System.Windows.Forms.ListViewItem" /> 对象的数组初始化 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 类的新实例，并将该项分配到指定的组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的构造函数是有用的在创建时<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>对象，然后再将它们添加到<xref:System.Windows.Forms.ListViewItem>（例如，以指示特殊格式设置或在多个项目中使用子项） 的对象。 它还允许你指定项所属的组。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 组是仅适用于 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 有关更多信息，请参见 <xref:System.Windows.Forms.ListViewGroup> 概述主题。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewItem.ListViewSubItem[] subItems, string imageKey, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem/ListViewSubItem[] subItems, string imageKey, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewItem.ListViewSubItem[],System.String,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subItems As ListViewItem.ListViewSubItem(), imageKey As String, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ subItems, System::String ^ imageKey, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subItems" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="subItems">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 对象的数组，表示 <see cref="T:System.Windows.Forms.ListViewItem" /> 的子项。</param>
        <param name="imageKey">所属 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 中的图像的名称，将在该项中显示该名称。</param>
        <param name="group">要将项分配到的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>用指定的子项、图像和组初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的构造函数是有用的在创建时<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>对象，然后再将它们添加到<xref:System.Windows.Forms.ListViewItem>（例如，以指示特殊格式设置或在多个项目中使用子项）。 它还允许你指定项所属的组。  
  
 `imageKey`参数指定的图像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>与拥有关联<xref:System.Windows.Forms.ListView>控件，可通过访问<xref:System.Windows.Forms.ListViewItem.ImageList%2A>属性。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 组是仅适用于 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 有关更多信息，请参见 <xref:System.Windows.Forms.ListViewGroup> 概述主题。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, int imageIndex, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, int32 imageIndex, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, int imageIndex, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="items">表示此新项的子项的字符串数组。</param>
        <param name="imageIndex">图像的从零开始的索引，该图像位于与包含该项的 <see cref="T:System.Windows.Forms.ImageList" /> 关联的 <see cref="T:System.Windows.Forms.ListView" /> 中。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，表示该项的前景色。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，表示该项的背景色。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，表示用于显示该项文本的字体。</param>
        <summary>用项图标的图像索引位置、前景色、背景色、项的字体和表示子项的字符串数组初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例创建一个包含窗体<xref:System.Windows.Forms.ListView>控件项中的列时进行手动排序<xref:System.Windows.Forms.ListView>控件被单击。 该示例定义一个名为类`ListViewItemComparer`实现<xref:System.Collections.IComparer?displayProperty=nameWithType>接口执行<xref:System.Windows.Forms.ListViewItem>比较。 该示例创建的实例`ListViewItemComparer`并使用它来设置<xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>属性<xref:System.Windows.Forms.ListView>控件。 <xref:System.Windows.Forms.ListView.Sort%2A>方法调用<xref:System.Windows.Forms.ListView.ColumnClick>事件处理程序使用中定义的方法`ListViewItemComparer`来执行的项，基于所单击的列排序。  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, string imageKey, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, string imageKey, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::String ^ imageKey, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="items">一个字符串数组，表示 <see cref="T:System.Windows.Forms.ListViewItem" /> 的子项的文本。</param>
        <param name="imageKey">所属 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 中的图像的名称，将在该项中显示该名称。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，表示该项的前景色。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，表示该项的背景色。</param>
        <param name="font">要应用于项文本的 <see cref="T:System.Drawing.Font" />。</param>
        <summary>用包含指定的文本、图像、颜色和字体的子项初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `imageKey`参数指定的图像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>与拥有关联<xref:System.Windows.Forms.ListView>控件，可通过访问<xref:System.Windows.Forms.ListViewItem.ImageList%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, int imageIndex, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, int32 imageIndex, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, int imageIndex, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">表示此新项的子项的字符串数组。</param>
        <param name="imageIndex">图像的从零开始的索引，该图像位于与包含该项的 <see cref="T:System.Windows.Forms.ImageList" /> 关联的 <see cref="T:System.Windows.Forms.ListView" /> 中。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，表示该项的前景色。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，表示该项的背景色。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，表示用于显示该项文本的字体。</param>
        <param name="group">要将项分配到的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>用项图标的图像索引位置、前景色、背景色、项的字体和表示子项的字符串数组初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。 将该项分配到指定的组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的构造函数，可指定项所属的组。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 组是仅适用于 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 有关更多信息，请参见 <xref:System.Windows.Forms.ListViewGroup> 概述主题。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, string imageKey, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, string imageKey, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::String ^ imageKey, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">一个字符串数组，表示 <see cref="T:System.Windows.Forms.ListViewItem" /> 的子项的文本。</param>
        <param name="imageKey">所属 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 中的图像的名称，将在该项中显示该名称。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，表示该项的前景色。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，表示该项的背景色。</param>
        <param name="font">要应用于项文本的 <see cref="T:System.Drawing.Font" />。</param>
        <param name="group">要将项分配到的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>用包含指定的文本、图像、颜色、字体和组的子项初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的构造函数，可指定项所属的组。  
  
 `imageKey`参数指定的图像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>与拥有关联<xref:System.Windows.Forms.ListView>控件，可通过访问<xref:System.Windows.Forms.ListViewItem.ImageList%2A>属性。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 组是仅适用于 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 有关更多信息，请参见 <xref:System.Windows.Forms.ListViewGroup> 概述主题。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置该项文本的背景色。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示该项文本的背景色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用<xref:System.Windows.Forms.ListViewItem.BackColor%2A>属性可以更改显示项文本的背景的颜色。 可以使用此属性，如果你想要使用不同的背景和前景颜色组合 (使用<xref:System.Windows.Forms.ListViewItem.ForeColor%2A>要设置的前景色属性) 来区分从另一个项。 例如，你可以设置<xref:System.Windows.Forms.ListViewItem.BackColor%2A>属性<xref:System.Drawing.Color.Red%2A>标识未通过验证，或缺少子项信息的项目。  
  
 如果你想要为某项的所有子项使用相同的背景色，设置<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>属性`true`。 这将导致的颜色和字体为项目指定要用于所有子项的文本。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将项文本置于编辑模式中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是有效才<xref:System.Windows.Forms.ListView.LabelEdit%2A>属性<xref:System.Windows.Forms.ListView>包含项的控件设置为`true`。 可以使用此方法在运行时，若要强制在编辑模式显示项的文本。 例如，如果在验证用户，编辑的项文本的项失败验证，你可以选择中的项<xref:System.Windows.Forms.ListView>控件并调用<xref:System.Windows.Forms.ListViewItem.BeginEdit%2A>方法，以强制用户更改未能通过验证的文本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">相关联的 <see cref="P:System.Windows.Forms.ListView.LabelEdit" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 属性没有设置为 <see langword="true" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取该项（包括子项）的边框。</summary>
        <value>
          <see cref="T:System.Drawing.Rectangle" />，表示该项的边框。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可用于获取整个项的边框。 如果你想要获取整个项的一部分的边框，使用<xref:System.Windows.Forms.ListViewItem.GetBounds%2A>方法。 <xref:System.Windows.Forms.ListView>类提供<xref:System.Windows.Forms.ListView.GetItemRect%2A>位于控件内的方法，可用于获取任何项的边框。  
  
 返回的边界矩形使用相对于包含当前可见区域的左上角的客户端控件坐标<xref:System.Windows.Forms.ListBox>。 如果<xref:System.Windows.Forms.ListBox>是可滚动和定位，以便<xref:System.Windows.Forms.ListViewItem>不是可见，则坐标返回可以是负数。  
  
 当<xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType>属性具有的值<xref:System.Windows.Forms.View.List>，边界矩形的宽度是包含的项，不项中的文本的宽度的列的宽度。 如果<xref:System.Windows.Forms.ListView.Columns%2A?displayProperty=nameWithType>集合不包含任何列，则使用默认列宽度 60 个像素。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.GetBounds(System.Windows.Forms.ItemBoundsPortion)" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否选中此项。</summary>
        <value>
          如果选中该项，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性很有用才<xref:System.Windows.Forms.ListView.CheckBoxes%2A>属性<xref:System.Windows.Forms.ListView>控件中是否包含项设置为`true`。 此属性可用于确定是否该项已检查由用户或通过代码在运行时。 若要确定已签入的所有项<xref:System.Windows.Forms.ListView>控件，你可以使用<xref:System.Windows.Forms.ListView.CheckedItems%2A>属性。 若要执行的操作，已选中项时，你可以创建的事件处理程序<xref:System.Windows.Forms.ListView.ItemCheck>属性<xref:System.Windows.Forms.ListView>控件。  
  
   
  
## Examples  
 下面的代码示例创建<xref:System.Windows.Forms.ListView>有三个控件<xref:System.Windows.Forms.ListViewItem>指定的对象和三个<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>为每个项指定的对象。 此示例还创建<xref:System.Windows.Forms.ColumnHeader>对象详细信息视图中显示子项。 两个<xref:System.Windows.Forms.ImageList>还在代码示例中提供的映像中创建对象<xref:System.Windows.Forms.ListViewItem>对象。 这些<xref:System.Windows.Forms.ImageList>对象添加到<xref:System.Windows.Forms.ListView.LargeImageList%2A>和<xref:System.Windows.Forms.ListView.SmallImageList%2A>属性。 该示例使用以下属性创建<xref:System.Windows.Forms.ListView>控件：  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 你需要将代码添加到<xref:System.Windows.Forms.Form>和调用中的示例构造函数或窗体上的另一种方法创建的方法。 该示例需要映像名为`MySmallImage1`， `MySmallImage2`， `MyLargeImage1`，和`MyLargeImage2`位于根目录下的驱动器 c。  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
        <altmember cref="E:System.Windows.Forms.ListView.ItemCheck" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedItems" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建该项的相同副本。</summary>
        <returns>表示项的对象，而该项具有与克隆项相同的相关联文本、图像和子项。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此方法创建的新实例<xref:System.Windows.Forms.ListViewItem>类基于现有项。 为新的版本指定了甚至正在克隆的项的子项。 此功能非常有用，如果你想要重用<xref:System.Windows.Forms.ListViewItem>在多个中<xref:System.Windows.Forms.ListView>控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual void Deserialize (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Deserialize(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Deserialize (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Deserialize(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" />，保存反序列化该项所需的数据。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，表示被反序列化的流的源和目标。</param>
        <summary>反序列化该项。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>应重写此方法，如果想要序列化和反序列化此类的派生的版本，并且派生的类包含你想要序列化和反序列化的状态信息。 为了确保你的项序列化，并可正确反序列化，必须调用此方法的基类实现。</para>
        </block>
        <altmember cref="M:System.Windows.Forms.ListViewItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public virtual void EnsureVisible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureVisible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.EnsureVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnsureVisible ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnsureVisible();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确保该项在控件中是可见的，必要时滚动控件的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此方法以确保该项目是在内可见<xref:System.Windows.Forms.ListView>控件。 在项上执行验证时，可以使用此方法。 你可以调用<xref:System.Windows.Forms.ListViewItem.EnsureVisible%2A>方法，以确保项目会显示在<xref:System.Windows.Forms.ListView>控制如果它未通过验证，以允许用户在项上执行更改。  
  
 此方法类似于是<xref:System.Windows.Forms.ListView.EnsureVisible%2A>方法<xref:System.Windows.Forms.ListView>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint searchDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint searchDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.FindNearestItem(System.Windows.Forms.SearchDirectionHint)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNearestItem (searchDirection As SearchDirectionHint) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint searchDirection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchDirection" Type="System.Windows.Forms.SearchDirectionHint" />
      </Parameters>
      <Docs>
        <param name="searchDirection">
          <see cref="T:System.Windows.Forms.SearchDirectionHint" /> 值之一。</param>
        <summary>从 <see cref="T:System.Windows.Forms.ListViewItem" /> 查找下一个项，按指定的方向搜索。</summary>
        <returns>与给定坐标最接近的 <see cref="T:System.Windows.Forms.ListViewItem" />（以指定方向进行搜索）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.FindNearestItem%2A>方法返回`null`如果在给定的方向中不找到任何项。  
  
 标识最近的项运行应用程序的操作系统而异，并将会影响结果<xref:System.Windows.Forms.ListViewItem.FindNearestItem%2A>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.ListViewItem.FindNearestItem%2A> 方法。 若要运行此示例，请将以下代码粘贴到 Windows 窗体包含<xref:System.Windows.Forms.ListView>名为`findListView`。 确保<xref:System.Windows.Forms.ListView.View%2A>属性设为图标视图中，并且<xref:System.Windows.Forms.ListView>填充有一些项。 将关联<xref:System.Windows.Forms.Control.MouseDown>事件`findListView`与`findListView_MouseDown`在此示例中的方法。  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">作为容器的 <see cref="P:System.Windows.Forms.ListView.View" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 属性被设置为除 <see cref="F:System.Windows.Forms.View.SmallIcon" /> 和 <see cref="F:System.Windows.Forms.View.LargeIcon" /> 以外的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public bool Focused { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focused { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示该项在 <see cref="T:System.Windows.Forms.ListView" /> 控件中是否具有焦点。</summary>
        <value>
          如果该项具有焦点，则为 <see langword="true" />；否则，为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因为<xref:System.Windows.Forms.ListView>控件没有直接可编辑区域-中包含的项<xref:System.Windows.Forms.ListView>可以编辑-中的项的文本<xref:System.Windows.Forms.ListView>将显示焦点标线时<xref:System.Windows.Forms.ListView>具有焦点。 通常情况下，最后选择的项在<xref:System.Windows.Forms.ListView>控件是具有焦点的项。 虽然某一项可能显示焦点标线，它可能实际上不是中的选定的项<xref:System.Windows.Forms.ListView>。 你可以使用<xref:System.Windows.Forms.ListViewItem.Focused%2A>属性来确定该项是否当前获得焦点的项目中<xref:System.Windows.Forms.ListView>包含它的控件。 如果<xref:System.Windows.Forms.ListViewItem>不与关联<xref:System.Windows.Forms.ListView>控件，此属性将返回`false`。  
  
 <xref:System.Windows.Forms.ListView>控件提供<xref:System.Windows.Forms.ListView.FocusedItem%2A>属性，以允许你确定哪个<xref:System.Windows.Forms.ListViewItem>中<xref:System.Windows.Forms.ListView>具有焦点。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.FocusedItem" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由该项显示的文本的字体。</summary>
        <value>要应用于由控件显示的文本的 <see cref="T:System.Drawing.Font" />。 如果 <see cref="P:System.Windows.Forms.Control.DefaultFont" /> 没有与 <see cref="T:System.Windows.Forms.ListViewItem" /> 控件关联，则默认字体为 <see cref="T:System.Windows.Forms.ListView" /> 属性的值；否则，使用在 <see cref="P:System.Windows.Forms.Control.Font" /> 控件的 <see cref="T:System.Windows.Forms.ListView" /> 属性中指定的字体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可用于更改应用于项的文本的字体样式。 因为<xref:System.Drawing.Font>不可变 （不能调整任何其属性），您可以只分配<xref:System.Windows.Forms.Control.Font%2A>属性指定新<xref:System.Drawing.Font>。 但是，您可以基于新的字体基于现有的字体。  
  
   
  
## Examples  
 下面的代码示例演示如何调整现有字体以使其成为粗体。  
  
```csharp  
listViewItem1.Font = new Font(listViewItem1.Font,   
    listViewItem1.Font.Style | FontStyle.Bold);  
```  
  
```vb  
ListViewItem1.Font = New Font(ListViewItem1.Font, _   
    ListViewItem1.Font.Style Or FontStyle.Bold)  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置该项文本的前景色。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示该项文本的前景色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用<xref:System.Windows.Forms.ListViewItem.ForeColor%2A>属性可以更改的项文本的颜色。 可以使用此属性，如果你想要使用不同的背景和前景颜色组合 (使用<xref:System.Windows.Forms.ListViewItem.BackColor%2A>属性设置的背景色) 来区分从另一个项。 例如，你可以设置<xref:System.Windows.Forms.ListViewItem.ForeColor%2A>属性<xref:System.Drawing.Color.Red%2A>标识必须与它们关联添加负号的项目或项验证失败。  
  
 如果你想要为某一项的所有子项中使用相同的前景颜色，设置<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>属性`true`。 这将导致的颜色和字体为项目指定要用于所有子项的文本。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBounds (System.Windows.Forms.ItemBoundsPortion portion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBounds(valuetype System.Windows.Forms.ItemBoundsPortion portion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.GetBounds(System.Windows.Forms.ItemBoundsPortion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds (portion As ItemBoundsPortion) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBounds(System::Windows::Forms::ItemBoundsPortion portion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portion" Type="System.Windows.Forms.ItemBoundsPortion" />
      </Parameters>
      <Docs>
        <param name="portion">其中一个 <see cref="T:System.Windows.Forms.ItemBoundsPortion" /> 值，表示要为其检索边框的项的一部分。</param>
        <summary>为该项检索边框的指定部分。</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" />，表示该项的指定部分的边框。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的绑定矩形<xref:System.Windows.Forms.ListViewItem.GetBounds%2A>方法表示仅在指定的项的部分`portion`参数。 你还可以调用<xref:System.Windows.Forms.ListView.GetItemRect%2A>方法<xref:System.Windows.Forms.ListView>类来获取中的任何项的边框<xref:System.Windows.Forms.ListView>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.GetItemRect(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSubItemAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem GetSubItemAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem GetSubItemAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.GetSubItemAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubItemAt (x As Integer, y As Integer) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ GetSubItemAt(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">x 坐标。</param>
        <param name="y">y 坐标。</param>
        <summary>返回位于指定坐标位置的 <see cref="T:System.Windows.Forms.ListViewItem" /> 的子项。</summary>
        <returns>位于指定的 x 和 y 坐标处的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.GetSubItemAt%2A>方法将返回`null`如果<xref:System.Windows.Forms.ListView>不在<xref:System.Windows.Forms.View.Details>视图，或者不存在<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>位于指定点处。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.ListViewItem.GetSubItemAt%2A> 方法。 若要运行此代码，请将其粘贴到 Windows 窗体和调用`InitializeListView1`从窗体的构造函数或<xref:System.Windows.Forms.Form.Load>事件处理方法。  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup Group { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Group" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Group" />
      <MemberSignature Language="VB.NET" Value="Public Property Group As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ Group { System::Windows::Forms::ListViewGroup ^ get(); void set(System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置该项所分配到的组。</summary>
        <value>该项所分配到的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性用于设置项所属的组。 您可以将组设置<xref:System.Windows.Forms.ListViewItem.%23ctor%2A>构造函数，也可以使用此属性可以在运行时修改组成员身份。 如果将此属性设置为`null`中的组以及<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>集合，则该项将出现在默认组中，具有标头设置为"。 中不包含默认组<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>集合，而且不能更改。 它是主要适用于调试以确保所有项已正确都添加到组。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 组是仅适用于 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 有关更多信息，请参见 <xref:System.Windows.Forms.ListViewGroup> 概述主题。  
  
   
  
## Examples  
 下面的代码示例演示如何<xref:System.Windows.Forms.ListViewItem.Group%2A>属性可以使用的应用程序将组织中<xref:System.Windows.Forms.ListView>按的详细信息视图中的子项值的项。 这种形式是分组的类似于在 Windows 资源管理器中使用的分组。 在示例中，动态创建组。 对于每个子项列中，为每个唯一子项值创建一个组。 父项列中，为每个唯一的初始字母创建一个组。 为每个列创建的组存储在以及子项文本或首字母哈希表中。 单击列标题时，将检索对应于该列的哈希表。 接下来，该列的子项的文本值的用法与哈希表键以检索正确的组的每个项。 项然后分配给组使用<xref:System.Windows.Forms.ListViewItem.Group%2A>属性。  
  
 此代码示例摘自更大的示例为提供<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>属性。  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为该项显示的图像的索引。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageList" /> 中为该项显示的图像的从零开始的索引。 默认值为 -1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的值取决于值<xref:System.Windows.Forms.ListViewItem.ImageList%2A>属性。 具体取决于的当前值<xref:System.Windows.Forms.ListView.View%2A>属性<xref:System.Windows.Forms.ListView>项，与关联控件<xref:System.Windows.Forms.ImageList>项目所用可一个指定的<xref:System.Windows.Forms.ListView.LargeImageList%2A>属性或<xref:System.Windows.Forms.ListView.SmallImageList%2A>属性<xref:System.Windows.Forms.ListView>控件。 如果<xref:System.Windows.Forms.ListView.View%2A>属性设置为<xref:System.Windows.Forms.View.LargeIcon>、<xref:System.Windows.Forms.ImageList>中指定<xref:System.Windows.Forms.ListView.LargeImageList%2A>属性; 否则为将使用，<xref:System.Windows.Forms.ImageList>中指定<xref:System.Windows.Forms.ListView.SmallImageList%2A>使用属性。 在中定义的映像<xref:System.Windows.Forms.ImageList>中指定<xref:System.Windows.Forms.ListView.SmallImageList%2A>应具有相同的索引位置中的图像<xref:System.Windows.Forms.ImageList>中指定<xref:System.Windows.Forms.ListView.LargeImageList%2A>属性。 如果索引位置相同<xref:System.Windows.Forms.ImageList>控件，可设置的单个索引值<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>无论的值将显示属性和适当的映像<xref:System.Windows.Forms.ListView.View%2A>属性<xref:System.Windows.Forms.ListView>控件。 <xref:System.Windows.Forms.ListViewItem.ImageKey%2A>和<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>属性是互斥的这意味着如果已设置，另一个被忽略。 此外，如果你设置<xref:System.Windows.Forms.ListViewItem.ImageKey%2A>属性，<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>属性自动设置为-1。 或者，如果你设置<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>属性，<xref:System.Windows.Forms.ListViewItem.ImageKey%2A>自动设置为一个空字符串 ("")。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定的值小于 -1。</exception>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为该项显示的图像的键。</summary>
        <value>为 <see cref="T:System.Windows.Forms.ListViewItem" /> 显示的图像的键。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ImageKey%2A>属性返回一个空字符串 ("") 时<xref:System.Windows.Forms.ListViewItem.ImageKey%2A>没有为设置<xref:System.Windows.Forms.ListViewItem>。 <xref:System.Windows.Forms.ListViewItem.ImageKey%2A>和<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>属性是互斥的这意味着如果已设置，另一个被忽略。 如果你设置<xref:System.Windows.Forms.ListViewItem.ImageKey%2A>属性，<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>属性自动设置为-1。 或者，如果你设置<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>属性，<xref:System.Windows.Forms.ListViewItem.ImageKey%2A>自动设置为一个空字符串 ("")。  
  
> [!NOTE]
>  如果使用的小型和大型图标视图中，使用多个图像列表，<xref:System.Windows.Forms.ListView>控件，你应将放置小型和大型位于同一个映像的版本索引在其各自的图像列表的位置。 当视图之间切换，一个列表中的映像的索引位置用于在其他列表中，而不考虑指定的密钥值找到该图像。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList ImageList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList ImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ImageList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ ImageList { System::Windows::Forms::ImageList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Windows.Forms.ImageList" />，它包含与该项一起显示的图像。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageList" /> 控件使用的 <see cref="T:System.Windows.Forms.ListView" />，它包含与该项一起显示的图像。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 具体取决于的当前值<xref:System.Windows.Forms.ListView.View%2A>属性<xref:System.Windows.Forms.ListView>项，与关联控件<xref:System.Windows.Forms.ImageList>项目所用可一个指定的<xref:System.Windows.Forms.ListView.LargeImageList%2A>属性或<xref:System.Windows.Forms.ListView.SmallImageList%2A>属性<xref:System.Windows.Forms.ListView>控件。 如果<xref:System.Windows.Forms.ListView.View%2A>属性设置为<xref:System.Windows.Forms.View.LargeIcon>、<xref:System.Windows.Forms.ImageList>中指定<xref:System.Windows.Forms.ListView.LargeImageList%2A>属性; 否则为将使用，<xref:System.Windows.Forms.ImageList>中指定<xref:System.Windows.Forms.ListView.SmallImageList%2A>使用属性。 你可以使用此属性来确定哪些<xref:System.Windows.Forms.ImageList>控件项提供映像。 若要确定中的索引位置<xref:System.Windows.Forms.ImageList>，包含要显示的项，请使用映像<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListViewItem.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="IndentCount">
      <MemberSignature Language="C#" Value="public int IndentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.IndentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.ListViewItem" /> 要缩进的小图像宽度的数量。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewItem" /> 要缩进的小图像宽度数量。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.IndentCount%2A>可以使用属性仅当<xref:System.Windows.Forms.ListView.View%2A>属性包含<xref:System.Windows.Forms.ListView>设置为<xref:System.Windows.Forms.View.Details>，和<xref:System.Windows.Forms.ListView.SmallImageList%2A>属性<xref:System.Windows.Forms.ListView>设置。  
  
   
  
## Examples  
 下面的代码示例演示如何设置<xref:System.Windows.Forms.ListViewItem.IndentCount%2A>属性。 若要运行此示例，请将以下代码粘贴到 Windows 窗体和调用`InitializeIndentedListViewItems`从窗体的构造函数的方法或<xref:System.Windows.Forms.Form.Load>事件处理方法。  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">在设置 <see cref="P:System.Windows.Forms.ListViewItem.IndentCount" /> 时，指定的数量小于 0。</exception>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Windows.Forms.ListView" /> 控件中该项的从零开始的索引。</summary>
        <value>该项在 <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 控件的 <see cref="T:System.Windows.Forms.ListView" /> 中从零开始的索引，或者如果该项未与 <see cref="T:System.Windows.Forms.ListView" /> 控件关联，则为 -1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此属性确定项是否与关联<xref:System.Windows.Forms.ListView>并确定它的位置中的控件以及<xref:System.Windows.Forms.ListView.ListViewItemCollection>的<xref:System.Windows.Forms.ListView>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView ListView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView ListView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListView As ListView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView ^ ListView { System::Windows::Forms::ListView ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含该项的 <see cref="T:System.Windows.Forms.ListView" /> 控件。</summary>
        <value>包含 <see cref="T:System.Windows.Forms.ListView" /> 的 <see cref="T:System.Windows.Forms.ListViewItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此属性访问<xref:System.Windows.Forms.ListView>拥有控件的<xref:System.Windows.Forms.ListViewItem>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与此 <see cref="T:System.Windows.Forms.ListViewItem" /> 关联的名称。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewItem" /> 的名称。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Forms.ListViewItem.Name%2A>属性也是有关键<xref:System.Windows.Forms.ListViewItem>项集合中的访问时。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Position { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.ListViewItem" /> 的左上角的位置。</summary>
        <value>位于 <see cref="T:System.Drawing.Point" /> 的左上角的 <see cref="T:System.Windows.Forms.ListViewItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.Position%2A>属性应设置后<xref:System.Windows.Forms.ListViewItem>和包含<xref:System.Windows.Forms.ListView>构造。 更改<xref:System.Windows.Forms.ListViewItem.Position%2A>属性时包含<xref:System.Windows.Forms.ListView>处于<xref:System.Windows.Forms.View.Details>或<xref:System.Windows.Forms.View.List>视图将具有对项的位置没有影响。 此外，<xref:System.Windows.Forms.ListViewItem.Position%2A>属性会自动将更改时<xref:System.Windows.Forms.ListView.View%2A>属性包含<xref:System.Windows.Forms.ListView>从更改<xref:System.Windows.Forms.View.SmallIcon>， <xref:System.Windows.Forms.View.LargeIcon>，或<xref:System.Windows.Forms.View.Tile>查看对<xref:System.Windows.Forms.View.List>或<xref:System.Windows.Forms.View.Details>。 当<xref:System.Windows.Forms.ListView>处于<xref:System.Windows.Forms.View.SmallIcon>， <xref:System.Windows.Forms.View.LargeIcon>，或<xref:System.Windows.Forms.View.Tile>视图时，设置<xref:System.Windows.Forms.ListViewItem.Position%2A>某个项的属性将导致中包含的其他项<xref:System.Windows.Forms.ListView>重新排列。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.ListViewItem.Position%2A>属性<xref:System.Windows.Forms.ListViewItem>。 若要运行此示例，请将以下代码粘贴到 Windows 窗体和调用`InitializePositionedListViewItems`从窗体的<xref:System.Windows.Forms.Form.Load>事件处理方法。 单击此按钮以查看重新定位的项。  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在作为容器的 <see cref="P:System.Windows.Forms.ListViewItem.Position" /> 处于虚拟模式时设置了 <see cref="T:System.Windows.Forms.ListView" />。</exception>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从关联的 <see cref="T:System.Windows.Forms.ListView" /> 控件中移除该项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法是在功能上与类似<xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A>方法<xref:System.Windows.Forms.ListView.ListViewItemCollection>中<xref:System.Windows.Forms.ListView>包含项的控件。 你可以使用<xref:System.Windows.Forms.ListViewItem.Remove%2A>方法中的一个项中移除其<xref:System.Windows.Forms.ListView>控件。 此功能会很有用，如果你想要将项目移至不同<xref:System.Windows.Forms.ListView>控制或者需要以删除基于来自用户的请求删除从应用程序中的项的项。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
        <altmember cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selected { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示是否选定了项的值。</summary>
        <value>
          如果选定了项，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.ListView.MultiSelect%2A>属性<xref:System.Windows.Forms.ListView>控件中是否包含项设置为`true`，设置此属性的值将添加或从选定项的集合中移除的项。 如果<xref:System.Windows.Forms.ListView.MultiSelect%2A>属性设置为`false`，设置此属性，以自动选择项的值取消任何其他项中选择<xref:System.Windows.Forms.ListView>控件。 若要确定是否选择项，或者若要在运行时选择一个项，你可以使用此属性。 你可以访问在选择的所有项<xref:System.Windows.Forms.ListView>控件通过使用<xref:System.Windows.Forms.ListView.SelectedItems%2A?displayProperty=nameWithType>属性。  
  
> [!NOTE]
>  显示所选仅当项<xref:System.Windows.Forms.ListView>控件有焦点。 若要选择项目以响应用户操作如单击一个按钮，一定要调用<xref:System.Windows.Forms.Control.Focus%2A>除了设置此属性的方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.ListView.Clear%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.ListViewItem.Selected%2A>成员。 若要运行该示例，请将以下代码放置在窗体包含<xref:System.Windows.Forms.ListView>名为`ListView1`和<xref:System.Windows.Forms.Button>位于名为窗体的底部`Button1`。 调用`InitializeListView`从窗体的构造函数的方法或<xref:System.Windows.Forms.Form.Load>事件处理方法。  
  
 [!code-cpp[System.Windows.Forms.ListView4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" />，保存序列化该项所需的数据。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，表示被序列化的流的源和目标。</param>
        <summary>序列化该项。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>应重写此方法，如果想要序列化和反序列化此类的派生的版本，并且派生的类包含你想要序列化和反序列化的状态信息。 为了确保你的项序列化，并可正确反序列化，必须调用此方法的基类实现。</para>
        </block>
        <altmember cref="M:System.Windows.Forms.ListViewItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="StateImageIndex">
      <MemberSignature Language="C#" Value="public int StateImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StateImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.StateImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StateImageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("ListView.StateImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为该项显示的状态图像（指示项的状态的图像，例如，选中的复选框或已清除的复选框）的索引。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageList" /> 中为该项显示的状态图像的从零开始的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性允许你指定的索引为<xref:System.Windows.Forms.ImageList>分配给<xref:System.Windows.Forms.ListView.StateImageList%2A>属性关联的<xref:System.Windows.Forms.ListView>控件，左侧的项显示的状态图像的存储位置。 通常，状态图像是选中或清除复选框，或者用于表示的图像选择或清除项的状态。 如果为不指定任何值<xref:System.Windows.Forms.ListView.StateImageList%2A>属性，<xref:System.Windows.Forms.ListView>控件显示的默认选择或清除复选框时<xref:System.Windows.Forms.ListView.CheckBoxes%2A>的控件属性设置为`true`。  
  
> [!NOTE]
>  尽管<xref:System.Windows.Forms.ImageList>中指定<xref:System.Windows.Forms.ListView.StateImageList%2A>属性可以包含任意数量的图像，和<xref:System.Windows.Forms.ListViewItem.StateImageIndex%2A>等于或低于 14，可以为任何值将设置的属性，仅在 0 和 1 的索引位置的映像显示为状态图像。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">为该属性指定的值小于 -1。  
  
 或  
  
 为该属性指定的值大于 14。</exception>
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="SubItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItemCollection SubItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItemCollection SubItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.SubItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubItems As ListViewItem.ListViewSubItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem::ListViewSubItemCollection ^ SubItems { System::Windows::Forms::ListViewItem::ListViewSubItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewSubItemCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含该项的所有子项的集合。</summary>
        <value>包含这些子项的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>，可以添加子项、 子项中删除和获取的子项的计数。 可以在集合中的子项中执行的任务的详细信息，请参阅<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>类参考主题。  
  
> [!NOTE]
>  中的第一个子项<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>始终是拥有子项的项。 在执行对子项的操作集合中时，一定要引用而不是 0 到第一个子项进行更改的索引位置 1。  
  
   
  
## Examples  
 下面的代码示例创建<xref:System.Windows.Forms.ListView>有三个控件<xref:System.Windows.Forms.ListViewItem>指定的对象和三个<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>为每个项指定的对象。 此示例还创建<xref:System.Windows.Forms.ColumnHeader>对象详细信息视图中显示子项。 两个<xref:System.Windows.Forms.ImageList>还在代码示例中提供的映像中创建对象<xref:System.Windows.Forms.ListViewItem>对象。 这些<xref:System.Windows.Forms.ImageList>对象添加到<xref:System.Windows.Forms.ListView.LargeImageList%2A>和<xref:System.Windows.Forms.ListView.SmallImageList%2A>属性。 该示例使用以下属性创建<xref:System.Windows.Forms.ListView>控件：  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 你需要将代码添加到<xref:System.Windows.Forms.Form>和调用中的示例构造函数或窗体上的另一种方法创建的方法。 该示例需要映像名为`MySmallImage1`， `MySmallImage2`， `MyLargeImage1`，和`MyLargeImage2`位于根目录下的驱动器 c。  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" />，保存序列化该项所需的数据。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，表示被序列化的流的源和目标。</param>
        <summary>序列化该项。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含数据的对象以与该项关联。</summary>
        <value>包含与该项相关联的信息的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.Tag%2A>属性可以用于存储你想要与项关联的任何对象。 虽然您可以存储任何项，<xref:System.Windows.Forms.ListViewItem.Tag%2A>属性通常用于存储有关项目，如的唯一标识符或数据库中项的数据的索引位置的字符串信息。  
  
   
  
## Examples  
 下面的代码示例演示如何初始化<xref:System.Windows.Forms.ListViewItem>并设置<xref:System.Windows.Forms.ListViewItem.Tag%2A>和<xref:System.Windows.Forms.ListViewItem.Text%2A>属性。 若要运行此示例，请将以下代码放在一个包含窗体<xref:System.Windows.Forms.ListView>名为`ListView1`，并调用`InitializeListViewItems`从窗体的构造函数或<xref:System.Windows.Forms.Form.Load>事件处理方法。  
  
 [!code-cpp[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置该项的文本。</summary>
        <value>要为该项显示的文本。 该文本不应该超过 259 个字符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.Text%2A>属性允许您更改的项显示的文本。 文本<xref:System.Windows.Forms.ListViewItem>不应超过 259 个字符或可能出现意外的行为。  
  
 你可以使用<xref:System.Windows.Forms.ListViewItem.BackColor%2A>， <xref:System.Windows.Forms.ListViewItem.ForeColor%2A>，和<xref:System.Windows.Forms.ListViewItem.Font%2A>属性以指定如何显示的文本。 <xref:System.Windows.Forms.ListView>类提供<xref:System.Windows.Forms.ListView.LabelWrap%2A>属性，用于确定是否文本换行到下一行，或显示在单独的行。  
  
   
  
## Examples  
 下面的代码示例演示如何初始化<xref:System.Windows.Forms.ListViewItem>并设置<xref:System.Windows.Forms.ListViewItem.Tag%2A>和<xref:System.Windows.Forms.ListViewItem.Text%2A>属性。 若要运行此示例，请将以下代码放置在窗体包含<xref:System.Windows.Forms.ListView>名为`ListView1`，并调用`InitializeListViewItems`从窗体的构造函数或<xref:System.Windows.Forms.Form.Load>事件处理方法。  
  
 [!code-cpp[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelWrap" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当鼠标指针停留在 <see cref="T:System.Windows.Forms.ListViewItem" /> 上时显示的文本。</summary>
        <value>当鼠标指针停留在 <see cref="T:System.Windows.Forms.ListViewItem" /> 上时显示的文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果这两个<xref:System.Windows.Forms.ListViewItem>和其包含<xref:System.Windows.Forms.ListView>工具提示设置，仅为工具提示<xref:System.Windows.Forms.ListViewItem>将显示。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.ListView.ShowItemToolTips%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.ListViewItem.ToolTipText%2A>属性。 若要运行此示例，请将代码粘贴到 Windows 窗体和调用`InitializeItemsWithToolTips`从窗体的构造函数或<xref:System.Windows.Forms.Form.Load>事件处理方法。  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回表示当前对象的字符串。</summary>
        <returns>表示当前对象的字符串。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="UseItemStyleForSubItems">
      <MemberSignature Language="C#" Value="public bool UseItemStyleForSubItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseItemStyleForSubItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems" />
      <MemberSignature Language="VB.NET" Value="Public Property UseItemStyleForSubItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseItemStyleForSubItems { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示项的 <see cref="P:System.Windows.Forms.ListViewItem.Font" />、<see cref="P:System.Windows.Forms.ListViewItem.ForeColor" /> 和 <see cref="P:System.Windows.Forms.ListViewItem.BackColor" /> 属性是否用于其所有子项。</summary>
        <value>
          如果所有子项均使用该项的字体、前景色和背景色设置，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你不想要有一个统一的背景色的前景色，并且用于所有字体项和子项中你<xref:System.Windows.Forms.ListView>控件，可以将此属性设置为`false`。 当此属性设置为`true`，子项的任何更改<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A?displayProperty=nameWithType>， <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A?displayProperty=nameWithType>，和<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A?displayProperty=nameWithType>属性将被忽略，并且改为使用项目的值。 如果你需要指定不同的文本颜色、 背景色或要使用字体某子项来突出显示项中显示子项时，可以使用此属性<xref:System.Windows.Forms.ListView>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何设置<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>属性`false`定义的自定义样式<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>对象。 该示例还演示如何设置<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A>和<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A>属性。 若要运行该示例，请将以下代码粘贴到窗体并调用`InitializeListView`窗体的构造函数中的方法或<xref:System.Windows.Forms.Form.Load>事件处理方法。  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
      </Docs>
    </Member>
  </Members>
</Type>