<Type Name="LinkLabel+Link" FullName="System.Windows.Forms.LinkLabel+Link">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fe2907fe456611ca4e467cd87741fc2f33fbe48" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36519012" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinkLabel.Link" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit LinkLabel/Link extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LinkLabel.Link" />
  <TypeSignature Language="VB.NET" Value="Public Class LinkLabel.Link" />
  <TypeSignature Language="C++ CLI" Value="public: ref class LinkLabel::Link" />
  <TypeSignature Language="F#" Value="type LinkLabel.Link = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.LinkConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.LinkLabel" /> 控件内的链接。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.LinkLabel.Link>类定义中的链接的属性<xref:System.Windows.Forms.LinkLabel>控件。 你可以使用这些属性向提供数据<xref:System.Windows.Forms.LinkLabel.LinkClicked>事件<xref:System.Windows.Forms.LinkLabel>控件来执行任务，在控件中单击该链接时。 <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A>属性使您能够定义信息的<xref:System.Windows.Forms.LinkLabel.LinkClicked>事件可以使用显示在 Microsoft Internet Explorer 中的 URL 或打开文件。  
  
 除了为链接的属性相关的信息<xref:System.Windows.Forms.LinkLabel.Link>类还帮助定义的文本<xref:System.Windows.Forms.LinkLabel.Link>及其显示状态。 <xref:System.Windows.Forms.LinkLabel.Link.Start%2A>和<xref:System.Windows.Forms.LinkLabel.Link.Length%2A>属性定义的位置和长度的文本中的文本<xref:System.Windows.Forms.LinkLabel>控件来显示为链接。 <xref:System.Windows.Forms.LinkLabel.Link.Enabled%2A>属性允许您为一个已禁用的链接，显示的链接和<xref:System.Windows.Forms.LinkLabel.Link.Visited%2A>属性可警告用户他们已经访问过的当前实例中的指定的链接<xref:System.Windows.Forms.LinkLabel>。  
  
 你可以在一次显示多个链接<xref:System.Windows.Forms.LinkLabel>控件。 每个<xref:System.Windows.Forms.LinkLabel.Link>添加到<xref:System.Windows.Forms.LinkLabel.LinkCollection>与关联<xref:System.Windows.Forms.LinkLabel>控件。 若要获取的中定义的链接集合<xref:System.Windows.Forms.LinkLabel>控制，请使用<xref:System.Windows.Forms.LinkLabel.Links%2A?displayProperty=nameWithType>属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Windows.Forms.LinkLabel>类，具有多个<xref:System.Windows.Forms.LinkArea>部分定义，以在窗体上显示标签。 该示例演示了如何设置<xref:System.Windows.Forms.Label.AutoSize%2A>， <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>， <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>， <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>，和<xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A>可自定义的外观属性<xref:System.Windows.Forms.LinkLabel>。 第一个<xref:System.Windows.Forms.LinkArea>使用指定的<xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>属性。 更多链接添加到<xref:System.Windows.Forms.LinkLabel>使用<xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>方法。 示例句柄<xref:System.Windows.Forms.LinkLabel.LinkClicked>通过启动 Web 浏览器的超链接，并显示的事件<xref:System.Windows.Forms.MessageBox>其他链接。  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />
    <altmember cref="P:System.Windows.Forms.LinkLabel.Links" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.LinkLabel.Link" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Link ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.Link.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Link();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.LinkLabel.Link" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Link (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.Link.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Link(int start, int length);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LinkLabel.Link : int * int -&gt; System.Windows.Forms.LinkLabel.Link" Usage="new System.Windows.Forms.LinkLabel.Link (start, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <see cref="T:System.Windows.Forms.LinkLabel" /> 文本内链接区域的从零开始的起始位置。</param>
        <param name="length">链接区域中将包括的起始字符之后的字符数。</param>
        <summary>使用 <see cref="T:System.Windows.Forms.LinkLabel.Link" /> 内指定的起始位置和起始位置之后的字符数初始化 <see cref="T:System.Windows.Forms.LinkLabel" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Link (int start, int length, object linkData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 start, int32 length, object linkData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.Link.#ctor(System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As Integer, length As Integer, linkData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Link(int start, int length, System::Object ^ linkData);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LinkLabel.Link : int * int * obj -&gt; System.Windows.Forms.LinkLabel.Link" Usage="new System.Windows.Forms.LinkLabel.Link (start, length, linkData)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="linkData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="start">
          <see cref="T:System.Windows.Forms.LinkLabel" /> 文本内链接区域的从零开始的起始位置。</param>
        <param name="length">链接区域中将包括的起始字符之后的字符数。</param>
        <param name="linkData">与链接关联的数据。</param>
        <summary>使用 <see cref="T:System.Windows.Forms.LinkLabel.Link" /> 内指定的起始位置、起始位置之后的字符数以及与链接关联的数据初始化 <see cref="T:System.Windows.Forms.LinkLabel" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Forms.LinkLabel.Link.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置链接的文本说明。</summary>
        <value>一个 <see cref="T:System.String" />，表示链接的文本说明。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.LinkLabel.Link.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否启用链接。</summary>
        <value>如果启用链接，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此属性来处于禁用状态，在显示链接<xref:System.Windows.Forms.LinkLabel>控件。 当禁用链接时，单击链接不会导致<xref:System.Windows.Forms.LinkLabel>控件以引发<xref:System.Windows.Forms.LinkLabel.LinkClicked>事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.LinkLabel.Link.Visited" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int with get, set" Usage="System.Windows.Forms.LinkLabel.Link.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置链接文本中的字符数。</summary>
        <value>链接文本中的字符数，包括空格。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要指定从文本<xref:System.Windows.Forms.LinkLabel>若要显示的链接的形式，设置<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>到要开始创建链接的文本中的位置的属性。 后<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>设置属性，将其设置的值<xref:System.Windows.Forms.LinkLabel.Link.Length%2A>属性的字符，包括中指定的字符位置数<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>属性，你想要使此链接文本。 例如，如果你想要创建链接的文本"The quick brown fox"的第一个单词，则设置<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>为零 (0) 的属性和<xref:System.Windows.Forms.LinkLabel.Link.Length%2A>属性设置为三 （3)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkData">
      <MemberSignature Language="C#" Value="public object LinkData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object LinkData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.LinkData" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ LinkData { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LinkData : obj with get, set" Usage="System.Windows.Forms.LinkLabel.Link.LinkData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与链接关联的数据。</summary>
        <value>
          <see cref="T:System.Object" />，表示与链接关联的数据。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可用于提供与链接相关的信息。 此属性提供的信息可以用于中<xref:System.Windows.Forms.LinkLabel.LinkClicked>事件<xref:System.Windows.Forms.LinkLabel>提供有关可以用于处理被单击的链接的链接信息。 例如，可以指定要作为的值单击链接时在 Internet Explorer 中显示的 URL<xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A>属性。 你还可以使用<xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A>属性来标识一个对话框显示当用户单击的链接。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Windows.Forms.LinkLabel>类，具有多个<xref:System.Windows.Forms.LinkArea>部分定义，以在窗体上显示标签。 该示例演示了如何设置<xref:System.Windows.Forms.Label.AutoSize%2A>， <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>， <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>， <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>，和<xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A>可自定义的外观属性<xref:System.Windows.Forms.LinkLabel>。 第一个<xref:System.Windows.Forms.LinkArea>使用指定的<xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>属性。 更多链接添加到<xref:System.Windows.Forms.LinkLabel>使用<xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>方法。 示例句柄<xref:System.Windows.Forms.LinkLabel.LinkClicked>通过启动 Web 浏览器的超链接，并显示的事件<xref:System.Windows.Forms.MessageBox>其他链接。  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.LinkLabel.LinkClicked" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.LinkLabel.Link.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.LinkLabel.Link" /> 的名称。</summary>
        <value>一个 <see cref="T:System.String" />，表示 <see cref="T:System.Windows.Forms.LinkLabel.Link" /> 的名称。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.LinkLabel.Link.Name%2A>属性都由参数索引很有用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public int Start { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Start" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.Start" />
      <MemberSignature Language="VB.NET" Value="Public Property Start As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Start { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Start : int with get, set" Usage="System.Windows.Forms.LinkLabel.Link.Start" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.LinkLabel" /> 的文本内链接的起始位置。</summary>
        <value>
          <see cref="T:System.Windows.Forms.LinkLabel" /> 控件的文本内链接开始的位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要指定从文本<xref:System.Windows.Forms.LinkLabel>若要显示的链接的形式，设置<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>到要开始创建链接的文本中的位置的属性。 后<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>设置属性，将其设置的值<xref:System.Windows.Forms.LinkLabel.Link.Length%2A>属性的字符，包括中指定的字符位置数<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>属性，你想要使此链接文本。 例如，如果你想要创建链接的文本"The quick brown fox"的第一个单词，则设置<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>为零 (0) 的属性和<xref:System.Windows.Forms.LinkLabel.Link.Length%2A>属性设置为三 （3)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.LinkLabel.Link.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含有关 <see cref="T:System.Windows.Forms.LinkLabel.Link" /> 的数据的对象。</summary>
        <value>一个 <see cref="T:System.Object" />，其中包含有关控件的数据。 默认值为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visited">
      <MemberSignature Language="C#" Value="public bool Visited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visited" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.Visited" />
      <MemberSignature Language="VB.NET" Value="Public Property Visited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visited : bool with get, set" Usage="System.Windows.Forms.LinkLabel.Link.Visited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示用户是否已访问过该链接。</summary>
        <value>如果已经访问过该链接，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.LinkLabel>控件不自动代表链接是访问过的链接。 若要将链接显示为访问过的链接，你可以设置到此属性的值`true`的事件处理程序中<xref:System.Windows.Forms.LinkLabel.LinkClicked>事件<xref:System.Windows.Forms.LinkLabel>。 使用中指定的颜色显示访问过的链接<xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A>属性<xref:System.Windows.Forms.LinkLabel>控件。 一次窗体包含<xref:System.Windows.Forms.LinkLabel>控件已关闭，所有与链接相关联的显示状态为已删除。 若要保留的显示状态的链接，你需要在与你的应用程序关联的注册表设置中存储的链接的显示状态。  
  
> [!NOTE]
>  如果你有中指定的仅有一个链接<xref:System.Windows.Forms.LinkLabel>控件，你可以使用<xref:System.Windows.Forms.LinkLabel.LinkVisited%2A>属性<xref:System.Windows.Forms.LinkLabel>若要为已访问指定的链接。 你还可以使用<xref:System.Windows.Forms.LinkLabel.LinkVisited%2A>属性，如果你有多个链接定义，但设置仅适用于在控件中定义的第一个链接。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Windows.Forms.LinkLabel>类，具有多个<xref:System.Windows.Forms.LinkArea>部分定义，以在窗体上显示标签。 该示例演示了如何设置<xref:System.Windows.Forms.Label.AutoSize%2A>， <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>， <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>， <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>，和<xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A>可自定义的外观属性<xref:System.Windows.Forms.LinkLabel>。 第一个<xref:System.Windows.Forms.LinkArea>使用指定的<xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>属性。 更多链接添加到<xref:System.Windows.Forms.LinkLabel>使用<xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>方法。 示例句柄<xref:System.Windows.Forms.LinkLabel.LinkClicked>通过启动 Web 浏览器的超链接，并显示的事件<xref:System.Windows.Forms.MessageBox>其他链接。  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.LinkLabel.LinkVisited" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      </Docs>
    </Member>
  </Members>
</Type>