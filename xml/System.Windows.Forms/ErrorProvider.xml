<Type Name="ErrorProvider" FullName="System.Windows.Forms.ErrorProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a2b5eafaf178dd1e9fa9811f6d2b21697577a249" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640781" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ErrorProvider : System.ComponentModel.Component, System.ComponentModel.IExtenderProvider, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ErrorProvider extends System.ComponentModel.Component implements class System.ComponentModel.IExtenderProvider, class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ErrorProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ErrorProvider&#xA;Inherits Component&#xA;Implements IExtenderProvider, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrorProvider : System::ComponentModel::Component, System::ComponentModel::IExtenderProvider, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IExtenderProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("IconPadding", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("IconAlignment", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("Error", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供一个用户界面，用于指示窗体上的某个控件具有与其相关联的错误。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ErrorProvider> 显示简单的机制，用于表示向最终用户在窗体上的控件具有与之相关联的错误。 如果控件指定了错误描述字符串，则控件旁边将显示一个图标。 图标的闪烁时间以指定方式<xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A>，通过指定的费率<xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A>。 当鼠标悬停在该图标时，显示工具提示显示的错误描述字符串。  
  
 通常情况下，使用<xref:System.Windows.Forms.ErrorProvider>中并与数据绑定控件关联。 使用时<xref:System.Windows.Forms.ErrorProvider>数据绑定控件，您必须指定<xref:System.Windows.Forms.ErrorProvider.ContainerControl%2A>，构造函数中或通过设置<xref:System.Windows.Forms.ErrorProvider.ContainerControl%2A>属性。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ErrorProvider>组件不提供辅助功能客户端的内置支持。 若要使用此组件时，使你的应用程序可访问，必须提供其他可访问的反馈机制。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.ErrorProvider>类通知数据输入错误的用户。 该示例创建<xref:System.Windows.Forms.Form>包含<xref:System.Windows.Forms.TextBox>控件，<xref:System.Windows.Forms.NumericUpDown>控件，和一个<xref:System.Windows.Forms.ComboBox>控制，每个验证其内容和<xref:System.Windows.Forms.ErrorProvider>为每个控件。 该示例设置错误图标选项使用<xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A>和<xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A>属性和<xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A>和<xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A>方法。 <xref:System.Windows.Forms.ErrorProvider.SetError%2A>方法在有无相应的错误文本在过程中调用控件的<xref:System.Windows.Forms.Control.Validated>事件，具体取决于控件中的内容。  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.ErrorProvider>与<xref:System.Windows.Forms.ErrorProvider.DataSource%2A>和<xref:System.Windows.Forms.ErrorProvider.DataMember%2A>以指示将为用户的数据错误。  
  
 [!code-cpp[Classic ErrorProvider Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ErrorProvider Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ErrorProvider Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ErrorProvider Example/CS/source.cs#1)]
 [!code-vb[Classic ErrorProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ErrorProvider Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.ErrorProvider" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ErrorProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.ErrorProvider" /> 类的新实例并初始化 <see cref="P:System.Windows.Forms.ErrorProvider.BlinkRate" />、<see cref="P:System.Windows.Forms.ErrorProvider.BlinkStyle" /> 和 <see cref="P:System.Windows.Forms.ErrorProvider.Icon" /> 的默认设置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表显示的实例的初始属性值<xref:System.Windows.Forms.ErrorProvider>。  
  
|Property|“值”|  
|--------------|-----------|  
|<xref:System.Windows.Forms.ErrorProvider.Icon%2A>|其中包含一个红色背景圆圈，圆圈中的感叹号组成的图标|  
|<xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A>|250|  
|<xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A>|<xref:System.Windows.Forms.ErrorBlinkStyle.BlinkIfDifferentError>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorProvider (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ErrorProvider(System::ComponentModel::IContainer ^ container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">监视以查找错误的 <see cref="T:System.ComponentModel.IContainer" />。</param>
        <summary>初始化附加到 <see cref="T:System.Windows.Forms.ErrorProvider" /> 实现的 <see cref="T:System.ComponentModel.IContainer" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IContainer>指定是将使用错误提供程序关联的数据绑定控件的容器对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorProvider (System.Windows.Forms.ContainerControl parentControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ContainerControl parentControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.#ctor(System.Windows.Forms.ContainerControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentControl As ContainerControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ErrorProvider(System::Windows::Forms::ContainerControl ^ parentControl);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentControl" Type="System.Windows.Forms.ContainerControl" />
      </Parameters>
      <Docs>
        <param name="parentControl">要被监视错误的控件的容器。</param>
        <summary>初始化附加到容器的 <see cref="T:System.Windows.Forms.ErrorProvider" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control>指定的<xref:System.Windows.Forms.ErrorProvider.ContainerControl%2A>是关联的错误提供程序的数据绑定控件的容器对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToDataAndErrors">
      <MemberSignature Language="C#" Value="public void BindToDataAndErrors (object newDataSource, string newDataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindToDataAndErrors(object newDataSource, string newDataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.BindToDataAndErrors(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindToDataAndErrors (newDataSource As Object, newDataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindToDataAndErrors(System::Object ^ newDataSource, System::String ^ newDataMember);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newDataSource" Type="System.Object" />
        <Parameter Name="newDataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newDataSource">要被监视错误的基于 <see cref="T:System.Collections.IList" /> 接口的数据集。 通常情况下，这是一个要被监视错误的 <see cref="T:System.Data.DataSet" />。</param>
        <param name="newDataMember">
          <c>newDataSource</c> 内的一个集合，要监视该集合内是否有错误。 通常情况下，这是一个 <see cref="T:System.Data.DataTable" />。</param>
        <summary>提供在运行时同时设置 <see cref="P:System.Windows.Forms.ErrorProvider.DataSource" /> 和 <see cref="P:System.Windows.Forms.ErrorProvider.DataMember" /> 的方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要在运行时可能发生更改时避免冲突<xref:System.Windows.Forms.ErrorProvider.DataSource%2A>和<xref:System.Windows.Forms.ErrorProvider.DataMember%2A>，应使用<xref:System.Windows.Forms.ErrorProvider.BindToDataAndErrors%2A>而不是设置<xref:System.Windows.Forms.ErrorProvider.DataSource%2A>和<xref:System.Windows.Forms.ErrorProvider.DataMember%2A>单独。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlinkRate">
      <MemberSignature Language="C#" Value="public int BlinkRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlinkRate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.BlinkRate" />
      <MemberSignature Language="VB.NET" Value="Public Property BlinkRate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlinkRate { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(250)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置错误图标的闪烁速率。</summary>
        <value>错误图标的闪烁速率（以毫秒为单位）。 默认值为 250 毫秒。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 错误图标的闪烁时间在指定的速率。 值为零集<xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A>到<xref:System.Windows.Forms.ErrorBlinkStyle.NeverBlink>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.ErrorProvider>类通知数据输入错误的用户。 该示例创建<xref:System.Windows.Forms.Form>包含<xref:System.Windows.Forms.TextBox>控件，<xref:System.Windows.Forms.NumericUpDown>控件，和一个<xref:System.Windows.Forms.ComboBox>控制，每个验证其内容和<xref:System.Windows.Forms.ErrorProvider>为每个控件。 该示例设置错误图标选项使用<xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A>和<xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A>属性和<xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A>和<xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A>方法。 <xref:System.Windows.Forms.ErrorProvider.SetError%2A>方法在有无相应的错误文本在过程中调用控件的<xref:System.Windows.Forms.Control.Validated>事件，具体取决于控件中的内容。  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">值小于零。</exception>
        <altmember cref="P:System.Windows.Forms.ErrorProvider.BlinkStyle" />
      </Docs>
    </Member>
    <Member MemberName="BlinkStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ErrorBlinkStyle BlinkStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ErrorBlinkStyle BlinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.BlinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BlinkStyle As ErrorBlinkStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ErrorBlinkStyle BlinkStyle { System::Windows::Forms::ErrorBlinkStyle get(); void set(System::Windows::Forms::ErrorBlinkStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ErrorBlinkStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，通过该值指示错误图标的闪烁时间。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ErrorBlinkStyle" /> 值之一。 默认值为 <see cref="F:System.Windows.Forms.ErrorBlinkStyle.BlinkIfDifferentError" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 错误图标的闪烁按分配指定的方式<xref:System.Windows.Forms.ErrorBlinkStyle>发生错误时。 设置<xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A>到零集<xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A>到<xref:System.Windows.Forms.ErrorBlinkStyle.NeverBlink>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.ErrorProvider>类通知数据输入错误的用户。 该示例创建<xref:System.Windows.Forms.Form>包含<xref:System.Windows.Forms.TextBox>控件，<xref:System.Windows.Forms.NumericUpDown>控件，和一个<xref:System.Windows.Forms.ComboBox>控制，每个验证其内容和<xref:System.Windows.Forms.ErrorProvider>为每个控件。 该示例设置错误图标选项使用<xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A>和<xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A>属性和<xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A>和<xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A>方法。 <xref:System.Windows.Forms.ErrorProvider.SetError%2A>方法在有无相应的错误文本在过程中调用控件的<xref:System.Windows.Forms.Control.Validated>事件，具体取决于控件中的内容。  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">分配的值不是 <see cref="T:System.Windows.Forms.ErrorBlinkStyle" /> 值之一。</exception>
        <altmember cref="T:System.Windows.Forms.ErrorBlinkStyle" />
        <altmember cref="P:System.Windows.Forms.ErrorProvider.BlinkRate" />
      </Docs>
    </Member>
    <Member MemberName="CanExtend">
      <MemberSignature Language="C#" Value="public bool CanExtend (object extendee);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExtend(object extendee) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExtend (extendee As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExtend(System::Object ^ extendee);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extendee" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="extendee">要扩展的控件。</param>
        <summary>获取一个值，通过该值指示控件是否可以扩展。</summary>
        <returns>
          如果控件可以扩展，则为 <see langword="true" />；否则为 <see langword="false" />。  
  
 如果对象是 <see cref="T:System.Windows.Forms.Control" /> 而不是 <see cref="T:System.Windows.Forms.Form" /> 或 <see cref="T:System.Windows.Forms.ToolBar" />，则此属性为 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，将使用<xref:System.Windows.Forms.ErrorProvider.CanExtend%2A>以确定是否可以将附加<xref:System.Windows.Forms.ErrorProvider>到指定控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除与此组件关联的所有设置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法将清除所有属性设置为此<xref:System.Windows.Forms.ErrorProvider>，还原为其默认值的属性。 若要清除的错误消息，请调用<xref:System.Windows.Forms.ErrorProvider.SetError%2A>方法并传入<xref:System.String.Empty>为<xref:System.String>值。 这将删除从指定的错误标志符号<xref:System.Windows.Forms.Control>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContainerControl ContainerControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContainerControl ContainerControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.ContainerControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerControl As ContainerControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ContainerControl ^ ContainerControl { System::Windows::Forms::ContainerControl ^ get(); void set(System::Windows::Forms::ContainerControl ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContainerControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，通过该值指示此 <see cref="T:System.Windows.Forms.ErrorProvider" /> 的父控件。</summary>
        <value>包含 <see cref="T:System.Windows.Forms.ContainerControl" /> 附加到的控件的 <see cref="T:System.Windows.Forms.ErrorProvider" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，这是<xref:System.Windows.Forms.Form>上驻留的数据绑定控件。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">用于派生类重写此属性。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源中要监视的列表。</summary>
        <value>表示 <see cref="P:System.Windows.Forms.ErrorProvider.DataSource" /> 指定的数据源内要被监视的列表的字符串。 通常情况下，这是一个 <see cref="T:System.Data.DataTable" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ErrorProvider.DataMember%2A>导航字符串基于<xref:System.Windows.Forms.ErrorProvider.DataSource%2A>。  
  
 若要在运行时可能发生更改时避免冲突<xref:System.Windows.Forms.ErrorProvider.DataSource%2A>和<xref:System.Windows.Forms.ErrorProvider.DataMember%2A>，应使用<xref:System.Windows.Forms.ErrorProvider.BindToDataAndErrors%2A>而不是设置<xref:System.Windows.Forms.ErrorProvider.DataSource%2A>和<xref:System.Windows.Forms.ErrorProvider.DataMember%2A>单独。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.ErrorProvider>与<xref:System.Windows.Forms.ErrorProvider.DataSource%2A>和<xref:System.Windows.Forms.ErrorProvider.DataMember%2A>以指示将为用户的数据错误。  
  
 [!code-cpp[Classic ErrorProvider Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ErrorProvider Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ErrorProvider Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ErrorProvider Example/CS/source.cs#1)]
 [!code-vb[Classic ErrorProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ErrorProvider Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.ErrorProvider" /> 监视的数据源。</summary>
        <value>要被监视以查找错误的基于 <see cref="T:System.Collections.IList" /> 接口的数据源。 通常情况下，这是一个要被监视错误的 <see cref="T:System.Data.DataSet" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ErrorProvider.DataSource%2A>是可以附加到控件的数据源，并且你想要监视是否有错误。 <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> 可以将设置为任何集合可实现<xref:System.Collections.IList>。  
  
 若要在运行时可能发生更改时避免冲突<xref:System.Windows.Forms.ErrorProvider.DataSource%2A>和<xref:System.Windows.Forms.ErrorProvider.DataMember%2A>，应使用<xref:System.Windows.Forms.ErrorProvider.BindToDataAndErrors%2A>而不是设置<xref:System.Windows.Forms.ErrorProvider.DataSource%2A>和<xref:System.Windows.Forms.ErrorProvider.DataMember%2A>单独。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.ErrorProvider>与<xref:System.Windows.Forms.ErrorProvider.DataSource%2A>和<xref:System.Windows.Forms.ErrorProvider.DataMember%2A>以指示将为用户的数据错误。 此代码假定你已创建并填充<xref:System.Data.DataSet>名为`dataSet1`包含<xref:System.Data.DataTable>名为`dataTable1`。 当绑定<xref:System.Data.DataSet>到如控件<xref:System.Windows.Forms.DataGridView>控制，请通过指定的错误<xref:System.Data.DataRow>对象显示为错误标志符号在<xref:System.Windows.Forms.DataGridView>控件。  
  
 [!code-cpp[Classic ErrorProvider Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ErrorProvider Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ErrorProvider Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ErrorProvider Example/CS/source.cs#1)]
 [!code-vb[Classic ErrorProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ErrorProvider Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ErrorProvider.DataMember" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
        <summary>释放由 <see cref="T:System.ComponentModel.Component" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetError">
      <MemberSignature Language="C#" Value="public string GetError (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetError(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.GetError(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetError(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">要获取其错误描述字符串的项。</param>
        <summary>返回指定控件的当前错误描述字符串。</summary>
        <returns>指定控件的错误描述字符串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:System.Windows.Forms.ErrorProvider.GetError%2A>方法来检查是否有错误，然后打开文件对话框。 若要运行此示例，请将以下代码粘贴到一个窗体包含<xref:System.Windows.Forms.TextBox>名为`TextBox1`、<xref:System.Windows.Forms.OpenFileDialog>名为`OpenFileDialog1`，名为的按钮`Button1`，和<xref:System.Windows.Forms.ErrorProvider>名为`ErrorProvider1`。 确保所有事件都都其事件处理程序关联。  
  
 [!code-cpp[System.Windows.Forms.FileDialog#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CPP/filedialogform.cpp#2)]
 [!code-csharp[System.Windows.Forms.FileDialog#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CS/filedialogform.cs#2)]
 [!code-vb[System.Windows.Forms.FileDialog#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/VB/filedialogform.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetError(System.Windows.Forms.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetIconAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ErrorIconAlignment GetIconAlignment (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.ErrorIconAlignment GetIconAlignment(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.GetIconAlignment(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ErrorIconAlignment GetIconAlignment(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ErrorIconAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">要获取其图标位置的控件。</param>
        <summary>获取一个值，通过该值指示错误图标相对于控件的放置位置。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ErrorIconAlignment" /> 值之一。 默认的图标对齐方式是 <see cref="F:System.Windows.Forms.ErrorIconAlignment.MiddleRight" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconPadding(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconAlignment(System.Windows.Forms.Control,System.Windows.Forms.ErrorIconAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="GetIconPadding">
      <MemberSignature Language="C#" Value="public int GetIconPadding (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetIconPadding(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.GetIconPadding(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetIconPadding(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">要获取其空白的控件。</param>
        <summary>返回错误图标旁边保留的额外空间量。</summary>
        <returns>图标与控件之间保留的像素数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 很多图标通常具有中心图像，周围的额外空间，因此填充值时才需要额外的空间是必需的。 填充值可以是正数或负数。 负值导致重叠的控件的边缘的图标。 默认图标填充为 0。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconPadding(System.Windows.Forms.Control,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Drawing.Icon" />，当为控件设置了错误描述字符串时，该图标显示在控件旁边。</summary>
        <value>发出信号指出有错误发生的 <see cref="T:System.Drawing.Icon" />。 默认图标由红色背景圆及其中的感叹号组成。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 为获得最佳结果，使用的图标大小为 16 x 16 像素。 指定的图标的大小调整为 16 x 16 像素，如有必要。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">为 <see cref="T:System.Drawing.Icon" /> 分配的值是 <see langword="null" />。</exception>
        <altmember cref="T:System.Drawing.Icon" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.ErrorProvider.RightToLeftChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.ErrorProvider.OnRightToLeftChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Windows.Forms.ErrorProvider.OnRightToLeftChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.ErrorProvider.OnRightToLeftChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示组件是否可用于支持从右向左字体的区域设置。</summary>
        <value>
          如果组件可用于从右向左的区域设置，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当设置此属性为 true，错误图标，显示关联控件的左侧，并按从右到左顺序显示的工具提示文本。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ErrorProvider.RightToLeftChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="P:System.Windows.Forms.ErrorProvider.RightToLeft" /> 属性值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.ErrorProvider.RightToLeftChanged>事件。 此报告可帮助您了解当发生事件，并可以帮助您进行调试。 若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。  
  
 若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.ErrorProvider>名为`ErrorProvider1`。 然后，确保与事件处理程序<xref:System.Windows.Forms.ErrorProvider.RightToLeftChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#382](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#382)]
 [!code-vb[System.Windows.Forms.EventExamples#382](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#382)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetError">
      <MemberSignature Language="C#" Value="public void SetError (System.Windows.Forms.Control control, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetError(class System.Windows.Forms.Control control, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.SetError(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetError(System::Windows::Forms::Control ^ control, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">要为其设置错误描述字符串的控件。</param>
        <param name="value">移除该错误的错误描述字符串，或 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</param>
        <summary>设置指定控件的错误描述字符串。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果的长度`value`为大于零，则将显示错误图标，并且错误图标的工具提示将错误说明文本。 如果的长度为零或`value`是`null`，则隐藏错误图标。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.ErrorProvider>类通知数据输入错误的用户。 该示例创建<xref:System.Windows.Forms.Form>包含<xref:System.Windows.Forms.TextBox>控件，<xref:System.Windows.Forms.NumericUpDown>控件，和一个<xref:System.Windows.Forms.ComboBox>控制，每个验证其内容和<xref:System.Windows.Forms.ErrorProvider>为每个控件。 该示例设置错误图标选项使用<xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A>和<xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A>属性和<xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A>和<xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A>方法。 <xref:System.Windows.Forms.ErrorProvider.SetError%2A>方法在有无相应的错误文本在过程中调用控件的<xref:System.Windows.Forms.Control.Validated>事件，具体取决于控件中的内容。  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.GetError(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SetIconAlignment">
      <MemberSignature Language="C#" Value="public void SetIconAlignment (System.Windows.Forms.Control control, System.Windows.Forms.ErrorIconAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIconAlignment(class System.Windows.Forms.Control control, valuetype System.Windows.Forms.ErrorIconAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.SetIconAlignment(System.Windows.Forms.Control,System.Windows.Forms.ErrorIconAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIconAlignment(System::Windows::Forms::Control ^ control, System::Windows::Forms::ErrorIconAlignment value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="value" Type="System.Windows.Forms.ErrorIconAlignment" />
      </Parameters>
      <Docs>
        <param name="control">要为其设置图标位置的控件。</param>
        <param name="value">
          <see cref="T:System.Windows.Forms.ErrorIconAlignment" /> 值之一。</param>
        <summary>设置错误图标相对于控件的放置位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 图标的最后位置由填充值的图标修改。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.ErrorProvider>类通知数据输入错误的用户。 该示例创建<xref:System.Windows.Forms.Form>包含<xref:System.Windows.Forms.TextBox>控件，<xref:System.Windows.Forms.NumericUpDown>控件，和一个<xref:System.Windows.Forms.ComboBox>控制，每个验证其内容和<xref:System.Windows.Forms.ErrorProvider>为每个控件。 该示例设置错误图标选项使用<xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A>和<xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A>属性和<xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A>和<xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A>方法。 <xref:System.Windows.Forms.ErrorProvider.SetError%2A>方法在有无相应的错误文本在过程中调用控件的<xref:System.Windows.Forms.Control.Validated>事件，具体取决于控件中的内容。  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.GetIconAlignment(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconAlignment(System.Windows.Forms.Control,System.Windows.Forms.ErrorIconAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="SetIconPadding">
      <MemberSignature Language="C#" Value="public void SetIconPadding (System.Windows.Forms.Control control, int padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIconPadding(class System.Windows.Forms.Control control, int32 padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.SetIconPadding(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIconPadding(System::Windows::Forms::Control ^ control, int padding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="padding" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">要为其设置空白的 <c>control</c>。</param>
        <param name="padding">要在图标与 <c>control</c>. 之间添加的像素数。</param>
        <summary>设置指定控件和错误图标之间应保留的额外空间量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 很多图标通常具有中心图像，周围的额外空间，因此需要额外的空间时，可能才是必需的填充值。 填充值可以是正数或负数。 负值导致重叠的控件的边缘的图标。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.ErrorProvider>类通知数据输入错误的用户。 该示例创建<xref:System.Windows.Forms.Form>包含<xref:System.Windows.Forms.TextBox>控件，<xref:System.Windows.Forms.NumericUpDown>控件，和一个<xref:System.Windows.Forms.ComboBox>控制，每个验证其内容和<xref:System.Windows.Forms.ErrorProvider>为每个控件。 该示例设置错误图标选项使用<xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A>和<xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A>属性和<xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A>和<xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A>方法。 <xref:System.Windows.Forms.ErrorProvider.SetError%2A>方法在有无相应的错误文本在过程中调用控件的<xref:System.Windows.Forms.Control.Validated>事件，具体取决于控件中的内容。  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.GetIconPadding(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconAlignment(System.Windows.Forms.Control,System.Windows.Forms.ErrorIconAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site {  void set(System::ComponentModel::ISite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.ComponentModel.Component" /> 的 <see cref="T:System.ComponentModel.ISite" />。</summary>
        <value>为与 <see cref="T:System.ComponentModel.Component" /> 关联的 <see cref="T:System.ComponentModel.ISite" />；如果 <see cref="T:System.ComponentModel.IContainer" /> 中未封装 <see cref="T:System.ComponentModel.Component" />，<see cref="T:System.ComponentModel.Component" /> 不具备与之关联的 <see cref="T:System.ComponentModel.ISite" />，或从其 <see cref="T:System.ComponentModel.IContainer" /> 中删除了 <see cref="T:System.ComponentModel.Component" />，则为 null。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.ComponentModel.Component.Site" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用信号通知对象初始化即将开始。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用信号通知对象初始化已完成。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含有关组件的数据的对象。</summary>
        <value>一个包含该控件相关数据的对象。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性来存储有关组件的自定义数据。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBinding">
      <MemberSignature Language="C#" Value="public void UpdateBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.UpdateBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供更新 <see cref="P:System.Windows.Forms.ErrorProvider.DataSource" />、<see cref="P:System.Windows.Forms.ErrorProvider.DataMember" /> 和错误文本的绑定的方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，调用此方法之后你调用了, <xref:System.Windows.Forms.ErrorProvider.BindToDataAndErrors%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>