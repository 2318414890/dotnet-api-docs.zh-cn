<Type Name="TaskbarItemInfo" FullName="System.Windows.Shell.TaskbarItemInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fb85c4a247fa33da857f680a63bca1e14774daf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36464259" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TaskbarItemInfo : System.Windows.Freezable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TaskbarItemInfo extends System.Windows.Freezable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.TaskbarItemInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TaskbarItemInfo&#xA;Inherits Freezable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskbarItemInfo sealed : System::Windows::Freezable" />
  <TypeSignature Language="F#" Value="type TaskbarItemInfo = class&#xA;    inherit Freezable" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示有关任务栏缩略图显示方式的信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.TaskbarItemInfo>类提供的托管的包装[!INCLUDE[win7](~/includes/win7-md.md)]任务栏功能。 有关 Windows 外壳程序和本机任务栏 Api 的详细信息，请参阅[任务栏扩展](http://go.microsoft.com/fwlink/?LinkId=178479)。 <xref:System.Windows.Shell.TaskbarItemInfo> 作为公开<xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=nameWithType>依赖项属性<xref:System.Windows.Window>。  
  
 [!INCLUDE[win7](~/includes/win7-md.md)]任务栏提供增强的功能，使你能够使用任务栏项目以传达给用户的状态，并且最小化的窗口或将其隐藏公开常见任务。 通过公开的功能<xref:System.Windows.Shell.TaskbarItemInfo>类不可在 Windows 的版本比[!INCLUDE[win7](~/includes/win7-md.md)]。 应用程序使用<xref:System.Windows.Shell.TaskbarItemInfo>类仍可以在早期版本的 Windows 中运行; 但是，这些任务栏增强功能在早期版本中不可用。  
  
 在[!INCLUDE[win7](~/includes/win7-md.md)]，任务栏的部分功能可能不可用，具体取决于用户的设置。 例如，任务栏功能将不可用如果[!INCLUDE[TLA#tla_aero](~/includes/tlasharptla-aero-md.md)]被禁用或如果启动应用程序使用提升的权限。 你的应用程序应提供的其他方式与用户交互，不依赖于中的增强的任务栏功能[!INCLUDE[win7](~/includes/win7-md.md)]。  
  
 在通知区域中，这是在任务栏最右侧，程序图标通常用于传达给用户的应用程序状态。 默认情况下，[!INCLUDE[win7](~/includes/win7-md.md)]任务栏隐藏通知区域中的程序图标。 但是，您可以设置<xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>属性将图像添加到任务栏按钮以传达状态，如消息处理应用程序中的联机状态。 将覆盖图像允许用户查看应用程序状态，即使它们不能看到的通知区域中的程序图标。 你也可以显示通过设置任务栏按钮中运行任务的进度<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>和<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>属性。  
  
 [!INCLUDE[win7](~/includes/win7-md.md)]任务栏显示应用程序的缩略图时你将鼠标指针移到任务栏按钮。 默认情况下显示整个应用程序窗口。 你可以指定窗口，以通过设置显示缩略图中的特定部分<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>属性。 你还可以指定<xref:System.Windows.Shell.TaskbarItemInfo.Description%2A>任务栏缩略图上方的工具提示中显示。 即使在由于用户设置而无法查看缩略图时，将显示工具提示。  
  
 可以将按钮添加到任务栏缩略图用于访问常见任务而无需切换到应用程序窗口。 例如，窗口媒体播放器提供，暂停，正向播放，并让你的后退按钮控制媒体从任务栏缩略图的播放应用程序最小化时。 在任务栏缩略图中的按钮都由<xref:System.Windows.Shell.ThumbButtonInfo>对象，并包含在<xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A>集合。  
  
 下图显示的增强的功能[!INCLUDE[win7](~/includes/win7-md.md)]任务栏。  
  
 ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png "任务栏项目信息示例")  
Windows 任务栏增强功能  
  
   
  
## Examples  
 下面的示例演示如何创建<xref:System.Windows.Shell.TaskbarItemInfo>标记中。 <xref:System.Windows.Shell.TaskbarItemInfo>包含一套<xref:System.Windows.Shell.ThumbButtonInfo>提供从任务栏项目的播放和停止命令的访问的对象。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 下面的标记和代码显示在其完整的上下文中前面的示例。 应用程序使用<xref:System.ComponentModel.BackgroundWorker>从 0 计数到 100，并在用户界面中显示其进度。 任务可以启动和停止从任务栏预览版。 在任务栏按钮显示进度。  
  
 [!code-xaml[Shell_TaskbarItemSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#001)]  
  
 [!code-csharp[Shell_TaskbarItemSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[Shell_TaskbarItemSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskbarItemInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.TaskbarItemInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskbarItemInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Shell.TaskbarItemInfo" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="taskbarItemInfo.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置任务栏项工具提示的文本。</summary>
        <value>任务栏项工具提示的文本。 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当鼠标指针位于任务栏按钮上方时，将上面任务栏缩略图显示工具提示。 如果由于用户设置而未显示任务栏缩略图，仍将显示工具提示。  
  
 下图显示任务栏<xref:System.Windows.Shell.TaskbarItemInfo.Description%2A>工具提示。  
  
 ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png "任务栏项目信息示例")  
Windows 任务栏说明  
  
   
  
## Examples  
 下面的示例演示如何创建<xref:System.Windows.Shell.TaskbarItemInfo>以标记以及一组<xref:System.Windows.Shell.TaskbarItemInfo.Description%2A>属性。 此示例摘自更大的示例为提供<xref:System.Windows.Shell.TaskbarItemInfo>类。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DescriptionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DescriptionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DescriptionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.DescriptionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DescriptionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DescriptionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DescriptionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.DescriptionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.Description" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Overlay">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource Overlay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource Overlay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.Overlay" />
      <MemberSignature Language="VB.NET" Value="Public Property Overlay As ImageSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageSource ^ Overlay { System::Windows::Media::ImageSource ^ get(); void set(System::Windows::Media::ImageSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Overlay : System.Windows.Media.ImageSource with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.Overlay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在任务栏按钮中的程序图标上方显示的图像。</summary>
        <value>在任务栏按钮中的程序图标上方显示的图像。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以将映像添加到任务栏按钮传达给用户的应用程序状态中的程序图标。 在覆盖区上使用静态或动态<xref:System.Windows.Media.ImageSource>置于中任务栏按钮的图标的右下角。 如果用户设置为显示小图标任务栏，不会显示在覆盖区。  
  
 在通知区域中，这是在任务栏最右侧，程序图标通常用于传达给用户的应用程序状态。 在[!INCLUDE[win7](~/includes/win7-md.md)]，程序图标的通知区域中默认情况下，隐藏，因此，很少用于传达状态。 你可以使用中的任务栏按钮覆盖[!INCLUDE[win7](~/includes/win7-md.md)]传达状态，当处于隐藏状态通知区域中的图标。 你的应用程序可以检测的 Windows 版本，并提供适合于操作系统的方式的通知。  
  
 覆盖图像呈现按适当的大小。 如果<xref:System.Windows.Media.ImageSource>表示<xref:System.Drawing.Icon>，还使用适当的位深度。  
  
 下图显示任务栏<xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>。  
  
 ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png "任务栏项目信息示例")  
Windows 任务栏覆盖  
  
   
  
## Examples  
 下面的示例演示如何创建<xref:System.Windows.Shell.TaskbarItemInfo>以标记以及一组<xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>属性。 此示例摘自更大的示例为提供<xref:System.Windows.Shell.TaskbarItemInfo>类。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 下面的示例演示如何在代码中设置 <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> 属性。  
  
 [!code-csharp[Shell_TaskbarItemSample#121](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#121)]
 [!code-vb[Shell_TaskbarItemSample#121](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#121)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Environment.OSVersion" />
      </Docs>
    </Member>
    <Member MemberName="OverlayProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OverlayProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OverlayProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.OverlayProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OverlayProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OverlayProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OverlayProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.OverlayProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.Overlay" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressState">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.TaskbarItemProgressState ProgressState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Shell.TaskbarItemProgressState ProgressState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" />
      <MemberSignature Language="VB.NET" Value="Public Property ProgressState As TaskbarItemProgressState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::TaskbarItemProgressState ProgressState { System::Windows::Shell::TaskbarItemProgressState get(); void set(System::Windows::Shell::TaskbarItemProgressState value); };" />
      <MemberSignature Language="F#" Value="member this.ProgressState : System.Windows.Shell.TaskbarItemProgressState with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.TaskbarItemProgressState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在任务栏按钮中显示进度指示器的方式。</summary>
        <value>一个枚举值，该值指示在任务栏按钮中显示进度指示器的方式。 默认值为 <see cref="F:System.Windows.Shell.TaskbarItemProgressState.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以通过显示进度指示器中的传达的长时间运行任务的进度[!INCLUDE[win7](~/includes/win7-md.md)]任务栏按钮。 指示器的颜色由<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>属性，其中包含之一<xref:System.Windows.Shell.TaskbarItemProgressState>枚举值。 当<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>是<xref:System.Windows.Shell.TaskbarItemProgressState.Normal>，该标记是绿色。 当<xref:System.Windows.Shell.TaskbarItemProgressState.Paused>，该标记是黄色。 当<xref:System.Windows.Shell.TaskbarItemProgressState.Error>，该标记是红色。 对于这些状态，<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>属性确定的进度指示器的填充量任务栏按钮。 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 对于其他值，将忽略<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>。 <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> 显示跨整个任务栏按钮闪烁的绿色指示器。 有关显示没有指示器<xref:System.Windows.Shell.TaskbarItemProgressState.None>。  
  
 下图显示中的任务栏进度指示器<xref:System.Windows.Shell.TaskbarItemProgressState.Normal>状态。  
  
 ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png "任务栏项目信息示例")  
Windows 任务栏进度指示器  
  
   
  
## Examples  
 下面的示例演示如何在代码中设置 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> 属性。 将状态设置的处理程序中<xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted?displayProperty=nameWithType>事件，它指示是否由用户已停止的后台任务以错误结束或正常完成。 此示例摘自更大的示例为提供<xref:System.Windows.Shell.TaskbarItemInfo>类。  
  
 [!code-csharp[Shell_TaskbarItemSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[Shell_TaskbarItemSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ProgressStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ProgressStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProgressStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ProgressStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ProgressStateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressValue">
      <MemberSignature Language="C#" Value="public double ProgressValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ProgressValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" />
      <MemberSignature Language="VB.NET" Value="Public Property ProgressValue As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ProgressValue { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.ProgressValue : double with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示任务栏按钮中进度指示器的填满状态。</summary>
        <value>一个值，该值指示任务栏按钮中进度指示器的填满状态。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>属性表示为介于 0.0 和 1.0 之间的值。 较小且更大的数字将被强制为这些边界内。 <xref:System.Double.NaN> 被强制转换为 0。  
  
 你可以通过显示进度指示器中的传达的长时间运行任务的进度[!INCLUDE[win7](~/includes/win7-md.md)]任务栏按钮。 指示器的颜色由<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>属性，其中包含之一<xref:System.Windows.Shell.TaskbarItemProgressState>枚举值。 如果<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>属性是<xref:System.Windows.Shell.TaskbarItemProgressState.Normal>， <xref:System.Windows.Shell.TaskbarItemProgressState.Paused>，或<xref:System.Windows.Shell.TaskbarItemProgressState.Error>、<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>属性确定的进度指示器的填充度。 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 对于的某些值，将忽略<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>。 <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> 显示跨整个任务栏按钮闪烁的绿色指示器。 有关显示没有指示器<xref:System.Windows.Shell.TaskbarItemProgressState.None>。  
  
 下图显示了与任务栏进度指示器<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>为 82%。  
  
 ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png "任务栏项目信息示例")  
Windows 任务栏进度指示器  
  
   
  
## Examples  
 下面的示例演示如何在代码中设置 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 属性。 中的处理程序设置的值<xref:System.ComponentModel.BackgroundWorker.ProgressChanged?displayProperty=nameWithType>事件以指示当前的后台任务的进度。 此示例摘自更大的示例为提供<xref:System.Windows.Shell.TaskbarItemInfo>类。  
  
 [!code-csharp[Shell_TaskbarItemSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[Shell_TaskbarItemSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressValueProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ProgressValueProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ProgressValueProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProgressValueProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ProgressValueProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ProgressValueProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbButtonInfos">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.ThumbButtonInfoCollection ThumbButtonInfos { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Shell.ThumbButtonInfoCollection ThumbButtonInfos" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" />
      <MemberSignature Language="VB.NET" Value="Public Property ThumbButtonInfos As ThumbButtonInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::ThumbButtonInfoCollection ^ ThumbButtonInfos { System::Windows::Shell::ThumbButtonInfoCollection ^ get(); void set(System::Windows::Shell::ThumbButtonInfoCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThumbButtonInfos : System.Windows.Shell.ThumbButtonInfoCollection with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.ThumbButtonInfoCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> 关联的 <see cref="T:System.Windows.Window" /> 对象的集合。</summary>
        <value>与 <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> 关联的 <see cref="T:System.Windows.Window" /> 对象的集合。 默认值为空集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以将按钮添加到任务栏缩略图，以允许用户访问的常见任务不需要他们切换到应用程序窗口。 例如，Windows Media Player 提供的应用程序最小化时让用户控制媒体的播放，从任务栏缩略图的播放、 暂停、 转发和后按钮。 在任务栏缩略图中的按钮都由<xref:System.Windows.Shell.ThumbButtonInfo>对象，并包含在<xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A>集合。  
  
 [!INCLUDE[win7](~/includes/win7-md.md)] Shell 任务栏缩略图中允许的最大七个按钮。 如果超过七<xref:System.Windows.Shell.ThumbButtonInfo>对象添加到<xref:System.Windows.Shell.ThumbButtonInfoCollection>，其他对象被视为溢出。 当按钮是<xref:System.Windows.Visibility.Collapsed>、 它不具有任何可见的元素，和为其不保留任何空间。 在此示例中为其他按钮中从<xref:System.Windows.Shell.ThumbButtonInfoCollection>显示溢出。  
  
 下图显示了任务栏预览的两个 thumb 按钮的集合。  
  
 ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png "任务栏项目信息示例")  
Windows 任务栏 Thumb 按钮  
  
   
  
## Examples  
 下面的示例演示如何创建<xref:System.Windows.Shell.TaskbarItemInfo>标记中。 <xref:System.Windows.Shell.TaskbarItemInfo>包含一套<xref:System.Windows.Shell.ThumbButtonInfo>提供从任务栏项目的播放和停止命令的访问的对象。 此示例摘自更大的示例为提供<xref:System.Windows.Shell.TaskbarItemInfo>类。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbButtonInfosProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ThumbButtonInfosProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ThumbButtonInfosProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThumbButtonInfosProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ThumbButtonInfosProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThumbButtonInfosProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbnailClipMargin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness ThumbnailClipMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness ThumbnailClipMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property ThumbnailClipMargin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness ThumbnailClipMargin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.ThumbnailClipMargin : System.Windows.Thickness with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定在任务栏缩略图中显示的应用程序窗口工作区的部件。</summary>
        <value>一个值，该值指定在任务栏缩略图中显示的应用程序窗口工作区的部件。 默认值为空 <see cref="T:System.Windows.Thickness" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，[!INCLUDE[win7](~/includes/win7-md.md)]任务栏显示应用程序窗口工作区的缩放缩略图。 你可以设置<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>属性指定的缩略图中显示的客户端窗口裁剪的区域。 例如，如果你想要专注于的窗口内容的缩略图，而排除应用程序工具栏，则此属性可。 此属性不能用于在尚未显示在应用程序窗口中的缩略图中显示内容。  
  
 指定的区域设置显示缩略图中<xref:System.Windows.Thickness>区域的边框。 边框开始客户端窗口的边缘，并指定的量向内扩展。 缩略图中将显示在边框内的内容。  
  
 下图显示定义的边框<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>。  
  
 ![缩略图剪辑边距](~/add/media/wpfshell-clipmargin.png "缩略图剪辑边距")  
缩略图剪辑边距边框  
  
 下图显示剪切的缩略图预览。  
  
 ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png "任务栏项目信息示例")  
Windows 任务栏缩略图预览  
  
   
  
## Examples  
 下面的示例演示如何创建<xref:System.Windows.Shell.TaskbarItemInfo>以标记以及一组<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>属性。 此示例摘自更大的示例为提供<xref:System.Windows.Shell.TaskbarItemInfo>类。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbnailClipMarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ThumbnailClipMarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ThumbnailClipMarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThumbnailClipMarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ThumbnailClipMarginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThumbnailClipMarginProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>