<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d714dfba7e3eb394ee2a8bfb486881b99bcb3a6" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37751168" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>[Json.NET](http://www.newtonsoft.com/json) should be used serialization and deserialization. Provides serialization and deserialization functionality for AJAX-enabled applications.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer>类在内部用于通过异步通信层进行序列化和反序列化浏览器和 Web 服务器之间传递数据。 无法访问该实例的序列化程序。 但是，此类公开一个公共 API。 因此，可以使用类时要在托管代码中使用 JavaScript 对象表示法 (JSON)。  
  
 若要将对象序列化，使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>方法。 若要反序列化的 JSON 字符串，使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>或<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>方法。 若要进行序列化和反序列化不本机支持的类型<xref:System.Web.Script.Serialization.JavaScriptSerializer>，通过使用来实现自定义转换器<xref:System.Web.Script.Serialization.JavaScriptConverter>类。 然后使用注册转换器<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>方法。  
  
## <a name="mapping-between-managed-types-and-json"></a>托管的类型与 JSON 之间的映射  
 下表显示了序列化过程托管的类型与 JSON 之间的映射。 以本机方式支持这些托管的类型<xref:System.Web.Script.Serialization.JavaScriptSerializer>。 您反序列化时从 JSON 字符串到托管类型，将应用相同的映射。 但是，非对称; 可以是反序列化并非所有可序列化的托管的类型可以将反序列化为 JSON。  
  
> [!NOTE]
>  多维数组序列化为一维数组，并应将其用作平面数组。  
  
|托管的类型|JSON 等效项|  
|------------------|---------------------|  
|<xref:System.String> (UTF-8 编码仅)。|String|  
|<xref:System.Char>|String|  
|单一 null 字符 （例如，\0)|null|  
|<xref:System.Boolean>|布尔值。 在 JSON 中以表示`true`或 `false`|  
|`null` (`null`的对象引用和<xref:System.Nullable>值类型)。|字符串值为 null|  
|<xref:System.DBNull>|字符串值为 null|  
|基元数值 （或数字兼容） 类型： <xref:System.Byte>， <xref:System.SByte>， <xref:System.Int16>， <xref:System.Int32>， <xref:System.Int64>， <xref:System.UInt16>， <xref:System.UInt32>， <xref:System.UInt64>， <xref:System.Double>，和<xref:System.Single>。 使用的区域性不变的字符串表示形式。|数字|  
|<xref:System.DateTime>|在 JSON 中以所表示的日期对象"\\日期 （计时周期数）/\\/"。 计时周期数是正数或负数的长值，该值指示 01 1970 年 1 月，UTC 午夜起经过的计时周期 （毫秒） 数。<br /><br /> 支持的最大值是的日期<xref:System.DateTime.MaxValue>(12/31/9999 11:59:59 PM) 支持的最小日期值为<xref:System.DateTime.MinValue>(0001 年 1 月 1 日上午 12:00:00)。|  
|整数类型的枚举|枚举值的整数等效项|  
|类型实现<xref:System.Collections.IEnumerable>或<xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>，也不实现<xref:System.Collections.IDictionary>或<xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>。 这包括类型，如<xref:System.Array>， <xref:System.Collections.ArrayList>，和<xref:System.Collections.Generic.List%601>。|数组，它使用 JSON 数组语法|  
|类型实现<xref:System.Collections.IDictionary>或<xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>。 这包括类型，如<xref:System.Collections.Generic.Dictionary%602>和<xref:System.Collections.Hashtable>。|使用 JSON 字典语法的 JavaScript 对象|  
|自定义具体 （非抽象） 类型，已有的公共实例属性 get 访问器或公共实例字段。<br /><br /> 请注意与标记为公共的只写属性、 公共属性或公共字段特性<xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>，且这些类型的公共索引的属性会被忽略。|使用 JSON 字典语法的 JavaScript 对象。 名为"__type"的特殊元数据属性是包括在内，以确保正确反序列化。 请确保公共实例属性具有 get 和 set 访问器以确保正确反序列化。|  
|<xref:System.Guid>|GUID 的字符串表示形式|  
|<xref:System.Uri>|返回值的字符串表示形式 <xref:System.Uri.GetComponents%2A>|  
  
   
  
## Examples  
 第一个示例提供了如何序列化和反序列化数据对象的简单说明。 它要求类名称如下所示的人员。  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 下面的示例演示使用的更复杂和完成项目<xref:System.Web.Script.Serialization.JavaScriptSerializer>类来保存和还原使用 JSON 序列化的对象的状态。 此代码使用为提供的自定义转换器<xref:System.Web.Script.Serialization.JavaScriptConverter>类。  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has no type resolver.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实例<xref:System.Web.Script.Serialization.JavaScriptSerializer>类没有类型解析程序不包括在序列化的 JSON 字符串中的类型元数据属性 （名为"__type"）。 类型元数据属性由<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>和<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>JSON 字符串转换为类型的方法来确定相应托管。 有关类型解析程序的信息，请参阅<xref:System.Web.Script.Serialization.JavaScriptTypeResolver>类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">The custom type-resolver object.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has a custom type resolver.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 它序列化对象时<xref:System.Web.Script.Serialization.JavaScriptSerializer>类使用`resolver`参数，以确定要包括在序列化的 JSON 字符串类型的元数据属性 ("__type") 中的相应值。 同样，当<xref:System.Web.Script.Serialization.JavaScriptSerializer>类反序列化的 JSON 字符串，它解析为相应的托管类型通过使用解析程序实例的类型元数据属性值。  
  
 可以设置`resolver`参数`null`，这相当于调用<xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>构造函数。  
  
 实例<xref:System.Web.Script.Serialization.JavaScriptSerializer>调用 Web 服务客户端脚本中的使用特殊类型解析程序所使用的异步通信层。 此类型解析程序将可反序列化的类型限制为 Web 服务的方法签名或那些具有中定义的那些<xref:System.Web.Script.Services.GenerateScriptTypeAttribute>应用。 不能以编程方式修改该内置类型解析器。  
  
> [!IMPORTANT]
>  使用与自定义的类型解析器初始化此对象的实例可能会造成安全风险。 此对象只能用于受信任的数据。 有关详细信息，请参阅[数据验证](https://www.owasp.org/index.php/Data_Validation)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="targetType">The type to convert the object to.</param>
        <summary>Converts the specified object to the specified type.</summary>
        <returns>The serialized JSON string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.Script.Serialization.JavaScriptSerializer>实例序列化一个类型为其注册自定义转换器，序列化程序调用<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>方法以获取将转换为 JSON 格式的字符串的名称/值对的字典。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>方法还会引发异常，如果对象图太过复杂，或已注册的实例<xref:System.Web.Script.Serialization.JavaScriptConverter>导致转换器递归。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The resulting JSON-formatted string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</exception>
        <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">为类型<c>obj</c>将被转换。</typeparam>
        <param name="obj">The object to convert.</param>
        <summary>Converts the given object to the specified type.</summary>
        <returns>The object that has been converted to the target type.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>方法会尝试将由表示该对象实例转换`obj`类型的实例到`T`。 在此转换过程则维护对象引用相等性不能保证。 因此，您不能假设`obj`和`T`引用同一对象。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> 旨在实现从派生的类时要使用<xref:System.Web.Script.Serialization.JavaScriptConverter>。 转换器代码必须能够获取一个值，在序列化程序将传递给它，字典中，然后将该值转换为类型的实例`T`。 而不是重新实现自定义转换代码来执行此任务，可以调用<xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>从转换器代码的方法。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>方法来获取<xref:System.Web.UI.WebControls.ListItem>对象从传递给转换器的字典中的值。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.Script.Serialization.JavaScriptSerializer>类。  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the type resolver that is associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).  -or-  An attempt was made to convert <paramref name="obj" /> to an array-like managed type, which is not supported for use as a deserialization target.  -or-  It is not possible to convert <paramref name="obj" /> to <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="obj" /> includes member definitions that are not available on type <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="input">The JSON string to deserialize.</param>
        <param name="targetType">The type of the resulting object.</param>
        <summary>Converts a JSON-formatted string to an object of the specified type.</summary>
        <returns>The deserialized object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此反序列化方法将不会强制转换为特定类型，方法的对象图的根的<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>方法执行。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The length of <paramref name="input" /> exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.  -or-  <paramref name="input" /> contains an unexpected character sequence.  -or-  <paramref name="input" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="input" /> includes member definitions that are not available on the target type.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).  -or-  An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.  -or-  It is not possible to convert <paramref name="input" /> to the target type.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">所生成对象的类型。</typeparam>
        <param name="input">The JSON string to be deserialized.</param>
        <summary>Converts the specified JSON string to an object of type <paramref name="T" />.</summary>
        <returns>The deserialized object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>方法等效于先使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>方法来获取对象图，然后再尝试强制转换结果，以便键入`T`。  
  
 在反序列化期间序列化程序的当前类型解析程序引用，则用于确定转换都放在数组和字典类型的元素时要使用的托管的类型。 因此，反序列化过程，循环访问的所有嵌套元素`input`。 有关类型解析程序的详细信息，请参阅<xref:System.Web.Script.Serialization.JavaScriptTypeResolver>类。  
  
   
  
## Examples  
下面的示例提供了如何序列化和反序列化数据对象的简单说明。  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

它需要一个名为类`Person`，下面的示例所示。 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.  -or-  <paramref name="input" /> contains an unexpected character sequence.  -or-  <paramref name="input" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="input" /> includes member definitions that are not available on type <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract types or an interface).  -or-  An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.  -or-  It is not possible to convert <paramref name="input" /> to <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">The JSON string to be deserialized.</param>
        <summary>Converts the specified JSON string to an object graph.</summary>
        <returns>The deserialized object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此反序列化方法将不会强制转换为特定类型的对象图的根与<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.  -or-  <paramref name="input" /> contains an unexpected character sequence.  -or-  <paramref name="input" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="input" /> includes member definitions that are not available on the target type.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).  -or-  An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.  -or-  It is not possible to convert <paramref name="input" /> to the target type.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum length of JSON strings that are accepted by the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class.</summary>
        <value>JSON 字符串的最大长度。 默认值为 2097152 个字符，等效于 4 MB 的 Unicode 字符串数据。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A>属性适用于仅当显式创建的实例时才<xref:System.Web.Script.Serialization.JavaScriptSerializer>类。 使用`jsonSerialization`元素的配置文件设置的异步通信层使用的内部序列化程序实例的最大长度。 有关序列化的配置元素的详细信息，请参阅[如何： 配置 Microsoft Ajax 中的 ASP.NET 服务](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value that is less than one.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the limit for constraining the number of object levels to process.</summary>
        <value>对象级别的数量。 默认值为 100。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A>属性引用的对象层次结构中的级别数的<xref:System.Web.Script.Serialization.JavaScriptSerializer>将处理在以下情况下：  
  
-   当<xref:System.Web.Script.Serialization.JavaScriptSerializer>类反序列化的 JSON 字符串。  
  
-   当<xref:System.Web.Script.Serialization.JavaScriptSerializer>类序列化期间遍历对象图。  
  
 值<xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A>仅当显式创建的实例时才适用<xref:System.Web.Script.Serialization.JavaScriptSerializer>类。 使用`jsonSerialization`元素的配置文件以设置对象级别来处理异步通信层使用的内部序列化程序实例的数量。 有关序列化的配置元素的详细信息，请参阅[如何： 配置 Microsoft Ajax 中的 ASP.NET 服务](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value that is less than one.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters">An array that contains the custom converters to be registered.</param>
        <summary>Registers a custom converter with the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以注册使用的一个或多个自定义转换器<xref:System.Web.Script.Serialization.JavaScriptSerializer>实例使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>方法。 注册自定义转换器，<xref:System.Web.Script.Serialization.JavaScriptSerializer>使用托管的类型进行序列化和反序列化 JSON 字符串转换为托管类型转换器。  
  
 有多个转换器可注册具有相同<xref:System.Web.Script.Serialization.JavaScriptSerializer>实例，并且这些转换器可以指示对相同类型的支持。 因此，为特定类型注册的最后一个转换器是指将由<xref:System.Web.Script.Serialization.JavaScriptSerializer>类型进行序列化。  
  
 有关自定义转换器的详细信息，请参阅<xref:System.Web.Script.Serialization.JavaScriptConverter>类。  
  
   
  
## Examples  
 下面的示例演示如何注册自定义转换器，且有<xref:System.Web.Script.Serialization.JavaScriptSerializer>实例。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.Script.Serialization.JavaScriptSerializer>类。  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="converters" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converts an object to a JSON string.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to serialize.</param>
        <summary>Converts an object to a JSON string.</summary>
        <returns>The serialized JSON string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.Script.Serialization.JavaScriptSerializer>实例序列化一个类型为其注册自定义转换器，序列化程序调用<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>方法以获取将转换为 JSON 字符串的名称/值对的字典。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>方法还会引发异常，如果对象图太过复杂，或已注册的实例<xref:System.Web.Script.Serialization.JavaScriptConverter>导致转换器递归。  
  
   
  
## Examples  
下面的示例提供了如何序列化和反序列化数据对象的简单说明。  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

它需要一个名为类`Person`，下面的示例所示。 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</exception>
        <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj">The object to serialize.</param>
        <param name="output">The <see cref="T:System.Text.StringBuilder" /> object that is used to write the JSON string.</param>
        <summary>Serializes an object and writes the resulting JSON string to the specified <see cref="T:System.Text.StringBuilder" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.Script.Serialization.JavaScriptSerializer>实例序列化一个类型为其注册自定义转换器，序列化程序调用<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>方法以获取将转换为 JSON 字符串的名称/值对的字典。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>方法还会引发异常，如果对象图太过复杂，或已注册的实例<xref:System.Web.Script.Serialization.JavaScriptConverter>导致转换器递归。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</exception>
        <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="output" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>