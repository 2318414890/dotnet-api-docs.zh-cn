<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptTypeResolver abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ddfa4-101">提供用于实现自定义类型解析器的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-101">Provides the abstract base class for implementing a custom type resolver.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddfa4-102"><xref:System.Web.Script.Serialization.JavaScriptTypeResolver>类提供的服务：</span><span class="sxs-lookup"><span data-stu-id="ddfa4-102">The <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class provides the services for:</span></span>  
  
-   <span data-ttu-id="ddfa4-103">将托管类型转换的类型为字符串值通过信息<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-103">Converting managed type information to a string value through the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> method.</span></span>  
  
-   <span data-ttu-id="ddfa4-104">将字符串值解析为相应托管类型通过<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-104">Resolving a string value back to the appropriate managed type through the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> method.</span></span>  
  
 <span data-ttu-id="ddfa4-105">当<xref:System.Web.Script.Serialization.JavaScriptSerializer>对象将序列化自定义类型，它可以选择性地包含在序列化的 JavaScript 对象表示法 (JSON) 字符串中包含类型信息的值。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-105">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object serializes custom types, it can optionally include in the serialized JavaScript Object Notation (JSON) string a value that contains type information.</span></span> <span data-ttu-id="ddfa4-106">在反序列化期间<xref:System.Web.Script.Serialization.JavaScriptSerializer>然后托管此字符串值，以便确定适当的引用，可以键入的 JSON 字符串转换到。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-106">During deserialization, <xref:System.Web.Script.Serialization.JavaScriptSerializer> can then reference this string value to determine the appropriate managed type to which the JSON string will be converted.</span></span>  
  
 <span data-ttu-id="ddfa4-107">如果你提供到类型解析程序<xref:System.Web.Script.Serialization.JavaScriptSerializer>实例，将使用序列化程序<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>和<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>方法之间进行映射的托管的类型和字符串值在序列化和反序列化过程中，分别。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-107">If you provide a type resolver to the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, the serializer will use the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> and <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> methods to map between the managed type and the string value during the serialization and deserialization process, respectively.</span></span>  
  
 <span data-ttu-id="ddfa4-108"><xref:System.Web.Script.Serialization.JavaScriptTypeResolver>类是适用于基<xref:System.Web.Script.Serialization.SimpleTypeResolver>类，该类提供使用托管的类型程序集限定名称的类型冲突解决程序的实现。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-108">The <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class is the base class for the <xref:System.Web.Script.Serialization.SimpleTypeResolver> class, which provides an implementation of a type resolver that uses the managed type assembly-qualified name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddfa4-109">下面的示例演示如何创建自定义类型解析程序。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-109">The following example demonstrates how to create a custom type resolver.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="ddfa4-110">当实现类型解析程序，通过返回的字符串<see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />方法必须映射到相同的托管类型时的字符串值传递给<see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />方法。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-110">When you implement a type resolver, the string that is returned by the <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> method must map back to the same managed type when the string value is passed to the <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> method.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ddfa4-111">初始化 <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-111">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveType(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="ddfa4-112">托管类型的名称。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-112">The name of the managed type.</span></span></param>
        <summary><span data-ttu-id="ddfa4-113">当在派生类中重写时，返回与指定类型名称相关联的 <see cref="T:System.Type" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-113">When overridden in a derived class, returns the <see cref="T:System.Type" /> object that is associated with the specified type name.</span></span></summary>
        <returns><span data-ttu-id="ddfa4-114">与指定类型名称相关联的 <see cref="T:System.Type" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-114">The <see cref="T:System.Type" /> object that is associated with the specified type name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddfa4-115">当关联的类型解析程序<xref:System.Web.Script.Serialization.JavaScriptSerializer>实例，序列化程序使用<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>方法时它循环访问 JSON 字符串以确定特定于托管的 JSON 类型应转换到的目标的类型。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-115">When a type resolver is associated with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, the serializer uses the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> method when it iterates through a JSON string to determine the specific managed type to which the JSON type should be converted.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="ddfa4-116">给定一个字符串值，则类型解析器必须返回<see cref="T:System.Type" />表示相应的对象托管类型。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-116">Given a string value, the type resolver must return a <see cref="T:System.Type" /> object that represents the corresponding managed type.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ddfa4-117">要解析的托管类型。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-117">The managed type to be resolved.</span></span></param>
        <summary><span data-ttu-id="ddfa4-118">当在派生类中重写时，返回指定的 <see cref="T:System.Type" /> 对象的类型名称。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-118">When overridden in a derived class, returns the type name for the specified <see cref="T:System.Type" /> object.</span></span></summary>
        <returns><span data-ttu-id="ddfa4-119">指定托管类型的名称。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-119">The name of the specified managed type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddfa4-120">如果<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>方法返回`null`或<xref:System.String.Empty>，则类型解析程序不支持的类型。</span><span class="sxs-lookup"><span data-stu-id="ddfa4-120">If the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> method returns either `null` or <xref:System.String.Empty>, then the type resolver does not support the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>