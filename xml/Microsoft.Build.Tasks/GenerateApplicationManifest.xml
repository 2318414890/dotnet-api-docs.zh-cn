<Type Name="GenerateApplicationManifest" FullName="Microsoft.Build.Tasks.GenerateApplicationManifest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e0373cf6eb024d4105fa9f514f4eb842d3baf62" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34173867" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class GenerateApplicationManifest : Microsoft.Build.Tasks.GenerateManifestBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GenerateApplicationManifest extends Microsoft.Build.Tasks.GenerateManifestBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.GenerateApplicationManifest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GenerateApplicationManifest&#xA;Inherits GenerateManifestBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenerateApplicationManifest sealed : Microsoft::Build::Tasks::GenerateManifestBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.GenerateManifestBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c4bbf-101">实现 <c>GenerateApplicationManifest</c> 任务。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4bbf-101">Implements the <c>GenerateApplicationManifest</c> task.</span>
      </span>
      <span data-ttu-id="c4bbf-102">使用项目文件中的 <c>GenerateApplicationManifest</c> 元素创建和执行此任务。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4bbf-102">Use the <c>GenerateApplicationManifest</c> element in the project file to create and execute this task.</span>
      </span>
      <span data-ttu-id="c4bbf-103">有关用法和参数信息，请参阅 [GenerateApplicationManifest 任务](http://msdn.microsoft.com/library/a494102b-0cb2-4755-8e2a-d2c0f39fac1d)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4bbf-103">For usage and parameter information, see [GenerateApplicationManifest Task](http://msdn.microsoft.com/library/a494102b-0cb2-4755-8e2a-d2c0f39fac1d).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-104">`EntryPoint` 是一个可选<xref:Microsoft.Build.Framework.ITaskItem>`[]`指示生成的清单程序集的入口点的参数。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-104">`EntryPoint` is an optional <xref:Microsoft.Build.Framework.ITaskItem>`[]` parameter that indicates the entry point for the generated manifest assembly.</span></span> <span data-ttu-id="c4bbf-105">对于 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 部署清单，此输入指定了 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 应用程序清单。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-105">For a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment manifest, this input specifies the [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application manifest.</span></span>  
  
 <span data-ttu-id="c4bbf-106">在[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]、 [GenerateApplicationManifest 任务](http://msdn.microsoft.com/library/a494102b-0cb2-4755-8e2a-d2c0f39fac1d)需要`EntryPoint`时生成的应用程序清单。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-106">In [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], the [GenerateApplicationManifest Task](http://msdn.microsoft.com/library/a494102b-0cb2-4755-8e2a-d2c0f39fac1d) requires an `EntryPoint` when an application manifest is generated.</span></span> <span data-ttu-id="c4bbf-107">（程序集或本机清单无需 `EntryPoint`。）此要求通过生成错误强制实现"MSB3185： 未指定清单的入口点。"</span><span class="sxs-lookup"><span data-stu-id="c4bbf-107">(Assembly or native manifests do not require an `EntryPoint`.) This requirement is enforced by the build error "MSB3185: EntryPoint not specified for manifest."</span></span>  
  
 <span data-ttu-id="c4bbf-108">在[!INCLUDE[vs_orcas_long](~/includes/vs-orcas-long-md.md)]，[!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)]不会发出此错误时`EntryPoint`未指定任务参数。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-108">In [!INCLUDE[vs_orcas_long](~/includes/vs-orcas-long-md.md)], [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] does not issue this error when the `EntryPoint` task parameter is not specified.</span></span> <span data-ttu-id="c4bbf-109">相反， \<f i e d > 插入标记的子级作为\<入口点 > 标记，例如，如下所示。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-109">Instead, the \<customHostSpecified> tag is inserted as a child of the \<entryPoint> tag, for example, as follows.</span></span>  
  
```xml  
<entryPoint xmlns="urn:schemas-   
  microsoft-com:asm.v2">  
    <co.v1:customHostSpecified />  
</entryPoint>  
```  
  
 <span data-ttu-id="c4bbf-110">通过执行以下步骤，可将 DDL 依赖项添加到应用程序清单：</span><span class="sxs-lookup"><span data-stu-id="c4bbf-110">You can add DLL dependencies to the application manifest by using the following steps:</span></span>  
  
1.  <span data-ttu-id="c4bbf-111">通过使用调用解决中程序集的引用<xref:Microsoft.Build.Tasks.ResolveAssemblyReference>。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-111">Resolve the references in the assembly by using a call to <xref:Microsoft.Build.Tasks.ResolveAssemblyReference>.</span></span>  
  
2.  <span data-ttu-id="c4bbf-112">将上一个任务的输出和程序集本身传递给 <xref:Microsoft.Build.Tasks.ResolveManifestFiles>。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-112">Pass the output of the previous task and the assembly itself to <xref:Microsoft.Build.Tasks.ResolveManifestFiles>.</span></span>  
  
3.  <span data-ttu-id="c4bbf-113">使用 `Dependencies` 参数将依赖项传递给 <xref:Microsoft.Build.Tasks.GenerateApplicationManifest>。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-113">Pass the dependencies by using the `Dependencies` parameter to <xref:Microsoft.Build.Tasks.GenerateApplicationManifest>.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenerateApplicationManifest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.GenerateApplicationManifest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GenerateApplicationManifest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-114">初始化 <see cref="T:Microsoft.Build.Tasks.GenerateApplicationManifest" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-114">Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GenerateApplicationManifest" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ClrVersion">
      <MemberSignature Language="C#" Value="public string ClrVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClrVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ClrVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClrVersion { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-115">获取或设置应用程序需要的公共语言运行时 (CLR) 的最低版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-115">Gets or sets the minimum version of the Common Language Runtime (CLR) required by the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-116">应用程序需要的 CLR 的最低版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-116">The minimum version of the CLR required by the application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-117">默认情况下，值是生成系统正在使用的 CLR 版本。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-117">By default, the value is the CLR version in use by the build system.</span></span> <span data-ttu-id="c4bbf-118">如果任务生成的本机清单，将忽略此属性。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-118">If the task is generating a native manifest, this property is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConfigFile">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem ConfigFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem ConfigFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigFile As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ ConfigFile { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-119">获取或设置包含应用程序配置文件的任务项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-119">Gets or sets the task item that contains the application configuration file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-120">包含应用程序配置文件的任务项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-120">The task item that contains the application configuration file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-121">如果任务生成的本机清单，将忽略此属性。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-121">If the task is generating a native manifest, this property is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] Dependencies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Public Property Dependencies As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ Dependencies { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-122">获取或设置为生成的清单定义依赖程序集集合的项列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-122">Gets or sets an item list that defines the set of dependent assemblies for the generated manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-123">依赖程序集名称的项列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-123">An item list of dependent assembly names.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-124">每个项可以的项元数据，以指示额外的部署状态和依赖项的类型来进一步描述。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-124">Each item may be further described by item metadata to indicate additional deployment state and the kind of dependence.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ErrorReportUrl">
      <MemberSignature Language="C#" Value="public string ErrorReportUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorReportUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorReportUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorReportUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-125">获取或设置在 ClickOnce 安装期间对话框中显示的网页的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-125">Gets or sets the URL of the Web page that is displayed in dialog boxes during ClickOnce installations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-126">一个字符串值，表示网页的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-126">A string value that represents the URL of a Web page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-127">指定在 ClickOnce 安装过程中显示的对话框中显示网页。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-127">Specifies a Web page to be displayed in dialog boxes that are displayed during ClickOnce installations.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FileAssociations">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] FileAssociations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] FileAssociations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations" />
      <MemberSignature Language="VB.NET" Value="Public Property FileAssociations As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ FileAssociations { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-128">获取或设置与 ClickOnce 部署清单关联的一个或多个文件类型的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-128">Gets or sets a list of one or more file type that are associated with the ClickOnce deployment manifest.</span>
          </span>
          <span data-ttu-id="c4bbf-129">仅当目标为 [!INCLUDE[dnprdnshort](~/includes/ dnprdndnshort -md.md)] 3.5 或更高版本时，文件关联才有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-129">File associations only valid only when [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 3.5 or later is targeted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-130">与所生成清单关联的文件类型的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-130">A list of file types that are associated with the generated manifest.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-131">文件类型可以是自定义。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-131">File types can be custom.</span></span> <span data-ttu-id="c4bbf-132">以下是一种[ \<fileAssociation > 元素 （ClickOnce 应用程序）](http://msdn.microsoft.com/library/8f951b4f-54f9-412e-a9e5-af4e379fcf08):</span><span class="sxs-lookup"><span data-stu-id="c4bbf-132">The following is an example of a [\<fileAssociation> Element (ClickOnce Application)](http://msdn.microsoft.com/library/8f951b4f-54f9-412e-a9e5-af4e379fcf08):</span></span>  
  
```xml  
<FileAssociation Include=".nyt">  
    <ProgId>NewYorkTimes.Document</ProgId>  
    <DefaultIcon>nyt.ico</DefaultIcon>  
    <Description>New York Times Reader document</Description>  
</FileAssociation>  
```  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] Files { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] Files" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Files" />
      <MemberSignature Language="VB.NET" Value="Public Property Files As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ Files { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-133">获取或设置要包括在清单中的文件的完整路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-133">Gets or sets the full paths of files to include in the manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-134">包含在清单中的文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-134">Paths to files that are included in the manifest.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetObjectType">
      <MemberSignature Language="C#" Value="protected override Type GetObjectType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type GetObjectType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.GenerateApplicationManifest.GetObjectType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetObjectType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override Type ^ GetObjectType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostInBrowser">
      <MemberSignature Language="C#" Value="public bool HostInBrowser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HostInBrowser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser" />
      <MemberSignature Language="VB.NET" Value="Public Property HostInBrowser As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HostInBrowser { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-135">获取或设置应用程序是否承载于在浏览器中（与 WPF Web 浏览器应用程序一样）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-135">Gets or sets whether the application is hosted in a browser (as are WPF Web Browser Applications).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-136">一个布尔值，指示是否在浏览器中承载要部署的应用程序。如果是，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-136">A Boolean value that indicates whether the application being deployed will be hosted in a browser (<see langword="true" />), or not (<see langword="false" />).</span>
          </span>
          <span data-ttu-id="c4bbf-137">
            <see langword="true" /> 值仅适用于 WPF Web 浏览器应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-137">
              <see langword="true" /> only applies to WPF Web Browser Applications.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-138">对于 WPF Web 浏览器应用程序以外的项目类型，将其设置<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser%2A>到`false`（默认值）。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-138">For project types other than WPF Web Browser Applications, set <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser%2A> to `false` (the default value).</span></span>  
  
 <span data-ttu-id="c4bbf-139">在部署 WPF Web 浏览器应用程序时，必须设置<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-139">When you deploy a WPF Web Browser Application, you must set the <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser%2A> property to `true`.</span></span> <span data-ttu-id="c4bbf-140">这将导致`<hostInBrowser>`标记要添加到生成的应用程序清单中，启用 ClickOnce 部署项目类型提供的浏览器承载的应用程序，其中包含.xbap 文件。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-140">This causes the `<hostInBrowser>` tag to be added to the generated application manifest, enabling ClickOnce to deploy projects for browser-hosted applications, which contain .xbap files.</span></span>  
  
 <span data-ttu-id="c4bbf-141">你还必须提供应用程序联机仅通过设置<xref:Microsoft.Build.Tasks.GenerateDeploymentManifest.Install%2A>到`false`。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-141">You also have to make the application available online only by setting <xref:Microsoft.Build.Tasks.GenerateDeploymentManifest.Install%2A> to `false`.</span></span> <span data-ttu-id="c4bbf-142">如果不满足此条件，你将收到[MSBuild 错误 MSB3116](http://msdn.microsoft.com/library/bf04c587-d0e2-4d68-bbff-da9a985ea70e)。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-142">If this condition is not met, you will receive [MSBuild Error MSB3116](http://msdn.microsoft.com/library/bf04c587-d0e2-4d68-bbff-da9a985ea70e).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.Install" />
      </Docs>
    </Member>
    <Member MemberName="IconFile">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem IconFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem IconFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile" />
      <MemberSignature Language="VB.NET" Value="Public Property IconFile As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ IconFile { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-143">获取或设置应用程序的图标文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-143">Gets or sets the application's icon file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-144">要用于应用程序的图标文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-144">The icon file to use for the application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-145">应用程序图标表示在生成的应用程序清单中，并且用于**启动**菜单并在**卸载或更改程序**对话框。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-145">The application icon is expressed in the generated application manifest and is used on the **Start** menu and in the **Uninstall or change a program** dialog box.</span></span> <span data-ttu-id="c4bbf-146">如果未指定此输入，将使用默认图标。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-146">If this input is not specified, a default icon is used.</span></span> <span data-ttu-id="c4bbf-147">如果任务生成的本机清单，将忽略此属性。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-147">If the task is generating a native manifest, this property is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsolatedComReferences">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] IsolatedComReferences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] IsolatedComReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences" />
      <MemberSignature Language="VB.NET" Value="Public Property IsolatedComReferences As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ IsolatedComReferences { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-148">获取或设置要在生成清单中隔离的 COM 组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-148">Gets or sets COM components to isolate in the generated manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-149">要在生成清单中隔离的 COM 组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-149">The COM components to isolate in the generated manifest.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-150">此属性，可以隔离"免注册 COM"部署的 COM 组件。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-150">This property lets you isolate COM components for "Registration Free COM" deployment.</span></span> <span data-ttu-id="c4bbf-151">它通过自动生成具有标准 COM 注册定义一个清单适用。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-151">It works by auto-generating a manifest that has standard COM registration definitions.</span></span> <span data-ttu-id="c4bbf-152">必须在生成计算机上注册的 COM 组件。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-152">The COM components must be registered on the build computer.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ManifestType">
      <MemberSignature Language="C#" Value="public string ManifestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ManifestType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType" />
      <MemberSignature Language="VB.NET" Value="Public Property ManifestType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ManifestType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-153">获取或设置要生成的清单类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-153">Gets or sets the type of manifest to generate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-154">要生成的清单类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-154">The kind of manifest to generate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-155">此属性可以具有以下值：</span><span class="sxs-lookup"><span data-stu-id="c4bbf-155">This property can have the following values:</span></span>  
  
-   `Native`  
  
-   `ClickOnce`  
  
 <span data-ttu-id="c4bbf-156">如果未指定此属性，该任务将默认为`ClickOnce`。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-156">If this property is not specified, the task defaults to `ClickOnce`.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OnManifestLoaded">
      <MemberSignature Language="C#" Value="protected override bool OnManifestLoaded (Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnManifestLoaded(class Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestLoaded(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnManifestLoaded(Microsoft::Build::Tasks::Deployment::ManifestUtilities::Manifest ^ manifest);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifest" Type="Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" />
      </Parameters>
      <Docs>
        <param name="manifest">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManifestResolved">
      <MemberSignature Language="C#" Value="protected override bool OnManifestResolved (Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnManifestResolved(class Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.GenerateApplicationManifest.OnManifestResolved(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnManifestResolved(Microsoft::Build::Tasks::Deployment::ManifestUtilities::Manifest ^ manifest);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifest" Type="Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" />
      </Parameters>
      <Docs>
        <param name="manifest">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OSVersion">
      <MemberSignature Language="C#" Value="public string OSVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property OSVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSVersion { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-157">获取或设置应用程序所要求的操作系统 (OS) 的最低版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-157">Gets or sets the operating system (OS) version that is the minimum required by the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-158">应用程序所要求的操作系统的最低版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-158">The OS version that is the minimum required by the application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-159">例如，值"5.1.2600.0"表示的操作系统是 Windows XP。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-159">For example, the value "5.1.2600.0" indicates that the operating system is Windows XP.</span></span> <span data-ttu-id="c4bbf-160">如果未指定此属性，使用"4.10.0.0"的值。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-160">If this property is not specified, the value "4.10.0.0" is used.</span></span> <span data-ttu-id="c4bbf-161">这指示 Windows 98 Second Edition，这是支持的最低操作系统[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-161">This indicates Windows 98 Second Edition, which is the minimum supported operating system for the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
 <span data-ttu-id="c4bbf-162">如果任务正在生成本机清单，将忽略此输入。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-162">If the task is generating a native manifest, this input is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Product">
      <MemberSignature Language="C#" Value="public string Product { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Product" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Product" />
      <MemberSignature Language="VB.NET" Value="Public Property Product As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Product { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-163">指定项目文件中的 <c>ProductName</c> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-163">Specifies the <c>ProductName</c> property in the project file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-164">一个字符串值，对应于<c>ProductName</c>项目文件中的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-164">A string value that corresponds to the <c>ProductName</c> property in the project file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-165">此属性对应于`ProductName`项目文件中的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-165">This property corresponds to the `ProductName` property in the project file.</span></span> <span data-ttu-id="c4bbf-166">默认值为 `null`。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-166">The default value is `null`.</span></span> <span data-ttu-id="c4bbf-167">如果`ProductName`为 null 和<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A>是`true`，注册表中的 RegisteredOrganization 值写入到应用程序清单。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-167">If `ProductName` is null and <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A> is `true`, the RegisteredOrganization value in the registry is written to the application manifest.</span></span> <span data-ttu-id="c4bbf-168">如果 RegisteredOrganization 也为 null，则使用程序集名称。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-168">If RegisteredOrganization is also null, the assembly name is used.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Publisher">
      <MemberSignature Language="C#" Value="public string Publisher { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Publisher" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher" />
      <MemberSignature Language="VB.NET" Value="Public Property Publisher As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Publisher { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-169">指定项目文件中的 <c>PublisherName</c> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-169">Specifies the <c>PublisherName</c> property in the project file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-170">一个字符串值，对应于<c>PublisherName</c>项目文件中的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-170">A string value that corresponds to the <c>PublisherName</c> property in the project file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-171">此属性对应于`PublisherName`项目文件中的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-171">This property corresponds to the `PublisherName` property in the project file.</span></span> <span data-ttu-id="c4bbf-172">默认值为 `null`。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-172">The default value is `null`.</span></span> <span data-ttu-id="c4bbf-173">如果`PublisherName`为 null 和<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A>是`true`，程序集名称写入到应用程序清单。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-173">If `PublisherName` is null and <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A> is `true`, the assembly name is written to the application manifest.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RequiresMinimumFramework35SP1">
      <MemberSignature Language="C#" Value="public bool RequiresMinimumFramework35SP1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresMinimumFramework35SP1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiresMinimumFramework35SP1 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequiresMinimumFramework35SP1 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-174">获取或设置应用程序是否需要 .NET Framework 3.5 SP1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-174">Gets or sets whether the application requires the .NET Framework 3.5 SP1.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-175">如果应用程序需要 .NET Framework 3.5 SP1，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-175">
              <see langword="true" /> if the application requires .NET Framework 3.5 SP1; <see langword="false" /> otherwise.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SuiteName">
      <MemberSignature Language="C#" Value="public string SuiteName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SuiteName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName" />
      <MemberSignature Language="VB.NET" Value="Public Property SuiteName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SuiteName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-176">获取或设置 ClickOnce 部署后应用程序所在的“开始”菜单上文件夹的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-176">Gets or sets the name of the folder on the **Start** menu where the application is located after ClickOnce deployment.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-177">一个字符串，表示的名称 * * 入门 * * 菜单文件夹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-177">A string that represents the name of a **Start** menu folder.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SupportUrl">
      <MemberSignature Language="C#" Value="public string SupportUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SupportUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SupportUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-178">指定项目文件中的 <c>SupportUrl</c> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-178">Specifies the <c>SupportUrl</c> property in the project file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-179">一个字符串值，对应于<c>SupportUrl</c>项目文件中的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-179">A string value that corresponds to the <c>SupportUrl</c> property in the project file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-180">此属性对应于`SupportUrl`项目文件中的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-180">This property corresponds to the `SupportUrl` property in the project file.</span></span> <span data-ttu-id="c4bbf-181">默认值是**null**。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-181">The default value is **null**.</span></span> <span data-ttu-id="c4bbf-182">如果`SupportUrl`为 null 和<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A>是`true`，空字符串写入到应用程序清单。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-182">If `SupportUrl` is null and <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A> is `true`, an empty string is written to the application manifest.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TargetFrameworkProfile">
      <MemberSignature Language="C#" Value="public string TargetFrameworkProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetFrameworkProfile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetFrameworkProfile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetFrameworkProfile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-183">获取或设置目标框架配置文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-183">Gets or sets the target framework profile.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-184">返回目标框架配置文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-184">Returns the target framework profile.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TargetFrameworkSubset">
      <MemberSignature Language="C#" Value="public string TargetFrameworkSubset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetFrameworkSubset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetFrameworkSubset As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetFrameworkSubset { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-185">获取或设置要设置为目标的 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 子集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-185">Gets or sets the name of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] subset to target.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-186">名称 [！INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 子集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-186">The name of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] subset.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TrustInfoFile">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem TrustInfoFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem TrustInfoFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile" />
      <MemberSignature Language="VB.NET" Value="Public Property TrustInfoFile As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ TrustInfoFile { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-187">获取或设置指定应用程序安全性的 XML 文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-187">Gets or sets an XML document that specifies the application security.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-188">指定应用程序安全性的 XML 文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-188">The XML document that specifies the application security.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-189">XML 文档中的根元素必须是 asm.v2 命名空间中的 trustInfo 节点。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-189">The root element in the XML document must be a trustInfo node in the asm.v2 namespace.</span></span> <span data-ttu-id="c4bbf-190">如果任务生成的本机清单，将忽略此属性。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-190">If the task is generating a native manifest, this property is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UseApplicationTrust">
      <MemberSignature Language="C#" Value="public bool UseApplicationTrust { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseApplicationTrust" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust" />
      <MemberSignature Language="VB.NET" Value="Public Property UseApplicationTrust As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseApplicationTrust { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bbf-191">指定是否将 <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Product" />、<see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher" /> 和 <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl" /> 属性写入到应用程序清单中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-191">Specifies whether the <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Product" />, <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher" />, and <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl" /> properties are written to the application manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bbf-192">一个布尔值，该值指示是否将 <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Product" />、<see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher" /> 和 <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl" /> 属性写入应用程序清单，如果该值为 <see langword="true" />，则写入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-192">A Boolean value that indicates whether the <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Product" />, <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher" />, and <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl" /> properties are written to the application manifest (<see langword="true" />).</span>
          </span>
          <span data-ttu-id="c4bbf-193">如果该值为 <see langword="false" />，则忽略这些属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bbf-193">If the value is <see langword="false" />, these properties are ignored.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bbf-194"><xref:Microsoft.Build.Tasks.GenerateApplicationManifest.Product%2A>， <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher%2A>，和<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl%2A>属性默认为`null`。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-194">The <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.Product%2A>, <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher%2A>, and <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl%2A> properties default to `null`.</span></span> <span data-ttu-id="c4bbf-195">如果仅使用这些属性<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A>是`true`; 如果是，这些属性的值写入相应的标记中的应用程序清单。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-195">These properties are only used if <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A> is `true`; if so, the values of these properties are written to the corresponding tags in the application manifest.</span></span>  
  
 <span data-ttu-id="c4bbf-196">如果<xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A>是`false`（默认值），这些属性会被忽略。</span><span class="sxs-lookup"><span data-stu-id="c4bbf-196">If <xref:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust%2A> is `false` (the default value), these properties are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateInputs">
      <MemberSignature Language="C#" Value="protected internal override bool ValidateInputs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ValidateInputs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.GenerateApplicationManifest.ValidateInputs" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ValidateInputs () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ValidateInputs();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>