<Type Name="IMemoryOwner&lt;T&gt;" FullName="System.Buffers.IMemoryOwner&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7756681e648caf2d7f9be035d571a989959b7bee" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52195955" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMemoryOwner&lt;T&gt; : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMemoryOwner`1&lt;T&gt; implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.IMemoryOwner`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMemoryOwner(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IMemoryOwner : IDisposable" />
  <TypeSignature Language="F#" Value="type IMemoryOwner&lt;'T&gt; = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="2ea6e-101">要在内存中存储的元素类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ea6e-101">The type of elements to store in memory.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="2ea6e-102">标识负责适当地释放基础内存的内存块所有者。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ea6e-102">Identifies the owner of a block of memory who is responsible for disposing of the underlying memory appropriately.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

<span data-ttu-id="2ea6e-103">`IMemoryOwner<T>`接口用于定义所有者来负责的生存期管理的<xref:System.Memory%601>缓冲区。</span><span class="sxs-lookup"><span data-stu-id="2ea6e-103">The `IMemoryOwner<T>` interface is used to define the owner responsible for the lifetime management of a <xref:System.Memory%601> buffer.</span></span> <span data-ttu-id="2ea6e-104">实例`IMemoryOwner<T>`接口将返回由 < xef:System.Buffers.MemoryPool%601.Rent%2A?displayProperty=nameWithType > 方法。</span><span class="sxs-lookup"><span data-stu-id="2ea6e-104">An instance of the `IMemoryOwner<T>` interface is returned by the <xef:System.Buffers.MemoryPool%601.Rent%2A?displayProperty=nameWithType> method.</span></span> 

<span data-ttu-id="2ea6e-105">缓冲区可以有多个使用者，而它可以在任何给定时间只能有单个所有者。</span><span class="sxs-lookup"><span data-stu-id="2ea6e-105">While a buffer can have multiple consumers, it can only have a single owner at any given time.</span></span> <span data-ttu-id="2ea6e-106">所有者可以：</span><span class="sxs-lookup"><span data-stu-id="2ea6e-106">The owner can:</span></span>

- <span data-ttu-id="2ea6e-107">直接或通过调用工厂方法创建缓冲区。</span><span class="sxs-lookup"><span data-stu-id="2ea6e-107">Create the buffer either directly or by calling a factory method.</span></span>

- <span data-ttu-id="2ea6e-108">所有权转移给另一个使用者。</span><span class="sxs-lookup"><span data-stu-id="2ea6e-108">Transfer ownership to another consumer.</span></span> <span data-ttu-id="2ea6e-109">在这种情况下，以前的所有者不应再使用缓冲区。</span><span class="sxs-lookup"><span data-stu-id="2ea6e-109">In this case, the previous owner should no longer use the buffer.</span></span>

- <span data-ttu-id="2ea6e-110">不再使用时，请销毁缓冲区。</span><span class="sxs-lookup"><span data-stu-id="2ea6e-110">Destroy the buffer when it is no longer in use.</span></span>

<span data-ttu-id="2ea6e-111">因为`IMemoryOwner<T>`对象将实现<xref:System.IDisposable>接口，应调用其<xref:System.IDisposable.Dispose%2A>方法只在不再需要的内存缓冲区，并已销毁它。</span><span class="sxs-lookup"><span data-stu-id="2ea6e-111">Because the `IMemoryOwner<T>` object implements the <xref:System.IDisposable> interface, you should call its <xref:System.IDisposable.Dispose%2A> method only after the memory buffer is no longer needed and you have destroyed it.</span></span> <span data-ttu-id="2ea6e-112">您应该*不*释放`IMemoryOnwer<T>`对象对其内存的引用时可用。</span><span class="sxs-lookup"><span data-stu-id="2ea6e-112">You should *not* dispose of the `IMemoryOnwer<T>` object while a reference to its memory is available.</span></span> <span data-ttu-id="2ea6e-113">这意味着，在其中的类型`IMemoryOwner<T>`声明不应具有<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2ea6e-113">This means that the type in which `IMemoryOwner<T>` is declared should not have a <xref:System.Object.Finalize%2A> method.</span></span>

   ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Memory">
      <MemberSignature Language="C#" Value="public Memory&lt;T&gt; Memory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Memory`1&lt;!T&gt; Memory" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.IMemoryOwner`1.Memory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Memory As Memory(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Memory&lt;T&gt; Memory { Memory&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Memory : Memory&lt;'T&gt;" Usage="System.Buffers.IMemoryOwner&lt;'T&gt;.Memory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Memory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ea6e-114">获取属于此所有者的内存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea6e-114">Gets the memory belonging to this owner.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ea6e-115">属于此所有者的内存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea6e-115">The memory belonging to this owner.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>