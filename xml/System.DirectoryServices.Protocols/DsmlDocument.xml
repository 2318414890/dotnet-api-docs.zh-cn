<Type Name="DsmlDocument" FullName="System.DirectoryServices.Protocols.DsmlDocument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="18cc831c9410561157b5ec187a5461ef1ebb4055" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30405081" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DsmlDocument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DsmlDocument extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.DsmlDocument" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DsmlDocument" />
  <TypeSignature Language="C++ CLI" Value="public ref class DsmlDocument abstract" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.DirectoryServices.Protocols.DsmlDocument" /> 类是构造或操作 DSML 文档的抽象类。 它是 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 和 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 的基类。 <see cref="T:System.DirectoryServices.Protocols.DsmlDocument" /> 支持集合和索引。 集合中的每一项都是从 <see cref="T:System.DirectoryServices.Protocols.DirectoryOperation" /> 派生的对象。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DsmlDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DsmlDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.DirectoryServices.Protocols.DsmlDocument.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DsmlDocument" /> 类的实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlDocument ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDocument ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlDocument.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToXml () As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlDocument ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.DirectoryServices.Protocols.DsmlDocument.ToXml" /> 方法将此 <see cref="T:System.DirectoryServices.Protocols.DsmlDocument" /> 对象转换为 <see cref="T:System.Xml.XmlDocument" /> 对象。</summary>
        <returns>转换的 <see cref="T:System.Xml.XmlDocument" /> 对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>