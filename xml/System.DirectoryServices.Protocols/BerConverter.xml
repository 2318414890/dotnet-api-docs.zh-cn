<Type Name="BerConverter" FullName="System.DirectoryServices.Protocols.BerConverter">
  <TypeSignature Language="C#" Value="public sealed class BerConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BerConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.BerConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BerConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BerConverter sealed" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="98c3d-101"><see cref="T:System.DirectoryServices.Protocols.BerConverter" /> 类使用基本编码规则 (BER) 对结构化数据进行编码和解码。</span><span class="sxs-lookup"><span data-stu-id="98c3d-101">The <see cref="T:System.DirectoryServices.Protocols.BerConverter" /> class encodes and decodes structured data using basic encoding rules (BER).</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static object[] Decode (string format, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] Decode(string format, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (format As String, value As Byte()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ Decode(System::String ^ format, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="98c3d-102">格式字符串。</span><span class="sxs-lookup"><span data-stu-id="98c3d-102">The format string.</span></span></param>
        <param name="value"><span data-ttu-id="98c3d-103">BER 数据组成的数组。</span><span class="sxs-lookup"><span data-stu-id="98c3d-103">An array of BER data.</span></span></param>
        <summary><span data-ttu-id="98c3d-104"><see cref="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])" /> 方法使用 BER 对数据的二进制表示形式进行解码，以检索结构化数据。</span><span class="sxs-lookup"><span data-stu-id="98c3d-104">The <see cref="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])" /> method decodes a binary representation of the data, using BER, to retrieve structured data.</span></span></summary>
        <returns><span data-ttu-id="98c3d-105">已解码的数据。</span><span class="sxs-lookup"><span data-stu-id="98c3d-105">The decoded data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98c3d-106"><paramref name="format" /> 参数包含 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="98c3d-106">The <paramref name="format" /> parameter contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="98c3d-107"><paramref name="format" /> 参数包含未定义的字符。</span><span class="sxs-lookup"><span data-stu-id="98c3d-107">The <paramref name="format" /> parameter contains an undefined character.</span></span></exception>
        <exception cref="T:System.DirectoryServices.Protocols.BerConversionException"><span data-ttu-id="98c3d-108">基础解码失败。</span><span class="sxs-lookup"><span data-stu-id="98c3d-108">The underlying decoding fails.</span></span> <span data-ttu-id="98c3d-109">解码规则包括以下内容。</span><span class="sxs-lookup"><span data-stu-id="98c3d-109">The decoding rules include the following.</span></span>  
  
 <span data-ttu-id="98c3d-110"><list type="table"><listheader><term> 代码</span><span class="sxs-lookup"><span data-stu-id="98c3d-110"><list type="table"><listheader><term> Code</span></span>  
  
 <span data-ttu-id="98c3d-111"></term><description> 对应的结果</span><span class="sxs-lookup"><span data-stu-id="98c3d-111"></term><description> Corresponding Result</span></span>  
  
 <span data-ttu-id="98c3d-112"></description></listheader><item><term> '{' '}' '[' ']' 'n' 'x'</span><span class="sxs-lookup"><span data-stu-id="98c3d-112"></description></listheader><item><term> '{' '}' '[' ']' 'n' 'x'</span></span>  
  
 <span data-ttu-id="98c3d-113"></term><description> 无对应的结果</span><span class="sxs-lookup"><span data-stu-id="98c3d-113"></term><description> No corresponding result</span></span>  
  
 <span data-ttu-id="98c3d-114"></description></item><item><term> 'i' 'e'</span><span class="sxs-lookup"><span data-stu-id="98c3d-114"></description></item><item><term> 'i' 'e'</span></span>  
  
 <span data-ttu-id="98c3d-115"></term><description> int</span><span class="sxs-lookup"><span data-stu-id="98c3d-115"></term><description> int</span></span>  
  
 <span data-ttu-id="98c3d-116"></description></item><item><term> 'b'</span><span class="sxs-lookup"><span data-stu-id="98c3d-116"></description></item><item><term> 'b'</span></span>  
  
 <span data-ttu-id="98c3d-117"></term><description> bool</span><span class="sxs-lookup"><span data-stu-id="98c3d-117"></term><description> bool</span></span>  
  
 <span data-ttu-id="98c3d-118"></description></item><item><term> 'a'</span><span class="sxs-lookup"><span data-stu-id="98c3d-118"></description></item><item><term> 'a'</span></span>  
  
 <span data-ttu-id="98c3d-119"></term><description> 字符串</span><span class="sxs-lookup"><span data-stu-id="98c3d-119"></term><description> string</span></span>  
  
 <span data-ttu-id="98c3d-120"></description></item><item><term> 'O'</span><span class="sxs-lookup"><span data-stu-id="98c3d-120"></description></item><item><term> 'O'</span></span>  
  
 <span data-ttu-id="98c3d-121"></term><description> byte[]</span><span class="sxs-lookup"><span data-stu-id="98c3d-121"></term><description> byte[]</span></span>  
  
 <span data-ttu-id="98c3d-122"></description></item><item><term> 'B'</span><span class="sxs-lookup"><span data-stu-id="98c3d-122"></description></item><item><term> 'B'</span></span>  
  
 <span data-ttu-id="98c3d-123"></term><description> 包含位字符串的 byte[]</span><span class="sxs-lookup"><span data-stu-id="98c3d-123"></term><description> byte[] containing bit strings</span></span>  
  
 <span data-ttu-id="98c3d-124"></description></item><item><term> 'v'</span><span class="sxs-lookup"><span data-stu-id="98c3d-124"></description></item><item><term> 'v'</span></span>  
  
 <span data-ttu-id="98c3d-125"></term><description> string[]</span><span class="sxs-lookup"><span data-stu-id="98c3d-125"></term><description> string[]</span></span>  
  
 <span data-ttu-id="98c3d-126"></description></item><item><term> 'V'</span><span class="sxs-lookup"><span data-stu-id="98c3d-126"></description></item><item><term> 'V'</span></span>  
  
 <span data-ttu-id="98c3d-127"></term><description> byte[][]</span><span class="sxs-lookup"><span data-stu-id="98c3d-127"></term><description> byte[][]</span></span>  
  
 </description></item></list></exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static byte[] Encode (string format, params object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Encode(string format, object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (format As String, ParamArray value As Object()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Encode(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="value" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="98c3d-128">格式字符串。</span><span class="sxs-lookup"><span data-stu-id="98c3d-128">The format string.</span></span></param>
        <param name="value"><span data-ttu-id="98c3d-129">格式化数据组成的数组。</span><span class="sxs-lookup"><span data-stu-id="98c3d-129">An array of formatted data.</span></span></param>
        <summary><span data-ttu-id="98c3d-130"><see cref="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])" /> 方法使用 BER 对结构化数据进行编码，以检索数据的二进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="98c3d-130">The <see cref="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])" /> method encodes structured data, using BER, to retrieve a binary representation of the data.</span></span></summary>
        <returns><span data-ttu-id="98c3d-131">BER 编码的数据组成的数组。</span><span class="sxs-lookup"><span data-stu-id="98c3d-131">An array of BER-encoded data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98c3d-132">以下是有效的格式字符。</span><span class="sxs-lookup"><span data-stu-id="98c3d-132">The following are valid format characters.</span></span>  
  
 <span data-ttu-id="98c3d-133">编码规则：</span><span class="sxs-lookup"><span data-stu-id="98c3d-133">Encoding rules:</span></span>  
  
|<span data-ttu-id="98c3d-134">代码</span><span class="sxs-lookup"><span data-stu-id="98c3d-134">Code</span></span>|<span data-ttu-id="98c3d-135">相应的自变量</span><span class="sxs-lookup"><span data-stu-id="98c3d-135">Corresponding Argument</span></span>|  
|----------|----------------------------|  
|<span data-ttu-id="98c3d-136">'{' '}' '[' ']' 'n'</span><span class="sxs-lookup"><span data-stu-id="98c3d-136">'{' '}' '[' ']' 'n'</span></span>|<span data-ttu-id="98c3d-137">无对应的参数</span><span class="sxs-lookup"><span data-stu-id="98c3d-137">No corresponding argument</span></span>|  
|<span data-ttu-id="98c3d-138">'t' 'i' 'e'</span><span class="sxs-lookup"><span data-stu-id="98c3d-138">'t' 'i' 'e'</span></span>|<span data-ttu-id="98c3d-139">int</span><span class="sxs-lookup"><span data-stu-id="98c3d-139">int</span></span>|  
|<span data-ttu-id="98c3d-140">'a'</span><span class="sxs-lookup"><span data-stu-id="98c3d-140">'a'</span></span>|<span data-ttu-id="98c3d-141">八位字节字符串</span><span class="sxs-lookup"><span data-stu-id="98c3d-141">Octet string</span></span>|  
|<span data-ttu-id="98c3d-142">'b'</span><span class="sxs-lookup"><span data-stu-id="98c3d-142">'b'</span></span>|<span data-ttu-id="98c3d-143">bool</span><span class="sxs-lookup"><span data-stu-id="98c3d-143">bool</span></span>|  
|<span data-ttu-id="98c3d-144">'s'</span><span class="sxs-lookup"><span data-stu-id="98c3d-144">'s'</span></span>|<span data-ttu-id="98c3d-145">字符串</span><span class="sxs-lookup"><span data-stu-id="98c3d-145">string</span></span>|  
|<span data-ttu-id="98c3d-146">o X '</span><span class="sxs-lookup"><span data-stu-id="98c3d-146">'o' 'X'</span></span>|<span data-ttu-id="98c3d-147">byte[]</span><span class="sxs-lookup"><span data-stu-id="98c3d-147">byte[]</span></span>|  
|<span data-ttu-id="98c3d-148">'v'</span><span class="sxs-lookup"><span data-stu-id="98c3d-148">'v'</span></span>|<span data-ttu-id="98c3d-149">string[]</span><span class="sxs-lookup"><span data-stu-id="98c3d-149">string[]</span></span>|  
|<span data-ttu-id="98c3d-150">'V'</span><span class="sxs-lookup"><span data-stu-id="98c3d-150">'V'</span></span>|<span data-ttu-id="98c3d-151">byte[][]</span><span class="sxs-lookup"><span data-stu-id="98c3d-151">byte[][]</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="98c3d-152">v 和 V 的特殊在于，双精度 {} 是必需的。</span><span class="sxs-lookup"><span data-stu-id="98c3d-152">'v' and 'V' are special in that a double {} is required.</span></span> <span data-ttu-id="98c3d-153">例如，使用 {{v}} 和 {{V}}。</span><span class="sxs-lookup"><span data-stu-id="98c3d-153">For example, use {{v}} and {{V}}.</span></span>  
  
## <a name="exceptions"></a><span data-ttu-id="98c3d-154">异常</span><span class="sxs-lookup"><span data-stu-id="98c3d-154">Exceptions</span></span>  
  
|<span data-ttu-id="98c3d-155">例外</span><span class="sxs-lookup"><span data-stu-id="98c3d-155">Exception</span></span>|<span data-ttu-id="98c3d-156">条件</span><span class="sxs-lookup"><span data-stu-id="98c3d-156">Condition</span></span>|  
|---------------|---------------|  
|<span data-ttu-id="98c3d-157">ArgumentNullException</span><span class="sxs-lookup"><span data-stu-id="98c3d-157">ArgumentNullException</span></span>|<span data-ttu-id="98c3d-158">`format` 为空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="98c3d-158">`format` is a null reference (`Nothing` in Visual Basic).</span></span>|  
|<span data-ttu-id="98c3d-159">ArgumentException</span><span class="sxs-lookup"><span data-stu-id="98c3d-159">ArgumentException</span></span>|<span data-ttu-id="98c3d-160">在以下情况中的任何一个，则会发生此异常：</span><span class="sxs-lookup"><span data-stu-id="98c3d-160">This exception occurs in any one of the following conditions:</span></span><br /><br /> <span data-ttu-id="98c3d-161">-没有足够自变量的格式字符串。</span><span class="sxs-lookup"><span data-stu-id="98c3d-161">-   There are not enough arguments for the format string.</span></span><br /><span data-ttu-id="98c3d-162">格式字符串参数不正确。</span><span class="sxs-lookup"><span data-stu-id="98c3d-162">-   The format string argument is incorrect.</span></span><br /><span data-ttu-id="98c3d-163">格式字符串包含未定义的字符。</span><span class="sxs-lookup"><span data-stu-id="98c3d-163">-   The format string contains an undefined character.</span></span>|  
|<span data-ttu-id="98c3d-164">BerConversionException</span><span class="sxs-lookup"><span data-stu-id="98c3d-164">BerConversionException</span></span>|<span data-ttu-id="98c3d-165">错误处理返回值。</span><span class="sxs-lookup"><span data-stu-id="98c3d-165">Error processing return value.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>