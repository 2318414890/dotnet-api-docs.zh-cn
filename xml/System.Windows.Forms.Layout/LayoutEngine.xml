<Type Name="LayoutEngine" FullName="System.Windows.Forms.Layout.LayoutEngine">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="afe340f40c867dede06fb324eb767dfe09bc6bee" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36356067" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class LayoutEngine" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LayoutEngine extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Layout.LayoutEngine" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LayoutEngine" />
  <TypeSignature Language="C++ CLI" Value="public ref class LayoutEngine abstract" />
  <TypeSignature Language="F#" Value="type LayoutEngine = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7e1b9-101">提供用于实现布局引擎的基类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7e1b9-101">Provides the base class for implementing layout engines.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e1b9-102">使用<xref:System.Windows.Forms.Layout.LayoutEngine>类在你想要在运行时创建自定义布局行为。</span><span class="sxs-lookup"><span data-stu-id="7e1b9-102">Use the <xref:System.Windows.Forms.Layout.LayoutEngine> class when you want to create custom layout behavior at run time.</span></span> <span data-ttu-id="7e1b9-103">派生您自己的类从<xref:System.Windows.Forms.Layout.LayoutEngine>类并重写<xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A>方法用来定义你的自定义布局的行为。</span><span class="sxs-lookup"><span data-stu-id="7e1b9-103">Derive your own class from the <xref:System.Windows.Forms.Layout.LayoutEngine> class and override the <xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A> method to define your custom layout behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e1b9-104">下面的代码示例演示如何将<xref:System.Windows.Forms.Layout.LayoutEngine>类，以实现自定义布局行为。</span><span class="sxs-lookup"><span data-stu-id="7e1b9-104">The following code example demonstrates the use of the <xref:System.Windows.Forms.Layout.LayoutEngine> class to implement custom layout behavior.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/cpp/DemoFlowLayout.cpp#1)]
 [!code-csharp[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/CS/DemoFlowLayout.cs#1)]
 [!code-vb[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/VB/DemoFlowLayout.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LayoutEngine ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LayoutEngine();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7e1b9-105">初始化 <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e1b9-105">Initializes a new instance of the <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="7e1b9-106">
            <para>布局行为应为相同的布局引擎关联的容器任何的类实例。为此，请考虑声明布局引擎的构造函数<see langword="protected" />或<see langword="private" />，和实现你作为一个单独的类的布局引擎。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7e1b9-106">
              <para>Layout behavior should be the same for any instance of your layout engine's associated container class. For this reason, consider declaring your layout engine's constructor <see langword="protected" /> or <see langword="private" />, and implementing your layout engine as a singleton class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InitLayout">
      <MemberSignature Language="C#" Value="public virtual void InitLayout (object child, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitLayout(object child, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitLayout (child As Object, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitLayout(System::Object ^ child, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member InitLayout : obj * System.Windows.Forms.BoundsSpecified -&gt; unit&#xA;override this.InitLayout : obj * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="layoutEngine.InitLayout (child, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="7e1b9-107">布局引擎将在其上执行操作的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e1b9-107">The container on which the layout engine will operate.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="7e1b9-108">用于定义容器大小和位置的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e1b9-108">The bounds defining the container's size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e1b9-109">初始化布局引擎。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e1b9-109">Initializes the layout engine.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e1b9-110">根据需要提供中的初始化逻辑<xref:System.Windows.Forms.Layout.LayoutEngine.InitLayout%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7e1b9-110">Optionally provide initialization logic in the <xref:System.Windows.Forms.Layout.LayoutEngine.InitLayout%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7e1b9-111">
            <paramref name="child" /> 不是一个 <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> 可在其上执行布局的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e1b9-111">
              <paramref name="child" /> is not a type on which <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> can perform layout.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="7e1b9-112">
            <para>重写<see cref="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" />方法以提供自定义初始化行为。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7e1b9-112">
              <para>Override the <see cref="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" /> method to provide your custom initialization behavior.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public virtual bool Layout (object container, System.Windows.Forms.LayoutEventArgs layoutEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Layout(object container, class System.Windows.Forms.LayoutEventArgs layoutEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Layout(System::Object ^ container, System::Windows::Forms::LayoutEventArgs ^ layoutEventArgs);" />
      <MemberSignature Language="F#" Value="abstract member Layout : obj * System.Windows.Forms.LayoutEventArgs -&gt; bool&#xA;override this.Layout : obj * System.Windows.Forms.LayoutEventArgs -&gt; bool" Usage="layoutEngine.Layout (container, layoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="layoutEventArgs" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="7e1b9-113">布局引擎将在其上执行操作的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e1b9-113">The container on which the layout engine will operate.</span>
          </span>
        </param>
        <param name="layoutEventArgs">
          <span data-ttu-id="7e1b9-114">来自 <see cref="E:System.Windows.Forms.Control.Layout" /> 事件的事件参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e1b9-114">An event argument from a <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e1b9-115">请求布局引擎执行布局操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e1b9-115">Requests that the layout engine perform a layout operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e1b9-116">如果 <paramref name="container" /> 的父容器应重新执行布局，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e1b9-116">
              <see langword="true" /> if layout should be performed again by the parent of <paramref name="container" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e1b9-117">若要对执行布局操作的布局引擎时调用此方法`container`参数。</span><span class="sxs-lookup"><span data-stu-id="7e1b9-117">This method is called when the layout engine is to perform a layout operation on the `container` parameter.</span></span> <span data-ttu-id="7e1b9-118">你可以检查的值<xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>， <xref:System.Windows.Forms.LayoutEventArgs.AffectedComponent%2A>，和<xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A>属性`layoutEventArgs`来决定是否需要布局操作。</span><span class="sxs-lookup"><span data-stu-id="7e1b9-118">You can check the value of the <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>, <xref:System.Windows.Forms.LayoutEventArgs.AffectedComponent%2A>, and <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> properties on `layoutEventArgs` to decide if a layout operation is necessary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e1b9-119">下面的代码示例演示如何将<xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A>方法来实现自定义布局行为。</span><span class="sxs-lookup"><span data-stu-id="7e1b9-119">The following code example demonstrates the use of the <xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A> method to implement custom layout behavior.</span></span> <span data-ttu-id="7e1b9-120">此代码示例摘自更大的示例为提供<xref:System.Windows.Forms.Layout.LayoutEngine>类。</span><span class="sxs-lookup"><span data-stu-id="7e1b9-120">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Layout.LayoutEngine> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/cpp/DemoFlowLayout.cpp#4)]
 [!code-csharp[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/CS/DemoFlowLayout.cs#4)]
 [!code-vb[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/VB/DemoFlowLayout.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7e1b9-121">
            <paramref name="container" /> 不是一个 <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> 可在其上执行布局的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e1b9-121">
              <paramref name="container" /> is not a type on which <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> can perform layout.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="7e1b9-122">
            <para>重写<see cref="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" />方法以提供您的自定义布局的行为。当布局的内容时<paramref name="container" />参数，请务必检查<see cref="P:System.Windows.Forms.Control.Visible" />的每个子控件的属性。返回<see langword="true" />如果你的布局引擎逻辑确定该布局应重新执行由父容器。例如，这可能是时的布局引擎调整子控件的大小并确定，容器必须增大的大小，以容纳新的布局。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7e1b9-122">
              <para>Override the <see cref="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" /> method to provide your custom layout behavior.  When laying out the contents of the <paramref name="container" /> parameter, be sure to check the <see cref="P:System.Windows.Forms.Control.Visible" /> property of each child control.  Return <see langword="true" /> if your layout engine logic determines that layout should be performed again by the parent of the container. This might occur, for example, when the layout engine resizes child controls and determines that the container must be increased in size to accommodate the new layout.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Windows.Forms.LayoutEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>