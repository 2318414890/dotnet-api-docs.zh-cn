<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MetadataImporter.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72a3a723198a4ad2a03956b8bc484957a70c328923.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3a723198a4ad2a03956b8bc484957a70c328923</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Imports metadata into <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> objects.</source>
          <target state="translated">将元数据导入 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Use an implementation of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> abstract class to import service metadata.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 抽象类的实现导入服务元数据。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Types that derive from the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</source>
          <target state="translated">派生自 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 类的类型实现对导入元数据格式的支持，这些元数据格式利用了 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 中的 WS-Policy 导入逻辑。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> implementation collects the policy expressions attached to the service metadata in a <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 实现收集附加到 <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType&gt;</ph> 对象中服务元数据的策略表达式。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> then processes the policies as part of importing the metadata by calling the implementations of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType&gt;</ph> interface in the <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">然后，通过在 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 属性中调用 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType&gt;</ph> 接口的实现，<ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType&gt;</ph> 在导入元数据的过程中处理策略。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>You can add support for importing new policy assertions to a <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> by adding your own implementation of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType&gt;</ph> interface to the <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType&gt;</ph> property on a <ph id="ph4">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> instance.</source>
          <target state="translated">您可以将导入新策略断言的支持添加到 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph>，方法是将您自己的 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType&gt;</ph> 接口的实现添加到 <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType&gt;</ph> 实例的 <ph id="ph4">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Alternatively, you can register your policy import extension in your application configuration file.</source>
          <target state="translated">或者，可以在应用程序配置文件中注册策略导入扩展。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> type is the implementation of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> abstract class included with WCF.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph>类型是实现的<ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph>抽象 WCF 中包含的类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> type imports WSDL metadata with attached policies that are bundled in a <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> 类型可以导入含有附加策略（这些策略捆绑在 <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType&gt;</ph> 对象中）的 WSDL 元数据。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>You can add support for importing WSDL extensions by implementing the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph> interface and then adding your implementation to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType&gt;</ph> property on your <ph id="ph3">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> instance.</source>
          <target state="translated">通过实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph> 接口，然后将实现添加到 <ph id="ph2">&lt;xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType&gt;</ph> 实例上的 <ph id="ph3">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> 属性，可以添加对导入 WSDL 扩展的支持。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> can also load implementations of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph> interface registered in your application configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> 还可以加载应用程序配置文件中注册的 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph> 接口的实现。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Because the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> constructor is internal, you cannot derive from <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> in this version.</source>
          <target state="translated">由于 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 为内部构造函数，因此在此版本中，无法从 <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 派生。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The following example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> derived class to import metadata using custom state, checking the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter.Errors%2A&gt;</ph> property, compiling imported metadata to managed types and saving the result to a code file.</source>
          <target state="translated">下面的示例演示如何通过使用自定义语句、检查 <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> 属性、将导入元数据编译为托管类型，并将结果保存到代码文件来使用 <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter.Errors%2A&gt;</ph> 派生类导入元数据。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.MetadataImporter.Errors">
          <source>Gets a value that indicates whether there were errors importing the metadata.</source>
          <target state="translated">获取指示是否在导入元数据时出现错误的值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.Errors">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataConversionError" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataConversionError" /&gt;</ph> 对象的集合。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.Errors">
          <source>Always check the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.Errors%2A&gt;</ph> property after importing metadata and before using the metadata.</source>
          <target state="translated">始终在导入元数据后和使用元数据前检查 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.Errors%2A&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts">
          <source>When overridden in a derived class, returns a collection of contracts imported from the metadata.</source>
          <target state="translated">在派生类中重写时，会返回从元数据导入的协定的集合。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts">
          <source>The contracts imported from the metadata.</source>
          <target state="translated">从元数据导入的协定。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>When overridden in a derived class, returns all endpoints in the metadata.</source>
          <target state="translated">在派生类中重写时，会返回元数据中的所有终结点。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> objects that are published by a service.</source>
          <target state="translated">由服务发布的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> 对象的集合。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A&gt;</ph> method to return all endpoints in the imported metadata.</source>
          <target state="translated">实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A&gt;</ph> 方法以返回导入元数据中的所有终结点。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information.</source>
          <target state="translated">已作为服务终结点导入的元数据无法用于创建运行时或导出元数据，因为导入的终结点不包含托管类型信息。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType&gt;</ph> object using <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.GetContract%2A&gt;</ph>.</source>
          <target state="translated">若要使用元数据创建客户端或服务运行时，或者若要生成元数据，您必须先从元数据中生成和编译代码，然后使用该类型信息创建使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType&gt;</ph> 的新 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.GetContract%2A&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.MetadataImporter.KnownContracts">
          <source>Gets a dictionary of contracts by name that the importer knows about.</source>
          <target state="translated">获取按导入程序了解的名称排列的协定字典。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.KnownContracts">
          <source>A dictionary of contracts listed by XML qualified name.</source>
          <target state="translated">按 XML 限定名称列出的协定字典。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.KnownContracts">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A&gt;</ph> property to add or remove contract descriptions and their associated XML names that the importer can reference.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A&gt;</ph> 属性可添加或移除协定说明和导入程序可引用的其关联 XML 名称。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions">
          <source>Gets a collection of policy importers that the importer calls to process policy assertions.</source>
          <target state="translated">获取导入程序调用的用于处理策略断言的策略导入程序的集合。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions">
          <source>A collection of policy importers that the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataImporter" /&gt;</ph> uses to process policy assertions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataImporter" /&gt;</ph> 用于处理策略断言的策略导入程序的集合。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A&gt;</ph> property to add or remove policy importers that are invoked to process policy assertions in the metadata.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A&gt;</ph> 属性可添加或移除调用以处理元数据中的策略断言的策略导入程序。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.MetadataImporter.State">
          <source>Gets or sets a collection of objects used in the importing of metadata.</source>
          <target state="translated">获取或设置在导入元数据过程中使用的对象的集合。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.State">
          <source>A dictionary of objects keyed by type.</source>
          <target state="translated">类型键控的对象字典。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.State">
          <source>Use the <ph id="ph1">`State`</ph> property to add or remove objects used in the importing of metadata.</source>
          <target state="translated">使用 <ph id="ph1">`State`</ph> 属性可添加或移除在导入元数据过程中使用的对象。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.State">
          <source>The following example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.State%2A&gt;</ph> property to add a custom <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType&gt;</ph> to import data structures in a particular way.</source>
          <target state="translated">下面的示例演示如何使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.State%2A&gt;</ph> 属性添加自定义 <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType&gt;</ph>，从而以特定方式导入数据结构。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>