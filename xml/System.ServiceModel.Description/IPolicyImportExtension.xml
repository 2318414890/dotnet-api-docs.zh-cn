<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPolicyImportExtension.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53655f09d95b926fdd46889add5070a5bab95fd86.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3655f09d95b926fdd46889add5070a5bab95fd86</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Defines a method for objects that import custom policy assertions about bindings.</source>
          <target state="translated">为可导入有关绑定的自定义策略断言的对象定义一个方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> interface to search WSDL information exposed by a particular endpoint for custom policy assertions about endpoint capabilities or requirements.</source>
          <target state="translated">实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> 接口可以搜索有关终结点功能或要求的自定义策略断言的特殊终结点公开的 WSDL 信息。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Typically, a policy importer searches for a specific assertion and either inserts a binding element, configures a binding element, or modifies the contract to support the requirements of the assertion.</source>
          <target state="translated">通常，策略导入程序会先搜索特定断言，然后插入绑定元素并配置绑定元素，或者修改协定以支持该断言的要求。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Unlike its counterpart, <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> does not require implementation by a <ph id="ph3">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> object; you can load it using the client configuration section shown in the Examples section or programmatically by adding it to the <ph id="ph4">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">与其副本 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> 不同，<ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> 不要求通过 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> 对象实现；您既可以通过使用“示例”一节中阐示的客户端配置节来加载它，也可以通过编程方式将其添加到 <ph id="ph4">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> 构造函数来加载它。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> passes two objects to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;</ph> method, a <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> and a <ph id="ph4">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 可将两个对象传递到 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;</ph> 方法，这两个对象分别是 <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 和 <ph id="ph4">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Typically the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> object already contains the policy assertions for each binding scope.</source>
          <target state="translated">通常，<ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> 对象包含每个绑定范围的策略断言。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>An <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> implementation performs the following steps:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> 实现会完成以下操作步骤：</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Locates the custom policy assertion for which it is responsible by calling either the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> methods, depending upon the scope.</source>
          <target state="translated">调用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph> 或 <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> 方法，依据范围查找其所负责的自定义策略断言。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Removes the policy assertion from the assertion collection.</source>
          <target state="translated">从断言集合中移除策略断言。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method locates, returns, and removes the assertion in one step.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> 方法在一个步骤中就可以完成断言的查找、返回和移除操作。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Modify the binding stack or the contract by either adding a required custom <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;</ph> property or by modifying the <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">通过将所要求的自定义 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> 添加到 <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;</ph> 属性或修改 <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType&gt;</ph> 属性来修改绑定堆栈或协定。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Step 2 is important.</source>
          <target state="translated">步骤 2 非常重要。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>After all policy importers have been called, <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> checks for the existence of any policy assertions that remain.</source>
          <target state="translated">在调用了所有策略导入程序后，<ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 将检查是否存在剩余的策略协定。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>If one exists, <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> assumes that the policy import was unsuccessful and does not import the associated binding.</source>
          <target state="translated">如果存在，则 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 会认为策略导入失败，将不会导入相关绑定。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>A malicious metadata supplier can attempt to send malformed XML as part of metadata in an attempt to exploit a policy importer.</source>
          <target state="translated">恶意的元数据供应商可将格式错误的 XML 作为元数据的一部分进行发送，从而尝试利用策略导入程序。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>It is strongly recommended that custom policy importers be robust to all forms of XML that can be passed to it.</source>
          <target state="translated">强烈建议使用安全可靠的自定义策略导入程序，以处理发送给它的所有格式的 XML。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Custom <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> implementations must implement their own <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> object to extract the policy assertions attached to the custom metadata format.</source>
          <target state="translated">自定义 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 实现必须实现自己的 <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> 对象，以提取附加到自定义元数据格式的策略断言。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>If you want to export and import custom WSDL elements that are not policy assertions, see <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果要导入和导出非策略断言的自定义 WSDL 元素，请参见 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>You can use custom policy importers and exporters with the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> by using the same configuration elements in a configuration file and the <ph id="ph1">`/svcutilConfig:&lt;configFile&gt;`</ph> option.</source>
          <target state="translated">你可以使用自定义策略导入和导出程序与<bpt id="p1">[</bpt>ServiceModel 元数据实用工具 (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>通过在配置文件中使用的相同的配置元素和<ph id="ph1">`/svcutilConfig:&lt;configFile&gt;`</ph>选项。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method to locate, return, and remove the assertion in one step.</source>
          <target state="translated">下面的代码示例演示了如何使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> 方法在一个步骤内完成断言的查找、返回和移除操作。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>The following code example shows the client application configuration file to load the custom policy importer when the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType&gt;</ph> is invoked.</source>
          <target state="translated">下面的代码示例演示了客户端应用程序配置文件是如何在调用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType&gt;</ph> 时加载自定义策略导入程序的。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver&gt;</ph> to download and resolve metadata into description objects.</source>
          <target state="translated">下面的代码示例演示了如何使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver&gt;</ph> 下载元数据，并将其解析到说明对象中。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataImporter" /&gt;</ph> object in use.</source>
          <target state="translated">正在使用的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataImporter" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph> that contains both the policy assertions that can be imported and the collections of binding elements to which implementing binding elements can be added.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph>，其中既包含可以导入的策略断言，也包含可向其添加实现绑定元素的绑定元素集合。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Defines a method that can import custom policy assertions and add implementing binding elements.</source>
          <target state="translated">定义一个可导入自定义策略断言和添加实现绑定元素的方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Implement the <ph id="ph1">`ImportPolicy`</ph> method to obtain policy assertions and perform some modification of the imported contract or binding to support the assertion.</source>
          <target state="translated">实现 <ph id="ph1">`ImportPolicy`</ph> 方法可以获取策略断言，并修改某些导入协定或绑定，以支持该断言。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Typically, a policy importer responds to finding a custom policy assertion by configuring or inserting a binding element into the binding being imported.</source>
          <target state="translated">通常，策略导入程序可通过配置绑定元素或将其插入到正在导入的绑定，来对查找自定义策略断言作出响应。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> passes two objects to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;</ph> method, a <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> and a <ph id="ph4">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 可将两个对象传递到 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;</ph> 方法，这两个对象分别是 <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 和 <ph id="ph4">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Typically the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> object already contains the policy assertions for each binding scope.</source>
          <target state="translated">通常，<ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> 对象包含每个绑定范围的策略断言。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>An <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> implementation performs the following steps:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> 实现会完成以下操作步骤：</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Locates the custom policy assertion for which it is responsible by calling either the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> methods, depending upon the scope.</source>
          <target state="translated">调用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph> 或 <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> 方法，依据范围查找其所负责的自定义策略断言。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Removes the policy assertion from the assertion collection.</source>
          <target state="translated">从断言集合中移除策略断言。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method locates, returns, and removes the assertion in one step.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> 方法在一个步骤中就可以完成断言的查找、返回和移除操作。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Modifies the binding stack or the contract by either adding a required custom <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;</ph> property or by modifying the <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">通过将所需的自定义 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> 添加到 <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;</ph> 属性，或修改 <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType&gt;</ph> 属性，可以修改绑定堆栈或协定。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Step 2 is important.</source>
          <target state="translated">步骤 2 非常重要。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>After all policy importers have been called, <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> checks for the existence of any policy assertions that remain.</source>
          <target state="translated">在调用了所有策略导入程序后，<ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 将检查是否存在剩余的策略协定。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>If one exists, <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> assumes that the policy import was unsuccessful and does not import the associated binding.</source>
          <target state="translated">如果存在，则 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 会认为策略导入失败，将不会导入相关绑定。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method to locate, return, and remove the assertion in one step.</source>
          <target state="translated">下面的代码示例演示了如何使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> 方法在一个步骤内完成断言的查找、返回和移除操作。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The following code example shows the client application configuration file to load the custom policy importer when the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType&gt;</ph> is invoked.</source>
          <target state="translated">下面的代码示例演示了客户端应用程序配置文件是如何在调用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType&gt;</ph> 时加载自定义策略导入程序的。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver&gt;</ph> to download and resolve metadata into description objects.</source>
          <target state="translated">下面的代码示例演示了如何使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver&gt;</ph> 下载元数据，并将其解析到说明对象中。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>