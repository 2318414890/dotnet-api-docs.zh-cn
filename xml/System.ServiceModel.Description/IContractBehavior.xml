<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IContractBehavior.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72114f8a235597b1f1c6ee487226dbe4228db0eadf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">114f8a235597b1f1c6ee487226dbe4228db0eadf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Implements methods that can be used to extend run-time behavior for a contract in either a service or client application.</source>
          <target state="translated">实现可用于扩展服务或客户端应用程序中的协定的运行时行为的方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> interface to modify, examine, or extend some aspect of contract-wide execution at the application level.</source>
          <target state="translated">实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> 接口可以在应用程序级别修改、检查或扩展协定范围内的执行的某个方面。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Unlike <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> objects, <ph id="ph3">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> objects cannot be added to the runtime using an application configuration file; they can only be added programmatically or using an attribute.</source>
          <target state="translated">与 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> 对象不同，<ph id="ph3">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> 对象是不能通过使用应用程序配置文件添加到运行时的，而只能通过编程方式或使用属性来添加。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>For more information about choosing between service, endpoint, and contract behaviors, see <bpt id="p1">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.</source>
          <target state="translated">有关服务、 终结点，以及协定行为之间进行选择的详细信息，请参阅<bpt id="p1">[</bpt>配置和扩展的运行时带有行为<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with custom data to support the behavior.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> 方法可以向绑定元素提供自定义数据，从而支持该行为。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to a contract in a client application.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> 方法可以修改、检查客户端应用程序的协定中的扩展，或向该协定中插入扩展。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to a contract in a service application.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> 方法可以修改、检查服务应用程序的协定中的扩展，或向该协定中插入扩展。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> method to ensure that a contract can support a particular feature.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> 方法可以确保协定可以支持特定功能。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return without any value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> 对象可使用所有这些方法，但通常只有一种方法是重要的，在这种情况下，未被使用的方法可不带值返回。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> as parameters.</source>
          <target state="translated">所有 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> 方法会将 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType&gt;</ph> 和 <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> 作为参数传递。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>These parameters are for examination; if you modify the objects the execution behavior is undefined.</source>
          <target state="translated">这些参数只用于检查；如果您修改了这些对象，则执行行为将是不确定的。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> types can be used on either the service or the client, or both.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> 类型既可用于服务，也可用于客户端，或者同时用于服务和客户端。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>To perform a customization task on the service, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the construction of the service runtime, which occurs when the <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on the <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">若要在服务上执行自定义任务，则必须先将 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> 对象添加到 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> 属性，然后构造服务运行时，该构造操作是在对 <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> 对象调用 <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> 方法时进行的。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>There are two ways to do this.</source>
          <target state="translated">有两种方法可以实现此目的。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The first method is to programmatically add the custom contract behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the point when the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">第一种方法是通过编程方式，对 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> 对象调用 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> 方法前，将自定义协定行为添加到 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>When applied this way, the behavior is applied for all messages flowing through that contract on any endpoint.</source>
          <target state="translated">应用此方法时，该行为将应用于流经任何终结点的该协定的所有消息。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The behavior is applied to all contracts of the same type.</source>
          <target state="translated">该行为会应用到同一类型的所有协定。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>For example, if you programmatically add the same contract type to more than one endpoint, the behavior modifies all endpoints that refer to the same contract object.</source>
          <target state="translated">例如，如果通过编程方式将同一协定类型添加到多个终结点，则该行为将修改引用同一协定对象的所有终结点。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The second method is to create a custom attribute that implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> and apply that to:</source>
          <target state="translated">第二种方法是创建可实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> 的自定义属性，并将其应用到：</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A contract interface.</source>
          <target state="translated">一个协定接口。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to all contracts of that type in any endpoint.</source>
          <target state="translated">在此情况下，该行为将应用到所有终结点中该类型的所有协定。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A service class.</source>
          <target state="translated">一个服务类。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to all endpoints regardless of contract.</source>
          <target state="translated">在此情况下，该行为将应用到所有终结点，而不管协定类型如何。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A callback class.</source>
          <target state="translated">一个回调类。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to the duplex client's endpoint.</source>
          <target state="translated">在此情况下，该行为将应用到双向客户端的终结点。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The behavior of the second approach varies slightly if the custom attribute also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">对于第二种方法，如果自定义属性还要实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=nameWithType&gt;</ph>，则其行为将会稍有不同。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is as follows:</source>
          <target state="translated">在此情况下，该行为如下：</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A contract interface.</source>
          <target state="translated">一个协定接口。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to all contracts of that type in any endpoint and <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> ignores the value of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">在此情况下，该行为将应用到所有终结点中所有该类型的协定，并且 <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 会忽略 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> 属性的值。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A service class.</source>
          <target state="translated">一个服务类。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied only to endpoints the contract of which is the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">在此情况下，该行为只应用到其协定是 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> 属性的值的终结点。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A callback class.</source>
          <target state="translated">一个回调类。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to the duplex client's endpoint and WCF ignores the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">在这种情况下，该行为将应用到双工客户端的终结点和 WCF 将忽略的值<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>To perform the customization task on the client for which it is intended, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the construction of the client runtime, which occurs when <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated">若要在客户端执行自定义计划任务，则必须先将 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> 对象添加到 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> 属性，然后构造客户端运行时，该构造操作是在调用 <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> 时进行的。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>There are two ways to do this:</source>
          <target state="translated">有两种方法可以实现此目的：</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Programmatically add the custom contract behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the point when the <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated">通过编程方式，在调用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> 之前，先将自定义协定行为添加到 <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Create a custom attribute that also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>.</source>
          <target state="translated">创建同时还可实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> 的自定义属性。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>For more information on programmatically adding <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> types to either the client or service application, see <bpt id="p1">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.</source>
          <target state="translated">有关详细信息以编程方式添加<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>类型传递给客户端或服务应用程序，请参阅<bpt id="p1">[</bpt>配置和扩展的运行时带有行为<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The following code example assumes a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementation called <ph id="ph2">`ObjectProviderBehavior`</ph> that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</source>
          <target state="translated">下面的代码示例假定自定义 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> 实现调用了可提供“单一实例”行为的 <ph id="ph2">`ObjectProviderBehavior`</ph>，它始终返回同一服务实例，且不回收该服务实例。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>To insert the instance provider customization, the example shows how to implement a custom attribute (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> to insert the custom service instance provider.</source>
          <target state="translated">对于实例提供程序自定义的插入，该示例演示了如何实现一个自定义属性 (<ph id="ph1">`SingletonBehaviorAttribute`</ph>)，该自定义属性可实现 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>，从而插入自定义服务实例提供程序。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>It also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, which binds its use to the <ph id="ph2">`ISampleService`</ph> contract.</source>
          <target state="translated">它还可实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>，这会将其使用绑定到 <ph id="ph2">`ISampleService`</ph> 协定。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The contract description to modify.</source>
          <target state="translated">要修改的协定说明。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The endpoint to modify.</source>
          <target state="translated">要修改的终结点。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The objects that binding elements require to support the behavior.</source>
          <target state="translated">绑定元素支持该行为所需的对象。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Configures any binding elements to support the contract behavior.</source>
          <target state="translated">配置所有绑定元素以支持协定行为。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with the extra objects they require to support the contract behavior.</source>
          <target state="translated">实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> 方法可向绑定元素提供支持协定行为所需的额外对象。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">对于使用指定服务协定的每个终结点，都将对其调用一次此方法。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The contract description for which the extension is intended.</source>
          <target state="translated">要实现扩展的协定说明。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The endpoint.</source>
          <target state="translated">终结点。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The client runtime.</source>
          <target state="translated">客户端运行时。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Implements a modification or extension of the client across a contract.</source>
          <target state="translated">在协定范围内执行客户端的修改或扩展。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method to view, modify, or add custom extensions to the client runtime across all messages or for one specific operation.</source>
          <target state="translated">实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> 方法可以在所有消息范围内或者针对某个特定操作，查看、修改或添加对客户端服务运行的扩展。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>For details about what customizations you can do with a client run-time object, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>.</source>
          <target state="translated">有关利用客户端运行时对象可进行的自定义的详细信息，请参见 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method can throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a service application.</source>
          <target state="translated">如果该行为仅用于服务应用程序中，则 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> 方法可引发 <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> 异常。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">对于使用指定服务协定的每个终结点，都将对其调用一次此方法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and that returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A&gt;</ph> property.</source>
          <target state="translated">注意，说明中可能存在拥有相同名称的两个操作（每个方向一个）；因此，如果必须循环执行协定为双向协定的操作，则您必须在终结点 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A&gt;</ph> 属性所返回的终结点之间关联消息方向。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in the description as there are <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> property.</source>
          <target state="translated">原因是其他行为可能已经在运行时中添加或移除了某些操作，所以无法保证说明中具有的操作数目同 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> 属性中的 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> 对象数目相等。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The following code example assumes a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementation called <ph id="ph2">`ObjectProviderBehavior`</ph> that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</source>
          <target state="translated">下面的代码示例假定自定义 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> 实现调用了可提供“单一实例”行为的 <ph id="ph2">`ObjectProviderBehavior`</ph>，它始终返回同一服务实例，且不回收该服务实例。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>To insert the instance provider customization, the example shows how to implement a custom attribute (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> to insert the custom service instance provider.</source>
          <target state="translated">对于实例提供程序自定义的插入，该示例演示了如何实现一个自定义属性 (<ph id="ph1">`SingletonBehaviorAttribute`</ph>)，该自定义属性可实现 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>，从而插入自定义服务实例提供程序。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>It also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, which binds its use to the <ph id="ph2">`ISampleService`</ph> contract.</source>
          <target state="translated">它还可实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>，这会将其使用绑定到 <ph id="ph2">`ISampleService`</ph> 协定。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The contract description to be modified.</source>
          <target state="translated">要修改的协定说明。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The endpoint that exposes the contract.</source>
          <target state="translated">公开协定的终结点。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The dispatch runtime that controls service execution.</source>
          <target state="translated">控制服务执行的调度运行时。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>Implements a modification or extension of the client across a contract.</source>
          <target state="translated">在协定范围内执行客户端的修改或扩展。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> to view, modify, or add custom extensions to the service runtime across all messages in a specific contract or for one specific operation in that contract.</source>
          <target state="translated">实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> 可以在特定协定的所有消息范围内或针对该协定中的特定操作，查看、修改或添加对服务运行时的自定义扩展。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>For details about what customizations you can perform in a service application, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph>.</source>
          <target state="translated">有关可以在服务应用程序中执行的自定义的详细信息，请参见 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> method can throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a client application.</source>
          <target state="translated">如果该行为仅用于客户端应用程序中，则 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> 方法可引发 <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> 异常。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">对于使用指定服务协定的每个终结点，都将对其调用一次此方法。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> and that returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A&gt;</ph> property.</source>
          <target state="translated">注意，说明中可能存在拥有相同名称的两个操作（每个方向一个）；因此，如果必须循环执行协定为双向协定的操作，则您必须在终结点 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A&gt;</ph> 属性所返回的终结点之间关联消息方向。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> property.</source>
          <target state="translated">此外，由于其他行为可能已经在运行时中添加或移除了某些操作，所以无法保证说明中的操作数目同 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> 属性中的 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> 对象数目相等。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The following code example assumes a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementation called <ph id="ph2">`ObjectProviderBehavior`</ph> that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</source>
          <target state="translated">下面的代码示例假定自定义 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> 实现调用了可提供“单一实例”行为的 <ph id="ph2">`ObjectProviderBehavior`</ph>，它始终返回同一服务实例，且不回收该服务实例。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>To insert the instance provider customization, the example shows how to implement a custom attribute (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> to insert the custom service instance provider.</source>
          <target state="translated">对于实例提供程序自定义的插入，该示例演示了如何实现一个自定义属性 (<ph id="ph1">`SingletonBehaviorAttribute`</ph>)，该自定义属性可实现 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>，从而插入自定义服务实例提供程序。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>It also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, which binds its use to the <ph id="ph2">`ISampleService`</ph> contract.</source>
          <target state="translated">它还可实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>，这会将其使用绑定到 <ph id="ph2">`ISampleService`</ph> 协定。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The contract to validate.</source>
          <target state="translated">要验证的协定。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The endpoint to validate.</source>
          <target state="translated">要验证的终结点。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implement to confirm that the contract and endpoint can support the contract behavior.</source>
          <target state="translated">实现此方法可以确认协定和终结点是否支持协定行为。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> method to confirm that the contract description is sufficient to support the custom contract behavior.</source>
          <target state="translated">实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> 方法可以确认协定说明是否足以支持自定义协定行为。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implementations can inspect the description and either throw or return no value.</source>
          <target state="translated">实现可以在检查该说明后不引发异常或返回任何值。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">对于使用指定服务协定的每个终结点，都将对其调用一次此方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>