<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IEndpointBehavior.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5966bdef656fd7ef0ede59320f11da19d7f505a43.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">966bdef656fd7ef0ede59320f11da19d7f505a43</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>Implements methods that can be used to extend run-time behavior for an endpoint in either a service or client application.</source>
          <target state="translated">实现可用于扩展服务或客户端应用程序中的终结点的运行时行为的方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> interface to modify, examine, or extend some aspect of endpoint-wide execution at the application level for either client or service applications.</source>
          <target state="translated">实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> 接口可以在应用程序级别，为客户端或服务应用程序修改、检查或扩展终结点范围内的某些执行方面。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A&gt;</ph> method to pass custom data at runtime to enable bindings to support custom behavior.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A&gt;</ph> 方法可以在运行时传递自定义数据，从而使绑定支持自定义行为。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to an endpoint in a client application.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A&gt;</ph> 方法可以在客户端应用程序中修改、检查或插入对终结点中的扩展。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to endpoint-wide execution in a service application.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> 方法可以在服务应用程序中修改、检查或插入对终结点范围执行的扩展。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A&gt;</ph> method to confirm that a <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> meets specific requirements.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A&gt;</ph> 方法可以确认 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> 是否满足特定要求。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>This can be used to ensure that an endpoint has a certain configuration setting enabled, supports a particular feature and other requirements.</source>
          <target state="translated">这可用于确保终结点启用某一配置设置、支持特定功能和其他需求。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return, performing no action.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> 对象可使用所有这些方法，但通常只有一种方法是重要的，在此情况下，未被使用的方法可返回且不执行任何操作。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> methods pass a <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> object as a parameter.</source>
          <target state="translated">所有 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> 方法会将 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> 对象作为参数传递。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>This parameter is for examination only; if you modify the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> object the execution behavior is undefined.</source>
          <target state="translated">此参数只用于检查；如果您修改了 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> 对象，则执行行为将是不确定的。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> objects are typically used to access the various properties of the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType&gt;</ph>, and <ph id="ph5">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType&gt;</ph> objects in a service application and the <ph id="ph6">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime?displayProperty=nameWithType&gt;</ph> and <ph id="ph7">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> in a client application.</source>
          <target state="translated">通常，<ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> 对象用于访问服务应用程序中的 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType&gt;</ph>、<ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph>、<ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType&gt;</ph> 和 <ph id="ph5">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType&gt;</ph> 对象的各个属性，以及客户端应用程序中的 <ph id="ph6">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime?displayProperty=nameWithType&gt;</ph> 和 <ph id="ph7">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> 对象的各个属性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>In addition, you can access the properties of duplex clients and services using the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType&gt;</ph> properties, respectively.</source>
          <target state="translated">此外，您还可分别通过使用 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A?displayProperty=nameWithType&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType&gt;</ph> 属性来访问双向客户端和服务的属性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>For a description of the various properties and customizations available, see <bpt id="p1">[</bpt>Extending ServiceHost and the Service Model Layer<ept id="p1">](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md)</ept>.</source>
          <target state="translated">有关的各种属性和使用自定义设置的说明，请参阅<bpt id="p1">[</bpt>扩展 ServiceHost 和服务模型层<ept id="p1">](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md)</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>Once a customization has been decided upon (and the customization interface implemented if necessary) and the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> has been decided is the appropriate scope of customization, the customization must be inserted into the <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> runtime by implementing <ph id="ph3">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> and adding the endpoint behavior to the runtime.</source>
          <target state="translated">一旦确定要插入自定义，且已实现了必要的自定义接口，同时所确定的 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> 也在相应的自定义范围内，则就必须通过实现 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 并向运行时添加终结点行为，来将自定义插入 <ph id="ph3">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> 运行时。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>There are two ways to add the behavior to the runtime:</source>
          <target state="translated">有两种方法可以将该行为添加到运行时：</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>Programmatically add the custom endpoint behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> property prior to the opening of the service host (in a service application) or the channel factory (in a client application).</source>
          <target state="translated">以编程方式，先将自定义终结点行为添加到 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> 属性，然后打开服务主机（位于服务应用程序中）或通道工厂（位于客户端应用程序中）。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>Configure the behavior using an application configuration file.</source>
          <target state="translated">使用应用程序配置文件配置该行为。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>For details, see <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>behaviorExtensions<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/behaviorextensions.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>behaviorExtensions<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/behaviorextensions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>To perform the service customization task for which it is intended, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType&gt;</ph> property prior to the construction of the service runtime, which occurs when <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">若要执行服务自定义计划任务，则必须先将 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> 对象添加到 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType&gt;</ph> 属性，然后构造服务运行时，该构造操作是在对 <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> 调用 <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> 方法时执行的。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>To perform a client customization task, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType&gt;</ph> property before calling the <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method on <ph id="ph5">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph>.</source>
          <target state="translated">若要执行客户端自定义任务，则必须对 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> 调用 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType&gt;</ph> 方法或 <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> 方法之前，先将 <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> 对象添加到 <ph id="ph5">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>The following code example shows the implementation of an endpoint behavior that adds an <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType&gt;</ph> object in a service application.</source>
          <target state="translated">下面的代码示例演示了在服务应用程序中添加 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType&gt;</ph> 对象的终结点行为的实现。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>In this case, the <ph id="ph1">`EndpointBehaviorMessageInspector`</ph> class implements <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType&gt;</ph> to inspect the inbound and outbound message, the <ph id="ph3">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> interface to insert the inspector class into the inspection system for all endpoints to which the behavior applies, and the <ph id="ph4">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph> to enable the message inspector behavior using an application configuration file.</source>
          <target state="translated">在此情况下，<ph id="ph1">`EndpointBehaviorMessageInspector`</ph> 类将通过使用应用程序配置文件，实现 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType&gt;</ph> 以检查入站和出站消息，实现 <ph id="ph3">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> 接口以将检查器类插入该行为应用到的所有终结点的检查系统，以及实现 <ph id="ph4">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph> 以启用消息检查器行为。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>The first step is to implement the message inspector.</source>
          <target state="translated">第一步是实现消息检查器。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>The next code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to add the message inspector to the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">下面的代码示例演示了如何使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> 方法将消息检查器添加到 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>The following code example shows the implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph> in order to enable use of the message inspector behavior from a configuration file.</source>
          <target state="translated">下面的代码示例演示了如何实现 <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>，以便从配置文件使用消息检查器行为。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IEndpointBehavior">
          <source>Finally, the following configuration file shows how the preceding example can be used from configuration.</source>
          <target state="translated">最后，下面的配置文件演示了如何从配置使用前面的示例。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The endpoint to modify.</source>
          <target state="translated">要修改的终结点。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The objects that binding elements require to support the behavior.</source>
          <target state="translated">绑定元素支持该行为所需的对象。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Implement to pass data at runtime to bindings to support custom behavior.</source>
          <target state="translated">实现此方法可以在运行时将数据传递给绑定，从而支持自定义行为。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with the extra objects they require to support the endpoint behavior.</source>
          <target state="translated">实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A&gt;</ph> 方法可以向绑定元素提供其支持终结点行为所需的其他对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>When binding parameters are added here the binding can locate these objects when the channel listener or channel factory is created.</source>
          <target state="translated">如果在此处添加绑定参数，则在创建通道侦听器或通道工厂时，绑定将会查找这些对象。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Typically, you implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A&gt;</ph> method to pass information about the endpoint to a custom binding element so that it can build a supporting channel correctly.</source>
          <target state="translated">通常，您可通过实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A&gt;</ph> 方法，来将有关终结点的信息传递给自定义绑定元素，以使其能正确生成支持通道。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Return no value if no modifications are required.</source>
          <target state="translated">如果无需任何修改，则不返回值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The endpoint that is to be customized.</source>
          <target state="translated">要自定义的终结点。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The client runtime to be customized.</source>
          <target state="translated">要自定义的客户端运行时。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Implements a modification or extension of the client across an endpoint.</source>
          <target state="translated">在终结点范围内实现客户端的修改或扩展。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A&gt;</ph> method to view, modify, or add custom extension to the client runtime across all messages used with an endpoint or for specific operations.</source>
          <target state="translated">实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A&gt;</ph> 方法可以在通过特定终结点使用的所有消息范围内或针对特定操作，查看、修改或插入对客户端运行时的自定义扩展。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>For details about what customizations you can do with a client run-time object, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>.</source>
          <target state="translated">有关利用客户端运行时对象可进行的自定义的详细信息，请参见 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>It is recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A&gt;</ph> method throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> if the behavior is only intended for use in a service application.</source>
          <target state="translated">如果该行为仅用于服务应用程序中，则建议 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A&gt;</ph> 方法引发 <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Because other behaviors may have already added or removed some operations from the runtime there is no guarantee that there are the same number of operations in the description as there are <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> property.</source>
          <target state="translated">由于其他行为可能已经在运行时中添加或移除了某些操作，所以无法保证说明中的操作的数目与 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> 属性中的<ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> 对象数目相等。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>The endpoint that exposes the contract.</source>
          <target state="translated">公开协定的终结点。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>The endpoint dispatcher to be modified or extended.</source>
          <target state="translated">要修改或扩展的终结点调度程序。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>Implements a modification or extension of the service across an endpoint.</source>
          <target state="translated">在终结点范围内实现服务的修改或扩展。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to view, modify, or extend the service runtime across all messages or for specific operations in an endpoint.</source>
          <target state="translated">实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> 方法可以在所有消息范围内或针对特定操作，查看、修改或扩展服务运行时。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>For details about what customizations you can do in a service application, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">有关可在服务应用程序中进行的自定义的详细信息，请参见 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>It is recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> method throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a client application.</source>
          <target state="translated">如果该行为仅用于客户端应用程序中，则建议 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> 方法引发 <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> 异常。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>Note that there can be two operations with the same name in the description when using a callback contract (one operation in each direction).</source>
          <target state="translated">注意，使用回调协定时，说明中可能会存在两个同名的操作（每个方向一个操作）。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>If you are iterating through operations, you must correlate the message direction between the endpoint <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType&gt;</ph> and what is returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果您要循环执行操作，则就必须在终结点 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType&gt;</ph> 属性返回的内容之间关联消息方向。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">此外，由于其他行为可能已经在运行时中添加或移除了某些操作，所以无法保证说明中的操作数目同 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> 属性中的 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A?displayProperty=nameWithType&gt;</ph> 对象数目相等。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>The following code example shows the implementation of an endpoint behavior that adds an <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType&gt;</ph> object in a service application.</source>
          <target state="translated">下面的代码示例演示了在服务应用程序中添加 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType&gt;</ph> 对象的终结点行为的实现。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>In this case, the <ph id="ph1">`EndpointBehaviorMessageInspector`</ph> class implements <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType&gt;</ph> to inspect the inbound and outbound message, the <ph id="ph3">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> interface to insert the inspector class into the inspection system for all endpoints to which the behavior applies, and the <ph id="ph4">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph> to enable the message inspector behavior using an application configuration file.</source>
          <target state="translated">在此情况下，<ph id="ph1">`EndpointBehaviorMessageInspector`</ph> 类将通过使用应用程序配置文件，实现 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType&gt;</ph> 以检查入站和出站消息，实现 <ph id="ph3">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> 接口以将检查器类插入该行为应用到的所有终结点的检查系统，以及实现 <ph id="ph4">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph> 以启用消息检查器行为。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>The first step is to implement the message inspector.</source>
          <target state="translated">第一步是实现消息检查器。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>The next code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to add the message inspector to the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">下面的代码示例演示了如何使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> 方法将消息检查器添加到 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>The following code example shows the implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph> in order to enable use of the message inspector behavior from a configuration file.</source>
          <target state="translated">下面的代码示例演示了如何实现 <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>，以便从配置文件使用消息检查器行为。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>Finally, the following configuration file shows how the preceding example can be used from configuration.</source>
          <target state="translated">最后，下面的配置文件演示了如何从配置使用前面的示例。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The endpoint to validate.</source>
          <target state="translated">要验证的终结点。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implement to confirm that the endpoint meets some intended criteria.</source>
          <target state="translated">实现此方法可以确认终结点是否满足某些设定条件。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A&gt;</ph> method to examine the structure to confirm any set of criteria.</source>
          <target state="translated">实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A&gt;</ph> 方法可以检查结构，从而可以确认所有条件集。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>It is not necessary to perform any customizations in <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> to make use of this method.</source>
          <target state="translated">要使用此方法，并不一定要在 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A&gt;</ph> 或 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> 中执行自定义。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>If the endpoint passes validation, return; otherwise, throw an exception.</source>
          <target state="translated">如果终结点通过验证，则返回；否则，引发异常。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>For example, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A&gt;</ph> method can be use to ensure that all endpoints use an approved corporate binding.</source>
          <target state="translated">例如，可以使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A&gt;</ph> 方法以确保所有终结点都使用一个已批准的合作绑定。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>