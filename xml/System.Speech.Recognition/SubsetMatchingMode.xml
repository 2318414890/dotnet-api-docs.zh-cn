<Type Name="SubsetMatchingMode" FullName="System.Speech.Recognition.SubsetMatchingMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1224b891f080e35b397b823f223691d332fd4721" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30528301" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SubsetMatchingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SubsetMatchingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SubsetMatchingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SubsetMatchingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SubsetMatchingMode" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>枚举匹配模式的子集值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 System.Speech，您可以构造成功识别的短语，即使在音频的输入中找到其内容的一个子集语法。  
  
 默认情况下，识别引擎要求整个短语完全匹配。 识别引擎还可以匹配根据定义的参数部分短语<xref:System.Speech.Recognition.SubsetMatchingMode>用作的自变量的成员<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A>或<xref:System.Speech.Recognition.SrgsGrammar.SrgsSubset.%23ctor%2A>构造函数，或<xref:System.Speech.Recognition.GrammarBuilder.Append%2A>方法。  
  
 以下说明如何每个的<xref:System.Speech.Recognition.SubsetMatchingMode>成员影响识别包含短语语法中使用"一辆汽车的平面的船舶卡车"时。  
  
 **OrderedSubset**  
  
 此模式下指示短语的子集将用于成功识别整个短语，如果符合以下条件：  
  
-   短语中的一个或多个单词在音频的输入中识别。  
  
-   这些可识别的单词的相对顺序是与短语中的相同。  
  
-   匹配的单词可能只能包含介词和文章。  
  
 添加使用 OrderedSubset 语法短语"car 的平面的船舶 truck"模式产生识别以下结果：  
  
|**输入的短语**|**结果**|  
|----------------------|----------------|  
|"一辆汽车的平面的船舶卡车"|整个短语"car 的平面的船舶卡车"将被识别。|  
|"一辆汽车的船舶卡车"|整个短语"car 的平面的船舶卡车"将被识别。|  
|"一辆汽车的平面"|整个短语"car 的平面的船舶卡车"将被识别。 识别的子集不需要是一串的原始字符串。|  
|"一辆汽车的平面的卡车船"|识别未成功。 单词是无序的。|  
|""|整个短语"car 的平面的船舶卡车"将被识别。 介词和文章将用于识别。|  
  
 **OrderedSubsetContentRequired**  
  
 此模式下指示短语的子集将用于成功识别整个短语，如果符合以下条件：  
  
-   在的音频的输入中识别的短语中的一个或多个单词和  
  
-   这些可识别的单词的相对顺序是与短语中的相同。  
  
-   匹配的单词不能包含仅介词和文章。  
  
 添加使用 OrderedSubsetContentRequired 语法短语"car 的平面的船舶 truck"模式产生识别以下结果：  
  
|**输入的短语**|**结果**|  
|----------------------|----------------|  
|"一辆汽车的平面的船舶卡车"|整个短语"car 的平面的船舶卡车"将被识别。|  
|"一辆汽车的船舶卡车"|整个短语"car 的平面的船舶卡车"将被识别。|  
|"一辆汽车的平面"|整个短语"car 的平面的船舶卡车"将被识别。 识别的子集不需要是一串的原始字符串。|  
|"一辆汽车的平面的卡车船"|识别未成功。 单词是无序的。|  
|""|识别未成功。  语音输入必须包含文章和介词以外的单词。|  
  
 **子序列：**  
  
 此模式下指示短语的子集将用于成功识别整个短语，如果符合以下条件：  
  
-   短语中的一个或多个单词在音频的输入中识别为这个短语： 的序列和  
  
-   这些可识别的单词的相对顺序是与短语中的相同。  
  
-   匹配的单词可能只能包含介词和文章。  
  
 使用子序列模式语法添加短语"car 的平面的船舶卡车"产生识别以下结果：  
  
|**输入的短语**|**结果**|  
|----------------------|----------------|  
|"一辆汽车的平面的船舶卡车"|整个短语"car 的平面的船舶卡车"将被识别。|  
|"一辆汽车的船舶卡车"|整个短语"car 的平面的船舶卡车"将被识别。|  
|"一辆汽车的平面"|识别未成功。 识别的子集需要是一串的原始字符串。|  
|"一辆汽车的平面的卡车船"|识别未成功。 单词是无序的。|  
|""|整个短语"car 的平面的船舶卡车"将被识别。 介词和文章将用于识别。|  
  
 **SubsequenceContentRequired**  
  
 此模式下指示短语的子集将用于成功识别整个短语，如果符合以下条件：  
  
-   将匹配字符串中的一个或多个单词中的音频的输入被识别为短语序列。  
  
-   匹配的单词不能包含仅介词和文章。  
  
 添加使用 SubsequenceContentRequired 语法短语"car 的平面的船舶 truck"模式产生识别以下结果：  
  
|**输入的短语**|**结果**|  
|----------------------|----------------|  
|"一辆汽车的平面的船舶卡车"|整个短语"car 的平面的船舶卡车"将被识别。|  
|"一辆汽车的船舶卡车"|整个短语"car 的平面的船舶卡车"将被识别。|  
|"一辆汽车的平面"|识别未成功。 识别的子集需要是一串的原始字符串。|  
|"一辆汽车的平面的卡车船"|识别未成功。 单词是无序的。|  
|""|识别未成功。 语音输入必须包含文章和介词以外的单词。|  
  
   
  
## Examples  
 下面是一个测试例程，后者将生成四个<xref:System.Speech.Recognition.Grammar>对象，为每个使用相同的短语， `SubsetMatchingModes`。 这些<xref:System.Speech.Recognition.Grammar>对象然后可以进行测试。  
  
```  
private void CreateSubsetMatchTest()   
{  
  foreach ( System.Speech.Recognition.SubsetMatchingMode mode   
              in Enum.GetValues(typeof(System.Speech.Recognition.SubsetMatchingMode)))  
  {  
    GrammarBuilder gb = new GrammarBuilder("a car the truck a boat that plane",mode);  
    Grammar grammar = new Grammar(gb);  
    grammar.Name = mode.ToString();  
    grammar.Enabled=true;  
    _recognizer.LoadGrammar(grammar);  
  }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
    <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" />
    <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
  </Docs>
  <Members>
    <Member MemberName="OrderedSubset">
      <MemberSignature Language="C#" Value="OrderedSubset" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.SubsetMatchingMode OrderedSubset = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubset" />
      <MemberSignature Language="VB.NET" Value="OrderedSubset" />
      <MemberSignature Language="C++ CLI" Value="OrderedSubset" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SubsetMatchingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>指示子集匹配模式是 OrderedSubset。</summary>
      </Docs>
    </Member>
    <Member MemberName="OrderedSubsetContentRequired">
      <MemberSignature Language="C#" Value="OrderedSubsetContentRequired" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.SubsetMatchingMode OrderedSubsetContentRequired = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubsetContentRequired" />
      <MemberSignature Language="VB.NET" Value="OrderedSubsetContentRequired" />
      <MemberSignature Language="C++ CLI" Value="OrderedSubsetContentRequired" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SubsetMatchingMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>指示子集匹配模式是 OrderedSubsetContentRequired。</summary>
      </Docs>
    </Member>
    <Member MemberName="Subsequence">
      <MemberSignature Language="C#" Value="Subsequence" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.SubsetMatchingMode Subsequence = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SubsetMatchingMode.Subsequence" />
      <MemberSignature Language="VB.NET" Value="Subsequence" />
      <MemberSignature Language="C++ CLI" Value="Subsequence" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SubsetMatchingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>指示子集匹配模式是 Subsequence。</summary>
      </Docs>
    </Member>
    <Member MemberName="SubsequenceContentRequired">
      <MemberSignature Language="C#" Value="SubsequenceContentRequired" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.SubsetMatchingMode SubsequenceContentRequired = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SubsetMatchingMode.SubsequenceContentRequired" />
      <MemberSignature Language="VB.NET" Value="SubsequenceContentRequired" />
      <MemberSignature Language="C++ CLI" Value="SubsequenceContentRequired" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SubsetMatchingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>指示子集匹配模式是 SubsequenceContentRequired。</summary>
      </Docs>
    </Member>
  </Members>
</Type>