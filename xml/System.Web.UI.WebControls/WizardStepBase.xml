<Type Name="WizardStepBase" FullName="System.Web.UI.WebControls.WizardStepBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5981e7c18390097f7357c75fda929484a656009d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378229" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WizardStepBase : System.Web.UI.WebControls.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WizardStepBase extends System.Web.UI.WebControls.View" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WizardStepBase&#xA;Inherits View" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepBase abstract : System::Web::UI::WebControls::View" />
  <TypeSignature Language="F#" Value="type WizardStepBase = class&#xA;    inherit View" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implements the basic functionality required by a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你无法直接创建的实例<xref:System.Web.UI.WebControls.WizardStepBase>类。 相反，由继承此类<xref:System.Web.UI.WebControls.WizardStep>类和<xref:System.Web.UI.WebControls.TemplatedWizardStep>类以提供用作向导的控件中的步骤的基本功能。  
  
 你可以从派生<xref:System.Web.UI.WebControls.WizardStepBase>类，以创建一个自定义类，表示的向导控件中的唯一步骤。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WizardStepBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WizardStepBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReturn">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReturn : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the user is allowed to return to the current step from a subsequent step in a <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</summary>
        <value>
          <see langword="true" /> 如果允许用户以返回到当前的步骤;否则为<see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性可以用于强制实施中的线性导航<xref:System.Web.UI.WebControls.Wizard>控件。 如果每个步骤都有其<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性设置为`false`，用户将不能已被访问后返回到一个步骤。 您可能需要使用此功能的一种情况是不允许用户在完成因为你是将数据保存到将数据库作为每个步骤后返回到另一个步骤完成。 如果你将数据保存在每个步骤后，并允许用户返回到步骤和更改信息已保存后，保存的数据可能会损坏。 通过设置<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性`false`，一旦用户已离开一个步骤，他或她将无法返回到它并更改任何值。  
  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性确定如何以及何时**上一步**不呈现按钮。 下表描述了**上一步**按钮呈现行为。  
  
|方案|行为|  
|--------------|--------------|  
|线性： 步骤 1 具有<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>设置为`false`和用户执行任何操作将转到步骤 2。|步骤 2 不会显示**上一步**按钮。|  
|非线性： 步骤 1 具有<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>设置为`false`和用户执行任何操作将转到步骤 3。|步骤 3 不会显示**上一步**按钮。|  
|侧栏按钮： 第 2 步具有<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>设置为`false`，<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>设置为`true`，并在侧栏按钮用户单击。|没有按钮将被自动禁用侧栏上时<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>设置为`false`。 如果用户单击按钮时，则忽略该操作。|  
|线性和非线性带有自定义模板： 该步骤具有自定义导航模板。|否自动隐藏或显示发生如果<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>设置为`false`何时使用模板进行导航。 **上一步**按钮应在模板上可选。|  
|使用 Visual Studio 设计器和<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>： 在控件有 5 个步骤，你正在在步骤 4，并且运行页面。|步骤 4 时<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>，则**上一步**呈现按钮。 **上一步**按钮仅对隐藏<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>设置为<xref:System.Web.UI.WebControls.WizardStepType.Step>当历史记录中前面的步骤具有<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>设置为`false`。 由于首先呈现步骤 4 和历史记录中, 有任何步骤**上一步**按钮不会隐藏。|  
|启动步骤和非线性导航： 的用户访问步骤 3 和步骤 4 和步骤 1 具有<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>设置为<xref:System.Web.UI.WebControls.WizardStepType.Start>。|向导不会添加**上一步**按钮时<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>设置为<xref:System.Web.UI.WebControls.WizardStepType.Start>而不考虑用户如何导航到该步骤。|  
|在历史记录中的相同步骤： 的用户访问第 3 步其中<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>设置为<xref:System.Web.UI.WebControls.WizardStepType.Step>和用户不会提交其操作。 然后单击在步骤 3 上的上一个按钮。|向导控件将检查以查看**上一步**历史记录中的步骤是用户当前正在"相同"步骤。 如果步骤是相同的向导控制回顾历史记录以确定前面的"其他"步骤中，和基本的显示**上一步**按钮和目标基于"不同步骤"历史记录中。|  
  
> [!NOTE]
>  当<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性设置为`false`，但<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>的父控件的属性<xref:System.Web.UI.WebControls.WizardStepBase>设置为`true`，侧栏区域中的按钮单击不起作用。 侧栏区域通常显示提供非线性导航窗格中，因此如果你未使用的非线性导航功能，你可能想要设置<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>属性`false`。  
  
 此属性不能通过主题或样式表主题设置。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性来阻止用户使用返回中的一个步骤<xref:System.Web.UI.WebControls.Wizard>后已被访问进行控制。 在示例中，`Step1`步骤都有其<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性设置为`false`。 在用户之后离开`Step1`步骤中，没有上一步按钮将出现在`Step2`步骤。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/CS/wizardstepbaseallowreturncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/VB/wizardstepbaseallowreturnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether themes apply to this control.</summary>
        <value>
          <see langword="true" /> 若要使用主题;否则为<see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>属性指示是否为启用主题<xref:System.Web.UI.WebControls.WizardStepBase>控件。 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>属性还会影响是否为其控件集合中包含的控件启用主题。 当<xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>属性是`true`，应用程序的主题目录中搜索要应用的控件外观。 如果用于特定的控件中的主题目录存在，则不会应用的外观。 当<xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>属性是`false`，则不搜索主题目录和的值<xref:System.Web.UI.Control.SkinID%2A>未使用属性。  
  
 控件可以重写<xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>值集，通过其父控件或包含的页。 例如，如果<xref:System.Web.UI.WebControls.WizardStepBase>控件具有<xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>设置为`false`，你可以有选择地应用到包含向导步骤中的设置的子控件的主题<xref:System.Web.UI.Control.EnableTheming%2A>属性`true`上各个子控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the programmatic identifier assigned to the server control.</summary>
        <value>分配给控件的编程标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>属性来标识和引用特定的向导步骤控件 Web 窗体页中。 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>值将成为在页中的控件实例的名称; 这样，你可以轻松访问该页面的代码中的特定步骤。 例如，如果你设置<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>属性<xref:System.Web.UI.WebControls.WizardStepBase>控件到"步骤 1"，你可以引用在代码中为该页面的向导步骤的子控件`Step1.Controls`。  
  
 <xref:System.Web.UI.WebControls.WizardStepBase>控件可确保在每个步骤<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>添加或修改在设计时步骤时，控件具有有效的唯一标识符。 例如，如果设置<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>它不能在设计时的步骤，请为匹配的标识符中包含的另一个步骤<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>控件，但不能与匹配<xref:System.Web.UI.Control.ID%2A>用于包含<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>控件。  
  
   
  
## Examples  
 下面的代码示例定义的三个向导步骤<xref:System.Web.UI.WebControls.Wizard>Web 窗体页中的控件。 在代码页中，向导步骤实例已由其 ID 的值，命名，并且可以在代码中引用它们`WizardStep1`， `WizardStep2`，和`WizardStep3`。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The property was set to an invalid identifier string at design time.  -or-  The property was set to the same identifier as the containing <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> control at design time.  -or-  The property was set to the same identifier as another step in the containing <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> control at design time.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="wizardStepBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An <see cref="T:System.Object" /> that represents the that represents the control state to be restored.</param>
        <summary>Restores view-state information from a previous page request that was saved by the <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> method.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name associated with a step in a control that acts as a wizard.</summary>
        <value>用作向导的控件中的步骤与关联的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>属性返回一个字符串，标识的向导控件中的步骤。 如果为指定值<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性，<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>属性返回该值。 如果为不指定任何值<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性，<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>属性返回的值<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>属性。 如果值未指定任何一个<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>或<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>属性，<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>属性返回`null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="wizardStepBase.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="wizardStepBase.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
        <summary>Outputs the content of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> control's child controls to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered on the client.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WizardStepType StepType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepType As WizardStepType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WizardStepType StepType { System::Web::UI::WebControls::WizardStepType get(); void set(System::Web::UI::WebControls::WizardStepType value); };" />
      <MemberSignature Language="F#" Value="member this.StepType : System.Web.UI.WebControls.WizardStepType with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of navigation user interface (UI) to display for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WizardStepType" /> 枚举值之一。 默认值为 <see langword="WizardStepType.Auto" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>属性指定的一种导航按钮以显示中为步骤<xref:System.Web.UI.WebControls.Wizard>控件。 如果指定此属性的值时，任何步骤标记为<xref:System.Web.UI.WebControls.WizardStepType.Complete>处于禁用状态侧栏中显示。  
  
 如果未指定此属性的值，则默认将`WizardStepType.Auto`。  
  
 下表列出的可用设置<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>属性和步骤所产生行为：  
  
 `WizardStepType.Auto`  
 由在其中声明该步骤的顺序确定的导航步骤呈现的用户界面。  
  
 `WizardStepType.Complete`  
 要显示的最后一个步骤。 没有导航按钮的呈现。  
  
 `WizardStepType.Finish`  
 该步骤是最终数据集合步骤。 完成和上一步按钮导航呈现。  
  
 `WizardStepType.Start`  
 步骤是第一个显示。 不呈现上一步按钮。  
  
 `WizardStepType.Step`  
 该步骤是开始日期和完成步骤之间的任何步骤。 上一步和下一步按钮导航呈现。 此步骤类型可用于重写<xref:System.Web.UI.WebControls.WizardStepType.Auto>步骤类型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.WizardStepType" /> enumeration values.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the title to use for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control when the sidebar feature is enabled.</summary>
        <value>要用于中的步骤的标题<see cref="T:System.Web.UI.WebControls.Wizard" />控制侧栏功能启用时。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性显示在一个步骤的用户友好标题<xref:System.Web.UI.WebControls.Wizard>控制侧栏功能启用时。 如果<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>未设置属性和边栏功能启用时，值<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>侧栏按钮的显示属性。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性显示在一个步骤的用户友好标题<xref:System.Web.UI.WebControls.Wizard>控件。 在示例中，`Step1`不具有其<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性集，因此它将出现在<xref:System.Web.UI.WebControls.Wizard>控件作为"WizardStep1"。 `Step2` 具有其<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性集，因此它显示为"步骤 2"。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/CS/wizardstepbasetitlecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/VB/wizardstepbasetitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="Wizard">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Wizard Wizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Wizard Wizard" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wizard As Wizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Wizard ^ Wizard { System::Web::UI::WebControls::Wizard ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Wizard : System.Web.UI.WebControls.Wizard" Usage="System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Wizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.UI.WebControls.Wizard" /> control that is the parent of the object derived from <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Wizard" />是对象的父级的控件派生自<see cref="T:System.Web.UI.WebControls.WizardStepBase" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
  </Members>
</Type>