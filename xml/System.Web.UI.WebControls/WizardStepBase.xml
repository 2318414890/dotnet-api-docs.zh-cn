<Type Name="WizardStepBase" FullName="System.Web.UI.WebControls.WizardStepBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="72c221364004187105645aa4c552aa5116b260ab" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55310172" /></Metadata><TypeSignature Language="C#" Value="public abstract class WizardStepBase : System.Web.UI.WebControls.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WizardStepBase extends System.Web.UI.WebControls.View" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WizardStepBase&#xA;Inherits View" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepBase abstract : System::Web::UI::WebControls::View" />
  <TypeSignature Language="F#" Value="type WizardStepBase = class&#xA;    inherit View" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>实现 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件中一个步骤所需的基本功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您不能直接创建的实例<xref:System.Web.UI.WebControls.WizardStepBase>类。 相反，由继承此类<xref:System.Web.UI.WebControls.WizardStep>类和<xref:System.Web.UI.WebControls.TemplatedWizardStep>类提供用作向导的控件中的一个步骤的基本功能。  
  
 可以从派生<xref:System.Web.UI.WebControls.WizardStepBase>类，以创建一个自定义类，表示向导控件中的唯一步骤。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
    <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WizardStepBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WizardStepBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="AllowReturn">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReturn : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否允许用户从 <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> 集合中后面的步骤返回当前步骤。</summary>
        <value>如果允许用户返回当前步骤，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性可用于强制实施中的线性导航<xref:System.Web.UI.WebControls.Wizard>控件。 如果每个步骤都具有其<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性设置为`false`，用户将无法再被访问后返回到的步骤。 您可能需要使用此功能的一种方案是不允许用户返回到的步骤，因为您是将数据保存到数据库的每个步骤已完成后完成。 如果将数据保存在每个步骤后，允许用户返回到的步骤和后已保存更改的信息已保存的数据可能会损坏。 通过设置<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性设置为`false`，一旦用户已离开一个步骤，他或她将不能返回到它并更改任何值。  
  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性确定如何以及何时**上一步**不呈现。 下表描述了**上一步**按钮呈现行为。  
  
|方案|行为|  
|--------------|--------------|  
|线性：步骤 1<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>设置为`false`和用户执行任何操作将转到步骤 2。|步骤 2 不会显示**上一步**按钮。|  
|非线性:步骤 1<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>设置为`false`和用户执行任何操作将转到步骤 3。|步骤 3 不会显示**上一步**按钮。|  
|侧栏按钮：步骤 2 具有<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>设置为`false`，<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>设置为`true`，并且用户单击侧栏按钮。|没有按钮将被自动禁用侧栏上时<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>设置为`false`。 如果用户单击按钮时，则忽略该操作。|  
|线性和非线性带有自定义模板：具有自定义导航模板。|无自动隐藏或显示会发生<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>设置为`false`使用一个模板来导航。 **上一步**按钮应当是可选的模板。|  
|使用 Visual Studio 设计器和<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>:控件有 5 个步骤，你正在在步骤 4 中，并且运行该页面。|步骤 4 时<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>，则**上一步**呈现按钮。 **上一步**按钮仅对隐藏<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>设置为<xref:System.Web.UI.WebControls.WizardStepType.Step>当上一步的历史记录中具有<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>设置为`false`。 因为首先呈现步骤 4 和历史记录中，没有步骤**上一步**按钮不会隐藏。|  
|开始步骤和非线性导航：用户访问步骤 3 和步骤 4 和步骤 1 已<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>设置为<xref:System.Web.UI.WebControls.WizardStepType.Start>。|该向导不会添加**上一步**按钮时<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>设置为<xref:System.Web.UI.WebControls.WizardStepType.Start>而不考虑用户如何导航到该步骤。|  
|历史记录中的相同步骤：用户访问第 3 步其中<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>设置为<xref:System.Web.UI.WebControls.WizardStepType.Step>和用户不会提交它们的操作。 然后单击在步骤 3 上的上一个按钮。|向导控件将检查以查看是否**上一步**历史记录中的步骤是用户当前正在"相同"步骤。 如果在步骤是相同的向导控件回顾历史记录以确定前面的"其他"步骤中和基的显示**上一步**按钮和目标基于"不同步骤"历史记录中。|  
  
> [!NOTE]
>  当<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性设置为`false`，但<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>属性的父控件<xref:System.Web.UI.WebControls.WizardStepBase>设置为`true`上侧栏区域中的按钮, 不起作用。 侧栏区域通常显示提供非线性导航栏中，因此如果您不使用非线性导航的功能，您可能需要设置<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>属性设置为`false`。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>并[ASP.NET 主题和外观](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的示例演示了如何使用<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性来阻止用户返回到另一个步骤<xref:System.Web.UI.WebControls.Wizard>后访问它进行控制。 在示例中，`Step1`的步骤都有其<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性设置为`false`。 以用户离开`Step1`步骤中，没有上一步按钮显示在`Step2`步骤。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/CS/wizardstepbaseallowreturncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/VB/wizardstepbaseallowreturnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示主题是否应用于该控件。</summary>
        <value>如果使用主题，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>属性指示是否为启用主题<xref:System.Web.UI.WebControls.WizardStepBase>控件。 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>属性还会影响是否为自己的控件集合中包含的控件启用主题。 当<xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>属性是`true`，应用程序的主题目录搜索的控件外观应用。 如果在主题目录中存在用于特定控件，则不会应用外观。 当<xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>属性是`false`，则不会搜索在主题目录和的值<xref:System.Web.UI.Control.SkinID%2A>不使用属性。  
  
 控件可以重写<xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>值集，由其父控件或包含页。 例如，如果<xref:System.Web.UI.WebControls.WizardStepBase>控件具有<xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>设置为`false`，您可以有选择地应用到通过设置向导步骤中所包含的子控件的主题<xref:System.Web.UI.Control.EnableTheming%2A>属性设置为`true`上各个子控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置分配给服务器控件的编程标识符。</summary>
        <value>分配给控件的编程标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>属性以确定并引用特定的向导步骤控件在 Web 窗体页中。 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>值将成为在页中的控件实例的名称; 这使您可以轻松地访问该页面的代码中的特定步骤。 例如，如果您设置<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>的属性<xref:System.Web.UI.WebControls.WizardStepBase>控制到"步骤 1"，可以引用作为该页面的代码中的向导步骤的子控件`Step1.Controls`。  
  
 <xref:System.Web.UI.WebControls.WizardStepBase>控件可确保在每个步骤<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>控件时的步骤中添加或修改在设计时具有有效的唯一标识符。 例如，设置<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>它不能与另一个步骤中包含的标识符匹配用于在设计时的步骤，请<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>控件使用，而且不能匹配<xref:System.Web.UI.Control.ID%2A>包含<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>控件。  
  
   
  
## Examples  
 下面的代码示例定义了三个向导步骤<xref:System.Web.UI.WebControls.Wizard>Web 窗体页中的控件。 在代码页中，向导步骤实例已由其 ID 值，命名，并且可以在代码中引用它们`WizardStep1`， `WizardStep2`，和`WizardStep3`。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">此属性在设计时设置为无效的标识符字符串。  
  
- 或 - 
此属性在设计时设置为与包含 <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> 控件相同的标识符。  
  
- 或 - 
此属性在设计时设置为与包含 <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> 控件中的另一个步骤相同的标识符。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">Web 窗体控件标识</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="wizardStepBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表示要还原的控件状态的 <see cref="T:System.Object" />。</param>
        <summary>从用 <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> 方法保存的上一个页面请求还原视图状态信息。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与用作向导的控件中的某个步骤关联的名称。</summary>
        <value>与用作向导的控件中的某个步骤关联的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>属性返回一个字符串，标识的向导控件中的步骤。 如果为指定值<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性，<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>属性返回该值。 如果为不指定任何值<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性，<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>属性返回的值<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>属性。 如果没有为指定的值<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>或<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>属性，<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>属性返回`null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.ID" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="wizardStepBase.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>引发 <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">处理和引发事件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="wizardStepBase.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 控件的子控件的内容输出到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，此对象编写将在客户端呈现的内容。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StepType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WizardStepType StepType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepType As WizardStepType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WizardStepType StepType { System::Web::UI::WebControls::WizardStepType get(); void set(System::Web::UI::WebControls::WizardStepType value); };" />
      <MemberSignature Language="F#" Value="member this.StepType : System.Web.UI.WebControls.WizardStepType with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要为 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件中某个步骤显示的导航用户界面 (UI) 的类型。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WizardStepType" /> 枚举值之一。 默认值为 <see langword="WizardStepType.Auto" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>属性来指定要显示有关中的一个步骤的导航按钮的类型<xref:System.Web.UI.WebControls.Wizard>控件。 指定此属性的值，如果任何步骤标记为<xref:System.Web.UI.WebControls.WizardStepType.Complete>处于禁用状态的侧栏中显示。  
  
 如果不指定此属性的值，默认值是`WizardStepType.Auto`。  
  
 下表列出的可用设置<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>属性和步骤的结果行为：  
  
 `WizardStepType.Auto`  
 为该步骤呈现的 UI 的导航取决于在其中声明该步骤的顺序。  
  
 `WizardStepType.Complete`  
 该步骤是要显示的最后一个步骤。 不呈现任何导航按钮。  
  
 `WizardStepType.Finish`  
 该步骤是最终数据收集步骤。 呈现用于导航的完成和上一步按钮。  
  
 `WizardStepType.Start`  
 该步骤是要显示的第一个步骤。 不呈现上一步按钮。  
  
 `WizardStepType.Step`  
 该步骤是开始日期和完成步骤之间的任何步骤。 呈现用于导航的上一步和下一步按钮。 此步骤类型对于重写 <xref:System.Web.UI.WebControls.WizardStepType.Auto> 步骤类型非常有用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">所选的值不是 <see cref="T:System.Web.UI.WebControls.WizardStepType" /> 枚举值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在启用侧栏功能时，要用于 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件中某个步骤的标题。</summary>
        <value>在启用侧栏功能时，要用于 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件中某个步骤的标题。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性来显示中的一个步骤的用户友好标题<xref:System.Web.UI.WebControls.Wizard>控制启用侧栏功能时。 如果<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性未设置和启用侧栏功能后，值<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>属性显示为侧栏按钮。  
  
 此属性的值设置时，可以自动保存到资源文件使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>并[全球化和本地化](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的示例演示了如何使用<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性来显示中的一个步骤的用户友好标题<xref:System.Web.UI.WebControls.Wizard>控件。 在示例中，`Step1`不具有其<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性设置，使其显示在<xref:System.Web.UI.WebControls.Wizard>控件作为"WizardStep1"。 `Step2` 确实有其<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>设置属性，使其显示为"步骤 2"。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/CS/wizardstepbasetitlecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/VB/wizardstepbasetitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Wizard">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Wizard Wizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Wizard Wizard" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wizard As Wizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Wizard ^ Wizard { System::Web::UI::WebControls::Wizard ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Wizard : System.Web.UI.WebControls.Wizard" Usage="System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Wizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件，此控件是派生自 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 的对象的父级。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Wizard" /> 控件，此控件是派生自 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 的对象的父级。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
  </Members>
</Type>