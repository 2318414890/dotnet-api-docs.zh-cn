<Type Name="FontInfo" FullName="System.Web.UI.WebControls.FontInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7ad512633e3f547691ce526a6f437e513dccf313" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36382473" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FontInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FontInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FontInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FontInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontInfo sealed" />
  <TypeSignature Language="F#" Value="type FontInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>封装文本的字体属性。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontInfo>类来封装文本的字体属性。 你可以指定的字体名称和字体大小。 你还可以指定是否为粗体的字体样式、 斜体、 上划线、 带删除线，或带下划线。  
  
 此类通常用于属性中的类需要字体的信息，如<xref:System.Web.UI.WebControls.WebControl.Font%2A>属性<xref:System.Web.UI.WebControls.WebControl>类。  
  
> [!NOTE]
>  此类没有公共构造函数。 不能直接创建类的新实例。  
  
   
  
## Examples  
 下面的代码示例演示如何修改的属性<xref:System.Web.UI.WebControls.FontInfo>对象以编程方式来指定的字体属性<xref:System.Web.UI.WebControls.Label>控件。  
  
 [!code-aspx-csharp[FontInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FontInfo/CS/fontinfocs.aspx#1)]
 [!code-aspx-vb[FontInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FontInfo/VB/fontinfovb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
    <altmember cref="T:System.Web.UI.WebControls.Style" />
    <altmember cref="P:System.Web.UI.WebControls.Style.Font" />
  </Docs>
  <Members>
    <Member MemberName="Bold">
      <MemberSignature Language="C#" Value="public bool Bold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Bold" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FontInfo.Bold" />
      <MemberSignature Language="VB.NET" Value="Public Property Bold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Bold { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Bold : bool with get, set" Usage="System.Web.UI.WebControls.FontInfo.Bold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示字体是否为粗体。</summary>
        <value>如果字体为粗体，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontInfo.Bold%2A>指定或确定此字体是否是以粗体显示的属性。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.FontInfo.Bold%2A>属性以编程方式指定中的文本加粗字体<xref:System.Web.UI.WebControls.Label>控件。  
  
 [!code-aspx-csharp[FontInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FontInfo/CS/fontinfocs.aspx#1)]
 [!code-aspx-vb[FontInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FontInfo/VB/fontinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Italic" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Names" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Overline" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Size" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Strikeout" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Underline" />
      </Docs>
    </Member>
    <Member MemberName="ClearDefaults">
      <MemberSignature Language="C#" Value="public void ClearDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearDefaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontInfo.ClearDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearDefaults ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearDefaults();" />
      <MemberSignature Language="F#" Value="member this.ClearDefaults : unit -&gt; unit" Usage="fontInfo.ClearDefaults " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将所有 <see cref="T:System.Web.UI.WebControls.FontInfo" /> 属性重置为未设置状态并清除视图状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FontInfo> 时，属性将取消设置<xref:System.Web.UI.WebControls.FontInfo>创建对象。 当首先设置一个属性时，将值添加到视图状态。 <xref:System.Web.UI.WebControls.FontInfo.ClearDefaults%2A>方法用于设置所有<xref:System.Web.UI.WebControls.FontInfo>属性设置为未设置的状态和删除任何项在视图状态。 以下属性被重置：  
  
-   <xref:System.Web.UI.WebControls.FontInfo.Names%2A>  
  
-   <xref:System.Web.UI.WebControls.FontInfo.Name%2A>  
  
-   <xref:System.Web.UI.WebControls.FontInfo.Size%2A>  
  
-   <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>  
  
-   <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>  
  
-   <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>  
  
-   <xref:System.Web.UI.WebControls.FontInfo.Overline%2A>  
  
-   <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FontInfo.CopyFrom(System.Web.UI.WebControls.FontInfo)" />
        <altmember cref="M:System.Web.UI.WebControls.FontInfo.MergeWith(System.Web.UI.WebControls.FontInfo)" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public void CopyFrom (System.Web.UI.WebControls.FontInfo f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFrom(class System.Web.UI.WebControls.FontInfo f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontInfo.CopyFrom(System.Web.UI.WebControls.FontInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFrom (f As FontInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFrom(System::Web::UI::WebControls::FontInfo ^ f);" />
      <MemberSignature Language="F#" Value="member this.CopyFrom : System.Web.UI.WebControls.FontInfo -&gt; unit" Usage="fontInfo.CopyFrom f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Web.UI.WebControls.FontInfo" />
      </Parameters>
      <Docs>
        <param name="f">
          <see cref="T:System.Web.UI.WebControls.FontInfo" />，它包含要复制的字体属性。</param>
        <summary>将指定的 <see cref="T:System.Web.UI.WebControls.FontInfo" /> 的字体属性复制到调用该方法的 <see cref="T:System.Web.UI.WebControls.FontInfo" /> 类的实例中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontInfo.CopyFrom%2A>方法指定的字体属性复制<xref:System.Web.UI.WebControls.FontInfo>到的实例<xref:System.Web.UI.WebControls.FontInfo>从中调用此方法的类。  
  
> [!CAUTION]
>  中的当前实例的所有属性<xref:System.Web.UI.WebControls.FontInfo>中关联的属性将替换为类`f`参数。  
  
 使用注册样式时<xref:System.Web.UI.IStyleSheet.RegisterStyle%2A>，然后将复制使用<xref:System.Web.UI.WebControls.Style.CopyFrom%28System.Web.UI.WebControls.Style%29?displayProperty=nameWithType>，则只<xref:System.Web.UI.WebControls.Style.CssClass%2A>属性复制到目标，并非所有的各个属性。 因此，如果你使用<xref:System.Web.UI.WebControls.FontInfo.CopyFrom%28System.Web.UI.WebControls.FontInfo%29?displayProperty=nameWithType>从中复制字体信息<xref:System.Web.UI.WebControls.Style.Font%2A>属性<xref:System.Web.UI.WebControls.Style>注册，不会因样式得到的字体的单个设置。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.FontInfo.CopyFrom%2A>方法重复的字体属性<xref:System.Web.UI.WebControls.FontInfo>到<xref:System.Web.UI.WebControls.WebControl.Font%2A>属性<xref:System.Web.UI.WebControls.Label>控件。  
  
 [!code-aspx-csharp[FontInfoCopyFrom#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FontInfoCopyFrom/CS/fontinfocopycs.aspx#1)]
 [!code-aspx-vb[FontInfoCopyFrom#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FontInfoCopyFrom/VB/fontinfocopyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FontInfo.MergeWith(System.Web.UI.WebControls.FontInfo)" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
      </Docs>
    </Member>
    <Member MemberName="Italic">
      <MemberSignature Language="C#" Value="public bool Italic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Italic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FontInfo.Italic" />
      <MemberSignature Language="VB.NET" Value="Public Property Italic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Italic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Italic : bool with get, set" Usage="System.Web.UI.WebControls.FontInfo.Italic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示字体是否为斜体。</summary>
        <value>如果字体为斜体，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontInfo.Italic%2A>属性指定或确定此字体是否是斜体。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.FontInfo.Italic%2A>属性以编程方式指定中的文本倾斜字体<xref:System.Web.UI.WebControls.Label>控件。  
  
 [!code-aspx-csharp[FontInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FontInfo/CS/fontinfocs.aspx#1)]
 [!code-aspx-vb[FontInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FontInfo/VB/fontinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Bold" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Names" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Overline" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Size" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Strikeout" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Underline" />
      </Docs>
    </Member>
    <Member MemberName="MergeWith">
      <MemberSignature Language="C#" Value="public void MergeWith (System.Web.UI.WebControls.FontInfo f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeWith(class System.Web.UI.WebControls.FontInfo f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontInfo.MergeWith(System.Web.UI.WebControls.FontInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeWith (f As FontInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeWith(System::Web::UI::WebControls::FontInfo ^ f);" />
      <MemberSignature Language="F#" Value="member this.MergeWith : System.Web.UI.WebControls.FontInfo -&gt; unit" Usage="fontInfo.MergeWith f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Web.UI.WebControls.FontInfo" />
      </Parameters>
      <Docs>
        <param name="f">
          <see cref="T:System.Web.UI.WebControls.FontInfo" />，它包含要组合的字体属性。</param>
        <summary>将指定的 <see cref="T:System.Web.UI.WebControls.FontInfo" /> 的字体属性与调用该方法的 <see cref="T:System.Web.UI.WebControls.FontInfo" /> 类的实例组合在一起。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontInfo.MergeWith%2A>方法，将指定的字体属性合并<xref:System.Web.UI.WebControls.FontInfo>与的实例<xref:System.Web.UI.WebControls.FontInfo>从中调用此方法的类。  
  
> [!NOTE]
>  此方法联接两个属性<xref:System.Web.UI.WebControls.FontInfo>通过设置未设置的当前实例中每个属性的对象<xref:System.Web.UI.WebControls.FontInfo>类中的相应属性的值`f`参数。 将替换未设置的属性。 如果中的属性`f`参数未设置，则它将不替换中的当前实例的相应属性<xref:System.Web.UI.WebControls.FontInfo>类。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.FontInfo.MergeWith%2A>方法，将合并的字体属性<xref:System.Web.UI.WebControls.FontInfo>到<xref:System.Web.UI.WebControls.WebControl.Font%2A>属性<xref:System.Web.UI.WebControls.Label>控件。  
  
 [!code-aspx-csharp[FontInfoCopyFrom#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FontInfoCopyFrom/CS/fontinfocopycs.aspx#1)]
 [!code-aspx-vb[FontInfoCopyFrom#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FontInfoCopyFrom/VB/fontinfocopyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FontInfo.CopyFrom(System.Web.UI.WebControls.FontInfo)" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FontInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.FontInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.FontNameEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.FontConverter/FontNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置主要字体名称。</summary>
        <value>主要字体名称。 默认值为 <see cref="F:System.String.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontInfo.Name%2A>属性可指定或确定主要字体名称。 主字体名称确定用于与关联的控件中显示文本的字体<xref:System.Web.UI.WebControls.FontInfo>。  
  
> [!NOTE]
>  当你将设置<xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性，<xref:System.Web.UI.WebControls.FontInfo.Name%2A>属性会自动更新中的第一个项<xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性。 如果你设置<xref:System.Web.UI.WebControls.FontInfo.Name%2A>属性，<xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性将自动更新为包含的值的单个元素数组<xref:System.Web.UI.WebControls.FontInfo.Name%2A>属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.FontInfo.Name%2A>属性以编程方式指定的字体名称<xref:System.Web.UI.WebControls.Label>控件。  
  
 [!code-aspx-csharp[FontInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FontInfo/CS/fontinfocs.aspx#1)]
 [!code-aspx-vb[FontInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FontInfo/VB/fontinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的字体名称为 null。</exception>
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Bold" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Italic" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Names" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Overline" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Size" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Strikeout" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Underline" />
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public string[] Names { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Names" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FontInfo.Names" />
      <MemberSignature Language="VB.NET" Value="Public Property Names As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Names { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Names : string[] with get, set" Usage="System.Web.UI.WebControls.FontInfo.Names" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.FontNamesConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置字体名称的排序数组。</summary>
        <value>字体名称的排序数组。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性指定或确定的字体名称的有序的数组<xref:System.Web.UI.WebControls.FontInfo>。 <xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性通常用于存储可用的字体名称的列表。  
  
> [!NOTE]
>  当你将设置<xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性，<xref:System.Web.UI.WebControls.FontInfo.Name%2A>属性会自动更新中的第一个项<xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性。 如果你设置<xref:System.Web.UI.WebControls.FontInfo.Name%2A>属性，<xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性将自动更新为包含的值的单个元素数组<xref:System.Web.UI.WebControls.FontInfo.Name%2A>属性。  
  
 若要指定的字体名称<xref:System.Web.UI.WebControls.FontInfo>使用<xref:System.Web.UI.WebControls.FontInfo.Names%2A>数组、 将第一个元素设置为你想要使用的字体名称数组中。 由于<xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性将会自动更新时<xref:System.Web.UI.WebControls.FontInfo.Name%2A>属性设置，则需要操纵<xref:System.Web.UI.WebControls.FontInfo.Names%2A>数组而不是设置数组中项的顺序重新排列<xref:System.Web.UI.WebControls.FontInfo.Name%2A>直接属性。  
  
 此属性的值存储在视图状态。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Bold" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Italic" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Overline" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Size" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Strikeout" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Underline" />
      </Docs>
    </Member>
    <Member MemberName="Overline">
      <MemberSignature Language="C#" Value="public bool Overline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Overline" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FontInfo.Overline" />
      <MemberSignature Language="VB.NET" Value="Public Property Overline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Overline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Overline : bool with get, set" Usage="System.Web.UI.WebControls.FontInfo.Overline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示字体是否带上划线。</summary>
        <value>如果字体带上划线，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontInfo.Overline%2A>属性可指定或确定字体是否包含文本上面的行。  
  
 此属性的值存储在视图状态。  
  
> [!NOTE]
>  生成的链接的字体下划线行为<xref:System.Web.UI.WebControls.LinkButton>， <xref:System.Web.UI.WebControls.HyperLink>，和<xref:System.Web.UI.HtmlControls.HtmlAnchor>控件的设置会影响<xref:System.Web.UI.WebControls.FontInfo.Overline%2A>属性<xref:System.Web.UI.WebControls.FontInfo>控件。 如果<xref:System.Web.UI.WebControls.FontInfo.Overline%2A>属性，无论值将其值设置，则必须设置<xref:System.Web.UI.WebControls.FontInfo.Underline%2A>属性显式如果你想要显示为带有下划线的链接。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.FontInfo.Overline%2A>属性以编程方式指定中的文本上划线的字体<xref:System.Web.UI.WebControls.Label>控件。  
  
 [!code-aspx-csharp[FontInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FontInfo/CS/fontinfocs.aspx#1)]
 [!code-aspx-vb[FontInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FontInfo/VB/fontinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Bold" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Italic" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Names" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Size" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Strikeout" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Underline" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeNames">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontInfo.ShouldSerializeNames" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeNames () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeNames();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeNames : unit -&gt; bool" Usage="fontInfo.ShouldSerializeNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确定是否应保持 <see cref="P:System.Web.UI.WebControls.FontInfo.Names" /> 属性。</summary>
        <returns>如果 <see cref="P:System.Web.UI.WebControls.FontInfo.Names" /> 属性已更改，不再是其默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontInfo.ShouldSerializeNames%2A>方法来确定是否<xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性已从其默认值。 如果你创建的设计器，通常使用此方法<xref:System.Web.UI.WebControls.FontInfo>类或创建你自己的控件、 包含<xref:System.Web.UI.WebControls.FontInfo>类。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FontInfo.Names%2A>属性必须具有至少一个条目要序列化。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Names" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FontUnit Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FontUnit Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FontInfo.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As FontUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FontUnit Size { System::Web::UI::WebControls::FontUnit get(); void set(System::Web::UI::WebControls::FontUnit value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Web.UI.WebControls.FontUnit with get, set" Usage="System.Web.UI.WebControls.FontInfo.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.FontUnit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置字号。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.FontUnit" />，它表示字体的大小。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontInfo.Size%2A>属性指定的字体的大小。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.FontInfo.Size%2A>属性以编程方式更改的字体的大小<xref:System.Web.UI.WebControls.Label>控件。  
  
 [!code-aspx-csharp[FontInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FontInfo/CS/fontinfocs.aspx#1)]
 [!code-aspx-vb[FontInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FontInfo/VB/fontinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的字体大小为负数。</exception>
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Bold" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Italic" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Names" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Overline" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Strikeout" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Underline" />
      </Docs>
    </Member>
    <Member MemberName="Strikeout">
      <MemberSignature Language="C#" Value="public bool Strikeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Strikeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FontInfo.Strikeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Strikeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Strikeout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Strikeout : bool with get, set" Usage="System.Web.UI.WebControls.FontInfo.Strikeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示字体是否带删除线。</summary>
        <value>如果字体带删除线，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>属性可指定或确定字体是否包含整个文本行。  
  
 此属性的值存储在视图状态。  
  
> [!NOTE]
>  生成的链接的字体下划线行为<xref:System.Web.UI.WebControls.LinkButton>， <xref:System.Web.UI.WebControls.HyperLink>，和<xref:System.Web.UI.HtmlControls.HtmlAnchor>控件的设置会影响<xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>属性<xref:System.Web.UI.WebControls.FontInfo>控件。 如果<xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>设置属性，而不考虑其值，则必须设置<xref:System.Web.UI.WebControls.FontInfo.Underline%2A>属性显式如果你想要显示为带有下划线的链接。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>属性以编程方式指定为带删除线字体<xref:System.Web.UI.WebControls.Label>控件。  
  
 [!code-aspx-csharp[FontInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FontInfo/CS/fontinfocs.aspx#1)]
 [!code-aspx-vb[FontInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FontInfo/VB/fontinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Bold" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Italic" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Names" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Overline" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Size" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Underline" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fontInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个字符串，该字符串包含 <see cref="T:System.Web.UI.WebControls.FontInfo" /> 类的实例的字体名称和大小。</summary>
        <returns>包含 <see cref="T:System.Web.UI.WebControls.FontInfo" /> 类的实例的字体名称和大小的字符串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontInfo.ToString%2A>方法来创建包含字体名称和大小的字符串，以逗号的实例分隔<xref:System.Web.UI.WebControls.FontInfo>类。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.FontInfo.Size%2A>未设置属性，则返回仅字体名称。  
  
   
  
## Examples  
 [!code-aspx-csharp[FontInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FontInfo/CS/fontinfocs.aspx#1)]
 [!code-aspx-vb[FontInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FontInfo/VB/fontinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Size" />
      </Docs>
    </Member>
    <Member MemberName="Underline">
      <MemberSignature Language="C#" Value="public bool Underline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Underline" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FontInfo.Underline" />
      <MemberSignature Language="VB.NET" Value="Public Property Underline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Underline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Underline : bool with get, set" Usage="System.Web.UI.WebControls.FontInfo.Underline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示字体是否带下划线。</summary>
        <value>如果字体带下划线，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontInfo.Underline%2A>属性可指定或确定字体是否包含在文本下方的行。  
  
 此属性的值存储在视图状态。  
  
> [!NOTE]
>  生成的链接的字体下划线行为<xref:System.Web.UI.WebControls.LinkButton>， <xref:System.Web.UI.WebControls.HyperLink>，和<xref:System.Web.UI.HtmlControls.HtmlAnchor>控件的设置会影响<xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>和<xref:System.Web.UI.WebControls.FontInfo.Overline%2A>属性<xref:System.Web.UI.WebControls.FontInfo>控件。 如果<xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>或<xref:System.Web.UI.WebControls.FontInfo.Overline%2A>设置属性，而不考虑它们的值，则必须设置<xref:System.Web.UI.WebControls.FontInfo.Underline%2A>属性显式如果你想要显示为带有下划线的链接。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.FontInfo.Underline%2A>属性以编程方式指定带下划线的字体<xref:System.Web.UI.WebControls.Label>控件。  
  
 [!code-aspx-csharp[FontInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FontInfo/CS/fontinfocs.aspx#1)]
 [!code-aspx-vb[FontInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FontInfo/VB/fontinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Bold" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Italic" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Names" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Overline" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Size" />
        <altmember cref="P:System.Web.UI.WebControls.FontInfo.Strikeout" />
      </Docs>
    </Member>
  </Members>
</Type>