<Type Name="FormViewUpdateEventArgs" FullName="System.Web.UI.WebControls.FormViewUpdateEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a804343e04cd46178c0f22bdf60e0bbc2b537625" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36581932" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormViewUpdateEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewUpdateEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewUpdateEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewUpdateEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type FormViewUpdateEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView>控件都将引发<xref:System.Web.UI.WebControls.FormView.ItemUpdating>事件时的更新按钮 (带有按钮其`CommandName`属性设置为"更新") 在控件内单击时，之前<xref:System.Web.UI.WebControls.FormView>控件更新记录。 这使您可以提供执行自定义的例程，如 HTML 编码或更新数据源中发生此事件时之前验证其值的记录的事件处理方法。  
  
 A<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs>对象传递给事件处理方法，可用于确定发送到的可选命令参数的值<xref:System.Web.UI.WebControls.FormView>控制和以指示是否更新应取消操作。 若要确定命令自变量的值，请使用<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>属性。 若要取消更新操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`true`。 如果你需要访问正在更新的记录的原始键字段值，请使用<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>属性。 可以使用访问原始的非键字段值<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A>属性。 更新后的值 （其中包括更新的键字段的值，如果你允许用户编辑键字段） 访问使用<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>属性。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 有关 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 类的实例的初始属性值列表，请参见 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.%23ctor%2A> 构造函数。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs>对象传递到事件处理方法<xref:System.Web.UI.WebControls.FormView.ItemUpdating>事件，以便验证用户输入的值。  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
    <altmember cref="T:System.ComponentModel.CancelEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
    <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewUpdateEventArgs (object commandArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandArgument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewUpdateEventArgs(System::Object ^ commandArgument);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewUpdateEventArgs : obj -&gt; System.Web.UI.WebControls.FormViewUpdateEventArgs" Usage="new System.Web.UI.WebControls.FormViewUpdateEventArgs commandArgument" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandArgument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandArgument">传递给 <see cref="T:System.Web.UI.WebControls.FormView" /> 控件的可选命令参数。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数初始化的新实例<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs>类。  
  
 下表显示的实例的初始属性值<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs>类。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>|`commandArgument` 参数的值。|  
  
> [!NOTE]
>  在引发事件时，将主要由控件开发人员使用此构造函数。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public object CommandArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandArgument As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandArgument { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : obj" Usage="System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取传递给 <see cref="T:System.Web.UI.WebControls.FormView" /> 控件的更新操作命令参数。</summary>
        <value>传递给 <see cref="T:System.Web.UI.WebControls.FormView" /> 控件的更新操作命令参数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当你创建中的模板之一的更新按钮<xref:System.Web.UI.WebControls.FormView>控件，你可以选择指定按钮的命令参数，通过使用<xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A?displayProperty=nameWithType>属性。 命令参数通常包含你想要伴随 update 命令，如键字段的值的任何可选信息。 <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A>属性用作一种简便方式确定的更新按钮的命令参数的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字典，其中包含要更新的记录的原始键字段名/值对。</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" />，它包含一个字典，其中包含要更新的记录的原始键字段名/值对。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>属性包含的键字段中列出的原始值<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>属性<xref:System.Web.UI.WebControls.FormView>控件。 使用<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>属性来访问要更新的记录的键字段的原始值。 例如，可以使用这些值来记录更新的记录。  
  
> [!NOTE]
>  如果你允许要更新的键字段的值的用户<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>属性包含原始的键字段值。 更新后的值存储在<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>属性。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>属性返回<xref:System.Collections.Specialized.OrderedDictionary>实现对象<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType>接口。 <xref:System.Collections.Specialized.OrderedDictionary>对象包含<xref:System.Collections.DictionaryEntry?displayProperty=nameWithType>表示已更新记录的字段的对象。 若要访问的字段名称，使用<xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>属性<xref:System.Collections.Specialized.OrderedDictionary>对象。 同样，通过使用访问的字段值<xref:System.Collections.Specialized.OrderedDictionary.Values%2A>属性。  
  
> [!NOTE]
>  作为快捷方式，你还可以使用的索引器<xref:System.Collections.Specialized.OrderedDictionary>直接对象访问该字段值。 数据源的字段顺序所依赖的控件 (如<xref:System.Web.UI.WebControls.AccessDataSource>) 只能按索引访问字段值。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>属性来访问要更新的记录的键字段的值。  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含要插入的记录所对应的字段名/值对的字典。</summary>
        <value>一个 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />，它包含要更新的记录的新字段名称/值对的字典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>属性来访问要更新的记录的新字段值。 例如，可以使用这些值来记录更新的记录。  
  
> [!NOTE]
>  如果你允许要更新的键字段的值的用户<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>属性包含原始的键字段值。 更新后的值存储在<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>属性。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>属性返回<xref:System.Collections.Specialized.OrderedDictionary>实现对象<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType>接口。 <xref:System.Collections.Specialized.OrderedDictionary>对象包含<xref:System.Collections.DictionaryEntry?displayProperty=nameWithType>表示已更新记录的字段的对象。 若要访问的字段名称，使用<xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>属性<xref:System.Collections.Specialized.OrderedDictionary>对象。 同样，通过使用访问的字段值<xref:System.Collections.Specialized.OrderedDictionary.Values%2A>属性。  
  
> [!NOTE]
>  作为快捷方式，你还可以使用的索引器<xref:System.Collections.Specialized.OrderedDictionary>直接对象访问该字段值。 数据源的字段顺序所依赖的控件 (如<xref:System.Web.UI.WebControls.AccessDataSource>) 只能按索引访问字段值。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>属性来访问用于非键字段所更新的记录的用户输入的新值。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字典，其中包含要更新的记录的原始非键字段名/值对。</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" />，它包含一个字典，其中包含要更新的记录的原始非键字段名/值对。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A>属性来访问已更新记录的原始非键字段值。 例如，可以使用这些值来记录更新的记录。 某些数据源控件，如<xref:System.Web.UI.WebControls.SqlDataSource>和<xref:System.Web.UI.WebControls.ObjectDataSource>控件，以支持冲突检测 （开放式并发检查）。 当<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>之一的这些控件的属性设置为`ConflictOptions.CompareAllValues`，所记录的原始值进行比较数据源中的值，然后才能执行更新操作。 如果已由另一个用户同时修改一条记录，不会更新记录。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A>属性不包含键字段。 如果你允许要更新的键字段的值的用户，原始的键字段值存储在<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>属性。 更新后的值存储在<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>属性。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>属性返回<xref:System.Collections.Specialized.OrderedDictionary>实现对象<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType>接口。 <xref:System.Collections.Specialized.OrderedDictionary>对象包含<xref:System.Collections.DictionaryEntry?displayProperty=nameWithType>表示已更新记录的字段的对象。 若要访问的字段名称，使用<xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>属性<xref:System.Collections.Specialized.OrderedDictionary>对象。 同样，通过使用访问的字段值<xref:System.Collections.Specialized.OrderedDictionary.Values%2A>属性。  
  
> [!NOTE]
>  作为快捷方式，你还可以使用的索引器<xref:System.Collections.Specialized.OrderedDictionary>直接对象访问该字段值。 数据源的字段顺序所依赖的控件 (如<xref:System.Web.UI.WebControls.AccessDataSource>) 只能按索引访问字段值。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A>属性来访问要更新的记录的非键字段的原始值。  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
  </Members>
</Type>