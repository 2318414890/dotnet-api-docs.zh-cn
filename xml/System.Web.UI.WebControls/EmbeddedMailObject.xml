<Type Name="EmbeddedMailObject" FullName="System.Web.UI.WebControls.EmbeddedMailObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f01ea6c4d73adfb75fef21765e689a720857f078" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599131" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EmbeddedMailObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddedMailObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EmbeddedMailObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddedMailObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddedMailObject sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示要在使用 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 类构造的电子邮件中嵌入的项。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject>表示要在一封电子邮件中嵌入的项。 这些嵌入的项可以如公司徽标的图像文件。 每个嵌入的项指定标识符和路径。  
  
 若要确保电子邮件消息文件中正确显示嵌入的对象，必须满足以下条件：  
  
-   电子邮件是 HTML 格式。  
  
-   项是图像文件 （.jpg、.gif、.bmp、 等）。  
  
-   中指定的 HTML 格式的正文文件<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>属性包含对使用以下语法的图像文件的引用：  
  
    ```  
    <img src="cid:identifier" alt="Alternate Text" />.  
    ```  
  
 如果<xref:System.Web.UI.WebControls.EmbeddedMailObject>添加到一封电子邮件，并且不满足所有先前指定的要求，它将很可能显示为在电子邮件附件。 如果项是通过电子邮件中的标识符引用，但不是包括作为嵌入项目，它将显示为已损坏的附件中，查看邮件时。  
  
 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>存储的集合<xref:System.Web.UI.WebControls.EmbeddedMailObject>单个电子邮件的对象。 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>由<xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>属性<xref:System.Web.UI.WebControls.MailDefinition>对象创建电子邮件。  
  
 允许嵌入的对象的邮件是在以下的 Web 控件中配置的设置其<xref:System.Web.UI.WebControls.MailDefinition>属性以声明方式：  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
-   <xref:System.Web.UI.WebControls.ChangePassword>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery>  
  
> [!NOTE]
>  中的值<xref:System.Web.UI.WebControls.EmbeddedMailObject>和<xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>视图状态中未存储对象。 这样可以防止恶意用户发现你的服务器的路径信息。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 ASP.NET 页<xref:System.Web.UI.WebControls.ChangePassword>Web 控件，并包含的事件处理程序<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>事件名为`SendingMail`。 此代码示例假定 ASP.NET Web 站点已配置为使用 ASP.NET 成员资格和窗体身份验证和已向你已知其名称和密码，创建用户。 有关详细信息，请参阅[如何： 实现简单窗体身份验证](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)。  
  
 如果密码更改成功中的代码`SendingMail`事件处理程序尝试发送电子邮件向用户确认更改。 已必须在此代码示例正常工作的顺序中的服务器上配置 SMTP。 有关如何配置 SMTP 服务器的信息，请参阅[NIB： 如何： 安装和配置 SMTP 虚拟服务器在 IIS 6.0 中](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)。 为此示例的目的，它不需要配置 SMTP 服务器;该示例构造以测试存在故障以发送电子邮件。  
  
 如果邮件服务器配置不正确或发生某些其他错误，无法发送电子邮件，`SendMailError`调用函数。 向用户显示一条消息。 此外，事件记录到 Windows 应用程序事件日志事件源的命名 MySamplesSite 已存在的假设。 请参阅下面创建的指定的事件源的代码示例。 有关创建事件源的详细信息，请参阅[ASP.NET Web 窗体页中的服务器事件处理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>属性<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>对象设置为`true`以指示已处理错误。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 如果你需要以编程方式添加名 MySamplesSite 为你的应用程序日志的事件源，请使用下面的代码示例。 此事件源必须存在于第一个的代码示例，要正确的顺序。 下面的代码示例需要管理员特权。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 下面的代码示例可以用作前面的示例代码的 ChangePasswordMail.htm 文件。  
  
> [!IMPORTANT]
>  发送用户帐户名称或电子邮件中的密码是一个潜在的安全威胁。 电子邮件通常以纯文本发送，并可以由"探查"应用程序的特殊网络读取。  若要提高安全性，请使用中所述的缓解措施[保护登录控件](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.ChangePassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要获取或设置嵌入项的标识符，使用<xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A>属性。 若要获取或设置指向嵌入项的路径，请使用<xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>属性。 这两个属性必须设置为成功邮件消息中嵌入项。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject (string name, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject(System::String ^ name, System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要嵌入邮件的项的标识符名称。 有关详情，请参阅<see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />。</param>
        <param name="path">要嵌入邮件的项的检索路径。 有关详情，请参阅<see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> 类的新实例，使用指定的标识符名称和路径填充对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示使用 ASP.NET 页的代码隐藏示例<xref:System.Web.UI.WebControls.ChangePassword>控件，并包含的事件处理程序<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>事件名为`SendingMail`。 此代码示例假定 ASP.NET Web 站点已配置为使用 ASP.NET 成员资格和窗体身份验证和已向你已知其名称和密码，创建用户。 有关详细信息，请参阅[如何： 实现简单窗体身份验证](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)。  
  
 如果密码更改成功中的代码`SendingMail`事件处理程序尝试发送电子邮件向用户确认更改。 已必须在此代码示例正常工作的顺序中的服务器上配置 SMTP。 有关如何配置 SMTP 服务器的信息，请参阅[NIB： 如何： 安装和配置 SMTP 虚拟服务器在 IIS 6.0 中](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)。 为此示例的目的，它不需要配置 SMTP 服务器;该示例构造以测试存在故障以发送电子邮件。  
  
 如果邮件服务器配置不正确或发生某些其他错误，无法发送电子邮件，`SendMailError`调用函数。 向用户显示一条消息。 此外，事件记录到 Windows 应用程序事件日志事件源的命名 MySamplesSite 已存在的假设。 请参阅下面创建的指定的事件源的代码示例。 有关创建事件源的详细信息，请参阅[ASP.NET Web 窗体页中的服务器事件处理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>属性<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>对象设置为`true`以指示已处理错误。  
  
 下面的代码示例演示如何使用一个.aspx 页。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword_vb.aspx#1)]  
  
 下面的代码示例演示如何使用代码隐藏文件。  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword.vb#2)]  
  
 如果你需要以编程方式添加名 MySamplesSite 为你的应用程序日志的事件源，请使用下面的代码示例。 此事件源必须存在于第一个的代码示例，要正确的顺序。 下面的代码示例需要管理员特权。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 下面的代码示例可以用作前面的示例代码的 ChangePasswordMail.htm 文件。  
  
> [!IMPORTANT]
>  发送用户帐户名称或电子邮件中的密码是一个潜在的安全威胁。 电子邮件通常以纯文本发送，并可以由"探查"应用程序的特殊网络读取。  若要提高安全性，请使用中所述的缓解措施[保护登录控件](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <altmember cref="T:System.Web.Mail.SmtpMail" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置作为邮件中嵌入项的标识符使用的名称，该邮件是使用 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 类构造的。</summary>
        <value>返回邮件中嵌入项的标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A>属性指定要在使用以声明方式构造的一封电子邮件中嵌入的项的标识符<xref:System.Web.UI.WebControls.MailDefinition>类。 使用标识符映射中包含的项<xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>属性中指定的文件的正文中的相应位置<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>属性，使用以下语法：  
  
```  
<img src="cid:identifier" alt="Alternate Text" />  
```  
  
 通常情况下，项是图像文件。 默认值为<xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A>属性为空字符串。  
  
 它是可访问性的设计，以将替换文字属性设置为任何嵌入图像你邮件消息中的最佳做法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 ASP.NET 页<xref:System.Web.UI.WebControls.ChangePassword>Web 控件，并包含的事件处理程序<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>事件名为`SendingMail`。 此代码示例假定 ASP.NET Web 站点已配置为使用 ASP.NET 成员资格和窗体身份验证和已向你已知其名称和密码，创建用户。 有关详细信息，请参阅[如何： 实现简单窗体身份验证](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)。  
  
 如果密码更改成功中的代码`SendingMail`事件处理程序尝试发送电子邮件向用户确认更改。 已必须在此代码示例正常工作的顺序中的服务器上配置 SMTP。 有关如何配置 SMTP 服务器的信息，请参阅[NIB： 如何： 安装和配置 SMTP 虚拟服务器在 IIS 6.0 中](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)。 为此示例的目的，它不需要配置 SMTP 服务器;该示例构造以测试存在故障以发送电子邮件。  
  
 如果邮件服务器配置不正确或发生某些其他错误，无法发送电子邮件，`SendMailError`调用函数。 向用户显示一条消息。 此外，事件记录到 Windows 应用程序事件日志事件源的命名 MySamplesSite 已存在的假设。 请参阅下面创建的指定的事件源的代码示例。 有关创建事件源的详细信息，请参阅[ASP.NET Web 窗体页中的服务器事件处理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>属性<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>对象设置为`true`以指示已处理错误。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 如果你需要以编程方式添加名 MySamplesSite 为你的应用程序日志的事件源，请使用下面的代码示例。 此事件源必须存在于第一个的代码示例，要正确的顺序。 下面的代码示例需要管理员特权。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 下面的代码示例可以用作前面的示例代码的 ChangePasswordMail.htm 文件。  
  
> [!IMPORTANT]
>  发送用户帐户名称或电子邮件中的密码是一个潜在的安全威胁。 电子邮件以纯文本发送，并可以由"探查"应用程序的特殊网络读取。  若要提高安全性，请使用中所述的缓解措施[保护登录控件](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于检索邮件中嵌入项的路径，该邮件是使用 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 类构造的。</summary>
        <value>返回要嵌入邮件的项的路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>属性指定你想要在使用以声明方式构造的邮件消息中嵌入项的路径<xref:System.Web.UI.WebControls.MailDefinition>对象。 中的文件路径<xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>必须如 C:\MyServer\Banner.gif 的路径。 通常情况下，嵌入的项是一个图像文件。 如果图像文件是按其在邮件中的标识符引用，但不是包括在消息中，则图像显示为已损坏的附件，查看电子邮件消息时。  
  
 它是可访问性的设计，以将替换文字属性设置为任何嵌入图像你邮件消息中的最佳做法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 ASP.NET 页<xref:System.Web.UI.WebControls.ChangePassword>Web 控件，并包含的事件处理程序<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>事件名为`SendingMail`。 此代码示例假定 ASP.NET Web 站点已配置为使用 ASP.NET 成员资格和窗体身份验证和已向你已知其名称和密码，创建用户。 有关详细信息，请参阅[如何： 实现简单窗体身份验证](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)。  
  
 如果密码更改成功中的代码`SendingMail`事件处理程序尝试发送电子邮件向用户确认更改。 已必须在此代码示例正常工作的顺序中的服务器上配置 SMTP。 有关如何配置 SMTP 服务器的信息，请参阅[NIB： 如何： 安装和配置 SMTP 虚拟服务器在 IIS 6.0 中](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)。 为此示例的目的，它不需要配置 SMTP 服务器;该示例构造以测试存在故障以发送电子邮件。  
  
 如果邮件服务器配置不正确或发生某些其他错误，无法发送电子邮件，`SendMailError`调用函数。 向用户显示一条消息。 此外，事件记录到 Windows 应用程序事件日志事件源的命名 MySamplesSite 已存在的假设。 请参阅下面创建的指定的事件源的代码示例。 有关创建事件源的详细信息，请参阅[ASP.NET Web 窗体页中的服务器事件处理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>属性<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>对象设置为`true`以指示已处理错误。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 如果你需要以编程方式添加名 MySamplesSite 为你的应用程序日志的事件源，请使用下面的代码示例。 此事件源必须存在于第一个的代码示例，要正确的顺序。 下面的代码示例需要管理员特权。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 下面的代码示例可以用作前面的示例代码的 ChangePasswordMail.htm 文件。  
  
> [!IMPORTANT]
>  发送用户帐户名称或电子邮件中的密码是一个潜在的安全威胁。 电子邮件通常以纯文本发送，并可以由"探查"应用程序的特殊网络读取。  若要提高安全性，请使用中所述的缓解措施[保护登录控件](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
  </Members>
</Type>