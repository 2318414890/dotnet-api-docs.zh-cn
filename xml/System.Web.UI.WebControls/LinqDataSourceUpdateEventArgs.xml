<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LinqDataSourceUpdateEventArgs.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ad4de834753cb8cf7c08131b0ca92f63c49de8d7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad4de834753cb8cf7c08131b0ca92f63c49de8d7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /&gt;</ph> event.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph> object is passed to any event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph>对象传递给任何事件处理程序<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph> object to examine the data before the update operation is executed in the data source.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph>对象中的数据源执行更新操作之前检查数据。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can then validate the data, examine validation exceptions thrown by the data class, or change a value before the update.</source>
          <target state="translated">然后可以验证数据、 检查由数据类中，引发验证异常或更改在更新之前的值。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can also cancel the update operation.</source>
          <target state="translated">你也可以取消更新操作。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> object contains the data that was originally retrieved from the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>对象包含最初从数据源检索的数据。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> object contains the data that will be saved in the data source during the update operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>对象包含在更新操作期间将数据源中保存的数据。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>If the object that represents the data source throws a validation exception before updating the data, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph> property contains an instance of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> class.</source>
          <target state="translated">如果表示数据源的对象引发验证异常，然后更新数据，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph>属性包含的实例<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can retrieve all the validation exceptions through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> property.</source>
          <target state="translated">你可以检索通过所有验证异常<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>If no validation exception is thrown, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph> property contains <ph id="ph2">`null`</ph>.</source>
          <target state="translated">如果不验证引发异常，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph>属性包含<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>If you handle the validation exceptions and do not want the exception to be re-thrown, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">如果你处理验证异常，同时不想要重新引发的异常，设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph>属性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control stores the original values from the data source in view state on the Web page, except those whose <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute&gt;</ph> attribute is marked as <ph id="ph3">`UpdateCheck.Never`</ph>.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>除外，在网页上的原始视图中值从数据源控件存储状态其<ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute&gt;</ph>属性标记为<ph id="ph3">`UpdateCheck.Never`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>LINQ to SQL automatically checks the integrity of the data before updating the data.</source>
          <target state="translated">LINQ to SQL 会自动将更新的数据之前检查数据的完整性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>It does this by comparing the current values in the data source with the original values stored in view state.</source>
          <target state="translated">通过比较中的数据源视图状态中存储的原始值的当前值执行此操作。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>LINQ to SQL raises an exception if the values in the data source have changed.</source>
          <target state="translated">如果数据源中的值已更改，LINQ to SQL 将引发异常。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can perform additional data validation by creating a handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">可以通过创建的处理程序中执行其他数据验证<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">下面的示例演示的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The example shows how to compare properties from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to determine whether the value in the <ph id="ph3">`Category`</ph> property has changed.</source>
          <target state="translated">该示例演示如何比较属性从<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>属性和<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>属性来确定是否中的值<ph id="ph3">`Category`</ph>属性已更改。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>If so, the <ph id="ph1">`CategoryChanged`</ph> property of the object in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">如果是这样，<ph id="ph1">`CategoryChanged`</ph>中的对象的属性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>属性设置为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">下面的示例演示的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>It displays any validation exception messages by using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control.</source>
          <target state="translated">它通过使用来显示任意验证异常消息<ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
          <source>The exception that occurred when validating the data to update.</source>
          
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> class with the specified exception.</source>
          
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)">
          <source>An object of the type specified in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> property that contains the initial values that were retrieved from the data source.</source>
          
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)">
          <source>An object of the type specified in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> property that contains the values that will be saved in the data source.</source>
          
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>Gets the exception that was thrown while the data was being validated before the update operation.</source>
          
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>The exception, if an error occurred; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">异常，如果出现错误;否则为<ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>If a validation exception is raised before the update operation is performed, the exception is stored in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph> property.</source>
          <target state="translated">如果更新操作执行之前引发验证异常，则异常将存储在<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>In an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event, you can retrieve the exception through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph> property.</source>
          <target state="translated">中的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件，你可以检索通过异常<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">下面的示例演示的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>It displays any validation exception messages by using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control.</source>
          <target state="translated">它通过使用来显示任意验证异常消息<ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</source>
          
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the exception was handled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 如果处理了该异常;否则为<ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>You can create an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event to examine validation exceptions that occurred before the update operation.</source>
          <target state="translated">你可以创建的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件以检查该更新操作之前发生的验证异常。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>If you handle the exception and do not want it to be thrown again, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">如果处理异常，并且不希望它再次引发设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph>属性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the exception will be propagated to the next event handler in the call stack.</source>
          <target state="translated">如果你未设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph>属性<ph id="ph2">`true`</ph>，该异常将传播到调用堆栈中的下一步事件处理程序。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">下面的示例演示的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>It displays any validation exception messages by using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control.</source>
          <target state="translated">它通过使用来显示任意验证异常消息<ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>Gets the object that contains the values that will be saved in the data source.</source>
          
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>An object of the type specified in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> property that contains the data to save.</source>
          <target state="translated">中指定的类型的对象<ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph>包含要保存的数据的属性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>Create an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event and retrieve the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to validate the data.</source>
          <target state="translated">创建的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件和检索<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>属性以验证数据。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>You can also change the data or cancel the update operation.</source>
          <target state="translated">你还可以更改的数据或取消更新操作。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">下面的示例演示的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>The example shows how to compare properties from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to determine whether the value in the <ph id="ph3">`Category`</ph> property has changed.</source>
          <target state="translated">该示例演示如何比较属性从<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>属性和<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>属性来确定是否中的值<ph id="ph3">`Category`</ph>属性已更改。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>If so, the <ph id="ph1">`CategoryChanged`</ph> property of the object in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">如果是这样，<ph id="ph1">`CategoryChanged`</ph>中的对象的属性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>属性设置为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>Gets the object that contains the values that were originally retrieved from the data source.</source>
          
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>An object of the type specified in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> property that contains the data that was retrieved from the data source.</source>
          <target state="translated">中指定的类型的对象<ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph>包含从数据源中检索到的数据的属性。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property to check the original values against the current values in the data source and to cancel the update operation or take other action.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>属性检查针对数据源中的当前值的原始值并将取消更新操作，或采取其他操作。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property contains values for only the properties that are persisted in view state in the Web page.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>属性包含值，用于在网页中说明仅在视图中保持的属性。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>A property is persisted under these circumstances:</source>
          <target state="translated">属性在这些情况下保持不变：</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>When it is displayed in a data-bound control.</source>
          <target state="translated">当它被显示在数据绑定控件。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType&gt;</ph> attribute is set to <ph id="ph3">`Always`</ph> or <ph id="ph4">`WhenChanged`</ph>.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType&gt;</ph>属性<ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType&gt;</ph>属性设置为<ph id="ph3">`Always`</ph>或<ph id="ph4">`WhenChanged`</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A&gt;</ph> property is set to <ph id="ph2">`Never`</ph> and the value is not displayed in a data-bound control, the value is not stored in the Web page.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A&gt;</ph>属性设置为<ph id="ph2">`Never`</ph>和的值不显示数据绑定控件中，值不存储在 Web 页。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>In that case, it cannot be assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property.</source>
          <target state="translated">在这种情况下，不能将它分配给<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">下面的示例演示的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>The example shows how to compare properties from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to determine whether the value in the <ph id="ph3">`Category`</ph> property has changed.</source>
          <target state="translated">该示例演示如何比较属性从<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>属性和<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>属性来确定是否中的值<ph id="ph3">`Category`</ph>属性已更改。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>If so, the <ph id="ph1">`CategoryChanged`</ph> property of the object in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">如果是这样，<ph id="ph1">`CategoryChanged`</ph>中的对象的属性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>属性设置为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>