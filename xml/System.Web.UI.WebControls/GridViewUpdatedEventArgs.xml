<Type Name="GridViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.GridViewUpdatedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1da9df7e115230ca4c18ae7618c3544f81915115" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598751" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GridViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GridViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class GridViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class GridViewUpdatedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView>控件都将引发<xref:System.Web.UI.WebControls.GridView.RowUpdated>单击控件中的更新按钮时的事件，但之后<xref:System.Web.UI.WebControls.GridView>控件更新记录。 (的更新按钮控件是的按钮控件`CommandName`属性设置为"更新"。)每次此事件发生时，例如检查更新操作的结果，您可以执行自定义的例程。  
  
 A<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs>对象传递给事件处理程序，使您能够确定受影响的记录和任何可能发生的异常数。 若要确定受更新操作的记录数，请使用<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A>属性。 若要确定是否发生任何异常，请使用<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A>属性。 您还可以指示是否处理了该异常在事件处理程序通过设置<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>属性。  
  
 若要访问已更新记录的键字段值，使用<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A>属性。 你可以通过访问原始的非键字段值<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A>属性。 你可以通过访问更新的非键字段值<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A>属性。  
  
 默认情况下，<xref:System.Web.UI.WebControls.GridView>控件后更新操作将返回到只读模式。 当处理更新操作过程中发生的异常时，您可以保留<xref:System.Web.UI.WebControls.GridView>控件处于编辑模式，通过设置<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A>属性`true`。  
  
 有关如何处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 有关 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> 类的实例的初始属性值列表，请参见 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.%23ctor%2A> 构造函数。  
  
   
  
## Examples  
 下面的示例演示如何确定在更新操作期间是否发生了异常。  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GridViewUpdatedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">受更新操作影响的行数。</param>
        <param name="e">执行更新操作时引发的异常。 如果未引发异常，则将 <see langword="null" /> 用于此参数。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表显示了 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> 类的某个实例的初始属性值。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A>|`affectedRows` 参数的值。|  
|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=nameWithType>中包含的对象`e`参数。|  
|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>|初始化为`false`。|  
|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A>|初始化为`false`。|  
  
> [!NOTE]
>  在引发事件时，是主要由控件开发人员使用此构造函数。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取受更新操作影响的行数。</summary>
        <value>受更新操作影响的行数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由于通常更新只有一条记录，此属性通常包含值为 0 或 1。  
  
 不会引发异常的更新操作期间可能出现错误。 你可以使用<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A>若要确保记录已更新的属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A>属性以验证已更新某个记录。  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取更新操作过程中引发的异常（如果有）。</summary>
        <value>更新操作过程中引发的异常。 如果未引发异常，此属性将返回 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果引发了异常，并且你决定在事件处理程序中，设置中处理异常<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>属性`true`。 否则，会再次引发异常<xref:System.Web.UI.WebControls.GridView>控件。  
  
   
  
## Examples  
 下面的示例演示如何确定在更新操作期间是否发生了异常。  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否在事件处理程序中处理了更新操作过程中引发的异常。</summary>
        <value>
          如果异常已在事件处理程序中得到处理，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当更新操作期间引发了异常时，则使用<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>属性以指示是否处理该事件处理程序中的异常。 当此属性设置为`true`，处理且不会再次引发该异常被视为<xref:System.Web.UI.WebControls.GridView>控件。 如果此属性设置为`false`，再次引发异常。 若要确定引发哪个异常，请使用<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A>属性。  
  
   
  
## Examples  
 下面的示例演示如何指示，处理了该异常在事件处理程序。  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在更新操作之后 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件是否应该继续处于编辑模式。</summary>
        <value>
          如果在完成更新操作之后该控件继续处于编辑模式，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，<xref:System.Web.UI.WebControls.GridView>控件后更新操作将返回到只读模式。 若要保留<xref:System.Web.UI.WebControls.GridView>控件处于编辑模式，设置<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A>属性`true`。  
  
   
  
## Examples  
 下面的示例演示如何保留<xref:System.Web.UI.WebControls.GridView>控件处于编辑模式发生异常时。  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字典，其中包含被更新记录的键字段名称/值对。</summary>
        <value>包含已更新记录的键字段名称/值对的字典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A>属性来访问已更新记录的键字段的值。 例如，可以使用这些值来记录更新的记录。  
  
 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A>属性返回的对象实现<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType>接口。 对象包含<xref:System.Collections.DictionaryEntry?displayProperty=nameWithType>表示已更新记录的字段的对象。  
  
> [!NOTE]
>  作为快捷方式，你还可以使用的索引器<xref:System.Collections.Specialized.IOrderedDictionary>直接对象访问该字段值。  
  
   
  
## Examples  
 下面的示例演示如何访问已更新记录的键字段的值。  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字典，该字典包含已更新记录的新字段的名称/值对。</summary>
        <value>包含已更新记录的新字段的名称/值对的字典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A>属性来访问已更新记录新的字段值。 例如，可以使用这些值来记录更新的记录。  
  
 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A>属性返回的对象实现<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType>接口。 对象包含<xref:System.Collections.DictionaryEntry?displayProperty=nameWithType>表示已更新记录的字段的对象。  
  
> [!NOTE]
>  作为快捷方式，你还可以使用的索引器<xref:System.Collections.Specialized.IOrderedDictionary>直接对象访问该字段值。  
  
   
  
## Examples  
 下面的示例演示如何访问用于非键字段的更新的记录由用户输入的新值。  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字典，其中包含被更新记录的原始键字段名称/值对。</summary>
        <value>包含已更新记录的原始字段名称/值对的字典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A>属性来访问已更新记录的原始字段值。 例如，可以使用这些值来记录更新的记录。  
  
 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A>属性返回的对象实现<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType>接口。 对象包含<xref:System.Collections.DictionaryEntry?displayProperty=nameWithType>表示其原始值的已更新记录的字段的对象。  
  
> [!NOTE]
>  作为快捷方式，你还可以使用的索引器<xref:System.Collections.Specialized.IOrderedDictionary>直接对象访问该字段值。  
  
   
  
## Examples  
 下面的示例演示如何访问更新的记录的非键字段的原始值。  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>