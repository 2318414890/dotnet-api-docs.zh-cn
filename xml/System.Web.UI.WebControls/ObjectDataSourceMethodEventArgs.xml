<Type Name="ObjectDataSourceMethodEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3c93b0ac3706db712b239f358c2ee8cb15e88888" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36580190" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceMethodEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceMethodEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceMethodEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceMethodEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceMethodEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" /> 控件的 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />、<see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" /> 和 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>中使用类<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>方法以提供对输入参数传递给访问<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>， <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>， <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>方法<xref:System.Web.UI.WebControls.ObjectDataSource>控件。 使用访问这些参数<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>属性。 通过添加一个委托来处理<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>， <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>， <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>，或<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>事件，你可以检查和操作的参数值和执行任何额外的预处理所需。 对此字典中的参数的任何更改将影响该操作将为调用的方法重载。 当<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSource>控件设置时，你仅可以修改此字典中项的数据对象属性，无法添加或删除参数。 有关详情，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource>控件可公开可以处理在其生命周期的各个时间用于基础业务对象的多个事件。 下表列出的事件和关联<xref:System.EventArgs>类和事件处理程序委托。  
  
|事件|`EventArgs` 类|事件处理程序委托|  
|-----------|-----------------------|---------------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>。<br /><br /> 创建业务对象的实例之前立即发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>。<br /><br /> 创建业务对象的实例后立即发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>。<br /><br /> 检索的数据之前发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>、<xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 和 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>。<br /><br /> 执行插入、 更新或删除操作之前发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>。<br /><br /> 检索的数据后发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>、<xref:System.Web.UI.WebControls.ObjectDataSource.Updated> 和 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>。<br /><br /> 完成插入、 更新或删除操作后执行。|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>。<br /><br /> 在业务对象被销毁前发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.DetailsView>控件插入数据。 第二个代码示例提供第一个代码示例使用示例中间层业务对象。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.DetailsView>控件插入数据。 <xref:System.Web.UI.WebControls.DetailsView>最初显示一个新`NorthwindEmployee`记录，以及自动生成**插入**按钮。 数据输入到的字段后<xref:System.Web.UI.WebControls.DetailsView>控件中，单击**插入**按钮，和<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>属性将标识哪一种方法执行<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>操作。  
  
 在此示例中，`UpdateEmployeeInfo`方法用于执行 insert; 但是，它需要`NorthwindEmployee`参数插入数据。 出于此原因的字符串集合<xref:System.Web.UI.WebControls.DetailsView>控制权将会传递自动是不够的。 `NorthwindEmployeeInserting`委托是<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>处理对象<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>事件并使你能够操作之前的输入的参数<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>操作继续进行。 因为`UpdateEmployeeInfo`方法需要`NorthwindEmployee`对象作为参数，一个创建使用字符串的集合，并添加到<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>集合。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 下面的代码示例提供前面的代码示例使用示例中间层业务对象。 以下列表描述中的代码示例定义两个主要类：  
  
-   `EmployeeLogic`类，该类是无状态的封装业务逻辑。  
  
-   `NorthwindEmployee`类，它是仅包含的基本功能所需进行加载和保持数据层中的数据的模型类。  
  
 此外，`NorthwindDataException`类提供为方便起见。  
  
 这组示例类使用 Northwind Traders 数据库，这是一个可在 Microsoft SQL Server 和 Microsoft Access 使用的示例数据库。 有关完整的工作示例，使用这些类，通过将它们放置在应用程序根目录下的 App_Code 目录中或通过编译它们，并将生成的 DLL 放在 Bin 目录中。 `UpdateEmployeeInfo`方法未完全实现，因此你将不将数据插入 Northwind Traders 数据库时使用此示例进行试验。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceMethodEventArgs (System.Collections.Specialized.IOrderedDictionary inputParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.IOrderedDictionary inputParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.#ctor(System.Collections.Specialized.IOrderedDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inputParameters As IOrderedDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceMethodEventArgs(System::Collections::Specialized::IOrderedDictionary ^ inputParameters);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs : System.Collections.Specialized.IOrderedDictionary -&gt; System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs inputParameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputParameters" Type="System.Collections.Specialized.IOrderedDictionary" />
      </Parameters>
      <Docs>
        <param name="inputParameters">表示业务对象方法参数名称及其相关值的 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 对象的 <see cref="T:System.Web.UI.WebControls.Parameter" />。</param>
        <summary>使用指定的输入参数集合初始化 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary InputParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary InputParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputParameters As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ InputParameters { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputParameters : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含业务对象方法参数及其值的集合。</summary>
        <value>表示业务对象方法参数及其相应值的名称/值对的 <see cref="T:System.Collections.IDictionary" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过引用或值可以传递给业务对象方法参数。 如果你使用<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>对象以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>，或<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>事件，你可以访问和处理这些参数使用<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>属性。 对此字典中的参数的任何更改将影响该操作将为调用的方法重载。  当<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSource>控件设置时，你可以修改仅数据对象属性为此字典中的项，无法添加或删除参数。 有关详情，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>。  
  
 通过引用传递的参数中返回<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>对象。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DropDownList>控件，<xref:System.Web.UI.WebControls.TextBox>控件，并在几个<xref:System.Web.UI.WebControls.ObjectDataSource>控件更新数据。 <xref:System.Web.UI.WebControls.DropDownList>显示 Northwind 员工的名称时<xref:System.Web.UI.WebControls.TextBox>控制用于输入和更新地址信息。 因为<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>属性包含<xref:System.Web.UI.WebControls.ControlParameter>对象绑定到的所选值<xref:System.Web.UI.WebControls.DropDownList>控制触发的按钮<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>后选中一个雇员仅启用方法。  
  
 在此示例中，`NorthwindEmployeeUpdating`方法之前调用<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>方法将正确的参数和值添加<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>集合。 动态，如所示，或以声明方式，可以添加参数和值。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>