<Type Name="ListViewInsertedEventArgs" FullName="System.Web.UI.WebControls.ListViewInsertedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2abf24609f2038dfb20af442556f9ed73bf24443" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36381131" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewInsertedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewInsertedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ListViewInsertedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView>控件都将引发<xref:System.Web.UI.WebControls.ListView.ItemInserted>事件中的插入按钮时<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>单击模板时后,<xref:System.Web.UI.WebControls.ListView>控件更新数据源处的记录。 (插入按钮是的按钮其`CommandName`属性设置为"插入"。)<xref:System.Web.UI.WebControls.ListView.ItemInserted>事件使您可以执行自定义操作，例如从为插入项数据库中检索自动生成的值。  
  
 A<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>对象传递给事件处理方法，使您能够确定数量的插入的项可能已经发生的任何异常。 若要确定插入操作所影响的项的数目，使用<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>属性。 使用<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>属性来确定是否发生了异常。 您还可以指示是否处理了该异常的事件处理方法中通过设置<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>属性。 如果你需要访问已发送至数据源，使用插入的项的字段值<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A>属性。  
  
 默认情况下，<xref:System.Web.UI.WebControls.ListView>控制清除<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>后插入操作，这使得用户能够添加新项要插入的值的模板。 如果在插入操作期间发生异常，则可以保留<xref:System.Web.UI.WebControls.ListView>控件在插入模式下设置<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>属性`true`。 此重新绑定次数<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>从以前的尝试将项插入到值的模板。  
  
 有关 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 类的实例的初始属性值列表，请参见 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.%23ctor%2A> 构造函数。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>传递给处理程序对象<xref:System.Web.UI.WebControls.ListView.ItemInserted>事件。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewInsertedEventArgs (int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewInsertedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewInsertedEventArgs(int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ListViewInsertedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.ListViewInsertedEventArgs" Usage="new System.Web.UI.WebControls.ListViewInsertedEventArgs (affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">受插入操作影响的行数。</param>
        <param name="exception">执行插入操作时引发的异常（如果有）。 如果未引发异常，则将 <see langword="null" /> 用于此参数。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数初始化的新实例<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>类。  
  
> [!NOTE]
>  在引发事件时，是主要由控件开发人员使用此构造函数。  
  
 下表显示 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 类的实例的初始属性值。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>|`affectedRows` 参数的值。|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=nameWithType>中包含的对象`e`参数。|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>|初始化为`false`。|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>|初始化为`false`。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取受插入操作影响的行数。</summary>
        <value>受插入操作影响的行数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>属性来确定受的插入操作的记录数，如返回的数据源控件。 此属性通常用于以下方案：  
  
-   若要验证已插入单个记录。 有时，编写不正确的 insert 语句可以插入多个记录。  
  
-   若要验证的插入操作期间出错，但不是引发了异常，因为已不插入一条记录。  
  
-   若要验证是否已插入一条记录，当支持冲突检测 （乐观并发） 的数据源控件具有其<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>属性设置为`ConflictOptions.CompareAllValues`枚举值。 支持此属性的控件包括<xref:System.Web.UI.WebControls.SqlDataSource>和<xref:System.Web.UI.WebControls.ObjectDataSource>控件。 当属性具有此值时，如果它已由另一个用户插入的记录相同的密钥值，可能不能插入一条记录。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>传递给处理程序对象<xref:System.Web.UI.WebControls.ListView.ItemInserted>事件，以确定是否在插入操作期间引发了一个异常。 此代码示例摘自更大的示例为提供<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>类。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取插入操作过程中引发的异常（如果引发）。</summary>
        <value>在插入操作过程中引发的异常，如果未引发异常，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果引发了异常，并且事件处理程序中，设置中处理的异常<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>属性`true`。 否则为<xref:System.Web.UI.WebControls.ListView>控件重新引发的异常。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>传递给处理程序对象<xref:System.Web.UI.WebControls.ListView.ItemInserted>事件，以确定是否在插入操作期间引发了一个异常。 此代码示例摘自更大的示例为提供<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>类。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在插入操作过程中所引发的异常是否已在事件处理程序中得到处理。</summary>
        <value>如果异常已在事件处理程序中得到处理，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当在插入操作期间引发了异常时，则使用<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>属性以指示是否处理了该异常在事件处理程序。 当此属性设置为`true`，将异常认为是进行处理并且不会重新引发。 如果此属性设置为`false`、<xref:System.Web.UI.WebControls.ListView>控件重新引发的异常。 若要确定引发哪个异常，请使用<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>传递给处理程序对象<xref:System.Web.UI.WebControls.ListView.ItemInserted>事件，以确定是否在插入操作期间引发了一个异常。 此代码示例摘自更大的示例为提供<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>类。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="KeepInInsertMode">
      <MemberSignature Language="C#" Value="public bool KeepInInsertMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInInsertMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInInsertMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInInsertMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInInsertMode : bool with get, set" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否为 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板内的控件保留用户输入值。</summary>
        <value>如果为 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板内的控件保留用户输入值，则为 <see langword="true" />；如果用该控件的默认值替代用户输入值，则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，<xref:System.Web.UI.WebControls.ListView>控件将从控件的值重置<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>为其默认值插入操作后的模板。 这使用户能够添加新项要插入的值。 如果在插入操作期间引发异常，则可以保留<xref:System.Web.UI.WebControls.ListView>控件在插入模式下设置<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>属性`true`。 此选项从以前尝试插入某个项内的控件的值将维持<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>模板。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>属性来保留在插入操作期间发生错误时由用户输入的值。 此代码示例摘自更大的示例为提供<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>类。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Values { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取插入记录的字段名称/值对。</summary>
        <value>插入记录的字段名称/值对。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A>属性来访问用于插入的记录的字段的值。 例如，可以使用这些值来记录插入的记录。  
  
 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A>属性返回<xref:System.Collections.Specialized.OrderedDictionary>实现对象<xref:System.Collections.Specialized.IOrderedDictionary>接口。 <xref:System.Collections.Specialized.OrderedDictionary>对象包含<xref:System.Collections.DictionaryEntry>表示插入的记录的字段的对象。 若要访问的字段名称，使用<xref:System.Collections.Specialized.OrderedDictionary.Keys%2A?displayProperty=nameWithType>属性<xref:System.Collections.Specialized.OrderedDictionary>对象。 同样，通过使用访问的字段值<xref:System.Collections.Specialized.OrderedDictionary.Values%2A?displayProperty=nameWithType>属性。  
  
> [!NOTE]
>  作为快捷方式，你还可以使用的索引器<xref:System.Collections.Specialized.OrderedDictionary>直接对象访问该字段值。 使用索引器的优点是它直接返回字段值。 数据源的字段顺序所依赖的控件 (如<xref:System.Web.UI.WebControls.AccessDataSource>) 只能按索引访问字段值。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
      </Docs>
    </Member>
  </Members>
</Type>