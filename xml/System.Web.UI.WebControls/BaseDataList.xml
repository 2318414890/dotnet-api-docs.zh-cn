<Type Name="BaseDataList" FullName="System.Web.UI.WebControls.BaseDataList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c40dcd66ff5e3b68b005d13337e17ca0a9a5eacc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36583985" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BaseDataList : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseDataList extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BaseDataList" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseDataList&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseDataList abstract : System::Web::UI::WebControls::WebControl" />
  <TypeSignature Language="F#" Value="type BaseDataList = class&#xA;    inherit WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseDataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用作数据列表控件的抽象基类，如 <see cref="T:System.Web.UI.WebControls.DataList" /> 和 <see cref="T:System.Web.UI.WebControls.DataGrid" />。 此类提供由所有数据列表控件公用的方法和属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList>类提供的常见功能的所有数据列表控件，如<xref:System.Web.UI.WebControls.DataList>和<xref:System.Web.UI.WebControls.DataGrid>。 数据列表控件用于显示数据源的记录，如<xref:System.Data.DataView?displayProperty=nameWithType>控件。 每个数据列表控件可以具有唯一的显示样式和功能。 因为<xref:System.Web.UI.WebControls.BaseDataList>类为抽象类，该类的实例不直接创建。 相反，数据列表控件继承的方法和属性普遍适用于所有数据列表从该类的控件。  
  
 你可以控制数据通过设置此类的某些属性列表控件的外观。 若要确定数据列表控件的单元格之间的间距大小，设置<xref:System.Web.UI.WebControls.BaseDataList.CellSpacing%2A>属性。 若要确定的单元格的内容和单元格的边框之间的间距大小，设置<xref:System.Web.UI.WebControls.BaseDataList.CellPadding%2A>属性。 你可以显示数据列表控件，通过设置的各个单元格之间的边框<xref:System.Web.UI.WebControls.BaseDataList.GridLines%2A>属性。 中数据列表控件的单元格的内容的水平对齐方式由控制<xref:System.Web.UI.WebControls.BaseDataList.HorizontalAlign%2A>属性。  
  
 <xref:System.Web.UI.WebControls.BaseDataList>类提供了两个属性，以支持数据绑定。 若要将数据绑定到任何集合可实现<xref:System.Collections.IEnumerable?displayProperty=nameWithType>接口 (如<xref:System.Data.DataView?displayProperty=nameWithType>或<xref:System.Collections.ArrayList?displayProperty=nameWithType>)，或<xref:System.ComponentModel.IListSource>接口，请使用<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性指定数据源。 当你将设置<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性，必须手动编写代码以执行数据绑定。 若要自动将绑定数据列表控件与数据源由数据源控件，请使用<xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>属性并将其值设置为<xref:System.Web.UI.Control.ID%2A>要使用的数据源控件的属性。 当你将设置<xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>属性，数据列表控件自动绑定到指定的数据源控件。 因此，不需要显式调用<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>方法。  
  
 如果数据源指定<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性包含多个数据源，请使用<xref:System.Web.UI.WebControls.BaseDataList.DataMember%2A>属性来指定要绑定到该控件的特定源。 例如，如果你有<xref:System.Data.DataSet?displayProperty=nameWithType>对象具有多个表，必须指定要绑定到该控件的表。 指定数据源后，使用<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>方法将数据源绑定到控件。  
  
 <xref:System.Web.UI.WebControls.BaseDataList>类包含<xref:System.Web.UI.WebControls.BaseDataList.DataKeys%2A>数据列表控件中存储 （显示为一行） 每个记录的键字段集合。 这可以使用数据而不显示在控件中列表控件中存储的键字段。 键字段通常用作更新查询字符串的一部分，以修改数据源中的特定记录。 中指定的字段的值填充集合<xref:System.Web.UI.WebControls.BaseDataList.DataKeyField%2A>属性。  
  
 <xref:System.Web.UI.WebControls.BaseDataList>类提供<xref:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged>控件中的选定的项更改时引发的事件。 这允许你创建的自定义事件处理程序引发事件时执行一组特定的说明。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>继承自<see cref="T:System.Web.UI.WebControls.BaseDataList" />，必须重写以下成员：<see cref="M:System.Web.UI.WebControls.BaseDataList.CreateControlHierarchy(System.Boolean)" />和<see cref="M:System.Web.UI.WebControls.BaseDataList.PrepareControlHierarchy" />。</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DataList" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.CellSpacing" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.CellPadding" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.GridLines" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.HorizontalAlign" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" />
    <altmember cref="M:System.Web.UI.WebControls.BaseDataList.DataBind" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeys" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
    <altmember cref="E:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged" />
    <altmember cref="T:System.Collections.IEnumerable" />
    <altmember cref="T:System.Data.DataView" />
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Data.DataSet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseDataList ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseDataList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.BaseDataList>不直接创建对象。 此构造函数通常用于初始化中定义的属性的派生类的构造函数中调用<xref:System.Web.UI.WebControls.BaseDataList>类。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.#ctor" />
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.AddParsedSubObject : obj -&gt; unit" Usage="baseDataList.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">一个 <see cref="T:System.Object" />，表示已经过分析的元素。</param>
        <summary>通知服务器控件某个元素（XML 或 HTML）已经过语法分析，并将该元素添加到服务器控件的 <see cref="T:System.Web.UI.ControlCollection" /> 集合。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Web.UI.WebControls.BaseDataList.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在控件中的 HTML 标题元素中呈现的文本。 提供此属性的目的是使辅助技术设备的用户更易于访问控件。</summary>
        <value>一个字符串，表示要在控件中的 HTML 标题元素中呈现的文本。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.Caption%2A>属性来指定要在控件中的 HTML 标题元素中呈现的文本。 你指定的文本，提供控件的说明的辅助技术设备。  
  
 若要在控件中指定的 HTML 标题元素的对齐方式，使用<xref:System.Web.UI.WebControls.BaseDataList.CaptionAlign%2A>属性。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionAlign : System.Web.UI.WebControls.TableCaptionAlign with get, set" Usage="System.Web.UI.WebControls.BaseDataList.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件中的 HTML 标题元素的水平或垂直位置。 提供此属性的目的是使辅助技术设备的用户更易于访问控件。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 枚举值之一。 默认值为 <see langword="NotSet" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.CaptionAlign%2A>属性指定在控件中的 HTML 标题元素的水平或垂直位置。 提供此属性的目的是使辅助技术设备的用户更易于访问控件。  
  
 此属性使用其中一个设置<xref:System.Web.UI.WebControls.TableCaptionAlign>枚举值。 下表列出可能的值。  
  
|“值”|描述|  
|-----------|-----------------|  
|`NotSet`|未设置标题元素的对齐方式。|  
|`Top`|标题元素和表的顶部对齐。|  
|`Bottom`|标题元素和表的底部对齐。|  
|`Left`|Caption 元素与表的左边缘对齐。|  
|`Right`|Caption 元素与表的右边缘对齐。|  
  
 使用<xref:System.Web.UI.WebControls.BaseDataList.Caption%2A>属性来指定要在控件中的 HTML 标题元素中呈现的文本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的类型不是 <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 枚举值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.BaseDataList.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格的内容和单元格的边框之间的空间量。</summary>
        <value>单元格的内容和单元格的边框之间的空间量（以像素为单位）。 默认值为 -1，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.CellPadding%2A>属性控制单元格的内容和单元格的边框之间的间距。 指定的填充量添加到单元格的所有四个边。  
  
 同一列的数据列表控件中的所有单元格都具有相同的单元格宽度。 因此，如果一个单元格的内容的长度超过同一列中的其他单元格的内容的填充量应用到宽的单元格。 列中的所有其他单元格也都设置为此单元格的宽度。  
  
 同样，在同一行中的所有单元格共享的高度相同。 填充量应用于行中最高的单元格的高度。 行中的所有其他单元格设置为此单元格高度。 不能指定单个单元格的大小。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.BaseDataList.CellPadding%2A>属性指定单元格的内容和单元格的边框之间的间距。  
  
 [!code-aspx-csharp[BaseDataListCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListCellPadding/CS/basedatalistcellpaddingcs.aspx#1)]
 [!code-aspx-vb[BaseDataListCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListCellPadding/VB/basedatalistcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.CellSpacing" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.BaseDataList.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格间的空间量。</summary>
        <value>单元格间的空间量（以像素为单位）。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.CellSpacing%2A>属性来控制数据列表控件中的相邻单元格之间的间距。 在垂直方向和水平应用此间距。 该单元格间距是统一为整个数据列表控件。 不能指定每个行或列之间的单个单元格间距。  
  
> [!NOTE]
>  如果你设置此属性的值大于`0`并设置<xref:System.Web.UI.WebControls.BaseDataList.GridLines%2A>属性到一个值，显示单元格边框，间隔显示相邻的单元格边框之间。 在此情况下，<xref:System.Web.UI.WebControls.BaseDataList.CellSpacing%2A>属性控制的差异大小。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.BaseDataList.CellSpacing%2A>属性指定相邻的单元格之间的间距。  
  
 [!code-aspx-csharp[BaseDataListCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListCellPadding/CS/basedatalistcellpaddingcs.aspx#1)]
 [!code-aspx-vb[BaseDataListCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListCellPadding/VB/basedatalistcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.CellPadding" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.BaseDataList.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.ControlCollection" /> 对象，它包含数据列表控件中的子控件的集合。</summary>
        <value>
          <see cref="T:System.Web.UI.ControlCollection" />，它包含数据列表控件中的子控件的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>要管理数据列表控件中包含的子控件集合。 你可以将控件添加、 删除控件，或循环访问集合中的服务器控件。  
  
   
  
## Examples  
 下面的代码示例演示如何以编程方式添加控件与<xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>集合。  
  
 [!code-aspx-csharp[BaseDataListControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListControls/CS/basedatalistcontrolscs.aspx#1)]
 [!code-aspx-vb[BaseDataListControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListControls/VB/basedatalistcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="baseDataList.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用视图状态创建子控件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected abstract void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void CreateControlHierarchy(bool useDataSource);" />
      <MemberSignature Language="F#" Value="abstract member CreateControlHierarchy : bool -&gt; unit" Usage="baseDataList.CreateControlHierarchy useDataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">若要使用控件的数据源，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>当在派生类中重写时，为带或不带指定数据源的数据列表控件创建控件层次结构。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.CreateControlHierarchy%2A>方法是派生类用来创建其控制层次结构的帮助器方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>当你创建数据列表控件派生自<see cref="T:System.Web.UI.WebControls.BaseDataList" />，必须重写<see cref="M:System.Web.UI.WebControls.BaseDataList.CreateControlHierarchy(System.Boolean)" />方法来创建派生数据列表控件的控件层次结构。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments&#xA;override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="baseDataList.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果未指定参数，则创建由数据绑定控件使用的默认 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 对象。</summary>
        <returns>初始化为 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 的 <see cref="P:System.Web.UI.DataSourceSelectArguments.Empty" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.CreateDataSourceSelectArguments%2A>方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.BaseDataList.SelectArguments%2A>属性来创建其默认<xref:System.Web.UI.DataSourceSelectArguments>对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.Empty" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.SelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="baseDataList.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将控件及其所有子控件绑定到指定的数据源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>方法将指定的数据源绑定<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>数据列表控件的属性。 数据源绑定到数据列表控件，数据源中的信息中将显示数据列表控件。  
  
 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>方法通常还用于同步的数据源和数据更新数据源中的信息后，列表控件。 这样还在数据列表控件中进行更新的数据源中的任何更改。  
  
 如果列表控件的数据的数据源指定由<xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>属性，则你不需要调用<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>方法。 ASP.NET 调用此方法会自动以将指定的数据源控件绑定到列表控件的数据。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>方法将绑定到数据源<xref:System.Web.UI.WebControls.DataGrid>控件。  
  
 [!code-aspx-csharp[Classic DataGrid Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid Example 2/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyField">
      <MemberSignature Language="C#" Value="public virtual string DataKeyField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataKeyField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataKeyField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyField : string with get, set" Usage="System.Web.UI.WebControls.BaseDataList.DataKeyField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> 属性指定的数据源中的键字段。</summary>
        <value>
          <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> 指定的数据源中的键字段的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.DataKeyField%2A>属性在数据源中指定的键字段由<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性。 指定的字段用于填充<xref:System.Web.UI.WebControls.BaseDataList.DataKeys%2A>集合。 这可以使用数据而不显示在控件中列表控件中存储的键字段。 键字段通常用于在处理程序中某个事件，如`ItemCommand`或`DeleteCommand`，作为更新查询字符串以修改数据源中的特定记录的一部分。 键字段可帮助识别相应的记录，若要修改的更新查询字符串。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.BaseDataList.DataKeyField%2A>属性指定数据源的键字段。  
  
 [!code-aspx-csharp[BaseDataListDataKeys#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListDataKeys/CS/basedatalistdatakeyscs.aspx#1)]
 [!code-aspx-vb[BaseDataListDataKeys#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListDataKeys/VB/basedatalistdatakeysvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataKeys">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKeyCollection DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyCollection DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.DataKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataKeys As DataKeyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::DataKeyCollection ^ DataKeys { System::Web::UI::WebControls::DataKeyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKeys : System.Web.UI.WebControls.DataKeyCollection" Usage="System.Web.UI.WebControls.BaseDataList.DataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.DataKeyCollection" /> 对象，它存储数据列表控件中每个记录的键值。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.DataKeyCollection" />，它存储数据列表控件中每个记录的键值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.DataKeys%2A>集合来访问数据列表控件中的 （显示为一行） 每个记录的键值。 这可以使用数据而不显示在控件中列表控件中存储的键字段。 中指定的字段的值自动填充此集合<xref:System.Web.UI.WebControls.BaseDataList.DataKeyField%2A>属性。  
  
 键字段通常用于在处理程序中某个事件，如`ItemCommand`或`DeleteCommand`，作为更新查询字符串以修改数据源中的特定记录的一部分。 键字段可帮助识别相应的记录，若要修改的更新查询字符串。  
  
 有关使用 ASP.NET 访问数据的详细信息，请参阅[ASP.NET 数据访问内容映射](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.BaseDataList.DataKeys%2A>属性来确定要删除的记录的键字段的值。  
  
 [!code-aspx-csharp[BaseDataListDataKeys#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListDataKeys/CS/basedatalistdatakeyscs.aspx#1)]
 [!code-aspx-vb[BaseDataListDataKeys#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListDataKeys/VB/basedatalistdatakeysvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKeyCollection" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
      </Docs>
    </Member>
    <Member MemberName="DataKeysArray">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList DataKeysArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList DataKeysArray" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.DataKeysArray" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DataKeysArray As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ArrayList ^ DataKeysArray { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKeysArray : System.Collections.ArrayList" Usage="System.Web.UI.WebControls.BaseDataList.DataKeysArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Collections.ArrayList" /> 对象，它包含数据列表控件中每个记录的键值。</summary>
        <value>一个 <see cref="T:System.Collections.ArrayList" />，包含数据列表控件中每个记录的键值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.DataKeysArray%2A>派生的类使用属性来存储数据列表控件中的每个记录的键值。 此属性通常用于生成<xref:System.Web.UI.WebControls.DataKeyCollection>对象中包含<xref:System.Web.UI.WebControls.BaseDataList.DataKeys%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ArrayList" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeys" />
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Web.UI.WebControls.BaseDataList.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置多成员数据源中要绑定到数据列表控件的特定数据成员。</summary>
        <value>多成员数据源中的数据成员。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.DataMember%2A>属性来指定多成员数据源的要绑定到列表控件的成员。 例如，如果您具有包含多个表中指定的数据源<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性，请使用<xref:System.Web.UI.WebControls.BaseDataList.DataMember%2A>属性来指定要绑定到数据列表控件的表。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.BaseDataList.DataMember%2A>属性指定的表中<xref:System.Data.DataSet>要绑定到对象<xref:System.Web.UI.WebControls.DataGrid>控件。  
  
 [!code-aspx-csharp[BaseDataListDataMember#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListDataMember/CS/basedatalistdatamembercs.aspx#1)]
 [!code-aspx-vb[BaseDataListDataMember#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListDataMember/VB/basedatalistdatamembervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Web.UI.WebControls.BaseDataList.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置源，该源包含用于填充控件中的项的值列表。</summary>
        <value>一个 <see cref="T:System.Collections.IEnumerable" /> 或 <see cref="T:System.ComponentModel.IListSource" />，包含用于为此控件提供数据的值集合。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性来指定要绑定到数据列表控件的值的源。 数据源必须实现是集合<xref:System.Collections.IEnumerable?displayProperty=nameWithType>接口 (如<xref:System.Data.DataView?displayProperty=nameWithType>， <xref:System.Collections.ArrayList?displayProperty=nameWithType>，或<xref:System.Collections.Generic.List%601?displayProperty=nameWithType>) 或<xref:System.ComponentModel.IListSource>接口将绑定到控件派生自<xref:System.Web.UI.WebControls.BaseDataList>类。 当你将设置<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性，必须手动编写代码以执行数据绑定。  
  
 如果数据源指定<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性包含多个数据源，请使用<xref:System.Web.UI.WebControls.BaseDataList.DataMember%2A>属性来指定要绑定到该控件的特定源。 例如，如果你有<xref:System.Data.DataSet?displayProperty=nameWithType>对象具有多个表，必须指定要绑定到该控件的表。 指定数据源后，使用<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>方法将数据源绑定到控件。  
  
 或者，可以使用<xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>自动将其绑定到数据源由数据源控件的属性。 当你将设置<xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>属性，数据列表控件自动绑定到指定的数据源控件。 不需要编写代码显式调用<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>方法。  
  
 如果两个指定值<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性和<xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>属性，ASP.NET 将不能解析数据源和<xref:System.Web.HttpException?displayProperty=nameWithType>引发异常。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性来指定要绑定到数据源<xref:System.Web.UI.WebControls.DataGrid>控件。  
  
 [!code-aspx-csharp[Classic DataGrid Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid Example 2/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">无法解析数据源，因为对 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> 属性和 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" /> 属性指定了同一个值。</exception>
        <exception cref="T:System.ArgumentException">数据源的类型无效。 数据源必须为 <see langword="null" />，或者实现 <see cref="T:System.Collections.IEnumerable" /> 或 <see cref="T:System.ComponentModel.IListSource" /> 接口。</exception>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.Data.DataView" />
        <altmember cref="T:System.Collections.ArrayList" />
        <altmember cref="T:System.Collections.Generic.List`1" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceID">
      <MemberSignature Language="C#" Value="public virtual string DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSourceID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceID : string with get, set" Usage="System.Web.UI.WebControls.BaseDataList.DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty(typeof(System.Web.UI.DataSourceControl))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源控件的 <see cref="P:System.Web.UI.Control.ID" /> 属性，数据列表控件应使用它来检索其数据源。</summary>
        <value>分配给数据源控件的编程标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>属性来访问<xref:System.Web.UI.Control.ID%2A>数据列表控件应使用它来检索其数据源的数据源控件的属性。 数据源控件引用的<xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>属性可实现任何控件<xref:System.Web.UI.IDataSource>接口。 在同一个命名容器数据列表控件引用它，或在父控件的数据列表控件中，必须存在的数据源控件。 指定此属性的值时，数据列表控件自动将绑定到指定的数据源控件。 不需要编写代码显式调用<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>方法。  
  
 或者，可以使用<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性来指定要绑定到数据列表控件的值的源。 数据源必须实现的集合<xref:System.Collections.IEnumerable?displayProperty=nameWithType>接口 (如<xref:System.Data.DataView?displayProperty=nameWithType>， <xref:System.Collections.ArrayList?displayProperty=nameWithType>，或<xref:System.Collections.Generic.List%601?displayProperty=nameWithType>) 或<xref:System.ComponentModel.IListSource>接口将绑定到控件派生自<xref:System.Web.UI.WebControls.BaseDataList>类。 当你将设置<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性，必须手动编写代码以执行数据绑定。  
  
 如果两个指定值<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性和<xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>属性，ASP.NET 将不能解析数据源和<xref:System.Web.HttpException?displayProperty=nameWithType>引发异常。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">无法解析数据源，因为对 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> 属性和 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" /> 属性指定了同一个值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="member this.EnsureDataBound : unit -&gt; unit" Usage="baseDataList.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>验证数据列表控件是否需要数据绑定，并验证在调用 <see cref="M:System.Web.UI.WebControls.BaseDataList.DataBind" /> 方法前是否指定了有效的数据源控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当指定的值<xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>属性，ASP.NET 会自动将数据绑定列表控件到指定的数据源控件。 当 ASP.NET 执行数据绑定控件时，它将调用<xref:System.Web.UI.WebControls.BaseDataList.EnsureDataBound%2A>方法首先验证控件不已绑定到数据并有效数据源控件实现<xref:System.Web.UI.IDataSource>接口指定为其<xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>属性。 <xref:System.Web.UI.WebControls.BaseDataList.EnsureDataBound%2A>方法然后调用<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataList.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerable GetData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerable GetData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.GetData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetData () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IEnumerable ^ GetData();" />
      <MemberSignature Language="F#" Value="abstract member GetData : unit -&gt; System.Collections.IEnumerable&#xA;override this.GetData : unit -&gt; System.Collections.IEnumerable" Usage="baseDataList.GetData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个实现了 <see cref="T:System.Collections.IEnumerable" /> 的对象，表示数据源。</summary>
        <returns>一个实现了 <see cref="T:System.Collections.IEnumerable" /> 的对象，表示数据源。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.GetData%2A>方法是由派生类调用一个帮助器方法 (如<xref:System.Web.UI.WebControls.DataGrid>和<xref:System.Web.UI.WebControls.DataList>) 来检索数据源。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.BaseDataList.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定是否显示数据列表控件的单元格之间的边框。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridLines" /> 值之一。 默认值为 <see langword="Both" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.GridLines%2A>属性以指定是否显示数据列表控件的单元格之间的边框。 此属性设置的其中一条<xref:System.Web.UI.WebControls.GridLines>枚举值。 下表列出可能的值。  
  
|“值”|描述|  
|-----------|-----------------|  
|`None`|将不显示任何单元格边框。|  
|`Horizontal`|仅上限和下限数据列表控件中的单元格显示边框。|  
|`Vertical`|仅左侧和右侧的数据列表控件中的单元格显示边框。|  
|`Both`|显示所有数据列表控件中的单元格的边框。|  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.BaseDataList.GridLines%2A>属性数据绑定控件中显示水平和垂直网格。  
  
 [!code-aspx-csharp[BaseDataListGridLines#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListGridLines/CS/basedatalistgridlinescs.aspx#1)]
 [!code-aspx-vb[BaseDataListGridLines#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListGridLines/VB/basedatalistgridlinesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.BaseDataList.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据列表控件在其容器内的水平对齐方式。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 值之一。 默认值为 <see langword="NotSet" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.HorizontalAlign%2A>属性指定数据列表控件在其容器内的水平对齐方式。 此属性设置的其中一条<xref:System.Web.UI.WebControls.HorizontalAlign>枚举值。 下表列出可能的值。  
  
|“值”|描述|  
|-----------|-----------------|  
|`NotSet`|未设置水平对齐方式。|  
|`Left`|列表控件的数据是在其容器内的左对齐。|  
|`Center`|列表控件的数据在其容器内居中。|  
|`Right`|列表控件的数据是在其容器内的右对齐。|  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.BaseDataList.HorizontalAlign%2A>属性指定数据绑定控件的水平对齐方式。  
  
 [!code-aspx-csharp[BaseDataListHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListHorizontalAlign/CS/basedatalisthorizontalaligncs.aspx#1)]
 [!code-aspx-vb[BaseDataListHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListHorizontalAlign/VB/basedatalisthorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="protected bool Initialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Initialized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.Initialized" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Initialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Initialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Initialized : bool" Usage="System.Web.UI.WebControls.BaseDataList.Initialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示控件是否已经初始化。</summary>
        <value>如果已初始化控件，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.Initialized%2A>属性使用由派生类 (如<xref:System.Web.UI.WebControls.DataList>和<xref:System.Web.UI.WebControls.DataGrid>) 以确定控件是否已初始化。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.Initialized" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public static bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member IsBindableType : Type -&gt; bool" Usage="System.Web.UI.WebControls.BaseDataList.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">包含要测试的数据类型的 <see cref="T:System.Type" />。</param>
        <summary>确定指定的数据类型是否可绑定到从 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 类派生的列表控件。</summary>
        <returns>如果指定的数据类型可绑定到从 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 类派生的列表控件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.IsBindableType%2A>静态方法，用于确定指定的数据类型是否可以绑定到列表控件继承自<xref:System.Web.UI.WebControls.BaseDataList>类。 支持的数据类型是<xref:System.Boolean?displayProperty=nameWithType>， <xref:System.Byte?displayProperty=nameWithType>， <xref:System.SByte?displayProperty=nameWithType>， <xref:System.Int16?displayProperty=nameWithType>， <xref:System.UInt16?displayProperty=nameWithType>， <xref:System.Int32?displayProperty=nameWithType>， <xref:System.UInt32?displayProperty=nameWithType>， <xref:System.Int64?displayProperty=nameWithType>， <xref:System.UInt64?displayProperty=nameWithType>， <xref:System.Char?displayProperty=nameWithType>， <xref:System.Double?displayProperty=nameWithType>， <xref:System.Single?displayProperty=nameWithType>，<xref:System.DateTime?displayProperty=nameWithType>， <xref:System.Decimal?displayProperty=nameWithType>，和<xref:System.String?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.BaseDataList.IsBindableType%2A>属性来确定特定数据类型的值是否可以绑定到<xref:System.Web.UI.WebControls.DataGrid>控件。  
  
 [!code-aspx-csharp[BaseDataListIsBindableType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListIsBindableType/CS/basedatalistisbindabletypecs.aspx#1)]
 [!code-aspx-vb[BaseDataListIsBindableType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListIsBindableType/VB/basedatalistisbindabletypevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Byte" />
        <altmember cref="T:System.SByte" />
        <altmember cref="T:System.Int16" />
        <altmember cref="T:System.UInt16" />
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.UInt32" />
        <altmember cref="T:System.Int64" />
        <altmember cref="T:System.UInt64" />
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Double" />
        <altmember cref="T:System.Single" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="IsBoundUsingDataSourceID">
      <MemberSignature Language="C#" Value="protected bool IsBoundUsingDataSourceID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBoundUsingDataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.IsBoundUsingDataSourceID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsBoundUsingDataSourceID As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsBoundUsingDataSourceID { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBoundUsingDataSourceID : bool" Usage="System.Web.UI.WebControls.BaseDataList.IsBoundUsingDataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示是否设置 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" /> 属性的值。</summary>
        <value>如果 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" /> 设置为非 <see cref="F:System.String.Empty" /> 的值，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.IsBoundUsingDataSourceID%2A>属性使用由派生类 (如<xref:System.Web.UI.WebControls.DataList>和<xref:System.Web.UI.WebControls.DataGrid>) 来确定是否将数据绑定控件绑定到 ASP.NET 版本 2.0 的数据源控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataBinding : EventArgs -&gt; unit" Usage="baseDataList.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.DataBinding" /> 控件的 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.DataBinding>时数据绑定到引发事件<xref:System.Web.UI.WebControls.BaseDataList>控件。 此方法通知控件来执行与之关联的任何数据绑定逻辑。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.BaseDataList.OnDataBinding%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.BaseDataList.OnDataBinding(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.BaseDataList.OnDataBinding(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.OnDataPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataPropertyChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataPropertyChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnDataPropertyChanged : unit -&gt; unit&#xA;override this.OnDataPropertyChanged : unit -&gt; unit" Usage="baseDataList.OnDataPropertyChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在某一基础数据源标识属性更改时调用，以将数据绑定控件重新绑定到其数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.OnDataPropertyChanged%2A>调用方法来重新绑定到其数据的数据绑定控件时<xref:System.Web.UI.WebControls.BaseDataList.DataMember%2A>， <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>，或<xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>属性值更改后的页<xref:System.Web.UI.Control.PreRender>事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">曾尝试在控件的数据绑定阶段更改属性值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : obj * EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : obj * EventArgs -&gt; unit" Usage="baseDataList.OnDataSourceViewChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件源。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged%2A>方法通知的数据绑定控件基础数据源已更改，并且该控件应重新绑定应执行任何必要的工作。 通常情况下，<xref:System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged%2A>数据源视图的属性已更改时调用方法。  
  
 <xref:System.Web.UI.WebControls.BaseDataList>类集<xref:System.Web.UI.WebControls.BaseDataList.RequiresDataBinding%2A>属性`true`时<xref:System.Web.UI.DataSourceView.DataSourceViewChanged>引发事件。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged(System.Object,System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged(System.Object,System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.RequiresDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="baseDataList.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>为 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 控件引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.OnInit%2A>方法通知<xref:System.Web.UI.WebControls.BaseDataList>控件来执行任何所需创建并设置实例的初始化步骤。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="baseDataList.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Load" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="baseDataList.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedIndexChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="baseDataList.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged" /> 控件的 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged>数据列表发往服务器之间的控件中选择不同的项时引发事件。 <xref:System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged%2A>方法允许你创建自定义事件处理程序。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal abstract void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member PrepareControlHierarchy : unit -&gt; unit" Usage="baseDataList.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>设置数据绑定控件的控件层次结构。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 继承自<xref:System.Web.UI.WebControls.BaseDataList>，则必须实现<xref:System.Web.UI.WebControls.BaseDataList.PrepareControlHierarchy%2A>方法准备控件层次结构的数据绑定控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="baseDataList.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">一个 <see cref="T:System.Web.UI.HtmlTextWriter" />，包含要在客户端上呈现的输出流。</param>
        <summary>将控件呈现给指定的 HTML 编写器。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresDataBinding">
      <MemberSignature Language="C#" Value="protected bool RequiresDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.RequiresDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Property RequiresDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool RequiresDataBinding { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequiresDataBinding : bool with get, set" Usage="System.Web.UI.WebControls.BaseDataList.RequiresDataBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示数据列表控件是否需要绑定到其指定的数据源。</summary>
        <value>如果该控件需要绑定到数据源，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList>控件使用<xref:System.Web.UI.WebControls.BaseDataList.RequiresDataBinding%2A>属性以确定控件是否需要调用<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>方法将绑定到其指定的数据源。  
  
 每次`set`上调用访问器<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>、 <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>，或<xref:System.Web.UI.WebControls.BaseDataList.DataMember%2A>属性更改后的数据源<xref:System.Web.UI.WebControls.BaseDataList.OnInit%2A>方法被调用时，ASP.NET 将自动设置的值<xref:System.Web.UI.WebControls.BaseDataList.RequiresDataBinding%2A>属性`true`。 值<xref:System.Web.UI.WebControls.BaseDataList.RequiresDataBinding%2A>属性也设置为`true`时<xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataSourceChanged%2A>调用方法。  
  
 ASP.NET 自动设置的值<xref:System.Web.UI.WebControls.Repeater.RequiresDataBinding%2A>属性`false`后立即<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>调用方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="SelectArguments">
      <MemberSignature Language="C#" Value="protected System.Web.UI.DataSourceSelectArguments SelectArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataSourceSelectArguments SelectArguments" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.SelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SelectArguments As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::DataSourceSelectArguments ^ SelectArguments { System::Web::UI::DataSourceSelectArguments ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectArguments : System.Web.UI.DataSourceSelectArguments" Usage="System.Web.UI.WebControls.BaseDataList.SelectArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取数据绑定控件从数据源控件检索数据时使用的 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 对象。</summary>
        <value>由数据绑定控件用来检索数据的 <see cref="T:System.Web.UI.DataSourceSelectArguments" />。 默认值为从 <see cref="M:System.Web.UI.WebControls.BaseDataList.CreateDataSourceSelectArguments" /> 返回值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.SelectArguments%2A>属性调用<xref:System.Web.UI.WebControls.BaseDataList.CreateDataSourceSelectArguments%2A>方法来创建默认<xref:System.Web.UI.DataSourceSelectArguments>对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataList.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanged : EventHandler " Usage="member this.SelectedIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在两次服务器发送之间，在数据列表控件中选择了不同的项时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged>数据列表发往服务器之间的控件中选择不同的项时引发事件。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的代码示例演示如何提供的事件处理程序<xref:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged>事件以声明方式。  
  
 [!code-aspx-csharp[BaseDataListSelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged/CS/basedatalistselectedindexchangedcs.aspx#1)]
 [!code-aspx-vb[BaseDataListSelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged/VB/basedatalistselectedindexchangedvb.aspx#1)]  
  
 下面的代码示例演示如何提供的事件处理程序<xref:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged>事件以编程方式。  
  
 [!code-aspx-csharp[BaseDataListSelectedIndexChanged2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged2/CS/basedatalistselectedindexchanged2cs.aspx#1)]
 [!code-aspx-vb[BaseDataListSelectedIndexChanged2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged2/VB/basedatalistselectedindexchanged2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDisabledAttribute : bool" Usage="System.Web.UI.WebControls.BaseDataList.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示在控件的 <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> 属性为 <see langword="false" /> 时，控件是否应将呈现的 HTML 元素的 <see langword="disabled" /> 特性设置为 "disabled"。</summary>
        <value>
          <see langword="true" /> 如果<see cref="P:System.Web.UI.Control.RenderingCompatibility" />属性指示 ASP.NET 版本低于<c>4.0</c>; 否则为<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性指示 ASP.NET 应的呈现方式 HTML 控件时控件被禁用。 如果此属性为`true`，ASP.NET 呈现`disabled`属性时控件被禁用。 如果此属性为`false`，ASP.NET 呈现`class`属性时控件被禁用。 有关详情，请参阅<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      </Docs>
    </Member>
    <Member MemberName="UseAccessibleHeader">
      <MemberSignature Language="C#" Value="public virtual bool UseAccessibleHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAccessibleHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.UseAccessibleHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseAccessibleHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseAccessibleHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAccessibleHeader : bool with get, set" Usage="System.Web.UI.WebControls.BaseDataList.UseAccessibleHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示数据列表控件是否以可访问的格式呈现其标头。 提供此属性的目的是使辅助技术设备的用户更易于访问控件。</summary>
        <value>如果控件以可访问的格式呈现其标头，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseDataList.UseAccessibleHeader%2A>属性指定数据列表控件是否呈现其标头中可访问的格式。 提供此属性的目的是使辅助技术设备的用户更易于访问控件。 默认情况下，此属性的值是`false`和控件的标头呈现单元格标记之间`<td>`和`</td>`。 如果此属性的值是`true`，该控件的标题呈现表标头单元格标记之间`<th>`和`</th>`。 此外，`scope="col"`属性添加到表头以指定标头适用于列中的所有单元格。 默认呈现`<th>`保留了元素，从而文本水平呈现为加粗和居中。 开发人员可以重写的行为`<th>`元素使用级联样式表 (CSS)。 但是，需使用样式表时，不建议创建可访问网页。  
  
 为数据列表控件，如<xref:System.Web.UI.WebControls.DataList>控件和<xref:System.Web.UI.WebControls.DataGrid>控件，继承自<xref:System.Web.UI.WebControls.BaseDataList>类，你可以设置<xref:System.Web.UI.WebControls.BaseDataList.UseAccessibleHeader%2A>属性以声明方式或以编程方式。 如果你设置<xref:System.Web.UI.WebControls.BaseDataList.UseAccessibleHeader%2A>属性，以编程方式设置后将其绑定数据和<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.Caption" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.CaptionAlign" />
      </Docs>
    </Member>
  </Members>
</Type>