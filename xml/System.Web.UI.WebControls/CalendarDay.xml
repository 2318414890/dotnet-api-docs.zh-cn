<Type Name="CalendarDay" FullName="System.Web.UI.WebControls.CalendarDay">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e7d2b014ba6746d936f1850d640073bdef53262" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39812944" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CalendarDay" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CalendarDay extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CalendarDay" />
  <TypeSignature Language="VB.NET" Value="Public Class CalendarDay" />
  <TypeSignature Language="C++ CLI" Value="public ref class CalendarDay" />
  <TypeSignature Language="F#" Value="type CalendarDay = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 <see cref="T:System.Web.UI.WebControls.Calendar" /> 控件中的日期。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个<xref:System.Web.UI.WebControls.CalendarDay>对象表示的日期<xref:System.Web.UI.WebControls.Calendar>控件。 你可以使用此类中的<xref:System.Web.UI.WebControls.Calendar.DayRender>事件处理程序以编程方式访问一个日期的属性，如上呈现<xref:System.Web.UI.WebControls.Calendar>控件。 这样，您可以确定在一天 （例如日期是可选的选择，今天的日期或周末日期） 的属性并以编程方式控制的外观或一天中的行为。  
  
 有关实例的初始属性值的列表<xref:System.Web.UI.WebControls.CalendarDay>，请参阅<xref:System.Web.UI.WebControls.CalendarDay.%23ctor%2A>构造函数。  
  
   
  
## Examples  
 下面的示例演示如何使用的属性<xref:System.Web.UI.WebControls.CalendarDay>对象，以确定在所呈现的日期是否<xref:System.Web.UI.WebControls.Calendar.DayRender>事件是在显示的月份中且不是星期六或星期日。 这些日期以黄色显示。 请注意，<xref:System.Web.UI.WebControls.DayRenderEventArgs.Day%2A>的属性<xref:System.Web.UI.WebControls.DayRenderEventArgs>对象传递给<xref:System.Web.UI.WebControls.Calendar.DayRender>事件处理程序是<xref:System.Web.UI.WebControls.CalendarDay>对象。  
  
 [!code-aspx-csharp[Classic CalendarDay Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CalendarDay Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CalendarDay Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CalendarDay Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[CalendarDayRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarDayRender/CS/calendardayrendercs.aspx#1)]
 [!code-aspx-vb[CalendarDayRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarDayRender/VB/calendardayrendervb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Calendar" />
    <altmember cref="E:System.Web.UI.WebControls.Calendar.DayRender" />
    <altmember cref="T:System.Web.UI.WebControls.DayRenderEventArgs" />
    <altmember cref="P:System.Web.UI.WebControls.DayRenderEventArgs.Day" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CalendarDay (DateTime date, bool isWeekend, bool isToday, bool isSelected, bool isOtherMonth, string dayNumberText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime date, bool isWeekend, bool isToday, bool isSelected, bool isOtherMonth, string dayNumberText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CalendarDay.#ctor(System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (date As DateTime, isWeekend As Boolean, isToday As Boolean, isSelected As Boolean, isOtherMonth As Boolean, dayNumberText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CalendarDay(DateTime date, bool isWeekend, bool isToday, bool isSelected, bool isOtherMonth, System::String ^ dayNumberText);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.CalendarDay : DateTime * bool * bool * bool * bool * string -&gt; System.Web.UI.WebControls.CalendarDay" Usage="new System.Web.UI.WebControls.CalendarDay (date, isWeekend, isToday, isSelected, isOtherMonth, dayNumberText)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
        <Parameter Name="isWeekend" Type="System.Boolean" />
        <Parameter Name="isToday" Type="System.Boolean" />
        <Parameter Name="isSelected" Type="System.Boolean" />
        <Parameter Name="isOtherMonth" Type="System.Boolean" />
        <Parameter Name="dayNumberText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="date">一个 <see cref="T:System.DateTime" /> 对象，它包含该类实例所表示的日期。</param>
        <param name="isWeekend">如果为 <see langword="true" />，则指示由此类的实例表示的日期是星期六或星期日；否则为 <see langword="false" />。</param>
        <param name="isToday">如果为 <see langword="true" />，则指示由此类的实例表示的日期是当前日期；否则为 <see langword="false" />。</param>
        <param name="isSelected">如果为 <see langword="true" />，则指示由此类的实例表示的日期是在 <see cref="T:System.Web.UI.WebControls.Calendar" /> 控件上选定的；否则为 <see langword="false" />。</param>
        <param name="isOtherMonth">如果为 <see langword="true" />，则指示由此类的实例表示的日期属于除 <see cref="T:System.Web.UI.WebControls.Calendar" /> 控件上显示的月份之外的月份；否则为 <see langword="false" />。</param>
        <param name="dayNumberText">由此类表示的日期的日编号。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.CalendarDay" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数来创建和初始化的新实例<xref:System.Web.UI.WebControls.CalendarDay>类。  
  
> [!NOTE]
>  尽管此构造函数不可用，但实例<xref:System.Web.UI.WebControls.CalendarDay>类不通常创建动态。  
  
 下表显示的实例的初始属性值<xref:System.Web.UI.WebControls.CalendarDay>。  
  
|Property|初始值|  
|--------------|-------------------|  
|日期|`date` 参数的值。|  
|DayNumberText|`dayNumberText` 参数的值。|  
|IsOtherMonth|`isOtherMonth` 参数的值。|  
|IsSelected|`isSelected` 参数的值。|  
|IsToday|`isToday` 参数的值。|  
|IsWeekend|`isWeekEnd` 参数的值。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public DateTime Date { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Date" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CalendarDay.Date" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Date As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Date { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Date : DateTime" Usage="System.Web.UI.WebControls.CalendarDay.Date" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取由此类的实例表示的日期。 此属性是只读的。</summary>
        <value>一个 <see cref="T:System.DateTime" /> 对象，它包含该类实例所表示的日期。 这使您可以基于该值以编程方式控制日期的外观或行为。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.CalendarDay.Date%2A>属性以编程方式确定此类的实例所表示的日期。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.CalendarDay.Date%2A>要进行比较的中呈现的日期<xref:System.Web.UI.WebControls.Calendar.DayRender>事件和今天的日期。 如果日期是今天的日期，它将显示在黄色的单元格中使用红色文本在<xref:System.Web.UI.WebControls.Calendar>控件。  
  
 [!code-aspx-csharp[Classic CalendarDay.Date Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CalendarDay.Date Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CalendarDay.Date Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CalendarDay.Date Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[CalendarDayRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarDayRender/CS/calendardayrendercs.aspx#1)]
 [!code-aspx-vb[CalendarDayRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarDayRender/VB/calendardayrendervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="E:System.Web.UI.WebControls.Calendar.DayRender" />
      </Docs>
    </Member>
    <Member MemberName="DayNumberText">
      <MemberSignature Language="C#" Value="public string DayNumberText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DayNumberText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CalendarDay.DayNumberText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayNumberText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DayNumberText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DayNumberText : string" Usage="System.Web.UI.WebControls.CalendarDay.DayNumberText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取由 <see cref="T:System.Web.UI.WebControls.CalendarDay" /> 类的实例表示的日期的日编号的等效字符串。 此属性是只读的。</summary>
        <value>由此类的实例表示的日期的日编号的等效字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.CalendarDay.DayNumberText%2A>属性来确定此类的实例所表示的日期的日编号的等效字符串。 这使您可以基于该值以编程方式控制日期的外观或行为。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.CalendarDay.DayNumberText%2A>属性上显示的所选的日编号<xref:System.Web.UI.WebControls.Calendar>控件。  
  
 [!code-aspx-csharp[Classic CalendarDay.DayNumberText Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CalendarDay.DayNumberText Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CalendarDay.DayNumberText Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CalendarDay.DayNumberText Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="IsOtherMonth">
      <MemberSignature Language="C#" Value="public bool IsOtherMonth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOtherMonth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CalendarDay.IsOtherMonth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOtherMonth As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOtherMonth { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOtherMonth : bool" Usage="System.Web.UI.WebControls.CalendarDay.IsOtherMonth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示由此类的实例表示的日期是否属于除 <see cref="T:System.Web.UI.WebControls.Calendar" /> 控件中显示的月份之外的月份。 此属性是只读的。</summary>
        <value>如果由此类的实例表示的日期属于除 <see cref="T:System.Web.UI.WebControls.Calendar" /> 控件中显示的月份之外的月份，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.CalendarDay.IsOtherMonth%2A>属性以编程方式确定此类的实例所表示的日期是否是月份中显示的月份之外<xref:System.Web.UI.WebControls.Calendar>控件。 这允许您以编程方式控制的外观或基于此值在一天的行为。  
  
   
  
## Examples  
 下面的示例演示如何使用的属性<xref:System.Web.UI.WebControls.CalendarDay>对象，以确定在所呈现的日期是否<xref:System.Web.UI.WebControls.Calendar.DayRender>事件在所显示月份并不是星期六或星期日。 这些日期以黄色显示。 请注意，<xref:System.Web.UI.WebControls.DayRenderEventArgs.Day%2A>的属性<xref:System.Web.UI.WebControls.DayRenderEventArgs>对象传递给<xref:System.Web.UI.WebControls.Calendar.DayRender>事件处理程序是<xref:System.Web.UI.WebControls.CalendarDay>对象。  
  
 [!code-aspx-csharp[Classic CalendarDay Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CalendarDay Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CalendarDay Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CalendarDay Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[CalendarDayRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarDayRender/CS/calendardayrendercs.aspx#1)]
 [!code-aspx-vb[CalendarDayRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarDayRender/VB/calendardayrendervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="E:System.Web.UI.WebControls.Calendar.DayRender" />
        <altmember cref="T:System.Web.UI.WebControls.DayRenderEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DayRenderEventArgs.Day" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsSelectable" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsSelected" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsToday" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsWeekend" />
      </Docs>
    </Member>
    <Member MemberName="IsSelectable">
      <MemberSignature Language="C#" Value="public bool IsSelectable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CalendarDay.IsSelectable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSelectable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSelectable : bool with get, set" Usage="System.Web.UI.WebControls.CalendarDay.IsSelectable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示由此类的实例表示的日期是否可以在 <see cref="T:System.Web.UI.WebControls.Calendar" /> 控件中被选定。</summary>
        <value>如果该日期可以被选定，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.CalendarDay.IsSelectable%2A>属性可指定或确定是否可以在中选择此类的实例所表示的日期<xref:System.Web.UI.WebControls.Calendar>控件。 这允许您以编程方式控制外观的行为的一天，基于此值。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.CalendarDay.IsSelectable%2A>属性来禁用能力上选择当前日期<xref:System.Web.UI.WebControls.Calendar>控件。 请注意，<xref:System.Web.UI.WebControls.DayRenderEventArgs.Day%2A>的属性<xref:System.Web.UI.WebControls.DayRenderEventArgs>对象传递给<xref:System.Web.UI.WebControls.Calendar.DayRender>事件处理程序是<xref:System.Web.UI.WebControls.CalendarDay>对象。  
  
 [!code-aspx-csharp[Classic CalendarDay.IsSelectable Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CalendarDay.IsSelectable Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CalendarDay.IsSelectable Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CalendarDay.IsSelectable Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="E:System.Web.UI.WebControls.Calendar.DayRender" />
        <altmember cref="T:System.Web.UI.WebControls.DayRenderEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DayRenderEventArgs.Day" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsOtherMonth" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsSelected" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsToday" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsWeekend" />
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CalendarDay.IsSelected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelected : bool" Usage="System.Web.UI.WebControls.CalendarDay.IsSelected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示由此类的实例表示的日期是否在 <see cref="T:System.Web.UI.WebControls.Calendar" /> 控件中被选定。 此属性是只读的。</summary>
        <value>如果由此类的实例表示的日期在 <see cref="T:System.Web.UI.WebControls.Calendar" /> 控件中被选定，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.CalendarDay.IsSelected%2A>属性以编程方式确定是否将此类的实例所表示的日期选择中<xref:System.Web.UI.WebControls.Calendar>控件。 这使您可以基于该值以编程方式控制日期的外观或行为。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.CalendarDay.IsSelected%2A>属性来确定是否中选择了当前日期<xref:System.Web.UI.WebControls.Calendar>。 请注意，<xref:System.Web.UI.WebControls.DayRenderEventArgs.Day%2A>的属性<xref:System.Web.UI.WebControls.DayRenderEventArgs>对象传递给<xref:System.Web.UI.WebControls.Calendar.DayRender>事件处理程序是<xref:System.Web.UI.WebControls.CalendarDay>对象。  
  
 [!code-aspx-csharp[Classic CalendarDay.IsSelected Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CalendarDay.IsSelected Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CalendarDay.IsSelected Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CalendarDay.IsSelected Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="E:System.Web.UI.WebControls.Calendar.DayRender" />
        <altmember cref="T:System.Web.UI.WebControls.DayRenderEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DayRenderEventArgs.Day" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsOtherMonth" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsSelectable" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsToday" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsWeekend" />
      </Docs>
    </Member>
    <Member MemberName="IsToday">
      <MemberSignature Language="C#" Value="public bool IsToday { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsToday" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CalendarDay.IsToday" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsToday As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsToday { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsToday : bool" Usage="System.Web.UI.WebControls.CalendarDay.IsToday" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示由此类的实例表示的日期是否与 <see cref="P:System.Web.UI.WebControls.Calendar.TodaysDate" /> 控件的 <see cref="T:System.Web.UI.WebControls.Calendar" /> 属性所指定的日期相同。 此属性是只读的。</summary>
        <value>如果由此类的实例表示的日期与由 <see cref="P:System.Web.UI.WebControls.Calendar.TodaysDate" /> 控件的 <see cref="T:System.Web.UI.WebControls.Calendar" /> 属性指定的日期相同，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.CalendarDay.IsToday%2A>属性来以编程方式确定此类的实例所表示的日期是否为指定的日期相同<xref:System.Web.UI.WebControls.Calendar.TodaysDate%2A>属性的<xref:System.Web.UI.WebControls.Calendar>控件。 这使您可以基于该值以编程方式控制日期的外观或行为。  
  
> [!NOTE]
>  尽管由指定的日期<xref:System.Web.UI.WebControls.Calendar.TodaysDate%2A>属性是通常在服务器上的系统日期，它可以将其进行更改，如有必要。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.CalendarDay.IsToday%2A>属性来确定是否在呈现的日期<xref:System.Web.UI.WebControls.Calendar.DayRender>事件是当前日期。 如果日期为当前日期，它将显示在黄色的单元格中使用红色文本在<xref:System.Web.UI.WebControls.Calendar>。 请注意，<xref:System.Web.UI.WebControls.DayRenderEventArgs.Day%2A>的属性<xref:System.Web.UI.WebControls.DayRenderEventArgs>对象传递给<xref:System.Web.UI.WebControls.Calendar.DayRender>事件处理程序是<xref:System.Web.UI.WebControls.CalendarDay>对象。  
  
 [!code-aspx-csharp[Classic CalendarDay.IsToday Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CalendarDay.IsToday Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CalendarDay.IsToday Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CalendarDay.IsToday Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="E:System.Web.UI.WebControls.Calendar.DayRender" />
        <altmember cref="T:System.Web.UI.WebControls.DayRenderEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DayRenderEventArgs.Day" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsOtherMonth" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsSelectable" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsSelected" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsWeekend" />
      </Docs>
    </Member>
    <Member MemberName="IsWeekend">
      <MemberSignature Language="C#" Value="public bool IsWeekend { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWeekend" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CalendarDay.IsWeekend" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWeekend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWeekend { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWeekend : bool" Usage="System.Web.UI.WebControls.CalendarDay.IsWeekend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示由此类的实例表示的日期是否是星期六或星期日。 此属性是只读的。</summary>
        <value>如果由此类的实例表示的日期是星期六或星期日，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.CalendarDay.IsWeekend%2A>属性以编程方式确定此类的实例所表示的日期是星期六或星期日。 这使您可以基于该值以编程方式控制日期的外观或行为。  
  
   
  
## Examples  
 下面的示例演示如何使用的属性<xref:System.Web.UI.WebControls.CalendarDay>对象，以确定在所呈现的日期是否<xref:System.Web.UI.WebControls.Calendar.DayRender>事件在所显示月份并不是星期六或星期日。 这些日期以黄色显示。 请注意，<xref:System.Web.UI.WebControls.DayRenderEventArgs.Day%2A>的属性<xref:System.Web.UI.WebControls.DayRenderEventArgs>对象传递给<xref:System.Web.UI.WebControls.Calendar.DayRender>事件处理程序是<xref:System.Web.UI.WebControls.CalendarDay>对象。  
  
 [!code-aspx-csharp[Classic CalendarDay Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CalendarDay Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CalendarDay Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CalendarDay Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[CalendarDayRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarDayRender/CS/calendardayrendercs.aspx#1)]
 [!code-aspx-vb[CalendarDayRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarDayRender/VB/calendardayrendervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="E:System.Web.UI.WebControls.Calendar.DayRender" />
        <altmember cref="T:System.Web.UI.WebControls.DayRenderEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DayRenderEventArgs.Day" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsOtherMonth" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsSelectable" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsSelected" />
        <altmember cref="P:System.Web.UI.WebControls.CalendarDay.IsToday" />
      </Docs>
    </Member>
  </Members>
</Type>