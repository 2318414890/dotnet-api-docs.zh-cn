<Type Name="ButtonColumn" FullName="System.Web.UI.WebControls.ButtonColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54d37dbc561ce04bb101169412ee95aa1bfcf08a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599161" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ButtonColumn : System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonColumn extends System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonColumn&#xA;Inherits DataGridColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonColumn : System::Web::UI::WebControls::DataGridColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataGridColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含用户定义按钮的 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 控件的列类型。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonColumn>类<xref:System.Web.UI.WebControls.DataGrid>控件中的每一行创建对应的按钮<xref:System.Web.UI.WebControls.DataGrid>控件。 指定通过设置显示在按钮中的标题<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>属性。 如果你设置<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>属性、 中的所有按钮<xref:System.Web.UI.WebControls.ButtonColumn>对象共享相同的标题。 或者，你可以将绑定<xref:System.Web.UI.WebControls.ButtonColumn>按钮添加到数据源中的字段。 这使你可以显示不同的每个按钮的标题。 指定字段中的值用于文本标题。 设置<xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>属性将绑定<xref:System.Web.UI.WebControls.ButtonColumn>给数据源中的字段。  
  
 您可以设置格式通过设置显示在按钮中的标题<xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>使用格式设置字符串的属性。  
  
 单击中的按钮<xref:System.Web.UI.WebControls.ButtonColumn>引发<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件。 你可以以编程方式控制时通过提供的事件处理程序中单击该按钮时执行的操作<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件。  
  
 默认情况下，页不验证中的按钮时<xref:System.Web.UI.WebControls.ButtonColumn>单击。 页验证确定与验证关联的输入的控件是否控件在页上通过了所有验证控件指定的验证规则。 若要执行页验证在单击按钮时，设置<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>属性`true`。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ButtonColumn>类<xref:System.Web.UI.WebControls.DataGrid>控件创建**添加**按钮。  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
    <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
    <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
    <altmember cref="T:System.Web.UI.WebControls.Button" />
    <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonColumn.%23ctor%2A>构造函数来创建和初始化的新实例<xref:System.Web.UI.WebControls.ButtonColumn>类。  
  
   
  
## Examples  
 下面的代码示例演示如何创建和初始化的新实例<xref:System.Web.UI.WebControls.ButtonColumn>类并将其添加到<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>集合。  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonColumnType ButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.ButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ButtonType As ButtonColumnType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonColumnType ButtonType { System::Web::UI::WebControls::ButtonColumnType get(); void set(System::Web::UI::WebControls::ButtonColumnType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonColumnType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象中显示的按钮的类型。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonColumnType" /> 值之一。 默认值为 <see langword="LinkButton" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonColumn.ButtonType%2A>属性指定是否在按钮<xref:System.Web.UI.WebControls.ButtonColumn>对象显示为链接或下压按钮。 下表列出可能的设置。  
  
|按钮类型|显示|  
|-----------------|-------------|  
|<xref:System.Web.UI.WebControls.ButtonColumnType.LinkButton>|链接。|  
|<xref:System.Web.UI.WebControls.ButtonColumnType.PushButton>|按钮控件。|  
  
 单击中的按钮<xref:System.Web.UI.WebControls.ButtonColumn>引发<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件。 你可以以编程方式控制时通过提供的事件处理程序中单击该按钮时执行的操作<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ButtonColumn.ButtonType%2A>属性来指定中的按钮<xref:System.Web.UI.WebControls.ButtonColumn>对象显示为下压按钮。  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的列类型不是 <see cref="T:System.Web.UI.WebControls.ButtonColumnType" /> 值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ButtonColumnType" />
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在单击 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象中的按钮时是否执行验证。</summary>
        <value>
          如果在单击 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 中的按钮时执行验证，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，页不验证中的按钮时<xref:System.Web.UI.WebControls.ButtonColumn>单击对象。 页验证确定与验证关联的输入的控件是否控件在页上通过了所有验证控件指定的验证规则。 若要执行页验证中的按钮时<xref:System.Web.UI.WebControls.ButtonColumn>单击后，设置<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>属性`true`。  
  
 时的值<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>属性是`true`，你还可以使用<xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A>属性来为其指定验证组的名称<xref:System.Web.UI.WebControls.ButtonColumn>将导致验证。  
  
 此属性的值存储在视图状态。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个字符串，该字符串表示当单击 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象中的按钮时要执行的命令。</summary>
        <value>一个字符串，表示当单击 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 中的按钮时要执行的命令。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A>相关联的命令名称，如属性`Add`或`Remove`，与按钮。 你可以设置<xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A>属性设置为任何字符串，标识要执行中的按钮时的操作<xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=nameWithType>单击对象。 然后，你可以以编程方式确定的事件处理程序中的命令名称<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件并执行相应的操作。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A>与按钮相关联的命令名称属性。 然后，单击按钮的命令名称在事件处理程序中以编程方式确定<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>事件和相应的操作执行。  
  
 [!code-aspx-csharp[ButtonColumnCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnCommandName/CS/ButtonColumnCommandNameCS.aspx#1)]
 [!code-aspx-vb[ButtonColumnCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnCommandName/VB/ButtonColumnCommandNameVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要绑定到 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象的数据源的字段名。</summary>
        <value>要绑定到 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 的字段名。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>属性来指定要绑定到数据源的字段名称<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>属性中的按钮<xref:System.Web.UI.WebControls.ButtonColumn>对象。  
  
 将列绑定到的字段而不是直接设置<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>属性使你可以显示不同的标题中的按钮<xref:System.Web.UI.WebControls.ButtonColumn>通过指定字段中使用的值。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>属性将绑定<xref:System.Web.UI.WebControls.ButtonColumn>给数据源中的字段的对象。  
  
 [!code-aspx-csharp[ButtonColumnDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnDataTextField/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ButtonColumnDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnDataTextField/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置字符串，该字符串指定各按钮中标题的显示格式。</summary>
        <value>指定各按钮中标题的显示格式的字符串。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>属性中的按钮的标题提供的自定义显示格式<xref:System.Web.UI.WebControls.ButtonColumn>对象。  
  
 数据格式字符串包含的形式，以冒号分隔的两个部分`{A:Bxx}`。 例如，在格式设置字符串`{0:F2}`设置要显示的定点数与两位小数的单元格的格式。  
  
> [!NOTE]
>  整个字符串必须括在大括号以指示它是一个格式字符串而不是文本字符串。 大括号外的任何文本显示为文字文本。  
  
 冒号前的值 (`A`常规示例中) 从零开始的参数列表中，指定的参数索引。  
  
> [!NOTE]
>  因为在每个单元格只有一个值，此值可以设置只为 0。  
  
 冒号后面的字符 (`B`常规示例中) 指定要显示中的值的格式。 下表列出了常见的格式。  
  
|格式字符|显示数字值在|  
|----------------------|--------------------------------|  
|`C`|货币格式。|  
|`D`|十进制格式。|  
|`E`|科学记数 （指数） 格式。|  
|`F`|固定的格式。|  
|`G`|常规格式。|  
|`N`|数值格式。|  
|`X`|十六进制格式。|  
  
> [!NOTE]
>  格式字符不区分大小写，除`X`，它会显示在指定的大小写的十六进制字符。  
  
 格式字符后的值 (`xx`常规示例中) 指定的有效位数或小数位数显示数量。  
  
 此属性的值存储在视图状态。  
  
 有关设置字符串格式的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>属性显示在每个按钮的标题<xref:System.Web.UI.WebControls.ButtonColumn>以货币格式的对象。  
  
 [!code-aspx-csharp[ButtonColumnDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnDataTextField/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ButtonColumnDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnDataTextField/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">要格式化的值。</param>
        <summary>将指定的值转换为 <see cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" /> 属性指示的格式。</summary>
        <returns>转换为由 <see cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" /> 指示的格式的 <paramref name="dataTextValue" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue%2A>方法将指定的值转换为格式所指示的<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>属性。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue%2A>方法返回的字符串等效的值，如果<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>未设置属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象重置为其初始状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonColumn.Initialize%2A>方法来重置<xref:System.Web.UI.WebControls.ButtonColumn>为其初始状态的对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.TableCell cell, int32 columnIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As TableCell, columnIndex As Integer, itemType As ListItemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::TableCell ^ cell, int columnIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="cell">一个 <see cref="T:System.Web.UI.WebControls.TableCell" />，它表示要重置的单元格。</param>
        <param name="columnIndex">单元格所在列的列号。</param>
        <param name="itemType">
          <see cref="T:System.Web.UI.WebControls.ListItemType" /> 值之一。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象中的单元格重置为其初始状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonColumn.InitializeCell%2A>方法重置中的指定单元格<xref:System.Web.UI.WebControls.ButtonColumn>为其初始状态的对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ButtonColumn.Initialize" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象的按钮中显示的标题。</summary>
        <value>在 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 的按钮中显示的标题。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>属性指定或确定显示在按钮中的标题<xref:System.Web.UI.WebControls.ButtonColumn>对象。  
  
> [!NOTE]
>  如果你设置<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>属性、 中的所有按钮<xref:System.Web.UI.WebControls.ButtonColumn>共享相同的标题。  
  
 或者，你可以将绑定<xref:System.Web.UI.WebControls.ButtonColumn>给数据源中的字段。 这使你可以在使用中的指定字段的值的列中显示不同的按钮的标题。 设置<xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>属性将绑定<xref:System.Web.UI.WebControls.ButtonColumn>给数据源中的字段。  
  
 此属性的值存储在视图状态。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>属性指定的标题中的按钮<xref:System.Web.UI.WebControls.ButtonColumn>对象。  
  
 [!code-aspx-csharp[Classic ButtonColumn.ButtonType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ButtonColumn.ButtonType Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ButtonColumn.ButtonType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ButtonColumn.ButtonType Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextField" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象在回发到服务器时导致验证的验证控件组。</summary>
        <value>在 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象回发到服务器时导致验证的验证控件组。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 验证组允许您将在页面上的验证控件分配给特定类别。 每个验证组都可以独立于其他页上的验证组进行验证。 使用<xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A>属性来为其指定验证组的名称<xref:System.Web.UI.WebControls.ButtonColumn>对象回发到服务器时要进行验证。  
  
 <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A>属性才起作用时，才的值<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>属性设置为`true`。 当指定的值<xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A>属性，只会验证控件且是指定组的一部分时验证<xref:System.Web.UI.WebControls.ButtonColumn>回发到服务器。 如果未指定的值<xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A>属性和<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>属性设置为`true`，在页上未分配给验证组的所有验证控件进行都验证时<xref:System.Web.UI.WebControls.ButtonColumn>回发到服务器。  
  
 此属性的值存储在视图状态。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>