<Type Name="SqlDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35c362341828a3398efd2c97fc42dc3ecc6b2294" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36578838" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控件在数据操作完成后引发的事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>中使用类<xref:System.Web.UI.WebControls.SqlDataSource.Selected>， <xref:System.Web.UI.WebControls.SqlDataSource.Updated>， <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>，和<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>事件传递有关数据库操作的信息之后执行的数据, 源控件。 此信息包括的操作，所影响的行数<xref:System.Data.Common.DbCommand>数据源用来执行此操作，以及导致的任何异常信息的对象。 通过添加要处理的事件处理程序委托<xref:System.Web.UI.WebControls.SqlDataSource.Selected>， <xref:System.Web.UI.WebControls.SqlDataSource.Updated>，<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>或<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>事件，你可以检查此数据并执行任何所需的其他文章处理。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource>控件可公开可以处理数据操作的过程期间使用基础数据对象的多个事件。 下表列出的事件和关联<xref:System.EventArgs>和事件处理程序类，以更好地引导您找到对应的数据操作使用生命周期的各种事件<xref:System.Web.UI.WebControls.SqlDataSource>控件。  
  
|事件|EventArgs|事件处理程序|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> 检索的数据之前发生。|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting><xref:System.Web.UI.WebControls.SqlDataSource.Updating>，<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>发生之前插入、 更新或删除操作执行。|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected><xref:System.Web.UI.WebControls.SqlDataSource.Inserted>， <xref:System.Web.UI.WebControls.SqlDataSource.Updated>，<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>晚数据检索、 插入、 更新或删除操作完成。|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>类来检查返回值和输出参数时使用返回的值<xref:System.Web.UI.WebControls.SqlDataSource>带有存储过程来填充控件<xref:System.Web.UI.WebControls.GridView>控件。 存储的过程中选择中显示的数据<xref:System.Web.UI.WebControls.GridView>，但还会将其他信息传递回调用方，如整数输出参数和返回值。 参数的<xref:System.Web.UI.WebControls.SqlDataSource>存储过程使用包含的<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>集合，和包含将信息从 Web 窗体传递到存储过程的参数，以及将信息传递的参数回窗体。 <xref:System.Web.UI.WebControls.Parameter.Direction%2A>的这些参数的属性设置为<xref:System.Data.ParameterDirection.Output>和<xref:System.Data.ParameterDirection.ReturnValue>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command, int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceStatusEventArgs(System::Data::Common::DbCommand ^ command, int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs : System.Data.Common.DbCommand * int * Exception -&gt; System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs (command, affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="command">表示通过 <see cref="T:System.Data.Common.DbCommand" /> 控件提交到数据库的数据库查询、命令或存储过程的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />。</param>
        <param name="affectedRows">受此数据库操作影响的行数（如果可用）。</param>
        <param name="exception">此数据库操作引发的 <see cref="T:System.Exception" />（如果可用）。</param>
        <summary>使用指定的输出参数、返回值和此数据库操作影响的行数初始化 <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取受数据库操作影响的行数。</summary>
        <value>受数据库操作影响的行数。 默认值为 -1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所有操作都返回操作影响的行的数。 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows%2A>属性具有相同的值的返回值<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>， <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>，和<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>方法。  
  
 当<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>调用方法和数据源设置为<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>模式时，返回值是在所有情况下均为 0。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取提交到数据库的数据库命令。</summary>
        <value>
          <see cref="T:System.Data.Common.DbCommand" /> 对象，它表示提交到数据库的数据库命令。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以处理<xref:System.Web.UI.WebControls.SqlDataSource.Selected>， <xref:System.Web.UI.WebControls.SqlDataSource.Updated>， <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>，或<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>事件来检查和操作的属性<xref:System.Data.Common.DbCommand>通过提交后<xref:System.Web.UI.WebControls.SqlDataSource>到数据库的控件。 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command%2A>属性使您能够访问返回的值和在任何输出参数中的值，通过执行数据库操作后其<xref:System.Data.Common.DbCommand.Parameters%2A>属性，以及<xref:System.Data.Common.DbCommand.CommandText%2A>属性，它表示 SQL 查询，命令，或已提交至数据库的存储的过程名称。  
  
 任何输出参数都来自参数具有特定的<xref:System.Data.ParameterDirection.InputOutput>或<xref:System.Data.ParameterDirection.Output>值<xref:System.Web.UI.WebControls.Parameter.Direction%2A>属性<xref:System.Web.UI.WebControls.Parameter>对象。 一个返回值是从参数具有<xref:System.Data.ParameterDirection.ReturnValue>值。  
  
   
  
## Examples  
 下面的代码示例演示如何检查输出参数的值时使用<xref:System.Web.UI.WebControls.SqlDataSource>使用存储过程的控件。 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>集合包含的参数，<xref:System.Web.UI.WebControls.SqlDataSource>使用的存储过程，并将信息从 Web 窗体到存储过程传递的参数，以及将信息传递到窗体的参数由组成。 此代码示例摘自更大的示例为提供<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>类。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>为数据库在数据操作期间引发的任何异常获取包装。</summary>
        <value>一个 <see cref="T:System.Exception" />，它将数据库引发的任何异常都包装在其 <see cref="P:System.Exception.InnerException" /> 属性中。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Exception>属性不表示实际由数据库操作引发的异常。 引发的异常使用可以访问<xref:System.Exception.InnerException%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否已处理数据库引发的异常。</summary>
        <value>如果数据库引发的异常已被处理并且不应由 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控件引发，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果数据库引发异常，<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A>属性设置为`false`和异常由包装<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A>属性。 如果你使用<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>，你可以检查<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A>属性并处理该异常。 如果处理异常，设置<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A>属性`true`或<xref:System.Web.UI.WebControls.SqlDataSource>控件将引发异常。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>