<Type Name="MenuItemBinding" FullName="System.Web.UI.WebControls.MenuItemBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b986686f86ad654d71681673dc7cd8f9828b118c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30601211" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MenuItemBinding : ICloneable, System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MenuItemBinding extends System.Object implements class System.ICloneable, class System.Web.UI.IDataSourceViewSchemaAccessor, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.MenuItemBinding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MenuItemBinding&#xA;Implements ICloneable, IDataSourceViewSchemaAccessor, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItemBinding sealed : ICloneable, System::Web::UI::IDataSourceViewSchemaAccessor, System::Web::UI::IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSourceViewSchemaAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TextField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定义一个数据项与 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中该数据项绑定到的菜单项之间的关系。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到其中的每个数据项包含多个字段的数据源 （如具有多个特性的 XML 元素），如果未不定义任何菜单项绑定，菜单项显示返回的值`ToString()`方法默认情况下的数据项。 对于 XML 元素，该菜单项显示的元素名称，但显示的基础结构的菜单上，否则不是非常有用。 通过指定菜单项绑定，可以将菜单项的属性绑定到特定的字段。 A<xref:System.Web.UI.WebControls.MenuItemBinding>对象定义的每个数据项和它所绑定到的菜单项之间的关系。  
  
> [!NOTE]
>  当<xref:System.Web.UI.WebControls.Menu>控件绑定到<xref:System.Web.UI.WebControls.SiteMapDataSource>控件，菜单项绑定不起任何作用。 使用站点地图提供商提供自动执行绑定。  
  
 <xref:System.Web.UI.WebControls.Menu>控制存储其<xref:System.Web.UI.WebControls.MenuItemBinding>中的对象<xref:System.Web.UI.WebControls.Menu.DataBindings%2A>属性并将绑定应用于要创建菜单层次结构和数据源层次结构之间的一对一关系的数据源。 为数据源中的每个数据项<xref:System.Web.UI.WebControls.Menu>控件尝试匹配数据项目写入到<xref:System.Web.UI.WebControls.MenuItemBinding>对象来创建相应的<xref:System.Web.UI.WebControls.MenuItem>对象。  
  
 在创建时<xref:System.Web.UI.WebControls.MenuItemBinding>对象，你必须指定用于绑定的条件。 该条件指示何时数据项应绑定到的菜单项。 你可以指定<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>、 <xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>，和/或文件名。  
  
 菜单项深度指定获取绑定的菜单级别。 例如，以下<xref:System.Web.UI.WebControls.MenuItemBinding>声明将绑定到数据源的名称和 ID 字段<xref:System.Web.UI.WebControls.MenuItem.Text%2A>和<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性，分别的所有节点的深度为 0:  
  
```  
<asp:MenuItemBinding Depth="0" TextField="Name" ValueField="ID">  
```  
  
 数据成员在基础数据源中，指定的数据项目类型，但可以表示不同的信息，具体取决于数据源。 层次结构数据源中的每个数据项 (由表示<xref:System.Web.UI.IHierarchyData>对象) 公开<xref:System.Web.UI.IHierarchyData.Type%2A>属性，用于指定数据项目的类型。 例如，XML 元素的数据成员指定元素的名称。 数据成员时数据源包含多个数据项目类型，指定的数据项目类型使用。 以下<xref:System.Web.UI.WebControls.MenuItemBinding>声明绑定`<Book>`元素<xref:System.Web.UI.WebControls.XmlDataSource>的菜单中，而不考虑位置层次结构中的所有菜单项的控件：  
  
```  
<asp:MenuItemBinding DataMember="Book" TextField="Title" ValueField= "ISBN">  
```  
  
 有时你可能需要创建一个指定的深度和数据成员的菜单项绑定。 仅当数据源包含在具有相同的数据成员值的不同级别的项目时，经常使用这种。 例如，你可以`<Item>`出现在 XML 文件中的不同级别的元素。 以下<xref:System.Web.UI.WebControls.MenuItemBinding>的声明显示了如何指定应用于相同的数据成员位于不同的菜单深度的菜单项绑定：  
  
 `<asp:MenuItemBinding DataMember="Item" Depth="1" TextField="Title">`  
  
 `<asp:MenuItemBinding DataMember="Item" Depth="2" TextField="ISBN">`  
  
 如果菜单项绑定定义的深度和数据成员中，菜单项绑定适用于菜单中的所有菜单项。 这常用当所有数据项目具有相同的属性，并且应相同，显示无论菜单深度。  
  
 建立绑定条件后，你可以随后绑定的属性<xref:System.Web.UI.WebControls.MenuItem>可以绑定到一个值的对象。 你可以将绑定到数据项目的字段或为静态值。 当绑定到静态值，所有<xref:System.Web.UI.WebControls.MenuItem>对象向其<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象共享相同的值。 绑定到字段的属性包含相应数据源的字段的值。  
  
> [!NOTE]
>  你可以选择性地重写中的绑定的属性<xref:System.Web.UI.WebControls.MenuItem>通过直接设置对应的属性的对象。  
  
 下表列出的属性<xref:System.Web.UI.WebControls.MenuItemBinding>允许您绑定的属性的类<xref:System.Web.UI.WebControls.MenuItem>数据项的字段的对象。  
  
|Property|描述|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>|要将绑定到的字段<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。|  
|<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>|要将绑定到的字段<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。|  
|<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>|要将绑定到的字段<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。|  
|<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>|要将绑定到的字段<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。|  
|<xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>|要将绑定到的字段<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。|  
  
 下表列出的属性<xref:System.Web.UI.WebControls.MenuItemBinding>允许您绑定的属性的类<xref:System.Web.UI.WebControls.MenuItem>为静态值的对象。  
  
|Property|描述|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A>|要将绑定到的静态值<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。|  
|<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>|要将绑定到的静态值<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。|  
|<xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>|要将绑定到的静态值<xref:System.Web.UI.WebControls.MenuItem.Target%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。|  
|<xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>|要将绑定到的静态值<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。|  
|<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A>|要将绑定到的静态值<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。|  
|<xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A>|要将绑定到的静态值<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。|  
  
 如果冲突<xref:System.Web.UI.WebControls.MenuItemBinding>定义对象，<xref:System.Web.UI.WebControls.Menu>控件适用以下优先顺序中的菜单项绑定：  
  
1.  <xref:System.Web.UI.WebControls.MenuItemBinding>定义并匹配深度和数据成员的对象。  
  
2.  <xref:System.Web.UI.WebControls.MenuItemBinding>定义并匹配的数据成员的对象。  
  
3.  <xref:System.Web.UI.WebControls.MenuItemBinding>对象定义并匹配仅的深度。  
  
4.  <xref:System.Web.UI.WebControls.MenuItemBinding>定义既不深度，也不数据成员的对象。 （此类型的菜单项绑定适用于菜单中的所有菜单项。）  
  
5.  <xref:System.Web.UI.WebControls.MenuItemBinding>数据源中没有匹配项的对象。 在这种情况下，返回的值`ToString()`数据项方法然后绑定到<xref:System.Web.UI.WebControls.MenuItem.Text%2A>和<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性对其的菜单项<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。  
  
 <xref:System.Web.UI.WebControls.MenuItemBinding>类还允许您通过设置显示在菜单项的文本格式<xref:System.Web.UI.WebControls.MenuItemBinding.FormatString%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding>对象定义的字段之间的关系<xref:System.Web.UI.WebControls.XmlDataSource>控制和中的菜单项<xref:System.Web.UI.WebControls.Menu>控件。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 Menu.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBinding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBinding/CS/menuitembindingcs.aspx#1)]
 [!code-aspx-vb[MenuItemBinding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBinding/VB/menuitembindingvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapHomeNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Depth" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.FormatString" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Target" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.TextField" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTip" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTipField" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Value" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ValueField" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItemBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItemBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数创建的新实例<xref:System.Web.UI.WebControls.MenuItemBinding>类。 它通常用于动态填充时<xref:System.Web.UI.WebControls.Menu.DataBindings%2A>集合<xref:System.Web.UI.WebControls.Menu>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此构造函数来动态填充<xref:System.Web.UI.WebControls.Menu.DataBindings%2A>集合<xref:System.Web.UI.WebControls.Menu>控件。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 MenuDepth.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBindingCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBindingCtor/CS/menuitembindingctorcs.aspx#1)]
 [!code-aspx-vb[MenuItemBindingCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBindingCtor/VB/menuitembindingctorvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapNode>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要绑定到菜单项的数据成员。</summary>
        <value>要绑定到菜单项的数据成员。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在创建时<xref:System.Web.UI.WebControls.MenuItemBinding>对象，你必须指定用于绑定的条件。 该条件指示何时数据项应绑定到的菜单项。 你可以指定<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，和 / 或。  
  
 当数据源包含多个元素或多个表时，可以使用<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性指定该表要绑定到的菜单项的元素。 数据成员在基础数据源中，指定的数据项目类型，但可以表示不同的信息，具体取决于数据源。 层次结构数据源中的每个数据项 (由表示<xref:System.Web.UI.IHierarchyData?displayProperty=nameWithType>对象) 公开<xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=nameWithType>属性，用于指定数据项目的类型。 例如，XML 元素的数据成员指定元素的名称。 以下<xref:System.Web.UI.WebControls.MenuItemBinding>声明绑定`<Book>`元素<xref:System.Web.UI.WebControls.XmlDataSource>的菜单中，而不考虑位置层次结构中的所有菜单项的控件：  
  
```  
<asp:MenuItemBinding DataMember="Book" TextField="Title" ValueField= "ISBN">  
```  
  
 有时你可能需要创建一个指定的深度和数据成员的菜单项绑定。 仅当数据源包含在具有相同的数据成员值的不同级别的项目时，经常使用这种。 例如，你可以`<Item>`出现在 XML 文件中的不同级别的元素。 以下<xref:System.Web.UI.WebControls.MenuItemBinding>的声明显示了如何指定应用于相同的数据成员位于不同的菜单深度的菜单项绑定：  
  
 `<asp:MenuItemBinding DataMember="Item" Depth="1" TextField="Title">`  
  
 `<asp:MenuItemBinding DataMember="Item" Depth="2" TextField="ISBN">`  
  
 如果菜单项绑定定义的深度或数据成员中，菜单项绑定适用于菜单中的所有菜单项。 这常用当所有数据项目具有相同的属性，并且应相同，显示无论菜单深度。  
  
 建立绑定条件后，你可以随后绑定的属性<xref:System.Web.UI.WebControls.MenuItem>可以绑定到一个值的对象。 你可以将绑定到数据项目的字段或为静态值。 当绑定到静态值，所有<xref:System.Web.UI.WebControls.MenuItem>对象向其<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象共享相同的值。 绑定到字段的属性包含的数据源的字段的值。  
  
 如果冲突<xref:System.Web.UI.WebControls.MenuItemBinding>定义对象，<xref:System.Web.UI.WebControls.Menu>控件适用以下优先顺序中的菜单项绑定：  
  
1.  <xref:System.Web.UI.WebControls.MenuItemBinding>定义并匹配深度和数据成员的对象。  
  
2.  <xref:System.Web.UI.WebControls.MenuItemBinding>定义并匹配的数据成员的对象。  
  
3.  <xref:System.Web.UI.WebControls.MenuItemBinding>对象定义并匹配仅的深度。  
  
4.  <xref:System.Web.UI.WebControls.MenuItemBinding>定义既不深度，也不数据成员的对象。 （此类型的菜单项绑定适用于菜单中的所有菜单项。）  
  
5.  <xref:System.Web.UI.WebControls.MenuItemBinding>数据源中没有匹配项的对象。 在这种情况下，返回的值`ToString()`数据项方法然后绑定到<xref:System.Web.UI.WebControls.MenuItem.Text%2A>和<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性对其的菜单项<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性来指定要绑定到中的菜单项的 XML 元素<xref:System.Web.UI.WebControls.Menu>控件。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 MenuDataMember.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBindingDataMember#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBindingDataMember/CS/menuitembindingdatamembercs.aspx#1)]
 [!code-aspx-vb[MenuItemBindingDataMember#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBindingDataMember/VB/menuitembindingdatamembervb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapNodeHome ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNodeCategory ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNodeSection ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNodeSection ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNodeSection ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNodeCategory>`  
  
 `<MapNodeCategory ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNodeSection ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNodeSection ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNodeSection ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNodeCategory>`  
  
 `</MapNodeHome>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Depth" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的菜单深度。</summary>
        <value>应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的菜单深度。 默认值为 -1，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在创建时<xref:System.Web.UI.WebControls.MenuItemBinding>对象，你必须指定用于绑定的条件。 该条件指示何时数据项应绑定到的菜单项。 你可以指定<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，和 / 或。  
  
 使用<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性来指定要应用的菜单深度<xref:System.Web.UI.WebControls.MenuItemBinding>对象。 例如，以下<xref:System.Web.UI.WebControls.MenuItemBinding>声明将绑定到数据源的名称和 ID 字段<xref:System.Web.UI.WebControls.MenuItem.Text%2A>和<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性，分别的深度为 0 的所有菜单项：  
  
```  
<asp:MenuItemBinding Depth="0" TextField="Name" ValueField="ID">  
```  
  
 有时你可能需要创建一个指定的深度和数据成员的菜单项绑定。 仅当数据源包含在具有相同的数据成员值的不同级别的项目时，经常使用这种。 例如，你可以`<Item>`出现在 XML 文件中的不同级别的元素。 以下<xref:System.Web.UI.WebControls.MenuItemBinding>的声明显示了如何指定应用于相同的数据成员位于不同的菜单深度的菜单项绑定：  
  
 `<asp:MenuItemBinding DataMember="Item" Depth="1" TextField="Title">`  
  
 `<asp:MenuItemBinding DataMember="Item" Depth="2" TextField="ISBN">`  
  
 如果菜单项绑定定义的深度和数据成员中，菜单项绑定适用于菜单中的所有菜单项。 这常用当所有数据项目具有相同的属性，并且应相同，显示无论菜单深度。  
  
 建立绑定条件后，你可以随后绑定的属性<xref:System.Web.UI.WebControls.MenuItem>可以绑定到一个值的对象。 你可以将绑定到数据项目的字段或为静态值。 当绑定到静态值，所有<xref:System.Web.UI.WebControls.MenuItem>对象向其<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象共享相同的值。 绑定到字段的属性包含的数据源的字段的值。  
  
 如果冲突<xref:System.Web.UI.WebControls.MenuItemBinding>定义对象，<xref:System.Web.UI.WebControls.Menu>控件适用以下优先顺序中的菜单项绑定：  
  
1.  <xref:System.Web.UI.WebControls.MenuItemBinding>定义并匹配深度和数据成员的对象。  
  
2.  <xref:System.Web.UI.WebControls.MenuItemBinding>定义并匹配的数据成员的对象。  
  
3.  <xref:System.Web.UI.WebControls.MenuItemBinding>对象定义并匹配仅的深度。  
  
4.  <xref:System.Web.UI.WebControls.MenuItemBinding>定义既不深度，也不数据成员的对象。 （此类型的菜单项绑定适用于菜单中的所有菜单项。）  
  
5.  <xref:System.Web.UI.WebControls.MenuItemBinding>数据源中没有匹配项的对象。 在这种情况下，返回的值`ToString()`数据项方法然后绑定到<xref:System.Web.UI.WebControls.MenuItem.Text%2A>和<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性对其的菜单项<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性来指定要应用的菜单深度<xref:System.Web.UI.WebControls.MenuItemBinding>对象。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 MenuDepth.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBindingDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBindingDepth/CS/menuitembindingdepthcs.aspx#1)]
 [!code-aspx-vb[MenuItemBindingDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBindingDepth/VB/menuitembindingdepthvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapNode>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Depth" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否启用应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的菜单项，以允许此菜单项显示一个弹出图像和任何子菜单项。</summary>
        <value>
          如果启用应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的菜单项，则为 <see langword="true" />，否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.MenuItemBinding.Enabled%2A>属性来设置<xref:System.Web.UI.WebControls.MenuItem.Enabled%2A?displayProperty=nameWithType>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 此设置会对其的所有菜单项与共享<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。 当此属性设置为`false`，菜单项被禁用并且不指示子项目的弹出图像将显示。 此属性设置为`false`的菜单项就是使该菜单项的末尾该节点，其中任何进一步的级别会显示从该节点中移出。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="EnabledField">
      <MemberSignature Language="C#" Value="public string EnabledField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnabledField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.EnabledField" />
      <MemberSignature Language="VB.NET" Value="Public Property EnabledField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EnabledField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源中字段的名称，该字段将绑定到 <see cref="P:System.Web.UI.WebControls.MenuItem.Enabled" /> 对象将应用到的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 属性。</summary>
        <value>绑定到应用 <see cref="P:System.Web.UI.WebControls.MenuItem.Enabled" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的字段的名称。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.EnabledField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Enabled%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。  
  
> [!NOTE]
>  你可以重写各个菜单项启用通过设置其<xref:System.Web.UI.WebControls.MenuItem.Enabled%2A>直接属性。  
  
 如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，和 / 或。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.Enabled%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.EnabledField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.EnabledField%2A>属性优先。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="FormatString">
      <MemberSignature Language="C#" Value="public string FormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.FormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置字符串，用于指定应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的菜单项的文本显示格式。</summary>
        <value>格式字符串，用于指定应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的菜单项的文本显示格式。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItemBinding.FormatString%2A>属性用于为菜单项的文本提供自定义格式。 格式字符串可以包含文本字符串、 一个占位符，或两者。 占位符替换为用于绑定到的菜单项文本的值时，将按原义，显示的文本字符串。  
  
 占位符拆分为两个部分，在窗体中，以冒号分隔 {`A`:`Bxx`}。 例如，{0: f2} 显示一个带两位小数定点数。  
  
> [!NOTE]
>  占位符字符串必须括在大括号以指示它是一个占位符，而不是文本字符串中。 大括号外的任何文本显示为文字文本。  
  
 标准格式字符串语法，冒号前的值将保持 (`A`常规示例中) 从零开始的参数列表中，指定的参数索引。 因为可以在每个菜单项中显示只有一个值，则参数索引可以设置只为 0。  
  
 冒号后面的字符 (`B`常规示例中) 指定值的显示格式。 下表列出了常见的格式。  
  
|格式字符|描述|  
|----------------------|-----------------|  
|`C`|以货币格式显示数字值。|  
|`D`|以十进制格式显示数字值。|  
|`E`|以科学记数 （指数） 格式显示数值。|  
|`F`|采用固定格式显示数字值。|  
|`G`|以常规格式显示数字值。|  
|`N`|采用数字格式显示数字值。|  
|`X`|以十六进制格式显示数字值。|  
  
> [!NOTE]
>  格式字符不区分大小写，除`X`，它会显示在指定的大小写的十六进制字符。  
  
 格式字符后的值 (`xx`常规示例中) 指定的有效位数或小数位数显示数量。  
  
 有关设置字符串格式的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding.FormatString%2A>属性设置中的菜单项显示的文本的格式<xref:System.Web.UI.WebControls.Menu>控件。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 Menu.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBinding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBinding/CS/menuitembindingcs.aspx#1)]
 [!code-aspx-vb[MenuItemBinding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBinding/VB/menuitembindingvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapHomeNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.TextField" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置显示在应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的菜单项文本旁边的图像的 URL。</summary>
        <value>显示在应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的菜单项文本旁边的图像的 URL。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A>属性来指定要绑定到自定义图像的 URL<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A?displayProperty=nameWithType>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 与所有共享此映像<xref:System.Web.UI.WebControls.MenuItem>对象向其<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。 图像将显示菜单项的文本的旁边，并且可以是任何文件格式 （.jpg、.gif、.bmp、 等），只要客户端的浏览器支持该格式。  
  
> [!NOTE]
>  可以通过设置重写各个菜单项的图像其<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>直接属性。  
  
 而不是使用此属性来显示每个菜单项中的同一个映像，你可以使用<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>属性将绑定<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>到数据源的字段的对象。 呈现时，<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>属性优先。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A>属性来指定要显示的菜单项的文本旁边的图像的 URL。 此映像显示在每个菜单项<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 Menu.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBindingText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBindingText/CS/menuitembindingtextcs.aspx#1)]
 [!code-aspx-vb[MenuItemBindingText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBindingText/VB/menuitembindingtextvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapHomeNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.FormatString" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrlField">
      <MemberSignature Language="C#" Value="public string ImageUrlField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrlField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrlField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageUrlField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源中字段的名称，该字段将绑定到 <see cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" /> 对象将应用到的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 属性。</summary>
        <value>绑定到应用 <see cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的字段的名称。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 呈现时，<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。 图像将显示菜单项的文本的旁边，并且可以是任何文件格式 （.jpg、.gif、.bmp、 等），只要客户端的浏览器支持该格式。  
  
> [!NOTE]
>  可以通过设置重写各个菜单项的图像其<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>直接属性。  
  
 如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，和 / 或。  
  
 而不是使用此属性将绑定<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象移到一个字段，你可以还将其绑定到静态值通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A?displayProperty=nameWithType>属性。 这使你可以向其每个菜单项中显示相同映像<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>属性优先。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>的菜单项的属性。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 Menu.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBinding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBinding/CS/menuitembindingcs.aspx#1)]
 [!code-aspx-vb[MenuItemBinding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBinding/VB/menuitembindingvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapHomeNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.FormatString" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="NavigateUrl">
      <MemberSignature Language="C#" Value="public string NavigateUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigateUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NavigateUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在单击应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的菜单项时链接到的 URL。</summary>
        <value>单击应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的菜单项时链接到的 URL。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>属性来指定要绑定到的 URL<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A?displayProperty=nameWithType>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 与对其的所有菜单项共享此 URL<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。 当用户单击菜单项时，则用户将转到指定的 URL。  
  
> [!NOTE]
>  可以通过设置各个菜单项的 URL 重写其<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>直接属性。  
  
 而不是使用此属性来导航到每个菜单项中的同一个 URL，还可以绑定<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>属性。 呈现时，<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>属性优先。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>属性来指定要在单击菜单项时，导航到的 URL。 在每个菜单项中使用此 URL<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 Menu.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBindingText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBindingText/CS/menuitembindingtextcs.aspx#1)]
 [!code-aspx-vb[MenuItemBindingText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBindingText/VB/menuitembindingtextvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapHomeNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.FormatString" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="NavigateUrlField">
      <MemberSignature Language="C#" Value="public string NavigateUrlField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrlField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigateUrlField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NavigateUrlField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源中字段的名称，该字段将绑定到 <see cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" /> 对象将应用到的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 属性。</summary>
        <value>绑定到应用 <see cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的数据源的字段名称。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 呈现时，<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。 单击菜单项时，则用户转到相应的 URL。  
  
> [!NOTE]
>  可以通过设置各个菜单项的 URL 重写其<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>直接属性。  
  
 如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，和 / 或。  
  
 而不是使用此属性将绑定<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象移到一个字段，你可以还将其绑定到静态值通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A?displayProperty=nameWithType>属性。 这使您可以从每个菜单项导航到相同的 URL<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>属性优先。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>的菜单项的属性。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 Menu.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBinding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBinding/CS/menuitembindingcs.aspx#1)]
 [!code-aspx-vb[MenuItemBinding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBinding/VB/menuitembindingvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapHomeNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.FormatString" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="PopOutImageUrl">
      <MemberSignature Language="C#" Value="public string PopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property PopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置某个图像的 URL，此图像指示应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的菜单项存在动态子菜单。</summary>
        <value>指示应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的菜单项存在动态子菜单的图像的 URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl%2A>属性指定的 URL<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A?displayProperty=nameWithType>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 与对其的所有菜单项共享此 URL<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。  
  
> [!NOTE]
>  可以通过设置各个菜单项的 URL 重写其<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>直接属性。  
  
 你可以将绑定<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A>属性。 呈现时，<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A>属性优先。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="PopOutImageUrlField">
      <MemberSignature Language="C#" Value="public string PopOutImageUrlField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PopOutImageUrlField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField" />
      <MemberSignature Language="VB.NET" Value="Public Property PopOutImageUrlField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PopOutImageUrlField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源中字段的名称，该字段将绑定到 <see cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" /> 对象将应用到的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 属性。</summary>
        <value>绑定到应用 <see cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 属性的数据源的字段名称。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A?displayProperty=nameWithType>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 呈现时，<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。 为每个菜单项显示在相应的 URL 的映像。  
  
> [!NOTE]
>  可以通过设置各个菜单项的 URL 重写其<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>直接属性。  
  
 如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，和 / 或。  
  
 而不是使用此属性将绑定<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象移到一个字段，你可以还将其绑定到静态值通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl%2A?displayProperty=nameWithType>属性。 这使您可以从每个菜单项导航到相同的 URL<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A>属性优先。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="public bool Selectable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selectable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.Selectable" />
      <MemberSignature Language="VB.NET" Value="Public Property Selectable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selectable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的菜单项是否可被选中，或是否为“可单击的”。</summary>
        <value>
          如果应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的菜单项可被选中，则为 <see langword="true" />，否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.Selectable%2A>属性来设置<xref:System.Web.UI.WebControls.MenuItem.Selectable%2A?displayProperty=nameWithType>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 此设置会对其的所有菜单项与共享<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。 当此属性设置为`false`，菜单项不是"可单击"，但会显示任何其子项。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="SelectableField">
      <MemberSignature Language="C#" Value="public string SelectableField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectableField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.SelectableField" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectableField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectableField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源中字段的名称，该字段将绑定到 <see cref="P:System.Web.UI.WebControls.MenuItem.Selectable" /> 对象将应用到的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 属性。</summary>
        <value>绑定到应用 <see cref="P:System.Web.UI.WebControls.MenuItem.Selectable" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的字段的名称。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.SelectableField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Selectable%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。  
  
> [!NOTE]
>  你可以重写各个菜单项启用通过设置其<xref:System.Web.UI.WebControls.MenuItem.Selectable%2A>直接属性。  
  
 如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，和 / 或。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.Selectable%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.SelectableField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.SelectableField%2A>属性优先。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string SeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property SeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图像的 URL，该图像显示在应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的菜单项的菜单项文本下面（用于将此菜单项与其他菜单项分开）。</summary>
        <value>图像的 URL，该图像显示在应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的菜单项的菜单项文本下面。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl%2A>属性指定的 URL<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A?displayProperty=nameWithType>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 与对其的所有菜单项共享此 URL<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。  
  
> [!NOTE]
>  可以通过设置各个菜单项的 URL 重写其<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>直接属性。  
  
 而不是使用此属性以指示每个菜单项中的同一个 URL，还可以绑定<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A>属性。 呈现时，<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A>属性优先。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorImageUrlField">
      <MemberSignature Language="C#" Value="public string SeparatorImageUrlField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SeparatorImageUrlField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField" />
      <MemberSignature Language="VB.NET" Value="Public Property SeparatorImageUrlField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SeparatorImageUrlField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源中字段的名称，该字段将绑定到 <see cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" /> 对象将应用到的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 属性。</summary>
        <value>绑定到应用 <see cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的数据源的字段名称。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 呈现时，<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。 为每个菜单项显示在相应的 URL 的映像。  
  
> [!NOTE]
>  可以通过设置各个菜单项的 URL 重写其<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>直接属性。  
  
 如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，和 / 或。  
  
 而不是使用此属性将绑定<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象移到一个字段，你可以还将其绑定到静态值通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl%2A?displayProperty=nameWithType>属性。 这使您可以从每个菜单项导航到相同的 URL<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A>属性优先。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemBinding.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的副本。</summary>
        <returns>
          <see cref="T:System.Object" />，表示 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的副本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItemBinding.System%23ICloneable%23Clone%2A>方法是一个帮助器函数来创建一份<xref:System.Web.UI.WebControls.MenuItemBinding>对象从其调用此方法。  
  
> [!NOTE]
>  此方法主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema">
      <MemberSignature Language="C#" Value="object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceViewSchema As Object Implements IDataSourceViewSchemaAccessor.DataSourceViewSchema" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参阅 <see cref="P:System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema" />。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.MenuItemBinding> 实例强制转换为 <xref:System.Web.UI.IDataSourceViewSchemaAccessor> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象是否正将更改保存到其视图状态。</summary>
        <value>
          如果控件标记为保存其状态，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Object" />，包含保存的视图状态值。</param>
        <summary>加载节点的以前保存的视图状态。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存 <see cref="T:System.Object" /> 的视图状态更改。</summary>
        <returns>
          <see cref="T:System.Object" />，包含视图状态更改。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象跟踪对其视图状态的更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 服务器控件，调用此方法后<xref:System.Web.UI.Control.IsTrackingViewState%2A>属性返回`true`。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置目标窗口或框架，在此目标窗口或框架中显示与应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的菜单项关联的网页内容。</summary>
        <value>显示所链接的网页内容的目标窗口或框架。 默认值为空字符串 ("")，该值刷新具有焦点的窗口或框架。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>属性指定的窗口或框架中显示的 Web 内容时链接到的菜单项单击该菜单项。  
  
> [!NOTE]
>  设置此属性将替代<xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=nameWithType>属性<xref:System.Web.UI.WebControls.Menu>对其的菜单项控件<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。 你可以有选择地通过重写此属性设置<xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=nameWithType>直接每个菜单项的属性。  
  
 目标值必须以字母 a 到 Z （区分大小写），但下表中所示，以下划线开头某些特殊值除外范围的开头。  
  
|目标值|描述|  
|------------------|-----------------|  
|`_blank`|将内容呈现在一个没有框架的新窗口中。|  
|`_parent`|将内容呈现在上一个框架集父级中。|  
|`_search`|在搜索窗格中呈现内容。|  
|`_self`|将内容呈现在含焦点的框架中。|  
|`_top`|将内容呈现在没有框架的全窗口中。|  
  
> [!NOTE]
>  请查看浏览器文档，确定是否支持 `_search` 值。  例如，Microsoft Internet Explorer 5.0 及更高版本支持 `_search` 目标值。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>属性呈现为`target`属性。 `target`属性`anchor`XHTML 1.1 文档类型定义中不允许的元素。 未设置<xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>属性如果呈现的输出<xref:System.Web.UI.WebControls.MenuItemBinding>对象必须是符合 XHTML 1.1。 有关详细信息，请参阅主题[在 Visual Studio 和 ASP.NET 的 XHTML 标准](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97)。  
>   
>  在创建可访问网页时，强烈建议你避免使用<xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>属性将作为目标另一个窗口。 有关详细信息，请参阅[NIB: ASP.NET 可访问性](http://msdn.microsoft.com/library/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>属性以指定显示单击该菜单项时与菜单项关联的 Web 内容的窗口。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 Menu.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBinding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBinding/CS/menuitembindingcs.aspx#1)]
 [!code-aspx-vb[MenuItemBinding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBinding/VB/menuitembindingvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapHomeNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.FormatString" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="TargetField">
      <MemberSignature Language="C#" Value="public string TargetField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.TargetField" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源中字段的名称，该字段将绑定到 <see cref="P:System.Web.UI.WebControls.MenuItem.Target" /> 对象将应用到的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 属性。</summary>
        <value>绑定到应用 <see cref="P:System.Web.UI.WebControls.MenuItem.Target" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的字段的名称。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.TargetField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=nameWithType>属性<xref:System.Web.UI.WebControls.MenuItem>对象。  
  
 <xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=nameWithType>属性指定的窗口或框架中显示的 Web 内容时，链接到的菜单项单击该菜单项。 值必须以 A 到 Z 范围内的字母（不区分大小写）打头，但某些以下划线打头的特殊值除外，如下表所示：  
  
|目标值|描述|  
|------------------|-----------------|  
|`_blank`|将内容呈现在一个没有框架的新窗口中。|  
|`_parent`|将内容呈现在上一个框架集父级中。|  
|`_self`|将内容呈现在含焦点的框架中。|  
|`_top`|将内容呈现在没有框架的全窗口中。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>属性呈现为`target`属性。 `target`属性`anchor`XHTML 1.1 文档类型定义中不允许的元素。 未设置<xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>属性如果呈现的输出<xref:System.Web.UI.WebControls.MenuItemBinding>必须符合 XHTML 1.1。 有关详细信息，请参阅主题[在 Visual Studio 和 ASP.NET 的 XHTML 标准](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97)。  
>   
>  在创建可访问网页时，强烈建议你避免使用<xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>属性将作为目标另一个窗口。 有关详细信息，请参阅[NIB: ASP.NET 可访问性](http://msdn.microsoft.com/library/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae)。  
  
 请注意，设置此属性重写<xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=nameWithType>属性<xref:System.Web.UI.WebControls.Menu>此菜单项的控件。 设置<xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=nameWithType>属性以打开新窗口可以变得比较困难的辅助技术设备的用户使用的页面。  
  
> [!NOTE]
>  你可以重写启用各个菜单项，通过设置其<xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=nameWithType>直接属性。  
  
 如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，和 / 或。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.TargetField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.TargetField%2A>属性优先。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的菜单项显示的文本。</summary>
        <value>为应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的菜单项显示的文本。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>属性来指定要绑定到的文本<xref:System.Web.UI.WebControls.MenuItem.Text%2A?displayProperty=nameWithType>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 此文本显示在菜单项并对其的所有菜单项与共享<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。  
  
> [!NOTE]
>  可以通过设置各个菜单项的文本重写其<xref:System.Web.UI.WebControls.MenuItem.Text%2A>直接属性。  
  
 而不是使用此属性来显示每个菜单项中的相同的文本，还可以绑定<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性<xref:System.Web.UI.WebControls.MenuItem>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>属性。 呈现时，<xref:System.Web.UI.WebControls.MenuItem.Text%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>属性优先。  
  
 无法创建在空节点<xref:System.Web.UI.WebControls.Menu>通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>或<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>属性为空字符串 ("")。 将这些属性设置为空字符串作为未设置这些属性的效果相同。 在这种情况下，<xref:System.Web.UI.WebControls.Menu>控件创建默认绑定使用<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>属性。 有关详细信息，请参阅[ASP.NET 数据访问内容映射](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2)。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>属性来指定要显示在菜单项的文本。 此文本显示在向其每个菜单项<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 Menu.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBindingText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBindingText/CS/menuitembindingtextcs.aspx#1)]
 [!code-aspx-vb[MenuItemBindingText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBindingText/VB/menuitembindingtextvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapHomeNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.FormatString" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="TextField">
      <MemberSignature Language="C#" Value="public string TextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.TextField" />
      <MemberSignature Language="VB.NET" Value="Public Property TextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源中字段的名称，该字段将绑定到 <see cref="P:System.Web.UI.WebControls.MenuItem.Text" /> 对象将应用到的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 属性。</summary>
        <value>绑定到应用 <see cref="P:System.Web.UI.WebControls.MenuItem.Text" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的数据源的字段名称。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 呈现时，<xref:System.Web.UI.WebControls.MenuItem.Text%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。 此文本显示在菜单项。  
  
> [!NOTE]
>  可以通过设置各个菜单项的文本重写其<xref:System.Web.UI.WebControls.MenuItem.Text%2A>直接属性。  
  
 如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，和 / 或。  
  
 无法创建在空节点<xref:System.Web.UI.WebControls.Menu>通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>或<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>属性为空字符串 ("")。 将这些属性设置为空字符串作为未设置这些属性的效果相同。 在这种情况下，<xref:System.Web.UI.WebControls.Menu>控件创建默认绑定使用<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>属性。 有关详细信息，请参阅[ASP.NET 数据访问内容映射](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2)。  
  
 而不是使用此属性将绑定<xref:System.Web.UI.WebControls.MenuItem.Text%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象移到一个字段，你可以还将其绑定到静态值通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A?displayProperty=nameWithType>属性。 这使你可以向其每个菜单项中显示相同的文本<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>属性优先。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Text%2A>的菜单项的属性。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 Menu.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBinding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBinding/CS/menuitembindingcs.aspx#1)]
 [!code-aspx-vb[MenuItemBinding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBinding/VB/menuitembindingvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapHomeNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.FormatString" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的菜单项的 ToolTip 文本。</summary>
        <value>应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的菜单项的 ToolTip 文本。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A>属性来指定要绑定到的文本<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A?displayProperty=nameWithType>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 与对其的所有菜单项共享此工具提示<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。 当用户将鼠标指针定位在菜单项时，将显示指定的文本。  
  
> [!NOTE]
>  可以通过设置重写各个菜单项的工具提示其<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>直接属性。  
  
 而不是使用此属性来指定每个菜单项的相同工具提示，还可以绑定<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>属性<xref:System.Web.UI.WebControls.MenuItem>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>属性。 呈现时，<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>属性优先。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A>属性指定当用户将鼠标指针定位在菜单项时要显示的工具提示。 此工具提示显示每个菜单项<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 Menu.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBindingText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBindingText/CS/menuitembindingtextcs.aspx#1)]
 [!code-aspx-vb[MenuItemBindingText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBindingText/VB/menuitembindingtextvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapHomeNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.FormatString" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipField">
      <MemberSignature Language="C#" Value="public string ToolTipField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.ToolTipField" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源中字段的名称，该字段将绑定到 <see cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" /> 对象将应用到的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 属性。</summary>
        <value>绑定到应用 <see cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的字段的名称。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 呈现时，<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。 当用户在鼠标指针置于菜单项上时，将显示指定的文本。  
  
> [!NOTE]
>  可以通过设置各个菜单项的文本重写其<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>直接属性。  
  
 如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，和 / 或。  
  
 而不是使用此属性将绑定<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象移到一个字段，你可以还将其绑定到静态值通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A?displayProperty=nameWithType>属性。 这使你可以向其显示每个菜单项的相同工具提示<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>属性优先。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>的菜单项的属性。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 Menu.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBinding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBinding/CS/menuitembindingcs.aspx#1)]
 [!code-aspx-vb[MenuItemBinding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBinding/VB/menuitembindingvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapHomeNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.FormatString" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemBinding.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回表示当前对象的字符串。</summary>
        <returns>表示当前对象的字符串。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置不可显示的值，该值用于存储有关应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的菜单项的任何附加数据，例如用于处理回发事件的数据。</summary>
        <value>有关应用 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的菜单项的附加数据；这些数据不显示出来。 默认值为空字符串 ("")，指示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A>属性来指定要绑定到的值<xref:System.Web.UI.WebControls.MenuItem.Value%2A?displayProperty=nameWithType>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 此值与对其的所有菜单项共享<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。 指定的值不会显示在菜单项和用于存储有关的菜单项的任何其他数据<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象，如用于处理回发事件数据。  
  
> [!NOTE]
>  可以通过设置各个菜单项的值重写其<xref:System.Web.UI.WebControls.MenuItem.Value%2A>直接属性。  
  
 不要使用此属性来指定每个菜单项相同的值，还可以绑定<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性<xref:System.Web.UI.WebControls.MenuItem>通过设置数据源的字段的对象<xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>属性。 呈现时，<xref:System.Web.UI.WebControls.MenuItem.Value%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>属性优先。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A>属性指定与菜单项关联的不可显示的值。 在每个菜单项中使用此值<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 Menu.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBindingText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBindingText/CS/menuitembindingtextcs.aspx#1)]
 [!code-aspx-vb[MenuItemBindingText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBindingText/VB/menuitembindingtextvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapHomeNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.FormatString" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="ValueField">
      <MemberSignature Language="C#" Value="public string ValueField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemBinding.ValueField" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValueField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源中字段的名称，该字段将绑定到 <see cref="P:System.Web.UI.WebControls.MenuItem.Value" /> 对象将应用到的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 属性。</summary>
        <value>绑定到应用 <see cref="P:System.Web.UI.WebControls.MenuItem.Value" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 的 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 的字段的名称。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Menu>控件绑定到数据源，请使用<xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象。 呈现时，<xref:System.Web.UI.WebControls.MenuItem.Value%2A>到每个菜单项的属性<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象包含的字段中的相应值。 指定的值不会显示在菜单项和用于存储有关的菜单项的任何其他数据<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象，如用于处理回发事件数据。  
  
> [!NOTE]
>  可以通过设置各个菜单项的值重写其<xref:System.Web.UI.WebControls.MenuItem.Value%2A>直接属性。  
  
 如果数据源包含多个表或属性，您必须首先建立绑定条件设置<xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>属性，<xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>属性，和 / 或。  
  
 而不是使用此属性将绑定<xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性<xref:System.Web.UI.WebControls.MenuItem>对象移到一个字段，你可以还将其绑定到静态值通过设置<xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A?displayProperty=nameWithType>属性。 这允许你指定的每个菜单项相同的值<xref:System.Web.UI.WebControls.MenuItemBinding>应用对象。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A>和<xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>都设置属性，<xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>属性优先。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>属性来指定要绑定到的字段名称<xref:System.Web.UI.WebControls.MenuItem.Value%2A>的菜单项的属性。 对于此示例中正常工作，必须将下面的示例 XML 数据复制到一个名为 Menu.xml 文件。  
  
 [!code-aspx-csharp[MenuItemBinding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemBinding/CS/menuitembindingcs.aspx#1)]
 [!code-aspx-vb[MenuItemBinding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemBinding/VB/menuitembindingvb.aspx#1)]  
  
 下面的代码是前面的示例的示例站点地图数据。  
  
 `<MapHomeNode ImageUrl="~\Images\Home.gif"`  
  
 `Title="Home"`  
  
 `Description="Root Page"`  
  
 `ToolTip="Home Page">`  
  
 `<MapNode ImageUrl="~\Images\Music.gif"`  
  
 `Title="Music"`  
  
 `Description="Music Category"`  
  
 `ToolTip="Music Page">`  
  
 `<MapNode ImageUrl="~\Images\Classical.gif"`  
  
 `Title="Classical"`  
  
 `Description="Classical Section"`  
  
 `ToolTip="Classical Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Rock.gif"`  
  
 `Title="Rock"`  
  
 `Description="Rock Section"`  
  
 `ToolTip="Rock Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Jazz.gif"`  
  
 `Title="Jazz"`  
  
 `Description="Jazz Section"`  
  
 `ToolTip="Jazz Page"/>`  
  
 `</MapNode>`  
  
 `<MapNode ImageUrl="~\Images\Movies.gif"`  
  
 `Title="Movies"`  
  
 `Description="Movies Category"`  
  
 `ToolTip="Movies Page">`  
  
 `<MapNode ImageUrl="~\Images\Action.gif"`  
  
 `Title="Action"`  
  
 `Description="Action Section"`  
  
 `ToolTip="Action Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Drama.gif"`  
  
 `Title="Drama"`  
  
 `Description="Drama Section"`  
  
 `ToolTip="Drama Page"/>`  
  
 `<MapNode ImageUrl="~\Images\Musical.gif"`  
  
 `Title="Musical"`  
  
 `Description="Musical Section"`  
  
 `ToolTip="Musical Page"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.FormatString" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemBinding.Value" />
      </Docs>
    </Member>
  </Members>
</Type>