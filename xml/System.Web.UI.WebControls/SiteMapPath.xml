<Type Name="SiteMapPath" FullName="System.Web.UI.WebControls.SiteMapPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4be418e06191f676b8c071177906e7ead3047542" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30601071" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SiteMapPath : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SiteMapPath extends System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SiteMapPath" />
  <TypeSignature Language="VB.NET" Value="Public Class SiteMapPath&#xA;Inherits CompositeControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class SiteMapPath : System::Web::UI::WebControls::CompositeControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SiteMapPathDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>显示一组文本或图像的超链接，使用户能够更轻松地浏览网站，同时占用最少量的页面空间。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主题内容：  
  
-   [介绍](#introduction)  
  
-   [节点](#nodes)  
  
-   [节点外观](#node_appearance)  
  
-   [事件](#events)  
  
-   [说明如何自定义](#customizing_the_sitemappath_control)  
  
-   [辅助功能](#accessibility)  
  
-   [声明性语法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>介绍  
 <xref:System.Web.UI.WebControls.SiteMapPath>控件是一个反映提供的数据的站点导航控件<xref:System.Web.SiteMap>对象。 它使您能够轻松地导航站点节省空间，并充当其中在当前显示的页面是在站点内的参考点。 此类型的控件通常称为痕迹导航或眉毛导航，因为它将显示提供从当前位置层次结构中的页转义层次结构路径的超链接的页名称。 <xref:System.Web.UI.WebControls.SiteMapDataSource>。 <xref:System.Web.UI.WebControls.SiteMapPath>可用于站点，但又具有深层分层页结构<xref:System.Web.UI.WebControls.TreeView>或<xref:System.Web.UI.WebControls.Menu>可能需要过多页上的空间。  
  
 <xref:System.Web.UI.WebControls.SiteMapPath>控件的工作方式直接与你的 Web 站点站点地图数据。 如果你使用它在页上不会显示在你的站点代码图中，将不会显示。 有关站点映射的详细信息，请参阅[ASP.NET 站点导航](http://msdn.microsoft.com/library/23de8a05-cac3-4693-b508-39f1d4b7053d)。  
  
<a name="nodes"></a>   
## <a name="nodes"></a>节点  
 <xref:System.Web.UI.WebControls.SiteMapPath>节点组成。 在路径中的每个元素都称为一个节点，它由<xref:System.Web.UI.WebControls.SiteMapNodeItem>对象。 锚定路径并表示的层次结构树的节点称为根节点。 表示当前显示的页的节点是当前节点。 当前节点与根节点之间的任何其他节点是一个父节点。 下表介绍的三个不同的节点类型。  
  
|节点类型|描述|  
|---------------|-----------------|  
|根|一个定位一组分层的节点的节点。|  
|父|具有一个或多个子节点，但不是当前节点的节点。|  
|当前|一个表示当前显示的页的节点。|  
  
<a name="node_appearance"></a>   
## <a name="node-appearance"></a>节点外观  
 显示每个节点<xref:System.Web.UI.WebControls.SiteMapPath>是<xref:System.Web.UI.WebControls.HyperLink>或<xref:System.Web.UI.WebControls.Literal>控件，可以应用模板或到样式。 模板和样式将应用到节点根据两个规则的优先顺序：  
  
-   如果节点为定义了模板，它将覆盖任何节点定义的样式。  
  
-   模板和特定于类型的节点的样式重写的常规模板和样式定义的所有节点。  
  
 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>属性应用到所有的节点，而不考虑其节点类型。 如果定义了这两个这些属性，<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>优先。  
  
 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>属性应用于表示当前显示的页的节点。 如果<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>除了定义<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>，它将被忽略。 如果<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>除了定义<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>，它会与合并<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>若要创建合并的样式。 此合并的样式使用的所有元素<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>，加上的任何其他元素<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>，不会与冲突<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>。  
  
 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>属性应用于表示站点导航层次结构的根节点。 如果<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>除了定义<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>，它将被忽略。 如果<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>除了定义<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>，它会与合并<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>若要创建合并的样式。 此合并的样式使用的所有元素<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>，加上的任何其他元素<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>未不与冲突<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>。 最后，如果在当前显示的页面为该站点的根页<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>而不是使用<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>或<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>。  
  
 <xref:System.Web.UI.WebControls.SiteMapPath>控件使用由标识站点地图提供商提供<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>作为站点导航信息其数据源的属性。 如果不指定任何提供程序，则它使用默认的提供程序为使站点，在中标识<xref:System.Web.SiteMap.Provider%2A?displayProperty=nameWithType>属性。 通常，这是对 ASP.NET、 默认站点地图提供商提供的实例<xref:System.Web.XmlSiteMapProvider>。 如果<xref:System.Web.UI.WebControls.SiteMapPath>控件用于在站点内，但没有站点映射的提供程序配置，该控件将引发<xref:System.Web.HttpException>异常。  
  
<a name="events"></a>   
## <a name="events"></a>事件  
 <xref:System.Web.UI.WebControls.SiteMapPath>控件还提供了可以编程的事件。 这允许你每次事件发生时运行的自定义的例程。 下表列出了支持<xref:System.Web.UI.WebControls.SiteMapPath>控件。  
  
|事件|描述|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated>|发生时<xref:System.Web.UI.WebControls.SiteMapPath>控件首先创建<xref:System.Web.UI.WebControls.SiteMapNodeItem>并将其与关联<xref:System.Web.SiteMapNode>。|  
|<xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound>|发生时<xref:System.Web.UI.WebControls.SiteMapNodeItem>绑定到站点地图数据包含的<xref:System.Web.SiteMapNode>。|  
  
<a name="customizing_the_sitemappath_control"></a>   
## <a name="customizing-the-sitemappath-control"></a>说明如何自定义  
 派生自的类<xref:System.Web.UI.WebControls.SiteMapPath>重写<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法以自定义<xref:System.Web.UI.WebControls.SiteMapNodeItem>包含导航控件的控件。 为了完全控制方式<xref:System.Web.UI.WebControls.SiteMapNodeItem>对象会创建并添加到<xref:System.Web.UI.WebControls.SiteMapPath>派生类会重写<xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A>方法。  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>可访问性  
 有关如何配置此控件，以使其生成符合辅助功能标准的标记的信息，请参阅[Visual Studio 和 ASP.NET 中的辅助功能](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)和[ASP.NET 控件和可访问性](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>声明性语法  
  
```  
<asp:SiteMapPath  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    ParentLevelsDisplayed="integer"  
    PathDirection="RootToCurrent|CurrentToRoot"  
    PathSeparator="string"  
    RenderCurrentNodeAsLink="True|False"  
    runat="server"  
    ShowToolTips="True|False"  
    SiteMapProvider="string"  
    SkinID="string"  
    SkipLinkText="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <CurrentNodeStyle />  
        <CurrentNodeTemplate>  
            <!-- child controls -->  
        </CurrentNodeTemplate>  
        <NodeStyle />  
        <NodeTemplate>  
            <!-- child controls -->  
        </NodeTemplate>  
        <PathSeparatorStyle />  
        <PathSeparatorTemplate>  
            <!-- child controls -->  
        </PathSeparatorTemplate>  
        <RootNodeStyle />  
        <RootNodeTemplate>  
            <!-- child controls -->  
        </RootNodeTemplate>  
</asp:SiteMapPath>  
```  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.UI.WebControls.SiteMapPath>以声明方式在 Web 窗体页中的控件。 此示例演示一些用于管理与模板和样式应用到的顺序的规则优先顺序<xref:System.Web.UI.WebControls.SiteMapPath>节点。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_5/CS/webform2navpathcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_5/VB/webform2navpathvb.aspx#1)]  
  
 前面的示例使用具有以下结构的默认站点地图提供商提供和 Web.sitemap 文件。  
  
```  
<siteMap>  
  <siteMapNode title="WebForm1" description="WebForm1" url="WebForm1.aspx" >  
    <siteMapNode title="WebForm2" description="WebForm2" url="WebForm2.aspx"/>  
  </siteMapNode>  
</siteMap>  
```  
  
 下面的代码示例演示如何扩展<xref:System.Web.UI.WebControls.SiteMapPath>控制并向其中添加新功能，通过重写<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法。 `DropDownSiteMapPath`控件将添加<xref:System.Web.UI.WebControls.DropDownList>后当前节点，以便轻松导航至的当前页的子节点的页面。 此示例演示如何使用<xref:System.Web.UI.WebControls.SiteMapNodeItem>对象，包括检查其<xref:System.Web.UI.WebControls.SiteMapNodeItemType>并调用<xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A>方法后创建的项。  
  
 [!code-csharp[Urtue.Samples.Alexkr.DropDownNavigationPath_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.DropDownNavigationPath_1/CS/dropdownnavigationpath.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.DropDownNavigationPath_1/VB/dropdownnavigationpath.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.SiteMap" />
    <altmember cref="T:System.Web.SiteMapProvider" />
    <altmember cref="T:System.Web.SiteMapNode" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapNodeItem" />
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SiteMapPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数来创建和初始化的新实例<xref:System.Web.UI.WebControls.SiteMapPath>类。 动态地添加<xref:System.Web.UI.WebControls.SiteMapPath>控制到页上，创建一个新<xref:System.Web.UI.WebControls.SiteMapPath>对象、 设置其属性，并将其添加到<xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType>如容器控件的集合<xref:System.Web.UI.WebControls.PlaceHolder>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.SiteMapPath.%23ctor%2A>构造函数来添加<xref:System.Web.UI.WebControls.SiteMapPath>到页上的控件。 对于该示例能工作，你需要将映像添加到根目录，并将更改为图像文件的名称从"myimage.jpg"的示例代码中的映像名称。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_3/CS/aboutus2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_3/VB/aboutus2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除当前子控件集合，并通过调用 <see cref="M:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy" /> 方法重新生成它。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通知使用基于撰写的实现，包括派生的控件的任何控件的 ASP.NET 基础结构调用此方法<xref:System.Web.UI.WebControls.CompositeDataBoundControl>和<xref:System.Web.UI.WebControls.CompositeControl>创建任何子控件它们包含在准备回发或呈现。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected virtual void CreateControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateControlHierarchy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检查 <see cref="P:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider" /> 提供的站点地图结构，并根据为功能节点定义的样式和模板生成子控件集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A>方法创建<xref:System.Web.UI.WebControls.SiteMapNodeItem>控制，将它们与相应关联<xref:System.Web.SiteMapNode>对象从当前站点映射提供程序，并添加到的节点<xref:System.Web.UI.Control.Controls%2A>集合。  
  
 该方法首先查找<xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=nameWithType>，然后向上层次结构树的遍历<xref:System.Web.SiteMapNode>对象，创建<xref:System.Web.UI.WebControls.SiteMapNodeItem>之前每个<xref:System.Web.SiteMap.RootNode%2A>为止。 在每行后<xref:System.Web.UI.WebControls.SiteMapNodeItem>创建，但之前绑定到其对应<xref:System.Web.SiteMapNode>、<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>调用方法。 <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法适用的任何模板或定义特定节点类型的样式和创建并初始化任何子控件，<xref:System.Web.UI.WebControls.SiteMapNodeItem>包含。 最后，<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法将添加的子控件<xref:System.Web.UI.WebControls.SiteMapNodeItem>到<xref:System.Web.UI.Control.Controls%2A>集合。  
  
 在每行后<xref:System.Web.UI.WebControls.SiteMapNodeItem>初始化时，<xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A>调用方法。 则<xref:System.Web.UI.WebControls.SiteMapNodeItem>绑定到其对应<xref:System.Web.SiteMapNode>，和<xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound%2A>调用。  
  
 <xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A>方法调用从<xref:System.Web.UI.WebControls.SiteMapPath.CreateChildControls%2A>方法。  
  
 扩展的类<xref:System.Web.UI.WebControls.SiteMapPath>控制替代<xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A>方法，以便更改如何<xref:System.Web.UI.WebControls.SiteMapNodeItem>创建或添加到控件<xref:System.Web.UI.WebControls.SiteMapPath>控件。 在中执行的操作的各个节点项<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法，并扩展的大多数类<xref:System.Web.UI.WebControls.SiteMapPath>重写该方法仅。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">没有 <see cref="P:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider" /> 可用于 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.CreateChildControls" />
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style CurrentNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style CurrentNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentNodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ CurrentNodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于当前节点显示文本的样式。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" />，它包含 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件当前节点的显示文本的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>属性来控制表示在当前显示的页面的导航路径节点的显示文本的外观。 默认情况下，显示文本是在中指定<xref:System.Web.SiteMapNode.Title%2A>属性<xref:System.Web.SiteMapNode>表示页。 常见样式设置包括自定义的背景色、 前景颜色、 字体属性和节点间距。  
  
 有关<xref:System.Web.UI.WebControls.SiteMapPath>节点，样式属性合并到单个样式，按以下顺序：  
  
1.  <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 或者，如果当前显示的页是根节点中， <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>。  
  
> [!NOTE]
>  除非显式设置为，如果节点字体样式设置为带删除线或上划线样式时，不显示节点的默认下划线样式`true`。  
  
 如果<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>定义属性，则<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>忽略属性。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式设置<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>的<xref:System.Web.UI.WebControls.SiteMapPath>Web 窗体页中的控件。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_1/CS/customerservicecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_1/VB/customerservicevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.NodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="CurrentNodeTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate CurrentNodeTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate CurrentNodeTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CurrentNodeTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ CurrentNodeTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.SiteMapNodeItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个控件模板，用于代表当前显示页的站点导航路径的节点。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" /> 对象，它实现 <see cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" /> 方法，以呈现表示当前显示页的导航路径节点的自定义内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>到<xref:System.Web.UI.ITemplate>对象，用于<xref:System.Web.UI.WebControls.Image>控件或其他控件，如<xref:System.Web.UI.WebControls.Label>，用作当前节点的用户界面元素而不是字符串。  
  
 如果<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>属性设置，则将重写模板，显示的当前导航节点文本和任何<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>应用于它。 如果当前显示的页，对应于根节点中，但是，<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>或<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>使用。  
  
 你可以以声明方式设置<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>属性设置为任何 Web 服务器控件中，和 ASP.NET 基础结构执行必要的步骤来包装为该 Web 服务器控件<xref:System.Web.UI.ITemplate>对象。 但是，Web 服务器控件不实现<xref:System.Web.UI.ITemplate>接口; 因此，当你处理的<xref:System.Web.UI.ITemplate>属性以编程方式，你必须编写<xref:System.Web.UI.ITemplate>包装器的任何模板代码。 然后，<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>属性设置为实例<xref:System.Web.UI.ITemplate>包装器。  
  
   
  
## Examples  
 下面的代码示例以声明方式定义<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>和替代定义<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_5/CS/webform2navpathcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_5/VB/webform2navpathvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.NodeTemplate" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将数据源绑定到 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件及其子控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SiteMapPath>控件旨在通过使用直接从站点地图提供商提供检索其数据<xref:System.Web.UI.WebControls.SiteMapPath.Provider%2A>属性。 不要使用<xref:System.Web.UI.WebControls.SiteMapPath>控件将绑定到 ASP.NET 数据源控件，并且不调用<xref:System.Web.UI.WebControls.SiteMapPath.DataBind%2A>方法显式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.SiteMapNodeItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.SiteMapNodeItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As SiteMapNodeItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::SiteMapNodeItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.SiteMapNodeItem" />
      </Parameters>
      <Docs>
        <param name="item">要初始化的 <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" />。</param>
        <summary>根据节点功能和为节点指定的模板和样式，使用一组子控件填充 <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" />，这是一个表示 <see cref="T:System.Web.SiteMapNode" /> 的 Web 服务器控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法确定该项表示通过检查的节点的功能类型<xref:System.Web.UI.WebControls.SiteMapNodeItemType>，并应用任何模板或为该类型的节点定义的样式。  
  
 如果<xref:System.Web.UI.WebControls.SiteMapNodeItem>具有<xref:System.Web.UI.WebControls.SiteMapNodeItemType.Root>项目类型，<xref:System.Web.UI.WebControls.HyperLink>创建子控件，与<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>可能应用。 如果<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>设置，其<xref:System.Web.UI.ITemplate>应用于该节点。 中改为<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>设置，它会与任何定义合并<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>和应用。 最后，如果未定义任何模板或样式，基本<xref:System.Web.UI.WebControls.HyperLink>控件创建并初始化与该节点的值。  
  
 如果<xref:System.Web.UI.WebControls.SiteMapNodeItem>具有<xref:System.Web.UI.WebControls.SiteMapNodeItemType.Current>项目类型，或者<xref:System.Web.UI.WebControls.Literal>或<xref:System.Web.UI.WebControls.HyperLink>创建子控件，具体取决于的返回值<xref:System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink%2A>。 然后任一<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>或<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>可能应用。 如果<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>设置，其<xref:System.Web.UI.ITemplate>应用于该节点。 如果改为<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>设置，它会与任何定义合并<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>和应用。  
  
 如果<xref:System.Web.UI.WebControls.SiteMapNodeItem>具有<xref:System.Web.UI.WebControls.SiteMapNodeItemType.Parent>项目类型，<xref:System.Web.UI.WebControls.HyperLink>创建子控件和<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>可能应用。 如果<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>设置，其<xref:System.Web.UI.ITemplate>应用于该节点。 如果改为<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>，则应用该策略。  
  
 最后，如果<xref:System.Web.UI.WebControls.SiteMapNodeItem>具有<xref:System.Web.UI.WebControls.SiteMapNodeItemType.PathSeparator>项目类型，<xref:System.Web.UI.WebControls.Literal>创建子控件和<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>为定义的相同常规规则将根据应用<xref:System.Web.UI.WebControls.SiteMapNodeItemType.Parent>节点类型。  
  
 重写<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法以操作各个<xref:System.Web.UI.WebControls.SiteMapNodeItem>对象。 如果类的设计需要更多扩展性控制如何<xref:System.Web.UI.WebControls.SiteMapNodeItem>对象会创建并添加到<xref:System.Web.UI.WebControls.SiteMapPath>控制，请重写<xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法将功能添加到派生自的控件<xref:System.Web.UI.WebControls.SiteMapPath>。 此代码示例摘自更大的示例为提供<xref:System.Web.UI.WebControls.SiteMapPath>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.DropDownNavigationPath_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.DropDownNavigationPath_1/CS/dropdownnavigationpath.cs#2)]
 [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.DropDownNavigationPath_1/VB/dropdownnavigationpath.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SiteMapPath.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As SiteMapNodeItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SiteMapNodeItemEventHandler ^ ItemCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SiteMapNodeItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> 由 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 创建且与其对应的 <see cref="T:System.Web.SiteMapNode" /> 关联时发生。 该事件由 <see cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" /> 方法引发。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SiteMapPath.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As SiteMapNodeItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SiteMapNodeItemEventHandler ^ ItemDataBound;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SiteMapNodeItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> 由 <see cref="T:System.Web.SiteMapNode" /> 绑定到其基础 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 数据后发生。 该事件由 <see cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" /> 方法引发。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表示要还原的控件状态的 <see cref="T:System.Object" />。</param>
        <summary>从用 <see cref="M:System.Web.UI.WebControls.SiteMapPath.SaveViewState" /> 方法保存的上一个请求还原视图状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要由.NET Framework 基础结构使用，但不可在代码中直接使用。 但是，控件开发人员可以重写此方法以指定自定义服务器控件还原其视图状态的方式。 有关详细信息，请参阅[ASP.NET 状态管理概述](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 <xref:System.Web.UI.WebControls.Login.LoadViewState%2A>方法还原在上一个请求过程中保存的视图状态信息。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.TrackViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="NodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style NodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style NodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.NodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ NodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于站点导航路径中所有节点的显示文本的样式。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" />，它包含 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件中显示文本的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>属性来控制由控件呈现的所有导航路径节点的显示文本的外观。 默认情况下，显示文本是在中指定<xref:System.Web.SiteMapNode.Title%2A>属性<xref:System.Web.SiteMapNode>表示页。 常见样式设置包括自定义的背景色、 前景颜色、 字体属性和节点间距。  
  
 有关<xref:System.Web.UI.WebControls.SiteMapPath>节点，样式属性合并到单个样式，按以下顺序：  
  
1.  <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 或<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>，具体取决于节点类型。  
  
> [!NOTE]
>  除非显式设置为，如果节点字体样式设置为带删除线或上划线样式时，不显示节点的默认下划线样式`true`。  
  
 如果<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>是定义，它最初应用于每个节点。 如果其他样式定义为特定类型的节点，如根节点或当前节点，该样式所取代中指定的常规样式<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>属性。 如果为特定类型的节点定义了模板，它所取代该节点的所有已定义的样式。  
  
   
  
## Examples  
 下面的代码示例演示如何定义<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>与合并<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>演示的样式优先顺序<xref:System.Web.UI.WebControls.SiteMapPath>节点。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_5/CS/webform2navpathcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_5/VB/webform2navpathvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.NodeTemplate" />
      </Docs>
    </Member>
    <Member MemberName="NodeTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate NodeTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate NodeTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.NodeTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NodeTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ NodeTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.SiteMapNodeItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个控件模板，用于站点导航路径的所有功能节点。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" /> 对象，它实现 <see cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" /> 方法，以呈现导航路径每个节点的自定义内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>到<xref:System.Web.UI.ITemplate>对象，用于<xref:System.Web.UI.WebControls.Image>或其他控件，如<xref:System.Web.UI.WebControls.Label>，作为所有导航路径节点的用户界面元素。  
  
 如果<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>属性设置，则将重写模板，显示的导航节点文本和任何<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>应用于它。 当前和根节点，如果<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>或<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>设置，这些模板会重写<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>。  
  
 你可以以声明方式设置<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>属性设置为任何 Web 服务器控件中，和 ASP.NET 基础结构执行必要的步骤来包装为该 Web 服务器控件<xref:System.Web.UI.ITemplate>对象。 但是，Web 服务器控件不实现<xref:System.Web.UI.ITemplate>接口; 因此，当你处理的<xref:System.Web.UI.ITemplate>属性以编程方式，你必须编写<xref:System.Web.UI.ITemplate>包装器的任何模板代码。 然后，<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>属性设置为实例<xref:System.Web.UI.ITemplate>包装器。  
  
   
  
## Examples  
 下面的代码示例演示如何<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>，当指定了一个重写为所有节点，包括根节点以及当前节点的特殊样式定义的样式。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_6/CS/webform1navpathcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_6/VB/webform1navpathvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>重写 <see cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" /> 类的 <see cref="T:System.Web.UI.WebControls.CompositeControl" /> 方法，并引发 <see cref="E:System.Web.UI.Control.DataBinding" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.SiteMapNodeItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.SiteMapNodeItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As SiteMapNodeItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::SiteMapNodeItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SiteMapNodeItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.SiteMapNodeItemEventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件的 <see cref="E:System.Web.UI.WebControls.SiteMapPath.ItemCreated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated>后引发事件<xref:System.Web.UI.WebControls.SiteMapPath>控件创建<xref:System.Web.UI.WebControls.SiteMapNodeItem>，这是 Web 服务器控件表示<xref:System.Web.SiteMapNode>，并将关联到<xref:System.Web.SiteMapNode>。 <xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A>之前创建的节点项绑定到其数据调用方法。 这使您可以提供一个事件处理方法，就执行自定义例程每当<xref:System.Web.UI.WebControls.SiteMapNodeItem>创建。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何调用<xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A>方法之后创建<xref:System.Web.UI.WebControls.SiteMapNodeItem>内<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法。 此代码示例摘自更大的示例为提供<xref:System.Web.UI.WebControls.SiteMapPath>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.DropDownNavigationPath_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.DropDownNavigationPath_1/CS/dropdownnavigationpath.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.DropDownNavigationPath_1/VB/dropdownnavigationpath.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.SiteMapNodeItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.SiteMapNodeItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As SiteMapNodeItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::SiteMapNodeItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SiteMapNodeItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.SiteMapNodeItemEventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件的 <see cref="E:System.Web.UI.WebControls.SiteMapPath.ItemDataBound" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound>引发事件时<xref:System.Web.UI.WebControls.SiteMapPath>控件绑定到提供的数据及其<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>。 这使您可以提供执行自定义的例程，例如更新数据库或显示的内容，每次此事件发生时的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ParentLevelsDisplayed">
      <MemberSignature Language="C#" Value="public virtual int ParentLevelsDisplayed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ParentLevelsDisplayed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ParentLevelsDisplayed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ParentLevelsDisplayed { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件显示的相对于当前显示节点的父节点级别数。</summary>
        <value>一个整数，指定相对于当前上下文节点显示的父节点级别数。 默认值为 -1，指示对控件显示的父级别数没有限制。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed%2A>属性控制显示多少个级别的父节点<xref:System.Web.UI.WebControls.SiteMapPath>上方当前上下文节点的控件。 默认情况下，显示所有父节点和上级节点上面当前上下文节点。  
  
 此属性的值存储在视图状态。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed" /> 值小于 -1。</exception>
      </Docs>
    </Member>
    <Member MemberName="PathDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PathDirection PathDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.PathDirection PathDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.PathDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PathDirection As PathDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PathDirection PathDirection { System::Web::UI::WebControls::PathDirection get(); void set(System::Web::UI::WebControls::PathDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PathDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置导航路径节点的呈现顺序。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.PathDirection" />，指示呈现导航节点时的层次结构顺序。 默认值为 <see cref="F:System.Web.UI.WebControls.PathDirection.RootToCurrent" />，指示节点以从最顶部的节点到当前节点、从左到右的层次结构顺序呈现。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:System.Web.UI.WebControls.SiteMapPath.PathDirection%2A>到<xref:System.Web.UI.WebControls.PathDirection.RootToCurrent>如果你想要显示从左到右; 的导航路径的导航路径显示为前进从左到右的站点地图节点。 换而言之，在最左边的位置是根节点、 每个后续节点处于右侧下, 一步的位置和当前节点是最右侧的位置。  
  
 设置<xref:System.Web.UI.WebControls.SiteMapPath.PathDirection%2A>到<xref:System.Web.UI.WebControls.PathDirection.CurrentToRoot>如果你想要显示从右到左的导航路径。 换而言之，反转节点顺序，以便在最右边的位置显示的根节点和当前节点显示在左边的位置。 虽然不是很常见，此排序可用于本地化 Web 窗体页面和<xref:System.Web.UI.WebControls.SiteMapPath>从右到左阅读的语言的控件。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式设置<xref:System.Web.UI.WebControls.SiteMapPath.PathDirection%2A>属性<xref:System.Web.UI.WebControls.SiteMapPath>Web 窗体页中。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_4/CS/catalog3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_4/VB/catalog3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">该 <see cref="P:System.Web.UI.WebControls.SiteMapPath.PathDirection" /> 值不是基 <see cref="T:System.Web.UI.WebControls.PathDirection" /> 枚举之一。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparator" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public virtual string PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PathSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PathSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(" &gt; ")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个字符串，该字符串在呈现的导航路径中分隔 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 节点。</summary>
        <value>一个字符串，它表示导航路径中节点的分隔符。 默认值是" &gt; "，这是从左到右，指向的字符，并且对应于默认值<see cref="T:System.Web.UI.WebControls.PathDirection" />，其设置为<see cref="F:System.Web.UI.WebControls.PathDirection.RootToCurrent" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>是定义，它应用于<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>属性。 但是，如果<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>定义属性，这两个<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>属性会被忽略。  
  
 此属性的值存储在视图状态。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的示例演示如何设置<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>属性<xref:System.Web.UI.WebControls.SiteMapPath>默认值以外的字符串。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_3/CS/aboutus2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_3/VB/aboutus2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparatorStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style PathSeparatorStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style PathSeparatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSeparatorStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ PathSeparatorStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于 <see cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparator" /> 字符串的样式。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" />，它包含 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件的 <see cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparator" /> 文本的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>属性来控制之间导航路径节点显示的路径分隔符的外观。 常见样式设置包括字体属性和由使用的字体的前景颜色<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>属性。  
  
 如果<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>定义属性，这两个<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>属性会被忽略。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PathSeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PathSeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PathSeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PathSeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.SiteMapNodeItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个控件模板，用于站点导航路径的路径分隔符。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" /> 对象，它实现 <see cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" /> 方法，以呈现导航路径的路径分隔符的自定义内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>到<xref:System.Web.UI.ITemplate>对象，用于<xref:System.Web.UI.WebControls.Image>或其他控件，如<xref:System.Web.UI.WebControls.Label>，作为而不是导航节点之间的路径分隔符<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>字符串。  
  
 如果<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>属性设置，则模板替代两<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>显示的文本和任何<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>应用于它。  
  
 你可以以声明方式设置<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>属性设置为任何 Web 服务器控件中，和 ASP.NET 基础结构执行必要的步骤来包装为该 Web 服务器控件<xref:System.Web.UI.ITemplate>。 但是，Web 服务器控件不实现<xref:System.Web.UI.ITemplate>接口; 因此，当你处理的<xref:System.Web.UI.ITemplate>属性以编程方式，你必须编写<xref:System.Web.UI.ITemplate>包装器的任何模板代码。 然后，<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>属性设置为实例<xref:System.Web.UI.ITemplate>包装器。  
  
   
  
## Examples  
 下面的代码示例演示如何定义<xref:System.Web.UI.WebControls.Image>作为<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>Web 窗体中声明的方式。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_2/CS/aboutuscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_2/VB/aboutusvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparator" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.SiteMapProvider Provider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Property Provider As SiteMapProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SiteMapProvider ^ Provider { System::Web::SiteMapProvider ^ get(); void set(System::Web::SiteMapProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 Web 服务器控件关联的 <see cref="T:System.Web.SiteMapProvider" />。</summary>
        <value>与该控件关联的 <see cref="T:System.Web.SiteMapProvider" /> 实例。 如果没有显式设置任何提供程序，将使用默认的站点地图提供程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SiteMapPath.Provider%2A>属性指定一个站点映射提供程序来与该控件使用的实例。 此提供程序可能会与由标识提供程序不同<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>属性，如果设置。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.SiteMapProvider" /> 属性指定的提供程序不可用。  
  
 \- 或 -  
  
 没有为站点配置默认提供程序。</exception>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现输出的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.CompositeControl" /> 内容写入指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，以便在客户端上显示。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.CompositeControl.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，表示用于向网页写入内容的输出流。</param>
        <summary>呈现 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件中的节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SiteMapPath>控件重写<xref:System.Web.UI.WebControls.SiteMapPath.RenderContents%2A>方法来执行其可访问性呈现时，如果<xref:System.Web.UI.WebControls.SiteMapPath.SkipLinkText%2A>属性未设置为<xref:System.String.Empty?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.SkipLinkText" />
      </Docs>
    </Member>
    <Member MemberName="RenderCurrentNodeAsLink">
      <MemberSignature Language="C#" Value="public virtual bool RenderCurrentNodeAsLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderCurrentNodeAsLink" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderCurrentNodeAsLink As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderCurrentNodeAsLink { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示是否将表示当前显示页的站点导航节点呈现为超链接。</summary>
        <value>
          如果将表示当前页的节点呈现为超链接，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 表示当前显示的页的节点是<xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=nameWithType>。 其<xref:System.Web.SiteMapNode.Title%2A>属性指定要对当前节点中，显示的文本并将其<xref:System.Web.SiteMapNode.Url%2A>属性用来创建一个超链接。 默认情况下，为当前页后，可以防止错误窗体发布不呈现任何超链接。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何设置<xref:System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink%2A>属性`true`将使当前节点成为超链接时<xref:System.Web.UI.WebControls.SiteMapPath>控件呈现其内容。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_4/CS/catalog3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_4/VB/catalog3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style RootNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style RootNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ RootNodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取根节点显示文本的样式。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" />，它包含 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件根节点显示文本的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>属性控制的导航路径的根节点的显示文本的外观。 默认情况下，显示文本是在中指定<xref:System.Web.SiteMapNode.Title%2A>属性<xref:System.Web.SiteMapNode>表示页。 常见样式设置包括自定义的背景色、 前景颜色、 字体属性和节点间距。  
  
 有关<xref:System.Web.UI.WebControls.SiteMapPath>节点，样式属性合并到单个样式，按以下顺序：  
  
1.  <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 或<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>，具体取决于节点类型。  
  
> [!NOTE]
>  除非显式设置为，如果节点字体样式设置为带删除线或上划线样式时，不显示节点的默认下划线样式`true`。  
  
 如果<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>定义属性，则<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>忽略属性。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式设置<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>属性上<xref:System.Web.UI.WebControls.SiteMapPath>控件。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_1/CS/customerservicecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_1/VB/customerservicevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.NodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="RootNodeTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate RootNodeTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate RootNodeTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RootNodeTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ RootNodeTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.SiteMapNodeItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个控件模板，用于站点导航路径的根节点。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" /> 对象，它实现 <see cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" /> 方法，以呈现导航路径根节点的自定义内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>到<xref:System.Web.UI.ITemplate>对象，用于<xref:System.Web.UI.WebControls.Image>控件或其他控件，如<xref:System.Web.UI.WebControls.Label>作为根节点而不是字符串的用户界面元素。  
  
 如果<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>属性设置，则将重写模板，显示的根导航节点文本和任何<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>应用于它。 模板还将重写<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>和<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>如果根页是当前显示的页的属性。  
  
 你可以以声明方式设置<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>属性设置为任何 Web 服务器控件中，和 ASP.NET 基础结构执行必要的步骤来包装为该 Web 服务器控件<xref:System.Web.UI.ITemplate>。 但是，Web 服务器控件不实现<xref:System.Web.UI.ITemplate>接口; 因此，当你处理的<xref:System.Web.UI.ITemplate>属性以编程方式，你必须编写<xref:System.Web.UI.ITemplate>包装器的任何模板代码。 然后，<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>属性设置为实例<xref:System.Web.UI.ITemplate>包装器。  
  
   
  
## Examples  
 下面的代码示例演示如何以编程方式定义一个类以实现<xref:System.Web.UI.ITemplate>接口以包装<xref:System.Web.UI.WebControls.Image>控件。 然后，<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>属性设置为类的实例。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_3/CS/aboutus2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_3/VB/aboutus2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.NodeTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存对 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件的视图状态所做的更改。</summary>
        <returns>返回服务器控件的当前视图状态。 如果没有与该控件关联的视图状态，则此方法返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视图状态是服务器控件的属性的值的累计。 这些值会自动放置在服务器控件的<xref:System.Web.UI.Control.ViewState%2A>属性，它是实例的<xref:System.Web.UI.StateBag>类。 保存状态的服务器控件生命周期阶段后，此属性的值随后会保存到一个字符串对象。  
  
 视图状态保存时，此字符串对象返回到客户端为存储在一个变量`Hidden`HTML 元素。 在创作自定义服务器控件时，你可以通过重写此方法并修改你的服务器控件的提高效率<xref:System.Web.UI.Control.ViewState%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="ShowToolTips">
      <MemberSignature Language="C#" Value="public virtual bool ShowToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.ShowToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件是否为超链接导航节点编写附加超链接特性。 根据客户端支持，在将鼠标悬停在设置了附加特性的超链接上时，将显示相应的工具提示。</summary>
        <value>
          如果应为超链接导航节点编写替换文字，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最常见情况的情形是`Title`HTML 特性存在 HTML`A Href`超链接。 例如，4.0 及更高版本的 Microsoft Internet Explorer 和 Netscape 6.0 和更高版本实现`Title`为悬停的工具提示，同时 Opera 3.0 和更高版本实现的属性`Title`属性为工具提示和 Opera 的工具栏区域中的标题. 并非所有客户端为其他的超链接属性显示工具提示。  
  
 此属性的值存储在视图状态。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式设置<xref:System.Web.UI.WebControls.SiteMapPath.ShowToolTips%2A>属性`false`Web 窗体页中。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_4/CS/catalog3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_4/VB/catalog3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SiteMapProvider">
      <MemberSignature Language="C#" Value="public virtual string SiteMapProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SiteMapProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SiteMapProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SiteMapProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于呈现站点导航控件的 <see cref="T:System.Web.SiteMapProvider" /> 的名称。</summary>
        <value>
          <see cref="T:System.Web.SiteMapProvider" /> 的名称，它定义要显示的 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 的导航结构。 所有可用提供程序都包含在 <see cref="P:System.Web.SiteMap.Providers" /> 集合中，都可使用 <see cref="P:System.Web.SiteMapProviderCollection.Item(System.String)" /> 属性按名称进行枚举和检索。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SiteMapPath>控件使用<xref:System.Web.SiteMapProvider>作为其呈现站点地图数据源。 如果<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>未设置属性，<xref:System.Web.UI.WebControls.SiteMapPath>控件使用由标识提供程序<xref:System.Web.SiteMap.Provider%2A?displayProperty=nameWithType>属性，它是默认值<xref:System.Web.SiteMapProvider>通常为站点配置层次结构中定义<xref:System.Web.XmlSiteMapProvider>。 设置<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>属性将指示<xref:System.Web.UI.WebControls.SiteMapPath>控件呈现为提供程序定义的站点地图数据。  
  
 <xref:System.Web.UI.WebControls.SiteMapPath>控件的工作方式直接与<xref:System.Web.SiteMapProvider>及其<xref:System.Web.SiteMapNode>要显示站点映射信息的对象。 其他控件，如<xref:System.Web.UI.WebControls.Menu>和<xref:System.Web.UI.WebControls.TreeView>，需要提供的数据抽象<xref:System.Web.UI.WebControls.SiteMapDataSource>类中，以显示相同的站点导航信息。  
  
 此属性的值存储在视图状态。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public virtual string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，用于呈现替换文字，以让屏幕读取器跳过控件内容。</summary>
        <value>一个字符串，<see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件使用不可见图像将其呈现为替换文字，作为对屏幕读取器的提示。 默认值为“跳过导航链接”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SiteMapPath.SkipLinkText%2A> 是一个属性，可设置为使网页更多或更少的屏幕阅读器的用户可访问。 包含在多个页，如显示站点地图数据的控件重复的内容的网站可以提供一种机制，允许用户的屏幕读取器，以便不读出跳过重复的内容。  
  
 <xref:System.Web.UI.WebControls.SiteMapPath>控件提供<xref:System.Web.UI.WebControls.SiteMapPath.SkipLinkText%2A>屏幕读取器可以跳过整个控件的方法的属性。  如果<xref:System.Web.UI.WebControls.SiteMapPath.SkipLinkText%2A>属性设置，则呈现不可见的图像的替换文字，向用户提供的选项以跳转到内容的末尾。 屏幕读取器读取的替换文字，但映像不会干扰页的可视化流。 默认情况下，这使得屏幕阅读器跳过该控件情况下，该属性设置为"跳过导航链接"。 如果你想要禁用此行为，将属性设置为<xref:System.String.Empty?displayProperty=nameWithType>。  
  
 此属性的值存储在视图状态。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>跟踪对 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件的视图状态所做的更改。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.SaveViewState" />
      </Docs>
    </Member>
  </Members>
</Type>