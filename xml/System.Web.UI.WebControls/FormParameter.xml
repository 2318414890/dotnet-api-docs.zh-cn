<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="88237153ce4c8ace34a6d78f89772fef2d7b0878" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599441" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormParameter : System::Web::UI::WebControls::Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>将 HTTP 请求 <see cref="P:System.Web.HttpRequest.Form" /> 字段的值绑定到参数对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用<xref:System.Web.UI.WebControls.FormParameter>类中的窗体变量的值绑定<xref:System.Web.HttpRequest.Form%2A>到参数化的查询或命令中使用的参数的集合。 将数据绑定到参数的控件可能会引发异常，如果<xref:System.Web.UI.WebControls.FormParameter>指定但没有相应的窗体变量被传递。 如果没有相应的值与传递的窗体变量，它们还可能会显示任何数据。 设置<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>以避免这些情况下，在适当的位置。  
  
 <xref:System.Web.UI.WebControls.FormParameter>类提供<xref:System.Web.UI.WebControls.FormParameter.FormField%2A>属性，它标识要绑定到除从继承的窗体变量的名称<xref:System.Web.UI.WebControls.Parameter>类。  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>不会验证传递通过任何方式; 中的窗体元素的值它使用的原始值。 在大多数情况下，你可以验证的值<xref:System.Web.UI.WebControls.FormParameter>处理事件，如使用由数据源控件之前`Selecting`， `Updating`， `Inserting`，或`Deleting`由你使用的数据源控件公开的事件。 如果参数的值未通过验证测试，则可以通过设置取消数据操作<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性关联的<xref:System.ComponentModel.CancelEventArgs>类到`true`。  
  
   
  
## Examples  
 下面的代码示例演示如何将数据插入数据库使用<xref:System.Web.UI.WebControls.SqlDataSource>控件和一个简单的 ASP.NET Web 页。 数据表中的当前数据显示在<xref:System.Web.UI.WebControls.DropDownList>控件。 你可以通过输入中的值添加新记录<xref:System.Web.UI.WebControls.TextBox>控件，然后单击按钮。 单击该按钮，将指定的值插入到数据库，与<xref:System.Web.UI.WebControls.DropDownList>进行刷新。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 类的未命名新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.FormParameter>创建与对象<xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>构造函数初始化与所有其属性的默认值。 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>初始化为<xref:System.String.Empty?displayProperty=nameWithType>。 此外，<xref:System.Web.UI.WebControls.Parameter.Name%2A>属性初始化为<xref:System.String.Empty?displayProperty=nameWithType>、<xref:System.Web.UI.WebControls.Parameter.Type%2A>属性初始化为<xref:System.TypeCode.Object?displayProperty=nameWithType>、<xref:System.Web.UI.WebControls.Parameter.Direction%2A>属性初始化为<xref:System.Data.ParameterDirection.Input>，和<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>初始化属性为 null (`Nothing`在 Visual Basic 中)。  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>不会验证传递通过任何方式; 中的窗体元素的值它使用的原始值。 在大多数情况下，你可以验证的值<xref:System.Web.UI.WebControls.FormParameter>处理事件，如使用由数据源控件之前`Selecting`， `Updating`， `Inserting`，或`Deleting`由你使用的数据源控件公开的事件。 如果参数的值未通过验证测试，则可以通过设置取消数据操作<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性关联的<xref:System.ComponentModel.CancelEventArgs>类到`true`。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/CS/fp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/VB/fp1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.FormParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As FormParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormParameter(System::Web::UI::WebControls::FormParameter ^ original);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <param name="original">一个 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 实例，将从该实例初始化当前实例。</param>
        <summary>使用 <paramref name="original" /> 参数指定的实例的值初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>构造函数是`protected`复制构造函数用于克隆<xref:System.Web.UI.WebControls.FormParameter>实例。 值<xref:System.Web.UI.WebControls.FormParameter>，包括<xref:System.Web.UI.WebControls.FormParameter.FormField%2A>， <xref:System.Web.UI.WebControls.Parameter.Name%2A>，和<xref:System.Web.UI.WebControls.Parameter.Type%2A>传输到的新实例。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::String ^ formField);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="formField">将参数对象绑定到的窗体变量的名称。 默认值为 <see cref="F:System.String.Empty" />。</param>
        <summary>使用指定字符串标识要绑定到的窗体变量字段，初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 类的一个新的已命名的实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.FormParameter>创建与对象<xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>构造函数初始化与指定的参数名称和标识参数绑定到窗体变量的字符串。 <xref:System.Web.UI.WebControls.Parameter.Type%2A>和<xref:System.Web.UI.WebControls.Parameter.Direction%2A>使用默认值初始化属性。  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>不会验证传递通过任何方式; 中的窗体元素的值它使用的原始值。 在大多数情况下，你可以验证的值<xref:System.Web.UI.WebControls.FormParameter>处理事件，如使用由数据源控件之前`Selecting`， `Updating`， `Inserting`，或`Deleting`由你使用的数据源控件公开的事件。 如果参数的值未通过验证测试，则可以通过设置取消数据操作<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性关联的<xref:System.ComponentModel.CancelEventArgs>类到`true`。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, System.Data.DbType dbType, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ formField);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="dbType">参数的数据库类型。</param>
        <param name="formField">将参数对象绑定到的窗体变量的名称。</param>
        <summary>通过使用指定的字符串标识要绑定到的窗体变量字段，初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, TypeCode type, System::String ^ formField);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="type">该参数所表示的类型。 默认值为 <see cref="F:System.TypeCode.Object" />。</param>
        <param name="formField">将参数对象绑定到的窗体变量的名称。 默认值为 <see cref="F:System.String.Empty" />。</param>
        <summary>使用指定字符串标识要绑定到的窗体变量，初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 类的一个新的已命名的强类型实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.FormParameter>创建与对象<xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>构造函数初始化与指定的参数名称， <xref:System.Web.UI.WebControls.Parameter.Type%2A>，和标识参数绑定到窗体变量的字符串。 仅<xref:System.Web.UI.WebControls.Parameter.Direction%2A>和<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A>使用默认值初始化属性。  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>不会验证传递通过任何方式; 中的窗体元素的值它使用的原始值。 在大多数情况下，你可以验证的值<xref:System.Web.UI.WebControls.FormParameter>处理事件，如使用由数据源控件之前`Selecting`， `Updating`， `Inserting`，或`Deleting`由你使用的数据源控件公开的事件。 如果参数的值未通过验证测试，则可以通过设置取消数据操作<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性关联的<xref:System.ComponentModel.CancelEventArgs>类到`true`。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/CS/fp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/VB/fp3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 实例的副本。</summary>
        <returns>与当前实例完全相同的 <see cref="T:System.Web.UI.WebControls.FormParameter" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.Clone%2A>方法调用<xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>复制构造函数以初始化的新实例<xref:System.Web.UI.WebControls.FormParameter>类的当前实例的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">请求的当前 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="control">与使用 <see cref="T:System.Web.UI.Control" /> 的页面关联的 <see cref="T:System.Web.UI.WebControls.FormParameter" />。</param>
        <summary>更新并返回 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 对象的值。</summary>
        <returns>一个对象，表示参数的更新值和当前值。 如果上下文或请求为空（在 Visual Basic 中为 <see langword="Nothing" />），<see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> 方法将返回 NULL。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter>尝试绑定到窗体变量每次<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>调用方法。  
  
 `context`参数由<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>方法以从请求中检索指定的窗体字段的值。 `control`参数将被忽略。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberSignature Language="VB.NET" Value="Public Property FormField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置参数绑定到的窗体变量的名称。</summary>
        <value>标识作为参数绑定目标的窗体变量的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>标识传入的名称/值对<xref:System.Web.HttpRequest.Form%2A>集合。 虽然<xref:System.Web.UI.WebControls.FormParameter.FormField%2A>属性标识的名称对，<xref:System.Web.UI.WebControls.FormParameter>在运行时绑定到其对应的值。 如果预期的窗体变量的字符串名称/值对未传递给在集合中，ASP.NET 网页<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>方法将参数绑定到的值<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>属性，如果将其设置。 如果<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>未设置，<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>方法无法将参数绑定到一个值。  
  
   
  
## Examples  
 下面的代码示例演示如何显示使用的筛选的数据<xref:System.Web.UI.WebControls.ObjectDataSource>控件和<xref:System.Web.UI.WebControls.FormParameter>从中间层业务对象检索数据和<xref:System.Web.UI.WebControls.GridView>控件来显示结果。  
  
 该代码示例包含的<xref:System.Web.UI.WebControls.TextBox>、<xref:System.Web.UI.WebControls.GridView>控件，<xref:System.Web.UI.WebControls.ObjectDataSource>控件和一个提交按钮。 默认情况下，<xref:System.Web.UI.WebControls.TextBox>之一的 Northwind Traders 员工名称填充。 <xref:System.Web.UI.WebControls.GridView>显示有关由中的名称标识该员工的信息<xref:System.Web.UI.WebControls.TextBox>。 若要检索有关其他雇员的数据，请输入中的员工的完整名称<xref:System.Web.UI.WebControls.TextBox>，然后单击按钮。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>属性指定用来筛选检索的数据的表达式<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>。 此属性使用其计算结果等于中包含的参数的参数占位符<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合。 在此示例中，参数占位符是<xref:System.Web.UI.WebControls.FormParameter>绑定到的值<xref:System.Web.UI.WebControls.TextBox>控件。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 下面的代码示例显示了前面的代码示例使用的中间层业务对象。 本示例由两个基本类组成：`EmployeeLogic`类封装业务逻辑和`NorthwindEmployee`类是一个包含仅加载和保持数据层中的数据所需的基本功能的模型类。 为简单起见，`EmployeeLogic`类创建一组静态的数据，而不是从数据层检索数据。 也很有帮助的此示例中，因为示例依赖于用户提供的 Northwind Traders 员工演示筛选的完整名称。 有关完整的工作示例，必须编译，并使用提供的 ASP.NET 代码示例使用这些类。  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>不会验证传递通过任何方式; 中的窗体元素的值它使用的原始值。 在大多数情况下，你可以验证的值<xref:System.Web.UI.WebControls.FormParameter>处理事件，如使用由数据源控件之前`Selecting`， `Updating`， `Inserting`，或`Deleting`由你使用的数据源控件公开的事件。 如果参数的值未通过验证测试，则可以通过设置取消数据操作<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性关联的<xref:System.ComponentModel.CancelEventArgs>类到`true`。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示是否验证参数中的客户端输入的值。</summary>
        <value>
          如果验证客户输入，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>