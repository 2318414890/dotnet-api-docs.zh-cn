<Type Name="ObjectDataSourceEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="300e38402f541d811d68d28bc74738a9649743f8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36580011" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" /> 控件的 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" /> 和 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>中使用类<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>方法以提供对业务对象实例之前使用的任何数据操作访问<xref:System.Web.UI.WebControls.ObjectDataSource>控件和业务对象执行。 业务对象设置和使用访问<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>属性。 通过添加要处理的事件处理程序委托<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>事件，你可以自定义代码而不是在创建业务对象的实例<xref:System.Web.UI.WebControls.ObjectDataSource>执行实例化。 这很有用时所需的业务对象，或要调用的非默认构造函数来创建实例; 的非默认实例<xref:System.Web.UI.WebControls.ObjectDataSource>始终调用默认构造函数来创建适用于的业务对象的实例。 你还可以添加要处理的事件处理程序委托<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>事件，使您可以公开访问任何公开的业务对象的成员，以执行任何附加初始化或工作。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>方法不调用的<xref:System.Web.UI.WebControls.ObjectDataSource>控件，但前提是执行数据操作的业务对象方法`static`。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource>控件可公开可以处理在其生命周期的各个时间用于基础业务对象的多个事件。 下表列出了事件以及关联<xref:System.EventArgs>类和事件处理程序委托。  
  
|事件|EventArgs|事件处理程序|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>。<br /><br /> 创建业务对象的实例之前立即发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>。<br /><br /> 创建业务对象的实例后立即发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>。<br /><br /> 检索的数据之前发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>、<xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 和 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>。<br /><br /> 执行插入、 更新或删除操作之前发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>。<br /><br /> 检索的数据后发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> 完成插入、 更新或删除操作后执行。|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>。<br /><br /> 在业务对象被销毁前发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.GridView>控件检索和显示信息。 第二个代码示例提供第一个代码示例使用的示例基本业务对象。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.GridView>控件检索和显示信息。 在此示例中，如下所示许多实际方案中，可能无法也不需要使用具有的业务对象的默认实例<xref:System.Web.UI.WebControls.ObjectDataSource>控件。 在此示例中，<xref:System.Web.UI.WebControls.ObjectDataSource>无法成功调用默认构造函数，因为它将引发异常。 在某些情况下，可能会受保护的默认构造函数并在其他它可能不会初始化为所需状态的业务对象。 无论什么原因，你可以自己创建的业务对象的实例并将实例设置为<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>对象传递给处理程序。 这是业务对象实例<xref:System.Web.UI.WebControls.ObjectDataSource>将用于执行其工作。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/objds15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/objds15vb.aspx#1)]  
  
 下面的代码示例演示前面的代码示例使用的示例基本业务对象。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/northwindemployee15.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/northwindemployee15.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceEventArgs (object objectInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object objectInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (objectInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceEventArgs(System::Object ^ objectInstance);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceEventArgs : obj -&gt; System.Web.UI.WebControls.ObjectDataSourceEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceEventArgs objectInstance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="objectInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectInstance">一个业务对象，<see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 与其进行交互，以执行数据操作。</param>
        <summary>使用指定的对象初始化 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectInstance { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectInstance : obj with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置表示一个业务对象的对象，<see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 控件使用该业务对象执行数据操作。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 用来执行数据操作的业务对象；如果将 <see langword="null" /> 传递给 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.GridView>控件检索和显示信息。 第二个代码示例提供第一个代码示例使用的示例基本业务对象。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.GridView>控件检索和显示信息。 在此示例中，如下所示许多实际方案中，可能无法也不需要使用具有的业务对象的默认实例<xref:System.Web.UI.WebControls.ObjectDataSource>控件。 在此示例中，<xref:System.Web.UI.WebControls.ObjectDataSource>无法成功调用默认构造函数，因为它将引发异常。 在某些情况下，可能会受保护的默认构造函数并在其他它可能不会初始化为所需状态的业务对象。 无论什么原因，你可以自己创建的业务对象的实例并将实例设置为<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>对象传递给处理程序。 这是业务对象实例<xref:System.Web.UI.WebControls.ObjectDataSource>将用于执行其工作。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/objds15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/objds15vb.aspx#1)]  
  
 下面的代码示例演示前面的代码示例使用的示例基本业务对象。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/northwindemployee15.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/northwindemployee15.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      </Docs>
    </Member>
  </Members>
</Type>