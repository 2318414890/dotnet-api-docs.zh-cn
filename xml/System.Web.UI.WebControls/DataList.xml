<Type Name="DataList" FullName="System.Web.UI.WebControls.DataList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b116d8116ba258dcd86984d872680f1c4b3a5f6" />
    <Meta Name="ms.sourcegitcommit" Value="e7865e39826e7aaf54da4c7042975153813a31c7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/16/2018" />
    <Meta Name="ms.locfileid" Value="31043821" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataList : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataList extends System.Web.UI.WebControls.BaseDataList implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataList" />
  <TypeSignature Language="VB.NET" Value="Public Class DataList&#xA;Inherits BaseDataList&#xA;Implements INamingContainer, IRepeatInfoUser" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataList : System::Web::UI::WebControls::BaseDataList, System::Web::UI::INamingContainer, System::Web::UI::WebControls::IRepeatInfoUser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IRepeatInfoUser</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>数据绑定列表控件，用于可显示使用模板的项。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主题内容：  
  
-   [介绍](#introduction)  
  
-   [模板](#templates)  
  
-   [自定义 DataList 控件的外观](#customizing_the_appearance_of_the_datalist_control)  
  
-   [显示方向和布局](#display_direction_and_layout)  
  
-   [安全性](#security)  
  
-   [声明性语法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>介绍  
 使用<xref:System.Web.UI.WebControls.DataList>控件来显示模板定义的数据绑定列表。 <xref:System.Web.UI.WebControls.DataList>控件支持选择和编辑。  
  
<a name="templates"></a>   
## <a name="templates"></a>模板  
 内容<xref:System.Web.UI.WebControls.DataList>控件可以通过使用模板进行操作。 下表列出了支持的模板。  
  
|模板名称|描述|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>|如果定义，提供的内容和布局中的交替项<xref:System.Web.UI.WebControls.DataList>。 如果未定义，`ItemTemplate`使用。|  
|<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>|如果定义，内容和布局为项提供当前正在编辑中<xref:System.Web.UI.WebControls.DataList>。 如果未定义，`ItemTemplate`使用。|  
|<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>|如果定义，提供的内容和布局页脚部分的<xref:System.Web.UI.WebControls.DataList>。 如果未定义，则不会显示页脚部分。|  
|<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>|如果定义，提供的内容和布局标头部分的<xref:System.Web.UI.WebControls.DataList>。 如果未定义，则不会显示的表头部分。|  
|<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>|中的项提供的内容和布局的所需的模板<xref:System.Web.UI.WebControls.DataList>。|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>|如果定义，提供的内容和布局中的当前选定项<xref:System.Web.UI.WebControls.DataList>。 如果未定义，<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>使用。|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>|如果定义，提供的内容和布局中项之间的分隔符<xref:System.Web.UI.WebControls.DataList>。 如果未定义，则不会显示分隔符。|  
  
 至少，<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>需要定义以显示中的项<xref:System.Web.UI.WebControls.DataList>控件。 可以使用其他模板来提供自定义信息，请参阅<xref:System.Web.UI.WebControls.DataList>控件。  
  
<a name="customizing_the_appearance_of_the_datalist_control"></a>   
## <a name="customizing-the-appearance-of-the-datalist-control"></a>自定义 DataList 控件的外观  
 外观<xref:System.Web.UI.WebControls.DataList>可以通过设置控件的不同部分的样式属性自定义控件。 下表列出不同的样式属性。  
  
|样式属性|描述|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|指定的样式中的交替项<xref:System.Web.UI.WebControls.DataList>控件。|  
|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|指定在所编辑的项的样式<xref:System.Web.UI.WebControls.DataList>控件。|  
|<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>|指定在页脚的样式<xref:System.Web.UI.WebControls.DataList>控件。|  
|<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>|指定的标头中的样式<xref:System.Web.UI.WebControls.DataList>控件。|  
|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|指定为中的项的样式<xref:System.Web.UI.WebControls.DataList>控件。|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|指定中的选定项的样式<xref:System.Web.UI.WebControls.DataList>控件。|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>|指定的样式中的项之间的分隔符<xref:System.Web.UI.WebControls.DataList>控件。|  
  
 你还可以显示或隐藏的控件的不同部分。 下表列出用于控制哪些部分是显示还是隐藏的属性。  
  
|Property|描述|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>|显示或隐藏的页脚部分<xref:System.Web.UI.WebControls.DataList>控件。|  
|<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>|显示或隐藏的标头部分<xref:System.Web.UI.WebControls.DataList>控件。|  
  
<a name="display_direction_and_layout"></a>   
## <a name="display-direction-and-layout"></a>显示方向和布局  
 显示方向<xref:System.Web.UI.WebControls.DataList>控件均可以是垂直或水平。 设置<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>属性指定的显示方向。  
  
 布局<xref:System.Web.UI.WebControls.DataList>控制与<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>属性。 此属性设置为`RepeatLayout.Table`将显示<xref:System.Web.UI.WebControls.DataList>以表格格式，而`RepeatLayout.Flow`显示<xref:System.Web.UI.WebControls.DataList>没有表结构。  
  
<a name="security"></a>   
## <a name="security"></a>安全性  
 `DataList`控件可以包含使用户能够输入信息的控件。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。  
  
 有关安全性的详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[验证用户输入中的 ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>声明性语法  
  
```  
<asp:DataList  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyField="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditItemIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExtractTemplateRows="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnCancelCommand="CancelCommand event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleteCommand="DeleteCommand event handler"  
    OnDisposed="Disposed event handler"  
    OnEditCommand="EditCommand event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnUnload="Unload event handler"  
    OnUpdateCommand="UpdateCommand event handler"  
    RepeatColumns="integer"  
    RepeatDirection="Horizontal|Vertical"  
    RepeatLayout="Table|Flow"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingItemStyle />  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <EditItemStyle />  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <ItemStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <SelectedItemStyle />  
        <SelectedItemTemplate>  
            <!-- child controls -->  
        </SelectedItemTemplate>  
        <SeparatorStyle />  
        <SeparatorTemplate>  
            <!-- child controls -->  
        </SeparatorTemplate>  
</asp:DataList>  
```  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList>控件来显示数据源中的项的列表。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataList/CS/datalistcs.aspx#1)]
 [!code-aspx-vb[DataList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataList/VB/datalistvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseDataList" />
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.DataList" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数来创建和初始化的新实例<xref:System.Web.UI.WebControls.DataList>类。  
  
   
  
## Examples  
 下面的代码示例演示如何创建和初始化的新实例<xref:System.Web.UI.WebControls.DataList>类。  
  
 [!code-csharp[Classic DataList.DataList Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.DataList Example/CS/source.cs#1)]
 [!code-vb[Classic DataList.DataList Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.DataList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlternatingItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ AlternatingItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中交替项的样式属性。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象，该对象表示 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中交替项的样式属性。 默认值是一个空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>中的属性，以提供自定义样式的交替项<xref:System.Web.UI.WebControls.DataList>控件。 常见样式属性，可调整包括前景颜色、 背景色、 字体和单元格内的内容对齐方式。 提供不同的样式增强的外观<xref:System.Web.UI.WebControls.DataList>控件。  
  
 项中的样式属性<xref:System.Web.UI.WebControls.DataList>控件从一个项样式属性继承到另一个层次结构。 由层次结构中较高的项的样式属性继承层次结构中设置得较低的项的样式属性。 例如，如果你指定的红色字体<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性、 中的所有其他项样式属性<xref:System.Web.UI.WebControls.DataList>控件还具有红色字体。 这使您可以通过设置单个项的样式属性提供通用控件外观。 你可以重写继承的样式设置是通过设置其样式属性的层次结构中较高级别的项样式属性的。 例如，可以指定为蓝色字体<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>属性，重写中指定的红色字体<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性。 下表列出了从最高到最低的层次结构顺序。  
  
|优先级|样式属性|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 若要指定的交替项的自定义样式，将放置`<AlternatingItemStyle>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。 然后可以列出内打开的样式特性`<AlternatingItemStyle>`标记。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>属性来指定不同的背景色中的交替项<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DataList" /> 中交替项的模板。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" /> 对象，该对象包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中交替项的模板。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>属性来控制中交替项的内容<xref:System.Web.UI.WebControls.DataList>控件。 由控制交替项的外观<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>属性。  
  
 若要指定个交替项的模板，将放置`<AlternatingItemTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。 然后可以列出在开始和结束之间模板的内容`<AlternatingItemTemplate>`标记。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>属性来控制中交替项的内容<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListAlternatingItemTemplate/CS/datalistaltitemtemplatecs.aspx#1)]
 [!code-aspx-vb[DataListAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListAlternatingItemTemplate/VB/datalistaltitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.CancelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ CancelCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>对 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中的某项单击 <see langword="Cancel" /> 按钮时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CancelCommand>引发事件时`Cancel`中的项单击按钮<xref:System.Web.UI.WebControls.DataList>控件。  
  
 典型处理程序<xref:System.Web.UI.WebControls.DataList.CancelCommand>事件集<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>属性`-1`（以取消选择项），然后将重新绑定数据到<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!CAUTION]
>  文本不是 HTML 编码之前它将显示在<xref:System.Web.UI.WebControls.DataList>控件。 这使得可能要在文本中嵌入在 HTML 标记中的脚本。 如果该控件的值是来自用户输入，请务必验证这些值以减少安全漏洞。  
  
 有关处理事件的详细信息，请参阅[如何： 在 Web 窗体应用程序中使用事件](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.WebControls.DataList.CancelCommand>事件。 取消对中的项所做的任何编辑<xref:System.Web.UI.WebControls.DataList>控制`Cancel`单击按钮。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public const string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const CancelCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ CancelCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示 <see langword="Cancel" /> 命令名。 此字段为只读。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.CancelCommandName>字段来表示`Cancel`命令名称。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateControlHierarchy(bool useDataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">
          为 <see langword="true" /> 时，使用控件的数据源；为 <see langword="false" /> 时，表示正在根据视图状态重新创建控件，该控件不应进行数据绑定。</param>
        <summary>使用（或不使用）指定数据源创建用于呈现数据列表控件的控件层次结构。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>主要由控件开发人员使用方法，派生的自定义实现从时<xref:System.Web.UI.WebControls.DataList>控件。  
  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>方法使用<xref:System.Web.UI.WebControls.DataList.CreateItem%2A>和<xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>方法来创建<xref:System.Web.UI.WebControls.DataListItem>表示标头、 页脚、 分隔符，和数据列表中包含的数据绑定项的控件。 你可以访问通过数据列表的数据绑定项<xref:System.Web.UI.WebControls.DataList.Items%2A>集合。 你可以访问所有项类型，包括页眉、 页脚和分隔符项，通过<xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>集合。  
  
 重写<xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>方法以自定义如何<xref:System.Web.UI.WebControls.DataListItem>创建或添加到控件<xref:System.Web.UI.WebControls.DataList>控件。 重写<xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>方法以自定义模板<xref:System.Web.UI.WebControls.DataListItem>控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建由 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件在内部用来实现所有与样式有关的属性的默认样式对象。</summary>
        <returns>包含控件的默认样式属性的 <see cref="T:System.Web.UI.WebControls.TableStyle" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A>方法主要由控件开发人员在派生的自定义实现从<xref:System.Web.UI.WebControls.DataList>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A>方法中的自定义的服务器控件，以便它始终显示水平网格行中没有单元格间距<xref:System.Web.UI.WebControls.DataList>控件。  
  
 [!code-aspx-csharp[CustomDataListCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomDataListCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomDataListCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstyle.cs#2)]
[!code-vb[CustomDataListCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DataListItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataListItem CreateItem(int32 itemIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemIndex As Integer, itemType As ListItemType) As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::DataListItem ^ CreateItem(int itemIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex">
          <see cref="T:System.Web.UI.WebControls.DataList" /> 中放置所创建项的指定位置。</param>
        <param name="itemType">一个 <see cref="T:System.Web.UI.WebControls.ListItemType" />，表示要创建指定类型的项。</param>
        <summary>创建一个 <see cref="T:System.Web.UI.WebControls.DataListItem" /> 对象。</summary>
        <returns>所创建的指定列表项类型的新 <see cref="T:System.Web.UI.WebControls.DataListItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CreateItem%2A>方法主要由控件开发人员在创建的自定义实现<xref:System.Web.UI.WebControls.DataList>控件。 <xref:System.Web.UI.WebControls.DataList.CreateItem%2A>方法在功能上等效于调用<xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A>构造函数<xref:System.Web.UI.WebControls.DataListItem>。 <xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A>和<xref:System.Web.UI.WebControls.DataListItem.ItemType%2A>属性将被初始化的新<xref:System.Web.UI.WebControls.DataListItem>使用指定的值，但该项未插入到<xref:System.Web.UI.WebControls.DataList>。  
  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>方法使用<xref:System.Web.UI.WebControls.DataList.CreateItem%2A>和<xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>方法来创建<xref:System.Web.UI.WebControls.DataListItem>表示标头、 页脚、 分隔符，和数据列表中包含的数据绑定项的控件。 你可以访问通过数据列表的数据绑定项<xref:System.Web.UI.WebControls.DataList.Items%2A>集合。 你可以访问所有项类型，包括页眉、 页脚和分隔符项，通过<xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>集合。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>重写此方法以创建你自己派生<see cref="T:System.Web.UI.WebControls.DataListItem" />类型，或设置其他成员属性时<see cref="T:System.Web.UI.WebControls.DataListItem" />创建。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DeleteCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ DeleteCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>对 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中的某项单击 <see langword="Delete" /> 按钮时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.DeleteCommand>引发事件时`Delete`中的项单击按钮<xref:System.Web.UI.WebControls.DataList>控件。  
  
 典型处理程序<xref:System.Web.UI.WebControls.DataList.DeleteCommand>事件从数据源中删除选定的项，然后将重新绑定到数据<xref:System.Web.UI.WebControls.DataList>控件。  
  
 有关处理事件的详细信息，请参阅[如何： 在 Web 窗体应用程序中使用事件](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.WebControls.DataList.DeleteCommand>事件。 它将删除中的选定的项<xref:System.Web.UI.WebControls.DataList>控制`Delete`单击按钮。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandName">
      <MemberSignature Language="C#" Value="public const string DeleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const DeleteCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DeleteCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示 <see langword="Delete" /> 命令名。 此字段为只读。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.DeleteCommandName>字段来表示`Delete`命令名称。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler EditCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler EditCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.EditCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ EditCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>对 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中的某项单击 <see langword="Edit" /> 按钮时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.EditCommand>引发事件时`Edit`中的项单击按钮<xref:System.Web.UI.WebControls.DataList>控件。  
  
 典型处理程序<xref:System.Web.UI.WebControls.DataList.EditCommand>事件集<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>于所选行的属性，然后将重新绑定数据到<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!CAUTION]
>  文本不是 HTML 编码之前它将显示在<xref:System.Web.UI.WebControls.DataList>控件。 这使得可能要在文本中嵌入在 HTML 标记中的脚本。 如果该控件的值是来自用户输入，请务必验证这些值以减少安全漏洞。  
  
 有关处理事件的详细信息，请参阅[如何： 在 Web 窗体应用程序中使用事件](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.WebControls.DataList.EditCommand>事件。 它允许你编辑中的选定的项<xref:System.Web.UI.WebControls.DataList>控制`Edit`单击按钮。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="EditCommandName">
      <MemberSignature Language="C#" Value="public const string EditCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EditCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const EditCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EditCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示 <see langword="Edit" /> 命令名。 此字段为只读。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.EditCommandName>字段来表示`Edit`命令名称。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditItemIndex">
      <MemberSignature Language="C#" Value="public virtual int EditItemIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditItemIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中要编辑的选定项的索引号。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中要编辑的选定项的索引号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>属性以编程方式指定要编辑的项。 你还可以使用此属性来确定为编辑选定的项的索引。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>属性是从零开始。  
  
 若要取消选择某个项，请设置<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>属性`-1`。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>属性存储在控件状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>属性指定为编辑选定用户的项。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">选定值小于 <see langword="0" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ EditItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中为进行编辑而选定的项的样式属性。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象，包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中为进行编辑而选定的项的样式属性。 默认值是一个空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>属性以进行编辑在选定的项提供自定义样式<xref:System.Web.UI.WebControls.DataList>控件。 常见样式属性，可调整包括前景颜色、 背景色、 字体和单元格内的内容对齐方式。 提供不同的样式增强的外观<xref:System.Web.UI.WebControls.DataList>控件。  
  
 项中的样式属性<xref:System.Web.UI.WebControls.DataList>控件从一个项样式属性继承到另一个层次结构。 由层次结构中较高的项的样式属性继承层次结构中设置得较低的项的样式属性。 例如，如果你指定的红色字体<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性、 中的所有其他项样式属性<xref:System.Web.UI.WebControls.DataList>控件还具有红色字体。 这使您可以通过设置单个项的样式属性提供通用控件外观。 你可以重写继承的样式设置是通过设置其样式属性的层次结构中较高级别的项样式属性的。 例如，可以指定为蓝色字体<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>属性，重写中指定的红色字体<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性。 下表列出了从最高到最低的层次结构顺序。  
  
|优先级|样式属性|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 若要指定为编辑选定的项的自定义样式，将放置`<EditItemStyle>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。 然后可以列出内打开的样式特性`<EditItemStyle>`标记。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>属性来指定不同的外观以进行编辑选定用户的项。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中为进行编辑而选定的项的模板。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" /> 对象，该对象包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中为进行编辑而选定的项的模板。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>属性控制为在中编辑选定的项的内容<xref:System.Web.UI.WebControls.DataList>控件。 选择用于编辑由控制项的外观<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>属性。  
  
 若要指定用于选择要编辑的项目的模板，将放置`<EditItemTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。 然后可以列出在开始和结束之间模板的内容`<EditItemTemplate>`标记。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>属性来控制用户选择以进行编辑的项的内容。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractTemplateRows">
      <MemberSignature Language="C#" Value="public virtual bool ExtractTemplateRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractTemplateRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExtractTemplateRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ExtractTemplateRows { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.Table" /> 控件的行（在 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的每一模板中定义）是否被提取和显示。</summary>
        <value>
          如果 <see cref="T:System.Web.UI.WebControls.Table" /> 控件的行（在 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的各模板中定义）被提取和显示，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内容<xref:System.Web.UI.WebControls.DataList>使用模板来指定控件时。 通常情况下，你可以列出你想要在模板中显示的控件。 也可以放置<xref:System.Web.UI.WebControls.Table>控件模板中，并显示表的行。  
  
 使用<xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A>属性指定是否的行<xref:System.Web.UI.WebControls.Table>控件中的每个模板定义<xref:System.Web.UI.WebControls.DataList>控件被提取和显示。 从模板中提取的所有行<xref:System.Web.UI.WebControls.DataList>控件显示单个表中。 这使您可以从其他较小的表创建一个表并仍然维持的功能<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  当此属性设置为`true`，你必须提供一个格式良好<xref:System.Web.UI.WebControls.Table>想要包括在每个模板的控件<xref:System.Web.UI.WebControls.DataList>控件。 将显示仅表的行。 将忽略模板中的所有其他内容。 必须使用<xref:System.Web.UI.WebControls.Table>控制此功能正常工作。 <xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=nameWithType>控件不符合此属性。  
  
 当你创建的单元格<xref:System.Web.UI.WebControls.Table>控件在模板中，你可以使用<xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A>属性<xref:System.Web.UI.WebControls.TableCell>对象以控制的单元格所跨越的列数。 你还可以使用<xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>属性控制的单元格所跨越的行数。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>， <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>，和<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>属性不会影响的外观<xref:System.Web.UI.WebControls.DataList>控制当此属性设置为`true`。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A>属性来提取和显示的行<xref:System.Web.UI.WebControls.Table>的模板中定义的控件<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的脚注部分的样式属性。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象，该对象包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的脚注部分的样式属性。 默认值是一个空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性用于提供页脚部分的自定义样式<xref:System.Web.UI.WebControls.DataList>控件。 常见样式属性，可调整包括前景颜色、 背景色、 字体和单元格内的内容对齐方式。 提供不同的样式增强的外观<xref:System.Web.UI.WebControls.DataList>控件。  
  
 <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>属性<xref:System.Web.UI.WebControls.DataList>控件继承的样式设置<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>属性。 例如，如果你指定的红色字体<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>属性，<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>属性也将有红色字体。 这使您可以通过设置的单个样式属性提供通用控件外观。 可以通过设置重写继承的样式设置<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>属性。 例如，可以指定为蓝色字体<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>属性，重写中指定的红色字体<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>属性。  
  
 若要指定页脚部分的自定义样式，将放置`<FooterStyle>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。 然后可以列出内打开的样式特性`<FooterStyle>`标记。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>属性必须设置为`true`，此属性才可见。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>属性指定的页脚部分的自定义背景颜色<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的脚注部分的模板。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" /> 对象，该对象包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的脚注部分的模板。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>属性控制页脚部分的内容。 页脚部分的外观由控制<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>属性。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>属性必须设置为`true`，此属性才可见。  
  
 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>属性<xref:System.Web.UI.WebControls.DataList>控件继承的样式设置<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>属性。 例如，如果你指定的红色字体<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>属性，<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>属性也将有红色字体。 这使您可以通过设置的单个样式属性提供通用控件外观。 可以通过设置重写继承的样式设置<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>属性。 例如，可以指定为蓝色字体<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>属性，重写中指定的红色字体<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>属性。  
  
 若要指定页脚部分的模板，将放置`<FooterTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。 然后可以列出在开始和结束之间模板的内容`<FooterTemplate>`标记。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>属性控制的页脚部分的内容<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowFooter" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="T:System.Web.UI.WebControls.DataList" /> 属性设置为 <see langword="RepeatLayout.Table" /> 时，获取或设置 <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> 控件的网格线样式。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridLines" /> 枚举值之一。 默认值为 <see langword="None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.GridLines%2A>属性指定的网格行样式<xref:System.Web.UI.WebControls.DataList>控件。 下表列出可能的样式。  
  
|样式|描述|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridLines.None>|没有网格线。|  
|<xref:System.Web.UI.WebControls.GridLines.Horizontal>|显示水平网格线。|  
|<xref:System.Web.UI.WebControls.GridLines.Vertical>|显示垂直网格线。|  
|<xref:System.Web.UI.WebControls.GridLines.Both>|显示这两个水平和垂直网格线。|  
  
> [!NOTE]
>  此属性仅适用于时<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>属性设置为`RepeatLayout.Table`。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.GridLines%2A>属性显示的垂直和水平网格线的<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的标题部分的样式属性。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象，该对象包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的标题部分的样式属性。 默认值是一个空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性用于提供自定义样式的标题<xref:System.Web.UI.WebControls.DataList>控件。 常见样式属性，可调整包括前景颜色、 背景色、 字体和单元格内的内容对齐方式。 提供不同的样式增强的外观<xref:System.Web.UI.WebControls.DataList>控件。  
  
 若要指定标题部分的自定义样式，将放置`<HeaderStyle>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。 然后可以列出内打开的样式特性`<HeaderStyle>`标记。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>属性必须设置为`true`，此属性才可见。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>属性指定的标题部分的自定义背景颜色<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的标题部分的模板。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" />，它包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的标题部分的模板。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>属性控制的标题部分的内容。 标头部分的外观由控制<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>属性。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>属性必须设置为`true`，此属性才可见。  
  
 若要指定标题部分的模板，将放置`<HeaderTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。 然后可以列出在开始和结束之间模板的内容`<HeaderTemplate>`标记。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>属性控制的标题部分的内容<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.DataListItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.DataListItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As DataListItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::DataListItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataListItem" />
      </Parameters>
      <Docs>
        <param name="item">要初始化的 <see cref="T:System.Web.UI.WebControls.DataListItem" />。</param>
        <summary>根据列表项类型的指定模板和样式初始化 <see cref="T:System.Web.UI.WebControls.DataListItem" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.DataList>控件。  
  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>方法使用<xref:System.Web.UI.WebControls.DataList.CreateItem%2A>和<xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>方法来创建<xref:System.Web.UI.WebControls.DataListItem>表示标头、 页脚、 分隔符，和数据列表中包含的数据绑定项的控件。 你可以访问通过数据列表的数据绑定项<xref:System.Web.UI.WebControls.DataList.Items%2A>集合。 你可以访问所有项类型，包括页眉、 页脚和分隔符项，通过<xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>集合。  
  
 重写<xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>方法以自定义如何<xref:System.Web.UI.WebControls.DataListItem>创建或添加到控件<xref:System.Web.UI.WebControls.DataList>控件。 重写<xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>方法以自定义模板<xref:System.Web.UI.WebControls.DataListItem>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemType" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ ItemCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当单击 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中的任一按钮时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemCommand>在中单击任何按钮时引发事件<xref:System.Web.UI.WebControls.DataList>控件并通常用时必须具有自定义的按钮控件`CommandName`值。  
  
 有关处理事件的详细信息，请参阅[如何： 在 Web 窗体应用程序中使用事件](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.WebControls.DataList.ItemCommand>事件以选择中的一个项<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当在 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中创建项时在服务器上发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated>中的项时将引发事件<xref:System.Web.UI.WebControls.DataList>创建控件，在往返过程和时将数据绑定到控件。  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated>事件通常用于控制的内容和外观中某一行的<xref:System.Web.UI.WebControls.DataList>控件。  
  
 有关处理事件的详细信息，请参阅[如何： 在 Web 窗体应用程序中使用事件](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.WebControls.DataList.ItemCreated>事件中的项显示顺序<xref:System.Web.UI.WebControls.DataList>控件中创建。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemDataBound;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当项被数据绑定到 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemDataBound>项被绑定到的数据之后，将引发事件<xref:System.Web.UI.WebControls.DataList>控件。 此事件可为你提供访问的数据项，客户端上显示之前的最后机会。 将引发此事件后，数据项目不再可用。  
  
 有关处理事件的详细信息，请参阅[如何： 在 Web 窗体应用程序中使用事件](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.WebControls.DataList.ItemDataBound>事件中的项显示顺序<xref:System.Web.UI.WebControls.DataList>控件绑定到控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As DataListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItemCollection ^ Items { System::Web::UI::WebControls::DataListItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示控件内单独项的 <see cref="T:System.Web.UI.WebControls.DataListItem" /> 对象的集合。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.DataListItemCollection" />，它包含表示 <see cref="T:System.Web.UI.WebControls.DataListItem" /> 控件内单独项的 <see cref="T:System.Web.UI.WebControls.DataList" /> 对象的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.Items%2A>以编程方式控制中的项的集合<xref:System.Web.UI.WebControls.DataList>控件。 <xref:System.Web.UI.WebControls.DataList.Items%2A>集合不提供任何方法来添加或删除到集合的项。 但是，你可以通过提供的处理程序来控制项的内容<xref:System.Web.UI.WebControls.DataList.ItemCreated>事件。  
  
> [!NOTE]
>  只有绑定到数据源项包含在<xref:System.Web.UI.WebControls.DataList.Items%2A>集合。 集合中不包括页眉、 页脚和分隔符。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.Items%2A>集合以显示中的项<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[Classic DataList.Items Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.Items Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.Items Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.Items Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ ItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中项的样式属性。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象，该对象包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中项的样式属性。 默认值是一个空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性提供的项自定义样式<xref:System.Web.UI.WebControls.DataList>控件。 常见样式属性，可调整包括前景颜色、 背景色、 字体和单元格内的内容对齐方式。 提供不同的样式增强的外观<xref:System.Web.UI.WebControls.DataList>控件。  
  
 项中的样式属性<xref:System.Web.UI.WebControls.DataList>控件从一个项样式属性继承到另一个层次结构。 由层次结构中较高的项的样式属性继承层次结构中设置得较低的项的样式属性。 例如，如果你指定的红色字体<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性、 中的所有其他项样式属性<xref:System.Web.UI.WebControls.DataList>控件还具有红色字体。 这使您可以通过设置单个项的样式属性提供通用控件外观。 你可以重写继承的样式设置是通过设置其样式属性的层次结构中较高级别的项样式属性的。 例如，可以指定为蓝色字体<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>属性，重写中指定的红色字体<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性。 下表列出了从最高到最低的层次结构顺序。  
  
|优先级|样式属性|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 若要指定的项的自定义样式<xref:System.Web.UI.WebControls.DataList>控制，请将放`<ItemStyle>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。 然后可以列出内打开的样式特性`<ItemStyle>`标记。  
  
 你还可以使用<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>中的属性，以提供不同的外观的交替项<xref:System.Web.UI.WebControls.DataList>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性来指定不同的背景色为中的项<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.ItemTemplate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中项的模板。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" />，它包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中项的模板。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>属性控制中的项的内容<xref:System.Web.UI.WebControls.DataList>控件。 中的项的外观<xref:System.Web.UI.WebControls.DataList>控制通过<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性。  
  
 若要指定的项模板<xref:System.Web.UI.WebControls.DataList>控制，请将放`<ItemTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。 然后可以列出在开始和结束之间模板的内容`<ItemTemplate>`标记。  
  
 你可以选择使用<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>中的属性，以提供不同的外观的交替项<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>属性控制中的项的内容<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">一个表示 <see cref="T:System.Web.UI.WebControls.DataList" /> 的状态的对象。</param>
        <summary>加载以前保存的 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的视图状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要由.NET Framework 基础结构使用，但不可在代码中直接使用。  但是，控件开发人员可以重写此方法以指定自定义服务器控件还原其视图状态的方式。 有关详细信息，请参阅[ASP.NET 状态管理概述](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 <xref:System.Web.UI.WebControls.DataList.LoadViewState%2A>方法还原视图状态信息<xref:System.Web.UI.WebControls.DataList>控件从保存的一个页面请求<xref:System.Web.UI.WebControls.DataList.SaveViewState%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">事件源。</param>
        <param name="e">事件数据。</param>
        <summary>确定服务器控件的事件是否沿页的 UI 服务器控件层次结构向上传递。</summary>
        <returns>
          如果事件已被取消，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DataList.CancelCommand" /> 事件。 这使你可以为事件提供自定义处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A>方法以提供自定义处理程序<xref:System.Web.UI.WebControls.DataList.CancelCommand>事件。  
  
 <xref:System.Web.UI.WebControls.DataList.CancelCommand>引发事件时`Cancel`中的项单击按钮<xref:System.Web.UI.WebControls.DataList>控件。  
  
 典型处理程序<xref:System.Web.UI.WebControls.DataList.CancelCommand>事件集<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>属性`-1`（以取消选择项），然后将重新绑定数据到<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[如何： 在 Web 窗体应用程序中使用事件](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)。  
  
 <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.WebControls.DataList.CancelCommand>事件。 取消对中的项所做的任何编辑<xref:System.Web.UI.WebControls.DataList>控制`Cancel`单击按钮。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleteCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleteCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleteCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" /> 事件。 这使你可以为事件提供自定义处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A>方法以提供自定义处理程序<xref:System.Web.UI.WebControls.DataList.DeleteCommand>事件。  
  
 <xref:System.Web.UI.WebControls.DataList.DeleteCommand>引发事件时`Delete`中的项单击按钮<xref:System.Web.UI.WebControls.DataList>控件。  
  
 典型处理程序<xref:System.Web.UI.WebControls.DataList.DeleteCommand>事件从数据源中删除选定的项，然后将重新绑定到数据<xref:System.Web.UI.WebControls.DataList>控件。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[如何： 在 Web 窗体应用程序中使用事件](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)。  
  
 <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.WebControls.DataList.DeleteCommand>事件。 它将删除中的选定的项<xref:System.Web.UI.WebControls.DataList>控制`Delete`单击按钮。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEditCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEditCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DataList.EditCommand" /> 事件。 这使你可以为事件提供自定义处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A>方法以提供自定义处理程序<xref:System.Web.UI.WebControls.DataList.EditCommand>事件。  
  
 <xref:System.Web.UI.WebControls.DataList.EditCommand>引发事件时`Edit`中的项单击按钮<xref:System.Web.UI.WebControls.DataList>控件。  
  
 典型处理程序<xref:System.Web.UI.WebControls.DataList.EditCommand>事件集<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>于所选行的属性，然后将重新绑定数据到<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[如何： 在 Web 窗体应用程序中使用事件](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)。  
  
 <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.WebControls.DataList.EditCommand>事件。 它允许你编辑中的选定的项<xref:System.Web.UI.WebControls.DataList>控制`Edit`单击按钮。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>为 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.OnInit%2A>方法通知<xref:System.Web.UI.WebControls.DataList>控件来执行任何所需创建并设置实例的初始化步骤。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DataList.ItemCommand" /> 事件。 这使你可以为事件提供自定义处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A>方法以提供自定义处理程序<xref:System.Web.UI.WebControls.DataList.ItemCommand>事件。  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCommand>在中单击任何按钮时引发事件<xref:System.Web.UI.WebControls.DataList>控件并通常用时必须具有自定义的按钮控件`CommandName`值，如`Add`中<xref:System.Web.UI.WebControls.DataList>控件。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[如何： 在 Web 窗体应用程序中使用事件](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)。  
  
 <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.WebControls.DataList.ItemCommand>事件以选择中的一个项<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DataList.ItemCreated" /> 事件。 这使你可以为事件提供自定义处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A>方法以提供自定义处理程序<xref:System.Web.UI.WebControls.DataList.ItemCreated>事件。  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated>中的项时将引发事件<xref:System.Web.UI.WebControls.DataList>创建控件，在往返过程和时将数据绑定到控件。  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated>事件通常用于控制的内容和外观中某一行的<xref:System.Web.UI.WebControls.DataList>控件。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[如何： 在 Web 窗体应用程序中使用事件](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)。  
  
 <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.WebControls.DataList.ItemCreated>事件中的项显示顺序<xref:System.Web.UI.WebControls.DataList>控件中创建。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" /> 事件。 这使你可以为事件提供自定义处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A>方法以提供自定义处理程序<xref:System.Web.UI.WebControls.DataList.ItemDataBound>事件。  
  
 <xref:System.Web.UI.WebControls.DataList.ItemDataBound>项被绑定到的数据之后，将引发事件<xref:System.Web.UI.WebControls.DataList>控件。 此事件可为你提供访问的数据项，客户端上显示之前的最后机会。 将引发此事件后，数据项目不再可用。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[如何： 在 Web 窗体应用程序中使用事件](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)。  
  
 <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.WebControls.DataList.ItemDataBound>事件中的项显示顺序<xref:System.Web.UI.WebControls.DataList>控件绑定到控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" /> 事件。 这使你可以为事件提供自定义处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A>方法以提供自定义处理程序<xref:System.Web.UI.WebControls.DataList.UpdateCommand>事件。  
  
 <xref:System.Web.UI.WebControls.DataList.UpdateCommand>引发事件时`Update`按钮的单击某项。  
  
 典型处理程序<xref:System.Web.UI.WebControls.DataList.UpdateCommand>事件更新的数据，集<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>属性`-1`（以取消选择项），然后将重新绑定数据到<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[如何： 在 Web 窗体应用程序中使用事件](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)。  
  
 <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.WebControls.DataList.UpdateCommand>事件。 它允许你更新中的选定的项<xref:System.Web.UI.WebControls.DataList>使用用户输入的新值的控件时`Update`单击按钮。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal override void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PrepareControlHierarchy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>准备控件层次结构以便在 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中呈现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A>主要由控件开发人员使用方法，派生自定义控件从时<xref:System.Web.UI.WebControls.DataList>控件。  
  
 <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A>准备控件层次结构并设置样式，为包含<xref:System.Web.UI.WebControls.DataListItem>控制在呈现的子控件之前。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>重写<see cref="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" />方法以自定义控件中包含的样式<see cref="T:System.Web.UI.WebControls.DataList" />它们呈现之前。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>呈现 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中的列表项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.RenderContents%2A>派生从自定义控件时，方法使用主要由控件开发人员<xref:System.Web.UI.WebControls.DataList>控件。  
  
 <xref:System.Web.UI.WebControls.DataList.RenderContents%2A>方法呈现内容的内部<xref:System.Web.UI.WebControls.DataList>控件，包括所包含<xref:System.Web.UI.WebControls.DataListItem>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.DataList.RenderContents%2A>方法中的自定义的服务器控件，以便一些文本之前<xref:System.Web.UI.WebControls.DataList>对象。  
  
 [!code-aspx-csharp[CustomDataListRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomDataListRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontentsvb.aspx#1)]  
[!code-csharp[CustomDataListRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontents.cs#2)]
[!code-vb[CustomDataListRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatColumns">
      <MemberSignature Language="C#" Value="public virtual int RepeatColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RepeatColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatColumns As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RepeatColumns { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中显示的列数。</summary>
        <value>要在 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中显示的列数。 默认值为 <see langword="0" />，它指示 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中的项基于 <see cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" /> 属性的值按单行或单列显示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性指定的显示中的项的列数<xref:System.Web.UI.WebControls.DataList>控件。 例如，如果将此属性设置为`5`、<xref:System.Web.UI.WebControls.DataList>控件五个列中显示它的项。  
  
> [!NOTE]
>  如果此属性设置为`0`、<xref:System.Web.UI.WebControls.DataList>控件将显示在单个行或列中，基于值的项<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>属性。 如果<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>属性设置为`RepeatDirection.Horizontal`的项显示在单个行。 如果<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>属性设置为`RepeatDirection.Vertical`的项显示在单个列。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>属性来指定要在中显示的列数<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的列数是负值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="RepeatDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatDirection RepeatDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatDirection As RepeatDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatDirection RepeatDirection { System::Web::UI::WebControls::RepeatDirection get(); void set(System::Web::UI::WebControls::RepeatDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件是垂直显示还是水平显示。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.RepeatDirection" /> 值之一。 默认值为 <see langword="Vertical" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>属性指定的显示方向<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  显示的列数始终由<xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>属性。  
  
 如果此属性设置为`RepeatDirection.Vertical`，列表中的项是从上到下，加载的列中显示，然后从左到右，直到呈现出所有项。 例如，如果<xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>属性设置为`3`中的项<xref:System.Web.UI.WebControls.DataList>控件显示三个列，如下所示下表中。  
  
||||  
|-|-|-|  
|1|4|7|  
|2|5|8|  
|3|6|9|  
  
 如果此属性设置为`RepeatDirection.Horizontal`，列表中的项显示在从左到右加载的行中，自上而下，直到呈现出所有项。 例如，如果<xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>属性设置为`3`的项<xref:System.Web.UI.WebControls.DataList>控件中的三个项，每行显示下表中。  
  
||||  
|-|-|-|  
|1|2|3|  
|4|5|6|  
|7|8|9|  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>属性中指定的方向<xref:System.Web.UI.WebControls.DataList>显示控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的值不是 <see cref="T:System.Web.UI.WebControls.RepeatDirection" /> 值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="RepeatLayout">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatLayout RepeatLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatLayout As RepeatLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatLayout RepeatLayout { System::Web::UI::WebControls::RepeatLayout get(); void set(System::Web::UI::WebControls::RepeatLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件是在表中显示还是在流布局中显示。</summary>
        <value>一个值，该值指定控件是在表中显示还是在流布局中显示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>属性指定是否中的项<xref:System.Web.UI.WebControls.DataList>控件显示表中。 唯一<xref:System.Web.UI.WebControls.RepeatLayout>支持的值<xref:System.Web.UI.WebControls.DataList>控件<xref:System.Web.UI.WebControls.RepeatLayout.Table>和<xref:System.Web.UI.WebControls.RepeatLayout.Flow>。  
  
 如果此属性设置为`RepeatLayout.Table`，列表中的项显示在表中。 如果此属性设置为`RepeatLayout.Flow`，列表中的项显示没有的表结构。  
  
 当<xref:System.Web.UI.WebControls.DataList>控件显示表中，你可以使用<xref:System.Web.UI.WebControls.DataList.GridLines%2A>属性可指定网格线样式。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>属性指定的布局样式<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的值不是支持的 <see cref="T:System.Web.UI.WebControls.RepeatLayout" /> 值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存自页回发到服务器后发生的控件视图状态更改。</summary>
        <returns>包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 视图状态更改的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A>方法主要由控件开发人员使用。  
  
 视图状态是服务器控件的属性的值的累计。 这些值会自动放置在服务器控件的<xref:System.Web.UI.Control.ViewState%2A>属性，它是实例的<xref:System.Web.UI.StateBag>类。 <xref:System.Web.UI.Control.ViewState%2A>属性的值随后会保存到一个字符串对象的服务器控件的生命周期的保存状态阶段后。 有关详细信息，请参阅[ASP.NET 页面生命周期概述](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991)。  
  
 保存视图状态，此字符串对象被作为存储在隐藏的 HTML 输入元素 在创作自定义服务器控件时，你可以通过重写中提高效率<xref:System.Web.UI.WebControls.DataList.SaveViewState%2A>方法并修改<xref:System.Web.UI.Control.ViewState%2A>服务器控件的属性。 有关详细信息，请参阅[开发自定义 ASP.NET 服务器控件](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)和[ASP.NET 状态管理概述](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandName">
      <MemberSignature Language="C#" Value="public const string SelectCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelectCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const SelectCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelectCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示 <see langword="Select" /> 命令名。 此字段为只读。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.SelectCommandName>字段来表示`Select`命令名称。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.SelectedIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中的选定项的索引。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中的选定项的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A>属性以编程方式指定中的选定的项<xref:System.Web.UI.WebControls.DataList>控件。 你还可以使用此属性来确定所选的项的索引。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A>属性是从零开始。  
  
 若要取消选择某个项目，将设置<xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A>属性`-1`。  
  
 <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A>属性存储在控件状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A>属性来指定中的选定的项<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的值小于 <see langword="-1" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItem As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItem ^ SelectedItem { System::Web::UI::WebControls::DataListItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中的选定项。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.DataListItem" />，它表示 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中的选定项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.SelectedItem%2A>属性来获取<xref:System.Web.UI.WebControls.DataListItem>表示中的选定的项的对象<xref:System.Web.UI.WebControls.DataList>控件。 此对象然后用于访问所选的项的属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.SelectedItem%2A>属性显示的内容中的选定项<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[Classic DataList.SelectedItem Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.SelectedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SelectedItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中选定项的样式属性。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象，该对象包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中选定项的样式属性。 默认值是一个空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性用于提供自定义样式中的选定项<xref:System.Web.UI.WebControls.DataList>控件。 常见样式属性，可调整包括前景颜色、 背景色、 字体和单元格内的内容对齐方式。 提供不同的样式增强的外观<xref:System.Web.UI.WebControls.DataList>控件。  
  
 项中的样式属性<xref:System.Web.UI.WebControls.DataList>控件从一个项样式属性继承到另一个层次结构。 由层次结构中较高的项的样式属性继承层次结构中设置得较低的项的样式属性。 例如，如果你指定的红色字体<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性、 中的所有其他项样式属性<xref:System.Web.UI.WebControls.DataList>控件还具有红色字体。 这使您可以通过设置单个项的样式属性提供通用控件外观。 你可以重写继承的样式设置是通过设置其样式属性的层次结构中较高级别的项样式属性的。 例如，可以指定为蓝色字体<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>属性，重写中指定的红色字体<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>属性。 下表列出了从最高到最低的层次结构顺序。  
  
|优先级|样式属性|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 若要指定选定项的自定义样式，将放置`<SelectedItemStyle>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。 然后可以列出内打开的样式特性`<SelectedItemStyle>`标记。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>属性来指定中的选定项的自定义背景颜色<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SelectedItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中选定项的模板。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" />，它包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中选定项的模板。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>属性控制的选定项的内容。 所选的项的外观由控制<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>属性。  
  
 若要指定选定项的模板，将放置`<SelectedItemTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。 然后可以列出在开始和结束之间模板的内容`<SelectedItemTemplate>`标记。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>属性控制中的选定项的内容<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取所选择的数据列表项的键字段的值。</summary>
        <value>所选择的数据列表项的键字段值。 默认值为 <see langword="null" />，指示当前未选择任何数据列表项。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">尚未设置 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" /> 属性。</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SeparatorStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SeparatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SeparatorStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SeparatorStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中各项间分隔符的样式属性。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象，该对象包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中各项间分隔符的样式属性。 默认值是一个空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>属性来提供自定义样式中每个项之间的分隔符<xref:System.Web.UI.WebControls.DataList>控件。 分隔符可以放置包含在每个项之间的自定义内容的元素<xref:System.Web.UI.WebControls.DataList>控件。 常见样式属性，可调整包括前景颜色、 背景色、 字体和单元格内的内容对齐方式。 提供不同的样式增强的外观<xref:System.Web.UI.WebControls.DataList>控件。  
  
 若要指定自定义样式分隔符，`<SeparatorStyle>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。 然后可以列出内打开的样式特性`<SeparatorStyle>`标记。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>属性指定在每个项之间的分隔符的自定义背景颜色<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中各项间分隔符的模板。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" />，它包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中各项间分隔符的模板。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>属性来控制内容的项之间的分隔符<xref:System.Web.UI.WebControls.DataList>控件。 分隔符可以放置包含在每个项之间的自定义内容的元素<xref:System.Web.UI.WebControls.DataList>控件。 项之间的分隔符的外观<xref:System.Web.UI.WebControls.DataList>控制通过<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>属性。  
  
 若要指定分隔符的模板，将放置`<SeparatorTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.DataList>控件。 然后可以列出在开始和结束之间模板的内容`<SeparatorTemplate>`标记。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>属性控制的内容中的每个项之间的分隔符<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowFooter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否在 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中显示脚注部分。</summary>
        <value>
          如果显示脚注部分，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />，但仅当 <see cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" /> 属性不为 <see langword="null" /> 时，才检查此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>属性以指定是否在显示页脚部分<xref:System.Web.UI.WebControls.DataList>控件。  
  
 你可以通过设置控制页脚部分的外观<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>属性。 页脚部分的内容由控制<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>属性显示在页脚部分<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否在 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中显示页眉节。</summary>
        <value>
          如果显示页眉，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />，但仅当 <see cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" /> 属性不为 <see langword="null" /> 时，才检查此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>属性以指定是否在显示的标题部分<xref:System.Web.UI.WebControls.DataList>控件。  
  
 你可以通过设置控制标头部分的外观<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>属性。 标头部分的内容由控制<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>属性来显示中的标头部分<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.Style IRepeatInfoUser.GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.WebControls.Style System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetItemStyle (itemType As ListItemType, repeatIndex As Integer) As Style Implements IRepeatInfoUser.GetItemStyle" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::WebControls::Style ^ System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex) = System::Web::UI::WebControls::IRepeatInfoUser::GetItemStyle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <see cref="T:System.Web.UI.WebControls.ListItemType" /> 枚举值之一。</param>
        <param name="repeatIndex">列表控件中项的索引。</param>
        <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.Style" />，表示列表控件中指定索引位置的指定项类型的样式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.DataList> 实例强制转换为 <xref:System.Web.UI.WebControls.IRepeatInfoUser> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasFooter">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasFooter As Boolean Implements IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参阅 <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.DataList> 实例强制转换为 <xref:System.Web.UI.WebControls.IRepeatInfoUser> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasHeader">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasHeader As Boolean Implements IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参阅 <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 可以使用它时，才<xref:System.Web.UI.WebControls.DataList>实例被强制转换<xref:System.Web.UI.WebControls.IRepeatInfoUser>接口。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasSeparators As Boolean Implements IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参阅 <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.DataList> 实例强制转换为 <xref:System.Web.UI.WebControls.IRepeatInfoUser> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RenderItem">
      <MemberSignature Language="C#" Value="void IRepeatInfoUser.RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex, class System.Web.UI.WebControls.RepeatInfo repeatInfo, class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex, System::Web::UI::WebControls::RepeatInfo ^ repeatInfo, System::Web::UI::HtmlTextWriter ^ writer) = System::Web::UI::WebControls::IRepeatInfoUser::RenderItem;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
        <Parameter Name="repeatInfo" Type="System.Web.UI.WebControls.RepeatInfo" />
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="itemType">项的类型。</param>
        <param name="repeatIndex">项的索引。</param>
        <param name="repeatInfo">用于呈现项的信息。</param>
        <param name="writer">要用于呈现项的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</param>
        <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.DataList> 实例强制转换为 <xref:System.Web.UI.WebControls.IRepeatInfoUser> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property RepeatedItemCount As Integer Implements IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参阅 <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.DataList> 实例强制转换为 <xref:System.Web.UI.WebControls.IRepeatInfoUser> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于呈现 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的 HTML 标记。</summary>
        <value>如果 <see cref="F:System.Web.UI.HtmlTextWriterTag.Table" /> 设置为 <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />，则返回 <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" /> 标记；否则返回 <see cref="F:System.Web.UI.HtmlTextWriterTag.Span" /> 标记。 默认值为 <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.TagKey%2A>属性来确定<xref:System.Web.UI.HtmlTextWriterTag>与关联的值<xref:System.Web.UI.WebControls.DataList>控件。 <xref:System.Web.UI.WebControls.DataList.TagKey%2A>属性主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>跟踪 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的视图状态更改，以便可以将更改存储在该控件的 <see cref="P:System.Web.UI.Control.ViewState" /> 属性中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.TrackViewState%2A>方法被重写以标记从此处开始跟踪并将更改保存到控件的控件的视图状态一部分的起始点。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ UpdateCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>对 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件中的某项单击 <see langword="Update" /> 按钮时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.UpdateCommand>引发事件时`Update`按钮的单击某项。  
  
 典型处理程序<xref:System.Web.UI.WebControls.DataList.UpdateCommand>事件更新的数据，集<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>属性`-1`（以取消选择项），然后将重新绑定数据到<xref:System.Web.UI.WebControls.DataList>控件。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 验证控件可用于在控件中显示输入的文本之前验证用户输入。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
 有关处理事件的详细信息，请参阅[如何： 在 Web 窗体应用程序中使用事件](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.WebControls.DataList.UpdateCommand>事件。 它允许你更新中的选定的项<xref:System.Web.UI.WebControls.DataList>使用用户输入的新值的控件时`Update`单击按钮。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandName">
      <MemberSignature Language="C#" Value="public const string UpdateCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UpdateCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const UpdateCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ UpdateCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示 <see langword="Update" /> 命令名。 此字段为只读。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.DataList.UpdateCommandName>字段来表示`Update`命令名称。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
  </Members>
</Type>