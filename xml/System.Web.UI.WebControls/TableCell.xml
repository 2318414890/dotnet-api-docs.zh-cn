<Type Name="TableCell" FullName="System.Web.UI.WebControls.TableCell">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0776f1c8eb33aab3738fb79924caf1f1cec59905" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599491" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TableCell : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableCell extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TableCell" />
  <TypeSignature Language="VB.NET" Value="Public Class TableCell&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableCell : System::Web::UI::WebControls::WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.TableCellControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Web.UI.WebControls.Table" /> 控件中的单元格。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主题内容：  
  
-   [介绍](#introduction)  
  
-   [声明性语法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>介绍  
 <xref:System.Web.UI.WebControls.TableCell>类表示中的单元格<xref:System.Web.UI.WebControls.Table>控件。 你可以使用<xref:System.Web.UI.WebControls.TableCell.Text%2A>属性指定或确定单元格的内容。  
  
 <xref:System.Web.UI.WebControls.TableCell>类，可以控制如何显示单元格的内容。 中的单元格内容的对齐方式通过将设置指定<xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A>和<xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A>属性。 你可以使用<xref:System.Web.UI.WebControls.TableCell.Wrap%2A>属性指定的单元格中单元格的内容是否换行。  
  
 你还可以指定所代表的表格中的多少行或列<xref:System.Web.UI.WebControls.Table>控件中，由一个单元格都被占用。 <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>和<xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A>属性控制多少行并使用列，分别。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 验证服务器控件还提供用于评估用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>声明性语法  
  
```  
<asp:TableCell  
    AccessKey="string"  
    AssociatedHeaderCellID="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    ColumnSpan="integer"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RowSpan="integer"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    VerticalAlign="NotSet|Top|Middle|Bottom"  
    Visible="True|False"  
    Width="size"  
    Wrap="True|False"  
/></asp:TableCell>  
```  
  
   
  
## Examples  
 下面的代码示例演示如何创建表、 以编程方式，将元素添加到表并在网页上显示的表。 请注意如何<xref:System.Web.UI.WebControls.TableCell>实例化控件并设置其属性值。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，并可能无法正常工作如果直接复制到代码隐藏文件。 此代码示例必须复制到具有.aspx 扩展名的空白文本文件。 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[TableCell#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCell/CS/tablecellcs.aspx#1)]
 [!code-aspx-vb[TableCell#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCell/VB/tablecellvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Table" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.Text" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.HorizontalAlign" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.VerticalAlign" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.Wrap" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.RowSpan" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.ColumnSpan" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.TableCell" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TableCell>使用创建<xref:System.Web.UI.HtmlTextWriterTag.Td>标记。  
  
   
  
## Examples  
 下面的示例演示如何以编程方式创建的新实例<xref:System.Web.UI.WebControls.TableCell>控件。  
  
 [!code-csharp[TableCell#5](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCell/CS/tablecellcs.aspx#5)]
 [!code-vb[TableCell#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCell/VB/tablecellvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Td" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">在客户端上呈现 HTML 内容的输出流。</param>
        <summary>将特定于 <see cref="T:System.Web.UI.WebControls.TableCell" /> 控件的属性添加到要呈现的特性列表中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A>方法重写基类的<xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A>方法，它首先调用基方法，然后添加<xref:System.Web.UI.WebControls.TableCell>属性对应于<xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>属性，<xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A>属性和<xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A>属性。 如果<xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A>属性是指<xref:System.Web.UI.WebControls.TableHeaderCell>未可以找到<xref:System.Web.HttpException>引发。  
  
 <xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A>主要由控件开发人员扩展功能的使用方法<xref:System.Web.UI.WebControls.TableCell>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A>方法中的自定义的服务器控件，以便为每个单元格呈现的自定义的 title 属性。  
  
 [!code-aspx-csharp[CustomTableCellAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/CS/custom_tablecell_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomTableCellAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/VB/custom_tablecell_addattributestorendervb.aspx#1)]  
  
 [!code-csharp[CustomTableCellAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/CS/custom_tablecell_addattributestorender.cs#2)]
 [!code-vb[CustomTableCellAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/VB/custom_tablecell_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">未找到列为关联标题单元格的单元格。</exception>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />基本类的方法，以便<see cref="T:System.Web.UI.WebControls.TableCell" />正确呈现控件特性。</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.TableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.ColumnSpan" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID" />
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" />，表示已经过分析的元素</param>
        <summary>将已分析的子控件添加到 <see cref="T:System.Web.UI.WebControls.TableCell" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.TableCell>控件包含子控件然后基类的<xref:System.Web.UI.WebControls.TableCell.AddParsedSubObject%2A>方法是调用; 否则为<xref:System.Web.UI.WebControls.TableCell>控件的<xref:System.Web.UI.WebControls.TableCell.Text%2A>属性值添加为<xref:System.Web.UI.LiteralControl>对象传递给<xref:System.Web.UI.WebControls.TableCell>控件<xref:System.Web.UI.ControlCollection>.  
  
 <xref:System.Web.UI.WebControls.TableCell.AddParsedSubObject%2A>主要由控件开发人员扩展功能的使用方法<xref:System.Web.UI.WebControls.TableCell>控件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)" />方法在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)" />方法，以便对象正确添加到<see cref="T:System.Web.UI.WebControls.TableCell" />控件<see cref="T:System.Web.UI.ControlCollection" />。</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.TableCell.Text" />
        <altmember cref="T:System.Web.UI.LiteralControl" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="AssociatedHeaderCellID">
      <MemberSignature Language="C#" Value="public virtual string[] AssociatedHeaderCellID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AssociatedHeaderCellID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AssociatedHeaderCellID As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ AssociatedHeaderCellID { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个由空格分隔的列表，该列表包含与 <see cref="T:System.Web.UI.WebControls.TableCell" /> 控件关联的表标题单元格。</summary>
        <value>字符串数组，包含关联表标题单元格的标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A>属性包含的标头单元格编程标识符的列表提供的标头信息<xref:System.Web.UI.WebControls.TableCell>控件。 标头单元格标识符列表以逗号分隔列表的形式呈现到 HTML`<td>`元素的`header`属性。  
  
 设置时<xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A>属性使用逗号分隔列表的字符串。 如果列表的元素不被识别为有效的表标题单元格<xref:System.Web.HttpException>时，将引发<xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A>调用。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式指定<xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A>属性<xref:System.Web.UI.WebControls.TableCell>控件。 具体而言，请注意中的最后一行的单元格是关联到三个标头单元格。 有关完整的工作代码示例，请参阅<xref:System.Web.UI.WebControls.TableHeaderCell>类概述主题。  
  
```csharp  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
```vb  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableHeaderCell" />
        <altmember cref="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.StringArrayConverter" />
      </Docs>
    </Member>
    <Member MemberName="ColumnSpan">
      <MemberSignature Language="C#" Value="public virtual int ColumnSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.ColumnSpan" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnSpan As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ColumnSpan { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.Table" /> 控件中单元格跨越的列数。</summary>
        <value>呈现的表中单元格跨越的列数。 默认值为 <see langword="0" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A>属性指定或确定呈现的单元格跨越的表中的列数。 例如，如果将此属性设置为`2`，单元格占用两个列<xref:System.Web.UI.WebControls.Table>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式指定<xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A>的<xref:System.Web.UI.WebControls.TableCell>控件。 具体而言，请注意最后一个行的单个单元格如何跨越三列。 有关完整的工作代码示例，请参阅<xref:System.Web.UI.WebControls.TableHeaderCell>类概述主题。  
  
```csharp  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
```vb  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">选定值小于 <see langword="0" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.TableCell.RowSpan" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 控件创建 <see cref="T:System.Web.UI.WebControls.TableCell" />。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.Style" />，表示 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 控件的 <see cref="T:System.Web.UI.WebControls.TableCell" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TableItemStyle>由<xref:System.Web.UI.WebControls.TableCell.CreateControlStyle%2A>方法与使用<xref:System.Web.UI.WebControls.TableCell.Wrap%2A>， <xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A>，和<xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A>属性。  
  
 <xref:System.Web.UI.WebControls.TableCell.CreateControlStyle%2A>主要由控件开发人员扩展功能的使用方法<xref:System.Web.UI.WebControls.TableCell>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.TableCell.CreateControlStyle%2A>方法中的自定义的服务器控件，以便它始终返回的新实例<xref:System.Web.UI.WebControls.TableStyle>类<xref:System.Web.UI.WebControls.TableCell>。  
  
 [!code-aspx-csharp[CustomTableCellCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/CS/custom_tablecell_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomTableCellCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/VB/custom_tablecell_createcontrolstylevb.aspx#1)]  
  
 [!code-csharp[CustomTableCellCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/CS/custom_tablecell_createcontrolstyle.cs#2)]
 [!code-vb[CustomTableCellCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/VB/custom_tablecell_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.Wrap" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.VerticalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格内容的水平对齐方式。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 枚举值之一。 默认值为 <see langword="NotSet" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A>属性指定的单元格的内容的水平对齐方式。 使用的可能值中指定<xref:System.Web.UI.WebControls.HorizontalAlign>枚举。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式指定<xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A>属性<xref:System.Web.UI.WebControls.TableCell>控件。 具体而言，请注意中的最后一行的单元格左对齐方式。 有关完整的工作代码示例，请参阅<xref:System.Web.UI.WebControls.TableHeaderCell>类概述主题。  
  
```csharp  
<asp:TableCell AssociatedHeaderCellID="Column1Header,Column2Header,Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
```vb  
<asp:TableCell AssociatedHeaderCellID="Column1Header,Column2Header,Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.VerticalAlign" />
        <altmember cref="T:System.Web.UI.WebControls.TableHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">在客户端上呈现 HTML 内容的输出流。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.TableCell" /> 内容呈现给指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.TableCell>控件具有子控件或中重写派生类的基类<xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>方法是调用; 否则为的值<xref:System.Web.UI.WebControls.TableCell.Text%2A>属性写入<xref:System.Web.UI.HtmlTextWriter>对象。  
  
 <xref:System.Web.UI.WebControls.TableCell.RenderContents%2A>主要由控件开发人员扩展功能的使用方法<xref:System.Web.UI.WebControls.TableCell>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.TableCell.RenderContents%2A>在自定义的方法<xref:System.Web.UI.WebControls.TableCell>控制的它在单元格的内容中插入自定义文本。  
  
 [!code-aspx-csharp[CustomTableCellRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellRenderContents/CS/custom_tablecell_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomTableCellRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellRenderContents/VB/custom_tablecell_rendercontentsvb.aspx#1)]  
  
 [!code-csharp[CustomTableCellRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellRenderContents/CS/custom_tablecell_rendercontents.cs#2)]
 [!code-vb[CustomTableCellRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellRenderContents/VB/custom_tablecell_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSpan">
      <MemberSignature Language="C#" Value="public virtual int RowSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.RowSpan" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RowSpan As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RowSpan { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.Table" /> 控件中单元格跨越的行数。</summary>
        <value>呈现的表中单元格跨越的行数。 默认值为 <see langword="0" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>属性指定或确定呈现的单元格跨越的表中的行数。 例如，如果将此属性设置为`2`，单元格占用中的两个行<xref:System.Web.UI.WebControls.Table>控件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">选定值小于 <see langword="0" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.TableCell.ColumnSpan" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示在控件的 <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> 属性为 <see langword="false" /> 时，控件是否应将呈现的 HTML 元素的 <see langword="disabled" /> 特性设置为 "disabled"。</summary>
        <value>
          <see langword="true" /> 如果<see cref="P:System.Web.UI.Control.RenderingCompatibility" />属性指示 ASP.NET 版本低于<c>4.0</c>; 否则为<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性指示 ASP.NET 应的呈现方式 HTML 控件时控件被禁用。 如果此属性为`true`，ASP.NET 呈现`disabled`属性时控件被禁用。 如果此属性为`false`，ASP.NET 呈现`class`属性时控件被禁用。 有关详情，请参阅<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格的文本内容。</summary>
        <value>单元格的文本内容。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TableCell.Text%2A>属性指定或确定该单元格的文本内容。 此属性通常用于以编程方式更新单元格的内容。  
  
> [!NOTE]
>  设置<xref:System.Web.UI.WebControls.TableCell.Text%2A>属性将清除中包含的任何其他控件<xref:System.Web.UI.WebControls.TableCell>。  
  
> [!CAUTION]
>  <xref:System.Web.UI.WebControls.TableCell.Text%2A>控件可以用于显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 验证服务器控件还提供用于评估用户输入。 有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 保护对脚本利用在 Web 应用程序中进行应用 HTML 编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[中验证用户输入ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的代码示例演示如何创建的新实例<xref:System.Web.UI.WebControls.TableCell>以编程方式控制。 具体而言，请注意如何<xref:System.Web.UI.WebControls.TableCell.Text%2A>属性用来设置的内容<xref:System.Web.UI.WebControls.TableCell>控件。  
  
 此代码示例摘自更大的示例为提供<xref:System.Web.UI.WebControls.TableCell>类。  
  
 [!code-csharp[TableCell#5](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCell/CS/tablecellcs.aspx#5)]
 [!code-vb[TableCell#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCell/VB/tablecellvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.Text" />
      </Docs>
    </Member>
    <Member MemberName="VerticalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.VerticalAlign VerticalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.VerticalAlign VerticalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.VerticalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VerticalAlign As VerticalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::VerticalAlign VerticalAlign { System::Web::UI::WebControls::VerticalAlign get(); void set(System::Web::UI::WebControls::VerticalAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.VerticalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格内容的垂直对齐方式。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.VerticalAlign" /> 枚举值之一。 默认值为 <see langword="NotSet" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A>属性指定的单元格的内容的垂直对齐方式。 使用的可能值中指定<xref:System.Web.UI.WebControls.VerticalAlign>枚举。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.VerticalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public virtual bool Wrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.Wrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Wrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Wrap { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取和设置一个值，该值指示单元格内容是否换行。</summary>
        <value>
          如果单元格内容在单元格内换行，则为 <see langword="true" />，否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TableCell.Wrap%2A>属性指定或确定是否单元格的内容换行的单元格中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TableItemStyle.Wrap" />
      </Docs>
    </Member>
  </Members>
</Type>