<Type Name="GridView" FullName="System.Web.UI.WebControls.GridView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5f3731932cfe6ab70f7e6255ab34bb7186f88601" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34311488" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GridView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataKeysControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPersistedSelector, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GridView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IDataKeysControl, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.ICallbackContainer, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundListControl, class System.Web.UI.WebControls.IFieldControl, class System.Web.UI.WebControls.IPersistedSelector, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.GridView" />
  <TypeSignature Language="VB.NET" Value="Public Class GridView&#xA;Inherits CompositeDataBoundControl&#xA;Implements ICallbackContainer, ICallbackEventHandler, IDataBoundListControl, IDataKeysControl, IFieldControl, IPersistedSelector, IPostBackContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class GridView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IDataKeysControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::ICallbackContainer, System::Web::UI::WebControls::IDataBoundListControl, System::Web::UI::WebControls::IFieldControl, System::Web::UI::WebControls::IPersistedSelector, System::Web::UI::WebControls::IPostBackContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataKeysControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.ICallbackContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundListControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IFieldControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPersistedSelector</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.GridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("SelectedPersistedDataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在表中显示数据源的值，其中每列表示一个字段，每行表示一条记录。 使用 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件可以选择和编辑这些项以及对它们进行排序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主题内容：  
  
-   [介绍](#introduction)  
  
-   [列字段](#column_fields)  
  
-   [绑定到数据](#binding_to_data)  
  
-   [数据操作](#data_operations)  
  
-   [自定义用户界面](#customizing_the_user_interface)  
  
-   [事件](#events)  
  
-   [辅助功能](#accessibility)  
  
-   [声明性语法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>介绍  
 <xref:System.Web.UI.WebControls.GridView>控件用于显示在一个表的数据源的值。 每个列表示字段，而每一行代表一条记录。 <xref:System.Web.UI.WebControls.GridView>控件支持以下功能：  
  
-   绑定到数据源控件，如<xref:System.Web.UI.WebControls.SqlDataSource>。  
  
-   内置排序功能。  
  
-   内置更新和删除功能。  
  
-   内置分页功能。  
  
-   内置的行选择功能。  
  
-   以编程方式访问<xref:System.Web.UI.WebControls.GridView>对象模型，以便动态设置属性、 处理事件，依次类推。  
  
-   多个键字段。  
  
-   超链接列的多个数据字段。  
  
-   通过主题和样式的自定义外观。  
  
-   若要了解有关 ASP.NET 中提供的其他数据绑定控件，请参阅[数据绑定 Web 服务器控件](http://msdn.microsoft.com/library/f9cf026e-d8b8-49f8-a3c4-64de2edbbb96)。  
  
> [!NOTE]
>  如果你熟悉<xref:System.Web.UI.WebControls.DataGrid>从.NET Framework 1.0 版中，控件<xref:System.Web.UI.WebControls.GridView>控件的本质的后继<xref:System.Web.UI.WebControls.DataGrid>控件。  
  
<a name="column_fields"></a>   
## <a name="column-fields"></a>列字段  
 每个列中的<xref:System.Web.UI.WebControls.GridView>控件由<xref:System.Web.UI.WebControls.DataControlField>对象。 默认情况下，<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性设置为`true`，这将创建<xref:System.Web.UI.WebControls.AutoGeneratedField>为数据源中的每个字段的对象。 每个字段然后呈现为中的列<xref:System.Web.UI.WebControls.GridView>中每个字段在数据源中显示的顺序控制。  
  
 你也可以手动控制字段显示在哪一列<xref:System.Web.UI.WebControls.GridView>通过设置<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性`false`，然后定义你自己的列字段集合。 不同的列字段类型确定在控件中的列的行为。 下表列出可用的不同列字段类型。  
  
|列字段类型|描述|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundField>|数据源中显示的字段的值。 这是默认列类型的<xref:System.Web.UI.WebControls.GridView>控件。|  
|<xref:System.Web.UI.WebControls.ButtonField>|显示在每个项的命令按钮<xref:System.Web.UI.WebControls.GridView>控件。 这使您可以创建自定义按钮控件，如添加或删除按钮一列。|  
|<xref:System.Web.UI.WebControls.CheckBoxField>|显示一个复选框中每个项<xref:System.Web.UI.WebControls.GridView>控件。 此列字段类型通常用于显示具有一个布尔值的字段。|  
|<xref:System.Web.UI.WebControls.CommandField>|显示预定义的命令按钮来执行选择、 编辑或删除操作。|  
|<xref:System.Web.UI.WebControls.HyperLinkField>|为超链接，在数据源中显示的字段的值。 此列字段类型可让你将第二个字段绑定到超链接的 URL。|  
|<xref:System.Web.UI.WebControls.ImageField>|显示中每个项图像<xref:System.Web.UI.WebControls.GridView>控件。|  
|<xref:System.Web.UI.WebControls.TemplateField>|显示用户定义的内容中每个项<xref:System.Web.UI.WebControls.GridView>根据指定的模板的控件。 此列字段类型可让你创建自定义列字段。|  
  
 若要以声明方式定义列字段集合，应首先添加开始标记与结束`<Columns>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.GridView>控件。 接下来，列出你想要包括到开始和结束之间的列字段`<Columns>`标记。 指定的列添加到<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合的顺序列出。 <xref:System.Web.UI.WebControls.GridView.Columns%2A>集合存储所有列字段控件中，并使你能够以编程方式管理中的列字段<xref:System.Web.UI.WebControls.GridView>控件。  
  
 显式声明的列字段可以显示在与自动生成的列字段结合使用。 同时使用时，显式声明的列字段自动生成的列字段后跟第一次，呈现。  
  
> [!NOTE]
>  不会自动生成的列字段添加到<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>绑定到数据  
 <xref:System.Web.UI.WebControls.GridView>控件可以绑定到数据源控件 (如<xref:System.Web.UI.WebControls.SqlDataSource>控件或<xref:System.Web.UI.WebControls.ObjectDataSource>控件) 或任何数据源集合可实现<xref:System.Collections.IEnumerable?displayProperty=nameWithType>接口，如<xref:System.Data.DataView?displayProperty=nameWithType>， <xref:System.Collections.ArrayList?displayProperty=nameWithType>， <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>，或其他集合类型。 使用以下方法之一将绑定<xref:System.Web.UI.WebControls.GridView>控件添加到适当的数据源类型：  
  
-   若要将绑定到数据源控件，将设置<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>属性<xref:System.Web.UI.WebControls.GridView>控制转移到<xref:System.Web.UI.Control.ID%2A>数据源控件的值。 <xref:System.Web.UI.WebControls.GridView>控件自动绑定到指定的数据源控件，并且可以利用数据源控件的功能，以执行排序、 更新、 删除和分页。 这是将绑定到数据的首选的方法。  
  
-   将绑定到数据源实现<xref:System.Collections.IEnumerable?displayProperty=nameWithType>接口，以编程方式设置<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>属性<xref:System.Web.UI.WebControls.GridView>控件拖到数据源，然后调用<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法。 使用此方法时<xref:System.Web.UI.WebControls.GridView>控件不提供内置的排序、 更新、 删除和分页功能。 你需要通过使用相应的事件来提供此功能。  
  
 有关数据绑定的详细信息，请参阅[ASP.NET 数据访问内容映射](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2)。  
  
> [!NOTE]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 只要有可能，强烈建议确保值之前都是 HTML 编码中此控件所显示 (<xref:System.Web.UI.WebControls.BoundField>类进行 HTML 编码值，默认情况下)。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 验证服务器控件还提供用于评估用户输入。 有关详细信息，请参阅[验证控件简介](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190)。  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>数据操作  
 <xref:System.Web.UI.WebControls.GridView>控件提供了许多内置功能，允许用户排序、 更新、 删除、 选择和分页控件中的项。 当<xref:System.Web.UI.WebControls.GridView>控件绑定到数据源控件，<xref:System.Web.UI.WebControls.GridView>控件可利用数据源控件的功能并提供自动排序、 更新和删除功能。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>控件可以提供对排序、 更新和删除与其他类型的数据源的支持。 但是，你将需要使用这些操作的实现提供相应的事件处理程序。  
  
 排序允许使用者中的项进行排序<xref:System.Web.UI.WebControls.GridView>某个特定的列，通过单击列标题的控件。 若要启用排序，将设置<xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>属性`true`。  
  
 中的按钮时启用自动更新、 删除和选择功能<xref:System.Web.UI.WebControls.ButtonField>或<xref:System.Web.UI.WebControls.TemplateField>列字段，命令名称为"编辑"、"删除"和"Select"，分别单击。 <xref:System.Web.UI.WebControls.GridView>控件可自动添加<xref:System.Web.UI.WebControls.CommandField>列字段具有编辑、 删除或选择按钮如果<xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>， <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>，或<xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A>属性设置为`true`分别。  
  
> [!NOTE]
>  将记录插入到数据源不直接支持<xref:System.Web.UI.WebControls.GridView>控件。 但是，就可以使用插入记录<xref:System.Web.UI.WebControls.GridView>控件结合`DetailsView`或`FormView`控件。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.DetailsView>或<xref:System.Web.UI.WebControls.FormView>分别。  
  
 而不是在同一时间，数据源中显示的所有记录<xref:System.Web.UI.WebControls.GridView>控件可以自动分解记录为页。 若要启用分页，设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>控件是在回发的信息存储在基础上重新创建<xref:System.Web.UI.PageStatePersister.ViewState%2A>。 如果<xref:System.Web.UI.WebControls.GridView>控件包括<xref:System.Web.UI.WebControls.TemplateField>或<xref:System.Web.UI.WebControls.CommandField>与<xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A>属性设置为`true`，则<xref:System.Web.UI.Page.EnableViewState%2A>属性还必须设置为`true`以确保该并发数据操作，如更新和删除操作，将应用于相应的行。  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>自定义用户界面  
 你可以自定义的外观<xref:System.Web.UI.WebControls.GridView>通过设置控件的不同部分的样式属性的控件。 下表列出不同的样式属性。  
  
|样式属性|描述|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>|中的交替数据行的样式设置<xref:System.Web.UI.WebControls.GridView>控件。 将数据行时设置此属性，之间交替显示<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>设置和<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>设置。|  
|<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>|正在编辑中的行的样式设置<xref:System.Web.UI.WebControls.GridView>控件。|  
|<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>|中显示的空数据行的样式设置<xref:System.Web.UI.WebControls.GridView>控制当数据源不包含任何记录。|  
|<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>|页脚行的样式设置<xref:System.Web.UI.WebControls.GridView>控件。|  
|<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>|标题行的样式设置<xref:System.Web.UI.WebControls.GridView>控件。|  
|<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>|页导航行的样式设置<xref:System.Web.UI.WebControls.GridView>控件。|  
|<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>|中的数据行的样式设置<xref:System.Web.UI.WebControls.GridView>控件。 当<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>也设置属性，显示的数据行之间交替<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>设置和<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>设置。|  
|<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>|中的选定行的样式设置<xref:System.Web.UI.WebControls.GridView>控件。|  
|<xref:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle%2A>|样式设置为在按数据列数据<xref:System.Web.UI.WebControls.GridView>控件。 如果设置了此样式，数据按升序排序时，将向单元格应用的样式 （例如，突出显示的列）。|  
|<xref:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle%2A>|样式设置为在按数据列数据<xref:System.Web.UI.WebControls.GridView>控件。 如果设置了此样式，一个箭头，指示升序排序数据所在的标头<xref:System.Web.UI.WebControls.GridView>控制当数据按升序排序。|  
|<xref:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle%2A>|样式设置为在按数据列数据<xref:System.Web.UI.WebControls.GridView>控件。 如果设置了此样式，数据按降序排列时，将向单元格应用的样式 （例如，突出显示的列）。|  
|<xref:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle%2A>|样式设置为在按数据列数据<xref:System.Web.UI.WebControls.GridView>控件。 如果设置了此样式，向下箭头指向放置的标头<xref:System.Web.UI.WebControls.GridView>数据按降序进行排序时。|  
  
 你还可以显示或隐藏的控件的不同部分。 下表列出用于控制哪些部分是显示还是隐藏的属性。  
  
|Property|描述|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>|显示或隐藏的页脚部分<xref:System.Web.UI.WebControls.GridView>控件。|  
|<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>|显示或隐藏的标头部分<xref:System.Web.UI.WebControls.GridView>控件。|  
  
<a name="events"></a>   
## <a name="events"></a>事件  
 <xref:System.Web.UI.WebControls.GridView>控件提供可以编程的多个事件。 这使您可以运行的自定义的例程，每当发生的事件。 下表列出了支持的事件<xref:System.Web.UI.WebControls.GridView>控件。  
  
|事件|描述|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|在单击某一页导航按钮时，但在 <xref:System.Web.UI.WebControls.GridView> 控件处理分页操作之后发生。 当你需要在用户定位到其他页面控件中之后执行的任务时，通常使用此事件。|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|在单击某一页导航按钮时，但在 <xref:System.Web.UI.WebControls.GridView> 控件处理分页操作之前发生。 此事件通常用于取消的分页操作。|  
|<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|单击某一行的取消按钮，但之前时发生<xref:System.Web.UI.WebControls.GridView>控件退出编辑模式。 此事件通常用于停止取消操作。|  
|<xref:System.Web.UI.WebControls.GridView.RowCommand>|在 <xref:System.Web.UI.WebControls.GridView> 控件中单击某个按钮时发生。 此事件通常用于在控件中单击一个按钮时执行的任务。|  
|<xref:System.Web.UI.WebControls.GridView.RowCreated>|中创建一个新行时出现<xref:System.Web.UI.WebControls.GridView>控件。 此事件通常用于修改行的内容时都创建一行。|  
|<xref:System.Web.UI.WebControls.GridView.RowDataBound>|当数据行绑定到中的数据时发生<xref:System.Web.UI.WebControls.GridView>控件。 此事件通常用于行绑定到数据时修改行的内容。|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleted>|单击某一行的删除按钮，但之后时发生<xref:System.Web.UI.WebControls.GridView>控件从数据源中删除记录。 此事件通常用于检查删除操作的结果。|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleting>|单击某一行的删除按钮，但之前时发生<xref:System.Web.UI.WebControls.GridView>控件从数据源中删除记录。 此事件通常用于取消删除操作。|  
|<xref:System.Web.UI.WebControls.GridView.RowEditing>|发生在单击某一行的“编辑”按钮以后，<xref:System.Web.UI.WebControls.GridView> 控件进入编辑模式之前。 此事件通常用于取消编辑操作。|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdated>|发生在单击某一行的“更新”按钮，并且 <xref:System.Web.UI.WebControls.GridView> 控件对该行进行更新之后。 此事件通常用于检查更新操作的结果。|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdating>|发生在单击某一行的“更新”按钮以后，<xref:System.Web.UI.WebControls.GridView> 控件对该行进行更新之前。 此事件通常用于取消更新操作。|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|发生在单击某一行的“选择”按钮，<xref:System.Web.UI.WebControls.GridView> 控件对相应的选择操作进行处理之后。 此事件通常用于执行某项任务后在控件中选择行时。|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|发生在单击某一行的“选择”按钮以后，<xref:System.Web.UI.WebControls.GridView> 控件对相应的选择操作进行处理之前。 此事件通常用于取消了选择操作。|  
|<xref:System.Web.UI.WebControls.GridView.Sorted>|在单击用于列排序的超链接时，但在 <xref:System.Web.UI.WebControls.GridView> 控件对相应的排序操作进行处理之后发生。 此事件通常用于在用户单击超链接以便对列进行排序之后执行的任务。|  
|<xref:System.Web.UI.WebControls.GridView.Sorting>|在单击用于列排序的超链接时，但在 <xref:System.Web.UI.WebControls.GridView> 控件对相应的排序操作进行处理之前发生。 若要取消排序操作或执行自定义排序例程，通常使用此事件。|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>可访问性  
 有关如何配置此控件，以使其生成符合辅助功能标准的标记的信息，请参阅[Visual Studio 和 ASP.NET 中的辅助功能](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)和[ASP.NET 控件和可访问性](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>声明性语法  
  
```  
<asp:GridView  
    AccessKey="string"  
    AllowPaging="True|False"  
    AllowSorting="True|False"  
    AutoGenerateColumns="True|False"  
    AutoGenerateDeleteButton="True|False"  
    AutoGenerateEditButton="True|False"  
    AutoGenerateSelectButton="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditIndex="integer"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableSortingAndPagingCallbacks="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnRowCancelingEdit="RowCancelingEdit event handler"  
    OnRowCommand="RowCommand event handler"  
    OnRowCreated="RowCreated event handler"  
    OnRowDataBound="RowDataBound event handler"  
    OnRowDeleted="RowDeleted event handler"  
    OnRowDeleting="RowDeleting event handler"  
    OnRowEditing="RowEditing event handler"  
    OnRowUpdated="RowUpdated event handler"  
    OnRowUpdating="RowUpdating event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnSelectedIndexChanging="SelectedIndexChanging event handler"  
    OnSorted="Sorted event handler"  
    OnSorting="Sorting event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    PageSize="integer"  
    RowHeaderColumn="string"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingRowStyle />  
        <Columns>  
                <asp:BoundField  
                    AccessibleHeaderText="string"  
                    ApplyFormatInEditMode="True|False"  
                    ConvertEmptyStringToNull="True|False"  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    HtmlEncode="True|False"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:BoundField>  
                <asp:ButtonField  
                    AccessibleHeaderText="string"  
                    ButtonType="Button|Image|Link"  
                    CausesValidation="True|False"  
                    CommandName="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    ImageUrl="uri"  
                    InsertVisible="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Text="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ButtonField>  
                <asp:CheckBoxField  
                    AccessibleHeaderText="string"  
                    DataField="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:CheckBoxField>  
                <asp:CommandField  
                    AccessibleHeaderText="string"  
                    ButtonType="Button|Image|Link"  
                    CancelImageUrl="uri"  
                    CancelText="string"  
                    CausesValidation="True|False"  
                    DeleteImageUrl="uri"  
                    DeleteText="string"  
                    EditImageUrl="uri"  
                    EditText="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertImageUrl="uri"  
                    InsertText="string"  
                    InsertVisible="True|False"  
                    NewImageUrl="uri"  
                    NewText="string"  
                    SelectImageUrl="uri"  
                    SelectText="string"  
                    ShowCancelButton="True|False"  
                    ShowDeleteButton="True|False"  
                    ShowEditButton="True|False"  
                    ShowHeader="True|False"  
                    ShowInsertButton="True|False"  
                    ShowSelectButton="True|False"  
                    SortExpression="string"  
                    UpdateImageUrl="uri"  
                    UpdateText="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:CommandField>  
                <asp:DynamicField  
                    AccessibleHeaderText="string"  
                    ApplyFormatInEditMode="True|False"  
                    ConvertEmptyStringToNull="True|False"  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    HtmlEncode="True|False"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    ShowHeader="True|False"  
                    UIHint="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:DynamicField>  
                <asp:HyperLinkField  
                    AccessibleHeaderText="string"  
                    DataNavigateUrlFields="string"  
                    DataNavigateUrlFormatString="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    NavigateUrl="uri"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Target="string|_blank|_parent|_search|_self|_top"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:HyperLinkField>  
                <asp:ImageField  
                    AccessibleHeaderText="string"  
                    AlternateText="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DataAlternateTextField="string"  
                    DataAlternateTextFormatString="string"  
                    DataImageUrlField="string"  
                    DataImageUrlFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    NullImageUrl="uri"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ImageField>  
                <asp:TemplateField  
                    AccessibleHeaderText="string"  
                    ConvertEmptyStringToNull="True|False"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                            <ControlStyle />  
                            <FooterStyle />  
                            <HeaderStyle />  
                            <ItemStyle />  
                        <AlternatingItemTemplate>  
                            <!-- child controls -->  
                        </AlternatingItemTemplate>  
                        <EditItemTemplate>  
                            <!-- child controls -->  
                        </EditItemTemplate>  
                        <FooterTemplate>  
                            <!-- child controls -->  
                        </FooterTemplate>  
                        <HeaderTemplate>  
                            <!-- child controls -->  
                        </HeaderTemplate>  
                        <InsertItemTemplate>  
                            <!-- child controls -->  
                        </InsertItemTemplate>  
                        <ItemTemplate>  
                            <!-- child controls -->  
                        </ItemTemplate>  
                </asp:TemplateField>  
        </Columns>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <HeaderStyle />  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
        <SelectedRowStyle />  
</asp:GridView>  
```  
  
   
  
## Examples  
 Visual Studio Web 站点项目与源代码是可用本主题可以附带：[下载](http://go.microsoft.com/fwlink/?LinkId=191882)。  
  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView>控件来显示在 Microsoft SQL Server 中的 Customers 表的 AdventureWorksLT 示例数据库中的值。 检索值时使用<xref:System.Web.UI.WebControls.SqlDataSource>控件。  
  
 [!code-aspx-csharp[GridViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSimple/CS/displaycustomers.aspx#1)]
 [!code-aspx-vb[GridViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSimple/VB/displaycustomers.aspx#1)]  
  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView>控件和<xref:System.Web.UI.WebControls.LinqDataSource>控制，以便你可以编辑记录。  
  
 [!code-aspx-csharp[GridViewEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-aspx-vb[GridViewEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 有关演示如何访问单元格中值的示例，请参阅<xref:System.Web.UI.WebControls.GridViewRow>。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.ImageField" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GridView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.GridView" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数初始化的新实例<xref:System.Web.UI.WebControls.GridView>类。 动态地添加<xref:System.Web.UI.WebControls.GridView>控制到页上，创建一个新<xref:System.Web.UI.WebControls.GridView>对象、 设置其属性，并将其添加到<xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType>集合的容器控件，如<xref:System.Web.UI.WebControls.PlaceHolder>。  
  
   
  
## Examples  
 下面的示例演示如何使用此构造函数中动态添加<xref:System.Web.UI.WebControls.GridView>到页上的控件。  
  
 [!code-aspx-csharp[GridViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCtor/CS/gridviewctorcs.aspx#1)]
 [!code-aspx-vb[GridViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCtor/VB/gridviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowCustomPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowCustomPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AllowCustomPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowCustomPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowCustomPaging { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示是否启用自定义分页的值。</summary>
        <value>如果启用自定义分页，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 分页，你可以显示的内容<xref:System.Web.UI.WebControls.GridView>小区块中的控件。 在页面上的项的数目由<xref:System.Web.UI.WebControls.GridView.PageSize%2A>属性。 通常情况下，每次读取数据源中的每一行<xref:System.Web.UI.WebControls.GridView>控件移至其他页。 非常大的数据源中的项的总数时，这可能会耗费大量资源。 自定义分页，可以读取只需要为数据源的单页项目。  
  
 若要启用自定义分页，可以同时设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>和<xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A>属性设置为`true`。 中的处理程序<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>事件中，设置<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>属性设置为新的页索引值，设<xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A>属性设置为数据源中的项的总数目设要返回仅为当前页，并调用所需的行的数据源 <c6 1> <xref:System.Web.UI.WebControls.GridView.DataBind%2A> 方法。 <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A>属性使该控件可以确定页的总数; 此值通常由读取的所有项自动确定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否启用分页功能。</summary>
        <value>如果启用分页功能，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 而不是在同一时间，数据源中显示的所有记录<xref:System.Web.UI.WebControls.GridView>控件可以自动分解记录为页。 如果数据源支持分页功能，<xref:System.Web.UI.WebControls.GridView>控件可以充分利用，并提供内置的分页功能。 可与任何支持的数据源对象使用分页功能<xref:System.Collections.ICollection?displayProperty=nameWithType>接口或支持分页功能的数据源。  
  
 若要启用分页功能，请设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`。 默认情况下，<xref:System.Web.UI.WebControls.GridView>控件在上一次显示 10 个记录。 你可以更改通过设置页上显示的记录数<xref:System.Web.UI.WebControls.GridView.PageSize%2A>属性。 若要确定显示数据源内容所需的页的总数，请使用<xref:System.Web.UI.WebControls.GridView.PageCount%2A>属性。 你可以使用来确定的当前显示页的索引<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>属性。  
  
 启用分页后，调用的页导航行的其他行自动显示在<xref:System.Web.UI.WebControls.GridView>控件。 页导航行包含允许用户导航至其他页面的控件。 你可以通过使用来控制的设置 （如页导航显示模式，在时间和页导航控件的文本标签显示的页链接数） 的页导航行<xref:System.Web.UI.WebControls.GridView.PagerSettings%2A>属性。 页导航行可以通过设置显示在顶部、 底部，或同时的顶部和底部的控件<xref:System.Web.UI.WebControls.PagerSettings.Position%2A>属性。 此外可以通过设置选择从一个四个内置页导航显示模式<xref:System.Web.UI.WebControls.PagerSettings.Mode%2A>属性。 下表描述了内置的显示模式。  
  
|模式|描述|  
|----------|-----------------|  
|`PagerButton.NextPrevious`|一组分页控件包含以前和下一步按钮。|  
|`PagerButton.NextPreviousFirstLast`|一组的分页控件组成以前，接下来，第一个和最后一个按钮。|  
|`PagerButton.Numeric`|一组由用于直接访问页的带编号的链接按钮组成的分页控件。 这是默认模式。|  
|`PagerButton.NumericFirstLast`|一组编号和第一个和最后一个链接按钮组成的分页控件。|  
  
 若要控制 （包括其背景色、 字体颜色和位置） 的页导航行的外观，使用<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>属性。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>时数据源仅包含一页的记录后，控件将自动隐藏的页导航行。  
  
 <xref:System.Web.UI.WebControls.GridView>控件还可以定义自定义模板的页导航行。 有关创建自定义页导航行模板的详细信息，请参阅<xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>。  
  
 <xref:System.Web.UI.WebControls.GridView>控件提供可用于在发生分页时执行自定义操作的多个事件。 下表列出了可用的事件。  
  
|事件|描述|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|在单击某一页导航按钮时，但在 <xref:System.Web.UI.WebControls.GridView> 控件处理分页操作之后发生。 当你需要在用户定位到其他页面控件中之后执行的任务时，通常使用此事件。|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|在单击某一页导航按钮时，但在 <xref:System.Web.UI.WebControls.GridView> 控件处理分页操作之前发生。 此事件通常用于取消的分页操作。|  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性以声明方式启用中的分页功能<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowPaging/CS/gridviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[GridViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowPaging/VB/gridviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public virtual bool AllowSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AllowSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowSorting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否启用排序功能。</summary>
        <value>如果启用排序功能，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当支持排序的数据源控件绑定到<xref:System.Web.UI.WebControls.GridView>控件，<xref:System.Web.UI.WebControls.GridView>控件可以充分利用数据源控件的功能并提供自动排序功能。 当<xref:System.Web.UI.WebControls.GridView>控件绑定到数据源的设置<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>属性以编程方式，你必须提供排序功能使用<xref:System.Web.UI.WebControls.GridView.Sorting>事件。  
  
> [!NOTE]
>  不同的数据源具有不同的要求启用其排序功能。 若要确定的要求，请参阅特定数据源的文档。  
  
 若要启用排序，将设置<xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>属性`true`。 启用进行排序时，与每个列字段的标题文本其<xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>属性集都显示为链接按钮。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>自动填充自动生成的列字段的属性。 如果你定义自己的列通过<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合，你必须设置<xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>属性为每个列; 否则，列将不会显示链接按钮的标头中。  
  
 单击某一列将导致中的项的链接按钮<xref:System.Web.UI.WebControls.GridView>要排序的控件基于排序表达式。 通常，排序表达式是只需在列中，这会导致显示的字段的名称<xref:System.Web.UI.WebControls.GridView>控件按照该列排序。 若要按多个字段排序，请使用包含以逗号分隔的字段名称列表的排序表达式。 你可以确定排序表达式，<xref:System.Web.UI.WebControls.GridView>控件应用通过使用<xref:System.Web.UI.WebControls.GridView.SortExpression%2A>属性。 重复单击某个列的链接按钮切换升序和降序之间的排序方向。 若要确定当前的排序方向，使用<xref:System.Web.UI.WebControls.GridView.SortDirection%2A>属性。  
  
 <xref:System.Web.UI.WebControls.GridView>控件提供可用于进行排序时执行自定义操作的多个事件。 下表列出了可用的事件。  
  
|事件|描述|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.Sorted>|在单击用于列排序的超链接时，但在 <xref:System.Web.UI.WebControls.GridView> 控件对相应的排序操作进行处理之后发生。 此事件通常用于在用户单击超链接以便对列进行排序之后执行的任务。|  
|<xref:System.Web.UI.WebControls.GridView.Sorting>|在单击用于列排序的超链接时，但在 <xref:System.Web.UI.WebControls.GridView> 控件对相应的排序操作进行处理之前发生。 若要取消排序操作或执行自定义排序例程，通常使用此事件。|  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>属性中启用排序<xref:System.Web.UI.WebControls.GridView>控制当使用自动生成的列。  
  
 [!code-aspx-csharp[GridViewAllowSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowSorting/CS/gridviewallowsortingcs.aspx#1)]
 [!code-aspx-vb[GridViewAllowSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowSorting/VB/gridviewallowsortingvb.aspx#1)]  
  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>属性中启用排序<xref:System.Web.UI.WebControls.GridView>控制<xref:System.Web.UI.WebControls.GridView.Columns%2A>定义集合。 以编程方式将图像添加到以指示排序方向正在排序的列的标头。 必须提供自己的映像才能运行此示例。  
  
 [!code-aspx-csharp[GridViewAllowSortingColumns#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowSortingColumns/CS/GridViewAllowSortingColumnscs.aspx#1)]
 [!code-aspx-vb[GridViewAllowSortingColumns#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowSortingColumns/VB/GridViewAllowSortingColumnsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortExpression" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlternatingRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ AlternatingRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，使用该对象可以设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的交替数据行的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用，该对象表示 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中交替数据行的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>属性来控制数据中交替行的外观<xref:System.Web.UI.WebControls.GridView>控件。 将数据行时设置此属性，之间交替显示<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>设置和<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>设置。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。 可以使用以下方法之一，以声明方式设置属性：  
  
-   将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `AlternatingRowStyle-ForeColor`)。  
  
-   嵌套`<AlternatingRowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。  
  
 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `AlternatingRowStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>属性以声明方式定义的交替中的数据行的样式<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowStyle/CS/gridviewrowstylecs.aspx#1)]
 [!code-aspx-vb[GridViewRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowStyle/VB/gridviewrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumns">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateColumns { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否为数据源中的每个字段自动创建绑定字段。</summary>
        <value>
          <see langword="true" /> 表示为数据源中的每个字段自动创建绑定字段；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性设置为`true`、<xref:System.Web.UI.WebControls.AutoGeneratedField>对象将自动创建为数据源中的每个字段。 每个字段则显示为中的列<xref:System.Web.UI.WebControls.GridView>字段在数据源中出现的顺序控制。 此选项可以方便地在数据源; 中显示每个字段但是，你具有有限的自动生成的列字段如何显示或行为的控制。  
  
 而不是让<xref:System.Web.UI.WebControls.GridView>控件自动生成列字段，您可以手动定义列字段，通过设置<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性`false`，然后创建一个自定义`Columns`集合。 除了绑定的列字段，你还可以显示按钮列字段、 复选框列字段、 命令字段、 超链接列字段、 某一图像字段，或基于你自己的自定义模板列字段。  
  
 你也可以组合使用自动生成的列字段的显式声明的列字段。 同时使用时，显式声明的列字段自动生成的列字段后跟第一次，呈现。 不会自动生成的绑定的列字段添加到<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。 有关详情，请参阅<xref:System.Web.UI.WebControls.GridView.Columns%2A>。  
  
 如果将此属性设置为`true`并设置<xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A>为模型类型，属性<xref:System.Web.DynamicData.DynamicField>生成控件。 如果你未设置<xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A>属性，<xref:System.Web.UI.WebControls.BoundField>生成控件。 如果不希望<xref:System.Web.DynamicData.DynamicField>控件，可以使用以下选项：  
  
-   设置<xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>属性`null`中`Page_Load`事件处理程序。 在这种情况下，<xref:System.Web.UI.WebControls.BoundField>生成控件。  
  
-   编写自定义代码来自动创建和分配你自己生成字段<xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>类并将它的实例分配给该控件。  
  
-   将 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 设置为 `false`。 在这种情况下，将生成没有字段，且必须手动指定字段，如使用控件<xref:System.Web.UI.WebControls.BoundField>或<xref:System.Web.UI.WebControls.ImageField>。  
  
-   不要设置 <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> 属性。 在这种情况下，<xref:System.Web.UI.WebControls.BoundField>生成控件。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性自动创建中的字段绑定的列<xref:System.Web.UI.WebControls.GridView>为数据源中的每个字段的控件。  
  
 [!code-aspx-csharp[GridViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSimple/CS/displaycustomers.aspx#1)]
 [!code-aspx-vb[GridViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSimple/VB/displaycustomers.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDeleteButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateDeleteButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDeleteButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateDeleteButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateDeleteButton { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示每个数据行都带有“删除”按钮的 <see cref="T:System.Web.UI.WebControls.CommandField" /> 字段列是否自动添加到 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件。</summary>
        <value>
          <see langword="true" /> 表示自动添加在每个数据行都带有“删除”按钮的 <see cref="T:System.Web.UI.WebControls.CommandField" /> 字段列；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当支持删除一个数据源控件绑定到<xref:System.Web.UI.WebControls.GridView>控件，<xref:System.Web.UI.WebControls.GridView>控件可以充分利用数据源控件的功能并提供自动删除功能。  
  
> [!NOTE]
>  用于数据源控件删除数据，它必须配置中删除数据。 若要配置数据源控件删除记录，请参阅特定数据源控件的文档。  
  
 当<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>属性设置为`true`，某一列 (由表示<xref:System.Web.UI.WebControls.CommandField>对象) 与删除按钮为每个数据行自动添加到<xref:System.Web.UI.WebControls.GridView>控件。 永久单击删除按钮的行从数据源中删除该记录。  
  
> [!NOTE]
>  你还必须设置<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性来标识的键字段或字段的数据源的自动删除功能工作。  
  
 <xref:System.Web.UI.WebControls.GridView>控件提供可用于在删除某一行时执行自定义操作的多个事件。 下表列出了可用的事件。  
  
|事件|描述|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleted>|单击某一行的删除按钮，但之后时发生<xref:System.Web.UI.WebControls.GridView>控件从数据源中删除记录。 此事件通常用于检查删除操作的结果。|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleting>|单击某一行的删除按钮，但之前时发生<xref:System.Web.UI.WebControls.GridView>控件从数据源中删除记录。 此事件通常用于取消删除操作。|  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>属性来启用的自动删除功能<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-aspx-vb[GridViewEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateEditButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateEditButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateEditButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateEditButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateEditButton { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示每个数据行都带有“编辑”按钮的 <see cref="T:System.Web.UI.WebControls.CommandField" /> 字段列是否自动添加到 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件。</summary>
        <value>
          <see langword="true" /> 表示自动添加在每个数据行都带有“编辑”按钮的 <see cref="T:System.Web.UI.WebControls.CommandField" /> 字段列；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当支持更新的数据源控件绑定到<xref:System.Web.UI.WebControls.GridView>控件，<xref:System.Web.UI.WebControls.GridView>控件可以充分利用数据源控件的功能并提供自动更新功能。  
  
> [!NOTE]
>  用于数据源控件更新数据，它必须配置来更新数据。 若要配置一个数据源控件，以更新记录，请参阅特定数据源控件的文档。  
  
 当<xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>属性设置为`true`，某一列 (由表示<xref:System.Web.UI.WebControls.CommandField>对象) 有一个编辑按钮，为每个数据行自动添加到<xref:System.Web.UI.WebControls.GridView>控件。 单击某行编辑按钮使该行进入编辑模式。 当行处于编辑模式，每个列字段不是只读的行中显示相应的输入的控件，如<xref:System.Web.UI.WebControls.TextBox>控件，该字段的数据类型。 这允许用户修改字段的值。  
  
 单击时，编辑按钮是也替换为更新按钮和取消按钮。 单击更新按钮使用任何值更改来更新数据源中的行，并返回要显示模式的行。 单击取消按钮放弃任何值更改，并返回要显示模式的行。  
  
> [!NOTE]
>  你可以以编程方式将某行处于编辑模式通过设置<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>与行的索引的属性。 若要以编程方式退出编辑模式，请设置<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>为-1 的属性。  
  
 使用内置的更新功能时，必须设置<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>使用逗号分隔的字段列表的属性名称以标识主键字段或字段的数据源; 否则，内置的更新功能将不能更新正确的记录。 在使用自动生成字段列 (通过设置<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性`true`)，则<xref:System.Web.UI.WebControls.GridView>控件会自动确保对应的字段或字段中指定的自动生成的字段列<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性是只读的。  
  
 你可以控制使用处于编辑模式的行的外观<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>属性。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。  
  
 <xref:System.Web.UI.WebControls.GridView>控件提供可用于更新行时执行自定义操作的多个事件。 下表列出了可用的事件。  
  
|事件|描述|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|单击某一行的取消按钮，但之前时发生<xref:System.Web.UI.WebControls.GridView>控件取消退出编辑模式。 此事件通常用于停止取消操作。|  
|<xref:System.Web.UI.WebControls.GridView.RowEditing>|发生在单击某一行的“编辑”按钮以后，<xref:System.Web.UI.WebControls.GridView> 控件进入编辑模式之前。 此事件通常用于取消编辑操作。|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdated>|发生在单击某一行的“更新”按钮，并且 <xref:System.Web.UI.WebControls.GridView> 控件对该行进行更新之后。 此事件通常用于检查更新操作的结果。|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdating>|发生在单击某一行的“更新”按钮以后，<xref:System.Web.UI.WebControls.GridView> 控件对该行进行更新之前。 此事件通常用于取消更新操作。|  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>属性来启用的自动编辑功能<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-aspx-vb[GridViewEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateSelectButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateSelectButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateSelectButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateSelectButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateSelectButton { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示每个数据行都带有“选择”按钮的 <see cref="T:System.Web.UI.WebControls.CommandField" /> 字段列是否自动添加到 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件。</summary>
        <value>
          <see langword="true" /> 表示自动添加在每个数据行都带有“选择”按钮的 <see cref="T:System.Web.UI.WebControls.CommandField" /> 字段列；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A>属性设置为`true`，某一列 (由表示<xref:System.Web.UI.WebControls.CommandField>对象) 与选择按钮为每个数据行自动添加到<xref:System.Web.UI.WebControls.GridView>控件。 为行控件中选择该行，请单击选择按钮，这会设置<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>的行的索引的属性。 若要检索<xref:System.Web.UI.WebControls.GridViewRow>对象，表示所选的行，使用<xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>属性。 你还可以的主键值为所选记录使用<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>属性。 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>属性包含的值中指定的键字段<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性。  
  
> [!NOTE]
>  你可以以编程方式选择行，通过设置<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>属性。 若要取消行的选择，<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>为-1 的属性。  
  
 你可以通过使用来控制所选行的外观<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>属性。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。  
  
 <xref:System.Web.UI.WebControls.GridView>控件提供可用于选择行时执行自定义操作的多个事件。 下表列出了可用的事件。  
  
|事件|描述|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|发生在单击某一行的“选择”按钮，<xref:System.Web.UI.WebControls.GridView> 控件对相应的选择操作进行处理之后。 此事件通常用于执行某项任务后在控件中选择行时。|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|发生在单击某一行的“选择”按钮以后，<xref:System.Web.UI.WebControls.GridView> 控件对相应的选择操作进行处理之前。 此事件通常用于取消选择操作。|  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A>属性来启用的自动选择功能<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件的背景中显示的图像的 URL。</summary>
        <value>要在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件的背景中显示的图像的 URL。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.BackImageUrl%2A>属性指定的背景中显示的图像 URL<xref:System.Web.UI.WebControls.GridView>控件。  
  
> [!NOTE]
>  如果指定的映像小于<xref:System.Web.UI.WebControls.GridView>控件，该图像平铺来填充的背景。 如果图像大于控件，裁剪图像。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.BackImageUrl%2A>属性背景中显示的自定义映像<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewBackImageUrl/CS/gridviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[GridViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewBackImageUrl/VB/gridviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As GridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridViewRow ^ BottomPagerRow { System::Web::UI::WebControls::GridViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 对象，该对象表示 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的底部页导航行。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.GridViewRow" />，表示控件中的底部页导航行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 启用分页后 (通过设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`)，一个称为的页导航行附加行会自动显示在<xref:System.Web.UI.WebControls.GridView>控件。 页导航行包含允许用户导航至其他页面，并可以显示在顶部、 底部，或同时的顶部和底部的控件的控件。 使用<xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A>属性以编程方式访问<xref:System.Web.UI.WebControls.GridViewRow>对象，表示中的底部页导航行<xref:System.Web.UI.WebControls.GridView>控件。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A>属性是之后才可用<xref:System.Web.UI.WebControls.GridView>控件创建中的底部页导航行<xref:System.Web.UI.WebControls.GridView.RowCreated>事件。  
  
 当你需要以编程方式操作底部页导航行，例如在添加自定义内容时，通常使用此属性。 对任何修改<xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A>属性必须执行后<xref:System.Web.UI.WebControls.GridView>控件已经被呈现; 否则为<xref:System.Web.UI.WebControls.GridView>控件将覆盖所有更改。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A>属性来访问中的底部页导航行<xref:System.Web.UI.WebControls.GridView>控件。 <xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A>属性用于检索<xref:System.Web.UI.WebControls.DropDownList>控件从的页导航行。  
  
 [!code-aspx-csharp[GridViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件的 HTML 标题元素中呈现的文本。 提供此属性的目的是使辅助技术设备的用户更易于访问控件。</summary>
        <value>一个字符串，表示要在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件的 HTML 标题元素中呈现的文本。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.Caption%2A>属性来指定要呈现在一个 HTML 标题元素中的文本<xref:System.Web.UI.WebControls.GridView>控件。 你指定的文本提供了辅助技术设备可以用于以使控件更易于访问的表的说明。 你还可以指定通过使用呈现的 HTML 标题元素的位置<xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A>属性。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.Caption%2A>属性指定的标题<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCaption/CS/gridviewcaptioncs.aspx#1)]
 [!code-aspx-vb[GridViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCaption/VB/gridviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.CaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowHeaderColumn" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的 HTML 标题元素的水平或垂直位置。 提供此属性的目的是使辅助技术设备的用户更易于访问控件。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 值之一。 默认值是 <see langword="TableCaptionAlign.NotSet" />，它使用浏览器的默认设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A>属性来指定 HTML caption 元素中的水平或垂直位置<xref:System.Web.UI.WebControls.GridView>控件。 提供此属性的目的是使辅助技术设备的用户更易于访问控件。  
  
 此属性使用其中一个设置<xref:System.Web.UI.WebControls.TableCaptionAlign>枚举值。 下表列出可能的值。  
  
|“值”|描述|  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|标题元素和表的底部对齐。|  
|`TableCaptionAlign.Left`|标题元素和表的左边对齐。|  
|`TableCaptionAlign.NotSet`|未设置标题元素的对齐方式。|  
|`TableCaptionAlign.Right`|标题元素和表的右边对齐。|  
|`TableCaptionAlign.Top`|标题元素和表的顶部对齐。|  
  
> [!NOTE]
>  当此属性设置为`TableCaptionAlign.NotSet`，则使用的浏览器的默认值。  
  
 若要指定 HTML 标题元素的文本，请使用<xref:System.Web.UI.WebControls.GridView.Caption%2A>属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A>属性指定的标题元素<xref:System.Web.UI.WebControls.GridView>控件与该控件的顶部对齐。  
  
 [!code-aspx-csharp[GridViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCaption/CS/gridviewcaptioncs.aspx#1)]
 [!code-aspx-vb[GridViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCaption/VB/gridviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的值不是 <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 枚举值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Caption" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowHeaderColumn" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格的内容和单元格的边框之间的空间量。</summary>
        <value>单元格的内容和单元格的边框之间的空间量（以像素为单位）。 默认值为 -1，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.CellPadding%2A>属性控制单元格的内容和单元格的边框之间的间距。 指定的填充量添加到单元格的所有四个边。  
  
 同一列中的所有单元格<xref:System.Web.UI.WebControls.GridView>控件具有相同的宽度。 填充量应用于宽的单元格和列中的所有其他单元格有此单元格的宽度。 同样，在同一行中的所有单元格具有高度相同。 填充量应用于行中最高的单元格和行中的所有其他单元格具有此单元格的高度。 不能指定单个单元格的大小。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.CellPadding%2A>属性以声明方式设置单元格的内容和单元格的边框之间的空间量。  
  
 [!code-aspx-csharp[GridViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCellPadding/CS/gridviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[GridViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCellPadding/VB/gridviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格间的空间量。</summary>
        <value>单元格之间的空间量（以像素为单位）。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.CellSpacing%2A>属性控制中的相邻单元格之间的间距<xref:System.Web.UI.WebControls.GridView>控件。 在垂直方向和水平应用此间距。 该单元格间距是为整个控件统一。 不能指定行或列之间的单个单元格间距。  
  
> [!NOTE]
>  如果将此属性设置为一个值大于 0 的虚拟机和模板，然后设置<xref:System.Web.UI.WebControls.GridView.GridLines%2A>属性到一个值，显示单元格边框，间隔显示相邻的单元格边框之间。 在此情况下，<xref:System.Web.UI.WebControls.Table.CellSpacing%2A>属性控制的差异大小。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.CellSpacing%2A>属性以声明方式设置的单元格之间的空间量<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCellPadding/CS/gridviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[GridViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCellPadding/VB/gridviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="public virtual string[] ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ClientIDRowSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ClientIDRowSuffix As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ ClientIDRowSuffix { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据字段的名称，这些数据字段的值附加到 <see cref="P:System.Web.UI.Control.ClientID" /> 属性值，以便唯一标识数据绑定控件的每个实例。</summary>
        <value>数据字段的名称，在 ASP.NET 生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时，这些数据字段的值用于唯一标识数据绑定控件的每个实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要防止命名冲突的多行中呈现的控件的多个实例时<xref:System.Web.UI.WebControls.GridView>控件，ASP.NET 生成唯一<xref:System.Web.UI.Control.ClientID%2A>每个实例的值。 你指定如何<xref:System.Web.UI.Control.ClientID%2A>通过设置生成值<xref:System.Web.UI.Control.ClientIDMode%2A>属性。 如果你设置<xref:System.Web.UI.Control.ClientIDMode%2A>属性<xref:System.Web.UI.ClientIDMode.Predictable>，ASP.NET 将生成<xref:System.Web.UI.Control.ClientID%2A>由派生自或多个数据字段中指定的后缀<xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A>。 如果<xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A>未设置，后缀是序列号。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientIDRowSuffixDataKeys As DataKeyArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::DataKeyArray ^ ClientIDRowSuffixDataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取数据值，在 ASP.NET 生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时，这些数据值用于唯一标识数据绑定控件的每个实例。</summary>
        <value>数据值，在 ASP.NET 生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时，这些数据值用于唯一标识数据绑定控件的每个实例。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataControlFieldCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataControlFieldCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.Columns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Columns As DataControlFieldCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataControlFieldCollection ^ Columns { System::Web::UI::WebControls::DataControlFieldCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlFieldCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 控件中列字段的 <see cref="T:System.Web.UI.WebControls.GridView" /> 对象的集合。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.DataControlFieldCollection" />，包含 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中所有列字段。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列字段表示中的列<xref:System.Web.UI.WebControls.GridView>控件。 <xref:System.Web.UI.WebControls.GridView.Columns%2A>属性 （集合） 用于存储获取呈现中的所有显式声明的列字段<xref:System.Web.UI.WebControls.GridView>控件。 你还可以使用<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合以编程方式管理列字段的集合。  
  
> [!NOTE]
>  显式声明的列字段可以与自动生成的列字段结合使用。 同时使用时，显式声明的列字段自动生成的列字段后跟第一次，呈现。 不会自动生成的列字段添加到<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。  
  
 列字段显示在<xref:System.Web.UI.WebControls.GridView>控件中将显示列字段的顺序<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。 下表显示不同的列字段类派生自<xref:System.Web.UI.WebControls.DataControlField>类，并可在<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。  
  
|列字段类型|描述|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundField>|数据源中显示的字段的值。 这是默认列类型的<xref:System.Web.UI.WebControls.GridView>控件。|  
|<xref:System.Web.UI.WebControls.ButtonField>|显示在每个项的命令按钮<xref:System.Web.UI.WebControls.GridView>控件。 这使您可以创建自定义按钮控件，如添加或删除按钮一列。|  
|<xref:System.Web.UI.WebControls.CheckBoxField>|显示一个复选框中每个项<xref:System.Web.UI.WebControls.GridView>控件。 此列字段类型通常用于显示具有一个布尔值的字段。|  
|<xref:System.Web.UI.WebControls.CommandField>|显示预定义的命令按钮来执行选择、 编辑或删除操作。|  
|<xref:System.Web.UI.WebControls.HyperLinkField>|为超链接，在数据源中显示的字段的值。 此列字段类型可让你将第二个字段绑定到超链接的 URL。|  
|<xref:System.Web.UI.WebControls.ImageField>|显示中每个项图像<xref:System.Web.UI.WebControls.GridView>控件。|  
|<xref:System.Web.UI.WebControls.TemplateField>|显示用户定义的内容中每个项<xref:System.Web.UI.WebControls.GridView>控件，根据指定的模板。 此列字段类型可让你创建自定义列字段。|  
  
 尽管您可以以编程方式添加到的列字段<xref:System.Web.UI.WebControls.GridView.Columns%2A>很方便地列出中以声明方式的列字段的集合，<xref:System.Web.UI.WebControls.GridView>控制，然后使用<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>的每个列字段以显示或隐藏列的每个字段的属性。  
  
 如果<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>列字段的属性设置为`false`，列才会显示在<xref:System.Web.UI.WebControls.GridView>控件和列的数据不会进行一次往返过程向客户端。 如果您希望为不可见，以进行往返行程的列的数据，将添加到的字段名称<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性。  
  
   
  
## Examples  
 下面的示例演示如何以填充<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合以声明方式。  
  
 [!code-aspx-csharp[GridViewColumnFields#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewColumnFields/CS/gridviewcolumnfieldscs.aspx#1)]
 [!code-aspx-vb[GridViewColumnFields#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewColumnFields/VB/gridviewcolumnfieldsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BoundField" />
        <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlFieldCollection" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
        <altmember cref="T:System.Web.UI.WebControls.ImageField" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
      </Docs>
    </Member>
    <Member MemberName="ColumnsGenerator">
      <MemberSignature Language="C#" Value="public System.Web.UI.IAutoFieldGenerator ColumnsGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IAutoFieldGenerator ColumnsGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ColumnsGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnsGenerator As IAutoFieldGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::IAutoFieldGenerator ^ ColumnsGenerator { System::Web::UI::IAutoFieldGenerator ^ get(); void set(System::Web::UI::IAutoFieldGenerator ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.IAutoFieldGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个控件，该控件将自动为使用 ASP.NET 动态数据功能的 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件生成列。</summary>
        <value>将自动为使用 ASP.NET 动态数据功能的 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件生成列的控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 为了在页中使用 ASP.NET 动态数据功能，您必须添加<xref:System.Web.DynamicData.DynamicDataManager>到页面的控件。 这使 ASP.NET 动态数据功能的数据绑定控件在页中，如<xref:System.Web.UI.WebControls.GridView>控件。 若要启用个人<xref:System.Web.UI.WebControls.GridView>控件使用动态数据功能，你必须将其与相关联<xref:System.Web.DynamicData.DynamicDataManager>通过调用控件<xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=nameWithType>方法期间`Page_Init`事件。 此方法会自动设置<xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>属性<xref:System.Web.DynamicData.DynamicDataManager>对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAutoGeneratedColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn(class System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAutoGeneratedColumn (fieldProperties As AutoGeneratedFieldProperties) As AutoGeneratedField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::AutoGeneratedField ^ CreateAutoGeneratedColumn(System::Web::UI::WebControls::AutoGeneratedFieldProperties ^ fieldProperties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This is kept for backward compatibility - this API is no more used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.AutoGeneratedField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldProperties" Type="System.Web.UI.WebControls.AutoGeneratedFieldProperties" />
      </Parameters>
      <Docs>
        <param name="fieldProperties">一个 <see cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" />，表示要创建的自动生成的列字段的属性。</param>
        <summary>创建一个自动生成的列字段。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" />，表示由 <paramref name="fieldProperties" /> 参数指定的自动生成的列字段。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn%2A>方法用于创建自动生成的列字段时<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性设置为`true`。 自动生成的列字段的属性通过指定<xref:System.Web.UI.WebControls.AutoGeneratedFieldProperties>对象中包含`fieldProperties`参数。  
  
> [!NOTE]
>  此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">一个 <see cref="T:System.Collections.IEnumerable" />，包含 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件的数据源。</param>
        <param name="dataBinding">
          <see langword="true" /> 指示子控件绑定到数据；否则为 <see langword="false" />。</param>
        <summary>使用指定数据源创建用于呈现 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件的控件层次结构。</summary>
        <returns>创建的行数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateChildControls%2A>方法用于创建的控件层次结构<xref:System.Web.UI.WebControls.GridView>控件。  
  
> [!NOTE]
>  此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="dataSource" /> 返回空的 <see cref="T:System.Web.UI.DataSourceView" />。  - 或 -  <paramref name="dataSource" /> 未实现 <see cref="T:System.Collections.ICollection" /> 接口，无法返回 <see cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />。  - 或 -  <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging" /> 为 <see langword="true" />，<paramref name="dataSource" /> 没有实现 <see cref="T:System.Collections.ICollection" /> 接口，无法执行数据源分页。  - 或 -  <paramref name="dataSource" /> 未实现 <see cref="T:System.Collections.ICollection" /> 接口，<paramref name="dataBinding" /> 设置为 <see langword="false" />。</exception>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateChildTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateChildTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateChildTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateChildTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateChildTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个新的子表。</summary>
        <returns>总是返回一个表示子表的新的 <see cref="T:System.Web.UI.WebControls.Table" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateChildTable%2A>方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.GridView>控件创建子表。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CreateColumns">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection CreateColumns (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection CreateColumns(class System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateColumns (dataSource As PagedDataSource, useDataSource As Boolean) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ICollection ^ CreateColumns(System::Web::UI::WebControls::PagedDataSource ^ dataSource, bool useDataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">一个 <see cref="T:System.Web.UI.WebControls.PagedDataSource" />，表示数据源。</param>
        <param name="useDataSource">如果使用 <c>dataSource</c> 参数指定的数据源，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>创建用来构建控件层次结构的列字段集。</summary>
        <returns>一个 <see cref="T:System.Collections.ICollection" />，包含用来构建控件层次结构的字段。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性设置为`true`，绑定的列字段将自动创建为数据源中的每个字段。 每个绑定的列字段则显示为中的行<xref:System.Web.UI.WebControls.GridView>字段在数据源中出现的顺序控制。 <xref:System.Web.UI.WebControls.GridView.CreateColumns%2A>方法用于创建自动生成的列字段。  
  
> [!NOTE]
>  此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为控件创建默认样式。</summary>
        <returns>表示控件样式的 <see cref="T:System.Web.UI.WebControls.Style" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateControlStyle%2A>方法用于创建控件的默认样式。  
  
> [!NOTE]
>  此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 对象，该对象包含传递到数据源进行处理的参数。</summary>
        <returns>一个 <see cref="T:System.Web.UI.DataSourceSelectArguments" />，包含传递到数据源进行处理的参数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments%2A>方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.GridView>控件创建<xref:System.Web.UI.DataSourceSelectArguments>对象，其中包含自变量传递到数据源。 在此实现中，<xref:System.Web.UI.DataSourceSelectArguments>对象包含分页操作的自变量。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在扩展<see cref="T:System.Web.UI.WebControls.GridView" />类，你可以重写此方法以指定你自己的值传递给数据源。</para>
        </block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.GridViewRow CreateRow (int rowIndex, int dataSourceIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.GridViewRow CreateRow(int32 rowIndex, int32 dataSourceIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (rowIndex As Integer, dataSourceIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As GridViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::GridViewRow ^ CreateRow(int rowIndex, int dataSourceIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="dataSourceIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="rowIndex">要创建的行的索引。</param>
        <param name="dataSourceIndex">要绑定到行的数据源项的索引。</param>
        <param name="rowType">
          <see cref="T:System.Web.UI.WebControls.DataControlRowType" /> 值之一。</param>
        <param name="rowState">
          <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 值之一。</param>
        <summary>在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中创建行。</summary>
        <returns>使用指定参数创建的 <see cref="T:System.Web.UI.WebControls.GridViewRow" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateRow%2A>方法用于创建中的行<xref:System.Web.UI.WebControls.GridView>控件。  
  
> [!NOTE]
>  此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。 数据绑定<xref:System.Web.UI.WebControls.GridView>控件自动生成的显示目标数据所需的行。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将数据源绑定到 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件。 不能继承此方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.DataBind>方法将数据绑定到数据源从<xref:System.Web.UI.WebControls.GridView>控件。 此方法会解析所有活动模板中的控件的数据绑定表达式。  
  
 <xref:System.Web.UI.WebControls.GridView.DataBind%2A>如果自动调用方法<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>属性<xref:System.Web.UI.WebControls.GridView>控件是指一个有效的数据源控件。  
  
 而不是手动调用<xref:System.Web.UI.WebControls.GridView.DataBind%2A>方法，你可以使用模型绑定，具有你<xref:System.Web.UI.WebControls.GridView.DataBind%2A>通过设置<xref:System.Web.UI.WebControls.DataBoundControl.SelectMethod%2A>属性返回的数据的方法的名称<xref:System.Web.UI.WebControls.GridView>。 <xref:System.Web.UI.WebControls.GridView>然后从选择的方法返回的数据自动填充。 模型绑定可以简化你的代码用于使用数据。 有关详细信息，请参阅[模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.DataBind>方法将绑定到数据源<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewDataBind/CS/gridviewdatabindcs.aspx#1)]
 [!code-aspx-vb[GridViewDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewDataBind/VB/gridviewdatabindvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个数组，该数组包含了显示在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的项的主键字段的名称。</summary>
        <value>一个数组，其中包含了显示在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的项的主键字段的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性以指定字段或表示数据源的主键字段。 你应仅将此属性设置为或多个唯一地标识每个行; 所需的字段例如，如果唯一的整数值的 ID 列标识的每一行。 必须设置<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性顺序自动更新和删除的功能<xref:System.Web.UI.WebControls.GridView>控制工作。 若要指定要更新或删除的行情况下，这些键字段的值传递到数据源控件。  
  
 如果你需要检索密钥值更新时数据，也可以删除行，使用`Keys`任一属性<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>或<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>类。 例如，`e.Keys[0]`保留的值中的第一个数据密钥<xref:System.Web.UI.WebControls.GridView.RowUpdating>或<xref:System.Web.UI.WebControls.GridView.RowDeleting>事件处理程序。  
  
 如果你需要选择行时检索数据的密钥值，请使用<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>属性。  
  
 当<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>设置属性，<xref:System.Web.UI.WebControls.GridView>控件自动填充其<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>集合的值从指定的字段或字段，它提供一种简便方式访问的每个行的主键。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>控件将这些键字段值存储中的控件状态。 如果这些值包含敏感信息，强烈建议你通过设置启用视图状态加密<xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>属性`ViewStateEncryptionMode.Always`。  
  
 当你使用自动生成字段列 (通过设置<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性`true`)，则<xref:System.Web.UI.WebControls.GridView>控件，可以确保在中指定的列或多个字段对应<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性是只读的。  
  
 如果<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>列字段的属性设置为`false`，列才会显示在<xref:System.Web.UI.WebControls.GridView>控件和列的数据不会进行一次往返过程向客户端。 如果您希望为不可见要向客户端提供的列的数据，将添加到的字段名称<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性指定数据源的键字段。 在示例中，`DataKeyNames`属性`GridView`标记中的元素使用逗号分隔这些名称指定两个键字段。 若要运行此示例中，创建包含以下网站：  
  
-   连接到 AdventureWorksLT 示例数据库和名为的连接字符串`AdventureWorksLTConnectionString`。 有关如何设置 AdventureWorksLT 示例数据库的信息，请参阅[如何： 设置 AdventureWorksLT 示例数据库的 ASP.NET 开发](http://msdn.microsoft.com/library/2baad633-9d63-49cc-a6b2-917cafd35356)。  
  
-   LINQ SQL 数据上下文类，该类名为`AdventureWorksLTDataClassesDataContext`。 数据上下文必须具有 SalesOrderDetails 表的类。 有关如何创建 LINQ SQL 类的信息，请参阅[LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)。  
  
 [!code-aspx-csharp[GridViewEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-aspx-vb[GridViewEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="T:System.Web.UI.WebControls.DataKeyArray" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeys" />
      </Docs>
    </Member>
    <Member MemberName="DataKeys">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.DataKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKeys As DataKeyArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKeyArray ^ DataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.DataKeys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Web.UI.WebControls.DataKey" /> 对象集合，这些对象表示 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的每一行的数据键值。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.DataKeyArray" />，其中包含 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中每一行的数据键。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>设置属性，<xref:System.Web.UI.WebControls.GridView>控件自动创建<xref:System.Web.UI.WebControls.DataKey>控件中的每一行的对象。 <xref:System.Web.UI.WebControls.DataKey>对象包含的字段或字段中指定的值<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性。 <xref:System.Web.UI.WebControls.DataKey>随后会将对象添加到控件的<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>集合。 使用<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>属性，以检索<xref:System.Web.UI.WebControls.DataKey>对象中的特定数据行<xref:System.Web.UI.WebControls.GridView>控件。  
  
> [!NOTE]
>  你可以使用<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>属性，以检索<xref:System.Web.UI.WebControls.DataKey>对象当前所选的行。 你还可以使用<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>属性直接检索当前所选行的数据密钥值。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>属性来确定中所选行的数据键值<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewDataKeys#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewDataKeys/CS/gridviewdatakeyscs.aspx#1)]
 [!code-aspx-vb[GridViewDataKeys#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewDataKeys/VB/gridviewdatakeysvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="T:System.Web.UI.WebControls.DataKeyArray" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为了删除数据要调用的方法的名称。</summary>
        <value>方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性会导致模型绑定要用作数据绑定方法。  
  
 在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRow">
      <MemberSignature Language="C#" Value="public virtual void DeleteRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteRow (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteRow(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">要删除行的索引。</param>
        <summary>从数据源中删除位于指定索引位置的记录。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.DeleteRow%2A>方法，用于以编程方式从数据源中删除指定索引处的记录。 当您需要删除来自外部的记录通常使用此方法<xref:System.Web.UI.WebControls.GridView>控制，例如页上的其他控件。 调用此方法也会引发<xref:System.Web.UI.WebControls.GridView.RowDeleted>和<xref:System.Web.UI.WebControls.GridView.RowDeleting>事件。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.DeleteRow%2A>方法，用于以编程方式删除中的记录<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewDeleteRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewDeleteRow/CS/GridViewDeleteRowcs.aspx#1)]
 [!code-aspx-vb[GridViewDeleteRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewDeleteRow/VB/GridViewDeleteRowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.WebControls.GridView" /> 控件绑定到数据源控件。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Web.UI.WebControls.GridView" /> 控件绑定到的数据源控件不支持删除操作，或者没有为数据源定义删除命令。</exception>
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="EditIndex">
      <MemberSignature Language="C#" Value="public virtual int EditIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EditIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要编辑的行的索引。</summary>
        <value>要编辑的行的从零开始的索引。 默认值为 -1，指示没有正在编辑的行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 是从零开始的行索引 （第一行是零）。  
  
 仅在以下情况下，这涉及到特定事件的处理程序中通常使用此属性：  
  
-   你想<xref:System.Web.UI.WebControls.GridView>控制在特定行的编辑模式下打开显示的页面的第一个时间。 若要执行此操作，可以设置<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>的处理程序中的属性<xref:System.Web.UI.Control.Load>事件<xref:System.Web.UI.Page>类或<xref:System.Web.UI.WebControls.GridView>控件。  
  
-   你想要知道哪些行已编辑后更新了该行。 若要执行此操作，可以检索的行索引从<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>中的属性<xref:System.Web.UI.WebControls.GridView.RowUpdated>事件处理程序。  
  
-   你正在绑定<xref:System.Web.UI.WebControls.GridView>到通过设置数据源的控件<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>属性以编程方式。 在这种情况下必须设置<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>中的属性<xref:System.Web.UI.WebControls.GridView.RowEditing>和<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>事件处理程序。  
  
 如果你设置<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>属性后回发或处理程序引发的事件中晚于<xref:System.Web.UI.Control.Load>事件，<xref:System.Web.UI.WebControls.GridView>控件可能不进入编辑模式，为指定的行。 如果你读取的其他事件处理程序中的该属性的值，则不保证索引以反映正在编辑的行。  
  
 若要确定用户在哪一行已单击**编辑**按钮或中的超链接之前<xref:System.Web.UI.WebControls.GridView>控件进入编辑模式，您可以检索的行索引从<xref:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex%2A>属性<xref:System.Web.UI.WebControls.GridViewEditEventArgs>中对象<xref:System.Web.UI.WebControls.GridView.RowEditing>事件处理程序。  
  
 若要防止<xref:System.Web.UI.WebControls.GridView>控件进入编辑模式，用户单击后**编辑**按钮或超链接、 集<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewEditEventArgs>对象传递给`true`中<xref:System.Web.UI.WebControls.GridView.RowEditing>事件处理程序。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>属性来确定哪些行已更新后它已在中编辑<xref:System.Web.UI.WebControls.GridView>控件。 显示一条消息来指示更新成功。  
  
 [!code-aspx-csharp[GridViewRows#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRows/CS/gridviewrowscs.aspx#1)]
 [!code-aspx-vb[GridViewRows#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRows/VB/gridviewrowsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的索引小于 -1。</exception>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，使用该对象可以设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中为进行编辑而选中的行的外观。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用，该对象表示 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中正在编辑的行的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>属性来控制正在编辑中的行的外观<xref:System.Web.UI.WebControls.GridView>控件。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。 可以使用以下方法之一，以声明方式设置属性：  
  
-   将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `EditRowStyle-ForeColor`)。  
  
-   嵌套`<EditRowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。  
  
 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `EditRowStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>属性来定义中正在编辑的行的自定义样式<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewEditRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEditRowStyle/CS/gridvieweditrowstylecs.aspx#1)]
 [!code-aspx-vb[GridViewEditRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEditRowStyle/VB/gridvieweditrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，使用该对象可以设置当 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件绑定到不包含任何记录的数据源时会呈现的空数据行的外观。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用，使用该对象可以设置空行的外观。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>属性来控制中的 null 行的外观<xref:System.Web.UI.WebControls.GridView>控件。 当绑定到控件的数据源不包含任何记录，将显示为 null 的行。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。 可以使用以下方法之一，以声明方式设置属性：  
  
-   将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `EmptyDataRowStyle-ForeColor`)。  
  
-   嵌套`<EmptyDataRowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。  
  
 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `EmptyDataRowStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。  
  
   
  
## Examples  
 下面的示例演示如何设置<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>属性以声明方式指定具有浅蓝色背景和红色字体为 null 的行。  
  
 [!code-aspx-csharp[GridViewNullRowTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewNullRowTemplate/CS/gridviewnullrowtemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewNullRowTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewNullRowTemplate/VB/gridviewnullrowtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.GridViewRow))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件绑定到不包含任何记录的数据源时所呈现的空数据行的用户定义内容。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" />，包含空数据行的自定义内容。 默认值为 <see langword="null" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 空数据行显示在<xref:System.Web.UI.WebControls.GridView>控制当绑定到控件的数据源不包含任何记录。 你可以通过定义为空的数据行自己自定义用户界面 (UI)<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>属性。  
  
 若要指定自定义模板为空的数据行，第一次将`<EmptyDataTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.GridView>控件。 然后可以列出在开始和结束之间模板的内容`<EmptyDataTemplate>`标记。 若要控制空数据行的样式，使用<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>属性。 或者，你可以使用内置用户界面为空的数据行通过设置<xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>而不是此属性的属性。  
  
 有关如何以编程方式访问控件的空数据模板中声明的信息，请参阅[如何： 按 ID 访问服务器控件](http://msdn.microsoft.com/library/59964ef8-72ef-4159-9f1a-5b230ff46fb3)。  
  
> [!NOTE]
>  如果这两个<xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>和<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>设置属性，<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>属性优先。  
  
   
  
## Examples  
 下面的示例演示如何定义自定义模板，用于显示的空数据行时<xref:System.Web.UI.WebControls.GridView>控件绑定到数据源不包含任何记录。  
  
 [!code-aspx-csharp[GridViewNullRowTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewNullRowTemplate/CS/gridviewnullrowtemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewNullRowTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewNullRowTemplate/VB/gridviewnullrowtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件绑定到不包含任何记录的数据源时所呈现的空数据行中显示的文本。</summary>
        <value>要在空数据行中显示的文本。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 空数据行显示在<xref:System.Web.UI.WebControls.GridView>控制当绑定到控件的数据源不包含任何记录。 使用<xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>属性来指定要在空的数据行中显示的文本。 若要控制空数据行的样式，使用<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>属性。 或者，可以通过设置定义为空的数据行自己自定义用户界面 (UI)<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>而不是此属性的属性。  
  
> [!NOTE]
>  如果这两个<xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>和<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>设置属性，<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>属性优先。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>属性来指定要在空的数据行中显示的文本。  
  
 [!code-aspx-csharp[GridViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewemptydatatext/CS/gridviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[GridViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewemptydatatext/VB/gridviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示验证程序控件是否会处理在插入或更新操作过程中出现的异常。</summary>
        <value>如果验证程序控件将处理在插入或更新操作过程中出现的异常，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePersistedSelection">
      <MemberSignature Language="C#" Value="public virtual bool EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EnablePersistedSelection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnablePersistedSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePersistedSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示行的选择是基于索引还是数据键值。</summary>
        <value>如果行选择基于数据键值，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果此属性为`false`和选择行时，会显示一个新页面，即使新页中有不同的数据时选择同一行。 如果将此属性设置为`true`时显示中，有不同的数据的页，不选择任何行。 如果你然后返回到所选行的网页，该行仍处于选中状态。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSortingAndPagingCallbacks">
      <MemberSignature Language="C#" Value="public virtual bool EnableSortingAndPagingCallbacks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSortingAndPagingCallbacks" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableSortingAndPagingCallbacks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableSortingAndPagingCallbacks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示客户端回调是否用于排序和分页操作。</summary>
        <value>
          <see langword="true" /> 表示客户端回调用于排序和分页操作；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，当执行排序或分页操作，则<xref:System.Web.UI.WebControls.GridView>控件回发到服务器以执行该操作。 当<xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>属性设置为`true`、 服务客户端上调用来执行排序和分页操作，而不需要将发布回服务器。  
  
> [!NOTE]
>  并非所有浏览器都支持此功能。 若要确定浏览器是否支持此功能，请使用<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>属性。  
  
 中的所有列<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合必须支持此功能正常工作的回调。 如果<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合包含的列，不支持回调，如<xref:System.Web.UI.WebControls.TemplateField>、<xref:System.NotSupportedException>引发异常。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>属性来启用用于排序和分页操作的客户端回调。  
  
 [!code-aspx-csharp[GridViewEnableSortingAndPagingCallbacks#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewenablesortingandpagingcallbacks/CS/gridviewenablesortingandpagingcallbackscs.aspx#1)]
 [!code-aspx-vb[GridViewEnableSortingAndPagingCallbacks#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewenablesortingandpagingcallbacks/VB/gridviewenablesortingandpagingcallbacksvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> 集合包含不支持回发的列，如 <see cref="T:System.Web.UI.WebControls.TemplateField" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, class System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, row As GridViewRow, includeReadOnlyFields As Boolean, includePrimaryKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, System::Web::UI::WebControls::GridViewRow ^ row, bool includeReadOnlyFields, bool includePrimaryKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="includeReadOnlyFields" Type="System.Boolean" />
        <Parameter Name="includePrimaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">用来存储字段值的 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />。</param>
        <param name="row">将从其中检索字段值的 <see cref="T:System.Web.UI.WebControls.GridViewRow" />。</param>
        <param name="includeReadOnlyFields">
          <see langword="true" /> 表示包含只读字段；否则为 <see langword="false" />。</param>
        <param name="includePrimaryKey">
          <see langword="true" /> 表示包含主键字段；否则为 <see langword="false" />。</param>
        <summary>检索在指定行中声明的每个字段的值，并将它们存储在指定的 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 对象中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A>方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.GridView>要检索的声明中指定的行的每个字段的值控件`row`参数。 你可以指定提取的值使用是否包含只读字段和键字段`includeReadOnlyFields`和`includePrimaryKey`参数，分别。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在扩展<see cref="T:System.Web.UI.WebControls.GridView" />类，你可以重写此方法以创建你自己的例程来检索字段值。</para>
        </block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As GridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridViewRow ^ FooterRow { System::Web::UI::WebControls::GridViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示 <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 控件中的脚注行的 <see cref="T:System.Web.UI.WebControls.GridView" /> 对象。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.GridViewRow" />，表示 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的脚注行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.FooterRow%2A>属性以编程方式访问<xref:System.Web.UI.WebControls.GridViewRow>对象，表示中的页脚行<xref:System.Web.UI.WebControls.GridView>控件。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.FooterRow%2A>属性是之后才可用<xref:System.Web.UI.WebControls.GridView>控件创建中的页脚行<xref:System.Web.UI.WebControls.GridView.RowCreated>事件。  
  
 当你需要以编程方式操作页脚行中的，例如在添加自定义内容时，通常使用此属性。 对任何修改<xref:System.Web.UI.WebControls.GridView.FooterRow%2A>属性必须执行后<xref:System.Web.UI.WebControls.GridView>控件已经被呈现; 否则为<xref:System.Web.UI.WebControls.GridView>控件将覆盖所有更改。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.FooterRow%2A>属性显示在页脚行中的排序方向。  
  
 [!code-aspx-csharp[GridViewFooterRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewfooterrow/CS/gridviewfooterrowcs.aspx#1)]
 [!code-aspx-vb[GridViewFooterRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewfooterrow/VB/gridviewfooterrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.ShowFooter" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，使用该对象可以设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中脚注行的外观。</summary>
        <value>一个对表示 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 控件中脚注行的样式的 <see cref="T:System.Web.UI.WebControls.GridView" /> 的引用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>属性来控制中的页脚行的外观<xref:System.Web.UI.WebControls.GridView>控件。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。 可以使用以下方法之一，以声明方式设置属性：  
  
-   将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `FooterStyle-ForeColor`)。  
  
-   嵌套`<FooterStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。  
  
 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `FooterStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>属性来定义自定义样式中的页脚行<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-aspx-vb[GridViewShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackResult();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回以控件为目标的回调事件的结果。</summary>
        <returns>回调的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView>控件实现<xref:System.Web.UI.ICallbackEventHandler>接口并使用<xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A>以异步方式检索数据和<xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A>方法来检索到的数据返回到控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackScript">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackScript(class System.Web.UI.WebControls.IButtonControl buttonControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackScript (buttonControl As IButtonControl, argument As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackScript(System::Web::UI::WebControls::IButtonControl ^ buttonControl, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buttonControl">要为其创建回调脚本的按钮控件。</param>
        <param name="argument">要传递给回调脚本的参数。</param>
        <summary>为执行排序操作的按钮创建回调脚本。</summary>
        <returns>执行排序操作的按钮的回调脚本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.GetCallbackScript%2A>方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.GridView>控件创建执行排序操作的按钮的回调脚本。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件的网格线样式。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridLines" /> 值之一。 默认值为 <see langword="GridLines.Both" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.GridLines%2A>属性指定的网格线样式<xref:System.Web.UI.WebControls.GridView>控件。 下表列出可用的样式。  
  
|样式|描述|  
|-----------|-----------------|  
|`GridLines.None`|显示没有网格线。|  
|`GridLines.Horizontal`|显示水平网格线。|  
|`GridLines.Vertical`|显示垂直网格线。|  
|`GridLines.Both`|显示水平和垂直网格。|  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.GridLines%2A>属性来隐藏中的网格线<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewGridLines#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewGridLines/CS/gridviewgridlinescs.aspx#1)]
 [!code-aspx-vb[GridViewGridLines#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewGridLines/VB/gridviewgridlinesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.CellSpacing" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As GridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridViewRow ^ HeaderRow { System::Web::UI::WebControls::GridViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示 <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 控件中的标题行的 <see cref="T:System.Web.UI.WebControls.GridView" /> 对象。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.GridViewRow" />，表示 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的标题行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>属性以编程方式访问<xref:System.Web.UI.WebControls.GridViewRow>对象，表示中的标题行<xref:System.Web.UI.WebControls.GridView>控件。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>属性是之后才可用<xref:System.Web.UI.WebControls.GridView>控件创建中的标题行<xref:System.Web.UI.WebControls.GridView.RowCreated>事件。  
  
 当你需要以编程方式操作标头行，例如，添加自定义的内容时，通常使用此属性。 对任何修改<xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>属性必须执行后<xref:System.Web.UI.WebControls.GridView>控件已经被呈现; 否则为<xref:System.Web.UI.WebControls.GridView>控件将覆盖所有更改。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>属性以编程方式更改的标题行的字体颜色基于排序方向。  
  
 [!code-aspx-csharp[GridViewFooterRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewfooterrow/CS/gridviewfooterrowcs.aspx#1)]
 [!code-aspx-vb[GridViewFooterRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewfooterrow/VB/gridviewfooterrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，使用该对象可以设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的标题行的外观。</summary>
        <value>一个对表示 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 控件中脚注行的样式的 <see cref="T:System.Web.UI.WebControls.GridView" /> 的引用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>属性来控制中的标题行的外观<xref:System.Web.UI.WebControls.GridView>控件。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。 可以使用以下方法之一，以声明方式设置属性：  
  
-   将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `HeaderStyle-ForeColor`)。  
  
-   嵌套`<HeaderStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。  
  
 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `HeaderStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>属性来定义中的标题行的自定义样式<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-aspx-vb[GridViewShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件在页面上的水平对齐方式。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 值之一。 默认值为 <see langword="HorizontalAlign.NotSet" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.HorizontalAlign%2A>属性指定的水平对齐方式<xref:System.Web.UI.WebControls.GridView>页内的控件。 下表列出了不同的水平对齐样式。  
  
|对齐值|描述|  
|---------------------|-----------------|  
|`HorizontalAlign.NotSet`|水平对齐方式<xref:System.Web.UI.WebControls.GridView>尚未设置控制。|  
|`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.GridView>控件是左对齐页面上。|  
|`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.GridView>控件居中的页上。|  
|`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.GridView>控件是右对齐的页上的对齐。|  
|`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.GridView>控件对齐页面的左侧和右侧边距。|  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.HorizontalAlign%2A>属性对齐<xref:System.Web.UI.WebControls.GridView>页面右侧的控件。  
  
 [!code-aspx-csharp[GridViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewHorizontalAlign/CS/gridviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[GridViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewHorizontalAlign/VB/gridviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.GridViewRow row, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.GridViewRow row, int32 columnSpan, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::GridViewRow ^ row, int columnSpan, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="columnSpan" Type="System.Int32" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">一个 <see cref="T:System.Web.UI.WebControls.GridViewRow" />，表示要初始化的页导航行。</param>
        <param name="columnSpan">页导航行应跨越的列数。</param>
        <param name="pagedDataSource">一个 <see cref="T:System.Web.UI.WebControls.PagedDataSource" />，表示数据源。</param>
        <summary>初始化在分页功能启用时显示的页导航行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.InitializePager%2A>方法用于初始化时启用分页功能时显示的页导航行。  
  
> [!NOTE]
>  此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.GridViewRow row, System.Web.UI.WebControls.DataControlField[] fields);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.GridViewRow row, class System.Web.UI.WebControls.DataControlField[] fields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As GridViewRow, fields As DataControlField())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::GridViewRow ^ row, cli::array &lt;System::Web::UI::WebControls::DataControlField ^&gt; ^ fields);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="fields" Type="System.Web.UI.WebControls.DataControlField[]" />
      </Parameters>
      <Docs>
        <param name="row">一个 <see cref="T:System.Web.UI.WebControls.GridViewRow" />，表示要初始化的行。</param>
        <param name="fields">一个 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 对象数组，表示 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的列字段。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.InitializeRow%2A>方法用于初始化中的行<xref:System.Web.UI.WebControls.GridView>控件。  
  
> [!NOTE]
>  此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" />，表示要检查的数据类型。</param>
        <summary>确定指定的数据类型是否能绑定到 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的列。</summary>
        <returns>如果指定的数据类型能绑定到 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的列，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.IsBindableType%2A>方法是通常由控件开发人员用来以编程方式确定指定的数据类型是否可以绑定到列中的帮助器方法<xref:System.Web.UI.WebControls.GridView>控件。 以下数据类型可以绑定到中的列<xref:System.Web.UI.WebControls.GridView>控件：  
  
-   <xref:System.Boolean?displayProperty=nameWithType>  
  
-   <xref:System.Byte?displayProperty=nameWithType>  
  
-   <xref:System.Char?displayProperty=nameWithType>  
  
-   <xref:System.DateTime?displayProperty=nameWithType>  
  
-   <xref:System.Decimal?displayProperty=nameWithType>  
  
-   <xref:System.Double?displayProperty=nameWithType>  
  
-   <xref:System.Guid?displayProperty=nameWithType>  
  
-   <xref:System.Int16?displayProperty=nameWithType>  
  
-   <xref:System.Int32?displayProperty=nameWithType>  
  
-   <xref:System.Int64?displayProperty=nameWithType>  
  
-   <xref:System.SByte?displayProperty=nameWithType>  
  
-   <xref:System.Single?displayProperty=nameWithType>  
  
-   <xref:System.String?displayProperty=nameWithType>  
  
-   <xref:System.UInt16?displayProperty=nameWithType>  
  
-   <xref:System.UInt32?displayProperty=nameWithType>  
  
-   <xref:System.UInt64?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">包含保存的控件状态值的 <see cref="T:System.Object" />。</param>
        <summary>加载 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中需要保留的属性的状态（即使在 <see cref="P:System.Web.UI.Control.EnableViewState" /> 属性设置为 <see langword="false" /> 时）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于加载中的属性的状态<xref:System.Web.UI.WebControls.GridView>控件中需要保留，即使<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType>属性设置为`false`。  
  
> [!NOTE]
>  此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">包含控件保存的视图状态值的 <see cref="T:System.Object" />。</param>
        <summary>加载以前保存的 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件的视图状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要由.NET Framework 基础结构使用，但不可在代码中直接使用。 但是，控件开发人员可以重写此方法以指定自定义服务器控件还原其视图状态的方式。 有关详细信息，请参阅[ASP.NET 状态管理概述](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">事件源。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>确定 Web 服务器控件的事件是否沿页的用户界面 (UI) 服务器控件层次结构向上传递。</summary>
        <returns>如果事件已被取消，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.OnBubbleEvent%2A>方法实现<xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType>方法将从子控件的事件传递到页层次结构。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnDataPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataPropertyChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataPropertyChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.GridView" />、<see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> 或 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> 属性更改之后，将 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 控件重新绑定至它的数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.OnDataPropertyChanged%2A>方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.GridView>控件重新绑定之后，其数据的控件<xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A>， <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>，或<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>属性更改。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在扩展<see cref="T:System.Web.UI.WebControls.GridView" />类，你可以重写此方法以创建你自己的例程重新绑定数据。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataPropertyChanged" />
        <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataSourceViewChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataSourceViewChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件源。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged%2A>方法通知<xref:System.Web.UI.WebControls.GridView>基础数据源已更改，该控件应重新绑定的控件。 通常情况下，<xref:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged%2A>数据源视图的属性已更改时调用方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
        <altmember cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当此方法通知，Web 服务器控件必须执行任何所需创建并设置实例的初始化步骤。 在此阶段的服务器控件的生命周期中，控件的视图状态尚未填充。 此外，当调用此方法时，无论是否的子级或父级到该控件不能访问其他服务器控件。 不保证其他服务器控件都可创建并准备好进行访问。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnInit%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged>时单击某一页导航按钮时，之后将引发事件<xref:System.Web.UI.WebControls.GridView>控件处理的分页操作。 这使你能够执行自定义的例程，自定义的分页操作，例如，每次此事件发生时的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnPageIndexChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.GridViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.GridViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As GridViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::GridViewPageEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.GridViewPageEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging>时单击某一页导航按钮时，之前将引发事件<xref:System.Web.UI.WebControls.GridView>控件处理的分页操作。 这使你能够执行自定义的例程，每次此事件发生时取消的分页操作，如事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnPageIndexChanging%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">没有 <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" /> 事件的处理程序。</exception>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewPageEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPagePreLoad">
      <MemberSignature Language="C#" Value="protected override void OnPagePreLoad (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPagePreLoad(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPagePreLoad (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPagePreLoad(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件源。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>在加载数据绑定控件之前设置该控件的初始化状态。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法通知服务器控件执行任何必要的预呈现步骤之前保存的视图状态和呈现内容。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnPreRender%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnRowCancelingEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCancelingEdit (System.Web.UI.WebControls.GridViewCancelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowCancelingEdit(class System.Web.UI.WebControls.GridViewCancelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowCancelingEdit (e As GridViewCancelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowCancelingEdit(System::Web::UI::WebControls::GridViewCancelEditEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewCancelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.GridViewCancelEditEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>时单击编辑模式中某一行的取消按钮后，将引发事件，但在该行退出之前编辑模式。 这使你能够执行自定义的例程，例如停止取消操作，如果它会将行放入某种意外状态，每次此事件发生时的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowCancelingEdit%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">没有 <see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" /> 事件的处理程序。</exception>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewCancelEditEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCommand (System.Web.UI.WebControls.GridViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowCommand(class System.Web.UI.WebControls.GridViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowCommand (e As GridViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowCommand(System::Web::UI::WebControls::GridViewCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.RowCommand" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowCommand>中单击的按钮时将引发事件<xref:System.Web.UI.WebControls.GridView>控件。 这使你能够在每次此事件发生时执行的自定义的例程的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowCommand%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 Visual Studio Web 站点项目与源代码是可用本主题可以附带：[下载](http://go.microsoft.com/fwlink/?LinkId=191882)。  
  
 下面的示例演示如何提供的事件处理方法<xref:System.Web.UI.WebControls.GridView.RowCommand>事件。 对于给定的行的单击添加按钮时<xref:System.Web.UI.WebControls.GridView>控件，所选客户的名称添加到<xref:System.Web.UI.WebControls.ListBox>控件。  
  
 [!code-aspx-csharp[GridViewRowCommmand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCommmand/CS/gridviewrowcommandcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCommmand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCommmand/VB/gridviewrowcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
      </Docs>
    </Member>
    <Member MemberName="OnRowCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCreated (System.Web.UI.WebControls.GridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowCreated(class System.Web.UI.WebControls.GridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowCreated (e As GridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowCreated(System::Web::UI::WebControls::GridViewRowEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.RowCreated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 之前<xref:System.Web.UI.WebControls.GridView>可以呈现控件，<xref:System.Web.UI.WebControls.GridViewRow>必须为该控件中的每一行创建对象。 <xref:System.Web.UI.WebControls.GridView.RowCreated>引发事件中的每一行时<xref:System.Web.UI.WebControls.GridView>创建控件。 这使你能够执行自定义的例程，例如将自定义内容添加到行，每次此事件发生时的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowCreated%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的示例演示如何提供的事件处理方法<xref:System.Web.UI.WebControls.GridView.RowCreated>事件。 当创建行时，将其索引存储在<xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A>属性<xref:System.Web.UI.WebControls.LinkButton>新行中包含的控件。 这使您能够确定行的索引，当用户单击的命令按钮。  
  
 [!code-aspx-csharp[GridViewRowCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCreated/CS/gridviewrowcreatedcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCreated/VB/gridviewrowcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCreated" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDataBound (System.Web.UI.WebControls.GridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDataBound(class System.Web.UI.WebControls.GridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDataBound (e As GridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDataBound(System::Web::UI::WebControls::GridViewRowEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.RowDataBound" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 之前<xref:System.Web.UI.WebControls.GridView>可以呈现控件，该控件中的每一行必须绑定到数据源中的记录。 <xref:System.Web.UI.WebControls.GridView.RowDataBound>数据行时引发事件 (由表示<xref:System.Web.UI.WebControls.GridViewRow>对象) 中的数据绑定<xref:System.Web.UI.WebControls.GridView>控件。 这使你能够执行自定义的例程，例如修改绑定到行，每次此事件发生时的数据的值的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowDataBound%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 Visual Studio Web 站点项目与源代码是可用本主题可以附带：[下载](http://go.microsoft.com/fwlink/?LinkId=191882)。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDataBound" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCreated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleted (System.Web.UI.WebControls.GridViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleted(class System.Web.UI.WebControls.GridViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleted (e As GridViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleted(System::Web::UI::WebControls::GridViewDeletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.GridViewDeletedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.RowDeleted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowDeleted>单击某一行的删除按钮，但之后时引发事件<xref:System.Web.UI.WebControls.GridView>控件中删除的行。 这使你能够执行自定义的例程，例如检查删除操作的结果，每次此事件发生时的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowDeleted%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewDeletedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleting (System.Web.UI.WebControls.GridViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleting(class System.Web.UI.WebControls.GridViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleting (e As GridViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleting(System::Web::UI::WebControls::GridViewDeleteEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowDeleting>单击某一行的删除按钮后，之前引发事件<xref:System.Web.UI.WebControls.GridView>控件中删除的行。 这使你能够执行自定义的例程，如取消删除操作中，每次此事件发生时的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowDeleting%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">没有 <see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> 事件的处理程序。</exception>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowEditing">
      <MemberSignature Language="C#" Value="protected virtual void OnRowEditing (System.Web.UI.WebControls.GridViewEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowEditing(class System.Web.UI.WebControls.GridViewEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowEditing (e As GridViewEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowEditing(System::Web::UI::WebControls::GridViewEditEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowEditing>单击某一行的编辑按钮，但之前引发事件<xref:System.Web.UI.WebControls.GridView>控件进入编辑模式。 这使你能够执行自定义的例程，如取消编辑的操作，每次此事件发生时的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowEditing%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">没有 <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> 事件的处理程序。</exception>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Web.UI.WebControls.GridViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Web.UI.WebControls.GridViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (e As GridViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Web::UI::WebControls::GridViewUpdatedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowUpdated>时单击某一行的更新按钮，但之后将引发事件<xref:System.Web.UI.WebControls.GridView>控件更新行。 这使你能够执行自定义的例程，例如检查更新操作的结果，每次此事件发生时的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowUpdated%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Web.UI.WebControls.GridViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Web.UI.WebControls.GridViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (e As GridViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Web::UI::WebControls::GridViewUpdateEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowUpdating>单击某一行的更新按钮后，之前引发事件<xref:System.Web.UI.WebControls.GridView>控件更新行。 这使你能够执行自定义的例程，如取消更新操作中，每次此事件发生时的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowUpdating%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">没有 <see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" /> 事件的处理程序。</exception>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>时单击某一行的选择按钮，但之后将引发事件<xref:System.Web.UI.WebControls.GridView>控件处理选择操作。 这使你能够执行自定义的例程，例如使用当前选定的行中，更新状态标签，每次此事件发生时的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的示例演示如何创建的事件处理程序<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>事件。 在此示例中，在所选的行将保留在视图状态。 因此即使在排序或分页操作之后, 将选择仅该行。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.GridView.OnSelectedIndexChanged/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.GridView.OnSelectedIndexChanged/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.GridViewSelectEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanging(class System.Web.UI.WebControls.GridViewSelectEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanging (e As GridViewSelectEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanging(System::Web::UI::WebControls::GridViewSelectEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewSelectEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.GridViewSelectEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>单击某一行的选择按钮后，之前引发事件<xref:System.Web.UI.WebControls.GridView>控件处理选择操作。 这使你能够执行自定义的例程，如取消所选内容的操作，每次此事件发生时的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewSelectEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSorted">
      <MemberSignature Language="C#" Value="protected virtual void OnSorted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSorted (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSorted(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.Sorted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Sorted>单击超链接列进行排序，但之后时引发事件<xref:System.Web.UI.WebControls.GridView>控件处理排序操作。 这使你能够在每次此事件发生时执行的自定义的例程，如自定义排序的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnSorted%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSorting">
      <MemberSignature Language="C#" Value="protected virtual void OnSorting (System.Web.UI.WebControls.GridViewSortEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorting(class System.Web.UI.WebControls.GridViewSortEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSorting (e As GridViewSortEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSorting(System::Web::UI::WebControls::GridViewSortEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewSortEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.GridViewSortEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Sorting>单击超链接列进行排序后，之前引发事件<xref:System.Web.UI.WebControls.GridView>控件处理排序操作。 这使你能够执行自定义的例程，如取消排序操作，每次此事件发生时的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnSorting%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">没有 <see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> 事件的处理程序。</exception>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewSortEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中显示数据源记录所需的页数。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的页数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 启用分页功能后 (通过设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`)，使用<xref:System.Web.UI.WebControls.GridView.PageCount%2A>属性来确定数据源中显示的记录所需的页的总数。 此值计算的数据源中的页中显示的记录数的记录的总数目除以 (所指定的<xref:System.Web.UI.WebControls.GridView.PageSize%2A>属性) 和舍入。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.PageCount%2A>属性来确定的网页中显示总数<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当前显示页的索引。</summary>
        <value>当前所显示页面的从零开始的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 启用分页功能后 (通过设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`)，使用<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>属性来确定的当前显示页的索引。 你还可以使用此属性以编程方式更改所显示的页面。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>属性来确定在当前显示页的索引<xref:System.Web.UI.WebControls.GridView>控件。 该示例还演示如何<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>属性可以用于指定用户的页导航行从选择的值后显示哪一页。  
  
 [!code-aspx-csharp[GridViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.GridView.PageIndex" /> 属性被设置为一个小于 0 的值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击某一页导航按钮时，但在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件处理分页操作之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged>时单击某一页导航按钮时，之后将引发事件<xref:System.Web.UI.WebControls.GridView>控件处理的分页操作。 这使你能够执行自定义的例程，自定义的分页操作，例如，每次此事件发生时的事件处理方法。  
  
 若要确定用户选择的页的索引，请使用<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>属性<xref:System.Web.UI.WebControls.GridView>控件。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>事件以显示用户从的页导航行中选择的页号。  
  
 [!code-aspx-csharp[GridViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPageIndexChanged/CS/gridviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[GridViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPageIndexChanged/VB/gridviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As GridViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewPageEventHandler ^ PageIndexChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击某一页导航按钮时，但在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件处理分页操作之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging>时单击某一页导航按钮时，之前将引发事件<xref:System.Web.UI.WebControls.GridView>控件处理的分页操作。 这使你能够执行自定义的例程，每次此事件发生时取消的分页操作，如事件处理方法。  
  
> [!NOTE]
>  以编程方式设置时，将不会引发此事件<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>属性。  
  
 A<xref:System.Web.UI.WebControls.GridViewPageEventArgs>对象传递给事件处理方法，使您可以确定用户选择的页的索引，并可以指示是否应取消的分页操作。 若要取消的分页操作，<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewPageEventArgs>对象传递给`true`。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>事件取消的分页操作，如果用户尝试导航到另一个时页<xref:System.Web.UI.WebControls.GridView>控件处于编辑模式。  
  
 [!code-aspx-csharp[GridViewPageIndexChanging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPageIndexChanging/CS/gridviewpageindexchangingcs.aspx#1)]
 [!code-aspx-vb[GridViewPageIndexChanging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPageIndexChanging/VB/gridviewpageindexchangingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewPageEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.PagerSettings" /> 对象的引用，使用该对象可以设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的页导航按钮的属性。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.PagerSettings" /> 的引用，使用该对象可以设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的页导航按钮的属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.PagerSettings%2A>属性控制的设置中的页导航行<xref:System.Web.UI.WebControls.GridView>控件。 启用分页功能时，将显示的页导航行 (通过设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`) 和包含允许用户导航到不同的页面控件中的控件。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.PagerSettings>对象返回。 可以使用以下方法之一，以声明方式设置属性：  
  
-   将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.PagerSettings>对象 (例如， `PagerSettings-Mode`)。  
  
-   嵌套`<PagerSettings>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。  
  
 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `PagerStyle.Mode`)。 常用设置通常包括的页导航行显示模式和自定义文本或导航控件的图像。  
  
   
  
## Examples  
 下面的示例演示如何设置<xref:System.Web.UI.WebControls.GridView.PagerSettings%2A>属性以声明方式。 它将设置为蓝色和分别浅蓝色的字体和背景的页导航行。  
  
 [!code-aspx-csharp[GridViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowPaging/CS/gridviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[GridViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowPaging/VB/gridviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，使用该对象可以设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的页导航行的外观。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用，该对象表示 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中页导航行的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>属性来控制中的页导航行的外观<xref:System.Web.UI.WebControls.GridView>控件。 启用分页功能时，将显示的页导航行 (通过设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`) 和包含允许用户导航到不同的页面控件中的控件。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。 可以使用以下方法之一，以声明方式设置属性：  
  
-   将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `PagerStyle-ForeColor`)。  
  
-   嵌套`<PagerStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。  
  
 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `PagerStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。  
  
   
  
## Examples  
 下面的示例演示如何设置<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>属性以声明方式。 它将设置为蓝色和分别浅蓝色的字体和背景的页导航行。  
  
 [!code-aspx-csharp[GridViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowPaging/CS/gridviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[GridViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowPaging/VB/gridviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.GridViewRow))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中页导航行的自定义内容。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" />，包含页导航行的自定义内容。 默认值为 null，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 页导航行显示在<xref:System.Web.UI.WebControls.GridView>控制当启用分页功能 (时<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性设置为 true)。 页导航行包含允许用户导航到不同的页面控件中的控件。 而不是使用内置的页导航行用户界面 (UI)，你可以定义自己的 UI，通过使用<xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>属性。  
  
> [!NOTE]
>  当<xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>属性设置，则它将重写内置页导航行 UI。  
  
 若要指定自定义模板的页导航行，第一次将`<PagerTemplate>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.GridView>控件。 然后可以列出在开始和结束之间模板的内容`<PagerTemplate>`标记。 若要控制的页导航行的外观，使用<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>属性。  
  
 通常情况下，将按钮控件添加到页导航模板来执行分页操作。 <xref:System.Web.UI.WebControls.GridView>控件将执行的分页操作使用的按钮控件时其`CommandName`单击属性设置为"Page"。 按钮的`CommandArgument`属性确定要执行的分页操作的类型。 下表列出了支持的命令参数值<xref:System.Web.UI.WebControls.GridView>控件。  
  
|`CommandArgument` 值|描述|  
|-----------------------------|-----------------|  
|"下一步"|导航至下一页。|  
|"上一步"|导航到以前的页面。|  
|"First"|导航至第一页。|  
|"最后一个"|导航至最后一页。|  
|整数值|导航到指定的页码。|  
  
   
  
## Examples  
 下面的示例演示如何创建自定义页导航模板，用户可以通过导航<xref:System.Web.UI.WebControls.GridView>控制使用<xref:System.Web.UI.WebControls.DropDownList>控件。  
  
 [!code-aspx-csharp[GridViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public virtual int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件在每页上所显示的记录的数目。</summary>
        <value>要在单页上显示的记录数。 默认值为 10。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 启用分页功能后 (通过设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`)，使用<xref:System.Web.UI.WebControls.GridView.PageSize%2A>属性来指定要在单个页面上显示的记录数。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.PageSize%2A>属性中的一次显示 15 记录<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewPageSize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPageSize/CS/gridviewpagesizecs.aspx#1)]
 [!code-aspx-vb[GridViewPageSize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPageSize/VB/gridviewpagesizevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.GridView.PageSize" /> 属性被设置为小于 1 的值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">一个包含数据源的 <see cref="T:System.Collections.IEnumerable" />。</param>
        <summary>将指定数据源绑定到 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PerformDataBinding%2A>方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.GridView>控件绑定到控件的指定的数据源。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>因为<see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />方法密封的如果你需要执行的任何其他任务，绑定数据时，应重写此方法。</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立控件层次结构。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于建立的控制层次结构<xref:System.Web.UI.WebControls.GridView>控件。  
  
> [!NOTE]
>  此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">要传递给事件处理程序的参数。</param>
        <summary>为 <see cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" /> 方法中的回调处理程序创建参数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RaiseCallbackEvent%2A>方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.GridView>控件创建的自变量中的回调处理程序<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">为引发的一个或多个事件创建 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> 时所使用的事件参数。</param>
        <summary>当 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件回发到服务器时引发此控件的合适的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 页面调用<xref:System.Web.UI.Page.RaisePostBackEvent%2A>方法回发事件发生时将引发相应事件<xref:System.Web.UI.WebControls.GridView>控件。 加载和更改通知都完成时之后, 但尚未预呈现发生之前，此调用是在页的生命周期中。 实现此方法创建<xref:System.Web.UI.WebControls.CommandEventArgs>引发的事件的对象。  
  
> [!NOTE]
>  此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，用于在客户端浏览器上呈现服务器控件内容。</param>
        <summary>使用指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象将 Web 服务器控件内容呈现给客户端浏览器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Render%2A>方法用于呈现客户端的浏览器使用指定的服务器控件内容<xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType>对象。  
  
> [!NOTE]
>  此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RowCancelingEdit">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowCancelingEdit As GridViewCancelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewCancelEditEventHandler ^ RowCancelingEdit;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewCancelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>单击编辑模式中某一行的“取消”按钮以后，在该行退出编辑模式之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>时单击编辑模式中某一行的取消按钮后，将引发事件，但在该行退出之前编辑模式。 这使你能够执行自定义的例程，例如停止取消操作，如果它会将行放入某种意外状态，每次此事件发生时的事件处理方法。  
  
 A<xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs>对象传递给事件处理方法，使你可以确定当前行的索引，还可以指示应停止取消操作。 若要停止取消操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs>对象传递给`true`。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>事件时用户取消的更新操作显示取消消息<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewRowCancellingEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCancellingEdit/CS/gridviewrowcancellingeditcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCancellingEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCancellingEdit/VB/gridviewrowcancellingeditvb.aspx#1)]  
  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>事件取消更新操作时以编程方式设置数据源。  
  
 [!code-aspx-csharp[GridViewRowEditing#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/GridViewRowEditing2CS.aspx#2)]
 [!code-aspx-vb[GridViewRowEditing#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/GridViewRowEditing2VB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewCancelEditEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowCommand As GridViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewCommandEventHandler ^ RowCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当单击 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的按钮时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowCommand>中单击的按钮时将引发事件<xref:System.Web.UI.WebControls.GridView>控件。 这使你能够在每次此事件发生时执行的自定义的例程的事件处理方法。  
  
 中的按钮<xref:System.Web.UI.WebControls.GridView>控件也可以调用某些控件的内置功能。 若要执行这些操作之一，设置`CommandName`为下表中的值之一的按钮的属性。  
  
|`CommandName` 值|描述|  
|-------------------------|-----------------|  
|"取消"|取消编辑操作并返回<xref:System.Web.UI.WebControls.GridView>到只读模式的控件。 引发 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 事件。|  
|“Delete”|删除当前记录。 引发<xref:System.Web.UI.WebControls.GridView.RowDeleting>和<xref:System.Web.UI.WebControls.GridView.RowDeleted>事件。|  
|"编辑"|将当前记录置于编辑模式。 引发 <xref:System.Web.UI.WebControls.GridView.RowEditing> 事件。|  
|"页"|执行分页操作。 集`CommandArgument`的按钮为"First"，"最后"、"下一步"、"上一步"或执行页编号，以指定的分页操作类型的属性。 引发<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>和<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>事件。|  
|"选择"|选择当前记录。 引发<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>和<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>事件。|  
|"排序"|排序<xref:System.Web.UI.WebControls.GridView>控件。 引发<xref:System.Web.UI.WebControls.GridView.Sorting>和<xref:System.Web.UI.WebControls.GridView.Sorted>事件。|  
|"更新"|更新数据源中的当前记录。 引发<xref:System.Web.UI.WebControls.GridView.RowUpdating>和<xref:System.Web.UI.WebControls.GridView.RowUpdated>事件。|  
  
 尽管<xref:System.Web.UI.WebControls.GridView.RowCommand>单击上表中列出的按钮时将引发事件，则我们建议你使用该操作的表中列出的事件。  
  
 A<xref:System.Web.UI.WebControls.GridViewCommandEventArgs>对象传递给事件处理方法，使您能够确定的命令名称和被单击按钮的命令参数。  
  
> [!NOTE]
>  若要确定引发事件的行索引，请使用<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>传递给事件的事件自变量的属性。 <xref:System.Web.UI.WebControls.ButtonField>类自动填充<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>具有适当的索引值的属性。 对于其他命令按钮，你必须手动设置<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>的命令按钮的属性。 例如，你可以设置<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>到`<%# Container.DataItemIndex %>`时<xref:System.Web.UI.WebControls.GridView>控件具有未启用分页功能。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 Visual Studio Web 站点项目与源代码是可用本主题可以附带：[下载](http://go.microsoft.com/fwlink/?LinkId=191882)。  
  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.RowCommand>事件的一位客户名添加<xref:System.Web.UI.WebControls.GridView>控制转移到<xref:System.Web.UI.WebControls.ListBox>控制当单击某一行的添加按钮。  
  
 [!code-aspx-csharp[GridViewRowCommmand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCommmand/CS/gridviewrowcommandcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCommmand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCommmand/VB/gridviewrowcommandvb.aspx#1)]  
  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.RowCommand>事件来更新产品的价格，单击某一行的按钮。 此示例具有为启用分页功能<xref:System.Web.UI.WebControls.GridView>控件并设置<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>属性<xref:System.Web.UI.WebControls.Button>控件添加到相应的行索引。  
  
 [!code-aspx-csharp[GridViewRowCommmand#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCommmand/CS/gridviewrowcommand2cs.aspx#2)]
 [!code-aspx-vb[GridViewRowCommmand#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCommmand/VB/gridviewrowcommand2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewRowEventHandler RowCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewRowEventHandler RowCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowCreated As GridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewRowEventHandler ^ RowCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中创建行时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 之前<xref:System.Web.UI.WebControls.GridView>可以呈现控件，<xref:System.Web.UI.WebControls.GridViewRow>必须为该控件中的每一行创建对象。 <xref:System.Web.UI.WebControls.GridView.RowCreated>引发事件中的每一行时<xref:System.Web.UI.WebControls.GridView>创建控件。 这使你能够执行自定义的例程，例如将自定义内容添加到行，每次此事件发生时的事件处理方法。  
  
 A<xref:System.Web.UI.WebControls.GridViewRowEventArgs>对象传递给事件处理方法，使你能够访问正在创建的行的属性。 若要访问特定行的单元格中，使用<xref:System.Web.UI.WebControls.TableRow.Cells%2A>属性<xref:System.Web.UI.WebControls.GridViewRowEventArgs>对象。 你可以确定哪种行类型 （标头行和数据行等） 正在创建使用<xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>属性。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.RowCreated>事件存储在中创建的行的索引<xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A>属性<xref:System.Web.UI.WebControls.LinkButton>行中包含的控件。 这使您能够确定包含的行的索引<xref:System.Web.UI.WebControls.LinkButton>控制当用户单击按钮。  
  
 [!code-aspx-csharp[GridViewRowCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCreated/CS/gridviewrowcreatedcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCreated/VB/gridviewrowcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDataBound As GridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewRowEventHandler ^ RowDataBound;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中将数据行绑定到数据时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 之前<xref:System.Web.UI.WebControls.GridView>可以呈现控件，该控件中的每一行必须绑定到数据源中的记录。 <xref:System.Web.UI.WebControls.GridView.RowDataBound>数据行时引发事件 (由表示<xref:System.Web.UI.WebControls.GridViewRow>对象) 中的数据绑定<xref:System.Web.UI.WebControls.GridView>控件。 这使你能够执行自定义的例程，例如修改绑定到行，每次此事件发生时的数据的值的事件处理方法。  
  
 A<xref:System.Web.UI.WebControls.GridViewRowEventArgs>对象传递给事件处理方法，使你可以访问要绑定的行的属性。 若要访问特定行的单元格中，使用<xref:System.Web.UI.WebControls.TableRow.Cells%2A>属性<xref:System.Web.UI.WebControls.GridViewRow>对象中包含<xref:System.Web.UI.WebControls.GridViewRowEventArgs.Row%2A>属性<xref:System.Web.UI.WebControls.GridViewRowEventArgs>对象。 你可以确定正在绑定使用的是哪种行类型 （标头行和数据行等）<xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>属性。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 Visual Studio Web 站点项目与源代码是可用本主题可以附带：[下载](http://go.microsoft.com/fwlink/?LinkId=191882)。  
  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.RowDataBound>事件之前它将显示在修改数据源中的字段的值<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewRowDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowDataBound/CS/gridviewrowdataboundcs.aspx#1)]
 [!code-aspx-vb[GridViewRowDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowDataBound/VB/gridviewrowdataboundvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCreated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleted As GridViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewDeletedEventHandler ^ RowDeleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击某一行的“删除”按钮时，但在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件删除该行之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowDeleted>单击某一行的删除按钮，但之后时引发事件<xref:System.Web.UI.WebControls.GridView>控件中删除的行。 这使你能够执行自定义的例程，例如检查删除操作的结果，每次此事件发生时的事件处理方法。  
  
 A<xref:System.Web.UI.WebControls.GridViewDeletedEventArgs>对象传递给事件处理方法，使您能够确定受影响的行和可能发生的任何异常的数量。 您还可以指示是否处理了该异常的事件处理方法中通过设置<xref:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled%2A>属性<xref:System.Web.UI.WebControls.GridViewDeletedEventArgs>对象。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.RowDeleted>事件检查删除操作的结果。 若要向用户表明该操作是否成功，显示一条消息。  
  
 [!code-aspx-csharp[GridViewRowDeleted#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowDeleted/CS/gridviewrowdeletedcs.aspx#1)]
 [!code-aspx-vb[GridViewRowDeleted#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowDeleted/VB/gridviewrowdeletedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewDeletedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleting As GridViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewDeleteEventHandler ^ RowDeleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击某一行的“删除”按钮时，但在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件删除该行之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowDeleting>单击某一行的删除按钮后，之前引发事件<xref:System.Web.UI.WebControls.GridView>控件中删除的行。 这使你能够执行自定义的例程，如取消删除操作中，每次此事件发生时的事件处理方法。  
  
 A<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>对象传递给事件处理方法，使您可以确定当前行的索引，并可以指示是否应取消删除操作。 若要取消删除操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>对象传递给`true`。 您还可以操作<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys%2A>和<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values%2A>集合，如有必要之前的值传递到数据源。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.RowDeleting>事件取消删除操作。 页包含<xref:System.Web.UI.WebControls.GridView>显示客户姓名和地址从 AdventureWorksLT 数据库的列表的控件。 当用户单击**删除**一行时，处理程序的链接<xref:System.Web.UI.WebControls.GridView.RowDeleting>事件检查用户尝试删除的行中显示的人员的最后一个名称。 如果最后一个名称为"Beaver"，删除操作已取消，并显示一条错误消息。 对于任何其他名称，删除操作会继续并删除该行。  
  
 事件处理程序使用<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.RowIndex%2A>属性<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>对象可以查找用户尝试删除的行。 该示例检查的内容<xref:System.Web.UI.WebControls.GridView.Rows%2A>集合。 如果到所需值比较密钥值，可以检查<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>集合相反。  
  
 为了使示例简单，而不是客户表 CustomerAddress 表中删除行。 <xref:System.Web.UI.WebControls.GridView>控件显示联接三个表的结果： 客户、 地址和 CustomerAddress。 当删除行，相应 CustomerAddress<xref:System.Web.UI.WebControls.GridView>行将会消失。 引用完整性约束会使实际从更复杂客户表中删除行示例的代码。  
  
 有关如何设置 AdventureWorksLT 数据库的信息，请参阅[如何： 设置 AdventureWorksLT 示例数据库的 ASP.NET 开发](http://msdn.microsoft.com/library/2baad633-9d63-49cc-a6b2-917cafd35356)。  
  
 [!code-aspx-csharp[GridViewRowDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowDeleting/CS/gridviewrowdeleting.aspx#1)]
 [!code-aspx-vb[GridViewRowDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowDeleting/VB/gridviewrowdeleting.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowEditing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewEditEventHandler RowEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewEditEventHandler RowEditing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowEditing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowEditing As GridViewEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewEditEventHandler ^ RowEditing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>发生在单击某一行的“编辑”按钮以后，<see cref="T:System.Web.UI.WebControls.GridView" /> 控件进入编辑模式之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowEditing>单击某一行的编辑按钮，但之前引发事件<xref:System.Web.UI.WebControls.GridView>控件进入编辑模式。 这使你能够执行自定义的例程，如取消编辑的操作，每次此事件发生时的事件处理方法。  
  
 A<xref:System.Web.UI.WebControls.GridViewEditEventArgs>对象传递给事件处理方法，使您可以确定当前行的索引，并可以指示是否应取消编辑操作。 若要取消编辑操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewEditEventArgs>对象传递给`true`。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.RowEditing>将行处于编辑模式时以编程方式设置数据源的事件。  
  
 [!code-aspx-csharp[GridViewRowEditing#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/GridViewRowEditing2CS.aspx#2)]
 [!code-aspx-vb[GridViewRowEditing#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/GridViewRowEditing2VB.aspx#2)]  
  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.RowEditing>取消编辑的操作，如果用户尝试在美国国内的公司中编辑的记录的事件。  
  
 [!code-aspx-csharp[GridViewRowEditing#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/gridviewroweditingcs.aspx#1)]
 [!code-aspx-vb[GridViewRowEditing#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/gridviewroweditingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowHeaderColumn">
      <MemberSignature Language="C#" Value="public virtual string RowHeaderColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowHeaderColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.RowHeaderColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RowHeaderColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RowHeaderColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataColumnSelectionConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用作 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件的列标题的列的名称。 提供此属性的目的是使辅助技术设备的用户更易于访问控件。</summary>
        <value>用作列标题的列的名称。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 HTML 中，可以与行或列关联的标头的表。 通过设置指定的方向`scope`属性`<th>`元素。 <xref:System.Web.UI.WebControls.GridView>控件有内置的标题行，可以通过设置显示<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>属性`true`。 你还可以选择指定一个标题列 (通常是第一个或最后一列中的<xref:System.Web.UI.WebControls.GridView>控件) 通过设置此属性。 当设置此属性时，对应于指定的字段名称的列中的所有单元格都呈现为`<th scope="row">`元素。  
  
> [!NOTE]
>  指定的列都被视为标头，尽管<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>， <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>，和<xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A>标头列不适用于属性。  
  
 默认呈现`<th>`保留了元素，从而文本水平呈现为加粗和居中。 开发人员可以重写的行为`<th>`元素使用级联样式表。  
  
> [!NOTE]
>  此属性仅适用于绑定的字段。 它并不适用于模板字段。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A>属性来显示中的标头列<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewRowHeaderColumn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewrowheadercolumn/CS/GridViewRowHeaderColumncs.aspx#1)]
 [!code-aspx-vb[GridViewRowHeaderColumn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewrowheadercolumn/VB/GridViewRowHeaderColumnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.Caption" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.CaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" />
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.Rows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Rows As GridViewRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridViewRowCollection ^ Rows { System::Web::UI::WebControls::GridViewRowCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示 <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 控件中数据行的 <see cref="T:System.Web.UI.WebControls.GridView" /> 对象的集合。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.GridViewRowCollection" />，包含 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的所有数据行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Rows%2A>属性 （集合） 用于存储中的数据行<xref:System.Web.UI.WebControls.GridView>控件。 <xref:System.Web.UI.WebControls.GridView>控件自动填充<xref:System.Web.UI.WebControls.GridView.Rows%2A>通过创建集合<xref:System.Web.UI.WebControls.GridViewRow>对象数据源中的每个记录，然后将每个对象添加到集合。 若要访问控件中的特定行，或者用于循环访问的行的整个集合，通常使用此属性。  
  
> [!NOTE]
>  仅使用行其<xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>属性设置为`DataControlRowType.DataRow`存储在<xref:System.Web.UI.WebControls.GridView.Rows%2A>集合。 <xref:System.Web.UI.WebControls.GridViewRow>集合中未包含这些对象表示的页眉、 页脚和页导航行。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.Rows%2A>集合来访问中正在编辑的行<xref:System.Web.UI.WebControls.GridView>控件。 更新了某行后，将显示一条消息来指示更新成功。  
  
 [!code-aspx-csharp[GridViewRows#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRows/CS/gridviewrowscs.aspx#1)]
 [!code-aspx-vb[GridViewRows#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRows/VB/gridviewrowsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowCollection" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，使用该对象可以设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的数据行的外观。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用，该对象表示 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的数据行的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>属性来控制中的数据行的外观<xref:System.Web.UI.WebControls.GridView>控件。 当<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>也设置属性，显示的数据行之间交替<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>设置和<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>设置。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。 可以使用以下方法之一，以声明方式设置属性：  
  
-   将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `RowStyle-ForeColor`)。  
  
-   嵌套`<RowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。  
  
 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `RowStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>属性以声明方式定义中的项行的样式<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowStyle/CS/gridviewrowstylecs.aspx#1)]
 [!code-aspx-vb[GridViewRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowStyle/VB/gridviewrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As GridViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewUpdatedEventHandler ^ RowUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>发生在单击某一行的“更新”按钮，并且 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件对该行进行更新之后。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowUpdated>时单击某一行的更新按钮，但之后将引发事件<xref:System.Web.UI.WebControls.GridView>控件更新行。 这使你能够执行自定义的例程，例如检查更新操作的结果，每次此事件发生时的事件处理方法。  
  
 A<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs>对象传递给事件处理方法，使您能够确定受影响的行和可能发生的任何异常的数量。 您还可以指示是否处理了该异常的事件处理方法中通过设置<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>属性<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs>对象。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.RowUpdated>事件，以检查更新操作的结果。 若要向用户表明该操作是否成功，显示一条消息。  
  
 [!code-aspx-csharp[GridViewRowUpdated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowUpdated/CS/gridviewrowupdatedcs.aspx#1)]
 [!code-aspx-vb[GridViewRowUpdated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowUpdated/VB/gridviewrowupdatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As GridViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewUpdateEventHandler ^ RowUpdating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>发生在单击某一行的“更新”按钮以后，<see cref="T:System.Web.UI.WebControls.GridView" /> 控件对该行进行更新之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowUpdating>单击某一行的更新按钮后，之前引发事件<xref:System.Web.UI.WebControls.GridView>控件更新行。 这使你能够执行自定义的例程，如取消更新操作中，每次此事件发生时的事件处理方法。  
  
 A<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>对象传递给事件处理方法，使您可以确定当前行的索引，并可以指示是否应取消更新操作。 若要取消更新操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>对象传递给`true`。 您还可以操作<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>， <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>，和<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A>集合，如有必要之前的值传递到数据源。 使用这些集合的常用方法是要进行 HTML 编码的用户提供的才能在数据源中存储的值。 这有助于防止脚本注入式攻击。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>，<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>和<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A>自动填充集合时，才<xref:System.Web.UI.WebControls.GridView>通过使用将控件绑定到数据<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>属性。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.RowUpdating>事件时以编程方式设置数据源更新数据源对象中的值。  
  
 [!code-aspx-csharp[GridViewRowEditing#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/GridViewRowEditing2CS.aspx#2)]
 [!code-aspx-vb[GridViewRowEditing#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/GridViewRowEditing2VB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中需要保留的属性的状态（即使在 <see cref="P:System.Web.UI.Control.EnableViewState" /> 属性设置为 <see langword="false" /> 时）。</summary>
        <returns>返回服务器控件的当前视图状态。 如果没有与该控件关联的视图状态，则此方法返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于保存中的属性的状态<xref:System.Web.UI.WebControls.GridView>控件中需要保留，即使<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType>属性设置为`false`。  
  
> [!NOTE]
>  此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>加载以前保存的 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件的视图状态。</summary>
        <returns>包含保存的控件视图状态值的 <see cref="T:System.Object" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedDataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ SelectedDataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.DataKey" /> 对象，该对象包含 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中选中行的数据键值。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.DataKey" /> 控件中选中行的 <see cref="T:System.Web.UI.WebControls.GridView" />。 默认值为 <see langword="null" />，指示当前未选择行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>设置属性，<xref:System.Web.UI.WebControls.GridView>控件自动创建<xref:System.Web.UI.WebControls.DataKey>对象使用的指定的字段或字段的值的控件中的每一行。 <xref:System.Web.UI.WebControls.DataKey>随后会将对象添加到控件的<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>集合。 通常情况下，<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>属性用于检索<xref:System.Web.UI.WebControls.DataKey>对象中的特定数据行<xref:System.Web.UI.WebControls.GridView>控件。 但是，如果您只需要检索<xref:System.Web.UI.WebControls.DataKey>对象的当前选定的行中，你可以只使用<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>作为快捷方式的属性。  
  
> [!NOTE]
>  这是与检索相同<xref:System.Web.UI.WebControls.DataKey>由指定索引处对象<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>属性从<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>集合。 你还可以使用<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>属性直接检索当前所选行的数据密钥值。  
  
 如果要创建<xref:System.Web.UI.WebControls.ControlParameter>对象，并想要访问的第一个字段以外的键字段，请使用索引<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>中的属性<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>属性<xref:System.Web.UI.WebControls.ControlParameter>对象。 一个示例所示。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>属性来确定中所选行的数据键值<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewSelectedDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelectedDataKey/CS/gridviewselecteddatakeycs.aspx#1)]
 [!code-aspx-vb[GridViewSelectedDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelectedDataKey/VB/gridviewselecteddatakeyvb.aspx#1)]  
  
 下面的示例演示如何使用第二个键字段作为主/从方案中的参数。 A<xref:System.Web.UI.WebControls.GridView>控件用于显示从 Northwind 数据库的订单详细信息表的记录。 一条记录中的选中<xref:System.Web.UI.WebControls.GridView>控件中，从 Products 表产品的细节将显示在<xref:System.Web.UI.WebControls.DetailsView>控件。 ProductID 是中的第二个密钥名称<xref:System.Web.UI.WebControls.GridView>控件。 若要访问第二个密钥，GridView1.SelectedDataKey[1 的值] 用作<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>为<xref:System.Web.UI.WebControls.ControlParameter>对象<xref:System.Web.UI.WebControls.SqlDataSource>控制<xref:System.Web.UI.WebControls.DetailsView>控件。  
  
 [!code-aspx-csharp[GridViewSelectedDataKeyIndex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelectedDataKeyIndex/CS/gridviewselecteddatakeycs.aspx#1)]
 [!code-aspx-vb[GridViewSelectedDataKeyIndex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelectedDataKeyIndex/VB/gridviewselecteddatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> 属性中未指定数据键。</exception>
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的选中行的索引。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中选中行从零开始的索引。 默认值为 -1，指示当前未选择行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>属性来确定在当前所选行的索引<xref:System.Web.UI.WebControls.GridView>控件。 你还可以使用此属性以编程方式选择控件中的行。 若要清除行的选择，请将此属性设置为-1。 可以通过使用自定义当前所选行的外观<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>属性。 若要访问当前选定的行，请使用<xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>属性以选择中的第二个行<xref:System.Web.UI.WebControls.GridView>控制最初显示控件时。  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" /> 属性被设置为小于 -1 的值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>发生在单击某一行的“选择”按钮，<see cref="T:System.Web.UI.WebControls.GridView" /> 控件对相应的选择操作进行处理之后。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>时单击某一行的选择按钮，但之后将引发事件<xref:System.Web.UI.WebControls.GridView>控件处理选择操作。 这使你能够执行自定义的例程，例如使用当前选定的行中，更新状态标签，每次此事件发生时的事件处理方法。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>事件来显示所选行的中的客户名称<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanging As GridViewSelectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewSelectEventHandler ^ SelectedIndexChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewSelectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>发生在单击某一行的“选择”按钮以后，<see cref="T:System.Web.UI.WebControls.GridView" /> 控件对相应的选择操作进行处理之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>单击某一行的选择按钮后，之前引发事件<xref:System.Web.UI.WebControls.GridView>控件处理选择操作。 这使你能够执行自定义的例程，如取消所选内容的操作，每次此事件发生时的事件处理方法。  
  
> [!NOTE]
>  以编程方式设置时，将不会引发此事件<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>属性。  
  
 A<xref:System.Web.UI.WebControls.GridViewSelectEventArgs>对象传递给事件处理方法，使您可以确定用户选择的行的索引，并可以指示是否应取消了选择操作。 若要取消选择操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewSelectEventArgs>对象传递给`true`。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>事件取消选择操作。  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewSelectEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedPersistedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedPersistedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedPersistedDataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedPersistedDataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ SelectedPersistedDataKey { System::Web::UI::WebControls::DataKey ^ get(); void set(System::Web::UI::WebControls::DataKey ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中选择的持久项的数据键值。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中选择的持久项目的数据键值。 默认值为 <see langword="null" />，表示当前未选择项。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow SelectedRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow SelectedRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedRow As GridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridViewRow ^ SelectedRow { System::Web::UI::WebControls::GridViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 对象的引用，该对象表示控件中的选中行。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.GridViewRow" />，表示控件中的选中行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在选择行时<xref:System.Web.UI.WebControls.GridView>控制，请使用<xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>属性，以检索<xref:System.Web.UI.WebControls.GridViewRow>表示该行的对象。  
  
> [!NOTE]
>  这是与检索相同<xref:System.Web.UI.WebControls.GridViewRow>由指定索引处对象<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>属性从<xref:System.Web.UI.WebControls.GridView.Rows%2A>集合。  
  
 然后可以使用此对象访问所选行的属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>属性可访问的属性<xref:System.Web.UI.WebControls.GridViewRow>对象，表示中的所选的行<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SelectedRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ SelectedRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，使用该对象可以设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的选中行的外观。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用，该对象表示 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的选中行的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>属性来控制在所选行的外观<xref:System.Web.UI.WebControls.GridView>控件。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TableItemStyle>对象返回。 可以使用以下方法之一，以声明方式设置属性：  
  
-   将属性置于开始标记中<xref:System.Web.UI.WebControls.GridView>窗体中的控制`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TableItemStyle>对象 (例如， `SelectedRowStyle-ForeColor`)。  
  
-   嵌套`<SelectedRowStyle>`元素开始标记和结束标记之间<xref:System.Web.UI.WebControls.GridView>控件。  
  
 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `SelectedRowStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色和字体属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>属性来定义中所选行的自定义样式<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中选中行的数据键值。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中选中行的数据键值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性设置以逗号分隔的表示数据源的主键值的字段名称列表<xref:System.Web.UI.WebControls.GridView>控件自动创建<xref:System.Web.UI.WebControls.DataKey>对象使用的值或值的控件中的每一行指定的字段或字段。 <xref:System.Web.UI.WebControls.DataKey>随后会将对象添加到控件的<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>集合。 通常情况下，<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>属性用于检索<xref:System.Web.UI.WebControls.DataKey>对象中的特定数据行<xref:System.Web.UI.WebControls.GridView>控件。 但是，如果您只需要检索<xref:System.Web.UI.WebControls.DataKey>对象的当前选定的行中，你可以只使用<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>作为快捷方式的属性。 作为更快捷的方式，你直接可以确定所选行的第一个键字段的数据键值使用<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>属性。  
  
 如果要创建<xref:System.Web.UI.WebControls.ControlParameter>对象并且想要访问的键字段以外的第一个字段，使用<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>属性。 有关示例，请参见 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>属性来确定中所选行的数据键值<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelectedValue/CS/gridviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[GridViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelectedValue/VB/gridviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
      </Docs>
    </Member>
    <Member MemberName="SelectRow">
      <MemberSignature Language="C#" Value="public void SelectRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SelectRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectRow (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectRow(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">要编辑的行的索引。</param>
        <summary>选择要在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中编辑的行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将引发<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEditRow">
      <MemberSignature Language="C#" Value="public void SetEditRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEditRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEditRow (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEditRow(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">要编辑的行的索引。</param>
        <summary>在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中使用指定行索引将某行置于编辑模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将引发<xref:System.Web.UI.WebControls.GridView.RowEditing>事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">页上要编辑的行的索引。</param>
        <summary>使用行索引设置 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件的页索引。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将引发<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ShowFooter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowFooter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中显示脚注行。</summary>
        <value>若要显示脚注行，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>属性指定是否<xref:System.Web.UI.WebControls.GridView>控件显示页脚行。 若要控制页脚行的外观，使用<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>属性来显示中的页脚行<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-aspx-vb[GridViewShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中显示标题行。</summary>
        <value>若要显示标题行，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>属性指定是否<xref:System.Web.UI.WebControls.GridView>控件显示的标题行。 若要控制标头行的外观，使用<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>属性来显示中的标题行<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-aspx-vb[GridViewShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.ShowFooter" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeaderWhenEmpty">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeaderWhenEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeaderWhenEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeaderWhenEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeaderWhenEmpty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示当列没有数据时 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中列的标题是否可见。</summary>
        <value>如果标题可见，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(string sortExpression, valuetype System.Web.UI.WebControls.SortDirection sortDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::String ^ sortExpression, System::Web::UI::WebControls::SortDirection sortDirection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortExpression" Type="System.String" />
        <Parameter Name="sortDirection" Type="System.Web.UI.WebControls.SortDirection" />
      </Parameters>
      <Docs>
        <param name="sortExpression">对 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件进行排序时使用的排序表达式。</param>
        <param name="sortDirection">
          <see cref="T:System.Web.UI.WebControls.SortDirection" /> 值之一。</param>
        <summary>根据指定的排序表达式和方向对 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件进行排序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.Sort%2A>方法来以编程方式排序<xref:System.Web.UI.WebControls.GridView>控制是通过使用指定的排序表达式和方向。 排序表达式指定的列或包含要排序的列。 若要对多个列进行排序，创建包含以逗号分隔的字段名称列表的排序表达式。 排序方向指示是否在升序或降序执行排序。 此方法通常用时需要进行排序，<xref:System.Web.UI.WebControls.GridView>控件从受控制，如从页上的其他控件。 此方法通常还用于以编程方式设置的默认排序顺序<xref:System.Web.UI.WebControls.GridView>控制首次呈现时。 调用此方法也会引发<xref:System.Web.UI.WebControls.GridView.Sorted>和<xref:System.Web.UI.WebControls.GridView.Sorting>事件。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.Sort%2A>方法来以编程方式排序<xref:System.Web.UI.WebControls.GridView>通过多个列的控件。  
  
 [!code-aspx-csharp[GridViewSort#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSort/CS/GridViewSortcs.aspx#1)]
 [!code-aspx-vb[GridViewSort#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSort/VB/GridViewSortvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.WebControls.GridView" /> 控件被绑定到某个数据源控件，但是与该数据源关联的 <see cref="T:System.Web.UI.DataSourceView" /> 为 <see langword="null" />。</exception>
        <altmember cref="T:System.Web.UI.WebControls.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortExpression" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDirection As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::SortDirection SortDirection { System::Web::UI::WebControls::SortDirection get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取正在排序的列的排序方向。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.SortDirection" /> 值之一。 默认值为 <see langword="SortDirection.Ascending" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.SortDirection%2A>属性来确定是否按升序或降序排序正在排序的列。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>控件有内置的排序功能自动设置此属性。 仅在需要以编程方式确定排序方向，或当你要添加到你自己自定义排序功能时，此属性一般用于<xref:System.Web.UI.WebControls.GridView>控件。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.SortDirection%2A>属性以编程方式确定的排序方向<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewFooterRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewfooterrow/CS/gridviewfooterrowcs.aspx#1)]
 [!code-aspx-vb[GridViewFooterRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewfooterrow/VB/gridviewfooterrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public event EventHandler Sorted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Sorted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Sorted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Sorted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击用于列排序的超链接时，但在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件对相应的排序操作进行处理之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Sorted>单击超链接列进行排序，但之后时引发事件<xref:System.Web.UI.WebControls.GridView>控件处理排序操作。 这使你能够在每次此事件发生时执行的自定义的例程，如自定义排序的事件处理方法。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.Sorted>事件来显示正在排序的列的名称。  
  
 [!code-aspx-csharp[GridViewSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSorting/CS/gridviewsortingcs.aspx#1)]
 [!code-aspx-vb[GridViewSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSorting/VB/gridviewsortingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SortedAscendingCellStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedAscendingCellStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedAscendingCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortedAscendingCellStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ SortedAscendingCellStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置按升序对列排序时 <see cref="T:System.Web.UI.WebControls.GridView" /> 列的 CSS 样式。</summary>
        <value>如果按升序对列进行排序时向 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件应用了样式，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当此属性设置为`true`，样式应用于列中的单元格上时数据按升序排序。 例如，当升序排序类型时用特定的颜色突出显示列。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortedAscendingHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedAscendingHeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedAscendingHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortedAscendingHeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ SortedAscendingHeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置按升序对列进行排序时要应用于 <see cref="T:System.Web.UI.WebControls.GridView" /> 列标题的 CSS 样式。</summary>
        <value>如果按升序对列进行排序时向 <see cref="T:System.Web.UI.WebControls.GridView" /> 标题应用了样式，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当此属性设置为`true`，指示排序方向箭头将显示在列标题。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortedDescendingCellStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedDescendingCellStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedDescendingCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortedDescendingCellStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ SortedDescendingCellStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置按升序对列进行排序时 <see cref="T:System.Web.UI.WebControls.GridView" /> 列的样式。</summary>
        <value>如果按降序对列进行排序时向 <see cref="T:System.Web.UI.WebControls.GridView" /> 应用了样式，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当此属性设置为`true`，样式应用于列中的单元格上时数据按降序排列。 例如，当降序排序类型时使用特定的颜色突出显示列。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortedDescendingHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedDescendingHeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedDescendingHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortedDescendingHeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ SortedDescendingHeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置按降序对列进行排序时要应用于 <see cref="T:System.Web.UI.WebControls.GridView" /> 列标题的样式。</summary>
        <value>如果按降序对列进行排序时向 <see cref="T:System.Web.UI.WebControls.GridView" /> 标题应用了样式，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当此属性设置为`true`，指示排序方向箭头将显示在列标题。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public virtual string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SortExpression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与正在排序的列关联的排序表达式。</summary>
        <value>与正在排序的列关联的排序表达式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.SortExpression%2A>属性来确定与待排序的列关联的排序表达式。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>控件有内置的排序功能自动设置此属性。 此属性一般用于仅在需要以编程方式确定的列或列进行排序时或当你要添加到你自己自定义排序功能<xref:System.Web.UI.WebControls.GridView>控件。  
  
 当多个列进行排序时，则此属性包含逗号分隔的作为排序依据的字段列表。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.SortExpression%2A>属性来确定正在排序的列的名称。  
  
 [!code-aspx-csharp[GridViewAllowSortingColumns#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowSortingColumns/CS/GridViewAllowSortingColumnscs.aspx#1)]
 [!code-aspx-vb[GridViewAllowSortingColumns#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowSortingColumns/VB/GridViewAllowSortingColumnsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortDirection" />
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewSortEventHandler Sorting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewSortEventHandler Sorting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.Sorting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Sorting As GridViewSortEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewSortEventHandler ^ Sorting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewSortEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击用于列排序的超链接时，但在 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件对相应的排序操作进行处理之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Sorting>单击超链接列进行排序后，之前引发事件<xref:System.Web.UI.WebControls.GridView>控件处理排序操作。 这使你能够执行自定义的例程，如取消排序操作，每次此事件发生时的事件处理方法。  
  
 A<xref:System.Web.UI.WebControls.GridViewSortEventArgs>对象传递给事件处理方法，使您可以确定列的排序表达式，并可以指示是否应取消了选择操作。 若要取消选择操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.GridViewSortEventArgs>对象传递给`true`。  
  
 有关如何以编程方式启动排序操作的信息，请参阅<xref:System.Web.UI.WebControls.GridView.Sort%2A>方法。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.Sorting>事件以执行排序功能时<xref:System.Web.UI.WebControls.GridView>控件绑定到<xref:System.Data.DataTable>对象通过设置<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>属性以编程方式。  
  
 [!code-aspx-csharp[GridViewSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSorting/CS/gridviewsorting2cs.aspx#2)]
 [!code-aspx-vb[GridViewSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSorting/VB/gridviewsorting2vb.aspx#2)]  
  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.Sorting>事件取消排序操作。  
  
 [!code-aspx-csharp[GridViewSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSorting/CS/gridviewsortingcs.aspx#1)]
 [!code-aspx-vb[GridViewSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSorting/VB/gridviewsortingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewSortEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackResult () As String Implements ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.ICallbackEventHandler.GetCallbackResult() = System::Web::UI::ICallbackEventHandler::GetCallbackResult;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回以控件为目标的回调事件的结果。</summary>
        <returns>回调的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView>控件实现<xref:System.Web.UI.ICallbackEventHandler>接口并使用<xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A>以异步方式检索数据和<xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A>方法来检索到的数据返回到控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseCallbackEvent (eventArgument As String) Implements ICallbackEventHandler.RaiseCallbackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System::String ^ eventArgument) = System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">要传递给事件处理程序的参数。</param>
        <summary>为 <see cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" /> 方法中的回调处理程序创建参数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A> 是一个帮助器方法，由<xref:System.Web.UI.WebControls.GridView>控件创建的自变量中的回调处理程序<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ClientIDRowSuffixDataKeys As DataKeyArray Implements IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKeyArray ^ System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取数据值，在 ASP.NET 生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时，这些数据值用于唯一标识数据绑定控件的每个实例。</summary>
        <value>数据值，在 ASP.NET 生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时，这些数据值用于唯一标识数据绑定控件的每个实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.GridView> 实例强制转换为 <xref:System.Web.UI.IDataKeysControl> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">为引发的一个或多个事件创建 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> 时所使用的事件参数。</param>
        <summary>当 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件回发到服务器时引发此控件的合适的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 页面调用<xref:System.Web.UI.Page.RaisePostBackEvent%2A>方法来引发相应事件的回发事件发生<xref:System.Web.UI.WebControls.GridView>控件。 加载和更改通知都完成时之后, 但尚未预呈现发生之前，此调用是在页的生命周期中。 实现此方法创建<xref:System.Web.UI.WebControls.CommandEventArgs>事件或引发的事件的对象。  
  
> [!NOTE]
>  此方法主要由控件开发人员来扩展<xref:System.Web.UI.WebControls.GridView>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript">
      <MemberSignature Language="C#" Value="string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(class System.Web.UI.WebControls.IButtonControl buttonControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackScript (buttonControl As IButtonControl, argument As String) As String Implements ICallbackContainer.GetCallbackScript" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System::Web::UI::WebControls::IButtonControl ^ buttonControl, System::String ^ argument) = System::Web::UI::WebControls::ICallbackContainer::GetCallbackScript;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buttonControl">要为其创建回调脚本的按钮控件。</param>
        <param name="argument">要传递给回调脚本的参数。</param>
        <summary>为执行排序操作的按钮创建回调脚本。</summary>
        <returns>执行排序操作的按钮的回调脚本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.System%23Web%23UI%23WebControls%23ICallbackContainer%23GetCallbackScript%2A> 是一个帮助器方法，由<xref:System.Web.UI.WebControls.GridView>控件创建执行排序操作的按钮的回调脚本。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据绑定控件中所显示项的主键字段的名称。</summary>
        <value>一个数组，其中包含 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中所显示项的主键字段的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.GridView> 实例强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。  
  
 此属性提供访问权限<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>属性<xref:System.Web.UI.WebControls.GridView>控件。 通过公开<xref:System.Web.UI.WebControls.IDataBoundControl>接口。  
  
 ASP.NET 动态数据支持此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要绑定到数据绑定控件的数据源控件所公开的表。</summary>
        <value>要绑定到数据绑定控件的数据源控件所公开的表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.GridView> 实例强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。  
  
 如果数据源包含多个数据源，使用此属性设置的特定数据表、 集合或控件绑定到其他数据。 例如，如果数据源是<xref:System.Data.DataSet>实例，其中包含多个表，你可以指定要使用此属性绑定到控件的表。  
  
 ASP.NET 动态数据支持此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Web.UI.WebControls.IDataBoundControl.DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据绑定控件从中检索数据项列表的数据源对象。</summary>
        <value>数据绑定控件所使用的数据源对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.GridView> 实例强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。  
  
 ASP.NET 动态数据支持此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据绑定控件从中检索数据项列表的数据源的 ID。</summary>
        <value>数据绑定控件从中检索数据项的数据源的 ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.GridView> 实例强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。  
  
 ASP.NET 动态数据支持此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据绑定控件从中检索数据项列表的数据源对象。</summary>
        <value>数据绑定控件从中检索数据项列表的数据源对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.GridView> 实例强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。  
  
 ASP.NET 动态数据支持此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix" />
      <MemberSignature Language="VB.NET" Value=" Property ClientIDRowSuffix As String() Implements IDataBoundListControl.ClientIDRowSuffix" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据字段的名称，这些数据字段的值附加到 <see cref="P:System.Web.UI.Control.ClientID" /> 属性值，以便唯一标识数据绑定控件的每个实例。</summary>
        <value>数据字段的名称，在 ASP.NET 生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时，这些数据字段的值用于唯一标识数据绑定控件的每个实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.GridView> 实例强制转换为 <xref:System.Web.UI.WebControls.IDataBoundListControl> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.DataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKeys As DataKeyArray Implements IDataBoundListControl.DataKeys" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKeyArray ^ System.Web.UI.WebControls.IDataBoundListControl.DataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.DataKeys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对象的集合，这些对象表示数据绑定控件中的 <see cref="P:System.Web.UI.WebControls.GridView.DataKeys" /> 值。</summary>
        <value>一个数组，其中包含数据绑定控件中每行的数据键。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.GridView> 实例强制转换为 <xref:System.Web.UI.WebControls.IDataBoundListControl> 接口时使用。  
  
 ASP.NET 动态数据支持此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection" />
      <MemberSignature Language="VB.NET" Value=" Property EnablePersistedSelection As Boolean Implements IDataBoundListControl.EnablePersistedSelection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示行的选择是基于索引还是数据键值。</summary>
        <value>如果行选择基于数据键值，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.GridView> 实例强制转换为 <xref:System.Web.UI.WebControls.IDataBoundListControl> 接口时使用。  
  
 ASP.NET 动态数据支持此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SelectedDataKey As DataKey Implements IDataBoundListControl.SelectedDataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，其中包含数据绑定控件中所选行的数据键值。</summary>
        <value>所选行的数据键值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.GridView> 实例强制转换为 <xref:System.Web.UI.WebControls.IDataBoundListControl> 接口时使用。  
  
 ASP.NET 动态数据支持此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex" />
      <MemberSignature Language="VB.NET" Value=" Property SelectedIndex As Integer Implements IDataBoundListControl.SelectedIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据绑定控件中所选行的索引。</summary>
        <value>数据绑定控件中所选行的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.GridView> 实例强制转换为 <xref:System.Web.UI.WebControls.IDataBoundListControl> 接口时使用。  
  
 ASP.NET 动态数据支持此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IFieldControl.FieldsGenerator">
      <MemberSignature Language="C#" Value="System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator" />
      <MemberSignature Language="VB.NET" Value=" Property FieldsGenerator As IAutoFieldGenerator Implements IFieldControl.FieldsGenerator" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IAutoFieldGenerator ^ System.Web.UI.WebControls.IFieldControl.FieldsGenerator { System::Web::UI::IAutoFieldGenerator ^ get(); void set(System::Web::UI::IAutoFieldGenerator ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IFieldControl.FieldsGenerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IAutoFieldGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个控件，该控件自动为数据绑定控件生成列，供 ASP.NET 动态数据使用。</summary>
        <value>自动为数据绑定控件生成列的控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.GridView> 实例强制转换为 <xref:System.Web.UI.WebControls.IFieldControl> 接口时使用。  
  
 ASP.NET 动态数据支持此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPersistedSelector.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey" />
      <MemberSignature Language="VB.NET" Value=" Property DataKey As DataKey Implements IPersistedSelector.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System.Web.UI.WebControls.IPersistedSelector.DataKey { System::Web::UI::WebControls::DataKey ^ get(); void set(System::Web::UI::WebControls::DataKey ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IPersistedSelector.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参阅 <see cref="P:System.Web.UI.WebControls.IPersistedSelector.DataKey" />。</summary>
        <value>数据绑定控件中所选持久记录的数据键值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以指定如何选的行时保持<xref:System.Web.UI.WebControls.GridView>控件是否处于分页模式。 默认情况下，行选择基于行索引。 每一页上选择同一行 （例如，第三行）。 或者，你可以启用基于所选行的数据键的持久性。 在这种情况下，如果你选择第 3 行第 1 页上的，并且你将移动到第 2 页，第 2 页上不选择任何行。 如果你将移回第 1 页，第 3 行仍处于选中状态。 若要启用此功能，请将此属性设置为`true`。  
  
> [!NOTE]
>  在版本 2.0、 3.0 和 3.5 的 ASP.NET 中，行选择基于仅行索引。 默认情况下，ASP.NET 4 中的行选择基于为了向后兼容的索引。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">要为其创建回调脚本的按钮控件。</param>
        <summary>创建一个 <see cref="T:System.Web.UI.PostBackOptions" /> 对象，该对象表示指定的按钮控件的回发行为。</summary>
        <returns>一个 <see cref="T:System.Web.UI.PostBackOptions" />，表示指定的按钮控件的回发行为。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buttonControl" /> 参数包含 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="buttonControl" /> 导致了验证操作，正在尝试回发至它验证的容器。</exception>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 控件的 <see cref="T:System.Web.UI.WebControls.GridView" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.TagKey%2A>属性允许要写入的相应 HTML 标记的输出流<xref:System.Web.UI.WebControls.GridView>控件。 当<xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>属性设置为`true`，此属性返回`HtmlTextWriterTag.Div`; 否则为此属性返回`HtmlTextWriterTag.Table`。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>你可以重写此属性指定的<see cref="T:System.Web.UI.HtmlTextWriterTag" />要使用为您派生的控件的值。</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As GridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridViewRow ^ TopPagerRow { System::Web::UI::WebControls::GridViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 对象，该对象表示 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中的顶部页导航行。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.GridViewRow" />，表示控件中的顶部页导航行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 启用分页后 (通过设置<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>属性`true`)，一个称为的页导航行附加行会自动显示在<xref:System.Web.UI.WebControls.GridView>控件。 页导航行包含允许用户导航至其他页面，可以显示在顶部、 底部，或同时的顶部和底部的控件的控件。 使用<xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A>属性以编程方式访问<xref:System.Web.UI.WebControls.GridViewRow>对象，表示中的顶部页导航行<xref:System.Web.UI.WebControls.GridView>控件。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A>属性是之后才可用<xref:System.Web.UI.WebControls.GridView>控件创建中的顶部页导航行<xref:System.Web.UI.WebControls.GridView.RowCreated>事件。  
  
 当你需要以编程方式操作顶部页导航行，例如在添加自定义内容时，通常使用此属性。 对任何修改<xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A>属性必须执行后<xref:System.Web.UI.WebControls.GridView>控件已经被呈现; 否则为<xref:System.Web.UI.WebControls.GridView>控件将覆盖所有更改。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A>属性来访问中的顶部页导航行<xref:System.Web.UI.WebControls.GridView>控件。 <xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A>属性用于检索<xref:System.Web.UI.WebControls.DropDownList>控件从的页导航行。  
  
 [!code-aspx-csharp[GridViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewTopPagerRow/CS/gridviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[GridViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewTopPagerRow/VB/gridviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Rows" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>跟踪 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件的视图状态更改，以便可以将更改存储在该控件的 <see cref="T:System.Web.UI.StateBag" /> 对象中。 通过 <see cref="P:System.Web.UI.Control.ViewState" /> 属性可访问此对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 重写此方法以将标记控件的视图状态的一部分开始对控件的跟踪并保存更改的起始点。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为了更新数据要调用的方法的名称。</summary>
        <value>方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性会导致模型绑定要用作数据绑定方法。  
  
 在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRow">
      <MemberSignature Language="C#" Value="public virtual void UpdateRow (int rowIndex, bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateRow(int32 rowIndex, bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateRow (rowIndex As Integer, causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateRow(int rowIndex, bool causesValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">要更新的行的索引。</param>
        <param name="causesValidation">
          <see langword="true" /> 表示在调用此方法时执行页面验证；否则为 <see langword="false" />。</param>
        <summary>使用行的字段值更新位于指定行索引位置的记录。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.UpdateRow%2A>方法来以编程方式更新数据源中的指定索引处的记录。 当你需要更新来自外部的记录通常使用此方法<xref:System.Web.UI.WebControls.GridView>控制，例如页上的其他控件。  
  
> [!NOTE]
>  可以调用此方法仅对当前处于编辑模式的行或行包含双向数据绑定输入的控件。 双向绑定表达式的详细信息，请参阅[绑定到数据库](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)。  
  
 若要指定是否在执行更新操作之前执行页验证，使用`causesValidation`参数。 调用此方法也会引发<xref:System.Web.UI.WebControls.GridView.RowUpdated>和<xref:System.Web.UI.WebControls.GridView.RowUpdating>事件。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.UpdateRow%2A>方法来以编程方式更新中的记录<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[GridViewUpdateRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdateRow/CS/GridViewUpdateRowcs.aspx#1)]
 [!code-aspx-vb[GridViewUpdateRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdateRow/VB/GridViewUpdateRowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.WebControls.GridView" /> 控件被绑定到某个数据源控件，但是与该数据源关联的 <see cref="T:System.Web.UI.DataSourceView" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
      </Docs>
    </Member>
    <Member MemberName="UseAccessibleHeader">
      <MemberSignature Language="C#" Value="public virtual bool UseAccessibleHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAccessibleHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseAccessibleHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseAccessibleHeader { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件是否以易于访问的格式呈现其标题。 提供此属性的目的是使辅助技术设备的用户更易于访问控件。</summary>
        <value>如果 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件以易于访问的格式呈现其标题，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A>属性指定是否<xref:System.Web.UI.WebControls.GridView>控件呈现格式可访问其标题行。 提供此属性的目的是使辅助技术设备的用户更易于访问控件。 默认情况下，此属性的值是`true`和使用呈现该控件的标题`<th>`表头单元格标记。 此外，`scope="col"`属性添加到表头以指定标头适用于列中的所有单元格。 默认呈现`<th>`保留了元素，从而文本水平呈现为加粗和居中。 开发人员可以重写的样式`<th>`元素使用级联样式表。  
  
 如果此属性的值是`false`，使用呈现该控件的标题`<td>`表单元格标记。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A>属性禁用的可访问的标头。  
  
 [!code-aspx-csharp[GridViewUseAccessibleHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUseAccessibleHeader/CS/gridviewuseaccessibleheadercs.aspx#1)]
 [!code-aspx-vb[GridViewUseAccessibleHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUseAccessibleHeader/VB/gridviewuseaccessibleheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.Caption" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.CaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowHeaderColumn" />
      </Docs>
    </Member>
    <Member MemberName="VirtualItemCount">
      <MemberSignature Language="C#" Value="public virtual int VirtualItemCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.VirtualItemCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VirtualItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VirtualItemCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在使用自定义分页时，获取或设置数据源中的实际项数 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件绑定。</summary>
        <value>在使用自定义分页时数据源中的实际项数 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件绑定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性仅当的值<xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A>属性是`true`。 有关更多信息，请参见 <xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> 属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>