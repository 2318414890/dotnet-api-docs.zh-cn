<Type Name="ListViewInsertEventArgs" FullName="System.Web.UI.WebControls.ListViewInsertEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c941cbcd687c925edd6f8c1338c7147480a94ee7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36580655" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewInsertEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewInsertEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListViewInsertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewInsertEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewInsertEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type ListViewInsertEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.ItemInserting" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView>控件都将引发<xref:System.Web.UI.WebControls.ListView.ItemInserting>单击控件中的插入按钮时的事件，但之前<xref:System.Web.UI.WebControls.ListView>控件插入记录。 (插入按钮是的按钮其`CommandName`属性设置为"插入"。)这使你能够在每次此事件发生时执行的自定义的例程的事件处理方法。 例如，你可以验证或记录才使用它的值进行 HTML 编码的数据源中插入。  
  
 A<xref:System.Web.UI.WebControls.ListViewInsertEventArgs>对象传递给事件处理方法。 此对象使您能够确定发送到的可选命令参数的值<xref:System.Web.UI.WebControls.ListView>控件。 你可以访问<xref:System.Web.UI.WebControls.ListViewItem>正在使用插入的对象<xref:System.Web.UI.WebControls.ListViewInsertEventArgs.Item%2A>属性。 您还可以读取或修改新的记录的字段值使用<xref:System.Web.UI.WebControls.ListViewInsertEventArgs.Values%2A>属性。 若要取消插入操作，请设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`true`。  
  
 有关 <xref:System.Web.UI.WebControls.ListViewInsertEventArgs> 类的实例的初始属性值列表，请参见 <xref:System.Web.UI.WebControls.ListViewInsertEventArgs.%23ctor%2A> 构造函数。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.ListViewInsertEventArgs>对象取消插入操作，如果数据项包含空值。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserting/CS/ListViewItemInsertingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserting/VB/ListViewItemInsertingVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
    <altmember cref="T:System.ComponentModel.CancelEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
    <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertEventArgs.Values" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewInsertEventArgs (System.Web.UI.WebControls.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewInsertEventArgs.#ctor(System.Web.UI.WebControls.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item As ListViewItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewInsertEventArgs(System::Web::UI::WebControls::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ListViewInsertEventArgs : System.Web.UI.WebControls.ListViewItem -&gt; System.Web.UI.WebControls.ListViewInsertEventArgs" Usage="new System.Web.UI.WebControls.ListViewInsertEventArgs item" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item">要插入数据源中的数据项。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewInsertEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数初始化的新实例<xref:System.Web.UI.WebControls.ListViewInsertEventArgs>类。  
  
> [!NOTE]
>  在引发事件时，是主要由控件开发人员使用此构造函数。  
  
 下表显示的实例的初始属性值<xref:System.Web.UI.WebControls.ListViewInsertEventArgs>类。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.ListViewInsertEventArgs.Item%2A>|`item` 参数的值。|  
|<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>|`false`。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ListViewItem Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListViewItem Item" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ListViewItem ^ Item { System::Web::UI::WebControls::ListViewItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : System.Web.UI.WebControls.ListViewItem" Usage="System.Web.UI.WebControls.ListViewInsertEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 对象，它表示要插入的数据项。</summary>
        <value>要插入的数据项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ListViewInsertEventArgs.Item%2A>属性来访问的项<xref:System.Web.UI.WebControls.ListView>正在插入的数据的控件。 例如，你可以访问从中的控件的值<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>不是数据绑定控件使用的模板<xref:System.Web.UI.WebControls.ListViewInsertEventArgs.Item%2A>属性。 为此，请使用<xref:System.Web.UI.Control.FindControl%2A>方法<xref:System.Web.UI.WebControls.ListViewItem>被引用的对象<xref:System.Web.UI.WebControls.ListViewInsertEventArgs.Item%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertEventArgs.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Values { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.ListViewInsertEventArgs.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要插入的记录的值。</summary>
        <value>要插入的记录的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ListViewInsertEventArgs.Values%2A>属性来访问要插入的记录的字段的值。 例如，你可以验证或之前记录的值进行 HTML 编码的数据源中插入。  
  
 <xref:System.Web.UI.WebControls.ListViewInsertEventArgs.Values%2A>属性返回<xref:System.Collections.Specialized.OrderedDictionary>实现对象<xref:System.Collections.Specialized.IOrderedDictionary>接口。 <xref:System.Collections.Specialized.OrderedDictionary>对象包含<xref:System.Collections.DictionaryEntry>表示记录的字段的对象。 若要访问的字段名称，使用<xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>属性<xref:System.Collections.Specialized.OrderedDictionary>对象。 若要访问的字段值，使用<xref:System.Collections.Specialized.OrderedDictionary.Values%2A>属性。  
  
> [!NOTE]
>  作为快捷方式，你可以使用的索引器<xref:System.Collections.Specialized.OrderedDictionary>直接对象访问该字段值。 使用索引器的优点是它直接返回字段值。 数据源的字段顺序所依赖的控件 (如<xref:System.Web.UI.WebControls.AccessDataSource>) 只能按索引访问字段值。  
  
   
  
## Examples  
 下面的示例演示如何循环访问<xref:System.Web.UI.WebControls.ListViewInsertEventArgs.Values%2A>集合。 此代码示例摘自更大的示例为提供<xref:System.Web.UI.WebControls.ListViewInsertEventArgs>类。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserting/CS/ListViewItemInsertingCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserting/VB/ListViewItemInsertingVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
      </Docs>
    </Member>
  </Members>
</Type>