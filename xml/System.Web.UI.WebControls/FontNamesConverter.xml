<Type Name="FontNamesConverter" FullName="System.Web.UI.WebControls.FontNamesConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e2c595f1d13193e688435d0337edc0c688e2721" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598421" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontNamesConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontNamesConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FontNamesConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class FontNamesConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontNamesConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>在包含字体名称列表的字符串和表示个别名称的字符串数组之间进行转换。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A>此类将单个字符串包含到包含单个名称的字符串数组的字体名称的列表的方法。 必须用逗号分隔字符串中的每个字体名称。 例如，字符串"宋体，次新 roman，verdana"，将转换为数组，其中包含字符串"arial"、"时间新 roman"和"宋体"。 请注意逗号将删除所有空格开头或末尾的字体名称。 不删除中间字体名称的空白区域。  
  
 <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A>方法执行反向操作。 它将包含到单个字符串包含名称的列表的单个字体名称的字符串数组转换。 例如，将一个数组，包含字符串"arial"、"时间新 roman"和"verdana"转换为字符串"宋体，次新 roman，verdana"。 请注意逗号自动插入之间没有任何空白的字体名称。  
  
 调用<xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A>方法以验证是否可以在调用之前进行转换<xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.FontNamesConverter>类将字体名称的列表的字符串转换为包含各个名称的字符串数组。 然后重新转换为单个字符串，显示的字符串数组。  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontNamesConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontNamesConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FontNamesConverter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 永远不应直接访问的类型转换器。 相反，通过调用适当的转换器<xref:System.ComponentModel.TypeDescriptor>对象。 有关详细信息，请参阅中的示例<xref:System.ComponentModel.TypeConverter>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">提供类型转换器上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。 可以选择为该参数传入 <see langword="null" />。</param>
        <param name="sourceType">表示要从中转换的数据类型的 <see cref="T:System.Type" />。</param>
        <summary>确定此转换器是否可以将指定数据类型的对象转换为包含个别字体名称的字符串数组。</summary>
        <returns>
          如果可以转换类型，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A>方法来确定指定的数据类型是否可以转换为包含单个字体名称的字符串数组。  
  
> [!NOTE]
>  此转换器可以转换只能从`string`数据类型。 `sourceType`参数的类型必须<xref:System.String>。 否则，此方法返回`false`以指示不能转换指定的数据类型。  
  
 可选择传入`null`为`context`参数。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> 方法。 该示例确定指定的数据类型是否可以转换为执行转换之前包含单个字体名称的字符串数组。  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">提供类型转换器上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。 该方法中不使用此参数。 保留它以供该方法的未来版本使用。 可以选择为该参数传入 <see langword="null" />。</param>
        <param name="culture">表示语言、日历系统等区域性信息的 <see cref="T:System.Globalization.CultureInfo" /> 对象。 该方法中不使用此参数。 保留它以供该方法的未来版本使用。 可以选择为该参数传入 <see langword="null" />。</param>
        <param name="value">表示作为转换来源的字符串的 <see cref="T:System.Object" /> 实例。</param>
        <summary>将表示字体名称列表的字符串转换为包含个别字体名称的字符串数组。</summary>
        <returns>表示包含个别字体名称的字符串数组的 <see cref="T:System.Object" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A>方法将转换包含到包含单个名称的字符串数组的字体名称的列表的字符串。 必须用逗号分隔字符串中的每个字体名称。 例如，字符串"宋体，次新 roman，verdana"，将转换为数组，其中包含字符串"arial"、"时间新 roman"和"宋体"。 请注意，逗号将删除所有空格开头或末尾的字体名称。 不删除中间字体名称的空白区域。  
  
> [!NOTE]
>  `context`和`culture`在此版本的方法不使用参数; 它们是保留针对将来版本的方法。 可选择传入`null`为这些参数。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A>方法将字体名称的列表的字符串转换为包含各个名称的字符串数组。  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
          <paramref name="value" /> 的类型不是 <see cref="T:System.String" />。</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">提供类型转换器上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。 该方法中不使用此参数。 保留它以供该方法的未来版本使用。 可以选择为该参数传入 <see langword="null" />。</param>
        <param name="culture">表示语言、日历系统等区域性信息的 <see cref="T:System.Globalization.CultureInfo" /> 对象。 该方法中不使用此参数。 保留它以供该方法的未来版本使用。 可以选择为该参数传入 <see langword="null" />。</param>
        <param name="value">表示作为转换来源的字符串数组的对象。</param>
        <param name="destinationType">表示转换目标的数据类型的 <see cref="T:System.Object" /> 实例对象。 此参数必须是 <see cref="T:System.String" /> 类型。</param>
        <summary>从包含个别字体名称的字符串数组创建表示字体名称列表的字符串。</summary>
        <returns>表示包含字体名称列表的字符串的 <see cref="T:System.Object" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A>方法将转换包含到单个字符串包含名称的列表的单个字体名称的字符串数组。 例如，将一个数组，包含字符串"arial"、"时间新 roman"和"verdana"转换为字符串"宋体，次新 roman，verdana"。 请注意逗号自动插入之间没有任何空白的字体名称。  
  
> [!NOTE]
>  此转换器只能转换为`string`数据类型。 `destinationType`参数的类型必须<xref:System.String>。  
  
> [!NOTE]
>  `context`和`culture`在此版本的方法不使用参数; 它们是保留针对将来版本的方法。 可选择传入`null`为这些参数。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A>方法将转换的字符串包含到单个字符串包含字体名称的列表的各个名称数组。  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
          <paramref name="destinationType" /> 的类型不是 <see cref="T:System.String" />。</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>