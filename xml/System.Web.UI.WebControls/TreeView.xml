<Type Name="TreeView" FullName="System.Web.UI.WebControls.TreeView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a2131d9cf7e3f6ed711c19cbdd23cf8c5c05ca76" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36379402" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeView" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeView&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements ICallbackEventHandler, IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeView : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type TreeView = class&#xA;    inherit HierarchicalDataBoundControl&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackDataHandler&#xA;    interface ICallbackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedNodeChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在树结构中显示分层数据，例如目录。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主题内容：  
  
-   [介绍](#introduction)  
  
-   [节点](#nodes)  
  
-   [静态数据](#static_data)  
  
-   [绑定到数据](#binding_to_data)  
  
-   [动态节点填充](#dynamic_node_population)  
  
-   [自定义用户界面](#customizing_the_user_interface)  
  
-   [事件](#events)  
  
-   [滚动](#scrolling)  
  
-   [辅助功能](#accessibility)  
  
-   [声明性语法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>介绍  
 <xref:System.Web.UI.WebControls.TreeView>控件可用于在树结构中显示分层数据，例如目录或文件目录的表，并支持以下功能：  
  
-   数据绑定，允许要绑定到 XML，表格，或关系数据的控件节点。  
  
-   通过与集成站点导航<xref:System.Web.UI.WebControls.SiteMapDataSource>控件。  
  
-   节点可以显示为纯文本或超链接的文本。  
  
-   以编程方式访问<xref:System.Web.UI.WebControls.TreeView>对象模型，以便创建树、 填充节点、 等动态设置属性。  
  
-   客户端节点 （在支持的浏览器） 的填充。  
  
-   显示每个节点旁的复选框的功能。  
  
-   通过主题、 用户定义的可自定义外观的图像和样式。  
  
    > [!NOTE]
    >  <xref:System.Web.UI.WebControls.TreeView>控件设计内部使用<xref:System.Web.UI.UpdatePanel>控制时，才<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>设置为`true`。 <xref:System.Web.UI.UpdatePanel> 控制用于更新而不是使用回发更新整个页面的页面的选定的区域。 有关详细信息，请参阅[UpdatePanel 控件概述](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)和[局部页面呈现概述](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)。  
  
<a name="nodes"></a>   
## <a name="nodes"></a>节点  
 <xref:System.Web.UI.WebControls.TreeView>控件组成的节点。 在树中的每个条目都称为一个节点，它由<xref:System.Web.UI.WebControls.TreeNode>对象。 节点类型定义，如下所示：  
  
-   包含其他节点的节点称为*父节点*。  
  
-   包含的另一个节点的节点称为*子节点*。  
  
-   没有任何子级的节点称为*叶节点*。  
  
-   不包含任何其他节点但它是到所有其他节点的上级的节点是*根节点*。  
  
 节点可以是父级和子级，但根，父级，和叶节点是互相排斥。 节点的多个视觉和行为的属性确定一个节点为根、 子或叶节点。  
  
 尽管典型的树结构只包含一个根节点，<xref:System.Web.UI.WebControls.TreeView>控件，可将多个根节点添加到你树结构。 当你想要显示项列表而不显示单个根节点，如下所示的产品类别列表时，这非常有用。  
  
 每个节点具有<xref:System.Web.UI.WebControls.TreeNode.Text%2A>属性和<xref:System.Web.UI.WebControls.TreeNode.Value%2A>属性。 值<xref:System.Web.UI.WebControls.TreeNode.Text%2A>属性显示在<xref:System.Web.UI.WebControls.TreeView>，虽然<xref:System.Web.UI.WebControls.TreeNode.Value%2A>属性用来存储有关该节点，如与节点相关联的回发事件传递数据的任何其他数据。  
  
 节点可以是在两种模式之一中： 选择模式和导航模式。 默认情况下，一个节点处于选择模式。 若要将节点放入导航模式下，将设置<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>属性为空字符串以外的值的节点 ("")。 若要使一个节点处于选择模式，设置<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>属性节点为空字符串 ("")。  
  
> [!NOTE]
>  某些 Internet 浏览器有可能会影响的性能限制<xref:System.Web.UI.WebControls.TreeView>控件。 例如，Microsoft Internet Explorer 6.0 具有的 URL 字符限制为发的 2067年字符。 如果某个节点的 URL 中的字符数大于该数字，展开该节点将失败，并且不会引发异常。  
  
<a name="static_data"></a>   
## <a name="static-data"></a>静态数据  
 最简单的数据模型的<xref:System.Web.UI.WebControls.TreeView>控件是静态的数据。 若要显示使用声明性语法的静态数据，请首先打开和关闭`<Nodes>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.TreeView>控件。 接下来，按照嵌套创建树状结构`<asp:TreeNode>`元素开始标记和结束之间`<Nodes>`标记。 每个`<asp:TreeNode>`元素表示树中的节点，并将映射到<xref:System.Web.UI.WebControls.TreeNode>对象。 你可以通过设置特性的设置的每个节点属性其`<asp:TreeNode>`元素。 若要创建子节点，嵌套其他`<asp:TreeNode>`元素开始标记和结束之间`<asp:TreeNode>`父节点的标记。  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>绑定到数据  
 <xref:System.Web.UI.WebControls.TreeView>控件还可以绑定到数据。 你可以使用两种方法之一绑定<xref:System.Web.UI.WebControls.TreeView>控件添加到适当的数据源类型：  
  
-   <xref:System.Web.UI.WebControls.TreeView>控件可以使用任何数据源控件，实现<xref:System.Web.UI.IHierarchicalDataSource>接口，如<xref:System.Web.UI.WebControls.XmlDataSource>控件或<xref:System.Web.UI.WebControls.SiteMapDataSource>控件。 若要将绑定到数据源控件，将设置<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>属性<xref:System.Web.UI.WebControls.TreeView>控制转移到<xref:System.Web.UI.Control.ID%2A>数据源控件的值。 <xref:System.Web.UI.WebControls.TreeView>控件自动绑定到指定的数据源控件。 这是将绑定到数据的首选的方法。  
  
-   <xref:System.Web.UI.WebControls.TreeView>控件还可以绑定到<xref:System.Xml.XmlDocument>对象或<xref:System.Data.DataSet>具有关系对象。 若要将绑定到这些数据源之一，将设置<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>属性<xref:System.Web.UI.WebControls.TreeView>控件拖到数据源，然后调用<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法。  
  
 当绑定到数据源的每个数据项都包含 （如具有多个特性的 XML 元素） 的多个属性节点显示返回的值`ToString`的数据项，默认情况下的方法。 对于 XML 元素，节点显示的元素名称，其显示在树的基础结构，但其他方面不是非常有用。 你可以通过指定树节点绑定使用绑定到特定数据项属性节点<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合。 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合包含`TreeNodeBinding`定义数据项和它所绑定到的节点之间的关系的对象。 你可以指定的绑定和数据项属性的节点中显示的条件。 在树节点绑定上的详细信息，请参阅<xref:System.Web.UI.WebControls.TreeNodeBinding>。  
  
> [!IMPORTANT]
>  恶意用户可以创建一个回调请求并获取数据的节点<xref:System.Web.UI.WebControls.TreeView>页开发人员未显示的控件。 因此，数据源必须实现的数据的安全。 不要使用<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>属性来隐藏数据。  
  
<a name="dynamic_node_population"></a>   
## <a name="dynamic-node-population"></a>动态节点填充  
 有时，它是不可行以静态定义树的结构，因为数据源返回的数据太多，或者要显示的数据取决于在运行时获取的信息。 因此，<xref:System.Web.UI.WebControls.TreeView>控件支持动态节点填充。 当<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>节点的属性设置为`true`，在该节点已展开时的运行时填充该节点。 若要动态填充一个节点，必须定义包含用于填充的节点的逻辑的事件处理方法<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>事件。  
  
 浏览器支持回调脚本还可以利用客户端节点填充。 （这包括 Internet Explorer 5.5 和更高版本以及某些其他浏览器。）客户端节点填充使<xref:System.Web.UI.WebControls.TreeView>控件来填充时用户展开节点，而无需到服务器的往返行程使用客户端脚本的节点。 有关客户端节点填充的详细信息，请参阅<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>自定义用户界面  
 有多种方法，以自定义的外观<xref:System.Web.UI.WebControls.TreeView>控件。 首先，你可以为每个节点类型指定不同的样式 （如字体大小和颜色）。  
  
 级联样式表 (CSS) 用于自定义控件的外观，如果使用内联样式或单独的 CSS 文件，但不要同时。 使用内联样式和单独的 CSS 文件可能会导致意外的结果。 在上使用的控件的样式表的详细信息，请参阅[Web 服务器控件和 CSS 样式](http://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42)。  
  
 下表列出可用的节点样式。  
  
|节点样式属性|描述|  
|-------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>|当鼠标指针置于节点的样式设置。|  
|<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>|叶节点的样式设置。|  
|<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>|节点的默认样式设置。|  
|<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>|父节点的样式设置。|  
|<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>|根节点的样式设置。|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>|所选节点的样式设置。|  
  
 你可以通过使用来控制节点在树中的特定深度的样式<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>集合。 集合中的第一个样式对应于的节点在树中的第一个级别的样式。 集合中的第二个样式对应于的节点在树中，依次类推中的第二个级别的样式。 这是最常用于生成表的内容 – 样式导航菜单其中某一深度节点应具有相同的外观，而不考虑它们是否有子节点。  
  
> [!NOTE]
>  如果为某些深度级别使用定义样式<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>集合，因此样式重写任何根、 父节点还是叶节点的节点的该深度的样式设置。  
  
 若要更改控件的外观的另一种方法是自定义中显示的图像的<xref:System.Web.UI.WebControls.TreeView>控件。 可以通过设置以下表所示的属性来指定您自己自定义控件的不同部分的图像集。  
  
|映像属性|描述|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|为可折叠的节点的指示符显示的图像 URL。 此映像通常是一个减号 （-）。|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|用于可展开的节点的指示符显示的图像 URL。 此映像通常是一个加号 （+）。|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|包含用于连接到子节点的父节点的行映像的文件夹 URL。 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>属性还必须设置为`true`此属性产生任何影响。|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|用于非可展开的节点的指示符显示的图像 URL。|  
  
> [!NOTE]
>  不需要自定义每个图像属性。 如果未显式设置映像属性，会使用内置的默认图像。  
  
 <xref:System.Web.UI.WebControls.TreeView>控件还使你可以显示一个节点旁的复选框。 当<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>属性设置为值`TreeNodeTypes.None`，指定的节点类型旁显示复选框。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>属性可以设置为的按位组合<xref:System.Web.UI.WebControls.TreeNodeTypes>枚举成员值。  
  
 该页发送到服务器，每次<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>集合会自动填充的所选节点。 复选框显示时，你可以使用<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>事件的发往服务器之间的复选框的状态发生更改时运行的自定义的例程。  
  
<a name="events"></a>   
## <a name="events"></a>事件  
 <xref:System.Web.UI.WebControls.TreeView>控件提供可以编程的多个事件。 这允许你每次事件发生时运行的自定义的例程。 下表列出了支持的事件<xref:System.Web.UI.WebControls.TreeView>控件。  
  
|事件|描述|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>|发生时的复选框<xref:System.Web.UI.WebControls.TreeView>控件更改发往服务器之间的状态。|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>|在 <xref:System.Web.UI.WebControls.TreeView> 控件中选定某个节点时发生。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|在 <xref:System.Web.UI.WebControls.TreeView> 控件中展开某个节点时发生。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>|在 <xref:System.Web.UI.WebControls.TreeView> 控件中折叠某个节点时发生。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>|当其 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 属性设置为 `true` 的节点在 <xref:System.Web.UI.WebControls.TreeView> 控件中展开时发生。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>|将数据项绑定到 <xref:System.Web.UI.WebControls.TreeView> 控件中的某个节点时发生。|  
  
<a name="scrolling"></a>   
## <a name="scrolling"></a>滚动  
 <xref:System.Web.UI.WebControls.TreeView>控件不具有内置滚动。 要添加滚动，放<xref:System.Web.UI.WebControls.TreeView>中控制<xref:System.Web.UI.WebControls.Panel>控件并将添加到的滚动条<xref:System.Web.UI.WebControls.Panel>控件。 有关详细信息，请参阅[面板 Web 服务器控件概述](http://msdn.microsoft.com/library/127b61ed-87f2-46f4-92a3-785166e7245b)。  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>可访问性  
 默认情况下，对于此控件呈现的标记可能不符合辅助功能标准。 对于此控件的辅助功能支持的详细信息，请参阅[ASP.NET 控件和可访问性](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>声明性语法  
  
```  
<asp:TreeView  
    AccessKey="string"  
    AutoGenerateDataBindings="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CollapseImageToolTip="string"  
    CollapseImageUrl="uri"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    EnableClientScript="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExpandDepth="string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|  
        14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30"  
    ExpandImageToolTip="string"  
    ExpandImageUrl="uri"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ImageSet="Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|  
        BulletedList|BulletedList2|BulletedList3|BulletedList4|  
        Arrows|News|Contacts|Inbox|Events|Faq"  
    LineImagesFolder="string"  
    MaxDataBindDepth="integer"  
    NodeIndent="integer"  
    NodeWrap="True|False"  
    NoExpandImageUrl="uri"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedNodeChanged="SelectedNodeChanged event handler"  
    OnTreeNodeCheckChanged="TreeNodeCheckChanged event handler"  
    OnTreeNodeCollapsed="TreeNodeCollapsed event handler"  
    OnTreeNodeDataBound="TreeNodeDataBound event handler"  
    OnTreeNodeExpanded="TreeNodeExpanded event handler"  
    OnTreeNodePopulate="TreeNodePopulate event handler"  
    OnUnload="Unload event handler"  
    PathSeparator="string"  
    PopulateNodesFromClient="True|False"  
    runat="server"  
    ShowCheckBoxes="None|Root|Parent|Leaf|All"  
    ShowExpandCollapse="True|False"  
    ShowLines="True|False"  
    SkinID="string"  
    SkipLinkText="string"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:TreeNodeBinding  
                    DataMember="string"  
                    Depth="integer"  
                    FormatString="string"  
                    ImageToolTip="string"  
                    ImageToolTipField="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    ShowCheckBox="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <HoverNodeStyle />  
        <LeafNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <LevelStyles>  
                <asp:TreeNodeStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    ChildNodesPadding="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ImageUrl="uri"  
                    NodeSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelStyles>  
        <Nodes>  
                <asp:TreeNode  
                    Checked="True|False"  
                    Expanded="string"  
                    ImageToolTip="string"  
                    ImageUrl="uri"  
                    NavigateUrl="uri"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    Selected="True|False"  
                    ShowCheckBox="string"  
                    Target="string"  
                    Text="string"  
                    ToolTip="string"  
                    Value="string"  
>  
                </asp:TreeNode>  
        </Nodes>  
        <NodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <ParentNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <RootNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <SelectedNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:TreeView>  
```  
  
   
  
## Examples  
 本部分包含七个代码示例：  
  
-   第一个代码示例演示如何设置第二个代码示例的帧。  
  
-   第二个代码示例演示如何使用声明性语法，以显示中的静态数据<xref:System.Web.UI.WebControls.TreeView>控件。  
  
-   第三个代码示例演示如何将绑定<xref:System.Web.UI.WebControls.TreeView>到 XML 数据源的控件。  
  
-   第四个代码示例为第三个代码示例提供示例 XML 数据。  
  
-   第五个代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView>通过将其绑定到的站点导航控件<xref:System.Web.UI.WebControls.SiteMapDataSource>控件。  
  
-   第六个代码示例的第五个代码示例提供示例站点地图数据。  
  
-   第七个代码示例演示如何填充中的节点<xref:System.Web.UI.WebControls.TreeView>从客户端的控件。  
  
 下面的代码示例演示如何设置下面的代码示例的帧。  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 下面的代码示例演示如何使用声明性语法，以显示中的静态数据<xref:System.Web.UI.WebControls.TreeView>控件。 此示例在上述示例的帧集内用于显示的内容表。  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 下面的代码示例演示如何将绑定<xref:System.Web.UI.WebControls.TreeView>到 XML 数据源的控件。 对于此示例中正常工作，你必须复制此代码示例，到名为 Book.xml 后面提供的示例 XML 数据。  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 下面的代码示例提供前面示例的示例 XML 数据。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView>通过将其绑定到的站点导航控件<xref:System.Web.UI.WebControls.SiteMapDataSource>控件。 对于此示例中正常工作，你必须复制后此代码示例中，到名为 Web.sitemap 提供的示例站点站点地图数据。  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 下面的代码示例提供前面的代码示例的示例站点地图数据。  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 下面的代码示例演示如何填充中的节点<xref:System.Web.UI.WebControls.TreeView>从客户端的控件。 启用客户端节点填充后，会自动填充节点，客户端，而无需回发到服务器上。  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
    <altmember cref="T:System.Web.UI.IHierarchicalDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.TreeView" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.%23ctor%2A>构造函数来创建和初始化的新实例<xref:System.Web.UI.WebControls.TreeView>类。 若要添加<xref:System.Web.UI.WebControls.TreeView>动态控制到页上，创建一个新<xref:System.Web.UI.WebControls.TreeView>对象、 设置其属性，并将其添加到<xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType>集合的容器控件，如<xref:System.Web.UI.WebControls.PlaceHolder>控件。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.%23ctor%2A>构造函数来添加<xref:System.Web.UI.WebControls.TreeView>动态控制到页。 第二个代码示例为第一个代码示例提供示例 XML 数据。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.%23ctor%2A>构造函数来添加<xref:System.Web.UI.WebControls.TreeView>动态控制到页。 对于此示例中正常工作，你必须复制此代码示例，到名为 Book.xml 后面提供的示例 XML 数据。  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 下面的代码示例提供前面示例的示例 XML 数据。  
  
```  
<Book Title="Book Title">  
  <Chapter Heading="Chapter 1">  
    <Section Heading="Section 1">  
    </Section>  
    <Section Heading="Section 2">  
    </Section>  
  </Chapter>  
  <Chapter Heading="Chapter 2">  
    <Section Heading="Section 1">  
    </Section>  
  </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将需要呈现的 HTML 特性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 控件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.AddAttributesToRender%2A>方法主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDataBindings">
      <MemberSignature Language="C#" Value="public bool AutoGenerateDataBindings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateDataBindings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateDataBindings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateDataBindings : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件是否自动生成树节点绑定。</summary>
        <value>若要让 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件自动生成树节点绑定，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 树节点绑定所定义数据项和它所绑定到的节点之间的关系。 在绑定到其中的每个数据项包含多个属性 （如具有多个特性的 XML 元素） 的数据源时<xref:System.Web.UI.WebControls.TreeView>控件需要知道哪个数据项属性绑定到哪个<xref:System.Web.UI.WebControls.TreeNode>属性。 如果<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>属性设置为`true`、<xref:System.Web.UI.WebControls.TreeView>控件自动生成设置的默认树节点绑定<xref:System.Web.UI.WebControls.TreeNode.Text%2A>属性<xref:System.Web.UI.WebControls.TreeNode>绑定到该键的值与关联的对象返回`ToString`数据项目的方法。  
  
> [!NOTE]
>  不会自动生成的树节点绑定添加到<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合。  
  
 在 XML 元素，返回的值的情况下`ToString`方法是元素名称，但显示的基础结构的 XML 文件中，否则不是非常有用。 若要创建一个更有用的树，必须定义你自己的树节点绑定通过填充<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合。  
  
> [!NOTE]
>  如果你定义<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合，<xref:System.Web.UI.WebControls.TreeView>控件而不是自动生成的树节点绑定中使用这些值。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何通过设置来禁用自动生成树节点绑定<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>属性`false`。 第二个代码示例的第一个代码示例提供示例站点地图数据。  
  
 下面的代码示例演示如何通过设置来禁用自动生成树节点绑定<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>属性`false`。 A<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>然后定义集合之间建立关系中的数据项<xref:System.Web.UI.WebControls.SiteMapDataSource>控制和的节点<xref:System.Web.UI.WebControls.TreeView>控件。 对于此示例中正常工作，你必须复制后此代码示例中，到名为 Web.sitemap 提供的示例站点站点地图数据。  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 下面的代码示例提供前面示例的示例站点地图数据。  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckedNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection CheckedNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ CheckedNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedNodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象的集合，这些对象表示在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中显示的选中了复选框的节点。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中显示的选中了复选框的节点。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果复选框将显示在<xref:System.Web.UI.WebControls.TreeView>控件 (通过设置<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>属性的值以外的其他`TreeNodeType.None`)，使用<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>属性来确定哪些节点显示选中的复选框。 此集合通常用于循环访问已选中的复选框，在树中的所有节点。  
  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>引发事件时的复选框<xref:System.Web.UI.WebControls.TreeView>控件更改发往服务器之间的状态。 这使您可以提供执行自定义的例程，例如更新数据库或显示的内容，每次此事件发生时的事件处理方法。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>使用树形结构的深度优先遍历填充集合： 之前填充下一步的父节点，处理每个父节点及其子节点下。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>属性来确定哪些节点已选中的复选框<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeView.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>关闭树中的每个节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>方法提供了一种简便方式关闭在树中的每个节点。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>方法可折叠中的所有节点<xref:System.Web.UI.WebControls.TreeView>在同一时间的控件。  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageToolTip">
      <MemberSignature Language="C#" Value="public string CollapseImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CollapseImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置可折叠节点的指示符所显示图像的工具提示。</summary>
        <value>可折叠节点的指示符所显示图像的工具提示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>属性指定的可折叠的映像的工具提示。 你指定的文本，提供可用来使控件更易于访问的映像的说明的辅助技术设备。  
  
 此属性的值存储在视图状态。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>属性来指定映像的可折叠的节点的指示符显示的工具提示。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageUrl">
      <MemberSignature Language="C#" Value="public string CollapseImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CollapseImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置自定义图像的 URL，该图像用作可折叠节点的指示符。</summary>
        <value>为可折叠节点所显示的自定义图像的 URL。 默认值为空字符串 ("")，这将显示默认的减号 (-) 图像。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>属性指定是否可折叠节点指示符的自定义映像。 此映像可折叠节点旁边显示，并且通常是一个减号 （-）。  
  
 当<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>属性设置为`true`、<xref:System.Web.UI.WebControls.TreeView>控件将显示一个加号 （+）、 减号 （-） 或旁边的节点，以指示节点是否是可展开、 折叠的还是非展开，分别占位符图像。 你可以指定由第一个设置自定义映像<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>属性`TreeViewImageSet.Custom`，然后再设置<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>， <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，和<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>属性设置为自定义图像的 Url。 如果没有指定任何图像，将使用默认映像。 若要隐藏展开节点指示符，设置<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>属性`false`。  
  
> [!NOTE]
>  若要确保节点中正确对齐<xref:System.Web.UI.WebControls.TreeView>控制使用自定义映像时，请确保指定的所有映像<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>， <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，和<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>属性具有相同的尺寸。  
  
 在自定义映像用作可折叠节点指示符时，你还应考虑设置<xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>属性来指定映像的工具提示。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>属性指定是否可折叠节点指示符的自定义映像。 对于来显示和控件中显示的图像的代码示例中，你必须提供自己的映像和<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>属性必须设置为`TreeNodeImageSet.Custom`。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="treeView.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建用于存储子控件的集合。</summary>
        <returns>始终返回 <see cref="T:System.Web.UI.EmptyControlCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>控件不支持嵌入的子控件。 此方法已被重写以防止添加子控件，并始终返回<xref:System.Web.UI.EmptyControlCollection?displayProperty=nameWithType>对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.UI.WebControls.TreeNode CreateNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.WebControls.TreeNode CreateNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateNode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNode () As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Web::UI::WebControls::TreeNode ^ CreateNode();" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : unit -&gt; System.Web.UI.WebControls.TreeNode&#xA;override this.CreateNode : unit -&gt; System.Web.UI.WebControls.TreeNode" Usage="treeView.CreateNode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 类的新实例。 <see cref="M:System.Web.UI.WebControls.TreeView.CreateNode" /> 是一个帮助器方法。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> 的新实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A>方法是返回的新实例的帮助器方法<xref:System.Web.UI.WebControls.TreeNode>类。  
  
 <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A>方法主要由控件开发人员使用。 控件开发人员，想要扩展<xref:System.Web.UI.WebControls.TreeView>类来扩展<xref:System.Web.UI.WebControls.TreeNode>类应重写此方法以返回一个对象，派生自<xref:System.Web.UI.WebControls.TreeNode>。 若要扩展的常见原因<xref:System.Web.UI.WebControls.TreeNode>类是重写<xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A>和<xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="treeView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>调用基类的 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据绑定控件应重写<xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>方法而不是<xref:System.Web.UI.WebControls.TreeView.DataBind%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As TreeNodeBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeBindingCollection ^ DataBindings { System::Web::UI::WebControls::TreeNodeBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Web.UI.WebControls.TreeNodeBindingCollection" Usage="System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> 对象的集合，这些对象定义数据项与其绑定到的节点之间的关系。</summary>
        <value>表示数据项与其绑定到的节点之间关系的一个 <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合包含<xref:System.Web.UI.WebControls.TreeNodeBinding>定义数据项和它所绑定到的节点之间的关系的对象。 当绑定到数据源的每个数据项都包含 （如具有多个特性的 XML 元素） 的多个属性节点显示返回的值`ToString`的数据项，默认情况下的方法。 对于 XML 元素，该节点显示的元素名称，但显示的基础结构的树中，否则不是非常有用。 可以通过指定的树节点绑定来绑定到特定数据项属性节点。  
  
 在定义数据项和节点之间的关系时，必须指定为绑定和值要绑定到的属性的两个条件<xref:System.Web.UI.WebControls.TreeNode>对象。 该条件指示应在何时数据项绑定到的节点。 与节点深度和 / 或数据成员，可以指定条件。 节点深度指定获取绑定的节点级别。 例如，如果你指定的节点深度为 0，级别 0 树状结构中的所有节点会都绑定使用的树节点绑定。 数据成员在基础数据源中，指定的数据项目类型，但可以表示不同的信息，具体取决于数据源。 例如，XML 元素的数据成员指定元素的名称。  
  
 如果选择多个<xref:System.Web.UI.WebControls.TreeNodeBinding>对象定义相互冲突<xref:System.Web.UI.WebControls.TreeView>控件适用以下优先顺序中的树节点绑定：  
  
1.  <xref:System.Web.UI.WebControls.TreeNodeBinding>定义深度和数据成员的对象。  
  
2.  <xref:System.Web.UI.WebControls.TreeNodeBinding>只定义深度的对象。  
  
3.  <xref:System.Web.UI.WebControls.TreeNodeBinding>定义仅的数据成员的对象。  
  
4.  <xref:System.Web.UI.WebControls.TreeNodeBinding>定义既不深度，也不数据成员的对象。  
  
 如果多个绑定指定了符合相同的优先级条件，则应用集合中的第一个绑定。  
  
 一旦建立绑定条件时，你可以随后绑定的属性<xref:System.Web.UI.WebControls.TreeNode>可以绑定到一个值的对象。 你可以将绑定到某个属性或字段的数据项，或显示静态值。 有关绑定的属性的更多信息<xref:System.Web.UI.WebControls.TreeNode>对象转换为一个值，请参阅<xref:System.Web.UI.WebControls.TreeNodeBinding>。  
  
 尽管<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>可以以编程方式填充集合，通常以声明方式设置。 若要指定的树节点绑定，应首先嵌套开始和结束`<DataBindings>`开始和结束标记之间的标记<xref:System.Web.UI.WebControls.TreeView>控件。 接下来，将放置`<asp:TreeNodeBinding>`元素开始标记和结束之间`<DataBindings>`标记每个树节点绑定你想要指定。  
  
 数据绑定中设置的创建时<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>属性<xref:System.Web.UI.WebControls.TreeView>控制转移到`true`，创建的绑定具有<xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>属性设置为`true`。 以声明方式创建的数据绑定都具有<xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>属性设置为`false`。 使用声明性语法，可控制各个数据绑定的行为。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>定义数据项和它所绑定到的节点之间的关系的集合。 第二个代码示例为第一个代码示例提供示例 XML 数据。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>定义数据项和它所绑定到的节点之间的关系的集合。 对于此示例中正常工作，你必须复制此代码示例，到名为 Book.xml 后面提供的示例 XML 数据。 此示例仅指定<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>绑定属性。 略微的性能增益无法添加的还指定<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>属性。  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 下面的代码示例提供前面示例的示例 XML 数据。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，指示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件是否呈现客户端脚本以处理展开和折叠事件。</summary>
        <value>若要在兼容的浏览器上呈现客户端脚本，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>属性指定是否<xref:System.Web.UI.WebControls.TreeView>控件呈现兼容的浏览器来处理展开和折叠事件上的客户端脚本。 当此属性设置为`true`，兼容的浏览器执行的代码可展开和折叠客户端上的节点。 必须为客户端脚本，以便提前知道树节点数据。 使用客户端脚本可以阻止发布回服务器每次节点是展开还是折叠。  
  
 节点时提前不知道的树节点数据，可以从客户端，如果填充`PopulateNodesFromClient`属性也设置为`true`。 在此方案中，你还必须提供的事件处理方法<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>事件以填充节点。 有关客户端节点填充的详细信息，请参阅<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>属性设置为`false`、<xref:System.Web.UI.WebControls.TreeView>控件回发到服务器每次节点是展开还是折叠。  
  
 此属性的值存储在视图状态。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>属性来呈现用于上展开和折叠节点兼容的浏览器的客户端脚本。 第二个代码示例为第一个代码示例提供示例 XML 数据。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>属性来呈现用于上展开和折叠节点兼容的浏览器的客户端脚本。 请注意，向服务器发送需要展开和折叠节点时<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>属性设置为`false`。 对于此示例中正常工作，你必须复制此代码示例，到名为 Book.xml 后面提供的示例 XML 数据。  
  
 [!code-aspx-csharp[TreeViewEnableClientScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewEnableClientScript/CS/treeviewenableclientscriptcs.aspx#1)]
 [!code-aspx-vb[TreeViewEnableClientScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewEnableClientScript/VB/treeviewenableclientscriptvb.aspx#1)]  
  
 下面的代码示例提供前面的代码示例的示例 XML 数据。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeView.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开树中的每个节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>方法提供了一种简便方式打开树中的每个节点。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>方法可展开中的所有节点<xref:System.Web.UI.WebControls.TreeView>在同一时间的控件。  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandDepth">
      <MemberSignature Language="C#" Value="public int ExpandDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExpandDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExpandDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandDepth : int with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.TreeView/TreeViewExpandDepthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置第一次显示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件时所展开的层次数。</summary>
        <value>最初显示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 时要显示的深度。 默认值为 -1，表示显示所有节点。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.ExpandDepth%2A>属性控制的呈现<xref:System.Web.UI.WebControls.TreeView>控制显示的第一个时间。 在后续回发，这些节点保留其当前的展开的状态。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageToolTip">
      <MemberSignature Language="C#" Value="public string ExpandImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置可展开节点的指示符所显示图像的工具提示。</summary>
        <value>可展开节点的指示符所显示图像的工具提示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>属性来指定映像的工具提示。 你指定的文本，提供可用来使控件更易于访问的映像的说明的辅助技术设备。  
  
 此属性的值存储在视图状态。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>属性指定用于可展开的节点的指示符显示的图像的工具提示。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageUrl">
      <MemberSignature Language="C#" Value="public string ExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置自定义图像的 URL，该图像用作可展开节点的指示符。</summary>
        <value>为可展开节点所显示的自定义图像的 URL。 默认值为空字符串 ("")，这将显示默认的加号 (+) 图像。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>属性指定用于可展开的节点的指示符的自定义映像。 此映像可展开节点旁边显示，并且通常是一个加号 （+）。  
  
 当<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>属性设置为`true`、<xref:System.Web.UI.WebControls.TreeView>控件将显示一个加号 （+）、 减号 （-） 或旁边的节点，以指示节点是否是可展开、 折叠的还是非展开，分别占位符图像。 你可以指定由第一个设置自定义映像<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>属性`TreeViewImageSet.Custom`，然后再设置<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>， <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，和<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>属性设置为自定义图像的 Url。 如果没有指定任何图像，将使用默认映像。 若要隐藏展开节点指示符，设置<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>属性`false`。  
  
> [!NOTE]
>  若要确保节点中正确对齐<xref:System.Web.UI.WebControls.TreeView>控制使用自定义映像时，请确保指定的所有映像<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>， <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，和<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>属性具有相同的尺寸。  
  
 若要正确显示的自定义映像，你可能需要设置<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>到`false`。  
  
 在自定义映像用作可展开的节点指示符时，你还应考虑设置<xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>属性来指定映像的工具提示。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>属性指定用于可展开的节点的指示符的自定义映像。 对于来显示和控件中显示的图像的代码示例中，你必须提供自己的映像和<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>属性必须设置为`TreeNodeImageSet.Custom`。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="FindNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.TreeNode FindNode(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNode (valuePath As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::TreeNode ^ FindNode(System::String ^ valuePath);" />
      <MemberSignature Language="F#" Value="member this.FindNode : string -&gt; System.Web.UI.WebControls.TreeNode" Usage="treeView.FindNode valuePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">节点的值路径。</param>
        <summary>检索 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控件中指定值路径处的 <see cref="T:System.Web.UI.WebControls.TreeView" /> 对象。</summary>
        <returns>指定值路径处的 <see cref="T:System.Web.UI.WebControls.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.FindNode%2A>方法以获取从节点<xref:System.Web.UI.WebControls.TreeView>控件的指定的值路径。 值路径包含窗体中的根节点的当前节点的路径的节点值的分隔符分隔列表。 每个节点存储中的其值路径<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>属性。 <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>属性指定用于分隔节点值的分隔符字符。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.FindNode%2A>方法来检索节点从<xref:System.Web.UI.WebControls.TreeView>控件。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[TreeViewFindNode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFindNode/CS/treeviewfindnodecs.aspx#1)]
 [!code-aspx-vb[TreeViewFindNode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFindNode/VB/treeviewfindnodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string&#xA;override this.GetCallbackResult : unit -&gt; string" Usage="treeView.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回以控件为目标的回调事件的结果。</summary>
        <returns>回调的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>控件实现<xref:System.Web.UI.ICallbackEventHandler>接口并使用<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>检索数据和<xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A>方法来检索到的数据返回到控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style HoverNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style HoverNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HoverNodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ HoverNodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HoverNodeStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 对象的引用，该对象可用于设置当鼠标指针停在一个节点上时该节点的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的一个引用，表示鼠标指针停在一个节点上时该节点的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>属性来控制节点的外观，当鼠标指针悬停。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TreeNodeStyle>它将返回的对象。 可以在窗体以声明方式设置了属性`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TreeNodeStyle>对象 (例如， `HoverNodeStyle-ForeColor`)。 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `HoverNodeStyle.ForeColor`)。 仅在支持脚本的客户端上支持此功能。  
  
> [!NOTE]
>  若要使用<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>属性，必须包含`<head>`具有元素`runat="server"`属性。  
  
 常用设置通常包括自定义的背景色、 前景颜色、 字体属性和节点间距。 按以下顺序应用样式属性：  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A><xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，具体取决于节点类型。 如果<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>定义集合，就会应用在此期间，重写的其他节点的样式属性。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
> [!NOTE]
>  样式设置<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>属性重写中的任何相应节点样式设置<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>， <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>， <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>， <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>属性。  
  
 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>属性不呈现的节点其<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>属性设置为`TreeNodeSelectAction.None`。  
  
 与不同<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>和<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>属性，它们是<xref:System.Web.UI.WebControls.TreeNodeStyle>对象，<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>属性是<xref:System.Web.UI.WebControls.Style>对象。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>属性来控制节点的外观，当鼠标指针悬停。 对于此示例正常工作，必须包括`<head>`具有元素`runat="server"`属性。  
  
 [!code-aspx-csharp[TreeViewHoverNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewHoverNodeStyle/CS/treeviewhovernodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewHoverNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewHoverNodeStyle/VB/treeviewhovernodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      </Docs>
    </Member>
    <Member MemberName="ImageSet">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeViewImageSet ImageSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageSet As TreeViewImageSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeViewImageSet ImageSet { System::Web::UI::WebControls::TreeViewImageSet get(); void set(System::Web::UI::WebControls::TreeViewImageSet value); };" />
      <MemberSignature Language="F#" Value="member this.ImageSet : System.Web.UI.WebControls.TreeViewImageSet with get, set" Usage="System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeViewImageSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的图像组。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> 值之一。 默认值为 <see langword="TreeViewImageSet.Custom" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>属性以指定要使用的图像的组<xref:System.Web.UI.WebControls.TreeView>控件。 你可以选择一组预定义的映像以使控件具有标准外观或定义你自己的自定义一组。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>属性不会影响节点任何样式设置。 设置适当的样式属性，如<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>属性，如果你想要添加自定义颜色和间距。  
  
 下表列出的有效值<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>属性。  
  
|图像集|描述|  
|---------------|-----------------|  
|`TreeViewImageSet.Arrows`|使用箭头映像的预定义的映像集。|  
|`TreeViewImageSet.BulletedList`|使用菱形项目符号图像的预定义的映像集。|  
|`TreeViewImageSet.BulletedList2`|使用方形项目符号图像的预定义的映像集。|  
|`TreeViewImageSet.BulletedList3`|预定义的、分节的菱形项目符号图像集。|  
|`TreeViewImageSet.BulletedList4`|预定义的、大小随级别不同而变化的、分节的备用菱形项目符号图像集。|  
|`TreeViewImageSet.Contacts`|使用 MSN Messenger 映像的预定义的映像集。|  
|`TreeViewImageSet.Custom`|用户定义的图像集。|  
|`TreeViewImageSet.Events`|使用事件日志样式的图像的预定义的映像集。|  
|`TreeViewImageSet.Faq`|使用 FAQ 样式的图像的预定义的映像集。|  
|`TreeViewImageSet.Inbox`|使用电子邮件样式的图像的预定义的映像集。|  
|`TreeViewImageSet.News`|使用新闻组样式的图像的预定义的映像集。|  
|`TreeViewImageSet.Simple`|概括介绍了使用简单形状的预定义的图像集。|  
|`TreeViewImageSet.Simple2`|使用简单已填充的形状的预定义的映像集。|  
|`TreeViewImageSet.Msdn`|使用 MSDN 映像的预定义的映像集。|  
|`TreeViewImageSet.WindowsHelp`|使用 Microsoft Windows 帮助映像的预定义的映像集。|  
|`TreeViewImageSet.XPFileExplorer`|使用 Microsoft Windows XP 中可用的 Windows 资源管理器映像的预定义的映像集。|  
  
 在定义一组自定义映像时，应为每个以下表中的属性来指定一个图像。 否则，使用该属性的默认图像。  
  
|Property|描述|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|可折叠的节点的指示符用于自定义图像 URL。|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|用于可展开的节点的指示符的自定义图像 URL。|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|包含有关连接节点的行的自定义映像的文件夹 URL。|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|用于非可展开的节点的指示符的自定义图像 URL。|  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>属性显示的图像中的 Windows 资源管理器集<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 [!code-aspx-csharp[TreeViewImageSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewImageSet/CS/treeviewimagesetcs.aspx#1)]
 [!code-aspx-vb[TreeViewImageSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewImageSet/VB/treeviewimagesetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的图像集不是 <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> 值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="LeafNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeafNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ LeafNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LeafNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 对象的引用，该对象可用于设置叶节点的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的一个引用，表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中叶节点的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>属性来控制中的叶节点的外观<xref:System.Web.UI.WebControls.TreeView>控件。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TreeNodeStyle>对象返回。 可以在窗体以声明方式设置了属性`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TreeNodeStyle>对象 (例如， `LeafNodeStyle-ForeColor`)。 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `LeafNodeStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色、 字体属性和节点间距。 按以下优先顺序应用样式属性：  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A><xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，具体取决于节点类型。 如果<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>定义集合，就会应用在此期间，重写的其他节点的样式属性。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 如果你需要生成表的内容 – 样式导航菜单其中某一级别的节点应具有相同的外观，而不考虑它们是否有子节点，则可以考虑使用<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>而不是设置单个属性样式属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>属性来控制中的叶节点的外观<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 [!code-aspx-csharp[TreeViewLeafNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLeafNodeStyle/CS/treeviewleafnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewLeafNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLeafNodeStyle/VB/treeviewleafnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelStyles As TreeNodeStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyleCollection ^ LevelStyles { System::Web::UI::WebControls::TreeNodeStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelStyles : System.Web.UI.WebControls.TreeNodeStyleCollection" Usage="System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的集合，这些对象表示树中各个级别上的节点样式。</summary>
        <value>表示树中各个级别上的节点样式的一个 <see cref="T:System.Web.UI.WebControls.StyleCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>作为单个样式属性的替代方法的集合 (如<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>属性) 来控制节点的树中各个级别上的样式。 集合中的第一个样式对应于树的第一个级别中的节点的样式。 集合中的第二个样式对应于为树中，依次类推的第二个级别中的节点的样式。 此属性通常用于确定生成表的内容 – 样式导航菜单其中某一级别的节点应具有相同的外观，而不考虑它们是否有子节点。  
  
 按以下顺序应用样式属性：  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A><xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，具体取决于节点类型。 如果<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>定义集合，就会应用在此期间，重写的其他节点的样式属性。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>属性创建导航菜单。 控件始终是完全展开，与展开节点指示符和隐藏的映像。 此外，<xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A>属性用于控制节点级别的间距。  
  
 [!code-aspx-csharp[TreeViewLevelStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLevelStyles/CS/treeviewlevelstylescs.aspx#1)]
 [!code-aspx-vb[TreeViewLevelStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLevelStyles/VB/treeviewlevelstylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.StyleCollection" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LineImagesFolder">
      <MemberSignature Language="C#" Value="public string LineImagesFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LineImagesFolder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property LineImagesFolder As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LineImagesFolder { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LineImagesFolder : string with get, set" Usage="System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置文件夹的路径，该文件夹包含用于连接子节点和父节点的线条图像。</summary>
        <value>用于连接各节点的线条图像所属文件夹的路径。 默认值为空字符串 ("")，表示尚未设置 <see cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" /> 属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>控件可以显示连接到父节点的子节点的行时<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>属性设置为`true`。 当显示行时，使用<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>属性以指定包含的一套用于行预呈现的图像的 Web 访问文件夹。 下表描述了使用映像<xref:System.Web.UI.WebControls.TreeView>控件。  
  
|图像|描述|  
|-----------|-----------------|  
|Dash.gif|当树状结构中的只有一个根节点，并且根节点的根节点旁边显示的线条图像是叶节点。|  
|Dashminus.gif|减号 （-） 以指示根节点已展开的树结构中只有一个根节点时，根节点旁边显示图像。|  
|Dashplus.gif|树状结构，以指示已折叠的根节点中只有一个根节点时显示的根节点旁边的加号 （+） 图像。|  
|I.gif|显示连接相邻的节点的行图像。|  
|L.gif|显示的线条图像下一步到最后一个节点在分支中的叶节点时。|  
|Lminus.gif|显示的线条图像下一步到最后一个节点在以指示该节点已展开的分支中。|  
|Lplus.gif|显示的线条图像下一步到最后一个节点中一个分支，以便指示该节点已折叠。|  
|Minus.gif|减号 （-） 包含多个根节点，以指示该节点已展开的树结构中的第一个根节点旁边显示图像。 此图像不包含额外的行，并且仅一次折叠的根节点后显示。 当首次加载页时，将显示 Rminus.gif 图像。|  
|Noexpand.gif|叶节点旁边显示的空白分隔条图像。 此映像允许文本垂直对齐。|  
|Plus.gif|显示树状结构包含多个根节点，则指示节点中的第一个根节点旁边的加号 （+） 映像处于折叠状态。 此映像不包含额外的行和根节点展开一次后才显示。 当首次加载页时，将显示 Rplus.gif 图像。|  
|R.gif|在包含多个根节点，则指示节点的树结构中的第一个根节点旁边显示的线条图像是一个叶节点。|  
|Rminus.gif|减号 （-） 包含多个根节点，以指示该节点已展开的树结构中的第一个根节点旁边显示图像。 此映像包含额外的行，仅当首次加载页时，才显示。 后根节点具有已折叠后显示 Minus.gif 图像。|  
|Rplus.gif|显示树状结构包含多个根节点，则指示节点中的第一个根节点旁边的加号 （+） 映像处于折叠状态。 此映像包含额外的行，仅当首次加载页时，才显示。 后根节点已展开后，会显示该 Plus.gif 图像。|  
|T.gif|中间树形结构 （t 型交叉） 处的节点旁边的显示以指示该节点是叶行图像。|  
|Tminus.gif|减号 （-） 中间树形结构 （t 型交叉） 处的节点旁边的显示以指示该节点已展开的映像。|  
|Tplus.gif|中间树形结构 （t 型交叉） 处的节点旁边的显示以指示该节点已折叠的加号 （+） 图像。|  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>未设置属性，<xref:System.Web.UI.WebControls.TreeView>控件将使用内置的默认图像 （20 x 20 像素为单位）。  
  
 某些可视化设计器，如 Microsoft Visual Studio 提供生成的行映像的工具。  
  
 运行的时不能翻转右到左显示的自定义的映像。 若要支持从左到右和从右到左的网页，你必须创建两个方向的映像集。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>属性，以指定包含要在中显示的线条图像的文件夹<xref:System.Web.UI.WebControls.TreeView>控件。 若要使用此示例中，使用行设计器工具事先创建一组行映像。 将它们放在名为示例应用程序目录中 LineImages 文件夹中。  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowLines" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="treeView.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控件的主要标识符。</param>
        <param name="postCollection">所有传入名称值的集合。</param>
        <summary>处理 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的回发数据。</summary>
        <returns>如果 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的状态由于回发事件而发生更改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 页框架跟踪返回的所有服务器控件`true`从<xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A>方法调用，并调用<xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>这些控件上的方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="treeView.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">包含为该控件保存的视图状态值的对象。</param>
        <summary>加载以前保存的 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的视图状态。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDataBindDepth">
      <MemberSignature Language="C#" Value="public int MaxDataBindDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDataBindDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDataBindDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDataBindDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDataBindDepth : int with get, set" Usage="System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要绑定到 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的最大树级别数。</summary>
        <value>绑定到 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的最大树级别数。 默认值为 -1，这会将数据源中的所有树级别绑定到该控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在绑定时<xref:System.Web.UI.WebControls.TreeView>控件添加到数据源，使用<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>属性可限制要绑定到控件的树级别数。 例如，将此属性设置为`2`将只有根节点和任何节点到根节点下的绑定<xref:System.Web.UI.WebControls.TreeView>控件。 数据源中的所有剩余节点将被忽略。  
  
> [!IMPORTANT]
>  恶意用户可以创建一个回调请求并获取数据的节点<xref:System.Web.UI.WebControls.TreeView>页开发人员未显示的控件。 因此，数据源必须实现的数据的安全。 不要使用<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>属性来隐藏数据。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>属性将仅前两个节点级别 （深度 0 和 1） 绑定到<xref:System.Web.UI.WebControls.TreeView>控件。 第二个代码示例为第一个代码示例提供示例 XML 数据。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>属性将仅前两个节点级别 （深度 0 和 1） 绑定到<xref:System.Web.UI.WebControls.TreeView>控件。 数据源中的所有节点级别将被都忽略。 对于此示例中正常工作，你必须复制此代码示例，到名为 Book.xml 后面提供的示例 XML 数据。  
  
 [!code-aspx-csharp[TreeViewMaxDataBindDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/CS/treeviewmaxdatabinddepthcs.aspx#1)]
 [!code-aspx-vb[TreeViewMaxDataBindDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/VB/treeviewmaxdatabinddepthvb.aspx#1)]  
  
 下面的代码示例提供前面的代码示例的示例 XML 数据。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">选定值小于 <see langword="-1" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      </Docs>
    </Member>
    <Member MemberName="NodeIndent">
      <MemberSignature Language="C#" Value="public int NodeIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NodeIndent : int with get, set" Usage="System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的子节点的缩进量（以像素为单位）。</summary>
        <value>子节点的左边缘与其父节点的左边缘之间的间距量（以像素为单位）。 默认值为 20。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A>属性控制的子节点的左边的缘和其父节点的左边的缘之间的间距大小。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A>属性会影响中的每个子节点<xref:System.Web.UI.WebControls.TreeView>控件。 不能分别控制每个节点的缩进量。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A>属性控制的子节点的缩进。  
  
 [!code-aspx-csharp[TreeViewNodeIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeIndent/CS/treeviewnodeindentcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeIndent/VB/treeviewnodeindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.HorizontalPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.NodeSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.VerticalPadding" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ Nodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象的集合，它表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中根节点。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中的根节点。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.Nodes%2A>属性来获取<xref:System.Web.UI.WebControls.TreeNodeCollection>对象，其中包含在树中的所有根节点。 此集合通常用于快速循环访问所有根节点，或访问林中的某个特定的根节点。  
  
> [!NOTE]
>  典型的树结构只包含一个根节点;但是，你可以添加到多个根节点<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>属性还可以用于以编程方式管理在树的根节点。 你可以添加、 插入、 删除和检索<xref:System.Web.UI.WebControls.TreeNode>从集合的对象。 对集合的任何更新会自动反映在<xref:System.Web.UI.WebControls.TreeView>往返到服务器下一步后的控件。  
  
 若要访问根节点的子节点，使用<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>节点的属性。 使用<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>的每个后续的父级别节点下的节点级别导航属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.Nodes%2A>遍历树的属性。  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="NodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle NodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ NodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 对象的引用，该对象用于设置 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中节点的默认外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的引用，它表示节点的默认样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>属性控制中的节点的默认外观<xref:System.Web.UI.WebControls.TreeView>控件。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TreeNodeStyle>对象返回。 可以在窗体以声明方式设置了属性`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TreeNodeStyle>对象 (例如， `NodeStyle-ForeColor`)。 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `NodeStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色、 字体属性和节点间距。 按以下优先顺序应用样式属性：  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A><xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，具体取决于节点类型。 如果<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>定义集合，就会应用在此期间，重写的其他节点的样式属性。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
> [!NOTE]
>  中的相应节点样式设置<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>， <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>属性重写的样式设置<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>属性。  
  
 如果你需要生成表的内容样式导航菜单其中某一级别的节点应具有相同的外观，而不考虑它们是否有子节点，则可以考虑使用<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>而不是设置单个属性样式属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>属性来控制中的节点的外观<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 [!code-aspx-csharp[TreeViewNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeStyle/CS/treeviewnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeStyle/VB/treeviewnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="NodeWrap">
      <MemberSignature Language="C#" Value="public bool NodeWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NodeWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NodeWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NodeWrap : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，它指示空间不足时节点中的文本是否换行。</summary>
        <value>若要使文本换行，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A>属性指定是否在空间不足时，每个节点中显示的文本换行。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A>属性的文本换行<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 [!code-aspx-csharp[TreeViewNodeWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeWrap/CS/treeviewnodewrapcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeWrap/VB/treeviewnodewrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      </Docs>
    </Member>
    <Member MemberName="NoExpandImageUrl">
      <MemberSignature Language="C#" Value="public string NoExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NoExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NoExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NoExpandImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置自定义图像的 URL，该图像用作不可展开节点的指示符。</summary>
        <value>为不可展开节点所显示的自定义图像的 URL。 默认值为空字符串 ("")，这将显示默认的空白图像。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>属性来指定非可展开的节点的指示符的自定义映像。 非可展开节点指示器映像 （或分隔） 旁边将显示 （代替可展开和折叠节点指示器中） 的叶节点对齐具有父或根节点的叶节点。  
  
 当<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>属性设置为`true`、<xref:System.Web.UI.WebControls.TreeView>控件将显示一个加号 （+）、 减号 （-） 或旁边的节点，以指示节点是否是可展开、 折叠的还是非展开，分别占位符图像。 你可以指定由第一个设置自定义映像<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>属性`TreeViewImageSet.Custom`，然后再设置<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>， <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，和<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>属性设置为自定义图像的 Url。 如果没有指定任何图像，将使用默认映像。 若要隐藏展开节点指示符，设置<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>属性`false`。  
  
> [!NOTE]
>  若要确保节点中正确对齐<xref:System.Web.UI.WebControls.TreeView>控制使用自定义映像时，请确保指定的所有映像<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>， <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，和<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>属性具有相同的尺寸。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>属性来指定非可展开的节点的指示符的自定义映像。 对于来显示和控件中显示的图像的代码示例中，你必须提供自己的映像和<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>属性必须设置为`TreeNodeImageSet.Custom`。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="treeView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A>方法由调用<xref:System.Web.UI.WebControls.TreeView>控件以引发<xref:System.Web.UI.Control.Init>事件。 它通常由控件开发人员在扩展<xref:System.Web.UI.WebControls.TreeView>类。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Init" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="treeView.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A>方法被重写，以便为回发注册。 如果启用了客户端脚本，它还将呈现的必要的脚本和隐藏的字段。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedNodeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedNodeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedNodeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedNodeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedNodeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedNodeChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedNodeChanged : EventArgs -&gt; unit" Usage="treeView.OnSelectedNodeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的 <see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>中选择节点时，将引发事件<xref:System.Web.UI.WebControls.TreeView>控件。 这使您可以提供执行自定义的例程，例如更新显示的内容，每次此事件发生时的事件处理方法。  
  
 你可以选择性地设置<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>节点指定当选中该节点时引发的事件的属性。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>的节点不呈现其<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>属性设置为`TreeNodeSelectAction.None`。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCheckChanged(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCheckChanged (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCheckChanged(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeCheckChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>中复选框时，将引发事件<xref:System.Web.UI.WebControls.TreeView>控件更改发往服务器之间的状态。 这使您可以提供执行自定义的例程，例如更新数据库或显示的内容，每次此事件发生时的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCollapsed">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCollapsed(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCollapsed (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCollapsed(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeCollapsed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>中折叠了一个节点时将引发事件<xref:System.Web.UI.WebControls.TreeView>控件。 这使您可以提供每次此事件发生时执行的自定义的例程的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeDataBound(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeDataBound (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeDataBound(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>数据项绑定到中的一个节点时将引发事件<xref:System.Web.UI.WebControls.TreeView>控件。 这使您可以提供每次此事件发生时执行的自定义的例程的事件处理方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeExpanded">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeExpanded(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeExpanded (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeExpanded(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeExpanded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>中展开节点时将引发事件<xref:System.Web.UI.WebControls.TreeView>控件。 这使您可以提供每次此事件发生时执行的自定义的例程的事件处理方法。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>节点的属性设置为<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>或<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>、<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>在中单击该节点时，也会引发事件<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodePopulate">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodePopulate(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodePopulate (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodePopulate(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodePopulate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有时，它是不可行静态预定义树形结构由于数据大小或依赖于用户输入的自定义内容。 因此，<xref:System.Web.UI.WebControls.TreeView>控件支持动态节点填充。 当<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>节点的属性设置为`true`，在该节点已展开时的运行时填充该节点。  
  
 若要动态填充一个节点，请首先设置<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>到节点的属性`true`。 接下来，定义的事件处理方法<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>以编程方式填充该节点的事件。 典型的事件处理方法从数据源中检索节点数据、 将数据保存到节点结构，并将节点结构<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>节点中填充的集合。 通过添加创建节点结构<xref:System.Web.UI.WebControls.TreeNode>对象添加到<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>父节点的集合。  
  
> [!NOTE]
>  当<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>节点的属性设置为`true`，节点必须动态填充。 你不能以声明方式嵌套它; 下面的另一个节点否则，在页上，将会出错。  
  
 支持的浏览器 (Microsoft Internet Explorer 4.0 兼容的浏览器及更高版本) 还可以利用的客户端节点填充。 如果启用，这将允许<xref:System.Web.UI.WebControls.TreeView>控件动态填充客户端上的节点，展开该节点时，这会阻止需要回发到服务器。 有关客户端节点填充的详细信息，请参阅<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      </Docs>
    </Member>
    <Member MemberName="ParentNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ ParentNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 对象的引用，该对象用于设置 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中父节点的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的一个引用，表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中父节点的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>属性来控制中的父节点的外观<xref:System.Web.UI.WebControls.TreeView>控件。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TreeNodeStyle>对象返回。 可以在窗体以声明方式设置了属性`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TreeNodeStyle>对象 (例如， `ParentNodeStyle-ForeColor`)。 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `ParentNodeStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色、 字体属性和节点间距。 按以下优先顺序应用样式属性：  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A><xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，具体取决于节点类型。 如果<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>定义集合，就会应用在此期间，重写的其他节点的样式属性。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 如果你需要生成表的内容样式导航菜单其中某一级别的节点应具有相同的外观，而不考虑它们是否有子节点，则可以考虑使用<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>而不是设置单个属性样式属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>属性来控制中的父节点的外观<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 [!code-aspx-csharp[TreeViewParentNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewParentNodeStyle/CS/treeviewparentnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewParentNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewParentNodeStyle/VB/treeviewparentnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : char with get, set" Usage="System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于分隔由 <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> 属性指定的节点值的字符。</summary>
        <value>用于分隔在 <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> 属性中指定的节点值的字符。 默认值为斜杠 (/)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>属性包含窗体中的根节点的当前节点的路径的节点值的分隔符分隔列表。 使用<xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>属性指定的分隔符用于分隔节点值。 在分析单个值的列表时，通常使用此值。  
  
 具体取决于在显示的文本<xref:System.Web.UI.WebControls.TreeView>控件，分隔符字符可能需要更改以防止任何冲突。 例如，如果设置为逗号分隔符字符，显示的文本不能包含任何逗号;否则为<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>属性不能准确地分析。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>属性指定的分隔符字符<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>节点的属性。 然后使用此值以分析<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>各个值的属性。  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : unit -&gt; unit" Usage="treeView.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>基于数据源创建所有节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>方法是由调用一个帮助器方法<xref:System.Web.UI.WebControls.TreeView>控件绑定到控件的指定的数据源。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>因为<see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />方法都密封的则应重写<see cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />方法时，如果你需要在绑定数据时执行的任何其他任务。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PopulateNodesFromClient">
      <MemberSignature Language="C#" Value="public bool PopulateNodesFromClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateNodesFromClient" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateNodesFromClient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateNodesFromClient { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateNodesFromClient : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，它指示是否按需从客户端填充节点数据。</summary>
        <value>若要按需从客户端填充树节点数据，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有时，它是不可行静态预定义树形结构由于数据大小或依赖于用户输入的自定义内容。 因此，<xref:System.Web.UI.WebControls.TreeView>控件支持动态节点填充。 当<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>节点的属性设置为`true`，在该节点已展开时的运行时填充该节点。  
  
 除了填充按需的节点，则可以填充直接上支持的客户端浏览器的节点。 当<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>属性设置为`true`，从客户端来填充树节点中，而不需要将回发到服务器调用服务。 否则为<xref:System.Web.UI.WebControls.TreeView>控件回发到服务器以填充节点。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>属性还必须设置为`true`顺序<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>属性设置为`true`。  
  
 若要填充客户端上的节点，请首先设置<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>属性`true`然后设置<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>到节点的属性`true`。 接下来，定义的事件处理方法<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>以编程方式填充该节点的事件。 典型的事件处理方法从数据源中检索节点数据、 将数据保存到节点结构，并将节点结构<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>节点中填充的集合。 通过添加创建节点结构<xref:System.Web.UI.WebControls.TreeNode>对象添加到<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>父节点的集合。  
  
> [!NOTE]
>  当<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>节点的属性设置为`true`，节点必须动态填充。 你不能以声明方式嵌套它; 下面的另一个节点否则，在页上，将会出错。  
  
> [!NOTE]
>  在浏览器支持回调脚本中支持的客户端节点填充功能。 若要检查浏览器是否支持回调脚本访问，请使用<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>属性<xref:System.Web.HttpBrowserCapabilities>类。 您可以访问的实例<xref:System.Web.HttpBrowserCapabilities>通过当前请求的类<xref:System.Web.HttpRequest.Browser%2A>属性<xref:System.Web.HttpRequest>类。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>属性来启用客户端中的节点填充<xref:System.Web.UI.WebControls.TreeView>控件。 请注意，启用客户端节点填充后，节点会自动填充客户端，而无需回发到服务器上。  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit&#xA;override this.RaiseCallbackEvent : string -&gt; unit" Usage="treeView.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">表示要传递到事件处理程序的可选事件自变量的字符串。</param>
        <summary>使用指定参数引发回调事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> 方法是 <xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A> 方法的帮助器方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="treeView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">表示要传递到事件处理程序的可选事件自变量的字符串。</param>
        <summary>启用 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件以处理将窗体发送到服务器时引发的事件。 <see cref="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" /> 方法是 <see cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" /> 方法的帮助器方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 页的值传递`eventArgument`参数<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>方法实现的控件<xref:System.Web.UI.IPostBackEventHandler?displayProperty=nameWithType>接口。 这<xref:System.Web.UI.WebControls.TreeView>控件还会呈现导致回发事件发生的 HTML 元素。 如果控件呈现回发到服务器的客户端脚本，将从脚本的自变量传递中`eventArgument`参数。 如果回发事件由一个简单提交到服务器，`eventArgument`参数是`null`。  
  
 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>方法提供的功能对于由 HTML 和 Web 服务器控件实现的很多事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="treeView.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>向 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件发出信号，以通知 ASP.NET 应用程序该控件的状态已更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 更改事件<xref:System.Web.UI.WebControls.TreeView>控件引发从<xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将控件的 HTML 开始标记呈现到指定的编写器中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RenderBeginTag%2A>方法主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，表示用于向网页写入内容的输出流。</param>
        <summary>呈现 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中的节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.RenderContents%2A>方法呈现中的节点<xref:System.Web.UI.WebControls.TreeView>到客户端的控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将控件的 HTML 结束标记呈现到指定的编写器中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RenderEndTag%2A>方法主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RootNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ RootNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 对象的引用，该对象用于设置 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中根节点的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的一个引用，表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中根节点的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>属性来控制中的根节点的外观<xref:System.Web.UI.WebControls.TreeView>控件。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TreeNodeStyle>对象返回。 可以在窗体以声明方式设置了属性`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TreeNodeStyle>对象 (例如， `RootNodeStyle-ForeColor`)。 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `RootNodeStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色、 字体属性和节点间距。 按以下优先顺序应用样式属性：  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A><xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，具体取决于节点类型。 如果<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>定义集合，就会应用在此期间，重写的其他节点的样式属性。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 如果你需要生成表的内容样式导航菜单其中某一级别的节点应具有相同的外观，而不考虑它们是否有子节点，则可以考虑使用<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>而不是设置单个属性样式属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>属性来控制中的根节点的外观<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 [!code-aspx-csharp[TreeViewRootNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewRootNodeStyle/CS/treeviewrootnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewRootNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewRootNodeStyle/VB/treeviewrootnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="treeView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的状态。</summary>
        <returns>服务器控件的当前视图状态；否则，如果没有与该控件相关联的视图状态，则为 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode SelectedNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ SelectedNode { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNode : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控件中选定节点的 <see cref="T:System.Web.UI.WebControls.TreeView" /> 对象。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.TreeNode" />，它表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中的选定节点。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的节点的文本<xref:System.Web.UI.WebControls.TreeView>控件可以在两种模式之一中： 选择模式和导航模式。 默认情况下，一个节点处于选择模式。 若要将节点放入导航模式下，将设置<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>属性为空字符串以外的值的节点 ("")。 若要使一个节点处于选择模式，设置<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>属性节点为空字符串 ("")。  
  
 当节点处于选择模式时，用户可以通过单击的节点中的文本选择的节点。 使用<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>属性来确定哪个节点选择中<xref:System.Web.UI.WebControls.TreeView>控件。  
  
> [!NOTE]
>  节点不能选择何时<xref:System.Web.UI.WebControls.TreeView>控件显示超链接。 当显示超链接时，<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>属性始终返回`null`。  
  
 当用户选择中的其他节点<xref:System.Web.UI.WebControls.TreeView>通过单击中的新节点的文本控件<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>引发事件时，默认情况下。 你可以通过设置指定一个不同的事件<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>属性的属性。 下表列出可用的选项。  
  
|选择操作|描述|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|切换展开和折叠状态之间的节点。 引发<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>或<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>事件，根据需要。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|在选定节点时不引发任何事件。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|在选定节点时引发 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 事件。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|在选定节点时引发 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 和 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> 两个事件。 仅展开节点，永远不会折叠。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>的节点不呈现其<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>属性设置为`TreeNodeSelectAction.None`。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>属性来确定在所选节点的值<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedNodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedNodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedNodeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedNodeChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedNodeChanged : EventHandler " Usage="member this.SelectedNodeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中选定某个节点时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>中选择节点时，将引发事件<xref:System.Web.UI.WebControls.TreeView>控件。 这使您可以提供执行自定义的例程，例如更新显示的内容，每次此事件发生时的事件处理方法。  
  
 你可以选择性地设置<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>节点以指定在选择该节点时引发的事件的属性。 下表列出可用的选项。  
  
|选择操作|描述|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|切换展开和折叠状态之间的节点。 引发<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>或<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>事件，根据需要。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|在选定节点时不引发任何事件。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|在选定节点时引发 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 事件。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|在选定节点时引发 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 和 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> 两个事件。 仅展开节点，永远不会折叠。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>的节点不呈现其<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>属性设置为`TreeNodeSelectAction.None`。  
  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>用户单击节点时，仅在开机自检上激发事件。 如果不激发事件<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>属性以编程方式更改。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>事件以更新<xref:System.Web.UI.WebControls.Label>控制节点中的选中<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ SelectedNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 对象，该对象控制 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中选定节点的外观。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />，它表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中选定节点的样式。 默认值为 <see langword="null" />，表示未设置 <see cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" /> 属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>属性来控制在所选节点的外观<xref:System.Web.UI.WebControls.TreeView>控件。 此属性是只读的;但是，可以设置的属性<xref:System.Web.UI.WebControls.TreeNodeStyle>对象返回。 可以在窗体以声明方式设置了属性`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.TreeNodeStyle>对象 (例如， `SelectedNodeStyle-ForeColor`)。 属性也可以设置以编程方式在窗体中`Property.Subproperty`(例如， `SelectedNodeStyle.ForeColor`)。 常用设置通常包括自定义的背景色、 前景颜色、 字体属性和节点间距。 按以下优先顺序应用样式属性：  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A><xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，具体取决于节点类型。 如果<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>定义集合，就会应用在此期间，重写的其他节点的样式属性。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>属性来控制在所选节点的外观<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : string" Usage="System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取选定节点的值。</summary>
        <value>选定节点的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SelectedValue%2A>属性提供了一种方便的方法来确定所选节点的值。 此属性只是返回的值<xref:System.Web.UI.WebControls.TreeNode.Value%2A>属性<xref:System.Web.UI.WebControls.TreeNode>由所引用的对象<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>属性。 如果不到任何节点中当前选定<xref:System.Web.UI.WebControls.TreeView>控制，空字符串 ("") 返回。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataBound">
      <MemberSignature Language="C#" Value="protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataBound(class System.Web.UI.WebControls.TreeNode node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataBound (node As TreeNode, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataBound(System::Web::UI::WebControls::TreeNode ^ node, bool dataBound);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataBound : System.Web.UI.WebControls.TreeNode * bool -&gt; unit" Usage="treeView.SetNodeDataBound (node, dataBound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">要设置的 <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataBound">若要将节点设置为被数据绑定，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>允许派生类设置指定的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控件是否被数据绑定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.SetNodeDataBound%2A>方法，以指示是否指定<xref:System.Web.UI.WebControls.TreeNode>是数据绑定。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />提供方法以允许控件派生自<see cref="T:System.Web.UI.WebControls.TreeView" />控件设置<see cref="P:System.Web.UI.WebControls.TreeNode.DataBound" />节点上的属性。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataItem">
      <MemberSignature Language="C#" Value="protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataItem(class System.Web.UI.WebControls.TreeNode node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataItem (node As TreeNode, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataItem(System::Web::UI::WebControls::TreeNode ^ node, System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataItem : System.Web.UI.WebControls.TreeNode * obj -&gt; unit" Usage="treeView.SetNodeDataItem (node, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">要设置的 <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataItem">
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> 的数据项。</param>
        <summary>允许派生类为指定的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控件设置数据项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.SetNodeDataItem%2A>方法，以指定指定的数据项目<xref:System.Web.UI.WebControls.TreeNode>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataPath">
      <MemberSignature Language="C#" Value="protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataPath(class System.Web.UI.WebControls.TreeNode node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataPath (node As TreeNode, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataPath(System::Web::UI::WebControls::TreeNode ^ node, System::String ^ dataPath);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataPath : System.Web.UI.WebControls.TreeNode * string -&gt; unit" Usage="treeView.SetNodeDataPath (node, dataPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">要设置的 <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataPath">
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> 的数据项。</param>
        <summary>允许派生类为指定的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控件设置数据路径。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.SetNodeDataPath%2A>方法以设置指定的数据路径<xref:System.Web.UI.WebControls.TreeNode>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBoxes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBoxes As TreeNodeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeTypes ShowCheckBoxes { System::Web::UI::WebControls::TreeNodeTypes get(); void set(System::Web::UI::WebControls::TreeNodeTypes value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBoxes : System.Web.UI.WebControls.TreeNodeTypes with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，它指示哪些节点类型将在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中显示复选框。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> 值的按位组合。 默认值为 <see langword="TreeNodeType.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要提供中的多节点选择支持<xref:System.Web.UI.WebControls.TreeView>控件，可以显示节点的映像旁边的复选框。 使用<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>属性以指定哪些节点类型将显示一个复选框。 例如，如果此属性设置为`TreeNodeType.Parent`，每个父节点在树中显示复选框。 下表列出了此属性的有效值。  
  
|节点类型|描述|  
|---------------|-----------------|  
|`TreeNodeType.All`|所有节点显示复选框。|  
|`TreeNodeType.Leaf`|对于所有叶节点显示复选框。|  
|`TreeNodeType.None`|不显示复选框。|  
|`TreeNodeType.Parent`|显示所有父节点的复选框。|  
|`TreeNodeType.Root`|为所有根节点显示复选框。|  
  
 用于枚举类型<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>属性是标志枚举，该对话框可以通过按位运算组合值。 例如，若要显示父节点和叶节点的复选框，用于按位 OR 运算符合并`TreeNodeType.Parent`和`TreeNodeType.Leaf`值。  
  
 若要确定哪个节点拥有其复选框选择，循环访问的节点<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>集合。  
  
> [!NOTE]
>  您可以重写<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>设置通过设置<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>每个节点的属性。  
  
 如果你需要提供仅单选支持，请考虑使用<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>属性。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>属性来显示和隐藏的不同节点类型对应的复选框。  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">按位组合值在 <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> 枚举的范围之外。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowExpandCollapse">
      <MemberSignature Language="C#" Value="public bool ShowExpandCollapse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpandCollapse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowExpandCollapse : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，它指示是否显示展开节点指示符。</summary>
        <value>若要显示展开节点指示符，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 展开节点指示符用于显示节点是展开、 折叠的还是非可展开。 使用<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>属性指定是否在显示展开节点指示符<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 当<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>属性设置为`true`、<xref:System.Web.UI.WebControls.TreeView>控件将显示一个加号 （+）、 减号 （-） 或旁边的节点，以指示节点是否是可展开、 折叠的还是非展开，分别占位符图像。 你可以指定由第一个设置自定义映像<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>属性`TreeViewImageSet.Custom`，然后再设置<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>， <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，和<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>属性设置为自定义图像的 Url。 如果没有指定任何图像，将使用默认映像。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>属性来显示和隐藏展开节点图标。  
  
 [!code-aspx-csharp[TreeViewShowExpandCollapse#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowExpandCollapse/CS/treeviewshowexpandcollapsecs.aspx#1)]
 [!code-aspx-vb[TreeViewShowExpandCollapse#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowExpandCollapse/VB/treeviewshowexpandcollapsevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowLines : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，它指示是否显示连接子节点和父节点的线条。</summary>
        <value>若要显示连接各节点的线条，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>属性以指定是否显示要连接到父节点的子节点的行。 当此属性设置为`true`、<xref:System.Web.UI.WebControls.TreeView>控件搜索由指定的 Web 访问文件夹<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>行映像的属性。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>未设置属性，<xref:System.Web.UI.WebControls.TreeView>控件将使用内置的默认图像 （20 x 20 像素为单位）。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>属性显示行中的节点相连<xref:System.Web.UI.WebControls.TreeView>控件。 请务必使用行设计器工具创建一组行映像并将其放在名为示例应用程序目录中 LineImages 文件夹中。  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，它用于为屏幕读取器呈现替换文字以跳过该控件的内容。</summary>
        <value>一个字符串，<see cref="T:System.Web.UI.WebControls.TreeView" /> 将其呈现为不可见图像的替换文字，作为对屏幕读取器的提示。 默认为“跳过导航链接”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>属性是一个属性，可以设置以使网页更多或更少可访问。 网页包含重复的内容可以提供用于屏幕阅读器，以跳过不进行读取的内容的用户的机制。  
  
 <xref:System.Web.UI.WebControls.TreeView>控件提供<xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>屏幕读取器可以跳过整个控件的方法的属性。 如果<xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>属性设置，则呈现不可见的图像的替换文字，向用户提供的选项以跳转到该控件的结尾。 屏幕读取器读取的替换文字，而图像占用只有一个像素的空间。 对于页面的呈现的像素精确控制，设置<xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>属性为空字符串 ("") 并提供你自己的机制以跳过该树。  
  
 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>属性默认情况下，这使得屏幕读取器不跳过控件设置为空字符串。  
  
 此属性的值存储在视图状态。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackResult () As String Implements ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.ICallbackEventHandler.GetCallbackResult() = System::Web::UI::ICallbackEventHandler::GetCallbackResult;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回以控件为目标的回调事件的结果。</summary>
        <returns>回调的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>控件实现<xref:System.Web.UI.ICallbackEventHandler>接口并使用<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>检索数据和<xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A>方法来检索到的数据返回到控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseCallbackEvent (eventArgument As String) Implements ICallbackEventHandler.RaiseCallbackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System::String ^ eventArgument) = System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">表示要传递到事件处理程序的可选事件自变量的字符串。</param>
        <summary>使用指定参数引发回调事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控件开发人员应重写<xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控件的主要标识符。</param>
        <param name="postCollection">所有传入名称值的集合。</param>
        <summary>处理 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的回发数据。</summary>
        <returns>如果 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的状态由于回发事件而发生更改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控件开发人员应重写<xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>向 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件发出信号，以通知 ASP.NET 应用程序该控件的状态已更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控件开发人员应重写<xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">表示要传递到事件处理程序的可选事件自变量的字符串。</param>
        <summary>启用 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件以处理将窗体发送到服务器时引发的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控件开发人员应重写<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值。</summary>
        <value>总是返回 <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TagKey%2A>属性允许要写入相应 HTML 标记的订阅的输出流<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>您可以重写<see cref="P:System.Web.UI.WebControls.TreeView.TagKey" />属性以指定将哪个<see cref="T:System.Web.UI.HtmlTextWriterTag" />要使用为您派生的控件的值。</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeView.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在其中显示与节点相关联的网页内容的目标窗口或框架。</summary>
        <value>显示所链接的网页内容的目标窗口或框架。 值必须以 A 到 Z 范围内的字母（不区分大小写）打头，但某些以下划线打头的特殊值除外，如下表所示：  
  
 <list type="table"><listheader><term> 目标值</term><description>呈现中的内容</description></listheader><item><term><see langword="_blank" /></term><description>没有框架新窗口。</description></item><item><term><see langword="_parent" /></term><description> 直接框架集父级中。</description></item><item><term><see langword="_search" /></term><description> 搜索窗格中。</description></item><item><term><see langword="_self" /></term><description> 具有焦点的框架。</description></item><item><term><see langword="_top" /></term><description> 没有框架的完整窗口。</description></item></list><block subset="none" type="note"><para> 检查你的浏览器文档以确定如果<see langword="_search" />值受到支持。例如，Microsoft Internet Explorer 5.0 和更高版本支持<see langword="_search" />目标值。</para></block>  默认值为空字符串 ("")，该值刷新具有焦点的框架的窗口。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.Target%2A>时单击该节点，将属性指定的窗口或框架要在其中显示的 Web 内容链接到节点。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.Target%2A>属性呈现为`target`属性。 `target`属性`anchor`XHTML 1.1 文档类型定义中不允许的元素。 未设置<xref:System.Web.UI.WebControls.TreeView.Target%2A>属性，如果呈现的输出<xref:System.Web.UI.WebControls.TreeView>必须符合 XHTML 1.1。 有关详细信息，请参阅[在 Visual Studio 和 ASP.NET 的 XHTML 标准](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97)。  
>   
>  当创建可访问网页，应避免使用<xref:System.Web.UI.WebControls.TreeView.Target%2A>属性将作为目标另一个窗口。 有关详细信息，请参阅[ASP.NET 控件和可访问性](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.Target%2A>属性显示时单击该节点链接到在新窗口中的节点的 Web 内容。  
  
 [!code-aspx-csharp[TreeViewTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTarget/CS/treeviewtargetcs.aspx#1)]
 [!code-aspx-vb[TreeViewTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTarget/VB/treeviewtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="treeView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>跟踪 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的视图状态更改，以便可将它们存储在该控件的 <see cref="T:System.Web.UI.StateBag" /> 对象中。 通过 <see cref="T:System.Web.UI.StateBag" /> 属性可以访问此 <see cref="P:System.Web.UI.Control.ViewState" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TrackViewState%2A>重写方法以将标记的起始点，若要开始对控件的跟踪并保存更改控件的视图状态的一部分。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCheckChanged As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCheckChanged;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中的复选框在向服务器的两次发送过程之间状态有所更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>中复选框时，将引发事件<xref:System.Web.UI.WebControls.TreeView>控件更改发往服务器之间的状态。 这使您可以提供执行自定义的例程，例如更新数据库或显示的内容，每次此事件发生时的事件处理方法。  
  
 即使<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>激发事件在回发，更改复选框不会导致回发。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>事件以更新<xref:System.Web.UI.WebControls.Label>控制时的复选框<xref:System.Web.UI.WebControls.TreeView>控件更改发往服务器之间的状态。  
  
 [!code-aspx-csharp[TreeViewCheckChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCheckChanged/CS/treeviewcheckchangedcs.aspx#1)]
 [!code-aspx-vb[TreeViewCheckChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCheckChanged/VB/treeviewcheckchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCollapsed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCollapsed As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCollapsed;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中折叠某个节点时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>中折叠了一个节点时将引发事件<xref:System.Web.UI.WebControls.TreeView>控件。 这使您可以提供每次此事件发生时执行的自定义的例程的事件处理方法。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>事件以更新的内容<xref:System.Web.UI.WebControls.Label>控制当用户折叠中的节点<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeDataBound As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeDataBound;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>将数据项绑定到 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中的某个节点时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>数据项绑定到中的一个节点时将引发事件<xref:System.Web.UI.WebControls.TreeView>控件。 这使您可以提供每次此事件发生时执行的自定义的例程的事件处理方法。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>事件时满足某个条件更改节点的映像。 第二个代码示例为第一个代码示例提供示例 XML 数据。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>事件时满足某个条件更改节点的映像。 对于此示例中正常工作，你必须复制此代码示例，到名为 Book.xml 后面提供的示例 XML 数据。 此外请务必提供对于此示例显示你自己的映像。  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 下面的代码示例提供前面的代码示例的示例 XML 数据。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeExpanded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeExpanded As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeExpanded;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中展开某个节点时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>中展开节点时将引发事件<xref:System.Web.UI.WebControls.TreeView>控件。 这使您可以提供每次此事件发生时执行的自定义的例程的事件处理方法。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>节点的属性设置为`TreeNodeSelectAction.Expand`或`TreeNodeSelectAction.SelectExpand`、<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>在中单击该节点时，也会引发事件<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>事件以更新的内容<xref:System.Web.UI.WebControls.Label>控制时的用户扩展中的节点<xref:System.Web.UI.WebControls.TreeView>控件。  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodePopulate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodePopulate As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodePopulate;" />
      <MemberSignature Language="F#" Value="member this.TreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当其 <see cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" /> 属性设置为 <see langword="true" /> 的节点在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中展开时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有时，它是不可行静态预定义树形结构由于数据大小或依赖于用户输入的自定义内容。 因此，<xref:System.Web.UI.WebControls.TreeView>控件支持动态节点填充。 当<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>节点的属性设置为`true`，在该节点已展开时的运行时填充该节点。  
  
 若要动态填充一个节点，请首先设置<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>到节点的属性`true`。 接下来，定义的事件处理方法<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>以编程方式填充该节点的事件。 典型的事件处理方法从数据源中检索节点数据、 将数据保存到节点结构，并将节点结构<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>节点中填充的集合。 通过添加创建节点结构<xref:System.Web.UI.WebControls.TreeNode>对象添加到<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>父节点的集合。  
  
> [!NOTE]
>  当<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>节点的属性设置为`true`，节点必须动态填充。 你不能以声明方式嵌套它; 下面的另一个节点否则，在页上，将会出错。  
  
 支持的浏览器 (Microsoft Internet Explorer 4.0 兼容的浏览器及更高版本) 还可以利用的客户端节点填充。 如果启用，这将允许<xref:System.Web.UI.WebControls.TreeView>控件来填充动态客户端上的节点，展开该节点时，这会阻止需要回发到服务器。 有关客户端节点填充的详细信息，请参阅<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>事件以填充中的节点<xref:System.Web.UI.WebControls.TreeView>动态在服务器上的控件。 请注意，<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>属性设置为`false`以防止客户端上处理展开节点事件。  
  
 [!code-aspx-csharp[TreeViewTreeNodePopulate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodePopulate/CS/treeviewtreenodepopulatecs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodePopulate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodePopulate/VB/treeviewtreenodepopulatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示控件是否作为 UI 呈现在页上。</summary>
        <value>如果控件在页上可见，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.TreeView.Visible%2A>属性设置为`false`，不呈现该控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>