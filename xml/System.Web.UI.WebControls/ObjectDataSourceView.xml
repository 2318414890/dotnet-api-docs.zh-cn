<Type Name="ObjectDataSourceView" FullName="System.Web.UI.WebControls.ObjectDataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81e839e11bcc5cad10140763919398d1a2dd8474" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36381115" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceView = class&#xA;    inherit DataSourceView&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Supports the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control and provides an interface for data-bound controls to perform data operations with business and data objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>类主要旨在通过数据绑定控件，而不是页的代码中的可编程对象一起使用。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>类实现的数据功能<xref:System.Web.UI.WebControls.ObjectDataSource>控制，包括<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作、 排序、 筛选和设置的管理视图中保存状态。  
  
 A<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象创建的每个实例<xref:System.Web.UI.WebControls.ObjectDataSource>在运行时类。 实例的数据操作的调用<xref:System.Web.UI.WebControls.ObjectDataSource>类处理的实例<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象。 页开发人员不访问实例<xref:System.Web.UI.WebControls.ObjectDataSourceView>类直接。 控件开发人员可以创建自定义数据控件，通过扩展<xref:System.Web.UI.WebControls.ObjectDataSource>和<xref:System.Web.UI.WebControls.ObjectDataSourceView>类。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>类通过使用反射的业务或数据对象上调用方法来执行数据操作。 在运行时，<xref:System.Web.UI.WebControls.ObjectDataSource>控件创建一个实例的类型由标识<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>属性，然后为数据操作调用相应的方法。 实例化的对象不在内存中缓存<xref:System.Web.UI.WebControls.ObjectDataSourceView>。 对象是创建和销毁为每个数据的方法调用。 如果该方法是`static`(`Shared`在 Visual Basic 中)，不创建实例，但仍调用数据操作方法。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>不直接公开给页面开发人员<xref:System.Web.UI.WebControls.ObjectDataSource>控件。 相反，属性和方法<xref:System.Web.UI.WebControls.ObjectDataSourceView>通过访问<xref:System.Web.UI.WebControls.ObjectDataSource>。 例如，<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>的<xref:System.Web.UI.WebControls.ObjectDataSourceView>属性设置通过设置<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSource>。  
  
## <a name="retrieving-data"></a>检索数据  
 数据源视图执行的最基本操作是从基础数据存储使用的数据检索<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法，检索<xref:System.Collections.IEnumerable>数据项的集合。 通过实现以下数据检索方法、 属性和事件<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象，并直接通过公开其<xref:System.Web.UI.WebControls.ObjectDataSource>向页开发人员和其他调用方的控件：  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 方法  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>事件  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>事件  
  
## <a name="updating-data"></a>更新数据  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>对象通过调用由标识的业务或数据对象方法支持数据更新<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性。 自动执行更新，如数据绑定控件<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>控件，将其参数中的传递<xref:System.Collections.Specialized.IOrderedDictionary>接口<xref:System.Web.UI.WebControls.ObjectDataSourceView>并视图对象合并这些参数与任何参数在中找到<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合。  
  
 通过实现以下更新方法、 属性和事件<xref:System.Web.UI.WebControls.ObjectDataSourceView>和直接通过公开其<xref:System.Web.UI.WebControls.ObjectDataSource>向页开发人员和其他调用方的控件：  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 方法  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>事件  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件  
  
## <a name="inserting-data"></a>插入数据  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>对象支持插入新的数据行，通过调用由标识的业务或数据对象方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性。 自动执行插入，如数据绑定控件<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>，将其参数中的传递<xref:System.Collections.Specialized.IOrderedDictionary>接口<xref:System.Web.UI.WebControls.ObjectDataSourceView>并视图对象合并这些参数与在中找到任何参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合。  
  
 以下插入方法、 属性和事件的实现通过<xref:System.Web.UI.WebControls.ObjectDataSourceView>和直接通过公开其<xref:System.Web.UI.WebControls.ObjectDataSource>向页开发人员和其他调用方的控件：  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 方法  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>事件  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件  
  
## <a name="deleting-data"></a>删除数据  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>对象通过调用由标识的业务或数据对象方法中删除数据的支持<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性。 自动执行删除操作，如数据绑定控件<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>，将其参数中的传递<xref:System.Collections.Specialized.IOrderedDictionary>接口<xref:System.Web.UI.WebControls.ObjectDataSourceView>并视图对象合并这些参数与在中找到任何参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 以下删除方法、 属性和事件的实现通过<xref:System.Web.UI.WebControls.ObjectDataSourceView>和直接通过公开其<xref:System.Web.UI.WebControls.ObjectDataSource>向页开发人员和其他调用方的控件：  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 方法  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>事件  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件  
  
## <a name="filtering-and-sorting-data"></a>筛选和排序数据  
 您可以动态筛选的数据时，可以更强大数据检索。 支持筛选仅可由<xref:System.Web.UI.WebControls.ObjectDataSource>控制如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataTable>或<xref:System.Data.DataSet>对象。 你可以使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>属性要应用到数据检索的动态筛选。 这些属性由实现<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象，并直接通过公开其<xref:System.Web.UI.WebControls.ObjectDataSource>向数据绑定控件和其他调用方的控件。  
  
 您可以通过在检索数据进行排序<xref:System.Web.UI.WebControls.ObjectDataSource>通过对数据进行排序在内存中检索之后。 支持排序只能由<xref:System.Web.UI.WebControls.ObjectDataSource>控制如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataTable>或<xref:System.Data.DataSet>。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>属性始终返回`true`，这是因为<xref:System.Web.UI.WebControls.ObjectDataSourceView>无法确定哪种类型由<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>而不会调用该方法的方法。 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>属性语法是相同<xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType>属性。  
  
## <a name="tracking-view-state"></a>跟踪视图状态  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>实现<xref:System.Web.UI.IStateManager>接口并使用视图状态在页请求之间跟踪其状态。 实现<xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A>方法用于启用控件的视图状态跟踪。 有关详细信息，请参阅[ASP.NET 状态管理概述](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceView (System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.ObjectDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ObjectDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceView(System::Web::UI::WebControls::ObjectDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceView : System.Web.UI.WebControls.ObjectDataSource * string * System.Web.HttpContext -&gt; System.Web.UI.WebControls.ObjectDataSourceView" Usage="new System.Web.UI.WebControls.ObjectDataSourceView (owner, name, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.ObjectDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner">The <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> that the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> is associated with.</param>
        <param name="name">A unique name for the data source view, within the scope of the data source control that owns it.</param>
        <param name="context">The current <see cref="T:System.Web.HttpContext" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>构造函数由调用<xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>方法以返回具有指定的数据源视图的新实例`viewName`参数。 <xref:System.Web.UI.WebControls.ObjectDataSource>控件所关联只使用一个<xref:System.Web.UI.WebControls.ObjectDataSourceView>在任何时间，并始终将视图命名`DefaultView`，尽管此命名限制强加<xref:System.Web.UI.WebControls.ObjectDataSource>控制，不<xref:System.Web.UI.WebControls.ObjectDataSourceView>。 您可以重写<xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>方法，以支持具有不同的命名约定的视图。  
  
 <xref:System.Web.HttpContext>通过传递的对象`context`由数据源视图来访问参数对象，如<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control supports the delete operation.</summary>
        <value>
          <see langword="true" />如果支持该操作;否则为<see langword="false" />。 不支持删除，如果<see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />属性为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete%2A>属性返回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性设置。 删除操作仍可能会失败，如果所有数据属性未设置或未正确设置。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control supports the insert operation.</summary>
        <value>
          <see langword="true" />如果支持该操作;否则为<see langword="false" />。 不支持插入，如果<see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />属性为空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert%2A>属性返回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性设置。 插入操作仍将失败，如果所有数据属性未设置或未正确设置。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control supports paging through the retrieved data.</summary>
        <value>
          <see langword="true" />如果<see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />值设置为<see langword="true" />; 否则为<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanPage%2A>属性指示是否<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象支持分页。 有关如何通过支持分页信息<xref:System.Web.UI.WebControls.ObjectDataSourceView>，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control supports retrieving the total number of data rows, in addition to the set of data.</summary>
        <value>
          <see langword="true" />如果支持该操作;否则为<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>属性返回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>属性设置。 返回的计数方法应返回总的行数可以进行分页，不在页中的行数。 数据绑定控件使用可分页来确定如何呈现分页控件的行的总数。 例如，多少数字页导航按钮在呈现<xref:System.Web.UI.WebControls.GridView>控件页导航。 分页支持的详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>在调用过程中检查属性<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法，以确保数据源控件支持通过设置各种请求的所有功能<xref:System.Web.UI.DataSourceSelectArguments>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control supports a sorted view on the underlying data source.</summary>
        <value>
          <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因为<xref:System.Web.UI.WebControls.ObjectDataSource>控件仅支持对数据进行排序时<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法返回<xref:System.Data.DataSet>， <xref:System.Data.DataView>，或<xref:System.Data.DataTable>对象，该视图对象无法确定是否排序支持直到<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法调用，并且返回。 为此，<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>属性始终返回`true`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control supports the update operation.</summary>
        <value>
          <see langword="true" />如果支持该操作;否则为<see langword="false" />。 如果不支持更新<see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />属性为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate%2A>属性返回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性设置。 更新操作仍将失败，如果所有数据属性未设置或未正确设置。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines how the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control performs updates and deletes when data in a row in the underlying data storage changes during the time of the operation.</summary>
        <value>
          <see cref="T:System.Web.UI.ConflictOptions" /> 值之一。 默认值是<see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>属性确定的旧和新值的参数适用于`Update`方法。 例如，如果该方法是指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性返回<xref:System.Data.DataTable>对象包含列`Name`和`Number`，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>属性设置为<xref:System.Web.UI.ConflictOptions.OverwriteChanges>值，为创建参数`Name`和`Number`为`Update`方法。 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>属性设置为<xref:System.Web.UI.ConflictOptions.CompareAllValues>参数值，创建具有名称`Name`， `Number`， `original_Name`，和`original_Name`。 (取决于原始值的参数的确切名称<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>。)<xref:System.Web.UI.WebControls.ObjectDataSourceView>然后确定方法是否在指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性具有匹配的参数。  
  
 并发控制是一种数据存储区使用来控制如何读取和更改存储区中，在访问和操作同一数据多个客户端数据的技术。 例如，一台客户端读取数据，并将其呈现给用户，而另一个客户端读取同一数据，并将其呈现给其他用户。 如果两个用户更新的数据，并将其提交至数据存储，则可能会发生某种意外的结果，因为两个客户端可能会更新相同数据的不同值。 这是被视为冲突。 通过设置<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>属性<xref:System.Web.UI.ConflictOptions.CompareAllValues>值，`Update`方法然后可以将比较到原始的数据源，以检测冲突，并根据需要处理它们，新旧值。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>属性存储视图状态中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.ConflictOptions" /> values.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether <see cref="T:System.Web.UI.WebControls.Parameter" /> values that are passed to an update, insert, or delete operation are automatically converted from <see langword="null" /> to the <see cref="F:System.DBNull.Value" /> value.</summary>
        <value>
          <see langword="true" />如果<see langword="null" />中<see cref="T:System.Web.UI.WebControls.Parameter" />对象传递给<see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />自动转换为<see cref="F:System.DBNull.Value" />值; 否则为<see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不转换`null`到<xref:System.DBNull.Value?displayProperty=nameWithType>值可能会在运行时导致错误。 使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull%2A>属性以指示是否<xref:System.Web.UI.WebControls.Parameter>传递给更新、 插入或删除操作的值自动转换从`null`到<xref:System.DBNull.Value?displayProperty=nameWithType>值。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of a class that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control uses for a parameter in a data operation. The <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control uses the specified class instead of the <see cref="T:System.Web.UI.WebControls.Parameter" /> objects that are in the various parameters collections.</summary>
        <value>标识的对象类型的部分或完全限定的类名，<see cref="T:System.Web.UI.WebControls.ObjectDataSource" />可以使用的参数作为<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />， <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />，或<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />操作。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 而不是指定多个参数传递给`Select`， `Update`， `Insert`，和`Delete`方法，你可以创建一个聚合多个项的对象。 此对象传递到方法，而不是多个参数。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">A <see cref="T:System.Collections.IDictionary" /> of the key values used to identify the item to delete. These parameters are used with the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> property to perform the delete operation. If there are no parameters associated with the method, pass <see langword="null" />.</param>
        <param name="oldValues">A <see cref="T:System.Collections.IDictionary" /> that contains the additional non-key values used to match the item in the data source. Row values are passed to the method only if the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> field.</param>
        <summary>Performs a delete operation by calling the business object method that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> property using the specified <paramref name="keys" /> and <paramref name="oldValues" /> collections.</summary>
        <returns>The number of rows deleted; otherwise, -1, if the number is not known.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认值为-1，这意味着已删除的行数未知。 若要返回不同的值，设置<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>对象<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件处理程序。 受影响的行数通常由`Delete`业务对象，而该值的方法是从可用<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>参数<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件处理程序。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>方法调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>方法，并传递`keys`和`oldValues`集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> operation has completed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>事件检查返回值的值和输出参数，或者想要确定后是否引发了异常<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>操作已完成。 返回值、 输出参数和异常处理属性就可以在<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>与事件相关联的对象。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.GridView>控件中删除数据。 <xref:System.Web.UI.WebControls.GridView>最初显示所有员工，使用指定的方法的一组<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>要检索的数据属性`EmployeeLogic`对象。 因为<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>属性设置为`true`、<xref:System.Web.UI.WebControls.GridView>控件自动显示**删除**按钮。  
  
 如果你单击**删除**按钮，<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>使用由指定的方法执行操作<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性和中指定任何参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 在此代码示例中，还执行一些步骤预处理和后续处理步骤。 `NorthwindEmployeeDeleting`调用委托以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>之前的事件<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>，执行操作和`NorthwindEmployeeDeleted`调用委托以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>事件之后<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>操作完成后，为执行异常处理。 在此示例中，如果`NorthwindDataException`是引发，它由处理此委托。  
  
 若要检查的`EmployeeLogic`中间层业务对象使用此代码示例，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object invokes to delete data.</summary>
        <value>一个字符串，表示方法的名称或函数的<see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />用于删除数据。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由标识的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性可以是实例方法或`static`(`Shared`在 Visual Basic 中) 方法。 如果它是实例方法，业务对象创建和销毁指定的方法的每次<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>调用属性。 你可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>事件之前指定的方法的业务对象使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>调用属性。 你还可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>后指定的方法，将引发的事件<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>调用属性。 如果该方法是`static`(`Shared`在 Visual Basic 中) 永远不会创建方法，业务对象，无法处理这些事件。  
  
 如果业务对象<xref:System.Web.UI.WebControls.ObjectDataSource>控件的工作方式与实现多个方法或函数具有相同名称 （方法重载），数据源控件尝试调用根据一组条件，包括参数的正确的订阅在<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 如果中的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合不匹配的那些<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>方法签名，则数据源将引发异常。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性存储视图状态中。  
  
 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.GridView>控件中删除数据。 <xref:System.Web.UI.WebControls.GridView>最初显示所有员工，使用指定的方法的一组<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>要检索的数据属性`EmployeeLogic`对象。 因为<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>属性设置为`true`、<xref:System.Web.UI.WebControls.GridView>控件自动显示**删除**按钮。  
  
 如果你单击**删除**按钮，<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>使用由指定的方法执行操作<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性和中指定任何参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 在此代码示例中，还执行一些步骤预处理和后续处理步骤。 `NorthwindEmployeeDeleting`调用委托以处理<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>之前的事件<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>，执行操作和`NorthwindEmployeeDeleted`调用委托以处理<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件之后<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>操作完成后，为执行异常处理。 在此示例中，如果`NorthwindDataException`是引发，它由处理此委托。  
  
 若要检查的`EmployeeLogic`中间层业务对象使用此代码示例，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> method.</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.ParameterCollection" />包含由指定的方法的参数<see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名称和中包含的参数类型<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合的名称和指定的方法中的参数类型必须匹配<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性签名。 参数名称受到<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>属性，并且区分大小写。 使用提供参数，如数据绑定控件时<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控件自动合并在具有提供的这些参数的集合中显式指定任何参数数据绑定控件中。  
  
 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before a <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>事件以执行特定于应用程序，若要验证的值的参数，或更改之前的参数值的附加初始化操作<xref:System.Web.UI.WebControls.ObjectDataSource>控件将执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>操作。 参数都可用作<xref:System.Collections.IDictionary>集合所访问的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>属性，公开的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>对象。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.GridView>控件中删除数据。 <xref:System.Web.UI.WebControls.GridView>最初显示所有员工，使用指定的方法的一组<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>要检索的数据属性`EmployeeLogic`对象。 因为<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>属性设置为`true`、<xref:System.Web.UI.WebControls.GridView>控件自动显示**删除**按钮。  
  
 如果你单击**删除**按钮，<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>使用由指定的方法执行操作<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性和中指定任何参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 在此代码示例中，还执行一些步骤预处理和后续处理步骤。 `NorthwindEmployeeDeleting`调用委托以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>之前的事件<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>，执行操作和`NorthwindEmployeeDeleted`调用委托以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>事件之后<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>操作完成后，为执行异常处理。 在此示例中，如果`NorthwindDataException`是引发，它由处理此委托。  
  
 若要检查的`EmployeeLogic`中间层业务对象使用此代码示例，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the data source control supports paging through the set of data that it retrieves.</summary>
        <value>
          <see langword="true" />如果数据源控件支持到数据进行分页它检索;否则为<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过分页<xref:System.Web.UI.WebControls.ObjectDataSourceView>控件处理通过设置<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceView>并定义`Select`并用正确的参数的业务对象中的方法。 当<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>属性设置为`true`、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合包括请求的第一个行和请求的行数的两个其他参数。 这两个参数的名称由定义<xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>属性。 `Select`方法应返回请求的指定索引处开始的行数。 因为按页大小，数据可能不均匀划分，最后一页可能包含更少的行。 因此，请求的行数是实际返回的行最大数量。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>在调用过程中检查属性<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法，以确保数据源控件支持通过设置各种请求的所有功能<xref:System.Web.UI.DataSourceSelectArguments>属性。  
  
 如果在关联的数据绑定控件上启用了分页，数据绑定控件调用`Select`方法的起始索引和所需的行数。 此外，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>属性设置，数据绑定控件在呈现的页导航控件之前调用的方法。 例如，如果<xref:System.Web.UI.WebControls.GridView>控件页大小为 5，启用了分页和<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>方法返回 20，仅 4 页将寻呼程序中显示。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>属性存储视图状态中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">A <see cref="T:System.Collections.IDictionary" /> of parameters used with the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> property to perform the delete operation. If there are no parameters associated with the method, pass <see langword="null" />.</param>
        <param name="oldValues">A <see cref="T:System.Collections.IDictionary" /> that contains row values that are evaluated, only if the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> property is set to the  <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> field.</param>
        <summary>Performs a delete operation using the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> method and the specified <paramref name="keys" /> and <paramref name="oldValues" /> collection.</summary>
        <returns>The number of rows deleted; otherwise, -1, if the number is not known. For more information, see <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>类实现继承<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>方法以从基础数据存储区中使用业务对象中删除数据。 页开发人员和数据绑定控件作者不调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>方法直接; 相反，使用公开提供<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>方法。  
  
 执行删除操作之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>事件。 你可以处理此事件来检查参数的值之前并执行任何预处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>调用方法。  
  
 若要执行删除操作，<xref:System.Web.UI.WebControls.ObjectDataSourceView>使用反射来调用的方法的由标识<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性及所有关联的中的参数`keys`和`oldValues`集合，然后执行。 在操作完成后，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>事件。 你可以处理此事件，检查任何返回值和错误代码，并执行任何后续处理。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" /> property returns <see langword="false" />.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value, and no values are passed in the <paramref name="oldValues" /> collection.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">A <see cref="T:System.Collections.IDictionary" /> of parameters used with the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> property to perform the insert operation. If there are no parameters associated with the method, pass <see langword="null" />.</param>
        <summary>Performs an insert operation by calling the business object method that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> property using the specified <paramref name="values" /> collection.</summary>
        <returns>The number of rows inserted; otherwise, -1, if the number is not known. For more information, see <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>类实现继承<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>方法将数据插入到基础数据存储区中使用业务对象。 页开发人员和数据绑定控件作者不调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>方法直接; 相反，使用公开提供<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法。  
  
 执行插入之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>事件。 你可以处理此事件来检查参数的值之前并执行任何预处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>调用方法。  
  
 执行插入操作，<xref:System.Web.UI.WebControls.ObjectDataSourceView>控件使用反射来调用的方法的由标识<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性及所有关联的参数中`values`集合，然后执行它。 在操作完成后，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted>事件。 你可以处理此事件以检查任何返回值，错误代码，并执行任何后续处理。  
  
 返回插入的行数的详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> property returns <see langword="false" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="values" /> is <see langword="null" /> or empty.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="objectDataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> used to request operations on the data beyond basic data retrieval.</param>
        <summary>Retrieves data from the object that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> property by calling the method that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> property and passing any values in the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" /> collection.</summary>
        <returns>A <see cref="T:System.Collections.IEnumerable" /> list of data rows.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>类实现继承<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法来检索使用业务对象数据。 页开发人员和数据绑定控件作者不调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法直接; 相反，使用公开提供<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。  
  
 指定的方法可以有任意方法签名，但必须返回的类型之一<xref:System.Web.UI.WebControls.ObjectDataSource>若要成功调用下表中列出的控件。  
  
|返回类型|操作|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|<xref:System.Collections.IEnumerable>返回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
|<xref:System.Data.DataTable>|A<xref:System.Data.DataView>使用创建<xref:System.Data.DataTable>以及返回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
|<xref:System.Data.DataSet>|第一个<xref:System.Data.DataTable>的<xref:System.Data.DataSet>提取和<xref:System.Data.DataView>创建并返回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
|<xref:System.Object>|该对象包装在一个元素<xref:System.Collections.IEnumerable>以及返回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
  
 执行数据检索之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>事件。 你可以处理此事件，检查的参数的值并执行操作之前任何预处理。  
  
 若要执行选择操作，<xref:System.Web.UI.WebControls.ObjectDataSourceView>控件使用反射来调用的方法的由标识<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性及所有关联的参数中<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合，然后执行。 在操作完成后，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected>事件。 你可以处理此事件，检查任何返回值和错误代码，并执行任何后续处理。  
  
 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataSet>对象并启用了缓存，<xref:System.Web.UI.WebControls.ObjectDataSourceView>检索中的数据，并在操作期间将数据保存到缓存。 创建缓存，丢弃，或刷新基于指定的组合的缓存行为<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>和<xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>属性。  
  
 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataSet>对象和一个<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>指定属性，以及提供的所有计算<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>属性并生成的筛选器应用到过程中的数据列表<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>操作。  
  
 有关返回选择的行数的信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <paramref name="arguments" /> passed to the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \- or -  The object returned by the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method is not a <see cref="T:System.Data.DataSet" /> or <see cref="T:System.Data.DataTable" />, and caching is enabled. Only <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> objects can be cached for the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> control.  \- or -  Both caching and client impersonation are enabled. The <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> does not support caching when client impersonation is enabled.</exception>
        <exception cref="T:System.InvalidOperationException">The object returned by the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method is a <see cref="T:System.Data.DataSet" />, but has no tables in its <see cref="P:System.Data.DataSet.Tables" /> collection.  \- or -  The <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" /> property is set to <see langword="true" />, but the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" /> and <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" /> properties are not set.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">A <see cref="T:System.Collections.IDictionary" /> of primary keys to use with the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> property to perform the update database operation. If there are no keys associated with the method, pass <see langword="null" />.</param>
        <param name="values">A <see cref="T:System.Collections.IDictionary" /> of values to be used with the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> to perform the update database operation. If there are no parameters associated with the method, pass <see langword="null" />.</param>
        <param name="oldValues">A <see cref="T:System.Collections.IDictionary" /> that represents the original values in the underlying data store. If there are no parameters associated with the query, pass <see langword="null" />.</param>
        <summary>Performs an update operation by calling the method that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> property and using any parameters that are supplied in the <paramref name="keys" />, <paramref name="values" />, or <paramref name="oldValues" /> collections.</summary>
        <returns>The number of rows updated; or -1, if the number is not known. For more information, see <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>类实现继承<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>方法来更新使用业务对象数据。 页开发人员和数据绑定控件作者不调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>方法直接; 相反，使用公开提供<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>方法。  
  
 中包含的值`keys`和`values`集合将进行计算并与包含的任何值合并<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合。 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>属性设置为<xref:System.Web.UI.ConflictOptions.CompareAllValues>值、 中包含的值`oldValues`集合都将使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>属性并合并。  
  
 执行更新操作之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>事件。 你可以处理此事件，检查的参数的值并执行更新之前任何预处理。 若要执行更新操作，<xref:System.Web.UI.WebControls.ObjectDataSourceView>使用反射来调用的方法的由标识<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性及所有关联的中的参数`keys`集合，然后执行。 在操作完成后，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>调用方法来引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated>事件。 你可以处理此事件以检查任何返回值，错误代码，并执行任何后续处理。  
  
 返回更新的行数的详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> property returns <see langword="false" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="oldValues" /> is <see langword="null" /> or empty and <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> is set to <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a filtering expression that is applied when the business object method that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> property is called.</summary>
        <value>一个字符串，表示使用业务对象方法通过标识检索数据时应用的筛选表达式<see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource>控件支持筛选数据时，才<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataSet>， <xref:System.Data.DataView>，或<xref:System.Data.DataTable>对象。  
  
 适用于的语法<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>属性是一个格式字符串样式表达式。 筛选器表达式语法是相同的语法通过接受<xref:System.Data.DataView.RowFilter%2A>属性因为筛选器表达式应用于<xref:System.Data.DataView.RowFilter%2A>属性<xref:System.Data.DataView>从执行返回的对象<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。 （有关详细信息，请参阅 <xref:System.Data.DataColumn.Expression%2A>。）如果你将参数添加到<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合，也可以包含格式字符串占位符，例如`"{0}"`，以替换参数值的表达式中。 根据中的参数的索引替换占位符<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合。  
  
 你可以包含在参数<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>。 如果参数的类型是字符串或字符类型，将参数括在单引号中。 如果参数是数值类型，则不需要引号引起来。<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合包含的中找到占位符计算的参数<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>属性存储视图状态中。  
  
> [!IMPORTANT]
>  建议你验证从客户端接收任何筛选器参数值。 运行时只需将参数值替换到筛选器表达式，并将其应用于<xref:System.Data.DataView>返回的对象<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。 如果你使用<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>属性作为一种安全措施来限制返回，你必须筛选发生之前验证参数值的项的数目。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何显示使用的筛选的数据<xref:System.Web.UI.WebControls.ObjectDataSource>控件从中间层业务对象检索数据和<xref:System.Web.UI.WebControls.GridView>控件来显示结果。 第二个代码示例提供第一个代码示例中使用的中间层业务对象的的示例。  
  
 下面的代码示例演示如何显示使用的筛选的数据<xref:System.Web.UI.WebControls.ObjectDataSource>控件从中间层业务对象检索数据和<xref:System.Web.UI.WebControls.GridView>控件来显示结果。 <xref:System.Web.UI.WebControls.ObjectDataSource>控件可以筛选数据，仅当检索数据的方法检索其作为<xref:System.Data.DataSet>对象。 为此，<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性标识的业务对象方法，将数据检索为<xref:System.Data.DataSet>。  
  
 该代码示例包含的<xref:System.Web.UI.WebControls.TextBox>、<xref:System.Web.UI.WebControls.GridView>控件，<xref:System.Web.UI.WebControls.ObjectDataSource>控件，和一个**提交**按钮。 默认情况下，<xref:System.Web.UI.WebControls.TextBox>之一的 Northwind Traders 员工名称填充。 <xref:System.Web.UI.WebControls.GridView>显示有关由中的名称标识该员工的信息<xref:System.Web.UI.WebControls.TextBox>。 若要检索有关的其他员工，数据在<xref:System.Web.UI.WebControls.TextBox>，输入该员工的完整名称，然后单击**提交**按钮。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>属性指定一个表达式，用于筛选的数据检索到的<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性。 它使用其计算结果等于中包含的参数的参数占位符<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>集合。 在此示例中，参数占位符受单引号因为参数的类型是一个可能包含空格的字符串类型。 如果参数的类型为数值或日期类型，则不需要引号。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 下面的代码示例提供前面的代码示例使用中间层业务对象的一个示例。 此代码示例由两个基本类组成：  
  
-   `EmployeeLogic`类，它是封装业务逻辑的类。  
  
-   `NorthwindEmployee`类，它是仅包含的基本功能所需进行加载和保持数据层中的数据的模型类。  
  
 为简单起见，`EmployeeLogic`类创建一组静态的数据，而不是从数据层检索数据。 也很有帮助的此示例中，因为示例依赖于你提供的 Northwind Traders 员工演示筛选的完整名称。  
  
 有关完整的工作示例，必须编译，并使用提供的 Web 窗体页的代码示例使用这些类。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> property was set and the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> method does not return a <see cref="T:System.Data.DataSet" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before a filter operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理<xref:System.Web.UI.WebControls.ObjectDataSource.Filtering>事件来验证对值执行操作筛选器参数之前<xref:System.Web.UI.WebControls.ObjectDataSource>控件将执行筛选器操作。 你可以取消<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>通过设置的操作<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs>对象传递给`true`。 引发事件时，仅当<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>属性设置。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
> [!IMPORTANT]
>  你应验证从客户端接收任何筛选器参数值。 运行时只需将参数值替换到筛选器表达式，并将其应用于<xref:System.Data.DataView>返回的对象<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。 如果你使用<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>属性作为一种安全措施来限制返回，你必须筛选发生之前验证参数值的项的数目。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of parameters that are associated with any parameter placeholders that are in the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> string.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> ，其中包含与在中找到任何参数占位符关联的参数集<see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource>控件支持筛选数据时，才<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataSet>， <xref:System.Data.DataTable>，或<xref:System.Data.DataView>对象。  
  
 中的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>集合了与中指定任何参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>属性。 中指定的参数占位符<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>属性匹配中的参数对象<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>集合由指定的方法时<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>调用属性。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何显示使用的筛选的数据<xref:System.Web.UI.WebControls.ObjectDataSource>控件从中间层业务对象检索数据和<xref:System.Web.UI.WebControls.GridView>控件来显示结果。 第二个代码示例提供第一个代码示例中使用的中间层业务对象的的示例。  
  
 下面的代码示例演示如何显示使用的筛选的数据<xref:System.Web.UI.WebControls.ObjectDataSource>控件从中间层业务对象检索数据和<xref:System.Web.UI.WebControls.GridView>控件来显示结果。 <xref:System.Web.UI.WebControls.ObjectDataSource>控件可以筛选数据，仅当检索数据的方法检索其作为<xref:System.Data.DataSet>对象。 为此，<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性标识的业务对象方法，将数据检索为<xref:System.Data.DataSet>。  
  
 该代码示例包含的<xref:System.Web.UI.WebControls.TextBox>、<xref:System.Web.UI.WebControls.GridView>控件，<xref:System.Web.UI.WebControls.ObjectDataSource>控件，和一个**提交**按钮。 默认情况下，<xref:System.Web.UI.WebControls.TextBox>之一的 Northwind Traders 员工名称填充。 <xref:System.Web.UI.WebControls.GridView>显示有关由中的名称标识该员工的信息<xref:System.Web.UI.WebControls.TextBox>。 若要检索有关的其他员工，数据在<xref:System.Web.UI.WebControls.TextBox>，输入该员工的完整名称，然后单击**提交**按钮。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>属性指定一个表达式，用于筛选指定的方法检索的数据<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性。 它使用其计算结果等于中包含的参数的参数占位符<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>集合。 在此示例中，参数占位符受单引号因为参数的类型是一个可能包含空格的字符串类型。 如果参数的类型为数值或日期类型，则不需要引号。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>集合包含一个参数， <xref:System.Web.UI.WebControls.FormParameter> ，它绑定到<xref:System.Web.UI.WebControls.TextBox>控件。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 下面的代码示例提供前面的代码示例使用中间层业务对象的一个示例。 此代码示例由两个基本类组成：  
  
-   `EmployeeLogic`类，它是封装业务逻辑的类。  
  
-   `NorthwindEmployee`类，它是仅包含的基本功能所需进行加载和保持数据层中的数据的模型类。  
  
 为简单起见，`EmployeeLogic`类创建一组静态的数据，而不是从数据层检索数据。 也很有帮助的此示例中，因为示例依赖于你提供的 Northwind Traders 员工演示筛选的完整名称。  
  
 有关完整的工作示例，必须编译，并使用提供的 Web 窗体页的代码示例使用这些类。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> property was set and the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> method does not return a <see cref="T:System.Data.DataSet" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.Insert : System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">A <see cref="T:System.Collections.IDictionary" /> collection of parameters used with the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> property to perform the insert operation. If there are no parameters associated with the method, pass <see langword="null" />.</param>
        <summary>Performs an insert operation by calling the business object method that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> property using the specified <paramref name="values" /> collection.</summary>
        <returns>The number of rows inserted; otherwise, -1, if the number is not known.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认返回值为-1，这意味着，插入的行数未知。 若要返回不同的值，设置<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>对象<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件。 受影响的行数通常由`Insert`业务对象，而该值的方法是从可用<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>对象<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>方法，并传递`values`集合。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> property returns <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when an <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" /> operation has completed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted>事件检查返回值的值和输出参数，或者想要确定后是否引发了异常<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作已完成。 返回值、 输出参数和异常处理属性就可以在<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>与事件相关联的对象。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before an <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" /> operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>事件以执行特定于应用程序，若要验证的值的参数，或更改之前的参数值的附加初始化操作<xref:System.Web.UI.WebControls.ObjectDataSource>控件将执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作。 参数都可用作<xref:System.Collections.IDictionary>集合所访问的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>属性，公开的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>对象。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.DetailsView>控件插入数据。 第二个代码示例提供第一个代码示例中使用的中间层业务对象的的示例。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.DetailsView>控件插入数据。 <xref:System.Web.UI.WebControls.DetailsView>最初显示一个新`NorthwindEmployee`记录，以及自动生成**插入**按钮。 数据输入到的字段后<xref:System.Web.UI.WebControls.DetailsView>控件中，单击**插入**按钮。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性标识哪一种方法执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作。  
  
 在此代码示例中，`UpdateEmployeeInfo`方法用于执行 insert; 但是它需要`NorthwindEmployee`参数插入数据。 出于此原因的字符串集合<xref:System.Web.UI.WebControls.DetailsView>控制权将会传递自动是不够的。 `NorthwindEmployeeInserting`委托是<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>处理对象<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>事件并使你能够操作之前的输入的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作继续进行。 因为`UpdateEmployeeInfo`方法需要`NorthwindEmployee`对象作为参数，一个是创建使用字符串的集合，然后添加到<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>使用参数名称的集合 (`ne`) 的方法需要。 使用现有的中间层对象作为带有类型和专门用于不设计的方法的数据源时，你可能执行类似这样的步骤<xref:System.Web.UI.WebControls.ObjectDataSource>控件。  
  
 当<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>执行操作，则由标识的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>调用属性。 如果`Insert`对象的方法有一个方法签名，包括参数，<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合必须包含具有匹配的方法签名参数的名称的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法才能成功完成。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 下面的代码示例提供前面的代码示例使用中间层业务对象的一个示例。 此代码示例由两个基本类组成：  
  
-   `EmployeeLogic`类，该类是无状态的封装业务逻辑。  
  
-   `NorthwindEmployee`类，它是仅包含的基本功能所需进行加载和保持数据层中的数据的模型类。  
  
 附加`NorthwindDataException`类提供为方便起见。  
  
 有关完整的工作示例，必须编译，并使用这些类。 `UpdateEmployeeInfo`方法未完全实现，因此你将不将数据插入 Northwind Traders 数据库时使用此示例进行试验。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object invokes to insert data.</summary>
        <value>一个字符串，表示方法的名称或函数的<see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />用于插入数据。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由标识的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性可以是实例方法或`static`(`Shared`在 Visual Basic 中) 方法。 如果它是实例方法，业务对象创建和销毁指定的方法的每次<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>调用属性。 你可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>事件之前指定的方法的业务对象使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>调用属性。 你还可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>后指定的方法，将引发的事件<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>调用属性。 (`Dispose`业务对象实现的情况下，才会调用<xref:System.IDisposable>接口。)如果该方法是`static`(`Shared`在 Visual Basic 中) 永远不会创建方法，业务对象，无法处理这些事件。  
  
 如果业务对象<xref:System.Web.UI.WebControls.ObjectDataSource>对象实现多个方法或函数具有相同名称 （方法重载），数据源控件尝试调用根据一组条件，在中包含参数的正确的订阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合。 如果中的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合与指定的方法不匹配<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性签名，则数据源将引发异常。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性存储视图状态中。  
  
 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何显示使用的筛选的数据<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.DetailsView>控件插入数据。 第二个代码示例提供第一个代码示例中使用的中间层业务对象的的示例。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.DetailsView>控件插入数据。 <xref:System.Web.UI.WebControls.DetailsView>最初显示一个新`NorthwindEmployee`记录，以及自动生成**插入**按钮。 数据输入到的字段后<xref:System.Web.UI.WebControls.DetailsView>控件中，单击**插入**按钮。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性标识哪一种方法执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作。  
  
 在此代码示例中，`UpdateEmployeeInfo`方法用于执行 insert; 但是，它需要`NorthwindEmployee`参数插入数据。 出于此原因的字符串集合<xref:System.Web.UI.WebControls.DetailsView>控制权将会传递自动是不够的。 `NorthwindEmployeeInserting`委托是<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>处理对象<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>事件并使你能够操作之前的输入的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作继续进行。 因为`UpdateEmployeeInfo`方法需要`NorthwindEmployee`对象作为参数，一个创建使用字符串的集合，并添加到<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>使用参数名称的集合 (`ne`) 的方法需要。 使用现有的中间层对象作为带有类型和专门用于不设计的方法的数据源时，你可能执行类似这样的步骤<xref:System.Web.UI.WebControls.ObjectDataSource>控件。  
  
 当<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>执行操作，则由标识的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>调用属性。 如果`Insert`对象的方法有一个方法签名，包括参数，<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合必须包含具有匹配的方法签名参数的名称的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法才能成功完成。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 下面的代码示例提供前面的代码示例使用中间层业务对象的一个示例。 该代码示例包含两个基本类和其他类：  
  
-   `EmployeeLogic`类是一个无状态的类，它封装业务逻辑。  
  
-   `NorthwindEmployee`类是一个模型的类，其中包含仅需加载和保持数据从数据层的基本功能。  
  
-   附加`NorthwindDataException`类提供为方便起见。  
  
 有关完整的工作示例，必须编译，并使用这些类。 `UpdateEmployeeInfo`方法未完全实现，因此你将不将数据插入 Northwind Traders 数据库时使用此代码示例进行试验。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> method.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> ，其中包含使用的参数<see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名称和中包含的参数类型<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合的名称和指定的方法中的参数类型必须匹配<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性签名。 使用提供参数，如数据绑定控件时<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控件自动合并在具有提供的这些参数的集合中显式指定任何参数数据绑定控件中。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何显示使用的筛选的数据<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.DetailsView>控件插入数据。 第二个代码示例提供的示例实现`Insert`第一个代码示例中使用的方法。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.DetailsView>控件插入数据。 <xref:System.Web.UI.WebControls.DetailsView>最初显示一个新`NorthwindEmployee`记录，以及自动生成**插入**按钮。 数据输入到的字段后<xref:System.Web.UI.WebControls.DetailsView>控件中，单击**插入**按钮。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性标识哪一种方法执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作。  
  
 如果你单击**插入**按钮，<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>使用由指定的方法执行操作<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性和中指定任何参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合。 在此代码示例中，一个参数中指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>对应监护人的 ID 的集合 这是因为即使的 ID 显示在<xref:System.Web.UI.WebControls.DetailsView.Fields%2A>集合<xref:System.Web.UI.WebControls.DetailsView>控件用作<xref:System.Web.UI.WebControls.BoundField>对象，它将作为连接到的字符串传递<xref:System.Web.UI.WebControls.ObjectDataSource>控件。 通过将它添加到显式<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>具有集合<xref:System.Web.UI.WebControls.Parameter.Type%2A>属性设置为<xref:System.TypeCode.Int32>值，它将传递正确通过<xref:System.Web.UI.WebControls.ObjectDataSource>到该方法为`int`，不是作为`string`。  
  
 当<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>执行操作，则由标识的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>调用属性。 如果`Insert`对象的方法有一个方法签名，包括参数，<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合必须包含具有匹配的方法签名参数的名称的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>成功完成。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 下面的代码示例提供的示例实现`Insert`前面的代码示例使用的方法。 `InsertNewEmployeeWrapper`方法添加到`EmployeeLogic`中间层对象，以使对象可以更轻松地使用<xref:System.Web.UI.WebControls.ObjectDataSource>控件在 Web 方案中，而不必大量改写实际的业务逻辑。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object is saving changes to its view state.</summary>
        <value>
          <see langword="true" />如果数据源视图被标记为保存其状态;否则为<see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="objectDataSourceView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An object that represents the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> state to restore.</param>
        <summary>Restores previously saved view state for the data source view.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要由.NET Framework 基础结构使用，但不可在代码中直接使用。  但是，控件开发人员可以重写此方法以指定自定义服务器控件还原其视图状态的方式。 有关详细信息，请参阅[ASP.NET 状态管理概述](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>方法还原视图状态信息<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象从已保存的上一个页面请求<xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the data retrieval method parameter that is used to indicate the number of records to retrieve for data source paging support.</summary>
        <value>用于指示要检索的记录数的方法参数的名称。 默认值是<c>"值"</c>。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>属性用于支持数据源分页。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>属性存储视图状态中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs after the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object creates an instance of the type that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>事件以对业务对象，设置的属性，调用其他方法或执行其他特定于之前的业务对象的初始化<xref:System.Web.UI.WebControls.ObjectDataSource>控制调用`Data`业务对象的方法。 对对象的引用可通过<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>属性，公开的<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>对象。  
  
 如果标识以执行数据操作的方法是`static`(`Shared`在 Visual Basic 中)，则<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>永远不会引发事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object creates an instance of the type that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource>控件将自动调用要创建的业务对象，它使用反射的实例的默认构造函数。 处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>事件，以显式调用另一个构造函数并将结果传递给对象的实例设置<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>属性关联的<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>对象。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 如果标识以执行数据操作的方法是`static`(`Shared`在 Visual Basic 中)，则<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>永远不会引发事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object discards an instance of an object that it has created.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>丢弃业务对象的实例之前引发事件。 如果业务对象实现<xref:System.IDisposable>接口，<xref:System.IDisposable.Dispose%2A>方法后，会调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>引发事件。  
  
 处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>事件的对象上调用其他方法和设置属性或执行清理该对象被销毁之前即特定于该对象。 对对象的引用可通过<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>属性，公开的<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>对象。  
  
 如果标识以执行数据操作的方法是`static`(`Shared`在 Visual Basic 中)，则<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>永远不会引发事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a format string to apply to the names of the parameters for original values that are passed to the <see langword="Delete" /> or <see langword="Update" /> methods.</summary>
        <value>一个字符串，表示一个格式字符串应用于的任何名称<paramref name="oldValues" />传递给<see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />或<see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />方法。 默认值是"{0}"，这意味着参数名称是只需的字段名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>格式字符串应用于仅，主键如那些使用标识`DataKeyNames`属性的数据绑定控件或在删除和更新方案，其中<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>属性设置为<xref:System.Web.UI.ConflictOptions.CompareAllValues>值和传递给相应的数据方法的原始值的集。  
  
 两个常见的方案，你可能要更改<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>属性如下所示：  
  
-   若要区分中更新的旧和新值。 当<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>属性设置为<xref:System.Web.UI.ConflictOptions.CompareAllValues>值，参数的原始列值和新值添加到<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>集合。 没有格式设置字符串，将为每个数据字段创建具有相同名称的两个参数。 通过更改原始值参数的名称，你可以比较到原始的数据源，以检测冲突并比较键值的数据。  
  
-   某些可视化设计器实现原始值和键的特定命名的方案。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>存储视图状态中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnDeleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An  <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" /> event after the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object has completed a delete operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.GridView>控件中删除数据。 <xref:System.Web.UI.WebControls.GridView>最初显示所有员工，使用指定的方法的一组<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>要检索的数据属性`EmployeeLogic`对象。 因为<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>属性设置为`true`、<xref:System.Web.UI.WebControls.GridView>控件自动显示**删除**按钮。  
  
 如果你单击**删除**按钮，<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>使用由指定的方法执行操作<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性和中指定任何参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 在此代码示例中，还执行一些步骤预处理和后续处理步骤。 `NorthwindEmployeeDeleting`调用委托以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>之前的事件<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>，执行操作和`NorthwindEmployeeDeleted`调用委托以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>事件之后<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>操作完成后，为执行异常处理。 在此示例中，如果`NorthwindDataException`是引发，它由处理此委托。  
  
 若要检查的`EmployeeLogic`中间层业务对象使用此代码示例，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit&#xA;override this.OnDeleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit" Usage="objectDataSourceView.OnDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" /> event before the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object attempts a delete operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>业务对象使用的控件和<xref:System.Web.UI.WebControls.GridView>控件中删除数据。 <xref:System.Web.UI.WebControls.GridView>最初显示所有员工，使用指定的方法的一组<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>要检索的数据属性`EmployeeLogic`对象。 因为<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>属性设置为`true`、<xref:System.Web.UI.WebControls.GridView>控件自动显示**删除**按钮。  
  
 如果你单击**删除**按钮，<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>使用由指定的方法执行操作<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性和中指定任何参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 在此代码示例中，还执行一些步骤预处理和后续处理步骤。 `NorthwindEmployeeDeleting`调用委托以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>之前的事件<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>，执行操作和`NorthwindEmployeeDeleted`调用委托以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>事件之后<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>操作完成后，为执行异常处理。 在此示例中，如果`NorthwindDataException`是引发，它由处理此委托。  
  
 若要检查的`EmployeeLogic`中间层业务对象使用此代码示例，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As ObjectDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::ObjectDataSourceFilteringEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFiltering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs -&gt; unit&#xA;override this.OnFiltering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs -&gt; unit" Usage="objectDataSourceView.OnFiltering e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" /> event before the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object attempts a filtering operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" />方法在派生类中，一定要调用基类的<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnInserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An  <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" /> event after the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object has completed an insert operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit&#xA;override this.OnInserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit" Usage="objectDataSourceView.OnInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" /> event before the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object attempts an insert operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>调用方法时，仅在标识以执行数据操作的方法未`static`(`Shared`在 Visual Basic 中)。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectCreated (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectCreated(class System.Web.UI.WebControls.ObjectDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectCreated (e As ObjectDataSourceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectCreated(System::Web::UI::WebControls::ObjectDataSourceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectCreated : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit&#xA;override this.OnObjectCreated : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit" Usage="objectDataSourceView.OnObjectCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An  <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" /> event after the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> creates an instance of the object that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>调用方法时，仅在标识以执行数据操作的方法未`static`(`Shared`在 Visual Basic 中)。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectCreating">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectCreating (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectCreating(class System.Web.UI.WebControls.ObjectDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectCreating (e As ObjectDataSourceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectCreating(System::Web::UI::WebControls::ObjectDataSourceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectCreating : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit&#xA;override this.OnObjectCreating : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit" Usage="objectDataSourceView.OnObjectCreating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" /> event before the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object creates an instance of a business object to perform a data operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectDisposing">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectDisposing (System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectDisposing(class System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectDisposing (e As ObjectDataSourceDisposingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectDisposing(System::Web::UI::WebControls::ObjectDataSourceDisposingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs -&gt; unit&#xA;override this.OnObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs -&gt; unit" Usage="objectDataSourceView.OnObjectDisposing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An  <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" /> event before the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object discards an instantiated type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A>放弃对象用于执行数据操作而创建的实例时调用。 `Dispose`调用方法时，才由标识的类型<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>属性实现<xref:System.IDisposable>接口。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelected : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnSelected : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnSelected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An  <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" /> event after the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object has completed a data retrieval operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As ObjectDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::ObjectDataSourceSelectingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs -&gt; unit&#xA;override this.OnSelecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs -&gt; unit" Usage="objectDataSourceView.OnSelecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" /> event before the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object attempts a data retrieval operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdated : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnUpdated : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An  <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" /> event after the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object has completed an update operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdating : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit&#xA;override this.OnUpdating : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit" Usage="objectDataSourceView.OnUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" /> event before the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object attempts an update operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DropDownList>控件，<xref:System.Web.UI.WebControls.TextBox>控件，并在几个<xref:System.Web.UI.WebControls.ObjectDataSource>控件更新数据。 <xref:System.Web.UI.WebControls.DropDownList>显示的名称`NorthwindEmployee`，虽然<xref:System.Web.UI.WebControls.TextBox>控制用于输入和更新地址信息。 因为<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合包含<xref:System.Web.UI.WebControls.ControlParameter>对象绑定到的所选值<xref:System.Web.UI.WebControls.DropDownList>，触发的按钮<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>操作将仅后选择员工时，才启用。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />方法在派生类中，一定要调用<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />方法的基类，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a or sets a value that indicates what culture information is used when converting string values to actual property types in order to construct an object of the type indicated by <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />.</summary>
        <value>区域性信息。 默认值为 <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="objectDataSourceView.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Saves the changes to the view state for the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object since the time when the page was posted back to the server.</summary>
        <returns>The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> view state; otherwise <see langword="null" />, if there is no view state associated with the object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>方法主要由控件开发人员使用。  
  
 视图状态是服务器控件的属性的值的累计。 这些值被自动置于<xref:System.Web.UI.Control.ViewState%2A>对于服务器控件，这是实例属性的<xref:System.Web.UI.StateBag>类。 <xref:System.Web.UI.Control.ViewState%2A>值随后会保存到一个字符串对象的服务器控件生命周期的保存状态阶段后。  
  
 视图状态保存时，查看状态内容返回到客户端作为变量存储在 HTML`Hidden`元素。 在创作自定义服务器控件时，你可以通过重写中提高效率<xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>方法并修改`ViewState`服务器控件的属性。 有关详细信息，请参阅[ASP.NET 状态管理概述](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="objectDataSourceView.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> used to request operations on the data beyond basic data retrieval.</param>
        <summary>Retrieves data from the object that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> property by calling the method that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> property and passing any values in the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" /> collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerable" /> list of data rows. For more information, see <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>传递`arguments`参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <paramref name="arguments" /> passed to the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> control invokes to retrieve a row count.</summary>
        <value>一个字符串，表示方法的名称或函数的<see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />使用来检索行计数。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>标识用于检索总行数，以支持数据源分页的业务对象方法。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>计算属性，仅当<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>属性设置为`true`。 有关如何通过支持分页信息<xref:System.Web.UI.WebControls.ObjectDataSourceView>，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>属性存储视图状态中。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a data retrieval operation has completed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected>事件检查返回值的值和输出参数，或者想要确定数据检索操作完成后是否引发了异常。 返回值、 输出参数和异常处理属性就可以在<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>与事件相关联的对象。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before a data retrieval operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>事件以执行特定于应用程序，若要验证的值的参数，或更改之前的参数值的附加初始化操作<xref:System.Web.UI.WebControls.ObjectDataSource>控件将执行数据检索操作。 参数都可用作<xref:System.Collections.IDictionary>集合所访问的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>属性，公开的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>对象。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> control invokes to retrieve data.</summary>
        <value>一个字符串，表示方法的名称或函数的<see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />用于检索数据。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定的方法可以有任意方法签名，但必须返回顺序下表中列出的类型之一<xref:System.Web.UI.WebControls.ObjectDataSource>控件，若要成功调用  
  
|返回类型|操作|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|<xref:System.Collections.IEnumerable>返回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
|<xref:System.Data.DataTable>|A<xref:System.Data.DataView>使用创建<xref:System.Data.DataTable>以及返回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
|<xref:System.Data.DataSet>|第一个<xref:System.Data.DataTable>的<xref:System.Data.DataSet>提取和<xref:System.Data.DataView>创建并返回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
|<xref:System.Object>|该对象包装在一个元素<xref:System.Collections.IEnumerable>以及返回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
  
 由标识的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性可以是实例方法或`static`(`Shared`在 Visual Basic 中) 方法。 如果它是实例方法，创建和销毁每次的业务对象<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>调用方法。 你可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>事件之前指定的方法的业务对象使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>调用属性。 你还可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>后指定的方法，将引发的事件<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>调用属性。 (`Dispose`业务对象实现的情况下，才会调用<xref:System.IDisposable>接口。)如果该方法是`static`(`Shared`在 Visual Basic 中) 永远不会创建方法，业务对象，无法处理这些事件。  
  
 如果业务对象<xref:System.Web.UI.WebControls.ObjectDataSource>控件的工作方式与实现多个方法或函数具有相同名称 （方法重载），数据源控件尝试调用根据一组条件，包括参数的正确的订阅在<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合。 如果中的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合与指定的方法的签名不匹配<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性，则数据源将引发异常。  
  
 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的代码示例演示如何<xref:System.Web.UI.WebControls.GridView>控件可以显示数据使用<xref:System.Web.UI.WebControls.ObjectDataSource>Web 窗体页上的控件。 <xref:System.Web.UI.WebControls.ObjectDataSource>标识部分或完全限定的类名称替换其<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>属性和方法调用使用来检索数据其<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性。 在运行时，创建对象并使用反射调用该方法。 <xref:System.Web.UI.WebControls.GridView>控件枚举<xref:System.Collections.IEnumerable>返回的集合<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>，然后将数据显示。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> method.</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.ParameterCollection" />包含由指定的方法的参数<see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名称和中包含的参数类型<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合的名称和指定的方法中的参数类型必须匹配<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性签名。 使用提供参数，如数据绑定控件时<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控件自动合并在具有提供的这些参数的集合中显式指定任何参数数据绑定控件中。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的代码示例演示如何检索单个数据记录使用<xref:System.Web.UI.WebControls.ObjectDataSource>控制，，然后显示中的数据记录<xref:System.Web.UI.WebControls.DetailsView>控件。 <xref:System.Web.UI.WebControls.ObjectDataSource>通过调用检索特定员工记录`GetEmployee`方法`EmployeeLogic`类。 `GetEmployee`方法需要使用员工 ID 参数。 <xref:System.Web.UI.WebControls.ObjectDataSource>控件使用<xref:System.Web.UI.WebControls.QueryStringParameter>对象在其<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合以传递到一个 ID`GetEmployee`方法。  
  
 若要查看的示例实现`EmployeeLogic`类和`GetEmployee`方法，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the data retrieval method parameter that is used to specify a sort expression for data source sorting support.</summary>
        <value>用于指示接受此排序表达式值的参数的方法参数的名称。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A>属性用于支持数据源进行排序。 当<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>上设置属性<xref:System.Web.UI.DataSourceSelectArguments>对象并传递给<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法，<xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A>属性标识指定的方法的参数名称<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>接受排序的业务对象属性表达式值。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A>属性存储视图状态中。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the data retrieval method parameter that is used to indicate the integer index of the first record to retrieve from the results set for data source paging support.</summary>
        <value>用于指示要检索的第一个记录的业务对象方法参数的名称。 默认值为"值"。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>属性必须设置以启用分页。 有关如何通过支持分页信息<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>属性存储视图状态中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For a description of this member, see <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
        <value>
          <see langword="true" />如果数据源视图被标记为保存其状态;否则为<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 可以使用它时，才<xref:System.Web.UI.WebControls.ObjectDataSourceView>实例被强制转换为<xref:System.Web.UI.IStateManager>接口。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An object that represents the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> state to restore.</param>
        <summary>For a description of this member, see <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 实例被强制转换为 <xref:System.Web.UI.IStateManager> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For a description of this member, see <see cref="M:System.Web.UI.IStateManager.SaveViewState" />.</summary>
        <returns>The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> view state; otherwise, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 实例被强制转换为 <xref:System.Web.UI.IStateManager> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For a description of this member, see <see cref="M:System.Web.UI.IStateManager.TrackViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 实例被强制转换为 <xref:System.Web.UI.IStateManager> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="objectDataSourceView.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object to track changes to its view state so that the changes can be stored in the <see cref="P:System.Web.UI.Control.ViewState" /> object for the control and persisted across requests for the same page.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A>方法主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the class that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control represents.</summary>
        <value>标识的对象类型的部分或完全限定的类名，<see cref="T:System.Web.UI.WebControls.ObjectDataSource" />表示。 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 到创建的对象实例<xref:System.Web.UI.WebControls.ObjectDataSource>控件绑定到，该控件使用反射来加载由类型名称标识在运行时类型。 因此，值<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>属性可以是位于 Bin 或 App_Code 目录中的代码的部分限定的类型或在全局程序集缓存中注册的代码的完全限定的类型名称。 如果你使用的全局程序集缓存，你必须添加对相应的引用`assemblies`Machine.config 或 Web.config 配置文件节。  
  
   
  
## Examples  
 下面的代码示例演示如何<xref:System.Web.UI.WebControls.GridView>控件可以显示数据使用<xref:System.Web.UI.WebControls.ObjectDataSource>Web 窗体页上的控件。 <xref:System.Web.UI.WebControls.ObjectDataSource>标识部分或完全限定的类名称替换其<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>属性和方法调用使用来检索数据其<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性。 在运行时，创建对象并使用反射调用该方法。 <xref:System.Web.UI.WebControls.GridView>控件枚举<xref:System.Collections.IEnumerable>返回的集合<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>，显示的数据。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">A <see cref="T:System.Collections.IDictionary" /> of the key values used to identify the item to update. These parameters are used with the method specified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> property to perform the update operation. If there are no parameters associated with the method, pass <see langword="null" />.</param>
        <param name="values">A <see cref="T:System.Collections.IDictionary" /> of new values to apply to the data source. These parameters are used with the method specified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> property to perform the update database operation. If there are no parameters associated with the method, pass <see langword="null" />.</param>
        <param name="oldValues">A <see cref="T:System.Collections.IDictionary" /> that contains the additional non-key values used to match the item in the data source. Row values are passed to the delete method, only if the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> field.</param>
        <summary>Performs an update operation by calling the method that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> property and using any parameters that are supplied in the <paramref name="keys" />, <paramref name="values" />, or <paramref name="oldValues" /> collections.</summary>
        <returns>The number of rows updated; otherwise, -1, if the number is not known.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认返回值为-1，这意味着已更新的行数未知。 若要返回不同的值，设置<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>对象<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件。 受影响的行数通常由`Update`业务对象，而该值的方法是从可用<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>属性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>参数<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>方法调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>方法，并传递`keys`， `values`，和`oldValues`参数。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when an <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> operation has completed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated>事件检查返回值的值和输出参数，或者想要确定后是否引发了异常<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>操作已完成。 返回值、 输出参数和异常处理属性就可以在<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>与事件相关联的对象。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object invokes to update data.</summary>
        <value>一个字符串，表示方法的名称或函数的<see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />用来更新数据。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>对象假定由标识的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性一次，而不是批处理中的方式执行更新。  
  
 此方法可以是实例方法或`static`(`Shared`在 Visual Basic 中) 方法。 如果它是实例方法，业务对象创建和销毁指定的方法的每次<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>调用属性。 你可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>事件之前指定的方法的业务对象使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>调用属性。 你还可以处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>后引发的事件<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>调用方法。 (`Dispose`业务对象实现的情况下，才会调用<xref:System.IDisposable>接口。)如果该方法是`static`(`Shared`在 Visual Basic 中) 永远不会创建方法，业务对象，无法处理这些事件。  
  
 如果业务对象<xref:System.Web.UI.WebControls.ObjectDataSource>对象可与实现多个方法或函数具有相同名称 （方法重载），数据源控件尝试调用根据一组条件，包括参数的正确的订阅在<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合。 如果中的参数<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合与指定的方法的签名不匹配<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性，则数据源将引发异常。  
  
 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=nameWithType>。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性存储视图状态中。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DropDownList>控件，<xref:System.Web.UI.WebControls.TextBox>控件，并在几个<xref:System.Web.UI.WebControls.ObjectDataSource>控件更新数据。 <xref:System.Web.UI.WebControls.DropDownList>显示的名称`NorthwindEmployee`，虽然<xref:System.Web.UI.WebControls.TextBox>控制用于输入和更新地址信息。 因为<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合包含<xref:System.Web.UI.WebControls.ControlParameter>对象绑定到的所选值<xref:System.Web.UI.WebControls.DropDownList>，触发的按钮<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>操作将仅后选择员工时，才启用。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> method.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> ，其中包含使用的参数<see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名称和中包含的参数类型<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合的名称和指定的方法中的参数类型必须匹配<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性签名。 参数名称受到<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>属性，并且区分大小写。 使用提供参数，如数据绑定控件时<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控件自动合并在具有提供的这些参数的集合中显式指定任何参数数据绑定控件中。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DropDownList>控件，<xref:System.Web.UI.WebControls.TextBox>控件，并在几个<xref:System.Web.UI.WebControls.ObjectDataSource>控件更新数据。 <xref:System.Web.UI.WebControls.DropDownList>显示的名称`NorthwindEmployee`，虽然<xref:System.Web.UI.WebControls.TextBox>控制用于输入和更新地址信息。 因为<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合包含<xref:System.Web.UI.WebControls.ControlParameter>对象绑定到的所选值<xref:System.Web.UI.WebControls.DropDownList>，触发的按钮<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>操作将仅后选择员工时，才启用。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before an <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>事件以执行特定于应用程序，若要验证的值的参数，或更改之前的参数值的附加初始化操作<xref:System.Web.UI.WebControls.ObjectDataSource>控件将执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>操作。 参数都可用作<xref:System.Collections.IDictionary>集合，访问<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>属性，公开的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>对象。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DropDownList>控件，<xref:System.Web.UI.WebControls.TextBox>控件，并在几个<xref:System.Web.UI.WebControls.ObjectDataSource>控件更新数据。 <xref:System.Web.UI.WebControls.DropDownList>显示的名称`NorthwindEmployee`，虽然<xref:System.Web.UI.WebControls.TextBox>控制用于输入和更新地址信息。 因为<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合包含<xref:System.Web.UI.WebControls.ControlParameter>对象绑定到的所选值<xref:System.Web.UI.WebControls.DropDownList>，触发的按钮<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>操作将仅后选择员工时，才启用。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>