<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LinqDataSource.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eb47995a42e8b5a63458997b016e35704034a00a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb47995a42e8b5a63458997b016e35704034a00a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.</source>
          <target state="translated">允许通过标记文本在 ASP.NET 网页中使用语言集成查询 (LINQ) 来检索和修改数据对象中的数据。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>In this topic:</source>
          <target state="translated">本主题内容：</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Introduction<ept id="p1">](#introduction)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>介绍<ept id="p1">](#introduction)</ept></target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Order of Operations<ept id="p1">](#order_of_operations)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>操作顺序<ept id="p1">](#order_of_operations)</ept></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Ordering Data<ept id="p1">](#ordering_data)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>对数据进行排序<ept id="p1">](#ordering_data)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Grouping Data<ept id="p1">](#grouping_data)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>数据分组<ept id="p1">](#grouping_data)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Data Modifications<ept id="p1">](#data_modifications)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>数据修改<ept id="p1">](#data_modifications)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Evaluating Values at Run Time<ept id="p1">](#evaluating_value_at_run_time)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>在运行时计算值<ept id="p1">](#evaluating_value_at_run_time)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Working with Stored Procedures<ept id="p1">](#working_with_stored_procedures)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>使用存储过程<ept id="p1">](#working_with_stored_procedures)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Declarative Syntax<ept id="p1">](#declarative_syntax)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>声明性语法<ept id="p1">](#declarative_syntax)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Introduction</source>
          <target state="translated">介绍</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Language-Integrated Query (LINQ) is a query syntax that defines a set of query operators that enable traversal, filter, and projection operations to be expressed in a declarative way in any .NET-based programming language.</source>
          <target state="translated">语言集成查询 (LINQ) 是定义一组查询运算符，以便在任何声明性方式表示遍历、 筛选和投影操作的查询语法。基于网络的编程语言。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The data object can be an in-memory data collection or an object that represents data from a database.</source>
          <target state="translated">数据对象可以是内存中数据收集或从数据库中表示数据的对象。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can retrieve or modify the data without having to write SQL commands for each operation.</source>
          <target state="translated">你可以检索或修改数据而无需编写 SQL 命令为每个操作。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control enables you to use LINQ in an ASP.NET Web page by setting properties in markup text.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控制，你可以使用 ASP.NET Web 页中的 LINQ 通过标记文本中设置属性。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically generate the data commands.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件使用 LINQ to SQL 会自动生成数据命令。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For more information about LINQ to SQL, see <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>.</source>
          <target state="translated">有关 LINQ to SQL 的详细信息，请参阅<bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you are retrieving data from an in-memory data collection, you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the class that contains the data collection.</source>
          <target state="translated">当你从内存中的数据集合在检索数据时，您设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>属性设置为包含数据收集的类。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property or field that returns the data collection.</source>
          <target state="translated">你设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>属性的属性或字段的返回数据集合。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For example, you might have a class named <ph id="ph1">`Person`</ph> that contains a property named <ph id="ph2">`FavoriteCities`</ph> that returns an array of string values.</source>
          <target state="translated">例如，可能有一个名为类<ph id="ph1">`Person`</ph>，其中包含一个名为属性<ph id="ph2">`FavoriteCities`</ph>返回的字符串值的数组。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>In that case, you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to <ph id="ph2">`Person`</ph> and set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to <ph id="ph4">`FavoriteCities`</ph>.</source>
          <target state="translated">在这种情况下，设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>属性<ph id="ph2">`Person`</ph>并设置<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>属性<ph id="ph4">`FavoriteCities`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you are querying a database, you must first create entity classes that represent the database and its tables.</source>
          <target state="translated">在查询数据库时，你必须首先创建表示数据库和其表的实体类。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can use the <ph id="ph1">[!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)]</ph> or the SqlMetal.exe utility to generate these classes.</source>
          <target state="translated">你可以使用<ph id="ph1">[!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)]</ph>或 SqlMetal.exe 实用程序来生成这些类。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You then set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the class that represents the database and set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that represents the database table.</source>
          <target state="translated">然后设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>属性表示数据库的类并设置<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>属性表示数据库表的属性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Order of Operations</source>
          <target state="translated">操作顺序</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control applies data operations in the following order:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件应用数据操作顺序如下：</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Where (specify which data records to return).</source>
          <target state="translated">其中 （指定哪些数据记录返回）。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Order By (sort).</source>
          <target state="translated">Order By （排序）。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Group By (aggregate data records that share values).</source>
          <target state="translated">Group By （共享的值的聚合数据记录）。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Order Groups By (sort grouped data).</source>
          <target state="translated">Order By （排序分组数据） 的组。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Select (specify which fields or properties to return).</source>
          <target state="translated">（指定的字段或属性返回） 的选择。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Auto-sort (sort data records by a property that the user has selected).</source>
          <target state="translated">自动排序 （由用户选定的属性数据记录进行排序）。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Auto-page (retrieve a subset of data records that were selected by the user).</source>
          <target state="translated">自动页 （检索已由用户选择的数据记录的子集）。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can add conditions to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to filter the data records that are returned from a query.</source>
          <target state="translated">您可以添加到条件<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>属性筛选从查询返回的数据记录。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is not set, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves every record from the data object.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>未设置属性，<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件中检索此数据对象中的每个记录。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Ordering Data</source>
          <target state="translated">对数据进行排序</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to specify the names of properties from the returned data to sort by.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性来指定从返回的数据要作为排序依据的属性的名称。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with <ph id="ph2">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph> or <ph id="ph3">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id="ph5">`true`</ph>, you must provide a value in the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件替换为<ph id="ph2">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph>或<ph id="ph3">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph>和<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph>属性设置为<ph id="ph5">`true`</ph>，你必须提供中的值<ph id="ph6">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph>属性是<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you assign a value to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, you must also include all identity columns in the list of properties that is returned in the query.</source>
          <target state="translated">如果将值赋给<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性，你还必须包括所有的 identity 列在查询中返回的属性列表。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Grouping Data</source>
          <target state="translated">数据分组</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to specify which properties are used to consolidate data records that have the same values.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>属性以指定哪些属性用于合并具有相同的值的数据记录。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you group data, you can include <ph id="ph1">`Key`</ph> and <ph id="ph2">`It`</ph>, which are dynamically created properties, in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">在您对数据进行分组，你可以纳入<ph id="ph1">`Key`</ph>和<ph id="ph2">`It`</ph>，它们动态创建中的属性，<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">`Key`</ph> property refers to the values in the property or properties that were used to group the data.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>属性是指中或多个用于对数据进行分组的属性的值。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`Key`</ph> property will contain all unique values in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">例如，如果通过名为的属性组<ph id="ph1">`Category`</ph>、<ph id="ph2">`Key`</ph>属性将包含中的所有唯一值<ph id="ph3">`Category`</ph>属性。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">`It`</ph> property refers to a collection of individual records in a grouping of data.</source>
          <target state="translated"><ph id="ph1">`It`</ph>属性指的数据分组中的单个记录的集合。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records that have been consolidated in the grouping operation.</source>
          <target state="translated">可以循环访问<ph id="ph1">`It`</ph>属性，以检索已经合并分组操作中的单个记录。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`It`</ph> property contains all the individual records that share a common value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">例如，如果通过名为的属性组<ph id="ph1">`Category`</ph>、<ph id="ph2">`It`</ph>属性包含所有的共享中的常见值的单个记录<ph id="ph3">`Category`</ph>属性。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property to specify the properties to use for sorting the grouped data.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>属性来指定要用于对分组的数据进行排序的属性。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you group data, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property specifies how the individual records within the grouped data are sorted.</source>
          <target state="translated">数据，进行分组时<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性指定分组的数据中各记录的排序方式。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves values for all the properties from a data object.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件中检索数据对象中的所有属性的值。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to specify which properties to return if you want to work with a subset of available properties.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性来指定的属性以返回你是否想要使用的可用属性的子集。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The Select operation is applied after the Where, Order By, and Group By operations.</source>
          <target state="translated">选择操作应用后 Where、 Order By 和 Group By 操作。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Therefore, if you create an aliased name in a Select clause, the alias is not available in the other clauses.</source>
          <target state="translated">因此，如果 Select 子句中创建一个别名，别名不可用的其他子句中。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Data Modifications</source>
          <target state="translated">数据修改</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can specify whether data modifications are enabled by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> properties.</source>
          <target state="translated">你可以指定是否使用启用数据修改<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The user interface for modifying data from a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control is typically provided through a data-bound control, such as a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">修改数据的用户界面<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件通常提供通过数据绑定控件，如<ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>In addition to setting <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> to <ph id="ph4">`true`</ph>, the following conditions are required to enable automatic data modifications:</source>
          <target state="translated">除了设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>，或<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph>到<ph id="ph4">`true`</ph>，启用自动数据修改所需的以下条件：</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property cannot be assigned a value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性无法分配一个值。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property cannot be assigned a value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>属性无法分配一个值。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The class that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">分配给类<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>属性必须派生自<ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The property that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.</source>
          <target state="translated">分配给属性<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>属性必须派生自<ph id="ph2">&lt;xref:System.Data.Linq.Table%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can restrict which properties are displayed in a data-bound control in two ways.</source>
          <target state="translated">你可以限制在两种方式的数据绑定控件中显示的属性。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can either set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to a subset of properties, or you can define the fields for a data-bound control by adding <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataControlField&gt;</ph> controls.</source>
          <target state="translated">你可以设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性号码中的属性，或者你可以通过添加定义的字段的数据绑定控件<ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataControlField&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>However, if you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, it means that automatic update, insert, and delete operations cannot be enabled.</source>
          <target state="translated">但是，如果你设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性，则表示无法启用自动更新、 插入和删除操作。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you want to enable automatic data modifications while you work with a subset of available properties, do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">如果你想要启用自动数据修改，在你使用的可用属性的子集时，不要设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Instead, retrieve all properties from the data object and manage which ones are displayed by using the data-bound control.</source>
          <target state="translated">相反，此数据对象中检索所有属性和管理哪些显示通过使用数据绑定控件。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control or the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, you must also set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph> properties to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>控件或<ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>控件，你还必须设置<ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph>属性设置为<ph id="ph5">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>This prevents the data-bound control from automatically including buttons for editing and deleting the data.</source>
          <target state="translated">这可以防止数据绑定控件自动包括按钮用于编辑和删除数据。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Any values that are not displayed in the data-bound control are stored in view state.</source>
          <target state="translated">数据绑定控件中不显示任何值存储视图状态中。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>They are passed unchanged to the data source when the data update is performed.</source>
          <target state="translated">它们是不变时传递给数据源执行数据更新。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Evaluating Values at Run Time</source>
          <target state="translated">在运行时计算值</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you have to evaluate values at run time for ordering, filtering, or grouping values, you can add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collections.</source>
          <target state="translated">如果你需要在运行时以进行排序，评估值筛选或分组的值，你可以将参数添加到<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>，或<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you want to specify default values, you can add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection.</source>
          <target state="translated">如果你想要指定默认值，你可以将参数添加到<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you want to examine or modify values before the data operation is executed, you can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> events.</source>
          <target state="translated">如果你想要检查或修改值，数据操作执行之前，你可以处理<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>， <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>， <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>，或<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can also handle these events in order to cancel the data operation or to examine validation errors that occurred when you set properties in the data class based on user input.</source>
          <target state="translated">若要取消数据操作，也可在检查根据用户输入的数据类中设置属性时出现的验证错误，你还可以处理这些事件。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>To examine values after the data operation has finished, handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> events.</source>
          <target state="translated">若要检查值，数据操作完成之后，处理<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph>， <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph>， <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph>，或<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Working with Stored Procedures</source>
          <target state="translated">使用存储过程</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to retrieve data from a stored procedure by creating an event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件从存储过程检索数据，通过创建的事件处理程序<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>In the event handler, you call the method in the data context class that represents the stored procedure and set the result to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph> object.</source>
          <target state="translated">在事件处理程序，你表示存储的过程的数据上下文类中调用该方法并将结果设置为<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you want to enable automatic update, insert, and delete operations for the data, the type that is returned from the method must match the type that is specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property.</source>
          <target state="translated">如果你要启用自动更新、 插入和删除操作的数据，从方法返回的类型必须与匹配中指定的类型<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For more information about creating data context methods, see <bpt id="p1">[</bpt>How to: Create DataContext methods mapped to stored procedures and functions (O/R Designer)<ept id="p1">](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a)</ept>.</source>
          <target state="translated">有关创建数据上下文方法的详细信息，请参阅<bpt id="p1">[</bpt>如何： 创建 DataContext 方法映射到存储的过程和函数 （O/R 设计器）<ept id="p1">](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a)</ept>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Declarative Syntax</source>
          <target state="translated">声明性语法</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that retrieves data from an entity class named <ph id="ph2">`Products`</ph>.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>从名为的实体类中检索数据的控件<ph id="ph2">`Products`</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The entity class could have been generated by using the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph> or the SqlMetal.exe utility.</source>
          <target state="translated">实体类无法通过使用生成<ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>或 SqlMetal.exe 实用程序。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is set to return only records that have a value in the <ph id="ph2">`Price`</ph> property greater than 50.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>属性设置为返回中具有值的记录<ph id="ph2">`Price`</ph>属性大于 50。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to display the data.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>控件绑定到<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件来显示数据。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that enables users to update, delete, and insert records in the data source.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>使用户能够更新、 删除和插入记录的数据源中的控件。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control is bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control and enables users to see and modify the data.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>控件绑定到<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件，从而使用户能够查看和修改数据。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Notice that no SQL commands are required in order to select, update, delete, or insert the records.</source>
          <target state="translated">请注意任何 SQL 命令才能选择、 更新、 删除或插入记录。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event that sets the data object based on a value in the Web page.</source>
          <target state="translated">下面的示例演示的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>设置的数据对象的事件基于网页中的值。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that is configured to group by two columns.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>即控制配置到组的两个列。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">`Key`</ph> property references an object that has two properties, <ph id="ph2">`ProductCategory`</ph> and <ph id="ph3">`Color`</ph>.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>属性引用具有两个属性的对象<ph id="ph2">`ProductCategory`</ph>和<ph id="ph3">`Color`</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The object represented by <ph id="ph1">`It`</ph> is renamed (aliased) to <ph id="ph2">`Products`</ph>.</source>
          <target state="translated">所表示的对象<ph id="ph1">`It`</ph>是重命名 （别名） <ph id="ph2">`Products`</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The renamed <ph id="ph1">`Products`</ph> object contains a collection of the individual records in a grouping.</source>
          <target state="translated">重命名<ph id="ph1">`Products`</ph>对象包含分组中各记录的集合。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Each instance will contain all the columns from the <ph id="ph1">`Products`</ph> table.</source>
          <target state="translated">每个实例将包含中的所有列<ph id="ph1">`Products`</ph>表。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> controls that display the data from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control in the previous example.</source>
          <target state="translated">下面的示例显示了两个<ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph>显示中的数据的控件<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>上一示例中的控件。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>One <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control displays the grouped data, and the other <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control displays the individual names of products that belong to that group.</source>
          <target state="translated">一个<ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph>控件显示分组的数据，以及其他<ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph>控件将显示属于该组的产品的各个名称。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The nested data-bound control's <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph> property is set to <ph id="ph2">`Products`</ph>, which is the alias for the <ph id="ph3">`It`</ph> object.</source>
          <target state="translated">嵌套的数据绑定控件的<ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph>属性设置为<ph id="ph2">`Products`</ph>，即的别名<ph id="ph3">`It`</ph>对象。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control dynamically creates an Order By clause based on values in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /&gt;</ph> collection.</source>
          <target state="translated">获取或设置一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 控件是否根据 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /&gt;</ph> 集合中的值动态创建 Order By 子句。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control creates the Order By clause; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 如果<ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph>控件创建的 Order By 子句; 否则为<ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>When you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates an Order By clause that is based on the values in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">当你将设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>属性<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件动态创建 Order By 子句中的值为基础<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control sorts the data by the first parameter and then additionally sorts the data for each additional parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件对数据进行排序的第一个参数，并为每个其他参数的数据，此外进行排序。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>Parameters that contain <ph id="ph1">`null`</ph> or an empty value are not included in the Order By clause.</source>
          <target state="translated">参数包含<ph id="ph1">`null`</ph>或 Order By 子句中不包含空值。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>You do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> is set to <ph id="ph3">`true`</ph>, because the parser dynamically creates the Order By clause.</source>
          <target state="translated">未设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性时<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>设置为<ph id="ph3">`true`</ph>，因为分析器可动态创建的 Order By 子句。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> is set to <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property is assigned values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件将引发异常，如果<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>设置为<ph id="ph3">`true`</ph>和<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性分配值。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件替换为<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>设置为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>A parameter is included in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection that orders the data based on the property name that a user selects from a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">参数包含在<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>排序基于属性的数据名用户的集合选择从<ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control dynamically creates a Where clause based on values defined in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /&gt;</ph> collection.</source>
          <target state="translated">获取或设置一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 控件是否基于 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /&gt;</ph> 集合中定义的值来动态创建 Where 子句。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control will create the Where clause; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 控件将创建 Where 子句，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>When you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates the Where clause from the parameters in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">当你将设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>属性<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件动态创建 Where 子句中的参数从<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Each parameter that you add to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection must have its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt;</ph> property set to a value that matches a property in the data object that is being queried.</source>
          <target state="translated">你将添加到每个参数<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>集合中必须具有其<ph id="ph2">&lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt;</ph>属性设置为与匹配正在查询的数据对象中的属性的值。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The automatically generated Where clause will check whether the value specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection equals the value of the matching property in the data object.</source>
          <target state="translated">自动生成 Where 子句将检查是否在指定的值<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>集合等于数据对象中匹配的属性的值。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>If you provide more than one parameter, the parameters are linked with a logical <ph id="ph1">`AND`</ph> operation.</source>
          <target state="translated">如果你提供多个参数，则这些参数将与逻辑<ph id="ph1">`AND`</ph>操作。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Parameters that contain <ph id="ph1">`null`</ph> or an empty value are not included in the Where clause.</source>
          <target state="translated">参数包含<ph id="ph1">`null`</ph>或空值不包括在 Where 子句。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The automatically generated <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> clause can test only for equality and can link parameters only with the <ph id="ph2">`AND`</ph> operation.</source>
          <target state="translated">自动生成<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>子句可以仅测试相等性和链接参数只能与<ph id="ph2">`AND`</ph>操作。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph> if you have to add a condition that does not test for equality or if you have to relate parameters with the <ph id="ph3">`OR`</ph> operation.</source>
          <target state="translated">未设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>属性<ph id="ph2">`true`</ph>如果你有要添加不会测试相等性的条件或你必须与参数替换<ph id="ph3">`OR`</ph>操作。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>You can accomplish these tasks by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`false`</ph> and adding placeholders in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property for each parameter in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">你可以通过设置完成这些任务<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>属性<ph id="ph2">`false`</ph>和添加中的占位符<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>中每个参数的属性<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>In the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property, preface each placeholder name with the @ symbol.</source>
          <target state="translated">在<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>属性，作为每个占位符名称的开头 @ 符号。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>You do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id="ph3">`true`</ph>, because the parser dynamically creates the Where clause.</source>
          <target state="translated">未设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>属性时<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>属性是<ph id="ph3">`true`</ph>，因为分析器可动态创建 Where 子句。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is assigned values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件将引发异常，如果<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>属性是<ph id="ph3">`true`</ph>和<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>属性分配值。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件替换为<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>设置为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to display the data that is returned from the query.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>控件绑定到<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件来显示从查询返回的数据。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control is included that is populated with three values.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>控件是因为它包含具有三个值填充。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>A parameter is included in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection with the name set to <ph id="ph2">`Category,`</ph> which matches one of the properties of the data object.</source>
          <target state="translated">参数包含在<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>具有名称设置为集合<ph id="ph2">`Category,`</ph>与数据对象的属性之一匹配。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Its <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A&gt;</ph> property is set to the ID of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A&gt;</ph>属性设置为的 ID<ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control automatically creates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to filter records based on the value that the user selects from the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件自动创建<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>筛选器记录的属性基于用户从选择的值<ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The query returns the records whose <ph id="ph1">`Category`</ph> property matches the value that the user has selected from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">查询返回的记录其<ph id="ph1">`Category`</ph>用户从所选的值匹配属性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control supports navigation through sections of the data at run time.</source>
          <target state="translated">获取或设置一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 控件是否支持在运行时在数据的各部分之间导航。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can page through the data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果用户可以对数据进行分页，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to enable paging in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph>属性<ph id="ph2">`true`</ph>若要在中启用分页<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>To enable the user to page through the data, connect a data-bound control that provides the interface for paging to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">若要使用户能够对数据进行分页，连接提供用于对分页的接口的数据绑定控件<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves only enough records for one page in the data-bound control.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph>属性设置为<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件中检索仅足够数据绑定控件中的一页的记录。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>It uses the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Skip%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Linq.Enumerable.Take%2A&gt;</ph> methods to retrieve the records for the current page.</source>
          <target state="translated">它使用<ph id="ph1">&lt;xref:System.Linq.Enumerable.Skip%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Linq.Enumerable.Take%2A&gt;</ph>方法来检索当前页的记录。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property set to <ph id="ph3">`true`</ph> and a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control that is bound to the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件替换为<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph>属性设置为<ph id="ph3">`true`</ph>和<ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>绑定到控件<ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is set to <ph id="ph3">`true`</ph> to provide the interface that lets users page through the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>控件设置为<ph id="ph3">`true`</ph>提供接口，可使用户数据进行分页。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control supports sorting the data at run time.</source>
          <target state="translated">获取或设置一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 控件是否支持在运行时对数据进行排序。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can sort the data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果用户可以对数据进行排序，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control supports two approaches for sorting data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件支持两种方法对数据进行排序。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property to enable run-time sorting or you can set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to define the sorting at design time.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph>属性来启用运行时排序也可以设置<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性来定义在设计时的排序。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to enable sorting in a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that is based on the sort expression from a data-bound control.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph>属性<ph id="ph2">`true`</ph>中启用排序<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>基于的数据绑定控件的排序表达式的控件。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The data-bound control provides the interface to enable the user to select at run time which property to use for sorting.</source>
          <target state="translated">数据绑定控件提供的接口，使用户能够在运行时选择要用于排序的属性。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>You can programmatically set the order in which data is returned by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to the property or properties used for sorting.</source>
          <target state="translated">你可以以编程方式设置通过设置返回数据的顺序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性的属性或用于排序的属性。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property is set to a property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property is <ph id="ph3">`true`</ph>, the sort expression from the data-bound control is applied after the expression in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性设置为一个属性和<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph>属性是<ph id="ph3">`true`</ph>，从数据绑定控件的排序表达式应用中的表达式之后<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>Therefore, this determines the final sorting of the data.</source>
          <target state="translated">因此，这将确定数据的最终排序。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property set to <ph id="ph3">`true`</ph> and a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control that is bound to the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件替换为<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph>属性设置为<ph id="ph3">`true`</ph>和<ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>绑定到控件<ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AllowSorting%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is set to <ph id="ph3">`true`</ph> to provide the interface that lets users sort the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AllowSorting%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>控件设置为<ph id="ph3">`true`</ph>提供允许对数据进行排序的用户界面。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>Occurs after an instance of the context type object is created.</source>
          <target state="translated">在创建上下文类型对象实例后发生。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated&gt;</ph> event to examine the context type object or examine exceptions that are raised while the object is being created.</source>
          <target state="translated">处理<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated&gt;</ph>事件以进行检查的上下文类型对象或检查在创建对象时引发的异常。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>You retrieve the context type object from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is associated with this event.</source>
          <target state="translated">检索中的上下文类型对象<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>与此事件相关联的对象。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>You retrieve the exception that was raised during the data operation from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property.</source>
          <target state="translated">检索从数据操作过程中引发的异常<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>The context type object is created during select, update, insert, and delete operations and is reused throughout the request.</source>
          <target state="translated">上下文类型对象选择、 更新、 插入和删除操作过程中创建，并且在整个请求重复。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>There is one time when the event is not raised.</source>
          <target state="translated">没有时不引发该事件的一次。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>This is when you programmatically set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property to an object during the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">这是以编程方式设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph>期间的对象属性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>An additional condition is that either the original values do not have to be stored in view state, or the object in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property implements the <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">附加条件是原始值不需要存储在或中的对象的视图状态，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph>属性实现<ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>Occurs before an instance of the context type object is created.</source>
          <target state="translated">在创建上下文类型对象实例前发生。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control creates an instance of the type that is specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件创建一个实例中指定的类型<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control calls the default constructor of the data context object to create an instance of the object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件调用要创建对象的实例的数据上下文对象的默认构造函数。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.</source>
          <target state="translated">很可能你必须使用非默认构造函数，或你必须创建不同的对象中指定从<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>In that case, you must handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;</ph> event and manually create the data context object.</source>
          <target state="translated">在这种情况下，你必须处理<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;</ph>事件和手动创建的数据上下文对象。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>The context type object is created during select, update, insert, and delete operations.</source>
          <target state="translated">在选择、 更新、 插入和删除操作期间创建上下文类型对象。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>There is one time when the event is not raised.</source>
          <target state="translated">没有时不引发该事件的一次。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>This is when you programmatically set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property to an object in an event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">这是以编程方式设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph>的事件处理程序中某个对象的属性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>An additional condition is that either the original values do not have to be stored in view state, or the object in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property implements the <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">附加条件是原始值不需要存储在或中的对象的视图状态，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph>属性实现<ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>The following example shows how to create the data context object by using a non-default constructor during the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;</ph> event.</source>
          <target state="translated">下面的示例演示如何通过使用期间的非默认构造函数创建的数据上下文对象<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>The code assigns the object to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A&gt;</ph> property.</source>
          <target state="translated">该代码将分配到对象<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing">
          <source>Occurs before disposing the context type object.</source>
          <target state="translated">在释放上下文类型对象前发生。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing">
          <source>You handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing&gt;</ph> event to dispose the object manually, or to perform clean-up that is specific to the object before the object is destroyed.</source>
          <target state="translated">你处理<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing&gt;</ph>若要手动释放对象或执行清理该对象被销毁之前即特定于该对象的事件。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.</source>
          <target state="translated">获取或设置包含属性（其值包含要检索的数据）的类型的名称。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The name of the class to retrieve data from.</source>
          <target state="translated">要从中检索数据的类的名称。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to retrieve data from either an in-memory data collection or a database, you must specify two properties.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控制从内存中数据集合或数据库检索数据，必须指定两个属性。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The first is a data context class that represents the data source.</source>
          <target state="translated">第一个是表示数据源的数据上下文类。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The second is a property in the data context class that contains the data.</source>
          <target state="translated">第二个是中包含的数据的数据上下文类的属性。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>You set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the data context class and you set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the data collection that contains the data.</source>
          <target state="translated">你设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>属性设置为数据上下文类并且你的名称设<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>到包含数据的数据集合的属性。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>For example, when you retrieve data from a database, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the class that represents the database.</source>
          <target state="translated">例如，当从数据库检索数据，则设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>属性表示数据库的类的名称。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>Also set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that represents the table in the database.</source>
          <target state="translated">此外设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>属性表示数据库中的表的属性。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>To generate classes from a database, use the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph> or the SqlMetal.exe utility to automatically generate those classes.</source>
          <target state="translated">若要从数据库中生成类，请使用<ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>或 SqlMetal.exe 实用工具来自动生成这些类。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>When you retrieve data from an in-memory data collection such as an array, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the class that contains the array property.</source>
          <target state="translated">当从内存中的数据集合 （如数组） 中检索数据时，设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>属性设置为包含数组属性的类的名称。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>Then set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that gets the array.</source>
          <target state="translated">然后设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>属性用于获取数组的属性。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>To enable automatic update, insert, or delete operations through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control, the class assigned to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">若要启用自动更新、 插入或删除操作通过<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控制分配给类<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>属性必须派生自<ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>In addition, the property assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.</source>
          <target state="translated">此外，此属性分配给<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>属性必须派生自<ph id="ph2">&lt;xref:System.Data.Linq.Table%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.</source>
          <target state="translated">如果你不需要以启用自动更新、 插入或删除操作，则可以分配到的类的任何类型的名称<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>For information about how to select data from an instance of a class, see the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.</source>
          <target state="translated">有关如何从一个类的实例中选择数据的信息，请参阅<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to a class that contains an array of strings.</source>
          <target state="translated">下面的示例演示如何设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>到包含的字符串数组的类的属性。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>It also shows how to set the property to a class (generated by the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>) that represents a database.</source>
          <target state="translated">它还演示如何将属性设置为一个类 (由生成<ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>) 表示的数据库。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The class named <ph id="ph1">`ExampleDataContext`</ph> that represents the database table is not shown in this example.</source>
          <target state="translated">名为的类<ph id="ph1">`ExampleDataContext`</ph>，表示数据库表中不会显示此示例。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>For this example to work, you must create this class by adding a LINQ To SQL class named Example.dbml and dragging a table named Movie onto the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>.</source>
          <target state="translated">对于此示例正常工作，必须创建此类，通过添加一个命名的 Example.dbml 并拖动一个表名为拖动到的电影的 LINQ 到 SQL 类<ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>A class named <ph id="ph1">`ExampleDataContext`</ph> with a property named <ph id="ph2">`Movies`</ph> is generated.</source>
          <target state="translated">一个名为类<ph id="ph1">`ExampleDataContext`</ph>一个属性名为<ph id="ph2">`Movies`</ph>生成。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The following example shows the class named <ph id="ph1">`MovieLibrary`</ph> that is referenced in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">下面的示例显示名为的类<ph id="ph1">`MovieLibrary`</ph>中引用<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateQueryableView">
          <source>Returns a queryable view.</source>
          <target state="translated">返回可查询的视图。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateQueryableView">
          <source>A queryable view.</source>
          <target state="translated">可查询的视图。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateView">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /&gt;</ph> class that is associated with this control.</source>
          <target state="translated">创建与此控件相关联的 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateView">
          <source>An object that acts as the interface for data-bound controls.</source>
          <target state="translated">充当数据绑定控件的接口的对象。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateView">
          <source>To provide a custom view, you can override this method in a derived class.</source>
          <target state="translated">若要提供自定义视图，可以重写此方法在派生类中。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row key values for the records to be deleted.</source>
          <target state="translated">要删除的记录的行键值。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row values that are evaluated to detect data conflicts.</source>
          <target state="translated">为检测数据冲突而计算的行值。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Performs a delete operation.</source>
          <target state="translated">执行删除操作。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The number of records affected by the delete operation.</source>
          <target state="translated">受删除操作影响的记录数。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Typically, you do not have to call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method from your code.</source>
          <target state="translated">通常情况下，则不需要调用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph>在代码中的方法。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>When you use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with a data-bound control, the data-bound control will automatically call the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when the user takes action to delete a record.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件与数据绑定控件，数据绑定控件将自动调用<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph>方法如果用户执行操作以删除一条记录。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>You explicitly call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when you want to create your own process for deleting data.</source>
          <target state="translated">显式调用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph>方法如果你想要创建你自己的过程删除数据。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>For example, you can call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when you want to delete a record based on an event outside the data-bound control.</source>
          <target state="translated">例如，你可以调用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph>当你想要删除一条记录的方法基于之外的数据绑定控件的事件。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleted">
          <source>Occurs when a delete operation has finished.</source>
          <target state="translated">完成删除操作后发生。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleted">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph> event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished.</source>
          <target state="translated">处理<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph>事件来捕获删除操作中，从任何异常，也可后在操作完成后检查输出参数。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleted">
          <source>You can retrieve the output parameters from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
          <target state="translated">你可以检索来自的输出参数<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>传递给事件处理程序的对象。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.DeleteParameters">
          <source>This property is not used by the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 类不使用此属性。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.DeleteParameters">
          <source>A collection of parameters.</source>
          <target state="translated">参数的集合。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>Occurs before a delete operation.</source>
          <target state="translated">执行删除操作前发生。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation.</source>
          <target state="translated">处理<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>事件，以便验证要删除，以检查数据类，若要更改在删除操作中前, 一个值，或若要取消删除操作中的数据验证错误的对象。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control passes a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object to event handlers for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控制将传递<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph>向事件处理程序的对象<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object contains the data that will be deleted and enables you to cancel the delete operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph>对象包含将被删除并使你能够取消删除操作的数据。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>If the data class throws a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> exception, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object contains that exception in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt;</ph> property.</source>
          <target state="translated">如果数据类将引发<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph>异常，<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph>对象包含在该异常<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event, you must handle the exception in that event handler.</source>
          <target state="translated">如果在事件处理程序中引发异常<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>事件，你必须处理该事件处理程序中的异常。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
          <target state="translated">此异常不会传递到事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph>事件 (通过<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>对象)。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>属性包含仅后引发的异常<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event.</source>
          <target state="translated">下面的示例演示的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The code cancels the delete operation based on a property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A&gt;</ph> property and a value from the Web page.</source>
          <target state="translated">代码将会取消删除操作中的属性上基于<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A&gt;</ph>属性和值从 Web 页。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>In the example, when the <ph id="ph1">`OnSale`</ph> property is set to <ph id="ph2">`true`</ph>, the user must select a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.CheckBox&gt;</ph> control to confirm that a record should be deleted.</source>
          <target state="translated">在示例中，当<ph id="ph1">`OnSale`</ph>属性设置为<ph id="ph2">`true`</ph>，用户必须选择<ph id="ph3">&lt;xref:System.Web.UI.WebControls.CheckBox&gt;</ph>控件来确认是否删除了记录。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>Gets or sets a value that indicates whether data records can be deleted through the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control.</source>
          <target state="translated">获取或设置一个值，该值指示是否可以通过 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 控件删除数据记录。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if automatic delete operations are enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果启用了自动删除操作，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you want to enable users to delete a data record through the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>属性<ph id="ph2">`true`</ph>如果想要使用户能够删除数据记录通过<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>When <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to delete the data.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>是<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件使用 LINQ to SQL 会自动创建的命令删除的数据。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>You must include an interface that lets users select a record to delete, such as a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">必须包括一个接口，使用户可以选择一条记录以删除，如<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic delete operations when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件不支持自动删除操作时<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性或<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>属性设置。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if a delete operation is tried.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件将引发异常，如果尝试删除操作。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that has <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>具有控件<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>设置为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control displays the data and creates a button that lets users delete a data record.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>控件显示的数据并创建一个允许用户删除数据记录的按钮。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>Gets or sets a value that indicates whether data records can be inserted through the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control.</source>
          <target state="translated">获取或设置一个值，该值指示是否可以通过 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 控件插入数据记录。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if automatic insert operations are enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果启用了自动插入操作，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you want to enable users to insert a new data record through the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>属性<ph id="ph2">`true`</ph>如果想要使用户能够插入新数据记录通过<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>When <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to insert the data.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>是<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件使用 LINQ to SQL 来自动创建命令插入数据。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>You must include an interface that lets users insert a new record, such as a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">必须包括一个供用户插入一个新记录，例如界面<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic insert operations when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件不支持自动插入操作时<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性或<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>属性设置。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if an insert operation is tried.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件将引发异常，如果尝试插入操作。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that has <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>具有控件<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>设置为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control displays the data and displays a button that switches the control to insert mode where users can create and save a new record.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>控件显示的数据并显示将该控件为插入的模式，其中用户可以创建并保存一条新记录切换按钮。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>Gets or sets the value that indicates whether changes to the data context object are tracked.</source>
          <target state="translated">获取或设置一个值，该值指示是否跟踪对数据上下文对象所做的更改。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data context object is tracked for changes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果跟踪数据上下文对象的更改，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph> property is only used when selecting data from a LINQ To SQL data context object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph> LINQ 到 SQL 数据上下文对象中选择数据时，才使用属性。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>When you are interacting with read-only data, setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph> property to <ph id="ph2">`false`</ph> improves performance because the data is not cached to determine if it has changed.</source>
          <target state="translated">当你与只读数据交互时，设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph>属性<ph id="ph2">`false`</ph>能改善性能，因为数据不缓存以确定是否有更改。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>However, it also disables deferred query execution.</source>
          <target state="translated">但是，它还将禁用延迟的执行查询。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>This property must be set to <ph id="ph1">`true`</ph> if you want to use deferred query execution.</source>
          <target state="translated">此属性必须设置为<ph id="ph1">`true`</ph>如果你想要使用延迟的执行查询。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>Gets or sets a value that indicates whether data records can be updated through the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control.</source>
          <target state="translated">获取或设置一个值，该值指示是否可以通过 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 控件更新数据记录。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if automatic update operations are enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果启用了自动更新操作，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you want to enable users to update a data record by using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph>属性<ph id="ph2">`true`</ph>如果想要使用户能够通过使用更新的数据记录<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>When <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to update the data.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph>是<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件使用 LINQ to SQL 会自动创建的命令以更新的数据。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>You must include an interface that lets users update a record, such as a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">必须包含一个界面，从而让用户更新的记录，如<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic update operations when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件不支持自动更新操作时<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性或<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>属性设置。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if an update operation is tried.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件将引发异常，如果尝试更新操作。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that has <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>具有控件<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph>设置为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control displays the data and creates a button that lets users update a data record.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>控件显示的数据并创建供用户更新的数据记录的按钮。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>Gets or sets a value that specifies which properties are used for grouping the retrieved data.</source>
          <target state="translated">获取或设置一个值，该值指定用于对检索到的数据进行分组的属性。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>A string that is used to create the Group By clause.</source>
          <target state="translated">一个字符串，用于创建 Group By 子句。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to specify which properties are used for consolidating data records that have the same values.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>属性来指定哪些属性用于将合并具有相同的值的数据记录。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>For example, if you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to <ph id="ph2">`Name`</ph>, all the records in the query that have the same <ph id="ph3">`Name`</ph> property value are returned as a single consolidated record.</source>
          <target state="translated">例如，如果你设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>属性<ph id="ph2">`Name`</ph>，查询具有相同的所有记录<ph id="ph3">`Name`</ph>作为单个合并记录返回属性值。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can assign more than one property to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property by enclosing all the properties in the <ph id="ph2">`new`</ph> function and separating each property by using a comma.</source>
          <target state="translated">你可以将分配到多个属性<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>括中的所有属性的属性<ph id="ph2">`new`</ph>函数，并使用逗号分隔每个属性。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>For example, to group by the properties <ph id="ph1">`Name`</ph> and then <ph id="ph2">`Category`</ph>, set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to <ph id="ph4">`new(Name, Category)`</ph>.</source>
          <target state="translated">例如，若要按属性分组<ph id="ph1">`Name`</ph>然后<ph id="ph2">`Category`</ph>，将其设置<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>属性<ph id="ph4">`new(Name, Category)`</ph>。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The values in the property that are used for grouping are returned through a generated property named <ph id="ph1">`Key`</ph>.</source>
          <target state="translated">用于分组属性中的值返回通过名为的生成属性<ph id="ph1">`Key`</ph>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You include the <ph id="ph1">`Key`</ph> property in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to retrieve the grouped values.</source>
          <target state="translated">您包括<ph id="ph1">`Key`</ph>中的属性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性来检索已分组的值。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can set the <ph id="ph1">`Key`</ph> property to an alias by using the <ph id="ph2">`As`</ph> keyword, but you are not required to use an alias.</source>
          <target state="translated">你可以设置<ph id="ph1">`Key`</ph>属性使用别名<ph id="ph2">`As`</ph>关键字，但你无需使用别名。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>For example, you might set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to a property named <ph id="ph2">`Category`</ph>.</source>
          <target state="translated">例如，你可能会设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>到名为的属性的属性<ph id="ph2">`Category`</ph>。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can retrieve the consolidated values from the <ph id="ph1">`Category`</ph> property by setting the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id="ph3">`new(Key As ProductCategory)`</ph>.</source>
          <target state="translated">你可以检索中的合并的值<ph id="ph1">`Category`</ph>通过设置属性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性<ph id="ph3">`new(Key As ProductCategory)`</ph>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can access the individual records in a grouping by including the <ph id="ph1">`It`</ph> property in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">你可以通过包括访问分组中的各记录<ph id="ph1">`It`</ph>中的属性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The <ph id="ph1">`It`</ph> property contains a collection of records that share a value in the grouped property.</source>
          <target state="translated"><ph id="ph1">`It`</ph>属性包含共享中的分组属性的值的记录的集合。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records.</source>
          <target state="translated">可以循环访问<ph id="ph1">`It`</ph>属性来检索单个记录。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is often used with aggregation methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>属性通常用于聚合方法。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can use the following aggregate methods:</source>
          <target state="translated">你可以使用以下聚合方法：</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Sum(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Sum(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Max(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Max(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Min(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Min(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Where(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Where(`</ph> <bpt id="p1">*</bpt>条件<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`All(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`All(`</ph> <bpt id="p1">*</bpt>条件<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: LinqDataSource Web Server Control Overview<ept id="p1">](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> and <bpt id="p2">[</bpt>How to: Group and Aggregate Data Using the LinqDataSource Control<ept id="p2">](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>NIB: LinqDataSource Web 服务器控件概述<ept id="p1">](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)</ept>和<bpt id="p2">[</bpt>How to： 分组和聚合数据使用 LinqDataSource 控件<ept id="p2">](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)</ept>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that groups the returned data by a property named <ph id="ph2">`Category`</ph>.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>通过名为的属性对返回的数据进行分组的控件<ph id="ph2">`Category`</ph>。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>It returns the shared values and calculates the average price for the grouped records.</source>
          <target state="translated">它返回共享的值，并计算的分组记录的平均价格。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that is configured to group by two columns.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>即控制配置到组的两个列。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The <ph id="ph1">`Key`</ph> property references an object that has two properties, <ph id="ph2">`ProductCategory`</ph> and <ph id="ph3">`Color`</ph>.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>属性引用具有两个属性的对象<ph id="ph2">`ProductCategory`</ph>和<ph id="ph3">`Color`</ph>。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The object represented by <ph id="ph1">`It`</ph> is renamed <ph id="ph2">`Products`</ph>.</source>
          <target state="translated">所表示的对象<ph id="ph1">`It`</ph>已重命名<ph id="ph2">`Products`</ph>。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The renamed <ph id="ph1">`Products`</ph> object contains a collection of the individual records in a grouping, and each instance contains all the columns from the Products table.</source>
          <target state="translated">重命名<ph id="ph1">`Products`</ph>对象包含的分组，各记录的集合，每个实例包含从 Products 表的所有列。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The following example shows two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> controls for displaying the data from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control in the previous example.</source>
          <target state="translated">下面的示例显示了两个<ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph>控件用于显示从数据<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>上一示例中的控件。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>One <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control displays the grouped data and the other <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control displays the individual names of products that belong to that group.</source>
          <target state="translated">一个<ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph>控件显示分组的数据，另一个<ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph>控件将显示属于该组的产品的各个名称。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The nested data-bound control's <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph> property is set to <ph id="ph2">`Products`</ph>, which is the alias for the <ph id="ph3">`It`</ph> object.</source>
          <target state="translated">嵌套的数据绑定控件的<ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph>属性设置为<ph id="ph2">`Products`</ph>，即的别名<ph id="ph3">`It`</ph>对象。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>Gets the collection of parameters that are used to create the Group By clause.</source>
          <target state="translated">获取用于创建 Group By 子句的参数集合。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>The parameters that are used to create the Group By clause.</source>
          <target state="translated">用于创建 Group By 子句的参数。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to create the Group By clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件使用中的参数<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>集合以在运行时创建 Group By 子句。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>Typically you will not use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to group data.</source>
          <target state="translated">通常不会使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>对数据进行分组的集合。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>Instead, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property.</source>
          <target state="translated">相反，你可以使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection only when a value in the Group By clause must be set at run time and that value is not a property name.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>仅在时收集 Group By 子句中的值必须在运行时设置，并且该值不是属性名称。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>For example, use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to group data based on whether the <ph id="ph2">`LastName`</ph> property in the data records equals a value provided by the user.</source>
          <target state="translated">例如，使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>是否基于对数据进行分组的集合<ph id="ph2">`LastName`</ph>数据记录中的属性将为用户提供一个值。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>If you want to group data by a property and that property does not have to be set at run time, you can define the grouping property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property.</source>
          <target state="translated">如果你想对数据进行分组的属性，并且不需要在运行时设置该属性，则可以定义中的分组属性<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>For example, to return values from a database table grouped by <ph id="ph1">`LastName`</ph>, set <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> to "LastName" without any parameters.</source>
          <target state="translated">例如，若要从数据库表中返回按分组<ph id="ph1">`LastName`</ph>，将其设置<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>为"LastName"不带任何参数。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>If you want to dynamically group data by a property, create an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event and customize the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property as needed.</source>
          <target state="translated">如果你想对动态数据进行分组的属性，创建的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>事件和自定义<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>根据需要的属性。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>You cannot assign the name of a property as the value for a parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">不能将属性的名称分配中的参数的值作为<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>You add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection when you want to add a condition to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property that must be set at run time.</source>
          <target state="translated">你将参数添加到<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>集合，当你想要添加到条件<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>必须在运行时设置的属性。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>To set values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection, you assign a name to each parameter and then add a placeholder in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property for that named parameter.</source>
          <target state="translated">在中设置值<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>集合，将名称分配给每个参数并将中的占位符<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>属性中的为该命名参数。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>In the Group By clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">在 Group By 子句中，作为开头的每个参数名称 @ 符号。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The row values to be inserted into the data source.</source>
          <target state="translated">要插入到数据源的行值。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>Performs an insert operation.</source>
          <target state="translated">执行插入操作。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The number of rows affected by the insert operation.</source>
          <target state="translated">受插入操作影响的行数。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>Typically, you do not have to call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method from your code.</source>
          <target state="translated">通常情况下，则不需要调用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph>在代码中的方法。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The data-bound control will automatically call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method when the user takes action to insert a new record.</source>
          <target state="translated">数据绑定控件将自动调用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph>方法如果用户执行操作以插入新记录。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>You explicitly call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method when you want to create your own process for inserting data.</source>
          <target state="translated">显式调用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph>方法如果你想要创建你自己的过程用于插入数据。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The following example shows how to programmatically insert a new record in the data source after the user clicks a button.</source>
          <target state="translated">下面的示例演示如何以编程方式在数据源中插入新记录，用户单击按钮后。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The code passes a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object that contains default values to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method.</source>
          <target state="translated">在代码传递<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>对象，其中包含默认值复制到<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The following example shows the markup for the previous example.</source>
          <target state="translated">下面的示例演示上一示例的标记。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>Occurs when an insert operation has finished.</source>
          <target state="translated">完成插入操作后发生。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished.</source>
          <target state="translated">处理<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph>事件来捕获插入操作的任何异常，也可在插入操作完成之后检查的值。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>You can retrieve the new values through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
          <target state="translated">您可以通过将新值<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>传递给事件处理程序的对象。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object to retrieve the identity property generated by a database for a new data record.</source>
          <target state="translated">例如，你可以使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>对象以检索生成的数据库以进行新的数据记录的标识属性。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>The following example shows how to create an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> event that checks for exceptions and retrieves the identity property for the new record.</source>
          <target state="translated">下面的示例演示如何创建的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph>检查的异常并检索新的记录的标识属性的事件。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>Occurs before an insert operation.</source>
          <target state="translated">执行插入操作前发生。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation.</source>
          <target state="translated">处理<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>事件，以便验证的对象要插入、 检查数据类，若要更改在插入操作中前, 一个值，或取消插入操作中的数据验证错误。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object passed to event handlers for this event contains the new object to insert in the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph>为此事件包含要插入的数据源中的新对象，对象将传递到事件处理程序。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>If a validation error occurs during the insert operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object contains the validation exceptions that are thrown by the data class.</source>
          <target state="translated">如果在插入操作时，发生验证错误<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph>对象包含由数据类引发验证异常。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>A validation error occurs if a value to be inserted does not match the type of the property in the data class, or if it does not pass a custom validation check.</source>
          <target state="translated">如果要插入的值与在数据类中，属性的类型不匹配或未通过自定义的验证检查，将发生验证错误。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>In an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event, you can retrieve the validation exceptions and take appropriate action.</source>
          <target state="translated">中的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>事件，您可以检索验证异常，并采取相应的操作。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event, you must handle the exception in that event handler.</source>
          <target state="translated">如果在事件处理程序中引发异常<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>事件，你必须处理该事件处理程序中的异常。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
          <target state="translated">此异常不会传递到事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph>事件 (通过<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>对象)。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>属性包含仅后引发的异常<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event that modifies data before the insert operation.</source>
          <target state="translated">下面的示例演示的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>修改数据之前插入操作的事件。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The object from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> property is cast to a type named <ph id="ph2">`Product`</ph>.</source>
          <target state="translated">从对象<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph>属性被强制转换为名为的类型<ph id="ph2">`Product`</ph>。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The <ph id="ph1">`DateModified`</ph> property of the <ph id="ph2">`Product`</ph> object is set to the current date and time.</source>
          <target state="translated"><ph id="ph1">`DateModified`</ph>属性<ph id="ph2">`Product`</ph>对象设置为当前日期和时间。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event that retrieves validation exceptions.</source>
          <target state="translated">下面的示例演示的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>检索验证异常的事件。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The previous example retrieves validation exceptions.</source>
          <target state="translated">前面的示例检索验证异常。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>An exception might be thrown if a value does not match the type of the property.</source>
          <target state="translated">如果值与属性的类型不匹配，则可能引发异常。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>It might also be thrown from a customized check such as the one in the following example.</source>
          <target state="translated">它还可能如以下示例中的自定义检查从引发。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The <ph id="ph1">`OnAgeChanging`</ph> method checks that the number for the <ph id="ph2">`Age`</ph> property is not negative.</source>
          <target state="translated"><ph id="ph1">`OnAgeChanging`</ph>方法检查的数量<ph id="ph2">`Age`</ph>属性不是负数。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>Gets the collection of parameters that are used during an insert operation.</source>
          <target state="translated">获取在插入操作过程中使用的参数的集合。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>The parameters that are used during an insert operation.</source>
          <target state="translated">在插入操作过程中使用的参数。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>Typically the values that are needed for an insert operation are passed to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control by the data-bound control.</source>
          <target state="translated">通常将所需的插入操作的值传递给<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>由数据绑定控件的控件。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>You specify insert parameters when you want to provide a default value or define whether to convert empty values to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">插入参数，如果你想要提供默认值或定义是否将转换到的空值可指定<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>You do not have to provide a parameter for every value that will be inserted, only for the values that must be handled when the user does not provide a value.</source>
          <target state="translated">无需将插入，只需为在用户不提供一个值时必须处理值的每个值提供一个参数。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>The values that you provide in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection are used only for fields that are defined in the data source but that are not bound in the data control.</source>
          <target state="translated">在中提供的值<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph>集合仅用于在数据源中定义但未绑定数据控件中的字段。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control that is bound to the table is bound only to the Name and Address fields.</source>
          <target state="translated">例如，假设数据库表具有列名称、 地址和邮政编码，分别名为但<ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph>已绑定到表的控件绑定到的名称和地址字段仅。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>The values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection will be used only for the PostalCode field.</source>
          <target state="translated">中的值<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph>集合将仅用于邮政编码字段。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>They will not be used for the Name and Address field.</source>
          <target state="translated">它们不用于为名称和地址字段。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>This is true even if no value is entered for those fields.</source>
          <target state="translated">即使为这些字段中输入任何值，也是如此。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>If the data-bound control autogenerates fields for all fields in the data source, no values from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection will be used.</source>
          <target state="translated">如果数据中的所有字段的数据绑定控件自动生成字段源中的任何值<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph>将使用集合。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with a parameter that provides a default value in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件，其提供中的默认值的参数<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>If the user does not provide a value for the <ph id="ph1">`Category`</ph> property, the default value that is provided by the parameter is saved in the database.</source>
          <target state="translated">如果用户未提供的值<ph id="ph1">`Category`</ph>属性，则参数提供的默认值保存在数据库中。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)">
          <source>The event data.</source>
          <target state="translated">事件数据。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)">
          <source>Initializes the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> object.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Web.UI.Control.Unload" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Web.UI.Control.Unload" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>Gets or sets a value that specifies which fields are used for ordering the retrieved data.</source>
          <target state="translated">获取或设置一个值，该值指定用于对检索到的数据进行排序的字段。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>A string that is used to create the Order By clause.</source>
          <target state="translated">一个字符串，用于创建 Order By 子句。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to specify which properties from the returned data to use for sorting.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性来指定从返回的数据要用于排序的属性。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>The property for sorting the data must exist in the original data source, but it does not have to be included in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">对数据进行排序的属性必须存在于原始数据源，但是它没有要包括在<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>You can add a space and <ph id="ph1">`Ascending`</ph>, <ph id="ph2">`ASC`</ph>, <ph id="ph3">`Descending`</ph>, or <ph id="ph4">`DESC`</ph> to a property in the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> string in order to specify how the ordered data is returned.</source>
          <target state="translated">你可以添加一个空格和<ph id="ph1">`Ascending`</ph>， <ph id="ph2">`ASC`</ph>， <ph id="ph3">`Descending`</ph>，或<ph id="ph4">`DESC`</ph>到中的属性<ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>才能指定如何返回已排序的数据的字符串。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>You can provide more than one property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property by separating each property by using a comma.</source>
          <target state="translated">你可以提供多个属性中的<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>通过使用逗号分隔每个属性的属性。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>For example, to order by properties named <ph id="ph1">`LastName`</ph> and <ph id="ph2">`FirstName`</ph>, set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to "LastName, FirstName".</source>
          <target state="translated">例如，到排序依据属性名为<ph id="ph1">`LastName`</ph>和<ph id="ph2">`FirstName`</ph>，将其设置<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性设置为"姓氏 FirstName"。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with <ph id="ph2">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph> or <ph id="ph3">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id="ph5">`true`</ph>, you must provide a value in the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件替换为<ph id="ph2">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph>或<ph id="ph3">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph>和<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph>属性设置为<ph id="ph5">`true`</ph>，你必须提供中的值<ph id="ph6">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph>属性是<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>If you assign a value to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, you must also include all identity columns in the list of properties that is returned in the query.</source>
          <target state="translated">如果将值赋给<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性，你还必须包括所有的 identity 列在查询中返回的属性列表。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, a data-bound control can pass a sort expression to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control at run time.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph>属性设置为<ph id="ph2">`true`</ph>，数据绑定控件可以传递到一个排序表达式<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件在运行时。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will apply the sort expression from the data-bound control after it applies the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件将应用从数据绑定控件的排序表达式，它将应用后<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>Therefore, the data is returned according to the sort expression from the data-bound control.</source>
          <target state="translated">因此，根据排序表达式被返回的数据，从数据绑定控件。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>The following example returns data in reverse alphabetical order based on values in the <ph id="ph1">`Category`</ph> property.</source>
          <target state="translated">下面的示例返回按反向字母顺序中的值为基础的数据<ph id="ph1">`Category`</ph>属性。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>Gets the collection of parameters that are used to create the Order By clause.</source>
          <target state="translated">获取用于创建 Order By 子句的参数集合。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>The parameters that are used for creating the Order By clause.</source>
          <target state="translated">用于创建 Order By 子句的参数。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection to create the Order By clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件使用中的参数<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>集合以在运行时创建的 Order By 子句。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>Typically you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you add parameters to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">通常情况下设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>属性<ph id="ph2">`true`</ph>时你将参数添加到<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, each parameter in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection is added to the Order By clause in the sequence that they are specified in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>属性设置为<ph id="ph2">`true`</ph>中, 每个参数<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>集合添加到中指定的序列中的 Order By 子句<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the parameters do not have to be named because they are applied in sequence and are not matched to a placeholder.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>属性是<ph id="ph2">`true`</ph>，参数不需要命名为，因为它们会按顺序应用和与占位符不匹配。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>If you do not have to set a value at run time in the Order By clause, you do not have to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">如果不需要在 Order By 子句中的运行时设置一个值，不需要使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>You can define the fields to use for ordering the data in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated">你可以定义要使用的排序顺序中的数据的字段<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>For example, to return values from a database table ordered by <ph id="ph1">`LastName`</ph>, set <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> to "LastName" without any parameters.</source>
          <target state="translated">例如，若要从数据库表中返回排序通过<ph id="ph1">`LastName`</ph>，将其设置<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>为"LastName"不带任何参数。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>You can set parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection and match the parameters to placeholders in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property, but this approach has limited application.</source>
          <target state="translated">你可以在设置参数<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>集合和匹配到中的占位符参数<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>属性，但这种方法具有有限的应用程序。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>When you use this approach, the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection cannot represent a column name.</source>
          <target state="translated">当你使用此方法时中的参数<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>集合不能表示的一个列名称。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>You can set a parameter to a value and then compare that value to values in a property.</source>
          <target state="translated">可以将参数设置为一个值，然后将该值与属性中的值进行比较。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</source>
          <target state="translated">例如，你可以基于属性中的值是否小于该参数表示的运行时间值的数据进行排序。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">下面的示例显示一个 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 控件，其 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> 属性设置为 <ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>A parameter is included in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection that orders the data based on the property name that a user selects from a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">参数包含在<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>排序基于属性的数据名用户的集合选择从<ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>Gets or sets the fields that are used for ordering grouped data.</source>
          <target state="translated">获取或设置用于对分组数据进行排序的字段。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>A string that is used to create the Order Groups By clause.</source>
          <target state="translated">一个字符串，用于创建组 Order By 子句。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property to specify how the groups of data are sorted.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>属性指定数据的组的排序方式。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>For example, you can group by the <ph id="ph1">`CategoryID`</ph> property and then sort each category ID group by the average of the <ph id="ph2">`Price`</ph> property.</source>
          <target state="translated">例如，你可通过组<ph id="ph1">`CategoryID`</ph>属性和每个类别 ID 分组依据的平均值的然后排序<ph id="ph2">`Price`</ph>属性。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>You can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property only when you have grouped the data.</source>
          <target state="translated">你可以设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>属性仅在对数据进行分组时。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>If you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property without setting the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception.</source>
          <target state="translated">如果你设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>属性但没有设置<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>属性，<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件将引发异常。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The property that is used to sort the data must be either a property that is used to group the data, or the result of an aggregation function on the grouped data.</source>
          <target state="translated">用于对数据进行排序的属性必须是一个属性，用于对数据进行分组或分组数据的聚合函数的结果。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>To specify how the data is sorted, you can add a space and the string "Ascending", "ASC", "Descending", or "DESC" to a property name in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> string.</source>
          <target state="translated">若要指定如何对数据进行排序，但是你可以添加一个空格和字符串"升序"、"ASC"、"降序"或"DESC"中的属性名称到<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>字符串。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>You can specify more than one property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.</source>
          <target state="translated">你可以指定多个属性中的<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>Separate each property by using a comma.</source>
          <target state="translated">使用逗号分隔每个属性。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The following example shows how to group the data by using two properties, and how to sort the grouped data by using one of those properties.</source>
          <target state="translated">下面的示例演示如何对数据进行分组使用两个属性，以及如何通过使用这些属性之一分组的数据进行排序。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The data from a table named <ph id="ph1">`Products`</ph> is grouped by using properties named <ph id="ph2">`CategoryID`</ph> and <ph id="ph3">`Discontinued`</ph>.</source>
          <target state="translated">名为的表中的数据<ph id="ph1">`Products`</ph>按使用属性名为分组<ph id="ph2">`CategoryID`</ph>和<ph id="ph3">`Discontinued`</ph>。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The grouped data is sorted by the <ph id="ph1">`CategoryID`</ph> property.</source>
          <target state="translated">按分组的数据进行排序<ph id="ph1">`CategoryID`</ph>属性。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The following example shows how to group the data by using a property, and how to sort it based on the results of an aggregation function.</source>
          <target state="translated">下面的示例演示如何对数据进行分组通过使用的属性，以及如何对基于聚合函数的结果进行排序。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The data from the <ph id="ph1">`Products`</ph> table is grouped by using the <ph id="ph2">`CategoryID`</ph> property.</source>
          <target state="translated">中的数据<ph id="ph1">`Products`</ph>表分组使用<ph id="ph2">`CategoryID`</ph>属性。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>It is sorted based on the average of the <ph id="ph1">`UnitPrice`</ph> property within each group.</source>
          <target state="translated">进行排序所基于的平均值<ph id="ph1">`UnitPrice`</ph>每个组中的属性。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>Gets the collection of parameters that are used to create the Order Groups By clause.</source>
          <target state="translated">获取用于创建 Order Groups By 子句的参数集合。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>The parameters that are used to create the Order Groups By clause.</source>
          <target state="translated">使用创建组 Order By 子句的参数。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection to create the Order Groups By clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件使用中的参数<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>集合以在运行时创建的组 Order By 子句。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>You add values to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection only when you must set values at run time in the Order Groups By clause.</source>
          <target state="translated">你将值添加到<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>仅在你必须在组 Order By 子句中的运行时设置值时才收集。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>You can define the fields that are used to order the data by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.</source>
          <target state="translated">你可以定义用于按使用顺序对数据的字段<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>You can set parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection and match the parameters to placeholders in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.</source>
          <target state="translated">你可以在设置参数<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>集合和匹配到中的占位符参数<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>However, when you use this approach, the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection cannot represent a column name; they must represent values.</source>
          <target state="translated">但是，当你使用此方法时中的参数时，才<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>集合不能表示的一个列名称; 它们还必须表示值。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>You can set a parameter to a value and then compare that value to a property.</source>
          <target state="translated">可以将参数设置为一个值，然后将该属性值进行比较。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</source>
          <target state="translated">例如，你可以基于属性中的值是否小于该参数表示的运行时间值的数据进行排序。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Gets or sets the properties and calculated values that are included in the retrieved data.</source>
          <target state="translated">获取或设置属性和计算值，它们包含在检索到的数据中。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>A string that is used to create the Select clause.</source>
          <target state="translated">用于创建 Select 子句的字符串。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves all the properties (data columns) from the data object.</source>
          <target state="translated">如果你未设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性，<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控制此数据对象中检索所有属性 （数据列）。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性来检索此对象中的属性的子集或正在检索数据时计算新值。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You specify which properties to retrieve by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to the names of the properties that you want to include in the returned data.</source>
          <target state="translated">指定要检索通过设置哪些属性<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性设置为你想要包括在返回的数据的属性的名称。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you retrieve a subset of properties from the data object, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates a class that contains only the properties that you specify in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">如果从数据对象，检索属性的子集<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件动态创建一个包含仅在指定的属性类<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>A class is also created dynamically if you calculate properties that are not properties in the data object.</source>
          <target state="translated">如果计算不在数据对象中的属性的属性，也会动态创建类。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>In these cases, the object returned from the query is not an instance of the class that is specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property.</source>
          <target state="translated">在这些情况下，从查询返回的对象不是在指定类的实例<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Instead, you must use the <ph id="ph1">`new`</ph> method in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to indicate that a new class is returned from the query.</source>
          <target state="translated">相反，你必须使用<ph id="ph1">`new`</ph>中的方法<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性以指示，从查询返回一个新类。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For example, to return only the <ph id="ph1">`FirstName`</ph> and <ph id="ph2">`LastName`</ph> properties from an object that contains more than these properties, set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id="ph4">`new(FirstName, LastName)`</ph>.</source>
          <target state="translated">例如，若要仅返回<ph id="ph1">`FirstName`</ph>和<ph id="ph2">`LastName`</ph>属性从一个对象，包含多个这些属性，请设置<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性<ph id="ph4">`new(FirstName, LastName)`</ph>。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will dynamically create the new class that you specified in the <ph id="ph2">`new`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件动态创建中指定的新类<ph id="ph2">`new`</ph>方法。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You can use the <ph id="ph1">`As`</ph> keyword to assign an alias to a selected value.</source>
          <target state="translated">你可以使用<ph id="ph1">`As`</ph>关键字来将别名分配给所选的值。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you assign an alias, you must include the aliased properties in the <ph id="ph1">`new`</ph> method.</source>
          <target state="translated">如果分配别名，则必须包含中的别名属性<ph id="ph1">`new`</ph>方法。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Any data-bound control that binds to the results from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control must refer to the property by the alias.</source>
          <target state="translated">将绑定到的任何数据绑定控件<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件必须由该别名引用的属性。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For example, if you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id="ph2">`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`</ph>, the data-bound control can access two properties, <ph id="ph3">`SalesRegion`</ph> and <ph id="ph4">`RevenueThousands`</ph>.</source>
          <target state="translated">例如，如果你设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性<ph id="ph2">`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`</ph>，数据绑定控件可以访问两个属性，<ph id="ph3">`SalesRegion`</ph>和<ph id="ph4">`RevenueThousands`</ph>。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You use the <ph id="ph1">`new`</ph> function in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property according to the conditions listed in the following table.</source>
          <target state="translated">你使用<ph id="ph1">`new`</ph>函数中<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性根据条件下表中列出。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Select</source>
          <target state="translated">选择</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Use of new</source>
          <target state="translated">使用新的</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Single property.</source>
          <target state="translated">单个属性。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`new`</ph> not needed.</source>
          <target state="translated"><ph id="ph1">`new`</ph> 不需要。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Multiple properties.</source>
          <target state="translated">多个属性。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`new`</ph> needed.</source>
          <target state="translated"><ph id="ph1">`new`</ph> 需要。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Single or multiple properties that have an alias.</source>
          <target state="translated">一个或多个具有别名的属性。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`new`</ph> needed.</source>
          <target state="translated"><ph id="ph1">`new`</ph> 需要。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you want to enable automatic data modifications, but you do not want to display all the properties from the data object, do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">如果你想要启用自动数据修改，但你不希望显示此数据对象中的所有属性，则不要设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Instead, manage the display through the data-bound control.</source>
          <target state="translated">相反，管理通过数据绑定控件显示。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control or the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, you must also set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph> or the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph> property to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>控件或<ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>控件，你还必须设置<ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph>属性<ph id="ph5">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Any values that are not displayed in the data-bound control are stored in view state.</source>
          <target state="translated">数据绑定控件中不显示任何值存储视图状态中。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>They are passed unchanged to the data source when the data update is performed.</source>
          <target state="translated">它们是不变时传递给数据源执行数据更新。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>When you group data in the query, you can include aggregate methods in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">在查询中的数据分组时，你可以纳入中的聚合方法<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You can use the following aggregate methods:</source>
          <target state="translated">你可以使用以下聚合方法：</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Sum(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Sum(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Max(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Max(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Min(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Min(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Where(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Where(`</ph> <bpt id="p1">*</bpt>条件<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`All(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`All(`</ph> <bpt id="p1">*</bpt>条件<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: LinqDataSource Web Server Control Overview<ept id="p1">](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> and <bpt id="p2">[</bpt>How to: Group and Aggregate Data Using the LinqDataSource Control<ept id="p2">](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>NIB: LinqDataSource Web 服务器控件概述<ept id="p1">](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)</ept>和<bpt id="p2">[</bpt>How to： 分组和聚合数据使用 LinqDataSource 控件<ept id="p2">](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)</ept>。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>When you group data, you can include <ph id="ph1">`Key`</ph> and <ph id="ph2">`It`</ph>, which are dynamically created properties, in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">在您对数据进行分组，你可以纳入<ph id="ph1">`Key`</ph>和<ph id="ph2">`It`</ph>，它们动态创建中的属性，<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">`Key`</ph> property refers to the values in the property or properties that were used to group the data.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>属性是指中或多个用于对数据进行分组的属性的值。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`Key`</ph> property will contain each unique value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">例如，如果通过名为的属性组<ph id="ph1">`Category`</ph>、<ph id="ph2">`Key`</ph>属性将包含在每个唯一值<ph id="ph3">`Category`</ph>属性。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">`It`</ph> property refers to a collection of individual records in a grouping of data.</source>
          <target state="translated"><ph id="ph1">`It`</ph>属性指的数据分组中的单个记录的集合。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records that have been consolidated in the grouping operation.</source>
          <target state="translated">可以循环访问<ph id="ph1">`It`</ph>属性，以检索已经合并分组操作中的单个记录。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`It`</ph> property contains all the individual records that share a common value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">例如，如果通过名为的属性组<ph id="ph1">`Category`</ph>、<ph id="ph2">`It`</ph>属性包含所有的共享中的常见值的单个记录<ph id="ph3">`Category`</ph>属性。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you include the <ph id="ph1">`It`</ph> keyword in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property when you group data, you must assign an alias to the <ph id="ph3">`It`</ph> keyword.</source>
          <target state="translated">如果包含<ph id="ph1">`It`</ph>中的关键字<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性数据进行分组时，你必须将分配的别名<ph id="ph3">`It`</ph>关键字。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will throw an exception if <ph id="ph2">`It`</ph> does not have an alias.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件将引发异常，如果<ph id="ph2">`It`</ph>没有别名。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You can assign an alias to the <ph id="ph1">`Key`</ph> keyword, but this is not required.</source>
          <target state="translated">你可以分配的别名<ph id="ph1">`Key`</ph>关键字，但这不是必需。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to a subset of properties in the data object.</source>
          <target state="translated">下面的示例演示如何设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性中的数据对象的属性的子集。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The following example shows how to retrieve values in a property that has been used to group data, and to retrieve the average for the grouped records.</source>
          <target state="translated">下面的示例演示如何检索对数据进行分组，已使用的属性中的值，以及如何检索分组记录的平均值。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">`Key`</ph> keyword contains the property that has been used for grouping data.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>关键字包含已用于对数据进行分组的属性。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>In this example, <ph id="ph1">`Key`</ph> will contain the shared values from the <ph id="ph2">`ProductCategory`</ph> property.</source>
          <target state="translated">在此示例中，<ph id="ph1">`Key`</ph>将包含从共享的值<ph id="ph2">`ProductCategory`</ph>属性。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Selected">
          <source>Occurs when a data retrieval operation has finished.</source>
          <target state="translated">数据检索操作完成后发生。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selected">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph> event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished.</source>
          <target state="translated">处理<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph>事件捕获从数据检索操作的任何异常或检索操作完成之后检查数据对象。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selected">
          <source>The object is available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
          <target state="translated">该对象可用于从<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>传递给事件处理程序的对象。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Occurs before a data-retrieval operation.</source>
          <target state="translated">执行数据检索操作前发生。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event in order to perform the following tasks:</source>
          <target state="translated">处理<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>事件来执行以下任务：</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Modify parameters for data retrieval.</source>
          <target state="translated">修改数据检索的参数。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Generate the query programmatically.</source>
          <target state="translated">以编程方式生成查询。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Modify the values for sorting or paging.</source>
          <target state="translated">修改排序或分页的值。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Perform custom sorting or paging.</source>
          <target state="translated">执行自定义排序或分页。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Cancel the data-retrieval operation.</source>
          <target state="translated">取消数据检索操作。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph> object that is passed to event handlers for this event contains the parameters for the data-retrieval operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph>为此事件包含该数据检索操作的参数传递到事件处理程序的对象。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>You can modify the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event handler before the query executes, or you can create a new result set and assign that to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.</source>
          <target state="translated">你可以修改中的参数<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>事件处理程序之前执行查询时，也可以创建新的结果集，并指定给<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>.</source>
          <target state="translated">你是否能够实现自定义的排序或为此事件可能会受到绑定到控件处理程序中的分页<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>For example, when the column header of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler.</source>
          <target state="translated">例如，当列标题的<ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>单击控件，控件将执行自动排序，这可能会的替代任何订单，所以建立在事件处理程序。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event, you must handle the exception in that event handler.</source>
          <target state="translated">如果在事件处理程序中引发异常<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>事件，你必须处理该事件处理程序中的异常。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
          <target state="translated">此异常不会传递到事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph>事件 (通过<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>对象)。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>属性包含仅后引发的异常<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">下面的示例演示的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The handler creates a query that retrieves values from an array of string values in the Web page.</source>
          <target state="translated">该处理程序创建从 Web 页中的字符串值的数组中检索值的查询。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The following example shows how to assign the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property to the object that is returned from a method that represents a stored procedure.</source>
          <target state="translated">下面的示例演示如何分配<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph>表示存储的过程的方法中返回的对象的属性。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>Gets the collection of parameters that are used during a data-retrieval operation.</source>
          <target state="translated">获取在数据检索操作过程中使用的参数的集合。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The parameters that are used to create the Select clause.</source>
          <target state="translated">用于创建 Select 子句的参数。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to create the Select clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件使用中的参数<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph>要在运行时创建 Select 子句集合。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>You add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection when you want to use run-time values in the Select clause.</source>
          <target state="translated">你将参数添加到<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph>时你想要在 Select 子句中使用运行时的值的集合。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>For example, you can add a parameter to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to represent a property in the user's profile.</source>
          <target state="translated">例如，你可以将参数添加到<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph>集合以表示用户的配置文件中的属性。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>You can then use that property and a value from the data source to calculate a new value.</source>
          <target state="translated">你可以然后使用该属性和值从数据源计算新值。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>If you do not have to set a value at run time in the Select clause, you do not have to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection.</source>
          <target state="translated">如果不需要在 Select 子句中的运行时设置一个值，不需要使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>You can define the properties to retrieve in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">你可以定义要检索的属性<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>For example, to return the <ph id="ph1">`FirstName`</ph> and <ph id="ph2">`LastName`</ph> values from a database table, set <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> to "FirstName, LastName" without any parameters.</source>
          <target state="translated">例如，若要返回<ph id="ph1">`FirstName`</ph>和<ph id="ph2">`LastName`</ph>从数据库表中的值设置<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>到"FirstName、 LastName"不带任何参数。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>To set values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection, you add a placeholder in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property for the named parameter.</source>
          <target state="translated">在中设置值<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph>集合，你将添加中的占位符<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>的命名参数的属性。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>In the Select clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">在 Select 子句中，作为开头的每个参数名称 @ 符号。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>You cannot use a parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to represent a property name.</source>
          <target state="translated">不能使用中的参数<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph>表示属性名称的集合。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>To dynamically set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to the name of a property, create an event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event and customize the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property as needed.</source>
          <target state="translated">动态设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>到属性的名称的属性创建的事件处理程序<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>事件和自定义<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>根据需要的属性。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The following example shows how to use a user-supplied value to calculate a value in the returned data.</source>
          <target state="translated">下面的示例演示如何使用用户提供的值计算中返回的数据的值。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The user can enter a value in the text box that represents the number of manufacturing days.</source>
          <target state="translated">用户可以表示制造天数的文本框中输入一个值。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>That value is divided by a value from a database that represents the number of days to manufacture a product.</source>
          <target state="translated">此值除以表示的天数，以制造一种产品的数据库中的一个值。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The returned value indicates how many products can be manufactured during the specified number of days.</source>
          <target state="translated">返回的值表示多少产品可以生产期间指定的天数。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The user's input is included in the Select command through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection.</source>
          <target state="translated">用户的输入中通过选择命令包含<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.</source>
          <target state="translated">获取或设置一个值，该值指示数据源中的数据是否存储在视图状态中，以确保数据在更新或删除之前不会由其他进程更改。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the values will be stored in view state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果将值存储在视图状态中，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>By default, when update and delete operations have been enabled, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control stores the original values for all the records in view state.</source>
          <target state="translated">默认情况下，当更新和删除操作已启用，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控制存储在视图状态中的所有记录的原始值。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control stores values for all primary keys and all properties not marked with <ph id="ph2">`UpdateCheck.Never`</ph> in the <ph id="ph3">`Column`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控制存储值的所有主键，并且所有属性不都标记为<ph id="ph2">`UpdateCheck.Never`</ph>中<ph id="ph3">`Column`</ph>属性。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>You set the <ph id="ph1">`UpdateCheck`</ph> property of the <ph id="ph2">`Column`</ph> attribute in the <ph id="ph3">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>.</source>
          <target state="translated">你设置<ph id="ph1">`UpdateCheck`</ph>属性<ph id="ph2">`Column`</ph>属性中<ph id="ph3">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>Before LINQ to SQL updates or deletes data, it checks the values in view state against the current values in the data source.</source>
          <target state="translated">LINQ to SQL 更新或删除数据之前，它会检查针对数据源中的当前值在视图状态的值。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>If the values do not match, the data source record has changed.</source>
          <target state="translated">如果值不匹配，则数据源记录已更改。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>In that case, LINQ to SQL throws an exception and does not continue with the update or delete operation.</source>
          <target state="translated">在这种情况下，LINQ to SQL 将引发异常和不继续更新或删除操作。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>For more information about LINQ to SQL, see <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>.</source>
          <target state="translated">有关 LINQ to SQL 的详细信息，请参阅<bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>Storing the original values in view state can cause the page size to become unnecessarily large and can expose sensitive data to a malicious user.</source>
          <target state="translated">状态视图中存储的原始值可能会导致的页大小变得不必要地大和可以公开给恶意用户的敏感数据。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>You can disable storing values in view state by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">你可以禁用通过设置存储视图状态中值<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph>属性<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>If you do this, you must provide your own way to make sure that the data has not changed.</source>
          <target state="translated">如果你这样做，则必须提供您自己的方式，以确保数据未更改。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>If you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, the original values are not persisted in view state for the data-bound control.</source>
          <target state="translated">如果你设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph>属性<ph id="ph2">`false`</ph>，原始值不会保留在数据绑定控件的视图状态。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>In that case, LINQ to SQL cannot verify the integrity of the data.</source>
          <target state="translated">在这种情况下，LINQ to SQL 无法验证数据的完整性。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>LINQ to SQL will throw an exception that indicates a data conflict even if the data in the data source has not actually changed.</source>
          <target state="translated">LINQ to SQL 将引发异常，该值指示数据冲突，即使数据源中的数据实际未更改。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>If the underlying data source contains a timestamp field that is automatically updated during an update, you can store only that value in view state.</source>
          <target state="translated">如果基础数据源包含更新的过程中自动更新的时间戳字段，你可以存储视图状态中的此值。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>In that case, the timestamp property in the entity class is set to <ph id="ph1">`IsVersion=true`</ph> and all the properties are set to <ph id="ph2">`UpdateCheck.Never`</ph>.</source>
          <target state="translated">在这种情况下，实体类中的时间戳属性设置为<ph id="ph1">`IsVersion=true`</ph>和所有属性都设置为<ph id="ph2">`UpdateCheck.Never`</ph>。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>Because a timestamp field is automatically updated by the database every time that data in that record changes, LINQ to SQL determines from that value if data has changed.</source>
          <target state="translated">因为每次该记录中的这些数据更改时，数据库自动更新时间戳字段，LINQ to SQL 确定从该值中，如果数据已更改。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>This helps reduce the size of view state, and no sensitive data is exposed.</source>
          <target state="translated">这有助于减少视图状态的大小，并且未公开任何敏感数据。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>LINQ to SQL will check for data consistency by comparing the timestamp value in view state with the timestamp value in the database.</source>
          <target state="translated">LINQ to SQL 数据库中的时间戳值的状态将通过比较时间戳值视图中检查的数据一致性。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Using a Timestamp with the LinqDataSource Control to Check Data Integrity<ept id="p1">](http://msdn.microsoft.com/library/e7700162-4f05-4130-81f7-3be1361027fa)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>演练： 使用时间戳与 LinqDataSource 控件与检查数据完整性<ept id="p1">](http://msdn.microsoft.com/library/e7700162-4f05-4130-81f7-3be1361027fa)</ept>。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IDynamicDataSource" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IDynamicDataSource" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
          <source>The type that is associated with the class.</source>
          <target state="translated">与类关联的类型。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IDynamicDataSource" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IDynamicDataSource" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
          <source>The name of the entity.</source>
          <target state="translated">实体的名称。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>Gets or sets the name of the property or field in the data context class that represents a data collection.</source>
          <target state="translated">获取或设置数据上下文类中的属性或字段的名称，该数据上下文类表示一个数据集合。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>A string that contains the name of the property that contains the data collection.</source>
          <target state="translated">包含属性（该属性包含数据集合）名称的字符串。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the name of the property or field that represents the data that you want to retrieve.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>属性的属性或表示你想要检索的数据的字段的名称。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>When you are connecting to a database table, the name of the property is usually the same as the name of the table.</source>
          <target state="translated">当连接到数据库表时，属性的名称通常是表的名称相同。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>When you are connecting to an in-memory data collection, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the name of the property or field that returns the data collection.</source>
          <target state="translated">当连接到内存中的数据集合时，设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>属性的属性或返回数据集合的字段的名称。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>You can assign a property that returns any type to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property for retrieval operations.</source>
          <target state="translated">你可以将返回到任何类型的属性分配<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>检索操作的属性。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>If the object that is represented by the property does not implement <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will automatically wrap the object in an instance of an <ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph> object.</source>
          <target state="translated">如果由属性表示的对象不实现<ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件将自动包装该对象的实例中<ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>To enable automatic update, insert, or delete operations, the class that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> and the property that is assigned to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id="ph4">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.</source>
          <target state="translated">若要启用自动更新、 插入或删除操作，分配给类<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>属性必须派生自<ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>和分配给属性<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>属性必须派生自<ph id="ph4">&lt;xref:System.Data.Linq.Table%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>For information about how to select data from an instance of a class, see the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.</source>
          <target state="translated">有关如何从一个类的实例中选择数据的信息，请参阅<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>The following example shows two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> controls.</source>
          <target state="translated">下面的示例显示了两个<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>In one <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property is set to a property in a class.</source>
          <target state="translated">在一个<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件，<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>属性设置为类中的属性。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>That property returns an array of strings.</source>
          <target state="translated">该属性返回字符串的数组。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>In the other <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property is set to a property that represents a database table.</source>
          <target state="translated">另一部分中<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件，<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>属性设置为表示数据库表的属性。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>The class named <ph id="ph1">`ExampleDataContext`</ph> that represents the database table is not shown in this example.</source>
          <target state="translated">名为的类<ph id="ph1">`ExampleDataContext`</ph>，表示数据库表中不会显示此示例。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>For this example to work, you must create this class by adding a LINQ to SQL class named Example.dbml and dragging a table named Movie onto the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>.</source>
          <target state="translated">对于此示例正常工作，必须创建此类，通过添加一个 LINQ to SQL 类命名的 Example.dbml 并拖动一个表名为拖动到的电影<ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>A class named <ph id="ph1">`ExampleDataContext`</ph> with a property named <ph id="ph2">`Movies`</ph> is generated.</source>
          <target state="translated">一个名为类<ph id="ph1">`ExampleDataContext`</ph>一个属性名为<ph id="ph2">`Movies`</ph>生成。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>The following example shows the class named <ph id="ph1">`MovieLibrary`</ph> that is referenced in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">下面的示例显示名为的类<ph id="ph1">`MovieLibrary`</ph>中引用<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row key values for the records to be updated.</source>
          <target state="translated">要更新的记录的行键值。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row values to be updated in the data source.</source>
          <target state="translated">要在数据源中更新的行值。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row values that are evaluated to detect data conflicts.</source>
          <target state="translated">为检测数据冲突而计算的行值。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Performs an update operation.</source>
          <target state="translated">执行更新操作。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The number of records affected by the update operation.</source>
          <target state="translated">受更新操作影响的记录数。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Typically, you do not have to call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method from your code.</source>
          <target state="translated">通常情况下，则不需要调用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph>在代码中的方法。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The data-bound control will automatically call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method when the user takes action to update a record.</source>
          <target state="translated">数据绑定控件将自动调用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph>如果用户执行操作以更新记录的方法。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>You explicitly call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method when you want to create your own process for updating data.</source>
          <target state="translated">显式调用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph>方法如果你想要创建你自己的过程用于更新数据。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The following example shows how to programmatically update a record in the data source after the user clicks a button.</source>
          <target state="translated">下面的示例演示如何以编程方式更新数据源中的记录，用户单击按钮后。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The code passes a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object that contains the key value, a <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object that contains the original values, and a <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object that contains the new values to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method.</source>
          <target state="translated">在代码传递<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>对象，其中包含的密钥值，<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>对象，其中包含的原始值和<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>对象，其中包含这些新值与<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The following example shows the markup for the previous example.</source>
          <target state="translated">下面的示例演示上一示例的标记。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Updated">
          <source>Occurs when an update operation has finished.</source>
          <target state="translated">完成更新操作后发生。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updated">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished.</source>
          <target state="translated">处理<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph>事件以更新操作从捕获任何异常也可检查的值更新操作完成之后，输出参数。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updated">
          <source>The output parameters are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
          <target state="translated">输出参数均可用从<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>传递给事件处理程序的对象。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.UpdateParameters">
          <source>This collection is not used by the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 类不使用此集合。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.UpdateParameters">
          <source>A collection of parameters.</source>
          <target state="translated">参数的集合。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>Occurs before an update operation.</source>
          <target state="translated">执行更新操作前发生。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation.</source>
          <target state="translated">处理<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件，以便验证更新，以检查数据类，若要更改的值早更新操作，或取消更新操作中的数据验证错误的对象。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph> object that is passed to event handlers contains both the original object and the updated object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph>传递给事件处理程序的对象包含对原始对象和更新的对象。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>If a validation error occurs during the update operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object contains the validation exceptions that are thrown by the data class.</source>
          <target state="translated">如果更新操作期间发生验证错误<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph>对象包含由数据类引发验证异常。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>A validation error occurs if a value to be updated does not match the type of the property in the data class, or if it does not pass a custom validation check.</source>
          <target state="translated">如果要更新的值与在数据类中，属性的类型不匹配或未通过自定义的验证检查，将发生验证错误。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>In an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event, you can retrieve the validation exceptions and take appropriate action.</source>
          <target state="translated">中的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件，您可以检索验证异常，并采取相应的操作。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event, you must handle the exception in that event handler.</source>
          <target state="translated">如果在事件处理程序中引发异常<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件，你必须处理该事件处理程序中的异常。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
          <target state="translated">此异常不会传递到事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph>事件 (通过<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>对象)。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>属性包含仅后引发的异常<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">下面的示例演示的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The code compares properties from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to see whether a value has changed.</source>
          <target state="translated">代码将从属性进行比较<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>属性和<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>属性以查看是否已更改一个值。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>If the value has changed, a value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">如果值已更改，值为<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>属性设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event that retrieves validation exceptions.</source>
          <target state="translated">下面的示例演示的事件处理程序<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>检索验证异常的事件。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The previous example retrieves validation exceptions.</source>
          <target state="translated">前面的示例检索验证异常。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>An exception might be thrown if a value does not match the type of the property.</source>
          <target state="translated">如果值与属性的类型不匹配，则可能引发异常。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>It might also be thrown from a customized check such as the one in the following example.</source>
          <target state="translated">它还可能如以下示例中的自定义检查从引发。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The <ph id="ph1">`OnAgeChanging`</ph> method checks that the number for the <ph id="ph2">`Age`</ph> property is not negative.</source>
          <target state="translated"><ph id="ph1">`OnAgeChanging`</ph>方法检查的数量<ph id="ph2">`Age`</ph>属性不是负数。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.</source>
          <target state="translated">获取或设置一个值，该值指定要将记录包含在检索到的数据中必须为真的条件。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>A string that is used to create the Where clause.</source>
          <target state="translated">用于创建 Where 子句的字符串。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to specify the conditions for the record to be returned from a query.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>属性来指定要从查询返回的记录的条件。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The syntax for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is the same as the syntax for a LINQ Where clause in C#.</source>
          <target state="translated">语法<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>属性是与 C# 中的 LINQ Where 子句的语法相同。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>You specify an expression that results in a Boolean value, and if the expression evaluates to <ph id="ph1">`true`</ph> for a given row, the row is included in the result set.</source>
          <target state="translated">指定一个表达式，结果为布尔值，如果表达式计算结果为<ph id="ph1">`true`</ph>对于给定的行，该行包含在结果集中。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>Expressions are composed of column names, comparison operators, and values to compare to, as shown in the following example:</source>
          <target state="translated">表达式的列名称、 比较运算符和值进行比较，由组成，如下面的示例中所示：</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>To specify multiple expressions linked by logical <ph id="ph1">`AND`</ph> or <ph id="ph2">`OR`</ph> operators, you use <ph id="ph3">`&amp;&amp;`</ph> as a logical AND operator and <ph id="ph4">`||`</ph> as a logical OR operator, as shown in the following example:</source>
          <target state="translated">若要指定多个链接的逻辑的表达式<ph id="ph1">`AND`</ph>或<ph id="ph2">`OR`</ph>运算符，你将使用<ph id="ph3">`&amp;&amp;`</ph>作为一个逻辑 AND 运算符和<ph id="ph4">`||`</ph>作为逻辑 OR 运算符，如下面的示例中所示：</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>If you want to test a property against a literal string value, the literal string value must be enclosed in double quotation marks.</source>
          <target state="translated">如果你想要测试针对一个文字字符串值的属性，则文本的字符串值必须括在双引号内。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>To do this in markup, enclose the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> clause value in single quotation marks, as shown in the following example:</source>
          <target state="translated">若要执行此操作在标记中，请将<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>子句值单引号引起来，如下面的示例中所示：</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>To test against a literal string value in code, use escape characters that are appropriate to the language you are using in order to insert double quotation marks, as shown in the following example:</source>
          <target state="translated">要测试的代码中的文本字符串值，使用适用于你为了插入双引号括起来，如下面的示例中所示正在使用的语言的转义字符：</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>If you want to test whether a string is greater than or less than another string, you must use methods of the <ph id="ph1">&lt;xref:System.String&gt;</ph> class instead of using <ph id="ph2">`&lt;`</ph> or <ph id="ph3">`&gt;`</ph> operators between the column name and the string value.</source>
          <target state="translated">如果你想要测试字符串是否大于或小于另一个字符串，则必须使用的方法<ph id="ph1">&lt;xref:System.String&gt;</ph>类而不是使用<ph id="ph2">`&lt;`</ph>或<ph id="ph3">`&gt;`</ph>之间的列名称和字符串值的运算符。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The following examples show how to select rows that have Category values that are less than, less than or equal to, greater than, or greater than or equal to "Sports":</source>
          <target state="translated">下面的示例演示如何选择具有小于，小于或等于的类别值的行大于，或大于或等于"体育":</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>You can also use other methods of the <ph id="ph1">&lt;xref:System.String&gt;</ph> class, such as <ph id="ph2">&lt;xref:System.String.StartsWith%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.String.EndsWith%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.String.Contains%2A&gt;</ph>.</source>
          <target state="translated">你还可以使用的其他方法<ph id="ph1">&lt;xref:System.String&gt;</ph>类，如<ph id="ph2">&lt;xref:System.String.StartsWith%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.String.EndsWith%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.String.Contains%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>For more information about how to compare strings, see <bpt id="p1">[</bpt>Comparing Strings<ept id="p1">](~/docs/standard/base-types/comparing.md)</ept>.</source>
          <target state="translated">有关如何比较字符串的详细信息，请参阅<bpt id="p1">[</bpt>比较字符串<ept id="p1">](~/docs/standard/base-types/comparing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>For more information about Where clause syntax, see <bpt id="p1">[</bpt>C# Operators<ept id="p1">](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43)</ept> and <bpt id="p2">[</bpt>where clause<ept id="p2">](~/docs/csharp/language-reference/keywords/where-clause.md)</ept>.</source>
          <target state="translated">有关 Where 子句语法，请参阅<bpt id="p1">[</bpt>C# 运算符<ept id="p1">](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43)</ept>和<bpt id="p2">[</bpt>其中子句<ept id="p2">](~/docs/csharp/language-reference/keywords/where-clause.md)</ept>。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>In addition to filtering based on static values that you define when you create the Web page, you can filter based on dynamic values that are evaluated at run time.</source>
          <target state="translated">还可以筛选基于你定义当创建 Web 页的静态值，您可以筛选在运行时计算的基于动态值。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>In that case, you include a named parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property that acts as a placeholder for the value.</source>
          <target state="translated">在这种情况下，包括在一个命名的参数<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>用作一个占位符的值的属性。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>You then add a parameter that has the matching name to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">然后添加具有匹配名称的参数<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>Alternatively, you can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and define the parameters in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">或者，您可以设置<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>属性<ph id="ph2">`true`</ph>和定义中的参数<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, you do not have to include the named parameters in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>属性是<ph id="ph2">`true`</ph>，则不需要包括中的命名的参数<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control automatically generates the Where clause from the parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> property.</source>
          <target state="translated">相反，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件自动生成 Where 子句中的参数从<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>For more information about how to filter data, see <bpt id="p1">[</bpt>Walkthrough: Selecting and Filtering a Subset of Data with the LinqDataSource and GridView Controls<ept id="p1">](http://msdn.microsoft.com/library/c1cca3e8-86e4-4e69-a29f-1c05b91f2205)</ept>.</source>
          <target state="translated">有关如何对筛选器数据的详细信息，请参阅<bpt id="p1">[</bpt>演练： 选择和筛选数据子集具有 LinqDataSource 和 GridView 控件<ept id="p1">](http://msdn.microsoft.com/library/c1cca3e8-86e4-4e69-a29f-1c05b91f2205)</ept>。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The following example shows how to filter the data returned from a query based on a static condition.</source>
          <target state="translated">下面的示例演示如何筛选从根据静态条件对查询返回的数据。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The following example shows how to filter the data based on a value that is provided by the user at run time.</source>
          <target state="translated">下面的示例演示如何筛选基于由用户在运行时提供的值的数据。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>In this example a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control are displayed on the page.</source>
          <target state="translated">在此示例中<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>控件和<ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>页上显示控件。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>When the user selects one of the values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control selects from the <ph id="ph3">`Products`</ph> table only rows that have <ph id="ph4">`UserPrice`</ph> values equal to the selected value.</source>
          <target state="translated">当用户选择中的值之一<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>控件，<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件选择从<ph id="ph3">`Products`</ph>表具有的行<ph id="ph4">`UserPrice`</ph>值等于所选值。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control then displays the filtered data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>控件然后显示筛选后的数据。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>Gets the collection of parameters that is used to create the Where clause.</source>
          <target state="translated">获取用于创建 Where 子句的参数集合。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>A collection of the parameters that are used to create the Where clause in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /&gt;</ph> property.</source>
          <target state="translated">用于创建 <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /&gt;</ph> 属性中 Where 子句的参数的集合。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection to create the Where clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控件使用中的参数<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>集合中创建 Where 子句在运行时。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>You add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection when you want to programmatically set one or more of the conditions in the Where clause.</source>
          <target state="translated">你将参数添加到<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>集合，当你想要以编程方式将一个或多个条件设置在 Where 子句。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>For example, you might search a database table for records with a last name equal to the value of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control.</source>
          <target state="translated">例如，您可能在其中搜索姓氏等于的值的记录的数据库表<ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>In that case, you add a parameter to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection for the text box value.</source>
          <target state="translated">在这种情况下，你将参数添加到<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>第文本框的值的集合。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>If you do not have to set a value at run time in the Where clause, you do not have to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">如果不需要在运行时设置一个值，在 Where 子句，则不需要使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>You can define the fields to retrieve in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property.</source>
          <target state="translated">你可以定义的字段中检索<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>For example, to return values from a database table where <ph id="ph1">`LastName`</ph> equals "Adams" in markup, set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to <ph id="ph3">`'LastName = "Adams"'`</ph> without any parameters.</source>
          <target state="translated">例如，若要从数据库表中返回其中<ph id="ph1">`LastName`</ph>等于"Adams"在标记中，设置<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>属性<ph id="ph3">`'LastName = "Adams"'`</ph>不带任何参数。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>To set values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection, you assign a name to each parameter and then add a placeholder in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property for that parameter.</source>
          <target state="translated">在中设置值<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>集合，将名称分配给每个参数并将中的占位符<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>为该参数的属性。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>In the Where clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">在 Where 子句中，在与每个参数名之前 @ 符号。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection to dynamically create the Where clause.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>集合动态创建 Where 子句。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control returns all the records with a value in the <ph id="ph2">`Price`</ph> column that is greater than the value selected by the user in a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>控制权将返回中的值的所有记录<ph id="ph2">`Price`</ph>大于中的用户选择的值的列<ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>控件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>