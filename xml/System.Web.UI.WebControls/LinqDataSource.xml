<Type Name="LinqDataSource" FullName="System.Web.UI.WebControls.LinqDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="386a29228993b7d947093cc95f0a3a221adc8fd5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39881587" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSource : System.Web.UI.WebControls.ContextDataSource, System.Web.DynamicData.IDynamicDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSource extends System.Web.UI.WebControls.ContextDataSource implements class System.Web.DynamicData.IDynamicDataSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSource&#xA;Inherits ContextDataSource&#xA;Implements IDynamicDataSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSource : System::Web::UI::WebControls::ContextDataSource, System::Web::DynamicData::IDynamicDataSource" />
  <TypeSignature Language="F#" Value="type LinqDataSource = class&#xA;    inherit ContextDataSource&#xA;    interface IDynamicDataSource&#xA;    interface IDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ContextDataSource</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-3.5">System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IDynamicDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultProperty("ContextTypeName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinqDataSourceDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.LinqDataSource), "LinqDataSource.bmp")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinqDataSourceDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.LinqDataSource), "LinqDataSource.ico")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b93c5-101">支持通过标记文本在 ASP.NET 网页中使用语言集成查询 (LINQ)，以从数据对象中检索和修改数据。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b93c5-101">Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-102">本主题内容：</span><span class="sxs-lookup"><span data-stu-id="b93c5-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="b93c5-103">介绍</span><span class="sxs-lookup"><span data-stu-id="b93c5-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="b93c5-104">操作顺序</span><span class="sxs-lookup"><span data-stu-id="b93c5-104">Order of Operations</span></span>](#order_of_operations)  
  
-   [<span data-ttu-id="b93c5-105">对数据进行排序</span><span class="sxs-lookup"><span data-stu-id="b93c5-105">Ordering Data</span></span>](#ordering_data)  
  
-   [<span data-ttu-id="b93c5-106">数据分组</span><span class="sxs-lookup"><span data-stu-id="b93c5-106">Grouping Data</span></span>](#grouping_data)  
  
-   [<span data-ttu-id="b93c5-107">数据修改</span><span class="sxs-lookup"><span data-stu-id="b93c5-107">Data Modifications</span></span>](#data_modifications)  
  
-   [<span data-ttu-id="b93c5-108">在运行时计算值</span><span class="sxs-lookup"><span data-stu-id="b93c5-108">Evaluating Values at Run Time</span></span>](#evaluating_value_at_run_time)  
  
-   [<span data-ttu-id="b93c5-109">使用存储过程</span><span class="sxs-lookup"><span data-stu-id="b93c5-109">Working with Stored Procedures</span></span>](#working_with_stored_procedures)  
  
-   [<span data-ttu-id="b93c5-110">声明性语法</span><span class="sxs-lookup"><span data-stu-id="b93c5-110">Declarative Syntax</span></span>](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="b93c5-111">介绍</span><span class="sxs-lookup"><span data-stu-id="b93c5-111">Introduction</span></span>  
 <span data-ttu-id="b93c5-112">语言集成查询 (LINQ) 是用于定义一组启用以在任何声明性方式表示遍历、 筛选和投影操作的查询运算符的查询语法。基于 NET 的编程语言。</span><span class="sxs-lookup"><span data-stu-id="b93c5-112">Language-Integrated Query (LINQ) is a query syntax that defines a set of query operators that enable traversal, filter, and projection operations to be expressed in a declarative way in any .NET-based programming language.</span></span> <span data-ttu-id="b93c5-113">数据对象可以是内存中数据集合或表示数据库中的数据的对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-113">The data object can be an in-memory data collection or an object that represents data from a database.</span></span> <span data-ttu-id="b93c5-114">可以检索或修改数据而无需编写每个操作的 SQL 命令。</span><span class="sxs-lookup"><span data-stu-id="b93c5-114">You can retrieve or modify the data without having to write SQL commands for each operation.</span></span>  
  
 <span data-ttu-id="b93c5-115"><xref:System.Web.UI.WebControls.LinqDataSource>控件可在 ASP.NET 网页中使用 LINQ，通过标记文本中设置属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-115">The <xref:System.Web.UI.WebControls.LinqDataSource> control enables you to use LINQ in an ASP.NET Web page by setting properties in markup text.</span></span> <span data-ttu-id="b93c5-116"><xref:System.Web.UI.WebControls.LinqDataSource>控件使用 LINQ to SQL 来自动生成的数据命令。</span><span class="sxs-lookup"><span data-stu-id="b93c5-116">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically generate the data commands.</span></span> <span data-ttu-id="b93c5-117">有关 LINQ to SQL 的详细信息，请参阅[LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)。</span><span class="sxs-lookup"><span data-stu-id="b93c5-117">For more information about LINQ to SQL, see [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655).</span></span>  
  
 <span data-ttu-id="b93c5-118">当从内存中的数据集合检索数据时，您将设置<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性设置为包含数据集合的类。</span><span class="sxs-lookup"><span data-stu-id="b93c5-118">When you are retrieving data from an in-memory data collection, you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the class that contains the data collection.</span></span> <span data-ttu-id="b93c5-119">您设置<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性设置为属性或字段的返回数据集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-119">You set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property or field that returns the data collection.</span></span> <span data-ttu-id="b93c5-120">例如，可能有一个名为类`Person`，其中包含一个名为属性`FavoriteCities`返回一个字符串值数组。</span><span class="sxs-lookup"><span data-stu-id="b93c5-120">For example, you might have a class named `Person` that contains a property named `FavoriteCities` that returns an array of string values.</span></span> <span data-ttu-id="b93c5-121">在这种情况下，设置<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性设置为`Person`并设置<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性设置为`FavoriteCities`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-121">In that case, you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to `Person` and set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to `FavoriteCities`.</span></span>  
  
 <span data-ttu-id="b93c5-122">在所查询的数据库，必须首先创建表示数据库及其中的表的实体类。</span><span class="sxs-lookup"><span data-stu-id="b93c5-122">When you are querying a database, you must first create entity classes that represent the database and its tables.</span></span> <span data-ttu-id="b93c5-123">可以使用[!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)]或 SqlMetal.exe 实用工具来生成这些类。</span><span class="sxs-lookup"><span data-stu-id="b93c5-123">You can use the [!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)] or the SqlMetal.exe utility to generate these classes.</span></span> <span data-ttu-id="b93c5-124">然后设置<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性设置为表示数据库的类并设置<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性设置为表示数据库表的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-124">You then set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the class that represents the database and set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that represents the database table.</span></span>  
  
<a name="order_of_operations"></a>   
## <a name="order-of-operations"></a><span data-ttu-id="b93c5-125">操作顺序</span><span class="sxs-lookup"><span data-stu-id="b93c5-125">Order of Operations</span></span>  
 <span data-ttu-id="b93c5-126"><xref:System.Web.UI.WebControls.LinqDataSource>控件应用数据按以下顺序操作：</span><span class="sxs-lookup"><span data-stu-id="b93c5-126">The <xref:System.Web.UI.WebControls.LinqDataSource> control applies data operations in the following order:</span></span>  
  
1.  <span data-ttu-id="b93c5-127">其中 （指定要返回的数据的记录）。</span><span class="sxs-lookup"><span data-stu-id="b93c5-127">Where (specify which data records to return).</span></span>  
  
2.  <span data-ttu-id="b93c5-128">Order By （排序）。</span><span class="sxs-lookup"><span data-stu-id="b93c5-128">Order By (sort).</span></span>  
  
3.  <span data-ttu-id="b93c5-129">Group By （共享的值的聚合数据记录）。</span><span class="sxs-lookup"><span data-stu-id="b93c5-129">Group By (aggregate data records that share values).</span></span>  
  
4.  <span data-ttu-id="b93c5-130">Order By （排序分组数据） 的组。</span><span class="sxs-lookup"><span data-stu-id="b93c5-130">Order Groups By (sort grouped data).</span></span>  
  
5.  <span data-ttu-id="b93c5-131">选择 （指定哪些字段或属性返回）。</span><span class="sxs-lookup"><span data-stu-id="b93c5-131">Select (specify which fields or properties to return).</span></span>  
  
6.  <span data-ttu-id="b93c5-132">自动排序 （按用户所选的属性排序数据记录）。</span><span class="sxs-lookup"><span data-stu-id="b93c5-132">Auto-sort (sort data records by a property that the user has selected).</span></span>  
  
7.  <span data-ttu-id="b93c5-133">自动页 （检索用户已选择的数据记录的子集）。</span><span class="sxs-lookup"><span data-stu-id="b93c5-133">Auto-page (retrieve a subset of data records that were selected by the user).</span></span>  
  
 <span data-ttu-id="b93c5-134">您可以将条件添加到<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性筛选从查询返回的数据记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-134">You can add conditions to the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to filter the data records that are returned from a query.</span></span> <span data-ttu-id="b93c5-135">如果<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>未设置属性，<xref:System.Web.UI.WebControls.LinqDataSource>控件检索此数据对象中的每个记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-135">If the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is not set, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves every record from the data object.</span></span>  
  
<a name="ordering_data"></a>   
## <a name="ordering-data"></a><span data-ttu-id="b93c5-136">对数据进行排序</span><span class="sxs-lookup"><span data-stu-id="b93c5-136">Ordering Data</span></span>  
 <span data-ttu-id="b93c5-137">您使用<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性来指定从返回的数据要作为排序依据的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="b93c5-137">You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to specify the names of properties from the returned data to sort by.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b93c5-138">当你使用<xref:System.Web.UI.WebControls.LinqDataSource>控件，其[!INCLUDE[ss2k](~/includes/ss2k-md.md)]或[!INCLUDE[ssEW](~/includes/ssew-md.md)]并且<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>属性设置为`true`，必须提供中的值<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-138">When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="b93c5-139">默认情况下<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-139">By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`.</span></span> <span data-ttu-id="b93c5-140">如果你将值赋给<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性，您还必须包括所有标识列在查询中返回的属性列表中。</span><span class="sxs-lookup"><span data-stu-id="b93c5-140">If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query.</span></span>  
  
<a name="grouping_data"></a>   
## <a name="grouping-data"></a><span data-ttu-id="b93c5-141">数据分组</span><span class="sxs-lookup"><span data-stu-id="b93c5-141">Grouping Data</span></span>  
 <span data-ttu-id="b93c5-142">您使用<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性来指定哪些属性用于合并具有相同的值的数据记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-142">You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to specify which properties are used to consolidate data records that have the same values.</span></span> <span data-ttu-id="b93c5-143">当分组数据时，可以包括`Key`并`It`，它们动态创建中的属性，<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-143">When you group data, you can include `Key` and `It`, which are dynamically created properties, in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="b93c5-144">`Key`属性是指用来对数据进行分组的一个或多个属性中的值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-144">The `Key` property refers to the values in the property or properties that were used to group the data.</span></span> <span data-ttu-id="b93c5-145">例如，如果按属性名为分组`Category`，则`Key`属性将包含中的所有唯一值`Category`属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-145">For example, if you group by a property named `Category`, the `Key` property will contain all unique values in the `Category` property.</span></span> <span data-ttu-id="b93c5-146">`It`属性是指一系列中的数据分组的单个记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-146">The `It` property refers to a collection of individual records in a grouping of data.</span></span> <span data-ttu-id="b93c5-147">您可以循环访问`It`属性来检索已合并，在分组操作中的单个记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-147">You can iterate over the `It` property to retrieve the individual records that have been consolidated in the grouping operation.</span></span> <span data-ttu-id="b93c5-148">例如，如果按属性名为分组`Category`，则`It`属性包含所有共享一个公共值中的单个记录`Category`属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-148">For example, if you group by a property named `Category`, the `It` property contains all the individual records that share a common value in the `Category` property.</span></span>  
  
 <span data-ttu-id="b93c5-149">您使用<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>属性来指定要使用的分组的数据进行排序的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-149">You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify the properties to use for sorting the grouped data.</span></span> <span data-ttu-id="b93c5-150">当分组数据，<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性指定分组的数据中各记录的排序方式。</span><span class="sxs-lookup"><span data-stu-id="b93c5-150">When you group data, the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property specifies how the individual records within the grouped data are sorted.</span></span>  
  
 <span data-ttu-id="b93c5-151">默认情况下，<xref:System.Web.UI.WebControls.LinqDataSource>控件从一个数据对象中检索的所有属性的值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-151">By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves values for all the properties from a data object.</span></span> <span data-ttu-id="b93c5-152">您使用<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性来指定要返回如果想要使用的子集可用属性的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-152">You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to specify which properties to return if you want to work with a subset of available properties.</span></span> <span data-ttu-id="b93c5-153">选择操作应用之后 Where、 Order By 和 Group By 操作。</span><span class="sxs-lookup"><span data-stu-id="b93c5-153">The Select operation is applied after the Where, Order By, and Group By operations.</span></span> <span data-ttu-id="b93c5-154">因此，如果 Select 子句中创建了别名，别名不可用在其他子句中。</span><span class="sxs-lookup"><span data-stu-id="b93c5-154">Therefore, if you create an aliased name in a Select clause, the alias is not available in the other clauses.</span></span>  
  
<a name="data_modifications"></a>   
## <a name="data-modifications"></a><span data-ttu-id="b93c5-155">数据修改</span><span class="sxs-lookup"><span data-stu-id="b93c5-155">Data Modifications</span></span>  
 <span data-ttu-id="b93c5-156">您可以指定是否使用启用数据修改<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>， <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>，和<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-156">You can specify whether data modifications are enabled by using the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, and <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> properties.</span></span> <span data-ttu-id="b93c5-157">修改数据的用户界面<xref:System.Web.UI.WebControls.LinqDataSource>控件通常提供通过数据绑定控件，如<xref:System.Web.UI.WebControls.DetailsView>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-157">The user interface for modifying data from a <xref:System.Web.UI.WebControls.LinqDataSource> control is typically provided through a data-bound control, such as a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="b93c5-158">除了设置之外<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>， <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>，或<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>到`true`，启用自动数据修改所需满足以下条件：</span><span class="sxs-lookup"><span data-stu-id="b93c5-158">In addition to setting <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, or <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> to `true`, the following conditions are required to enable automatic data modifications:</span></span>  
  
-   <span data-ttu-id="b93c5-159"><xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>不能将属性分配一个值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-159">The <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property cannot be assigned a value.</span></span>  
  
-   <span data-ttu-id="b93c5-160"><xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>不能将属性分配一个值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-160">The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property cannot be assigned a value.</span></span>  
  
-   <span data-ttu-id="b93c5-161">分配给的类<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性必须派生自<xref:System.Data.Linq.DataContext>。</span><span class="sxs-lookup"><span data-stu-id="b93c5-161">The class that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="b93c5-162">分配给属性<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性必须派生自<xref:System.Data.Linq.Table%601>。</span><span class="sxs-lookup"><span data-stu-id="b93c5-162">The property that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.</span></span>  
  
 <span data-ttu-id="b93c5-163">你可以限制在两种方法中的数据绑定控件中显示的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-163">You can restrict which properties are displayed in a data-bound control in two ways.</span></span> <span data-ttu-id="b93c5-164">你可以设置<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性的子集属性，或者你可以通过添加定义的字段的数据绑定控件<xref:System.Web.UI.WebControls.DataControlField>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-164">You can either set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to a subset of properties, or you can define the fields for a data-bound control by adding <xref:System.Web.UI.WebControls.DataControlField> controls.</span></span> <span data-ttu-id="b93c5-165">但是，如果您设置<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性，这意味着，不能启用自动更新、 插入和删除操作。</span><span class="sxs-lookup"><span data-stu-id="b93c5-165">However, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, it means that automatic update, insert, and delete operations cannot be enabled.</span></span> <span data-ttu-id="b93c5-166">如果你想要使用的可用属性的子集时启用自动数据修改，未设置<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-166">If you want to enable automatic data modifications while you work with a subset of available properties, do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="b93c5-167">相反，此数据对象中检索的所有属性和管理通过使用数据绑定控件所显示。</span><span class="sxs-lookup"><span data-stu-id="b93c5-167">Instead, retrieve all properties from the data object and manage which ones are displayed by using the data-bound control.</span></span> <span data-ttu-id="b93c5-168">当你使用<xref:System.Web.UI.WebControls.DetailsView>控件或<xref:System.Web.UI.WebControls.GridView>控件，则还必须设置<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>或<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-168">When you use the <xref:System.Web.UI.WebControls.DetailsView> control or the <xref:System.Web.UI.WebControls.GridView> control, you must also set the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> or <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> properties to `false`.</span></span> <span data-ttu-id="b93c5-169">这会阻止数据绑定控件自动包括用于编辑和删除数据的按钮。</span><span class="sxs-lookup"><span data-stu-id="b93c5-169">This prevents the data-bound control from automatically including buttons for editing and deleting the data.</span></span> <span data-ttu-id="b93c5-170">不会显示在数据绑定控件的任何值存储在视图状态。</span><span class="sxs-lookup"><span data-stu-id="b93c5-170">Any values that are not displayed in the data-bound control are stored in view state.</span></span> <span data-ttu-id="b93c5-171">它们不变时传递给数据源执行数据更新。</span><span class="sxs-lookup"><span data-stu-id="b93c5-171">They are passed unchanged to the data source when the data update is performed.</span></span>  
  
<a name="evaluating_value_at_run_time"></a>   
## <a name="evaluating-values-at-run-time"></a><span data-ttu-id="b93c5-172">在运行时计算值</span><span class="sxs-lookup"><span data-stu-id="b93c5-172">Evaluating Values at Run Time</span></span>  
 <span data-ttu-id="b93c5-173">如果需要在运行时进行排序，评估值筛选，或者对值进行分组，您可以将参数添加到<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>， <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>， <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>，或<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-173">If you have to evaluate values at run time for ordering, filtering, or grouping values, you can add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>, or <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collections.</span></span>  
  
 <span data-ttu-id="b93c5-174">如果你想要指定默认值，您可以将参数添加到<xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-174">If you want to specify default values, you can add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection.</span></span>  
  
 <span data-ttu-id="b93c5-175">如果你想要检查或修改值，然后执行数据操作，则可以处理<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>， <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>， <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>，或<xref:System.Web.UI.WebControls.LinqDataSource.Updating>事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-175">If you want to examine or modify values before the data operation is executed, you can handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>, <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updating> events.</span></span> <span data-ttu-id="b93c5-176">此外可以处理这些事件，以便取消数据操作或发生时根据用户输入的数据类中设置属性的验证错误。</span><span class="sxs-lookup"><span data-stu-id="b93c5-176">You can also handle these events in order to cancel the data operation or to examine validation errors that occurred when you set properties in the data class based on user input.</span></span>  
  
 <span data-ttu-id="b93c5-177">若要完成数据操作后，请检查值，处理<xref:System.Web.UI.WebControls.LinqDataSource.Deleted>， <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>， <xref:System.Web.UI.WebControls.LinqDataSource.Selected>，或<xref:System.Web.UI.WebControls.LinqDataSource.Updated>事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-177">To examine values after the data operation has finished, handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events.</span></span>  
  
<a name="working_with_stored_procedures"></a>   
## <a name="working-with-stored-procedures"></a><span data-ttu-id="b93c5-178">使用存储过程</span><span class="sxs-lookup"><span data-stu-id="b93c5-178">Working with Stored Procedures</span></span>  
 <span data-ttu-id="b93c5-179">您使用<xref:System.Web.UI.WebControls.LinqDataSource>要从存储过程检索数据，通过创建的事件处理程序控件<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-179">You use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from a stored procedure by creating an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span> <span data-ttu-id="b93c5-180">在事件处理程序，您在数据上下文类表示存储的过程中调用该方法并将结果设置为<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>属性的<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-180">In the event handler, you call the method in the data context class that represents the stored procedure and set the result to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object.</span></span> <span data-ttu-id="b93c5-181">如果想要启用自动更新、 插入和删除操作的数据，从方法返回的类型必须匹配在指定的类型<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-181">If you want to enable automatic update, insert, and delete operations for the data, the type that is returned from the method must match the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property.</span></span> <span data-ttu-id="b93c5-182">有关创建数据上下文方法的详细信息，请参阅[如何： 映射到存储的过程和函数 （O/R 设计器） 创建 DataContext 方法](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a)。</span><span class="sxs-lookup"><span data-stu-id="b93c5-182">For more information about creating data context methods, see [How to: Create DataContext methods mapped to stored procedures and functions (O/R Designer)](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a).</span></span>  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="b93c5-183">声明性语法</span><span class="sxs-lookup"><span data-stu-id="b93c5-183">Declarative Syntax</span></span>  
  
```  
<asp:LinqDataSource  
    AutoGenerateOrderByClause="True|False"  
    AutoGenerateWhereClause="True|False"  
    AutoPage="True|False"  
    AutoSort="True|False"  
    ContextTypeName="string"  
    EnableDelete="True|False"  
    EnableInsert="True|False"  
    EnableTheming="True|False"  
    EnableUpdate="True|False"  
    EnableViewState="True|False"  
    GroupBy="string"  
    ID="string"  
    OnContextCreated="ContextCreated event handler"  
    OnContextCreating="ContextCreating event handler"  
    OnContextDisposing="ContextDisposing event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    OrderBy="string"  
    runat="server"  
    Select="string"  
    SkinID="string"  
    StoreOriginalValuesInViewState="True|False"  
    TableName="string"  
    Visible="True|False"  
    Where="string"  
>  
        <GroupByParameters />  
        <InsertParameters />  
        <OrderByParameters />  
        <SelectParameters />  
        <WhereParameters />  
</asp:LinqDataSource>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-184">下面的示例演示<xref:System.Web.UI.WebControls.LinqDataSource>从一个名为的实体类中检索数据的控件`Products`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-184">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that retrieves data from an entity class named `Products`.</span></span> <span data-ttu-id="b93c5-185">实体类可通过使用生成[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]或 SqlMetal.exe 实用程序。</span><span class="sxs-lookup"><span data-stu-id="b93c5-185">The entity class could have been generated by using the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)] or the SqlMetal.exe utility.</span></span> <span data-ttu-id="b93c5-186"><xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性设置为返回中具有值的记录`Price`属性大于 50。</span><span class="sxs-lookup"><span data-stu-id="b93c5-186">The <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is set to return only records that have a value in the `Price` property greater than 50.</span></span> <span data-ttu-id="b93c5-187">一个<xref:System.Web.UI.WebControls.GridView>控件绑定到<xref:System.Web.UI.WebControls.LinqDataSource>控件来显示数据。</span><span class="sxs-lookup"><span data-stu-id="b93c5-187">A <xref:System.Web.UI.WebControls.GridView> control is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control to display the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default5.aspx#5)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default5.aspx#5)]  
  
 <span data-ttu-id="b93c5-188">下面的示例演示<xref:System.Web.UI.WebControls.LinqDataSource>控件，使用户能够更新、 删除和数据源中插入记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-188">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that enables users to update, delete, and insert records in the data source.</span></span> <span data-ttu-id="b93c5-189">一个<xref:System.Web.UI.WebControls.DetailsView>控件绑定到<xref:System.Web.UI.WebControls.LinqDataSource>控件，从而使用户能够查看和修改数据。</span><span class="sxs-lookup"><span data-stu-id="b93c5-189">A <xref:System.Web.UI.WebControls.DetailsView> control is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control and enables users to see and modify the data.</span></span> <span data-ttu-id="b93c5-190">请注意，任何 SQL 命令才能选择、 更新、 删除或插入记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-190">Notice that no SQL commands are required in order to select, update, delete, or insert the records.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 <span data-ttu-id="b93c5-191">下面的示例演示的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>设置的数据对象的事件基于在网页中的值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-191">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event that sets the data object based on a value in the Web page.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default3.aspx.cs#3)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default3.aspx.vb#3)]  
  
 <span data-ttu-id="b93c5-192">下面的示例演示<xref:System.Web.UI.WebControls.LinqDataSource>控制，它是由两个列配置为组。</span><span class="sxs-lookup"><span data-stu-id="b93c5-192">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that is configured to group by two columns.</span></span> <span data-ttu-id="b93c5-193">`Key`属性引用具有两个属性的对象`ProductCategory`和`Color`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-193">The `Key` property references an object that has two properties, `ProductCategory` and `Color`.</span></span> <span data-ttu-id="b93c5-194">所表示的对象`It`是已重命名 （别名） `Products`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-194">The object represented by `It` is renamed (aliased) to `Products`.</span></span> <span data-ttu-id="b93c5-195">重命名`Products`对象包含分组中各记录的集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-195">The renamed `Products` object contains a collection of the individual records in a grouping.</span></span> <span data-ttu-id="b93c5-196">每个实例将包含中的所有列`Products`表。</span><span class="sxs-lookup"><span data-stu-id="b93c5-196">Each instance will contain all the columns from the `Products` table.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#1)]  
  
 <span data-ttu-id="b93c5-197">下面的示例演示两个<xref:System.Web.UI.WebControls.ListView>显示从数据的控件<xref:System.Web.UI.WebControls.LinqDataSource>上一示例中的控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-197">The following example shows two <xref:System.Web.UI.WebControls.ListView> controls that display the data from the <xref:System.Web.UI.WebControls.LinqDataSource> control in the previous example.</span></span> <span data-ttu-id="b93c5-198">一个<xref:System.Web.UI.WebControls.ListView>控件显示分组的数据，以及其他<xref:System.Web.UI.WebControls.ListView>控件显示各个属于该组的产品名称。</span><span class="sxs-lookup"><span data-stu-id="b93c5-198">One <xref:System.Web.UI.WebControls.ListView> control displays the grouped data, and the other <xref:System.Web.UI.WebControls.ListView> control displays the individual names of products that belong to that group.</span></span> <span data-ttu-id="b93c5-199">嵌套的数据绑定控件<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性设置为`Products`，这是别名`It`对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-199">The nested data-bound control's <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property is set to `Products`, which is the alias for the `It` object.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-200">初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-200">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateOrderByClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateOrderByClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateOrderByClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateOrderByClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateOrderByClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateOrderByClause : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-201">获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件是否根据 <see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /> 集合中的值动态创建 Order By 子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-201">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control dynamically creates an Order By clause based on values in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-202">
            <see langword="true" /> 如果<see cref="T:System.Web.UI.WebControls.LinqDataSource" />控件创建 Order By 子句; 否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-202">
              <see langword="true" /> if the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control creates the Order By clause; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b93c5-203">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-203">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-204">当您将设置<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>属性设置为`true`，则<xref:System.Web.UI.WebControls.LinqDataSource>控件动态创建 Order By 子句中的值为基础的<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-204">When you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates an Order By clause that is based on the values in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection.</span></span> <span data-ttu-id="b93c5-205"><xref:System.Web.UI.WebControls.LinqDataSource>控制对数据进行排序的第一个参数和每个其他参数的数据，此外进行排序。</span><span class="sxs-lookup"><span data-stu-id="b93c5-205">The <xref:System.Web.UI.WebControls.LinqDataSource> control sorts the data by the first parameter and then additionally sorts the data for each additional parameter.</span></span> <span data-ttu-id="b93c5-206">包含参数`null`或 Order By 子句中不包含空值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-206">Parameters that contain `null` or an empty value are not included in the Order By clause.</span></span>  
  
 <span data-ttu-id="b93c5-207">未设置<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性时<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>设置为`true`，因为分析器可动态创建 Order By 子句。</span><span class="sxs-lookup"><span data-stu-id="b93c5-207">You do not set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property when the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> is set to `true`, because the parser dynamically creates the Order By clause.</span></span> <span data-ttu-id="b93c5-208"><xref:System.Web.UI.WebControls.LinqDataSource>控件将引发异常，如果<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>设置为`true`和<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性分配值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-208">The <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> is set to `true` and the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property is assigned values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-209">下面的示例演示<xref:System.Web.UI.WebControls.LinqDataSource>控件，其<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-209">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> set to `true`.</span></span> <span data-ttu-id="b93c5-210">参数包含在<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>基于属性的数据命名的用户进行排序的集合选择从<xref:System.Web.UI.WebControls.DropDownList>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-210">A parameter is included in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection that orders the data based on the property name that a user selects from a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default8.aspx#8)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default8.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateWhereClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateWhereClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateWhereClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateWhereClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateWhereClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateWhereClause : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.AutoGenerateWhereClause</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-211">获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件是否基于 <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> 集合中定义的值来动态创建 Where 子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-211">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control dynamically creates a Where clause based on values defined in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-212">如果 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件将创建 Where 子句，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-212">
              <see langword="true" /> if the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control will create the Where clause; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b93c5-213">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-213">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-214">当您将设置<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>属性设置为`true`，则<xref:System.Web.UI.WebControls.LinqDataSource>控件动态创建 Where 子句中的参数从<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-214">When you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span> <span data-ttu-id="b93c5-215">将添加到每个参数<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合必须具有其<xref:System.Web.UI.WebControls.Parameter.Name%2A>属性设置为匹配正被查询的数据对象中的属性的值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-215">Each parameter that you add to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection must have its <xref:System.Web.UI.WebControls.Parameter.Name%2A> property set to a value that matches a property in the data object that is being queried.</span></span> <span data-ttu-id="b93c5-216">自动生成 Where 子句将检查是否在指定的值<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合与数据对象中的匹配属性的值相等。</span><span class="sxs-lookup"><span data-stu-id="b93c5-216">The automatically generated Where clause will check whether the value specified in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection equals the value of the matching property in the data object.</span></span> <span data-ttu-id="b93c5-217">如果提供多个参数，则这些参数将与逻辑`AND`操作。</span><span class="sxs-lookup"><span data-stu-id="b93c5-217">If you provide more than one parameter, the parameters are linked with a logical `AND` operation.</span></span> <span data-ttu-id="b93c5-218">包含参数`null`或空值不包含在 Where 子句。</span><span class="sxs-lookup"><span data-stu-id="b93c5-218">Parameters that contain `null` or an empty value are not included in the Where clause.</span></span>  
  
 <span data-ttu-id="b93c5-219">自动生成<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>子句可以仅测试相等性和链接参数只能与`AND`操作。</span><span class="sxs-lookup"><span data-stu-id="b93c5-219">The automatically generated <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause can test only for equality and can link parameters only with the `AND` operation.</span></span> <span data-ttu-id="b93c5-220">未设置<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>属性设置为`true`如果您需要添加一个条件，不会测试是否相等或如果有相关联的参数`OR`操作。</span><span class="sxs-lookup"><span data-stu-id="b93c5-220">Do not set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` if you have to add a condition that does not test for equality or if you have to relate parameters with the `OR` operation.</span></span> <span data-ttu-id="b93c5-221">可以通过设置完成这些任务<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>属性设置为`false`并添加中的占位符<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性中每个参数<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-221">You can accomplish these tasks by setting the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `false` and adding placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for each parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span> <span data-ttu-id="b93c5-222">在<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性，与每个占位符名称的前面加上 @ 符号。</span><span class="sxs-lookup"><span data-stu-id="b93c5-222">In the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property, preface each placeholder name with the @ symbol.</span></span>  
  
 <span data-ttu-id="b93c5-223">未设置<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性时<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>属性是`true`，因为分析器可动态创建 Where 子句。</span><span class="sxs-lookup"><span data-stu-id="b93c5-223">You do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property when the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, because the parser dynamically creates the Where clause.</span></span> <span data-ttu-id="b93c5-224"><xref:System.Web.UI.WebControls.LinqDataSource>控件将引发异常，如果<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>属性是`true`和<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性分配值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-224">The <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true` and the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is assigned values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-225">下面的示例演示<xref:System.Web.UI.WebControls.LinqDataSource>控件，其<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-225">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> set to `true`.</span></span> <span data-ttu-id="b93c5-226">一个<xref:System.Web.UI.WebControls.GridView>控件绑定到<xref:System.Web.UI.WebControls.LinqDataSource>控件来显示从查询返回的数据。</span><span class="sxs-lookup"><span data-stu-id="b93c5-226">A <xref:System.Web.UI.WebControls.GridView> control is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control to display the data that is returned from the query.</span></span> <span data-ttu-id="b93c5-227">一个<xref:System.Web.UI.WebControls.DropDownList>控件是，它是包含三个值填充。</span><span class="sxs-lookup"><span data-stu-id="b93c5-227">A <xref:System.Web.UI.WebControls.DropDownList> control is included that is populated with three values.</span></span> <span data-ttu-id="b93c5-228">参数包含在<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合中的具有名称设置为`Category,`与数据对象的属性之一匹配。</span><span class="sxs-lookup"><span data-stu-id="b93c5-228">A parameter is included in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection with the name set to `Category,` which matches one of the properties of the data object.</span></span> <span data-ttu-id="b93c5-229">其<xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>属性设置为的 ID<xref:System.Web.UI.WebControls.DropDownList>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-229">Its <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> property is set to the ID of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="b93c5-230"><xref:System.Web.UI.WebControls.LinqDataSource>控件将自动创建<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性设置为筛选器记录基于用户从选择的值<xref:System.Web.UI.WebControls.DropDownList>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-230">The <xref:System.Web.UI.WebControls.LinqDataSource> control automatically creates the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to filter records based on the value that the user selects from the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="b93c5-231">查询返回的记录其`Category`属性与用户从所选的值匹配<xref:System.Web.UI.WebControls.DropDownList>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-231">The query returns the records whose `Category` property matches the value that the user has selected from the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default7.aspx#7)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default7.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPage">
      <MemberSignature Language="C#" Value="public bool AutoPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoPage : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-232">获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件是否支持在运行时对数据的各部分进行导航。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-232">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports navigation through sections of the data at run time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-233">如果用户可以对数据进行分页，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-233">
              <see langword="true" /> if the user can page through the data; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b93c5-234">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-234">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-235">设置<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>属性设置为`true`若要在中启用分页<xref:System.Web.UI.WebControls.LinqDataSource>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-235">Set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property to `true` to enable paging in the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="b93c5-236">若要使用户能够对数据进行分页，连接提供用于对分页的接口的数据绑定控件<xref:System.Web.UI.WebControls.LinqDataSource>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-236">To enable the user to page through the data, connect a data-bound control that provides the interface for paging to the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="b93c5-237">当<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>属性设置为`true`，则<xref:System.Web.UI.WebControls.LinqDataSource>控件所检索仅足够的数据绑定控件中的一页的记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-237">When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves only enough records for one page in the data-bound control.</span></span> <span data-ttu-id="b93c5-238">它使用<xref:System.Linq.Enumerable.Skip%2A>和<xref:System.Linq.Enumerable.Take%2A>方法来检索当前页的记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-238">It uses the <xref:System.Linq.Enumerable.Skip%2A> and <xref:System.Linq.Enumerable.Take%2A> methods to retrieve the records for the current page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-239">下面的示例演示<xref:System.Web.UI.WebControls.LinqDataSource>控件，其<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>属性设置为`true`和一个<xref:System.Web.UI.WebControls.GridView>绑定到控件<xref:System.Web.UI.WebControls.LinqDataSource>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-239">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property set to `true` and a <xref:System.Web.UI.WebControls.GridView> control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="b93c5-240"><xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>的属性<xref:System.Web.UI.WebControls.GridView>控件设置为`true`提供界面，允许用户数据进行分页。</span><span class="sxs-lookup"><span data-stu-id="b93c5-240">The <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property of the <xref:System.Web.UI.WebControls.GridView> control is set to `true` to provide the interface that lets users page through the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSort">
      <MemberSignature Language="C#" Value="public bool AutoSort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoSort" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSort { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSort : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-241">获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件是否支持在运行时对数据进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-241">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports sorting the data at run time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-242">如果用户可以对数据进行排序，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-242">
              <see langword="true" /> if the user can sort the data; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b93c5-243">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-243">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-244"><xref:System.Web.UI.WebControls.LinqDataSource>控件支持两种方法用于对数据进行排序。</span><span class="sxs-lookup"><span data-stu-id="b93c5-244">The <xref:System.Web.UI.WebControls.LinqDataSource> control supports two approaches for sorting data.</span></span> <span data-ttu-id="b93c5-245">可以使用<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>属性来启用运行时排序，或者设置<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性来定义在设计时的排序。</span><span class="sxs-lookup"><span data-stu-id="b93c5-245">You can use the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to enable run-time sorting or you can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to define the sorting at design time.</span></span>  
  
 <span data-ttu-id="b93c5-246">设置<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>属性设置为`true`中启用排序<xref:System.Web.UI.WebControls.LinqDataSource>基于从数据绑定控件的排序表达式的控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-246">Set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to `true` to enable sorting in a <xref:System.Web.UI.WebControls.LinqDataSource> control that is based on the sort expression from a data-bound control.</span></span> <span data-ttu-id="b93c5-247">数据绑定控件提供的接口，使用户能够在运行时选择要用于排序的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-247">The data-bound control provides the interface to enable the user to select at run time which property to use for sorting.</span></span>  
  
 <span data-ttu-id="b93c5-248">你可以以编程方式设置通过设置返回数据的顺序<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性设置为属性或用于排序的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-248">You can programmatically set the order in which data is returned by setting the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to the property or properties used for sorting.</span></span> <span data-ttu-id="b93c5-249">当<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性设置为一个属性和<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>属性是`true`，从数据绑定控件的排序表达式中的表达式之后应用<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-249">When the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property is set to a property and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is `true`, the sort expression from the data-bound control is applied after the expression in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="b93c5-250">因此，这将确定数据的最终排序。</span><span class="sxs-lookup"><span data-stu-id="b93c5-250">Therefore, this determines the final sorting of the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-251">下面的示例演示<xref:System.Web.UI.WebControls.LinqDataSource>控件，其<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>属性设置为`true`和一个<xref:System.Web.UI.WebControls.GridView>绑定到控件<xref:System.Web.UI.WebControls.LinqDataSource>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-251">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property set to `true` and a <xref:System.Web.UI.WebControls.GridView> control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="b93c5-252"><xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>的属性<xref:System.Web.UI.WebControls.GridView>控件设置为`true`提供界面，允许用户对数据进行排序。</span><span class="sxs-lookup"><span data-stu-id="b93c5-252">The <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> property of the <xref:System.Web.UI.WebControls.GridView> control is set to `true` to provide the interface that lets users sort the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; ContextCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; ContextCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreated As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ ContextCreated;" />
      <MemberSignature Language="F#" Value="member this.ContextCreated : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.ContextCreated : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-253">在创建上下文类型对象实例后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-253">Occurs after an instance of the context type object is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-254">处理<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>事件，以便检查的上下文类型对象或检查时，创建对象时引发的异常。</span><span class="sxs-lookup"><span data-stu-id="b93c5-254">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> event to examine the context type object or examine exceptions that are raised while the object is being created.</span></span> <span data-ttu-id="b93c5-255">检索上下文类型对象从<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>属性的<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>与此事件相关联的对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-255">You retrieve the context type object from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is associated with this event.</span></span> <span data-ttu-id="b93c5-256">检索的数据操作过程中引发的异常<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-256">You retrieve the exception that was raised during the data operation from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property.</span></span>  
  
 <span data-ttu-id="b93c5-257">上下文类型对象选择、 更新、 插入和删除操作过程中创建，并且在整个请求重复使用。</span><span class="sxs-lookup"><span data-stu-id="b93c5-257">The context type object is created during select, update, insert, and delete operations and is reused throughout the request.</span></span>  
  
 <span data-ttu-id="b93c5-258">还有一次时不引发该事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-258">There is one time when the event is not raised.</span></span> <span data-ttu-id="b93c5-259">这是以编程方式设置<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>属性设置为对象期间<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-259">This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object during the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span> <span data-ttu-id="b93c5-260">附加条件是，原始值不需要存储在视图状态或中的对象<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>属性实现<xref:System.Data.Linq.ITable>接口。</span><span class="sxs-lookup"><span data-stu-id="b93c5-260">An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; ContextCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; ContextCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreating As EventHandler(Of LinqDataSourceContextEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceContextEventArgs ^&gt; ^ ContextCreating;" />
      <MemberSignature Language="F#" Value="member this.ContextCreating : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; " Usage="member this.ContextCreating : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-261">在创建上下文类型对象实例前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-261">Occurs before an instance of the context type object is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-262">默认情况下<xref:System.Web.UI.WebControls.LinqDataSource>控件创建中指定类型的实例<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-262">By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control creates an instance of the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property.</span></span> <span data-ttu-id="b93c5-263"><xref:System.Web.UI.WebControls.LinqDataSource>控件调用要创建的对象的实例的数据上下文对象的默认构造函数。</span><span class="sxs-lookup"><span data-stu-id="b93c5-263">The <xref:System.Web.UI.WebControls.LinqDataSource> control calls the default constructor of the data context object to create an instance of the object.</span></span> <span data-ttu-id="b93c5-264">原因可能是您必须使用非默认构造函数，或者您必须创建不同的对象中指定从<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-264">It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property.</span></span> <span data-ttu-id="b93c5-265">在这种情况下，必须处理<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>事件和手动创建数据上下文对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-265">In that case, you must handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event and manually create the data context object.</span></span>  
  
 <span data-ttu-id="b93c5-266">选择、 更新、 插入和删除操作期间会创建上下文类型对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-266">The context type object is created during select, update, insert, and delete operations.</span></span>  
  
 <span data-ttu-id="b93c5-267">还有一次时不引发该事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-267">There is one time when the event is not raised.</span></span> <span data-ttu-id="b93c5-268">这是以编程方式设置<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>中的事件处理程序的对象的属性<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-268">This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span> <span data-ttu-id="b93c5-269">附加条件是，原始值不需要存储在视图状态或中的对象<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>属性实现<xref:System.Data.Linq.ITable>接口。</span><span class="sxs-lookup"><span data-stu-id="b93c5-269">An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-270">下面的示例演示如何使用期间的非默认构造函数创建的数据上下文对象<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-270">The following example shows how to create the data context object by using a non-default constructor during the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event.</span></span> <span data-ttu-id="b93c5-271">该代码将分配到的对象<xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-271">The code assigns the object to the <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> property.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.ContextCreating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.ContextCreating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextDisposing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; ContextDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; ContextDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextDisposing As EventHandler(Of LinqDataSourceDisposeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceDisposeEventArgs ^&gt; ^ ContextDisposing;" />
      <MemberSignature Language="F#" Value="member this.ContextDisposing : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; " Usage="member this.ContextDisposing : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-272">在释放上下文类型对象前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-272">Occurs before disposing the context type object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-273">您处理<xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing>事件以手动释放对象或执行清理该对象被销毁前的特定于该对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-273">You handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing> event to dispose the object manually, or to perform clean-up that is specific to the object before the object is destroyed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextTypeName">
      <MemberSignature Language="C#" Value="public override string ContextTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContextTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContextTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextTypeName : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.ContextTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-274">获取或设置包含属性（其值包含要检索的数据）的类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-274">Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-275">要从中检索数据的类的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-275">The name of the class to retrieve data from.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-276">当你使用<xref:System.Web.UI.WebControls.LinqDataSource>控件从内存中数据集合或数据库检索数据，则必须指定两个属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-276">When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from either an in-memory data collection or a database, you must specify two properties.</span></span> <span data-ttu-id="b93c5-277">第一个是表示数据源的数据上下文类。</span><span class="sxs-lookup"><span data-stu-id="b93c5-277">The first is a data context class that represents the data source.</span></span> <span data-ttu-id="b93c5-278">第二个是中包含的数据的数据上下文类的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-278">The second is a property in the data context class that contains the data.</span></span> <span data-ttu-id="b93c5-279">您设置<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性设置为数据上下文类的名称设<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性设置为包含数据的数据集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-279">You set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the data context class and you set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the data collection that contains the data.</span></span>  
  
 <span data-ttu-id="b93c5-280">例如，当从数据库检索数据，设置<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性设置为表示数据库的类的名称。</span><span class="sxs-lookup"><span data-stu-id="b93c5-280">For example, when you retrieve data from a database, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that represents the database.</span></span> <span data-ttu-id="b93c5-281">此外设置<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性设置为表示数据库中的表的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-281">Also set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that represents the table in the database.</span></span> <span data-ttu-id="b93c5-282">若要从数据库中生成类，使用[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]或 SqlMetal.exe 实用工具来自动生成这些类。</span><span class="sxs-lookup"><span data-stu-id="b93c5-282">To generate classes from a database, use the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)] or the SqlMetal.exe utility to automatically generate those classes.</span></span>  
  
 <span data-ttu-id="b93c5-283">当从内存中的数据集合 （如数组） 中检索数据时，设置<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性设置为包含数组属性的类的名称。</span><span class="sxs-lookup"><span data-stu-id="b93c5-283">When you retrieve data from an in-memory data collection such as an array, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that contains the array property.</span></span> <span data-ttu-id="b93c5-284">然后设置<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性设置为用于获取数组的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-284">Then set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that gets the array.</span></span>  
  
 <span data-ttu-id="b93c5-285">若要启用自动更新、 插入或删除操作通过<xref:System.Web.UI.WebControls.LinqDataSource>控制分配给的类<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性必须派生自<xref:System.Data.Linq.DataContext>。</span><span class="sxs-lookup"><span data-stu-id="b93c5-285">To enable automatic update, insert, or delete operations through the <xref:System.Web.UI.WebControls.LinqDataSource> control, the class assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>.</span></span> <span data-ttu-id="b93c5-286">此外，此属性分配给<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性必须派生自<xref:System.Data.Linq.Table%601>。</span><span class="sxs-lookup"><span data-stu-id="b93c5-286">In addition, the property assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.</span></span> <span data-ttu-id="b93c5-287">如果您不需要以启用自动更新、 插入，或者删除操作，则可以分配的任何类型的类名称<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-287">If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property.</span></span>  
  
 <span data-ttu-id="b93c5-288">有关如何从一个类的实例中选择数据的信息，请参阅<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-288">For information about how to select data from an instance of a class, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-289">下面的示例演示如何设置<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性设置为包含一个字符串数组的类。</span><span class="sxs-lookup"><span data-stu-id="b93c5-289">The following example shows how to set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to a class that contains an array of strings.</span></span> <span data-ttu-id="b93c5-290">它还演示如何将属性设置为一个类 (由生成[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]) 表示的数据库。</span><span class="sxs-lookup"><span data-stu-id="b93c5-290">It also shows how to set the property to a class (generated by the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]) that represents a database.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/Default.aspx#2)]  
  
 <span data-ttu-id="b93c5-291">名为的类`ExampleDataContext`，表示数据库表不显示在此示例中。</span><span class="sxs-lookup"><span data-stu-id="b93c5-291">The class named `ExampleDataContext` that represents the database table is not shown in this example.</span></span> <span data-ttu-id="b93c5-292">对于此示例正常工作，必须创建此类，通过添加一个命名的 Example.dbml 和将表名为到电影的 LINQ To SQL 类[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="b93c5-292">For this example to work, you must create this class by adding a LINQ To SQL class named Example.dbml and dragging a table named Movie onto the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)].</span></span> <span data-ttu-id="b93c5-293">名为的类`ExampleDataContext`一个属性名为`Movies`生成。</span><span class="sxs-lookup"><span data-stu-id="b93c5-293">A class named `ExampleDataContext` with a property named `Movies` is generated.</span></span>  
  
 <span data-ttu-id="b93c5-294">下面的示例演示名为的类`MovieLibrary`中引用<xref:System.Web.UI.WebControls.LinqDataSource>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-294">The following example shows the class named `MovieLibrary` that is referenced in the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/App_Code/MovieLibrary.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/App_Code/MovieLibrary.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryableView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.QueryableDataSourceView CreateQueryableView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.QueryableDataSourceView CreateQueryableView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.CreateQueryableView" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateQueryableView () As QueryableDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::QueryableDataSourceView ^ CreateQueryableView();" />
      <MemberSignature Language="F#" Value="override this.CreateQueryableView : unit -&gt; System.Web.UI.WebControls.QueryableDataSourceView" Usage="linqDataSource.CreateQueryableView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.QueryableDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-295">返回可查询的视图。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-295">Returns a queryable view.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b93c5-296">可查询的视图。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-296">A queryable view.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.LinqDataSourceView CreateView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.LinqDataSourceView CreateView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.CreateView" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateView () As LinqDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::LinqDataSourceView ^ CreateView();" />
      <MemberSignature Language="F#" Value="abstract member CreateView : unit -&gt; System.Web.UI.WebControls.LinqDataSourceView&#xA;override this.CreateView : unit -&gt; System.Web.UI.WebControls.LinqDataSourceView" Usage="linqDataSource.CreateView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-297">创建与此控件相关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-297">Creates a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> class that is associated with this control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b93c5-298">充当数据绑定控件的接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-298">An object that acts as the interface for data-bound controls.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-299">若要提供自定义视图，可以重写此方法在派生类中。</span><span class="sxs-lookup"><span data-stu-id="b93c5-299">To provide a custom view, you can override this method in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="linqDataSource.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="b93c5-300">要删除的记录的行键值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-300">The row key values for the records to be deleted.</span>
          </span>
        </param>
        <param name="oldValues">
          <span data-ttu-id="b93c5-301">为检测数据冲突而计算的行值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-301">The row values that are evaluated to detect data conflicts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b93c5-302">执行删除操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-302">Performs a delete operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b93c5-303">受删除操作影响的记录数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-303">The number of records affected by the delete operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-304">通常情况下，不需要调用<xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>从您的代码的方法。</span><span class="sxs-lookup"><span data-stu-id="b93c5-304">Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method from your code.</span></span> <span data-ttu-id="b93c5-305">当你使用<xref:System.Web.UI.WebControls.LinqDataSource>与数据绑定控件，数据绑定控件的控件将自动调用<xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>方法时用户采取操作以删除一条记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-305">When you use a <xref:System.Web.UI.WebControls.LinqDataSource> control with a data-bound control, the data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when the user takes action to delete a record.</span></span> <span data-ttu-id="b93c5-306">显式调用<xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>方法时您想要创建您自己的进程用于删除数据。</span><span class="sxs-lookup"><span data-stu-id="b93c5-306">You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to create your own process for deleting data.</span></span> <span data-ttu-id="b93c5-307">例如，可以调用<xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>方法，当你想要删除的记录时根据之外的数据绑定控件的事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-307">For example, you can call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to delete a record based on an event outside the data-bound control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Deleted : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-308">完成删除操作后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-308">Occurs when a delete operation has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-309">处理<xref:System.Web.UI.WebControls.LinqDataSource.Deleted>事件来捕获删除操作，从任何异常，也可后在操作完成后检查输出参数。</span><span class="sxs-lookup"><span data-stu-id="b93c5-309">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished.</span></span> <span data-ttu-id="b93c5-310">可以检索输出参数从<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>传递给事件处理程序对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-310">You can retrieve the output parameters from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-311">
            <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 类不使用此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-311">This property is not used by the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-312">参数的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-312">A collection of parameters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As EventHandler(Of LinqDataSourceDeleteEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceDeleteEventArgs ^&gt; ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; " Usage="member this.Deleting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-313">执行删除操作前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-313">Occurs before a delete operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-314">处理<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件，以便验证要删除，以检查数据类，以更改前删除操作，值还是取消删除操作中的数据验证错误的对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-314">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation.</span></span> <span data-ttu-id="b93c5-315"><xref:System.Web.UI.WebControls.LinqDataSource>控制将传递<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>向事件处理程序对象<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-315">The <xref:System.Web.UI.WebControls.LinqDataSource> control passes a <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object to event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span> <span data-ttu-id="b93c5-316"><xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>对象包含的数据将被删除并使您可以取消删除操作。</span><span class="sxs-lookup"><span data-stu-id="b93c5-316">The <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains the data that will be deleted and enables you to cancel the delete operation.</span></span> <span data-ttu-id="b93c5-317">如果数据类将引发<xref:System.Web.UI.WebControls.LinqDataSourceValidationException>异常，<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>对象包含在该异常<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-317">If the data class throws a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> exception, the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains that exception in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property.</span></span>  
  
 <span data-ttu-id="b93c5-318">如果事件处理程序中引发异常<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件，必须处理该事件处理程序中的异常。</span><span class="sxs-lookup"><span data-stu-id="b93c5-318">If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event, you must handle the exception in that event handler.</span></span> <span data-ttu-id="b93c5-319">此异常不会传递到的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Deleted>事件 (通过<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>属性的<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>对象)。</span><span class="sxs-lookup"><span data-stu-id="b93c5-319">The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object).</span></span> <span data-ttu-id="b93c5-320"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>属性包含后引发的异常<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-320">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-321">下面的示例演示的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-321">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span> <span data-ttu-id="b93c5-322">该代码取消删除操作中的属性上基于<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>属性和值从 Web 页。</span><span class="sxs-lookup"><span data-stu-id="b93c5-322">The code cancels the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page.</span></span> <span data-ttu-id="b93c5-323">在示例中，当`OnSale`属性设置为`true`，则用户必须选择<xref:System.Web.UI.WebControls.CheckBox>控件，以确认应删除的记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-323">In the example, when the `OnSale` property is set to `true`, the user must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that a record should be deleted.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDelete">
      <MemberSignature Language="C#" Value="public bool EnableDelete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDelete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDelete : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableDelete" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableDelete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-324">获取或设置一个值，该值指示是否可以通过 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件删除数据记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-324">Gets or sets a value that indicates whether data records can be deleted through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-325">如果启用了自动删除操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-325">
              <see langword="true" /> if automatic delete operations are enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b93c5-326">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-326">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-327">设置<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>属性设置为`true`当你想要使用户能够删除数据记录通过<xref:System.Web.UI.WebControls.LinqDataSource>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-327">Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> property to `true` when you want to enable users to delete a data record through the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="b93c5-328">当<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>是`true`，则<xref:System.Web.UI.WebControls.LinqDataSource>控件使用 LINQ to SQL 来自动创建用于删除数据的命令。</span><span class="sxs-lookup"><span data-stu-id="b93c5-328">When <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to delete the data.</span></span> <span data-ttu-id="b93c5-329">必须包含一个界面，可让用户选择的记录，若要删除，如<xref:System.Web.UI.WebControls.DetailsView>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-329">You must include an interface that lets users select a record to delete, such as a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>  
  
 <span data-ttu-id="b93c5-330"><xref:System.Web.UI.WebControls.LinqDataSource>控件不支持自动删除操作时<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性或<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="b93c5-330">The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic delete operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set.</span></span> <span data-ttu-id="b93c5-331">在这种情况下，<xref:System.Web.UI.WebControls.LinqDataSource>控件将引发异常，如果尝试删除操作。</span><span class="sxs-lookup"><span data-stu-id="b93c5-331">In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if a delete operation is tried.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-332">下面的示例演示<xref:System.Web.UI.WebControls.LinqDataSource>具有控件<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-332">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> set to `true`.</span></span> <span data-ttu-id="b93c5-333">一个<xref:System.Web.UI.WebControls.DetailsView>控件显示的数据并创建允许用户删除数据记录的按钮。</span><span class="sxs-lookup"><span data-stu-id="b93c5-333">A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and creates a button that lets users delete a data record.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableInsert">
      <MemberSignature Language="C#" Value="public bool EnableInsert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableInsert { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableInsert : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableInsert" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableInsert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-334">获取或设置一个值，该值指示是否可以通过 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件插入数据记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-334">Gets or sets a value that indicates whether data records can be inserted through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-335">如果启用了自动插入操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-335">
              <see langword="true" /> if automatic insert operations are enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b93c5-336">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-336">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-337">设置<xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>属性设置为`true`当你想要使用户能够插入新数据记录通过<xref:System.Web.UI.WebControls.LinqDataSource>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-337">Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> property to `true` when you want to enable users to insert a new data record through the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="b93c5-338">当<xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>是`true`，则<xref:System.Web.UI.WebControls.LinqDataSource>控件使用 LINQ to SQL 来自动创建用于插入数据的命令。</span><span class="sxs-lookup"><span data-stu-id="b93c5-338">When <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to insert the data.</span></span> <span data-ttu-id="b93c5-339">必须包含一个界面，可让用户插入新记录，例如<xref:System.Web.UI.WebControls.DetailsView>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-339">You must include an interface that lets users insert a new record, such as a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>  
  
 <span data-ttu-id="b93c5-340"><xref:System.Web.UI.WebControls.LinqDataSource>控件不支持自动插入操作时<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性或<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="b93c5-340">The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic insert operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set.</span></span> <span data-ttu-id="b93c5-341">在这种情况下，<xref:System.Web.UI.WebControls.LinqDataSource>控件将引发异常，如果尝试插入操作。</span><span class="sxs-lookup"><span data-stu-id="b93c5-341">In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an insert operation is tried.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-342">下面的示例演示<xref:System.Web.UI.WebControls.LinqDataSource>具有控件<xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-342">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> set to `true`.</span></span> <span data-ttu-id="b93c5-343">一个<xref:System.Web.UI.WebControls.DetailsView>控件显示的数据并显示一个按钮，切换要插入模式下，用户可以通过创建并保存新记录的控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-343">A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and displays a button that switches the control to insert mode where users can create and save a new record.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableObjectTracking">
      <MemberSignature Language="C#" Value="public bool EnableObjectTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableObjectTracking" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableObjectTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableObjectTracking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableObjectTracking : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-344">获取或设置一个值，该值指示是否跟踪对数据上下文对象所做的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-344">Gets or sets the value that indicates whether changes to the data context object are tracked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-345">如果跟踪数据上下文对象的更改，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-345">
              <see langword="true" /> if the data context object is tracked for changes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b93c5-346">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-346">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-347"><xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A>从 LINQ 到 SQL 数据上下文对象中选择数据时，才使用属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-347">The <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> property is only used when selecting data from a LINQ To SQL data context object.</span></span>  
  
 <span data-ttu-id="b93c5-348">当你与只读数据交互时，设置<xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A>属性设置为`false`提高性能，因为数据不缓存以确定是否已更改。</span><span class="sxs-lookup"><span data-stu-id="b93c5-348">When you are interacting with read-only data, setting the <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> property to `false` improves performance because the data is not cached to determine if it has changed.</span></span> <span data-ttu-id="b93c5-349">但是，它还将禁用延迟的执行查询。</span><span class="sxs-lookup"><span data-stu-id="b93c5-349">However, it also disables deferred query execution.</span></span> <span data-ttu-id="b93c5-350">此属性必须设置为`true`如果想要使用延迟的执行查询。</span><span class="sxs-lookup"><span data-stu-id="b93c5-350">This property must be set to `true` if you want to use deferred query execution.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="EnableUpdate">
      <MemberSignature Language="C#" Value="public bool EnableUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableUpdate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableUpdate : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableUpdate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableUpdate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-351">获取或设置一个值，该值指示是否可以通过 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件更新数据记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-351">Gets or sets a value that indicates whether data records can be updated through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-352">如果启用了自动更新操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-352">
              <see langword="true" /> if automatic update operations are enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b93c5-353">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-353">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-354">设置<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>属性设置为`true`当你想要使用户能够通过使用更新的数据记录<xref:System.Web.UI.WebControls.LinqDataSource>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-354">Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> property to `true` when you want to enable users to update a data record by using the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="b93c5-355">当<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>是`true`，则<xref:System.Web.UI.WebControls.LinqDataSource>控件使用 LINQ to SQL 会自动创建的命令更新的数据。</span><span class="sxs-lookup"><span data-stu-id="b93c5-355">When <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to update the data.</span></span> <span data-ttu-id="b93c5-356">必须包含一个界面，可让用户更新一个记录，例如<xref:System.Web.UI.WebControls.DetailsView>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-356">You must include an interface that lets users update a record, such as a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>  
  
 <span data-ttu-id="b93c5-357"><xref:System.Web.UI.WebControls.LinqDataSource>控件不支持自动更新操作时<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性或<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="b93c5-357">The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic update operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set.</span></span> <span data-ttu-id="b93c5-358">在这种情况下，<xref:System.Web.UI.WebControls.LinqDataSource>控件将引发异常，如果尝试更新操作。</span><span class="sxs-lookup"><span data-stu-id="b93c5-358">In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an update operation is tried.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-359">下面的示例演示<xref:System.Web.UI.WebControls.LinqDataSource>具有控件<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-359">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> set to `true`.</span></span> <span data-ttu-id="b93c5-360">一个<xref:System.Web.UI.WebControls.DetailsView>控件显示的数据并创建一个按钮，则允许用户更新数据记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-360">A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and creates a button that lets users update a data record.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="linqDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="linqDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public string GroupBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.GroupBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-361">获取或设置一个值，该值指定用于对检索到的数据进行分组的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-361">Gets or sets a value that specifies which properties are used for grouping the retrieved data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-362">一个字符串，用于创建 Group By 子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-362">A string that is used to create the Group By clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-363">您使用<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性来指定哪些属性用于合并具有相同的值的数据记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-363">You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to specify which properties are used for consolidating data records that have the same values.</span></span> <span data-ttu-id="b93c5-364">例如，如果您设置<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性设置为`Name`，在查询中所有具有相同的记录`Name`作为单个合并记录返回属性值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-364">For example, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to `Name`, all the records in the query that have the same `Name` property value are returned as a single consolidated record.</span></span>  
  
 <span data-ttu-id="b93c5-365">可以将分配到多个属性<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性中的所有属性通过`new`函数，并使用逗号分隔每个属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-365">You can assign more than one property to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property by enclosing all the properties in the `new` function and separating each property by using a comma.</span></span> <span data-ttu-id="b93c5-366">例如，若要按属性分组`Name`，然后`Category`，请设置<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性设置为`new(Name, Category)`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-366">For example, to group by the properties `Name` and then `Category`, set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to `new(Name, Category)`.</span></span>  
  
 <span data-ttu-id="b93c5-367">用于分组的值的属性中返回生成的属性名为通过`Key`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-367">The values in the property that are used for grouping are returned through a generated property named `Key`.</span></span> <span data-ttu-id="b93c5-368">您包括`Key`中的属性<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性来检索已分组的值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-368">You include the `Key` property in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve the grouped values.</span></span> <span data-ttu-id="b93c5-369">可以设置`Key`属性设置为使用别名`As`关键字，但您不需要使用别名。</span><span class="sxs-lookup"><span data-stu-id="b93c5-369">You can set the `Key` property to an alias by using the `As` keyword, but you are not required to use an alias.</span></span> <span data-ttu-id="b93c5-370">例如，你可能会设置<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性设置为一个名为属性`Category`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-370">For example, you might set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to a property named `Category`.</span></span> <span data-ttu-id="b93c5-371">可以检索中的合并的值`Category`通过设置属性<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性设置为`new(Key As ProductCategory)`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-371">You can retrieve the consolidated values from the `Category` property by setting the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(Key As ProductCategory)`.</span></span>  
  
 <span data-ttu-id="b93c5-372">可以通过包括访问分组中的单个记录`It`中的属性<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-372">You can access the individual records in a grouping by including the `It` property in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="b93c5-373">`It`属性包含的记录共享中的分组属性的值的集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-373">The `It` property contains a collection of records that share a value in the grouped property.</span></span> <span data-ttu-id="b93c5-374">您可以循环访问`It`属性来检索单个记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-374">You can iterate over the `It` property to retrieve the individual records.</span></span>  
  
 <span data-ttu-id="b93c5-375"><xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性通常用于聚合方法。</span><span class="sxs-lookup"><span data-stu-id="b93c5-375">The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is often used with aggregation methods.</span></span> <span data-ttu-id="b93c5-376">可以使用以下聚合方法：</span><span class="sxs-lookup"><span data-stu-id="b93c5-376">You can use the following aggregate methods:</span></span>  
  
-   `Count()`  
  
-   <span data-ttu-id="b93c5-377">`Average(` *列* `)`</span><span class="sxs-lookup"><span data-stu-id="b93c5-377">`Average(` *column* `)`</span></span>  
  
-   <span data-ttu-id="b93c5-378">`Sum(` *列* `)`</span><span class="sxs-lookup"><span data-stu-id="b93c5-378">`Sum(` *column* `)`</span></span>  
  
-   <span data-ttu-id="b93c5-379">`Max(` *列* `)`</span><span class="sxs-lookup"><span data-stu-id="b93c5-379">`Max(` *column* `)`</span></span>  
  
-   <span data-ttu-id="b93c5-380">`Min(` *列* `)`</span><span class="sxs-lookup"><span data-stu-id="b93c5-380">`Min(` *column* `)`</span></span>  
  
-   <span data-ttu-id="b93c5-381">`Where(` *条件* `)`</span><span class="sxs-lookup"><span data-stu-id="b93c5-381">`Where(` *condition* `)`</span></span>  
  
-   `Any()`  
  
-   <span data-ttu-id="b93c5-382">`All(` *条件* `)`</span><span class="sxs-lookup"><span data-stu-id="b93c5-382">`All(` *condition* `)`</span></span>  
  
 <span data-ttu-id="b93c5-383">有关详细信息，请参阅[NIB: LinqDataSource Web 服务器控件概述](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)并[如何： 组和聚合数据使用 LinqDataSource 控件](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)。</span><span class="sxs-lookup"><span data-stu-id="b93c5-383">For more information, see [NIB: LinqDataSource Web Server Control Overview](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136) and [How to: Group and Aggregate Data Using the LinqDataSource Control](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-384">下面的示例演示<xref:System.Web.UI.WebControls.LinqDataSource>由一个名为属性组返回的数据的控件`Category`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-384">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that groups the returned data by a property named `Category`.</span></span> <span data-ttu-id="b93c5-385">它返回共享的值，并计算分组记录的平均价格。</span><span class="sxs-lookup"><span data-stu-id="b93c5-385">It returns the shared values and calculates the average price for the grouped records.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default3.aspx#3)]  
  
 <span data-ttu-id="b93c5-386">下面的示例演示<xref:System.Web.UI.WebControls.LinqDataSource>控制，它是由两个列配置为组。</span><span class="sxs-lookup"><span data-stu-id="b93c5-386">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that is configured to group by two columns.</span></span> <span data-ttu-id="b93c5-387">`Key`属性引用具有两个属性的对象`ProductCategory`和`Color`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-387">The `Key` property references an object that has two properties, `ProductCategory` and `Color`.</span></span> <span data-ttu-id="b93c5-388">所表示的对象`It`重命名`Products`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-388">The object represented by `It` is renamed `Products`.</span></span> <span data-ttu-id="b93c5-389">重命名`Products`对象包含分组中各记录的集合，每个实例包含从 Products 表的所有列。</span><span class="sxs-lookup"><span data-stu-id="b93c5-389">The renamed `Products` object contains a collection of the individual records in a grouping, and each instance contains all the columns from the Products table.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#1)]  
  
 <span data-ttu-id="b93c5-390">下面的示例演示两个<xref:System.Web.UI.WebControls.ListView>控件用于显示来自数据<xref:System.Web.UI.WebControls.LinqDataSource>上一示例中的控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-390">The following example shows two <xref:System.Web.UI.WebControls.ListView> controls for displaying the data from the <xref:System.Web.UI.WebControls.LinqDataSource> control in the previous example.</span></span> <span data-ttu-id="b93c5-391">一个<xref:System.Web.UI.WebControls.ListView>控件显示分组的数据和其他<xref:System.Web.UI.WebControls.ListView>控件显示各个属于该组的产品名称。</span><span class="sxs-lookup"><span data-stu-id="b93c5-391">One <xref:System.Web.UI.WebControls.ListView> control displays the grouped data and the other <xref:System.Web.UI.WebControls.ListView> control displays the individual names of products that belong to that group.</span></span> <span data-ttu-id="b93c5-392">嵌套的数据绑定控件<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性设置为`Products`，这是别名`It`对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-392">The nested data-bound control's <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property is set to `Products`, which is the alias for the `It` object.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection GroupByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection GroupByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ GroupByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GroupByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.GroupByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-393">获取用于创建 Group By 子句的参数集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-393">Gets the collection of parameters that are used to create the Group By clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-394">用于创建 Group By 子句的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-394">The parameters that are used to create the Group By clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-395"><xref:System.Web.UI.WebControls.LinqDataSource>控件使用中的参数<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>集合在运行时创建 Group By 子句。</span><span class="sxs-lookup"><span data-stu-id="b93c5-395">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to create the Group By clause at run time.</span></span> <span data-ttu-id="b93c5-396">通常不会使用<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>对数据进行分组的集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-396">Typically you will not use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to group data.</span></span> <span data-ttu-id="b93c5-397">相反，可以使用<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-397">Instead, you can use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property.</span></span> <span data-ttu-id="b93c5-398">您使用<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>必须在运行时设置集合仅当 Group By 子句中的值，该值不是属性名称。</span><span class="sxs-lookup"><span data-stu-id="b93c5-398">You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection only when a value in the Group By clause must be set at run time and that value is not a property name.</span></span> <span data-ttu-id="b93c5-399">例如，使用<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>是否基于对数据进行分组的集合`LastName`数据记录中的属性值等于由用户提供的值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-399">For example, use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to group data based on whether the `LastName` property in the data records equals a value provided by the user.</span></span>  
  
 <span data-ttu-id="b93c5-400">如果你想对数据进行分组的属性并且不需要在运行时设置该属性，则可以定义中的分组属性<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-400">If you want to group data by a property and that property does not have to be set at run time, you can define the grouping property in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property.</span></span> <span data-ttu-id="b93c5-401">例如，若要从数据库表中返回按分组`LastName`，请将<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>为"LastName"不带任何参数。</span><span class="sxs-lookup"><span data-stu-id="b93c5-401">For example, to return values from a database table grouped by `LastName`, set <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> to "LastName" without any parameters.</span></span> <span data-ttu-id="b93c5-402">如果你想对动态数据进行分组的属性，创建的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件和自定义<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性根据需要。</span><span class="sxs-lookup"><span data-stu-id="b93c5-402">If you want to dynamically group data by a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property as needed.</span></span>  
  
 <span data-ttu-id="b93c5-403">不能将属性的名称分配中的参数的值作为<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-403">You cannot assign the name of a property as the value for a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection.</span></span> <span data-ttu-id="b93c5-404">您将参数添加到<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>集合时想要添加到条件<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>必须在运行时设置的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-404">You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection when you want to add a condition to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property that must be set at run time.</span></span>  
  
 <span data-ttu-id="b93c5-405">若要设置中的值<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>集合中，为每个参数指定一个名称，然后添加中的占位符<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性中的为该命名参数。</span><span class="sxs-lookup"><span data-stu-id="b93c5-405">To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property for that named parameter.</span></span> <span data-ttu-id="b93c5-406">在 Group By 子句中，前面加上每个参数名称后的加符号 @。</span><span class="sxs-lookup"><span data-stu-id="b93c5-406">In the Group By clause, preface each parameter name with the @ symbol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.Insert : System.Collections.IDictionary -&gt; int" Usage="linqDataSource.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="b93c5-407">要插入到数据源的行值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-407">The row values to be inserted into the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b93c5-408">执行插入操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-408">Performs an insert operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b93c5-409">受插入操作影响的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-409">The number of rows affected by the insert operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-410">通常情况下，不需要调用<xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>从您的代码的方法。</span><span class="sxs-lookup"><span data-stu-id="b93c5-410">Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method from your code.</span></span> <span data-ttu-id="b93c5-411">数据绑定控件将自动调用<xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>方法时用户采取操作以插入新记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-411">The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when the user takes action to insert a new record.</span></span> <span data-ttu-id="b93c5-412">显式调用<xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>方法时您想要创建您自己的进程插入数据。</span><span class="sxs-lookup"><span data-stu-id="b93c5-412">You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when you want to create your own process for inserting data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-413">下面的示例演示如何以编程方式在数据源中插入新记录，用户单击鼠标按钮后。</span><span class="sxs-lookup"><span data-stu-id="b93c5-413">The following example shows how to programmatically insert a new record in the data source after the user clicks a button.</span></span> <span data-ttu-id="b93c5-414">代码将传递<xref:System.Collections.Specialized.ListDictionary>对象，其中包含默认值为<xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b93c5-414">The code passes a <xref:System.Collections.Specialized.ListDictionary> object that contains default values to the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Insert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/cs/Default2.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Insert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/vb/Default2.aspx.vb#1)]  
  
 <span data-ttu-id="b93c5-415">下面的示例显示了针对上一示例的标记。</span><span class="sxs-lookup"><span data-stu-id="b93c5-415">The following example shows the markup for the previous example.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.Insert#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.Insert#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Inserted : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-416">完成插入操作后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-416">Occurs when an insert operation has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-417">处理<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>事件来捕获任何异常从插入操作，也可在插入操作完成后检查的值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-417">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished.</span></span> <span data-ttu-id="b93c5-418">您可以检索通过新的值<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>传递给事件处理程序对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-418">You can retrieve the new values through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.</span></span> <span data-ttu-id="b93c5-419">例如，可以使用<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>要检索 identity 属性生成新的数据记录的数据库的对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-419">For example, you can use the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object to retrieve the identity property generated by a database for a new data record.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-420">下面的示例演示如何创建事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>检查的异常，并检索新记录的标识属性的事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-420">The following example shows how to create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event that checks for exceptions and retrieves the identity property for the new record.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As EventHandler(Of LinqDataSourceInsertEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceInsertEventArgs ^&gt; ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; " Usage="member this.Inserting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-421">执行插入操作前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-421">Occurs before an insert operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-422">处理<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件，以便验证要插入、 检查数据类，以更改在插入操作中前, 一个值或取消插入操作中的数据验证错误的对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-422">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation.</span></span> <span data-ttu-id="b93c5-423"><xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>对象传递给事件处理程序中，此事件包含要插入到数据源中的新对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-423">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object passed to event handlers for this event contains the new object to insert in the data source.</span></span>  
  
 <span data-ttu-id="b93c5-424">如果在插入操作时，发生验证错误<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>对象包含的数据类引发验证异常。</span><span class="sxs-lookup"><span data-stu-id="b93c5-424">If a validation error occurs during the insert operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class.</span></span> <span data-ttu-id="b93c5-425">如果要插入的值与数据类中属性的类型不匹配或未通过自定义验证检查，将发生验证错误。</span><span class="sxs-lookup"><span data-stu-id="b93c5-425">A validation error occurs if a value to be inserted does not match the type of the property in the data class, or if it does not pass a custom validation check.</span></span> <span data-ttu-id="b93c5-426">中的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件，可以检索验证异常并采取相应的措施。</span><span class="sxs-lookup"><span data-stu-id="b93c5-426">In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the validation exceptions and take appropriate action.</span></span>  
  
 <span data-ttu-id="b93c5-427">如果事件处理程序中引发异常<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件，必须处理该事件处理程序中的异常。</span><span class="sxs-lookup"><span data-stu-id="b93c5-427">If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you must handle the exception in that event handler.</span></span> <span data-ttu-id="b93c5-428">此异常不会传递到的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>事件 (通过<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>属性的<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>对象)。</span><span class="sxs-lookup"><span data-stu-id="b93c5-428">The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object).</span></span> <span data-ttu-id="b93c5-429"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>属性包含后引发的异常<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-429">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-430">下面的示例演示的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>修改数据之前插入操作的事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-430">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event that modifies data before the insert operation.</span></span> <span data-ttu-id="b93c5-431">中的对象<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>属性强制转换为一个名为类型`Product`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-431">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="b93c5-432">`DateModified`属性的`Product`对象设置为当前日期和时间。</span><span class="sxs-lookup"><span data-stu-id="b93c5-432">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="b93c5-433">下面的示例演示的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>检索验证异常的事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-433">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event that retrieves validation exceptions.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 <span data-ttu-id="b93c5-434">前面的示例检索验证异常。</span><span class="sxs-lookup"><span data-stu-id="b93c5-434">The previous example retrieves validation exceptions.</span></span> <span data-ttu-id="b93c5-435">如果值与属性类型不匹配，则可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="b93c5-435">An exception might be thrown if a value does not match the type of the property.</span></span> <span data-ttu-id="b93c5-436">它还可能如以下示例中的自定义检查从引发。</span><span class="sxs-lookup"><span data-stu-id="b93c5-436">It might also be thrown from a customized check such as the one in the following example.</span></span> <span data-ttu-id="b93c5-437">`OnAgeChanging`方法检查的数量`Age`属性不是负数。</span><span class="sxs-lookup"><span data-stu-id="b93c5-437">The `OnAgeChanging` method checks that the number for the `Age` property is not negative.</span></span>  
  
```csharp  
partial void  OnAgeChanging(int? value)  
{  
    if (value < 0)  
    {  
        throw new Exception("Age cannot be a negative number.");  
    }  
}  
```  
  
```vb  
Private Sub OnAgeChanging(ByVal value As System.Nullable(Of Integer))  
    If (value < 0) Then  
        Throw New Exception("Age cannot be a negative number.")  
    End If  
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-438">获取在插入操作过程中使用的参数的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-438">Gets the collection of parameters that are used during an insert operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-439">在插入操作过程中使用的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-439">The parameters that are used during an insert operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-440">通常将所需的插入操作的值传递给<xref:System.Web.UI.WebControls.LinqDataSource>由数据绑定控件的控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-440">Typically the values that are needed for an insert operation are passed to the <xref:System.Web.UI.WebControls.LinqDataSource> control by the data-bound control.</span></span> <span data-ttu-id="b93c5-441">插入参数时想要提供默认值或定义是否为空将值转换为指定`null`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-441">You specify insert parameters when you want to provide a default value or define whether to convert empty values to `null`.</span></span> <span data-ttu-id="b93c5-442">无需为每个值将插入，仅对用户不会提供一个值时必须处理的值提供参数。</span><span class="sxs-lookup"><span data-stu-id="b93c5-442">You do not have to provide a parameter for every value that will be inserted, only for the values that must be handled when the user does not provide a value.</span></span>  
  
 <span data-ttu-id="b93c5-443">中提供的值<xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>集合仅用于数据源中定义的但未绑定数据控件中的字段。</span><span class="sxs-lookup"><span data-stu-id="b93c5-443">The values that you provide in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection are used only for fields that are defined in the data source but that are not bound in the data control.</span></span> <span data-ttu-id="b93c5-444">例如，假设数据库表具有列名称、 地址和邮政编码，分别名为但<xref:System.Web.UI.WebControls.ListView>绑定到表的控件只绑定到的名称和地址字段。</span><span class="sxs-lookup"><span data-stu-id="b93c5-444">For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a <xref:System.Web.UI.WebControls.ListView> control that is bound to the table is bound only to the Name and Address fields.</span></span> <span data-ttu-id="b93c5-445">中的值<xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>集合将仅用于邮政编码字段。</span><span class="sxs-lookup"><span data-stu-id="b93c5-445">The values in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used only for the PostalCode field.</span></span> <span data-ttu-id="b93c5-446">它们将不会使用名称和地址字段。</span><span class="sxs-lookup"><span data-stu-id="b93c5-446">They will not be used for the Name and Address field.</span></span> <span data-ttu-id="b93c5-447">即使这些字段中输入任何值，这是如此。</span><span class="sxs-lookup"><span data-stu-id="b93c5-447">This is true even if no value is entered for those fields.</span></span> <span data-ttu-id="b93c5-448">如果数据中的所有字段的数据绑定控件自动生成字段源，从没有值<xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>将使用集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-448">If the data-bound control autogenerates fields for all fields in the data source, no values from the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-449">下面的示例演示<xref:System.Web.UI.WebControls.LinqDataSource>具有一个参数，用于提供默认值在控件<xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-449">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with a parameter that provides a default value in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection.</span></span> <span data-ttu-id="b93c5-450">如果用户未提供的值`Category`属性，由参数提供的默认值保存在数据库中。</span><span class="sxs-lookup"><span data-stu-id="b93c5-450">If the user does not provide a value for the `Category` property, the default value that is provided by the parameter is saved in the database.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default9.aspx#9)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default9.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="linqDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="linqDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="b93c5-451">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-451">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b93c5-452">初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-452">Initializes the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnload : EventArgs -&gt; unit&#xA;override this.OnUnload : EventArgs -&gt; unit" Usage="linqDataSource.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="b93c5-453">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-453">An <see cref="T:System.EventArgs" /> object that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b93c5-454">引发 <see cref="E:System.Web.UI.Control.Unload" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-454">Raises the <see cref="E:System.Web.UI.Control.Unload" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public string OrderBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OrderBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.OrderBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-455">获取或设置一个值，该值指定用于对检索到的数据进行排序的字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-455">Gets or sets a value that specifies which fields are used for ordering the retrieved data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-456">一个字符串，用于创建 Order By 子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-456">A string that is used to create the Order By clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-457">您使用<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性来指定要用于排序的返回数据中的哪些属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-457">You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to specify which properties from the returned data to use for sorting.</span></span> <span data-ttu-id="b93c5-458">数据进行排序的属性必须存在于原始数据源，但它不需要将其纳入<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-458">The property for sorting the data must exist in the original data source, but it does not have to be included in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="b93c5-459">可以添加一个空格和`Ascending`， `ASC`， `Descending`，或`DESC`中的属性<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>以便指定如何返回有序的数据的字符串。</span><span class="sxs-lookup"><span data-stu-id="b93c5-459">You can add a space and `Ascending`, `ASC`, `Descending`, or `DESC` to a property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> string in order to specify how the ordered data is returned.</span></span>  
  
 <span data-ttu-id="b93c5-460">你可以提供多个属性中的<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>通过使用逗号分隔每个属性的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-460">You can provide more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property by separating each property by using a comma.</span></span> <span data-ttu-id="b93c5-461">例如，若要按属性名为`LastName`并`FirstName`，将<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性设置为"LastName，FirstName"。</span><span class="sxs-lookup"><span data-stu-id="b93c5-461">For example, to order by properties named `LastName` and `FirstName`, set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to "LastName, FirstName".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b93c5-462">当你使用<xref:System.Web.UI.WebControls.LinqDataSource>控件，其[!INCLUDE[ss2k](~/includes/ss2k-md.md)]或[!INCLUDE[ssEW](~/includes/ssew-md.md)]并且<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>属性设置为`true`，必须提供中的值<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-462">When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="b93c5-463">默认情况下<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-463">By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`.</span></span> <span data-ttu-id="b93c5-464">如果你将值赋给<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性，您还必须包括所有标识列在查询中返回的属性列表中。</span><span class="sxs-lookup"><span data-stu-id="b93c5-464">If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query.</span></span>  
  
 <span data-ttu-id="b93c5-465">如果<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>属性设置为`true`，为数据绑定控件可以将传递到排序表达式<xref:System.Web.UI.WebControls.LinqDataSource>控件在运行时。</span><span class="sxs-lookup"><span data-stu-id="b93c5-465">If the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is set to `true`, a data-bound control can pass a sort expression to the <xref:System.Web.UI.WebControls.LinqDataSource> control at run time.</span></span> <span data-ttu-id="b93c5-466"><xref:System.Web.UI.WebControls.LinqDataSource>控制将应用从数据绑定控件的排序表达式应用之后<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-466">The <xref:System.Web.UI.WebControls.LinqDataSource> control will apply the sort expression from the data-bound control after it applies the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="b93c5-467">因此，根据排序表达式被返回的数据，从数据绑定控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-467">Therefore, the data is returned according to the sort expression from the data-bound control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-468">下面的示例返回按反向字母顺序中的值为基础的数据`Category`属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-468">The following example returns data in reverse alphabetical order based on values in the `Category` property.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default4.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection OrderByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ OrderByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrderByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.OrderByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-469">获取用于创建 Order By 子句的参数集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-469">Gets the collection of parameters that are used to create the Order By clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-470">使用用于创建 Order By 子句的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-470">The parameters that are used for creating the Order By clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-471"><xref:System.Web.UI.WebControls.LinqDataSource>控件使用中的参数<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合在运行时创建 Order By 子句。</span><span class="sxs-lookup"><span data-stu-id="b93c5-471">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection to create the Order By clause at run time.</span></span> <span data-ttu-id="b93c5-472">通常设置<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>属性设置为`true`添加到参数时<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-472">Typically you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property to `true` when you add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection.</span></span> <span data-ttu-id="b93c5-473">当<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>属性设置为`true`，在每个参数<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合添加到 Order By 子句中指定的顺序<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-473">When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is set to `true`, each parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection is added to the Order By clause in the sequence that they are specified in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection.</span></span> <span data-ttu-id="b93c5-474">当<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>属性是`true`，参数无需命名为，因为它们会按顺序应用并与占位符不匹配。</span><span class="sxs-lookup"><span data-stu-id="b93c5-474">When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is `true`, the parameters do not have to be named because they are applied in sequence and are not matched to a placeholder.</span></span>  
  
 <span data-ttu-id="b93c5-475">如果不需要在 Order By 子句中的运行时设置一个值，无需使用<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-475">If you do not have to set a value at run time in the Order By clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection.</span></span> <span data-ttu-id="b93c5-476">可以定义要用于排序中的数据的字段<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-476">You can define the fields to use for ordering the data in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="b93c5-477">例如，若要从数据库表中返回按排序`LastName`，请将<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>为"LastName"不带任何参数。</span><span class="sxs-lookup"><span data-stu-id="b93c5-477">For example, to return values from a database table ordered by `LastName`, set <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> to "LastName" without any parameters.</span></span>  
  
 <span data-ttu-id="b93c5-478">可以在中设置参数<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合中的占位符的参数搭配<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>属性，但这种方法具有有限的应用程序。</span><span class="sxs-lookup"><span data-stu-id="b93c5-478">You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property, but this approach has limited application.</span></span> <span data-ttu-id="b93c5-479">当使用此方法时中的参数<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合不能表示的列名称。</span><span class="sxs-lookup"><span data-stu-id="b93c5-479">When you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection cannot represent a column name.</span></span> <span data-ttu-id="b93c5-480">可以将参数设置为一个值，然后将该值与属性中的值进行比较。</span><span class="sxs-lookup"><span data-stu-id="b93c5-480">You can set a parameter to a value and then compare that value to values in a property.</span></span> <span data-ttu-id="b93c5-481">例如，可以按基于属性中的值是小于参数表示的运行时间值对数据进行排序。</span><span class="sxs-lookup"><span data-stu-id="b93c5-481">For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-482">下面的示例显示一个 <xref:System.Web.UI.WebControls.LinqDataSource> 控件，其 <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-482">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property set to `true`.</span></span> <span data-ttu-id="b93c5-483">参数包含在<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>基于属性的数据命名的用户进行排序的集合选择从<xref:System.Web.UI.WebControls.DropDownList>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-483">A parameter is included in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection that orders the data based on the property name that a user selects from a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default8.aspx#8)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default8.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderGroupsBy">
      <MemberSignature Language="C#" Value="public string OrderGroupsBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderGroupsBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderGroupsBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderGroupsBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OrderGroupsBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-484">获取或设置用于对分组数据进行排序的字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-484">Gets or sets the fields that are used for ordering grouped data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-485">一个字符串，用于创建 Order Groups By 子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-485">A string that is used to create the Order Groups By clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-486">您使用<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>属性指定的数据组的排序方式。</span><span class="sxs-lookup"><span data-stu-id="b93c5-486">You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify how the groups of data are sorted.</span></span> <span data-ttu-id="b93c5-487">例如，可以按分组`CategoryID`属性和每个类别 ID 分组依据的平均值然后排序`Price`属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-487">For example, you can group by the `CategoryID` property and then sort each category ID group by the average of the `Price` property.</span></span>  
  
 <span data-ttu-id="b93c5-488">可以设置<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>属性仅当对数据进行分组。</span><span class="sxs-lookup"><span data-stu-id="b93c5-488">You can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property only when you have grouped the data.</span></span> <span data-ttu-id="b93c5-489">如果您设置<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>属性但没有设置<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性，<xref:System.Web.UI.WebControls.LinqDataSource>控件将引发异常。</span><span class="sxs-lookup"><span data-stu-id="b93c5-489">If you set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property without setting the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception.</span></span>  
  
 <span data-ttu-id="b93c5-490">用于对数据进行排序的属性，必须使用对数据进行分组的属性，或者对分组数据的聚合函数的结果。</span><span class="sxs-lookup"><span data-stu-id="b93c5-490">The property that is used to sort the data must be either a property that is used to group the data, or the result of an aggregation function on the grouped data.</span></span> <span data-ttu-id="b93c5-491">若要指定对数据进行排序，但是您可以添加一个空格和"升序"、"ASC"、"降序"或"DESC"的字符串中的属性名称到<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>字符串。</span><span class="sxs-lookup"><span data-stu-id="b93c5-491">To specify how the data is sorted, you can add a space and the string "Ascending", "ASC", "Descending", or "DESC" to a property name in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> string.</span></span>  
  
 <span data-ttu-id="b93c5-492">可以指定多个属性中的<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-492">You can specify more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property.</span></span> <span data-ttu-id="b93c5-493">通过使用逗号分隔每个属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-493">Separate each property by using a comma.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-494">下面的示例演示如何通过使用两个属性，对数据进行分组以及如何对分组的数据进行排序通过使用这些属性之一。</span><span class="sxs-lookup"><span data-stu-id="b93c5-494">The following example shows how to group the data by using two properties, and how to sort the grouped data by using one of those properties.</span></span> <span data-ttu-id="b93c5-495">名为的表中的数据`Products`通过使用名为的属性分组`CategoryID`和`Discontinued`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-495">The data from a table named `Products` is grouped by using properties named `CategoryID` and `Discontinued`.</span></span> <span data-ttu-id="b93c5-496">分组的数据进行排序`CategoryID`属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-496">The grouped data is sorted by the `CategoryID` property.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/vb/Default.aspx#1)]  
  
 <span data-ttu-id="b93c5-497">下面的示例演示如何通过使用属性，对数据进行分组以及如何基于一个聚合函数的结果进行排序。</span><span class="sxs-lookup"><span data-stu-id="b93c5-497">The following example shows how to group the data by using a property, and how to sort it based on the results of an aggregation function.</span></span> <span data-ttu-id="b93c5-498">将数据从`Products`通过使用分组表`CategoryID`属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-498">The data from the `Products` table is grouped by using the `CategoryID` property.</span></span> <span data-ttu-id="b93c5-499">进行排序所基于的平均值`UnitPrice`每个组中的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-499">It is sorted based on the average of the `UnitPrice` property within each group.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderGroupsByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection OrderGroupsByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection OrderGroupsByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderGroupsByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ OrderGroupsByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrderGroupsByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-500">获取用于创建 Order Groups By 子句的参数集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-500">Gets the collection of parameters that are used to create the Order Groups By clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-501">用于创建 Order Groups By 子句的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-501">The parameters that are used to create the Order Groups By clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-502"><xref:System.Web.UI.WebControls.LinqDataSource>控件使用中的参数<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>集合在运行时创建 Order Groups By 子句。</span><span class="sxs-lookup"><span data-stu-id="b93c5-502">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection to create the Order Groups By clause at run time.</span></span>  
  
 <span data-ttu-id="b93c5-503">添加值<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>仅当必须在运行时在 Order Groups By 子句中设置值的集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-503">You add values to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection only when you must set values at run time in the Order Groups By clause.</span></span> <span data-ttu-id="b93c5-504">可以定义用于按使用顺序对数据的字段<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-504">You can define the fields that are used to order the data by using the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property.</span></span>  
  
 <span data-ttu-id="b93c5-505">可以在中设置参数<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>集合中的占位符的参数搭配<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-505">You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property.</span></span> <span data-ttu-id="b93c5-506">但是，如果使用此方法时中的参数<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>集合不能表示的列名称; 它们必须代表的值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-506">However, when you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection cannot represent a column name; they must represent values.</span></span> <span data-ttu-id="b93c5-507">可以将参数设置为一个值，然后到属性的值进行比较。</span><span class="sxs-lookup"><span data-stu-id="b93c5-507">You can set a parameter to a value and then compare that value to a property.</span></span> <span data-ttu-id="b93c5-508">例如，可以按基于属性中的值是小于参数表示的运行时间值对数据进行排序。</span><span class="sxs-lookup"><span data-stu-id="b93c5-508">For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="linqDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public string Select { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Select" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Property Select As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Select { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Select : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.Select" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-509">获取或设置属性和计算值，它们包含在检索到的数据中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-509">Gets or sets the properties and calculated values that are included in the retrieved data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-510">用于创建 Select 子句的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-510">A string that is used to create the Select clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-511">如果未设置<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性，<xref:System.Web.UI.WebControls.LinqDataSource>控制此数据对象中检索所有属性 （数据列）。</span><span class="sxs-lookup"><span data-stu-id="b93c5-511">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves all the properties (data columns) from the data object.</span></span> <span data-ttu-id="b93c5-512">您使用<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性，以便从对象检索属性的子集，或计算新值时要检索的数据。</span><span class="sxs-lookup"><span data-stu-id="b93c5-512">You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved.</span></span>  
  
 <span data-ttu-id="b93c5-513">指定要检索的设置的属性<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性设置为你想要在返回的数据中包含的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="b93c5-513">You specify which properties to retrieve by setting the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the names of the properties that you want to include in the returned data.</span></span>  
  
 <span data-ttu-id="b93c5-514">如果此数据对象，检索的属性子集<xref:System.Web.UI.WebControls.LinqDataSource>控件动态创建一个包含属性中指定的类<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-514">If you retrieve a subset of properties from the data object, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates a class that contains only the properties that you specify in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="b93c5-515">如果计算不是在数据对象中的属性的属性，也是动态创建的类。</span><span class="sxs-lookup"><span data-stu-id="b93c5-515">A class is also created dynamically if you calculate properties that are not properties in the data object.</span></span> <span data-ttu-id="b93c5-516">在这些情况下，从查询返回的对象不是实例中指定的类<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-516">In these cases, the object returned from the query is not an instance of the class that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property.</span></span> <span data-ttu-id="b93c5-517">相反，必须使用`new`中的方法<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性以指示，从查询返回一个新类。</span><span class="sxs-lookup"><span data-stu-id="b93c5-517">Instead, you must use the `new` method in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to indicate that a new class is returned from the query.</span></span> <span data-ttu-id="b93c5-518">例如，若要仅返回`FirstName`并`LastName`属性从一个对象，包含多个这些属性，请设置<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性设置为`new(FirstName, LastName)`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-518">For example, to return only the `FirstName` and `LastName` properties from an object that contains more than these properties, set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(FirstName, LastName)`.</span></span> <span data-ttu-id="b93c5-519"><xref:System.Web.UI.WebControls.LinqDataSource>控件将动态创建中指定的新类`new`方法。</span><span class="sxs-lookup"><span data-stu-id="b93c5-519">The <xref:System.Web.UI.WebControls.LinqDataSource> control will dynamically create the new class that you specified in the `new` method.</span></span>  
  
 <span data-ttu-id="b93c5-520">可以使用`As`关键字来将别名分配给所选值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-520">You can use the `As` keyword to assign an alias to a selected value.</span></span> <span data-ttu-id="b93c5-521">如果将分配一个别名，则必须包括中的别名属性`new`方法。</span><span class="sxs-lookup"><span data-stu-id="b93c5-521">If you assign an alias, you must include the aliased properties in the `new` method.</span></span> <span data-ttu-id="b93c5-522">将绑定到的任何数据绑定控件<xref:System.Web.UI.WebControls.LinqDataSource>控件必须由该别名引用的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-522">Any data-bound control that binds to the results from the <xref:System.Web.UI.WebControls.LinqDataSource> control must refer to the property by the alias.</span></span> <span data-ttu-id="b93c5-523">例如，如果您设置<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性设置为`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`，数据绑定控件可以访问两个属性`SalesRegion`和`RevenueThousands`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-523">For example, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`, the data-bound control can access two properties, `SalesRegion` and `RevenueThousands`.</span></span>  
  
 <span data-ttu-id="b93c5-524">您使用`new`函数，在<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性根据条件下表中列出。</span><span class="sxs-lookup"><span data-stu-id="b93c5-524">You use the `new` function in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property according to the conditions listed in the following table.</span></span>  
  
|<span data-ttu-id="b93c5-525">选择</span><span class="sxs-lookup"><span data-stu-id="b93c5-525">Select</span></span>|<span data-ttu-id="b93c5-526">使用新的</span><span class="sxs-lookup"><span data-stu-id="b93c5-526">Use of new</span></span>|<span data-ttu-id="b93c5-527">示例</span><span class="sxs-lookup"><span data-stu-id="b93c5-527">Example</span></span>|  
|------------|----------------|-------------|  
|<span data-ttu-id="b93c5-528">单个属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-528">Single property.</span></span>|<span data-ttu-id="b93c5-529">`new` 不需要。</span><span class="sxs-lookup"><span data-stu-id="b93c5-529">`new` not needed.</span></span>|`Select="Category"`|  
|<span data-ttu-id="b93c5-530">多个属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-530">Multiple properties.</span></span>|<span data-ttu-id="b93c5-531">`new` 所需。</span><span class="sxs-lookup"><span data-stu-id="b93c5-531">`new` needed.</span></span>|`Select="new(Cateogry, Name)"`|  
|<span data-ttu-id="b93c5-532">一个或多个具有别名的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-532">Single or multiple properties that have an alias.</span></span>|<span data-ttu-id="b93c5-533">`new` 所需。</span><span class="sxs-lookup"><span data-stu-id="b93c5-533">`new` needed.</span></span>|`Select="new(Category As CategoryGroup)"`|  
  
 <span data-ttu-id="b93c5-534">如果你想要启用自动数据修改，但不是希望显示此数据对象中的所有属性，则不要设置<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-534">If you want to enable automatic data modifications, but you do not want to display all the properties from the data object, do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="b93c5-535">相反，管理通过数据绑定控件显示。</span><span class="sxs-lookup"><span data-stu-id="b93c5-535">Instead, manage the display through the data-bound control.</span></span> <span data-ttu-id="b93c5-536">当你使用<xref:System.Web.UI.WebControls.DetailsView>控件或<xref:System.Web.UI.WebControls.GridView>控件，则还必须设置<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>或<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-536">When you use the <xref:System.Web.UI.WebControls.DetailsView> control or the <xref:System.Web.UI.WebControls.GridView> control, you must also set the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> or the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `false`.</span></span> <span data-ttu-id="b93c5-537">不会显示在数据绑定控件的任何值存储在视图状态。</span><span class="sxs-lookup"><span data-stu-id="b93c5-537">Any values that are not displayed in the data-bound control are stored in view state.</span></span> <span data-ttu-id="b93c5-538">它们不变时传递给数据源执行数据更新。</span><span class="sxs-lookup"><span data-stu-id="b93c5-538">They are passed unchanged to the data source when the data update is performed.</span></span>  
  
 <span data-ttu-id="b93c5-539">当您在查询中的数据进行分组时，可以包含在聚合方法<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-539">When you group data in the query, you can include aggregate methods in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="b93c5-540">可以使用以下聚合方法：</span><span class="sxs-lookup"><span data-stu-id="b93c5-540">You can use the following aggregate methods:</span></span>  
  
-   `Count()`  
  
-   <span data-ttu-id="b93c5-541">`Average(` *列* `)`</span><span class="sxs-lookup"><span data-stu-id="b93c5-541">`Average(` *column* `)`</span></span>  
  
-   <span data-ttu-id="b93c5-542">`Sum(` *列* `)`</span><span class="sxs-lookup"><span data-stu-id="b93c5-542">`Sum(` *column* `)`</span></span>  
  
-   <span data-ttu-id="b93c5-543">`Max(` *列* `)`</span><span class="sxs-lookup"><span data-stu-id="b93c5-543">`Max(` *column* `)`</span></span>  
  
-   <span data-ttu-id="b93c5-544">`Min(` *列* `)`</span><span class="sxs-lookup"><span data-stu-id="b93c5-544">`Min(` *column* `)`</span></span>  
  
-   <span data-ttu-id="b93c5-545">`Where(` *条件* `)`</span><span class="sxs-lookup"><span data-stu-id="b93c5-545">`Where(` *condition* `)`</span></span>  
  
-   `Any()`  
  
-   <span data-ttu-id="b93c5-546">`All(` *条件* `)`</span><span class="sxs-lookup"><span data-stu-id="b93c5-546">`All(` *condition* `)`</span></span>  
  
 <span data-ttu-id="b93c5-547">有关详细信息，请参阅[NIB: LinqDataSource Web 服务器控件概述](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)并[如何： 组和聚合数据使用 LinqDataSource 控件](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)。</span><span class="sxs-lookup"><span data-stu-id="b93c5-547">For more information, see [NIB: LinqDataSource Web Server Control Overview](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136) and [How to: Group and Aggregate Data Using the LinqDataSource Control](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af).</span></span>  
  
 <span data-ttu-id="b93c5-548">当分组数据时，可以包括`Key`并`It`，它们动态创建中的属性，<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-548">When you group data, you can include `Key` and `It`, which are dynamically created properties, in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="b93c5-549">`Key`属性是指用来对数据进行分组的一个或多个属性中的值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-549">The `Key` property refers to the values in the property or properties that were used to group the data.</span></span> <span data-ttu-id="b93c5-550">例如，如果按属性名为分组`Category`，则`Key`属性将包含在每个唯一值`Category`属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-550">For example, if you group by a property named `Category`, the `Key` property will contain each unique value in the `Category` property.</span></span> <span data-ttu-id="b93c5-551">`It`属性是指一系列中的数据分组的单个记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-551">The `It` property refers to a collection of individual records in a grouping of data.</span></span> <span data-ttu-id="b93c5-552">您可以循环访问`It`属性来检索已合并，在分组操作中的单个记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-552">You can iterate over the `It` property to retrieve the individual records that have been consolidated in the grouping operation.</span></span> <span data-ttu-id="b93c5-553">例如，如果按属性名为分组`Category`，则`It`属性包含所有共享一个公共值中的单个记录`Category`属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-553">For example, if you group by a property named `Category`, the `It` property contains all the individual records that share a common value in the `Category` property.</span></span>  
  
 <span data-ttu-id="b93c5-554">如果包括`It`中的关键字<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性数据进行分组时，你必须将分配的别名`It`关键字。</span><span class="sxs-lookup"><span data-stu-id="b93c5-554">If you include the `It` keyword in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property when you group data, you must assign an alias to the `It` keyword.</span></span> <span data-ttu-id="b93c5-555"><xref:System.Web.UI.WebControls.LinqDataSource>控件将引发异常，如果`It`没有别名。</span><span class="sxs-lookup"><span data-stu-id="b93c5-555">The <xref:System.Web.UI.WebControls.LinqDataSource> control will throw an exception if `It` does not have an alias.</span></span> <span data-ttu-id="b93c5-556">可以分配的别名`Key`关键字，但这不是必需。</span><span class="sxs-lookup"><span data-stu-id="b93c5-556">You can assign an alias to the `Key` keyword, but this is not required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-557">下面的示例演示如何设置<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性设置为在数据对象中的属性的子集。</span><span class="sxs-lookup"><span data-stu-id="b93c5-557">The following example shows how to set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to a subset of properties in the data object.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default10.aspx#10)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default10.aspx#10)]  
  
 <span data-ttu-id="b93c5-558">下面的示例演示如何检索值的属性中已使用对数据进行分组，以及如何检索分组记录的平均值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-558">The following example shows how to retrieve values in a property that has been used to group data, and to retrieve the average for the grouped records.</span></span> <span data-ttu-id="b93c5-559">`Key`关键字包含已用于对数据进行分组的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-559">The `Key` keyword contains the property that has been used for grouping data.</span></span> <span data-ttu-id="b93c5-560">在此示例中，`Key`将包含共享的值从`ProductCategory`属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-560">In this example, `Key` will contain the shared values from the `ProductCategory` property.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default3.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Selected : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-561">数据检索操作完成后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-561">Occurs when a data retrieval operation has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-562">处理<xref:System.Web.UI.WebControls.LinqDataSource.Selected>事件以从数据检索操作捕获任何异常也可检索操作完成后检查数据对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-562">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished.</span></span> <span data-ttu-id="b93c5-563">该对象可用于从<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>传递给事件处理程序对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-563">The object is available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As EventHandler(Of LinqDataSourceSelectEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceSelectEventArgs ^&gt; ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; " Usage="member this.Selecting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-564">执行数据检索操作前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-564">Occurs before a data-retrieval operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-565">处理<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件，以执行以下任务：</span><span class="sxs-lookup"><span data-stu-id="b93c5-565">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event in order to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="b93c5-566">修改的数据检索的参数。</span><span class="sxs-lookup"><span data-stu-id="b93c5-566">Modify parameters for data retrieval.</span></span>  
  
-   <span data-ttu-id="b93c5-567">以编程方式生成查询。</span><span class="sxs-lookup"><span data-stu-id="b93c5-567">Generate the query programmatically.</span></span>  
  
-   <span data-ttu-id="b93c5-568">修改排序或分页的值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-568">Modify the values for sorting or paging.</span></span>  
  
-   <span data-ttu-id="b93c5-569">执行自定义排序或分页。</span><span class="sxs-lookup"><span data-stu-id="b93c5-569">Perform custom sorting or paging.</span></span>  
  
-   <span data-ttu-id="b93c5-570">取消数据检索操作。</span><span class="sxs-lookup"><span data-stu-id="b93c5-570">Cancel the data-retrieval operation.</span></span>  
  
 <span data-ttu-id="b93c5-571"><xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>为此事件包含数据检索操作的参数传递到事件处理程序的对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-571">The <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object that is passed to event handlers for this event contains the parameters for the data-retrieval operation.</span></span> <span data-ttu-id="b93c5-572">您可以修改在参数<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件处理程序之前执行查询，也可以创建新的结果集并将其分配给<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-572">You can modify the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event handler before the query executes, or you can create a new result set and assign that to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.</span></span>  
  
 <span data-ttu-id="b93c5-573">您是否能够实现自定义排序或用于绑定到的控件可能会受限于此事件处理程序中的分页<xref:System.Web.UI.WebControls.LinqDataSource>。</span><span class="sxs-lookup"><span data-stu-id="b93c5-573">Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource>.</span></span> <span data-ttu-id="b93c5-574">例如，如果列标题的<xref:System.Web.UI.WebControls.GridView>单击控件时，该控件将执行自动排序，这可能会重写任何订单，所以建立在事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b93c5-574">For example, when the column header of a <xref:System.Web.UI.WebControls.GridView> control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler.</span></span>  
  
 <span data-ttu-id="b93c5-575">如果事件处理程序中引发异常<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件，必须处理该事件处理程序中的异常。</span><span class="sxs-lookup"><span data-stu-id="b93c5-575">If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event, you must handle the exception in that event handler.</span></span> <span data-ttu-id="b93c5-576">此异常不会传递到的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Selected>事件 (通过<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>属性的<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>对象)。</span><span class="sxs-lookup"><span data-stu-id="b93c5-576">The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object).</span></span> <span data-ttu-id="b93c5-577"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>属性包含后引发的异常<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-577">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-578">下面的示例演示的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-578">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span> <span data-ttu-id="b93c5-579">该处理程序创建从 Web 页中的字符串值的数组中检索值的查询。</span><span class="sxs-lookup"><span data-stu-id="b93c5-579">The handler creates a query that retrieves values from an array of string values in the Web page.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default3.aspx.cs#3)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default3.aspx.vb#3)]  
  
 <span data-ttu-id="b93c5-580">下面的示例演示如何分配<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>表示存储的过程的方法中返回的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-580">The following example shows how to assign the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property to the object that is returned from a method that represents a stored procedure.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Selecting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceSelectEventArgs)  
    Dim exampleContext As ExampleDataContext = New ExampleDataContext()  
    e.Result = exampleContext.GetRegisteredCustomers()  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Selecting(object sender,   
        LinqDataSourceSelectEventArgs e)  
{  
    ExampleDataContext exampleContext = new ExampleDataContext();  
    e.Result = exampleContext.GetRegisteredCustomers();  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-581">获取在数据检索操作过程中使用的参数的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-581">Gets the collection of parameters that are used during a data-retrieval operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-582">用于创建 Select 子句的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-582">The parameters that are used to create the Select clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-583"><xref:System.Web.UI.WebControls.LinqDataSource>控件使用中的参数<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>集合在运行时创建 Select 子句。</span><span class="sxs-lookup"><span data-stu-id="b93c5-583">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to create the Select clause at run time.</span></span> <span data-ttu-id="b93c5-584">您将参数添加到<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>时想要在 Select 子句中使用运行时的值的集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-584">You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection when you want to use run-time values in the Select clause.</span></span> <span data-ttu-id="b93c5-585">例如，您可以将参数添加到<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>集合来表示用户的配置文件中的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-585">For example, you can add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property in the user's profile.</span></span> <span data-ttu-id="b93c5-586">你可以然后使用该属性和值从数据源来计算新值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-586">You can then use that property and a value from the data source to calculate a new value.</span></span>  
  
 <span data-ttu-id="b93c5-587">如果不需要在 Select 子句中的运行时设置一个值，无需使用<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-587">If you do not have to set a value at run time in the Select clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection.</span></span> <span data-ttu-id="b93c5-588">可以定义要在中检索的属性<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-588">You can define the properties to retrieve in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="b93c5-589">例如，若要返回`FirstName`并`LastName`从数据库表中的值设置<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>为"FirstName，LastName"不带任何参数。</span><span class="sxs-lookup"><span data-stu-id="b93c5-589">For example, to return the `FirstName` and `LastName` values from a database table, set <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> to "FirstName, LastName" without any parameters.</span></span>  
  
 <span data-ttu-id="b93c5-590">若要设置中的值<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>集合，您可以添加中的占位符<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性的命名参数。</span><span class="sxs-lookup"><span data-stu-id="b93c5-590">To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection, you add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property for the named parameter.</span></span> <span data-ttu-id="b93c5-591">在 Select 子句中的前面加上每个参数名称后的加符号 @。</span><span class="sxs-lookup"><span data-stu-id="b93c5-591">In the Select clause, preface each parameter name with the @ symbol.</span></span>  
  
 <span data-ttu-id="b93c5-592">不能使用中的参数<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>集合来表示属性名称。</span><span class="sxs-lookup"><span data-stu-id="b93c5-592">You cannot use a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property name.</span></span> <span data-ttu-id="b93c5-593">若要动态设置<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性设置为属性的名称创建的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件和自定义<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>属性根据需要。</span><span class="sxs-lookup"><span data-stu-id="b93c5-593">To dynamically set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the name of a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-594">下面的示例演示如何使用一个用户提供的值来计算的值中返回的数据。</span><span class="sxs-lookup"><span data-stu-id="b93c5-594">The following example shows how to use a user-supplied value to calculate a value in the returned data.</span></span> <span data-ttu-id="b93c5-595">表示生产天数在文本框中，用户可以输入一个值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-595">The user can enter a value in the text box that represents the number of manufacturing days.</span></span> <span data-ttu-id="b93c5-596">此值除以表示天数，以制造一种产品的数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-596">That value is divided by a value from a database that represents the number of days to manufacture a product.</span></span> <span data-ttu-id="b93c5-597">返回的值指示可在指定天数期间生产的多少产品。</span><span class="sxs-lookup"><span data-stu-id="b93c5-597">The returned value indicates how many products can be manufactured during the specified number of days.</span></span> <span data-ttu-id="b93c5-598">用户输入的内容包含在通过 Select 命令<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-598">The user's input is included in the Select command through the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.SelectParameters#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.SelectParameters/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.SelectParameters#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.SelectParameters/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreOriginalValuesInViewState">
      <MemberSignature Language="C#" Value="public bool StoreOriginalValuesInViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StoreOriginalValuesInViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreOriginalValuesInViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StoreOriginalValuesInViewState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StoreOriginalValuesInViewState : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-599">获取或设置一个值，该值指示数据源中的数据是否存储在视图状态中，以确保数据在更新或删除之前不会由其他进程更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-599">Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-600">如果将值存储在视图状态中，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-600">
              <see langword="true" /> if the values will be stored in view state; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b93c5-601">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-601">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-602">默认情况下，当更新和删除操作已启用<xref:System.Web.UI.WebControls.LinqDataSource>控制存储在视图状态中的所有记录的原始值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-602">By default, when update and delete operations have been enabled, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values for all the records in view state.</span></span> <span data-ttu-id="b93c5-603"><xref:System.Web.UI.WebControls.LinqDataSource>控件将存储的所有主键的值，并且所有属性未都标有`UpdateCheck.Never`中`Column`属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-603">The <xref:System.Web.UI.WebControls.LinqDataSource> control stores values for all primary keys and all properties not marked with `UpdateCheck.Never` in the `Column` attribute.</span></span> <span data-ttu-id="b93c5-604">您设置`UpdateCheck`的属性`Column`属性中[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="b93c5-604">You set the `UpdateCheck` property of the `Column` attribute in the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)].</span></span>  
  
 <span data-ttu-id="b93c5-605">LINQ to SQL 更新或删除数据之前，它会检查针对数据源中的当前值在视图状态的值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-605">Before LINQ to SQL updates or deletes data, it checks the values in view state against the current values in the data source.</span></span> <span data-ttu-id="b93c5-606">如果值不匹配，数据源记录已更改。</span><span class="sxs-lookup"><span data-stu-id="b93c5-606">If the values do not match, the data source record has changed.</span></span> <span data-ttu-id="b93c5-607">在这种情况下，LINQ to SQL 将引发异常并且不会不继续更新或删除操作。</span><span class="sxs-lookup"><span data-stu-id="b93c5-607">In that case, LINQ to SQL throws an exception and does not continue with the update or delete operation.</span></span> <span data-ttu-id="b93c5-608">有关 LINQ to SQL 的详细信息，请参阅[LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)。</span><span class="sxs-lookup"><span data-stu-id="b93c5-608">For more information about LINQ to SQL, see [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655).</span></span>  
  
 <span data-ttu-id="b93c5-609">状态视图中存储的原始值可能会导致的页大小变得不必要的大型和可以公开恶意用户的敏感数据。</span><span class="sxs-lookup"><span data-stu-id="b93c5-609">Storing the original values in view state can cause the page size to become unnecessarily large and can expose sensitive data to a malicious user.</span></span> <span data-ttu-id="b93c5-610">您可以禁用通过设置存储视图状态中的值<xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A>属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-610">You can disable storing values in view state by setting the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property to `false`.</span></span> <span data-ttu-id="b93c5-611">如果执行此操作，则必须提供您自己的方式来确保数据未更改。</span><span class="sxs-lookup"><span data-stu-id="b93c5-611">If you do this, you must provide your own way to make sure that the data has not changed.</span></span> <span data-ttu-id="b93c5-612">如果您设置<xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A>属性设置为`false`，原始值不会保留在数据绑定控件的视图状态。</span><span class="sxs-lookup"><span data-stu-id="b93c5-612">If you set the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property to `false`, the original values are not persisted in view state for the data-bound control.</span></span> <span data-ttu-id="b93c5-613">在这种情况下，LINQ to SQL 无法验证数据的完整性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-613">In that case, LINQ to SQL cannot verify the integrity of the data.</span></span> <span data-ttu-id="b93c5-614">LINQ to SQL 将引发异常，指示数据冲突，即使不实际更改数据源中的数据。</span><span class="sxs-lookup"><span data-stu-id="b93c5-614">LINQ to SQL will throw an exception that indicates a data conflict even if the data in the data source has not actually changed.</span></span>  
  
 <span data-ttu-id="b93c5-615">如果基础数据源包含自动更新在更新过程的时间戳字段，您可以仅将该值存储在视图状态中。</span><span class="sxs-lookup"><span data-stu-id="b93c5-615">If the underlying data source contains a timestamp field that is automatically updated during an update, you can store only that value in view state.</span></span> <span data-ttu-id="b93c5-616">在这种情况下，实体类中的时间戳属性设置为`IsVersion=true`和所有属性都设置为`UpdateCheck.Never`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-616">In that case, the timestamp property in the entity class is set to `IsVersion=true` and all the properties are set to `UpdateCheck.Never`.</span></span> <span data-ttu-id="b93c5-617">因为在每次该记录中的数据更改时，数据库会自动更新时间戳字段，LINQ to SQL 确定从该值中，如果数据已更改。</span><span class="sxs-lookup"><span data-stu-id="b93c5-617">Because a timestamp field is automatically updated by the database every time that data in that record changes, LINQ to SQL determines from that value if data has changed.</span></span> <span data-ttu-id="b93c5-618">这有助于减少的视图状态大小，未公开任何敏感数据。</span><span class="sxs-lookup"><span data-stu-id="b93c5-618">This helps reduce the size of view state, and no sensitive data is exposed.</span></span> <span data-ttu-id="b93c5-619">LINQ to SQL 数据库中时间戳值的状态将通过比较时间戳值在视图中检查的数据一致性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-619">LINQ to SQL will check for data consistency by comparing the timestamp value in view state with the timestamp value in the database.</span></span> <span data-ttu-id="b93c5-620">有关详细信息，请参阅[演练： 使用时间戳与 LinqDataSource 控件与检查数据完整性](http://msdn.microsoft.com/library/e7700162-4f05-4130-81f7-3be1361027fa)。</span><span class="sxs-lookup"><span data-stu-id="b93c5-620">For more information, see [Walkthrough: Using a Timestamp with the LinqDataSource Control to Check Data Integrity](http://msdn.microsoft.com/library/e7700162-4f05-4130-81f7-3be1361027fa).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.ContextType">
      <MemberSignature Language="C#" Value="Type System.Web.DynamicData.IDynamicDataSource.ContextType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Web.DynamicData.IDynamicDataSource.ContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType" />
      <MemberSignature Language="VB.NET" Value=" Property ContextType As Type Implements IDynamicDataSource.ContextType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Web::DynamicData::IDynamicDataSource::ContextType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.DynamicData.IDynamicDataSource.ContextType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.ContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-621">有关此成员的说明，请参见 <see cref="T:System.Web.DynamicData.IDynamicDataSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-621">For a description of this member, see <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-622">与类关联的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-622">The type that is associated with the class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-623">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="b93c5-623">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b93c5-624">它只能在 <xref:System.Web.UI.WebControls.LinqDataSource> 实例强制转换为 <xref:System.Web.DynamicData.IDynamicDataSource> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="b93c5-624">It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.EntitySetName">
      <MemberSignature Language="C#" Value="string System.Web.DynamicData.IDynamicDataSource.EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.DynamicData.IDynamicDataSource.EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName" />
      <MemberSignature Language="VB.NET" Value=" Property EntitySetName As String Implements IDynamicDataSource.EntitySetName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::DynamicData::IDynamicDataSource::EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.DynamicData.IDynamicDataSource.EntitySetName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EntitySetName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-625">有关此成员的说明，请参见 <see cref="T:System.Web.DynamicData.IDynamicDataSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-625">For a description of this member, see <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-626">实体的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-626">The name of the entity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-627">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="b93c5-627">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b93c5-628">它只能在 <xref:System.Web.UI.WebControls.LinqDataSource> 实例强制转换为 <xref:System.Web.DynamicData.IDynamicDataSource> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="b93c5-628">It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.Exception">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#Exception" />
      <MemberSignature Language="VB.NET" Value="Custom Event Exception As EventHandler(Of DynamicValidatorEventArgs) Implements System.Web.DynamicData.IDynamicDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.DynamicData.IDynamicDataSource.Exception</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-629">有关此成员的说明，请参见 <see cref="T:System.Web.DynamicData.IDynamicDataSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-629">For a description of this member, see <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-630">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="b93c5-630">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b93c5-631">它只能在 <xref:System.Web.UI.WebControls.LinqDataSource> 实例强制转换为 <xref:System.Web.DynamicData.IDynamicDataSource> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="b93c5-631">It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TableName : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-632">获取或设置数据上下文类中的属性或字段的名称，该数据上下文类表示一个数据集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-632">Gets or sets the name of the property or field in the data context class that represents a data collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-633">包含属性（该属性包含数据集合）名称的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-633">A string that contains the name of the property that contains the data collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-634">设置<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性设置为表示要检索的数据的字段的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="b93c5-634">Set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that represents the data that you want to retrieve.</span></span> <span data-ttu-id="b93c5-635">当连接到数据库表时，属性的名称通常是表的相同的名称。</span><span class="sxs-lookup"><span data-stu-id="b93c5-635">When you are connecting to a database table, the name of the property is usually the same as the name of the table.</span></span> <span data-ttu-id="b93c5-636">当连接到内存中的数据集合时，设置<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性设置为属性或字段返回的数据集合的名称。</span><span class="sxs-lookup"><span data-stu-id="b93c5-636">When you are connecting to an in-memory data collection, set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that returns the data collection.</span></span>  
  
 <span data-ttu-id="b93c5-637">您可以将返回到任何类型的属性分配<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>检索操作的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-637">You can assign a property that returns any type to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property for retrieval operations.</span></span> <span data-ttu-id="b93c5-638">如果由属性表示的对象不实现<xref:System.Collections.IEnumerable>，则<xref:System.Web.UI.WebControls.LinqDataSource>控件将自动将对象包装的实例中<xref:System.Collections.IEnumerable>对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-638">If the object that is represented by the property does not implement <xref:System.Collections.IEnumerable>, the <xref:System.Web.UI.WebControls.LinqDataSource> control will automatically wrap the object in an instance of an <xref:System.Collections.IEnumerable> object.</span></span>  
  
 <span data-ttu-id="b93c5-639">若要启用自动更新、 插入或删除操作，分配给类<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>属性必须派生自<xref:System.Data.Linq.DataContext>和分配给属性<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>必须派生自属性<xref:System.Data.Linq.Table%601>。</span><span class="sxs-lookup"><span data-stu-id="b93c5-639">To enable automatic update, insert, or delete operations, the class that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext> and the property that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.</span></span>  
  
 <span data-ttu-id="b93c5-640">有关如何从一个类的实例中选择数据的信息，请参阅<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-640">For information about how to select data from an instance of a class, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-641">下面的示例演示两个<xref:System.Web.UI.WebControls.LinqDataSource>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-641">The following example shows two <xref:System.Web.UI.WebControls.LinqDataSource> controls.</span></span> <span data-ttu-id="b93c5-642">在一个<xref:System.Web.UI.WebControls.LinqDataSource>控件，<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性设置为类中的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-642">In one <xref:System.Web.UI.WebControls.LinqDataSource> control, the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property is set to a property in a class.</span></span> <span data-ttu-id="b93c5-643">该属性返回一个字符串数组。</span><span class="sxs-lookup"><span data-stu-id="b93c5-643">That property returns an array of strings.</span></span> <span data-ttu-id="b93c5-644">在另<xref:System.Web.UI.WebControls.LinqDataSource>控件，<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性设置为该属性表示数据库表。</span><span class="sxs-lookup"><span data-stu-id="b93c5-644">In the other <xref:System.Web.UI.WebControls.LinqDataSource> control, the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property is set to a property that represents a database table.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/Default.aspx#2)]  
  
 <span data-ttu-id="b93c5-645">名为的类`ExampleDataContext`，表示数据库表不显示在此示例中。</span><span class="sxs-lookup"><span data-stu-id="b93c5-645">The class named `ExampleDataContext` that represents the database table is not shown in this example.</span></span> <span data-ttu-id="b93c5-646">对于此示例正常工作，必须创建此类，通过添加 LINQ to SQL 类命名的 Example.dbml 和将表名为到电影[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="b93c5-646">For this example to work, you must create this class by adding a LINQ to SQL class named Example.dbml and dragging a table named Movie onto the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)].</span></span> <span data-ttu-id="b93c5-647">名为的类`ExampleDataContext`一个属性名为`Movies`生成。</span><span class="sxs-lookup"><span data-stu-id="b93c5-647">A class named `ExampleDataContext` with a property named `Movies` is generated.</span></span>  
  
 <span data-ttu-id="b93c5-648">下面的示例演示名为的类`MovieLibrary`中引用<xref:System.Web.UI.WebControls.LinqDataSource>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-648">The following example shows the class named `MovieLibrary` that is referenced in the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/App_Code/MovieLibrary.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/App_Code/MovieLibrary.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="linqDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="member this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="linqDataSource.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="b93c5-649">要更新的记录的行键值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-649">The row key values for the records to be updated.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="b93c5-650">要在数据源中更新的行值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-650">The row values to be updated in the data source.</span>
          </span>
        </param>
        <param name="oldValues">
          <span data-ttu-id="b93c5-651">为检测数据冲突而计算的行值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-651">The row values that are evaluated to detect data conflicts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b93c5-652">执行更新操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-652">Performs an update operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b93c5-653">受更新操作影响的记录数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-653">The number of records affected by the update operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-654">通常情况下，不需要调用<xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>从您的代码的方法。</span><span class="sxs-lookup"><span data-stu-id="b93c5-654">Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method from your code.</span></span> <span data-ttu-id="b93c5-655">数据绑定控件将自动调用<xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>方法时用户执行操作来更新的记录。</span><span class="sxs-lookup"><span data-stu-id="b93c5-655">The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when the user takes action to update a record.</span></span> <span data-ttu-id="b93c5-656">显式调用<xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>方法时您想要创建您自己的进程用于更新数据。</span><span class="sxs-lookup"><span data-stu-id="b93c5-656">You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when you want to create your own process for updating data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-657">下面的示例演示如何以编程方式更新数据源中的记录，用户单击鼠标按钮后。</span><span class="sxs-lookup"><span data-stu-id="b93c5-657">The following example shows how to programmatically update a record in the data source after the user clicks a button.</span></span> <span data-ttu-id="b93c5-658">代码将传递<xref:System.Collections.Specialized.ListDictionary>对象，其中包含密钥值，<xref:System.Collections.Specialized.ListDictionary>对象，其中包含的原始值和一个<xref:System.Collections.Specialized.ListDictionary>对象，其中包含新值<xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b93c5-658">The code passes a <xref:System.Collections.Specialized.ListDictionary> object that contains the key value, a <xref:System.Collections.Specialized.ListDictionary> object that contains the original values, and a <xref:System.Collections.Specialized.ListDictionary> object that contains the new values to the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Update#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/cs/Default2.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Update#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/vb/Default3.aspx.vb#1)]  
  
 <span data-ttu-id="b93c5-659">下面的示例显示了针对上一示例的标记。</span><span class="sxs-lookup"><span data-stu-id="b93c5-659">The following example shows the markup for the previous example.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.Update#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.Update#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/vb/Default3.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Updated : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-660">完成更新操作后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-660">Occurs when an update operation has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-661">处理<xref:System.Web.UI.WebControls.LinqDataSource.Updated>后更新操作已完成的事件来捕获任何异常从更新操作，或若要检查的值输出参数。</span><span class="sxs-lookup"><span data-stu-id="b93c5-661">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished.</span></span> <span data-ttu-id="b93c5-662">输出参数中有<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>传递给事件处理程序对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-662">The output parameters are available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-663">
            <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 类不使用此集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-663">This collection is not used by the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-664">参数的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-664">A collection of parameters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As EventHandler(Of LinqDataSourceUpdateEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceUpdateEventArgs ^&gt; ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; " Usage="member this.Updating : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-665">执行更新操作前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-665">Occurs before an update operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-666">处理<xref:System.Web.UI.WebControls.LinqDataSource.Updating>事件，以便验证要更新，以检查数据类，若要更改执行更新操作前, 一个值，或取消更新操作中的数据验证错误的对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-666">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation.</span></span> <span data-ttu-id="b93c5-667"><xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>对象传递给事件处理程序包含原始对象和已更新的对象。</span><span class="sxs-lookup"><span data-stu-id="b93c5-667">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object that is passed to event handlers contains both the original object and the updated object.</span></span>  
  
 <span data-ttu-id="b93c5-668">如果在更新操作时，发生验证错误<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>对象包含的数据类引发验证异常。</span><span class="sxs-lookup"><span data-stu-id="b93c5-668">If a validation error occurs during the update operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class.</span></span> <span data-ttu-id="b93c5-669">如果要更新的值与数据类中属性的类型不匹配或未通过自定义验证检查，将发生验证错误。</span><span class="sxs-lookup"><span data-stu-id="b93c5-669">A validation error occurs if a value to be updated does not match the type of the property in the data class, or if it does not pass a custom validation check.</span></span> <span data-ttu-id="b93c5-670">中的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Updating>事件，可以检索验证异常并采取相应的措施。</span><span class="sxs-lookup"><span data-stu-id="b93c5-670">In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you can retrieve the validation exceptions and take appropriate action.</span></span>  
  
 <span data-ttu-id="b93c5-671">如果事件处理程序中引发异常<xref:System.Web.UI.WebControls.LinqDataSource.Updating>事件，必须处理该事件处理程序中的异常。</span><span class="sxs-lookup"><span data-stu-id="b93c5-671">If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you must handle the exception in that event handler.</span></span> <span data-ttu-id="b93c5-672">此异常不会传递到的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Updated>事件 (通过<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>属性的<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>对象)。</span><span class="sxs-lookup"><span data-stu-id="b93c5-672">The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object).</span></span> <span data-ttu-id="b93c5-673"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>属性包含后引发的异常<xref:System.Web.UI.WebControls.LinqDataSource.Updating>事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-673">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-674">下面的示例演示的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Updating>事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-674">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="b93c5-675">该代码将从属性进行比较<xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A>属性和<xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A>属性以查看是否已更改一个值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-675">The code compares properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to see whether a value has changed.</span></span> <span data-ttu-id="b93c5-676">如果值已更改，值为<xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="b93c5-676">If the value has changed, a value of the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="b93c5-677">下面的示例演示的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Updating>检索验证异常的事件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-677">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event that retrieves validation exceptions.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 <span data-ttu-id="b93c5-678">前面的示例检索验证异常。</span><span class="sxs-lookup"><span data-stu-id="b93c5-678">The previous example retrieves validation exceptions.</span></span> <span data-ttu-id="b93c5-679">如果值与属性类型不匹配，则可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="b93c5-679">An exception might be thrown if a value does not match the type of the property.</span></span> <span data-ttu-id="b93c5-680">它还可能如以下示例中的自定义检查从引发。</span><span class="sxs-lookup"><span data-stu-id="b93c5-680">It might also be thrown from a customized check such as the one in the following example.</span></span> <span data-ttu-id="b93c5-681">`OnAgeChanging`方法检查的数量`Age`属性不是负数。</span><span class="sxs-lookup"><span data-stu-id="b93c5-681">The `OnAgeChanging` method checks that the number for the `Age` property is not negative.</span></span>  
  
```csharp  
partial void  OnAgeChanging(int? value)  
{  
    if (value < 0)  
    {  
        throw new Exception("Age cannot be a negative number.");  
    }  
}  
```  
  
```vb  
Private Sub OnAgeChanging(ByVal value As System.Nullable(Of Integer))  
    If (value < 0) Then  
        Throw New Exception("Age cannot be a negative number.")  
    End If  
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public string Where { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Where" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.Where" />
      <MemberSignature Language="VB.NET" Value="Public Property Where As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Where { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Where : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.Where" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.Where</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-682">获取或设置一个值，该值指定要将记录包含在检索到的数据中必须为真的条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-682">Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-683">用于创建 Where 子句的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-683">A string that is used to create the Where clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-684">您使用<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性来指定要从查询返回的记录的条件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-684">You use the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to specify the conditions for the record to be returned from a query.</span></span> <span data-ttu-id="b93c5-685">语法<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性是 C# 中的 LINQ Where 子句的语法相同。</span><span class="sxs-lookup"><span data-stu-id="b93c5-685">The syntax for the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is the same as the syntax for a LINQ Where clause in C#.</span></span>  
  
 <span data-ttu-id="b93c5-686">指定的表达式的结果为布尔值，如果该表达式的计算结果为`true`对于给定的行，在结果集中包括的行。</span><span class="sxs-lookup"><span data-stu-id="b93c5-686">You specify an expression that results in a Boolean value, and if the expression evaluates to `true` for a given row, the row is included in the result set.</span></span> <span data-ttu-id="b93c5-687">表达式的列名称、 比较运算符和值进行比较，由组成，如下面的示例中所示：</span><span class="sxs-lookup"><span data-stu-id="b93c5-687">Expressions are composed of column names, comparison operators, and values to compare to, as shown in the following example:</span></span>  
  
```  
<asp:LinqDataSource ... Where="Price > 50"...>  
```  
  
 <span data-ttu-id="b93c5-688">若要指定多个表达式的逻辑链接`AND`或`OR`运算符，您将使用`&&`作为逻辑 AND 运算符和`||`作为逻辑 OR 运算符，如下面的示例中所示：</span><span class="sxs-lookup"><span data-stu-id="b93c5-688">To specify multiple expressions linked by logical `AND` or `OR` operators, you use `&&` as a logical AND operator and `||` as a logical OR operator, as shown in the following example:</span></span>  
  
```  
<asp:LinqDataSource ... Where="Price > 50 && Price < 100"...>  
<asp:LinqDataSource ... Where="Price <= 50 || Price >= 100"...>  
```  
  
 <span data-ttu-id="b93c5-689">如果你想要测试针对一个文本字符串值的属性，则文本字符串值必须括在双引号。</span><span class="sxs-lookup"><span data-stu-id="b93c5-689">If you want to test a property against a literal string value, the literal string value must be enclosed in double quotation marks.</span></span> <span data-ttu-id="b93c5-690">若要在标记中执行此操作，请将<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>子句值在单引号内，如下面的示例中所示：</span><span class="sxs-lookup"><span data-stu-id="b93c5-690">To do this in markup, enclose the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause value in single quotation marks, as shown in the following example:</span></span>  
  
```  
<asp:LinqDataSource ... Where='Category = "Sports"' ... >  
```  
  
 <span data-ttu-id="b93c5-691">若要测试对代码中的文本字符串值，请使用适合于您使用为了插入双引号引起来，如下面的示例中所示的语言的转义符：</span><span class="sxs-lookup"><span data-stu-id="b93c5-691">To test against a literal string value in code, use escape characters that are appropriate to the language you are using in order to insert double quotation marks, as shown in the following example:</span></span>  
  
```vb  
LinqDataSource1.Where = "Category = ""Sports"""  
```  
  
```csharp  
LinqDataSource1.Where = "Category = \"Sports\"";  
```  
  
 <span data-ttu-id="b93c5-692">如果你想要测试字符串是否大于或小于另一个字符串，则必须使用的方法<xref:System.String>类而不是使用`<`或`>`之间的列名称和字符串值的运算符。</span><span class="sxs-lookup"><span data-stu-id="b93c5-692">If you want to test whether a string is greater than or less than another string, you must use methods of the <xref:System.String> class instead of using `<` or `>` operators between the column name and the string value.</span></span> <span data-ttu-id="b93c5-693">下面的示例显示如何选择具有小于，小于或等于的类别值的行大于，或大于或等于"体育":</span><span class="sxs-lookup"><span data-stu-id="b93c5-693">The following examples show how to select rows that have Category values that are less than, less than or equal to, greater than, or greater than or equal to "Sports":</span></span>  
  
```  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") < 0' ... >  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") <= 0' ... >  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") > 0' ... >  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") >= 0' ... >  
```  
  
 <span data-ttu-id="b93c5-694">此外可以使用的其他方法<xref:System.String>类，如<xref:System.String.StartsWith%2A>， <xref:System.String.EndsWith%2A>，和<xref:System.String.Contains%2A>。</span><span class="sxs-lookup"><span data-stu-id="b93c5-694">You can also use other methods of the <xref:System.String> class, such as <xref:System.String.StartsWith%2A>, <xref:System.String.EndsWith%2A>, and <xref:System.String.Contains%2A>.</span></span> <span data-ttu-id="b93c5-695">有关如何比较字符串的详细信息，请参阅[比较字符串](~/docs/standard/base-types/comparing.md)。</span><span class="sxs-lookup"><span data-stu-id="b93c5-695">For more information about how to compare strings, see [Comparing Strings](~/docs/standard/base-types/comparing.md).</span></span> <span data-ttu-id="b93c5-696">详细了解 Where 子句语法，请参阅[C# 运算符](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43)和[其中子句](~/docs/csharp/language-reference/keywords/where-clause.md)。</span><span class="sxs-lookup"><span data-stu-id="b93c5-696">For more information about Where clause syntax, see [C# Operators](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43) and [where clause](~/docs/csharp/language-reference/keywords/where-clause.md).</span></span>  
  
 <span data-ttu-id="b93c5-697">还可以筛选基于静态值，定义创建 Web 页时，可以根据在运行时计算的动态值进行筛选。</span><span class="sxs-lookup"><span data-stu-id="b93c5-697">In addition to filtering based on static values that you define when you create the Web page, you can filter based on dynamic values that are evaluated at run time.</span></span> <span data-ttu-id="b93c5-698">在这种情况下，包含在一个命名的参数<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>充当占位符的值的属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-698">In that case, you include a named parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property that acts as a placeholder for the value.</span></span> <span data-ttu-id="b93c5-699">然后添加具有匹配名称的参数，<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-699">You then add a parameter that has the matching name to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span>  
  
 <span data-ttu-id="b93c5-700">或者，可以设置<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>属性设置为`true`定义中的参数和<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-700">Alternatively, you can set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` and define the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span> <span data-ttu-id="b93c5-701">当<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>属性是`true`，无需包括中的命名的参数<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-701">When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, you do not have to include the named parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property.</span></span> <span data-ttu-id="b93c5-702">相反，<xref:System.Web.UI.WebControls.LinqDataSource>控件自动生成 Where 子句中的参数从<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-702">Instead, the <xref:System.Web.UI.WebControls.LinqDataSource> control automatically generates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> property.</span></span>  
  
 <span data-ttu-id="b93c5-703">有关如何筛选数据的详细信息，请参阅[演练： 选择和筛选数据子集使用 LinqDataSource 和 GridView 控件](http://msdn.microsoft.com/library/c1cca3e8-86e4-4e69-a29f-1c05b91f2205)。</span><span class="sxs-lookup"><span data-stu-id="b93c5-703">For more information about how to filter data, see [Walkthrough: Selecting and Filtering a Subset of Data with the LinqDataSource and GridView Controls](http://msdn.microsoft.com/library/c1cca3e8-86e4-4e69-a29f-1c05b91f2205).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-704">下面的示例演示如何从基于静态条件的查询返回的数据进行筛选。</span><span class="sxs-lookup"><span data-stu-id="b93c5-704">The following example shows how to filter the data returned from a query based on a static condition.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default5.aspx#5)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default5.aspx#5)]  
  
 <span data-ttu-id="b93c5-705">下面的示例演示如何基于用户在运行时提供的值对数据进行筛选。</span><span class="sxs-lookup"><span data-stu-id="b93c5-705">The following example shows how to filter the data based on a value that is provided by the user at run time.</span></span> <span data-ttu-id="b93c5-706">在此示例中<xref:System.Web.UI.WebControls.DropDownList>控件和一个<xref:System.Web.UI.WebControls.GridView>页上显示控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-706">In this example a <xref:System.Web.UI.WebControls.DropDownList> control and a <xref:System.Web.UI.WebControls.GridView> control are displayed on the page.</span></span> <span data-ttu-id="b93c5-707">当用户选择中的值之一<xref:System.Web.UI.WebControls.DropDownList>控件，<xref:System.Web.UI.WebControls.LinqDataSource>从控件中选择`Products`表具有的行`UserPrice`值等于所选的值。</span><span class="sxs-lookup"><span data-stu-id="b93c5-707">When the user selects one of the values in the <xref:System.Web.UI.WebControls.DropDownList> control, the <xref:System.Web.UI.WebControls.LinqDataSource> control selects from the `Products` table only rows that have `UserPrice` values equal to the selected value.</span></span> <span data-ttu-id="b93c5-708"><xref:System.Web.UI.WebControls.GridView>控件然后显示经过筛选的数据。</span><span class="sxs-lookup"><span data-stu-id="b93c5-708">The <xref:System.Web.UI.WebControls.GridView> control then displays the filtered data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default6.aspx#6)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default6.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhereParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection WhereParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WhereParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ WhereParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WhereParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.WhereParameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.WhereParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b93c5-709">获取用于创建 Where 子句的参数集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-709">Gets the collection of parameters that is used to create the Where clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b93c5-710">用于创建 <see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /> 属性中 Where 子句的参数的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b93c5-710">A collection of the parameters that are used to create the Where clause in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b93c5-711"><xref:System.Web.UI.WebControls.LinqDataSource>控件使用中的参数<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合创建 Where 子句在运行时。</span><span class="sxs-lookup"><span data-stu-id="b93c5-711">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection to create the Where clause at run time.</span></span> <span data-ttu-id="b93c5-712">您将参数添加到<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合时想要以编程方式将设置一个或多个条件在 Where 子句。</span><span class="sxs-lookup"><span data-stu-id="b93c5-712">You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection when you want to programmatically set one or more of the conditions in the Where clause.</span></span> <span data-ttu-id="b93c5-713">例如，可能会搜索数据库表中的记录的值相等的最后一个名称与<xref:System.Web.UI.WebControls.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-713">For example, you might search a database table for records with a last name equal to the value of a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="b93c5-714">在这种情况下，您将参数添加到<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>文本框值的集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-714">In that case, you add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection for the text box value.</span></span>  
  
 <span data-ttu-id="b93c5-715">如果不需要在运行时设置一个值，在 Where 子句中，您无需使用<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b93c5-715">If you do not have to set a value at run time in the Where clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span> <span data-ttu-id="b93c5-716">可以定义要在中检索的字段<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b93c5-716">You can define the fields to retrieve in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property.</span></span> <span data-ttu-id="b93c5-717">例如，若要从数据库表中返回其中`LastName`等于"Adams"在标记中，设置<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性设置为`'LastName = "Adams"'`不带任何参数。</span><span class="sxs-lookup"><span data-stu-id="b93c5-717">For example, to return values from a database table where `LastName` equals "Adams" in markup, set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to `'LastName = "Adams"'` without any parameters.</span></span>  
  
 <span data-ttu-id="b93c5-718">若要设置中的值<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合中，为每个参数指定一个名称，然后添加中的占位符<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性中的为该参数。</span><span class="sxs-lookup"><span data-stu-id="b93c5-718">To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for that parameter.</span></span> <span data-ttu-id="b93c5-719">在 Where 子句中，与每个参数名称的前面加上 @ 符号。</span><span class="sxs-lookup"><span data-stu-id="b93c5-719">In the Where clause, preface each parameter name with the @ symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b93c5-720">下面的示例演示如何使用<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合动态创建 Where 子句。</span><span class="sxs-lookup"><span data-stu-id="b93c5-720">The following example shows how to use the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection to dynamically create the Where clause.</span></span> <span data-ttu-id="b93c5-721"><xref:System.Web.UI.WebControls.LinqDataSource>控制返回中的值的所有记录`Price`列中的用户选择的值大于<xref:System.Web.UI.WebControls.DropDownList>控件。</span><span class="sxs-lookup"><span data-stu-id="b93c5-721">The <xref:System.Web.UI.WebControls.LinqDataSource> control returns all the records with a value in the `Price` column that is greater than the value selected by the user in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default6.aspx#6)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default6.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>