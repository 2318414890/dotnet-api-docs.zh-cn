<Type Name="ControlPropertyNameConverter" FullName="System.Web.UI.WebControls.ControlPropertyNameConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="558281f706ca4aafb9d504d75bc892c9ac568d54" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36383666" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlPropertyNameConverter : System.ComponentModel.StringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlPropertyNameConverter extends System.ComponentModel.StringConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ControlPropertyNameConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlPropertyNameConverter&#xA;Inherits StringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlPropertyNameConverter : System::ComponentModel::StringConverter" />
  <TypeSignature Language="F#" Value="type ControlPropertyNameConverter = class&#xA;    inherit StringConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.StringConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供检索当前控件的属性名列表的类型转换器。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlPropertyNameConverter>类派生自<xref:System.ComponentModel.StringConverter>类，并提供在设计时环境中的属性网格控件中显示的属性名称的列表。  
  
> [!CAUTION]
>  永远不应直接访问的类型转换器。 相反，通过调用适当的转换器<xref:System.ComponentModel.TypeDescriptor?displayProperty=nameWithType>类。 有关详细信息，请参阅中的示例<xref:System.ComponentModel.TypeConverter>基类。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlPropertyNameConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlPropertyNameConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ControlPropertyNameConverter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数不应直接调用。 永远不应直接访问的类型转换器。 相反，通过调用适当的转换器<xref:System.ComponentModel.TypeDescriptor?displayProperty=nameWithType>类。 有关详细信息，请参阅中的示例<xref:System.ComponentModel.TypeConverter>基类。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="controlPropertyNameConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用来提取有关从中调用此转换器的环境的附加信息。 此参数或其属性可以为 <see langword="null" />。</param>
        <summary>与格式上下文一起提供时，在实现 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 的设计器中返回控件的属性名集合。</summary>
        <returns>
          <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />，包含表示当前控件的属性名的一组字符串。 如果当前控件为 <see langword="null" />，则返回一个空集合。 如果 <paramref name="context" /> 参数为 <see langword="null" />，则返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A>方法返回<xref:System.ComponentModel.TypeConverter.StandardValuesCollection>集合，其中包含一组的字符串表示的当前控件的属性的名称。  
  
 使用`context`参数提取有关从中调用该转换器的设计时环境的附加信息。 此参数可以为`null`，和上下文对象上的属性也可能返回`null`。 如果`context`参数是`null`，此方法返回`null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="controlPropertyNameConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用来提取有关从中调用此转换器的环境的附加信息。 此参数或其属性可以为 <see langword="null" />。</param>
        <summary>使用指定的上下文返回一个值，该值指示由 <see cref="Overload:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues" /> 方法返回的标准值的集合是否是唯一的可能值列表。</summary>
        <returns>所有情况下都为 <see langword="false" />，表示列表不是唯一的。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive%2A>方法始终返回`false`以指示返回的属性值列表<xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A>方法不是可能的值的独占列表。  
  
 使用 `context` 参数提取有关调用此转换器的环境的附加信息。 此参数可以为`null`，和上下文对象上的属性也可能返回`null`。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>如果你想要转换的类型支持标准值，重写此方法。</para>
        </block>
        <altmember cref="Overload:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="controlPropertyNameConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用来提取有关从中调用此转换器的环境的附加信息。 此参数或其属性可以为 <see langword="null" />。</param>
        <summary>获取一个值，该值指示此对象是否支持可使用指定的上下文从列表中选择的标准值集。</summary>
        <returns>如果 <paramref name="context" /> 参数不为 <see langword="true" />，则为 <see langword="null" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported%2A>方法返回一个值，该值指示此对象是否支持标准值集。  
  
 `context`参数提取有关从中调用该转换器的设计时环境的其他信息。 此参数可以为`null`，和上下文对象上的属性也可能返回`null`。 如果`context`参数是`null`，此方法返回`false`。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>如果你想要转换的类型支持标准值，重写此方法。</para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
  </Members>
</Type>