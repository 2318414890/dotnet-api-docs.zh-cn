<Type Name="RouteParameter" FullName="System.Web.UI.WebControls.RouteParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e9b456df7ff36bcf280140ea98cfe78cf7463550" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598391" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RouteParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.RouteParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteParameter : System::Web::UI::WebControls::Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("RouteKey")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>将 URL 段的值绑定到参数对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你实现 Web 站点中的 ASP.NET 路由，则可以使用<xref:System.Web.UI.WebControls.RouteParameter>对象以将请求的 url 段的值绑定到一个数据库查询或命令。 你可以声明<xref:System.Web.UI.WebControls.RouteParameter>标记数据中的对象源控件或<xref:System.Web.UI.WebControls.QueryExtender>控件。  
  
 Visual Studio Web 站点项目与源代码是可用本主题可以附带：[下载](http://go.microsoft.com/fwlink/?LinkId=168640)。  
  
   
  
## Examples  
 此部分中的示例演示如何使用<xref:System.Web.UI.WebControls.RouteParameter>标记将 URL 参数值传递给为数据指定的查询中的对象源控件。  
  
 下面的示例演示代码中定义一个名为的路由的 Global.asax 页`ProductRoute`。 路由定义名为 URL 参数`productname`。 路由还定义了一个可选的通用参数名为`culture`，这可以用于指定在其中显示产品说明的语言。 Product.aspx 页处理此路由的请求。  
  
  
  
  
  
 下面的示例演示 Product.aspx 页。 页包含<xref:System.Web.UI.WebControls.SqlDataSource>具有需要两个参数，一个用于该产品的名称和产品说明的语言之一的查询的控件。 <xref:System.Web.UI.WebControls.RouteParameter> 对象用于提供查询参数的值。 路由 URL 参数的值`productname`传递给查询参数`@productname`。 路由 URL 参数的值`culture`传递给查询参数`@culture`。 如果路由 URL 不包含 URL 参数`culture`，使用默认值为"en"。  
  
  
  
 下面的示例显示名为 ProductLinks.aspx，其中包含链接到的使用路由 Url Product.aspx 网页的超链接的页。 这些超链接使用`RouteUrl`表达式来创建路由 Url。 第一个链接不包括`culture`路由参数。 因此，"en"中定义的默认值<xref:System.Web.UI.WebControls.RouteParameter>对象`@culture`将在查询中使用查询参数。 第二个链接提供`culture`"fr"，这会导致用法语显示的说明的值。 有关如何使用`RouteUrl`表达式，请参阅[如何： 从路由构造 Url](http://msdn.microsoft.com/library/1ffd4085-71f6-4822-be8f-f682ca638650)。  
  
  
  
 单击第一个超链接时，请参阅中的以下值的 Product.aspx 页<xref:System.Web.UI.WebControls.GridView>控件：  
  
|ProductID|name|描述|  
|---------------|----------|-----------------|  
|`994`|`LL Bottom Bracket`|`Chromoly steel.`|  
  
 单击第二个超链接时，请参阅中的以下值<xref:System.Web.UI.WebControls.GridView>控件：  
  
|ProductID|name|描述|  
|---------------|----------|-----------------|  
|`994`|`LL Bottom Bracket`|`Acier chromé.`|  
  
 若要运行此示例中，添加两个.aspx 页和代码在 Global.asax 文件中的 ASP.NET 网站或 Web 应用程序定义一个名为的连接字符串`AdventureWorksLTConnectionString`AdventureWorksLT 数据库。 有关如何设置包含到 AdventureWorksLT 数据库的连接的信息，请参阅[如何： 设置 AdventureWorksLT 示例数据库的 ASP.NET 开发](http://msdn.microsoft.com/library/2baad633-9d63-49cc-a6b2-917cafd35356)。  
  
 有关 ASP.NET 路由的详细信息，请参阅[ASP.NET 路由](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.RouteParameter" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RouteParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.RouteParameter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此构造函数方法来初始化<xref:System.Web.UI.WebControls.RouteParameter>对象，并将默认值。 属性初始化为以下值：  
  
-   <xref:System.Web.UI.WebControls.RouteParameter.RouteKey%2A> 设置为空字符串 ("")。  
  
-   <xref:System.Web.UI.WebControls.Parameter.Name%2A> 被设置为空字符串。  
  
-   将 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 设置为 <xref:System.TypeCode.Empty>。  
  
-   将 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 设置为 <xref:System.Data.ParameterDirection.Input>。  
  
-   将 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 设置为 `null`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RouteParameter (System.Web.UI.WebControls.RouteParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.RouteParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RouteParameter.#ctor(System.Web.UI.WebControls.RouteParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As RouteParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RouteParameter(System::Web::UI::WebControls::RouteParameter ^ original);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.RouteParameter" />
      </Parameters>
      <Docs>
        <param name="original">一个对象，从它初始化当前实例。</param>
        <summary>通过使用指定实例的值，初始化 <see cref="T:System.Web.UI.WebControls.RouteParameter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数用于克隆<xref:System.Web.UI.WebControls.RouteParameter>实例。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteParameter (string name, string routeKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string routeKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RouteParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, routeKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteParameter(System::String ^ name, System::String ^ routeKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="routeKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数实例的名称。</param>
        <param name="routeKey">包含参数值的路由段的名称。</param>
        <summary>通过使用参数的指定名称以及路由数据的指定键，初始化 <see cref="T:System.Web.UI.WebControls.RouteParameter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteParameter (string name, System.Data.DbType dbType, string routeKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string routeKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RouteParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ routeKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="routeKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数实例的名称。</param>
        <param name="dbType">参数实例的数据库类型。</param>
        <param name="routeKey">包含参数值的路由段的名称。</param>
        <summary>通过使用参数的指定名称和数据库类型以及使用路由数据的指定键，初始化 <see cref="T:System.Web.UI.WebControls.RouteParameter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteParameter (string name, TypeCode type, string routeKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string routeKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RouteParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, routeKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteParameter(System::String ^ name, TypeCode type, System::String ^ routeKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="routeKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数实例的名称。</param>
        <param name="type">该参数所表示的类型。</param>
        <param name="routeKey">包含参数值的路由段的名称。</param>
        <summary>通过使用参数的指定名称和类型以及使用路由数据的指定键，初始化 <see cref="T:System.Web.UI.WebControls.RouteParameter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RouteParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前 <see cref="T:System.Web.UI.WebControls.RouteParameter" /> 实例的副本。</summary>
        <returns>一个对象，它是当前对象的副本。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RouteParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">请求的当前 <see cref="T:System.Web.HttpContext" /> 实例。</param>
        <param name="control">参数所绑定到的控件。</param>
        <summary>计算请求 URL，并返回参数的值。</summary>
        <returns>参数的当前值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteKey">
      <MemberSignature Language="C#" Value="public string RouteKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RouteKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RouteParameter.RouteKey" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RouteKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置从中检索路由参数值的路由段的名称。</summary>
        <value>包含参数值的路由段的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在定义路由模式时，你可以纳入充当 Web 请求 URL 中的实际值的占位符的段。 通过将它们括在大括号来定义占位符 (`{`和`}`)。 例如，采用格式路由模式`blog/{action}/{entry}`包含名为的占位符`action`和`entry`。 若要检索的占位符值，设置<xref:System.Web.UI.WebControls.RouteParameter.RouteKey%2A>属性的名称的占位符和调用<xref:System.Web.UI.WebControls.RouteParameter.Evaluate%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>