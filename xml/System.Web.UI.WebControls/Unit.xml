<Type Name="Unit" FullName="System.Web.UI.WebControls.Unit">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="55a3ede9ee67a01c79c10d33fdfe26096f7c3716" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378908" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Unit" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Unit extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Unit" />
  <TypeSignature Language="VB.NET" Value="Public Structure Unit" />
  <TypeSignature Language="C++ CLI" Value="public value class Unit" />
  <TypeSignature Language="F#" Value="type Unit = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.UnitConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示长度度量。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Unit>结构表示可以用任何 HTML 兼容的大小单位表示的长度度量。 <xref:System.Web.UI.WebControls.UnitType> 枚举列出可以表示的度量单位。 <xref:System.Web.UI.WebControls.Unit>由属性如`BorderWidth`和`Height`来表示的长度或宽度的属性。 例如，你可以设置<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>到 Web 服务器控件的属性<xref:System.Web.UI.WebControls.Unit>表示 5 个像素。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Unit>类可以表示仅在-32768 到 32767 之间的值。  
  
 使用<xref:System.Web.UI.WebControls.Unit.Value%2A>属性来确定度量值的长度。 使用确定的度量单位<xref:System.Web.UI.WebControls.Unit.Type%2A>属性。 你可以将其他数据类型转换<xref:System.Web.UI.WebControls.Unit>使用<xref:System.Web.UI.WebControls.Unit.Parse%2A>， <xref:System.Web.UI.WebControls.Unit.Percentage%2A>， <xref:System.Web.UI.WebControls.Unit.Pixel%2A>，和<xref:System.Web.UI.WebControls.Unit.Point%2A>方法。  
  
 有关的实例的初始属性值的列表<xref:System.Web.UI.WebControls.Unit>，请参阅<xref:System.Web.UI.WebControls.Unit>构造函数。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.Style>要同时更改多个控件的样式属性的对象。 每次之一<xref:System.Web.UI.WebControls.Style>属性值发生更改，每个控件必须调用其<xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A>方法。 请注意，并非所有控件都支持所示的所有属性。 如果控件不支持的特定属性，属性值发生更改时，也不会更改控件的外观。  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.UnitType" />
    <altmember cref="P:System.Web.UI.WebControls.Unit.Value" />
    <altmember cref="P:System.Web.UI.WebControls.Unit.Type" />
    <altmember cref="M:System.Web.UI.WebControls.Unit.Parse(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.Unit.Percentage(System.Double)" />
    <altmember cref="M:System.Web.UI.WebControls.Unit.Pixel(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.Unit.Point(System.Int32)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Unit" /> 结构的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Unit (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Unit(double value);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Unit : double -&gt; System.Web.UI.WebControls.Unit" Usage="new System.Web.UI.WebControls.Unit value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">表示 <see cref="T:System.Web.UI.WebControls.Unit" /> 的长度（以像素为单位）的双精度浮点数字。</param>
        <summary>用指定的双精度浮点数字初始化 <see cref="T:System.Web.UI.WebControls.Unit" /> 结构的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数来创建和初始化的新实例<xref:System.Web.UI.WebControls.Unit>结构使用指定的双精度浮点数。  
  
 下表显示的实例的初始属性值<xref:System.Web.UI.WebControls.Unit>。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.Unit.Type%2A>|<xref:System.Web.UI.WebControls.UnitType.Pixel>|  
|<xref:System.Web.UI.WebControls.Unit.Value%2A>|由 `value` 指定的值。|  
  
> [!CAUTION]
>  如果`value`是不介于-32768 到 32767 之间，会引发异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="value" /> 不在 -32768 和 32767 之间。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Unit.Value" />
        <altmember cref="P:System.Web.UI.WebControls.Unit.Type" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Unit (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Unit(int value);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Unit : int -&gt; System.Web.UI.WebControls.Unit" Usage="new System.Web.UI.WebControls.Unit value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">表示 <see cref="T:System.Web.UI.WebControls.Unit" /> 的长度（以像素为单位）的 32 位有符号整数。</param>
        <summary>用指定的 32 位有符号整数初始化 <see cref="T:System.Web.UI.WebControls.Unit" /> 结构的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数来创建和初始化的新实例<xref:System.Web.UI.WebControls.Unit>结构使用指定的 32 位有符号的整数。  
  
 下表显示的实例的初始属性值<xref:System.Web.UI.WebControls.Unit>。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.Unit.Type%2A>|<xref:System.Web.UI.WebControls.UnitType.Pixel>|  
|<xref:System.Web.UI.WebControls.Unit.Value%2A>|由 `value` 指定的值。|  
  
> [!CAUTION]
>  如果`value`是不介于-32768 到 32767 之间，会引发异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="value" /> 不在 -32768 和 32767 之间。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Unit.Value" />
        <altmember cref="P:System.Web.UI.WebControls.Unit.Type" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Unit (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Unit(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Unit : string -&gt; System.Web.UI.WebControls.Unit" Usage="new System.Web.UI.WebControls.Unit value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">表示 <see cref="T:System.Web.UI.WebControls.Unit" /> 的长度的字符串。</param>
        <summary>用指定的长度初始化 <see cref="T:System.Web.UI.WebControls.Unit" /> 结构的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数来创建和初始化的新实例<xref:System.Web.UI.WebControls.Unit>结构使用指定的长度。 在两个部分，长度的值和长度的单位类型中指定了长度。 例如，"200 Cm"表示的长度为 200 厘米。 你可以使用任何有效的 CSS 符合单元表达式。  
  
 下表列出了常用的单位类型。  
  
|单位类型|描述|  
|---------------|-----------------|  
|`Pixel`|以像素为单位的长度。|  
|`Point`|以磅为单位的长度。 一点表示 1/72 英寸。|  
|`Inch`|以英寸为单位的长度。|  
|`Mm`|以毫米为单位的长度。|  
|`Cm`|厘米长度。|  
|`Percentage`|长度，作为父元素的百分比。|  
  
 下表显示的实例的初始属性值<xref:System.Web.UI.WebControls.Unit>。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.Unit.Type%2A>|中指定的单位类型`value`。|  
|<xref:System.Web.UI.WebControls.Unit.Value%2A>|中指定的值`value`。|  
  
> [!CAUTION]
>  如果`value`是不介于-32768 到 32767 之间，会引发异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的长度不在 -32768 和 32767 之间。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="value" /> 不是符合 CSS 的有效单位表达式。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Unit.Value" />
        <altmember cref="P:System.Web.UI.WebControls.Unit.Type" />
        <altmember cref="T:System.Web.UI.WebControls.UnitType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Unit (double value, System.Web.UI.WebControls.UnitType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value, valuetype System.Web.UI.WebControls.UnitType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.#ctor(System.Double,System.Web.UI.WebControls.UnitType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double, type As UnitType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Unit(double value, System::Web::UI::WebControls::UnitType type);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Unit : double * System.Web.UI.WebControls.UnitType -&gt; System.Web.UI.WebControls.Unit" Usage="new System.Web.UI.WebControls.Unit (value, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.UnitType" />
      </Parameters>
      <Docs>
        <param name="value">双精度浮点数，表示 <see cref="T:System.Web.UI.WebControls.Unit" /> 的长度。</param>
        <param name="type">
          <see cref="T:System.Web.UI.WebControls.UnitType" /> 枚举值之一。</param>
        <summary>用指定的双精度浮点数字和 <see cref="T:System.Web.UI.WebControls.Unit" /> 初始化 <see cref="T:System.Web.UI.WebControls.UnitType" /> 结构的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数来创建和初始化的新实例<xref:System.Web.UI.WebControls.Unit>结构使用指定的双精度浮点数和<xref:System.Web.UI.WebControls.UnitType>。  
  
 下表显示的实例的初始属性值<xref:System.Web.UI.WebControls.Unit>。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.Unit.Type%2A>|`type` 的值。|  
|<xref:System.Web.UI.WebControls.Unit.Value%2A>|由 `value` 指定的值。|  
  
> [!CAUTION]
>  如果`value`是不介于-32768 到 32767 之间，会引发异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="value" /> 不在 -32768 和 32767 之间。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Unit.Value" />
        <altmember cref="P:System.Web.UI.WebControls.Unit.Type" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Unit (string value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.#ctor(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Unit(System::String ^ value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Unit : string * System.Globalization.CultureInfo -&gt; System.Web.UI.WebControls.Unit" Usage="new System.Web.UI.WebControls.Unit (value, culture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">表示 <see cref="T:System.Web.UI.WebControls.Unit" /> 的长度的字符串。</param>
        <param name="culture">表示区域性的 <see cref="T:System.Globalization.CultureInfo" />。</param>
        <summary>用指定的长度和 <see cref="T:System.Web.UI.WebControls.Unit" /> 初始化 <see cref="T:System.Globalization.CultureInfo" /> 结构的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数来创建和初始化的新实例<xref:System.Web.UI.WebControls.Unit>结构使用指定的长度和<xref:System.Globalization.CultureInfo?displayProperty=nameWithType>。 在两个部分，长度的值和长度的单位类型中指定了长度。 例如，"200 Cm"表示的长度为 200 厘米。 你可以使用任何有效的 CSS 符合单元表达式。  
  
 下表列出了常用的单位类型。  
  
|单位类型|描述|  
|---------------|-----------------|  
|`Pixel`|以像素为单位的长度。|  
|`Point`|以磅为单位的长度。 一点表示 1/72 英寸。|  
|`Inch`|以英寸为单位的长度。|  
|`Mm`|以毫米为单位的长度。|  
|`Cm`|厘米长度。|  
|`Percentage`|长度，作为父元素的百分比。|  
  
 下表显示的实例的初始属性值<xref:System.Web.UI.WebControls.Unit>。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.Unit.Type%2A>|中指定的单位类型`value`。|  
|<xref:System.Web.UI.WebControls.Unit.Value%2A>|中指定的值`value`。|  
  
> [!CAUTION]
>  如果`value`是不介于-32768 到 32767 之间，会引发异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的长度不在 -32768 和 32767 之间。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="value" /> 不是符合 CSS 的有效单位表达式。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Unit.Value" />
        <altmember cref="P:System.Web.UI.WebControls.Unit.Type" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.Unit Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Web.UI.WebControls.Unit Empty" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Unit.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As Unit " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::Unit Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Web.UI.WebControls.Unit" Usage="System.Web.UI.WebControls.Unit.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示空的 <see cref="T:System.Web.UI.WebControls.Unit" />。 此字段为只读。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="unit.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要用于比较的对象。</param>
        <summary>将此 <see cref="T:System.Web.UI.WebControls.Unit" /> 与指定的对象进行比较。</summary>
        <returns>如果从中调用此方法的 <see cref="T:System.Web.UI.WebControls.Unit" /> 等于指定的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Unit.Equals%2A>方法来比较<xref:System.Web.UI.WebControls.Unit>与指定的对象从调用此方法， `obj`。 对于两个相等的对象，它们必须具有相同的 <xref:System.Web.UI.WebControls.Unit.Type%2A> 和 <xref:System.Web.UI.WebControls.Unit.Value%2A> 属性值。  
  
> [!NOTE]
>  指定的对象`obj`必须通过<xref:System.Web.UI.WebControls.Unit>为了成功进行比较的类型对象。 如果对象是`null`，`false`返回。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="unit.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回此实例的哈希代码。</summary>
        <returns>一个 32 位带符号整数，它是此实例的哈希代码。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Unit.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Web.UI.WebControls.Unit.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.Unit" /> 是否为空。</summary>
        <value>如果 <see langword="true" /> 为空，则为 <see cref="T:System.Web.UI.WebControls.Unit" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Unit.IsEmpty%2A>属性来确定是否<xref:System.Web.UI.WebControls.Unit>为空。 <xref:System.Web.UI.WebControls.Unit>为空如果<xref:System.Web.UI.WebControls.Unit.Type%2A>属性包含的枚举值为 0。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Unit.Type" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Web.UI.WebControls.Unit left, System.Web.UI.WebControls.Unit right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Web.UI.WebControls.Unit left, valuetype System.Web.UI.WebControls.Unit right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.op_Equality(System.Web.UI.WebControls.Unit,System.Web.UI.WebControls.Unit)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Unit, right As Unit) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Web::UI::WebControls::Unit left, System::Web::UI::WebControls::Unit right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Web.UI.WebControls.Unit * System.Web.UI.WebControls.Unit -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Web.UI.WebControls.Unit" />
        <Parameter Name="right" Type="System.Web.UI.WebControls.Unit" />
      </Parameters>
      <Docs>
        <param name="left">运算符左边的 <see cref="T:System.Web.UI.WebControls.Unit" />。</param>
        <param name="right">运算符右边的 <see cref="T:System.Web.UI.WebControls.Unit" />。</param>
        <summary>比较两个 <see cref="T:System.Web.UI.WebControls.Unit" /> 对象以确定它们是否相等。</summary>
        <returns>如果两个 <see cref="T:System.Web.UI.WebControls.Unit" /> 对象相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此运算符比较两个<xref:System.Web.UI.WebControls.Unit>对象是否相等。 对于两个相等的对象，它们必须具有相同的 <xref:System.Web.UI.WebControls.Unit.Type%2A> 和 <xref:System.Web.UI.WebControls.Unit.Value%2A> 属性值。  
  
 此运算符的等效方法是 <xref:System.Web.UI.WebControls.Unit.Equals%28System.Object%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Web.UI.WebControls.Unit (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Web.UI.WebControls.Unit op_Implicit(int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.op_Implicit(System.Int32)~System.Web.UI.WebControls.Unit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (n As Integer) As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Web::UI::WebControls::Unit(int n);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; System.Web.UI.WebControls.Unit" Usage="System.Web.UI.WebControls.Unit.op_Implicit n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">表示 <see cref="T:System.Web.UI.WebControls.Unit" /> 的长度的 32 位有符号整数。</param>
        <summary>从指定的 32 位无符号整数隐式创建 <see cref="T:System.Web.UI.WebControls.Unit" /> 类型的 <see cref="F:System.Web.UI.WebControls.UnitType.Pixel" />。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.Unit" /> 类型的 <see cref="F:System.Web.UI.WebControls.UnitType.Pixel" />，它表示 <paramref name="n" /> 参数指定的 32 位无符号整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[此运算符的等效方法是 <xref:System.Web.UI.WebControls.Unit.Pixel%28System.Int32%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Web.UI.WebControls.Unit left, System.Web.UI.WebControls.Unit right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Web.UI.WebControls.Unit left, valuetype System.Web.UI.WebControls.Unit right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.op_Inequality(System.Web.UI.WebControls.Unit,System.Web.UI.WebControls.Unit)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Unit, right As Unit) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Web::UI::WebControls::Unit left, System::Web::UI::WebControls::Unit right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Web.UI.WebControls.Unit * System.Web.UI.WebControls.Unit -&gt; bool" Usage="System.Web.UI.WebControls.Unit.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Web.UI.WebControls.Unit" />
        <Parameter Name="right" Type="System.Web.UI.WebControls.Unit" />
      </Parameters>
      <Docs>
        <param name="left">运算符左边的 <see cref="T:System.Web.UI.WebControls.Unit" />。</param>
        <param name="right">运算符右边的 <see cref="T:System.Web.UI.WebControls.Unit" />。</param>
        <summary>比较两个 <see cref="T:System.Web.UI.WebControls.Unit" /> 对象以确定它们是否不相等。</summary>
        <returns>如果 <see cref="T:System.Web.UI.WebControls.Unit" /> 对象不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此运算符比较两个<xref:System.Web.UI.WebControls.Unit>对象是否不相等。 对于不相等的对象，它们必须具有不同的值<xref:System.Web.UI.WebControls.Unit.Type%2A>属性或<xref:System.Web.UI.WebControls.Unit.Value%2A>属性。  
  
 此运算符的等效方法是 <xref:System.Web.UI.WebControls.Unit.Equals%28System.Object%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将字符串转换为 <see cref="T:System.Web.UI.WebControls.Unit" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Web.UI.WebControls.Unit Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Web.UI.WebControls.Unit Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::WebControls::Unit Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Web.UI.WebControls.Unit" Usage="System.Web.UI.WebControls.Unit.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">要转换的字符串。</param>
        <summary>将指定字符串转换为 <see cref="T:System.Web.UI.WebControls.Unit" />。</summary>
        <returns>表示指定字符串的 <see cref="T:System.Web.UI.WebControls.Unit" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Unit.Parse%2A>静态方法，用于将转换指定的字符串`s`参数<xref:System.Web.UI.WebControls.Unit>。  
  
> [!NOTE]
>  使用此方法时的度量单位是<xref:System.Web.UI.WebControls.UnitType.Pixel>。  
  
   
  
## Examples  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.UnitType" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Percentage(System.Double)" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Pixel(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Point(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Web.UI.WebControls.Unit Parse (string s, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Web.UI.WebControls.Unit Parse(string s, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.Parse(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, culture As CultureInfo) As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::WebControls::Unit Parse(System::String ^ s, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.CultureInfo -&gt; System.Web.UI.WebControls.Unit" Usage="System.Web.UI.WebControls.Unit.Parse (s, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="s">要转换的字符串。</param>
        <param name="culture">表示区域性的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
        <summary>将指定的字符串和 <see cref="T:System.Globalization.CultureInfo" /> 转换为 <see cref="T:System.Web.UI.WebControls.Unit" />。</summary>
        <returns>表示指定字符串的 <see cref="T:System.Web.UI.WebControls.Unit" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Unit.Parse%2A>静态方法，用于将转换指定的字符串`s`到<xref:System.Web.UI.WebControls.Unit>中由指定的区域性`culture`。  
  
> [!NOTE]
>  使用此方法时的度量单位是<xref:System.Web.UI.WebControls.UnitType.Pixel>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Web.UI.WebControls.UnitType" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Percentage(System.Double)" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Pixel(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Point(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Percentage">
      <MemberSignature Language="C#" Value="public static System.Web.UI.WebControls.Unit Percentage (double n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Web.UI.WebControls.Unit Percentage(float64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.Percentage(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Percentage (n As Double) As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::WebControls::Unit Percentage(double n);" />
      <MemberSignature Language="F#" Value="static member Percentage : double -&gt; System.Web.UI.WebControls.Unit" Usage="System.Web.UI.WebControls.Unit.Percentage n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="n">表示 <see cref="T:System.Web.UI.WebControls.Unit" /> 的长度的双精度浮点数。</param>
        <summary>从指定的双精度浮点数创建 <see cref="T:System.Web.UI.WebControls.Unit" /> 类型的 <see cref="F:System.Web.UI.WebControls.UnitType.Percentage" />。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.Unit" /> 类型的 <see cref="F:System.Web.UI.WebControls.UnitType.Percentage" />，它表示双精度浮点数指定的长度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Unit.Percentage%2A>静态方法，用于创建<xref:System.Web.UI.WebControls.Unit>类型的<xref:System.Web.UI.WebControls.UnitType.Percentage>，它表示指定的长度`n`参数。 例如，如果指定 80 作为*n*并使用返回的单元来设置<xref:System.Web.UI.WebControls.WebControl.Height%2A>的 Web 服务器控件，`height`属性设置为 80%。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Unit>类可以表示仅在-32768 到 32767 之间的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.UnitType" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Parse(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Pixel(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Point(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Pixel">
      <MemberSignature Language="C#" Value="public static System.Web.UI.WebControls.Unit Pixel (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Web.UI.WebControls.Unit Pixel(int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.Pixel(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pixel (n As Integer) As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::WebControls::Unit Pixel(int n);" />
      <MemberSignature Language="F#" Value="static member Pixel : int -&gt; System.Web.UI.WebControls.Unit" Usage="System.Web.UI.WebControls.Unit.Pixel n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">表示 <see cref="T:System.Web.UI.WebControls.Unit" /> 的长度的 32 位有符号整数。</param>
        <summary>从指定的 32 位有符号整数创建 <see cref="T:System.Web.UI.WebControls.Unit" /> 类型的 <see cref="F:System.Web.UI.WebControls.UnitType.Pixel" />。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.Unit" /> 类型的 <see cref="F:System.Web.UI.WebControls.UnitType.Pixel" />，它表示 <paramref name="n" /> 参数指定的长度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Unit.Pixel%2A>静态方法，用于创建<xref:System.Web.UI.WebControls.Unit>类型的<xref:System.Web.UI.WebControls.UnitType.Pixel>，它表示指定的长度`n`参数。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Unit>类可以表示仅在-32768 到 32767 之间的值。  
  
   
  
## Examples  
 [!code-aspx-csharp[TableCell#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCell/CS/tablecellcs.aspx#1)]
 [!code-aspx-vb[TableCell#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCell/VB/tablecellvb.aspx#1)]  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.UnitType" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Parse(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Percentage(System.Double)" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Point(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Point">
      <MemberSignature Language="C#" Value="public static System.Web.UI.WebControls.Unit Point (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Web.UI.WebControls.Unit Point(int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.Point(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Point (n As Integer) As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::WebControls::Unit Point(int n);" />
      <MemberSignature Language="F#" Value="static member Point : int -&gt; System.Web.UI.WebControls.Unit" Usage="System.Web.UI.WebControls.Unit.Point n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">表示 <see cref="T:System.Web.UI.WebControls.Unit" /> 的长度的 32 位有符号整数。</param>
        <summary>从指定的 32 位有符号整数创建 <see cref="T:System.Web.UI.WebControls.Unit" /> 类型的 <see cref="F:System.Web.UI.WebControls.UnitType.Point" />。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.Unit" /> 类型的 <see cref="F:System.Web.UI.WebControls.UnitType.Point" />，它表示 32 位有符号整数指定的长度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Unit.Point%2A>静态方法，用于创建<xref:System.Web.UI.WebControls.Unit>类型的<xref:System.Web.UI.WebControls.UnitType.Point>，它表示指定的长度`n`参数。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Unit>类可以表示仅在-32768 到 32767 之间的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.UnitType" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Parse(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Pixel(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.Unit.Percentage(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将 <see cref="T:System.Web.UI.WebControls.Unit" /> 转换为等效字符串。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="unit.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="T:System.Web.UI.WebControls.Unit" /> 转换为 <see cref="T:System.String" />。</summary>
        <returns>表示此 <see cref="T:System.Web.UI.WebControls.Unit" /> 的 <see cref="T:System.String" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.ToString(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.ToString : System.Globalization.CultureInfo -&gt; string" Usage="unit.ToString culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">表示区域性的 <see cref="T:System.Globalization.CultureInfo" />。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.Unit" /> 转换为指定区域性中的等效字符串。</summary>
        <returns>一个 <see cref="T:System.String" />，它表示由 <paramref name="culture" /> 指定的区域性中的此 <see cref="T:System.Web.UI.WebControls.Unit" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Unit.ToString%2A>方法将转换<xref:System.Web.UI.WebControls.Unit>，调用此方法从字符串到指定的区域性中的等效。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Unit.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="unit.ToString formatProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">
          <see cref="T:System.IFormatProvider" /> 接口实现，提供区域性特定的格式设置信息。</param>
        <summary>使用指定的格式提供程序将 <see cref="T:System.Web.UI.WebControls.Unit" /> 转换为等效字符串。</summary>
        <returns>一个 <see cref="T:System.String" />，它表示由 <paramref name="formatProvider" /> 指定的格式的此 <see cref="T:System.Web.UI.WebControls.Unit" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Unit.ToString%2A>方法返回一个单元进行格式设置的字符串表示<xref:System.Web.UI.WebControls.Unit.Value%2A>和表示的单位的缩写<xref:System.Web.UI.WebControls.Unit.Type%2A>。 下表列出<xref:System.Web.UI.WebControls.UnitType>值和其相应的缩写。  
  
|单位类型|缩写|  
|---------------|------------------|  
|<xref:System.Web.UI.WebControls.UnitType.Pixel>|px|  
|<xref:System.Web.UI.WebControls.UnitType.Point>|pt|  
|<xref:System.Web.UI.WebControls.UnitType.Pica>|pc|  
|<xref:System.Web.UI.WebControls.UnitType.Inch>|中的|  
|<xref:System.Web.UI.WebControls.UnitType.Mm>|mm|  
|<xref:System.Web.UI.WebControls.UnitType.Cm>|cm|  
|<xref:System.Web.UI.WebControls.UnitType.Percentage>|%|  
|<xref:System.Web.UI.WebControls.UnitType.Em>|em|  
|<xref:System.Web.UI.WebControls.UnitType.Ex>|ex|  
  
 使用`formatProvider`指定用于设置格式的区域性特定信息<xref:System.Web.UI.WebControls.Unit.Value%2A>。 如果`formatProvider`是`null`，使用默认的格式化字符串的数值部分<xref:System.Globalization.NumberFormatInfo>对象设置为当前区域性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.UnitType" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.UnitType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.UnitType Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Unit.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As UnitType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::UnitType Type { System::Web::UI::WebControls::UnitType get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Web.UI.WebControls.UnitType" Usage="System.Web.UI.WebControls.Unit.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.UnitType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.Unit" /> 的单位类型。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.UnitType" /> 枚举值之一。 默认值为 <see cref="F:System.Web.UI.WebControls.UnitType.Pixel" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Unit.Type%2A>属性来确定度量单位，<xref:System.Web.UI.WebControls.Unit>表示，例如像素为单位。 <xref:System.Web.UI.WebControls.Unit.Type%2A>由其中一个表示属性<xref:System.Web.UI.WebControls.UnitType>枚举值。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.Unit.IsEmpty%2A>属性设置为`true`、<xref:System.Web.UI.WebControls.UnitType.Point>返回枚举值。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.UnitType" />
        <altmember cref="P:System.Web.UI.WebControls.Unit.Value" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public double Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Unit.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Value { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : double" Usage="System.Web.UI.WebControls.Unit.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.Unit" /> 的长度。</summary>
        <value>表示 <see cref="T:System.Web.UI.WebControls.Unit" /> 的长度的双精度浮点数字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Unit.Value%2A>属性来确定的长度<xref:System.Web.UI.WebControls.Unit>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Unit.Type" />
      </Docs>
    </Member>
  </Members>
</Type>