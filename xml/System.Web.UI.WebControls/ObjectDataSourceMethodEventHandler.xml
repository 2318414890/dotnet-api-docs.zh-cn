<Type Name="ObjectDataSourceMethodEventHandler" FullName="System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6b29eed91f35df76030c1d4444905847777474ec" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37591112" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ObjectDataSourceMethodEventHandler(object sender, ObjectDataSourceMethodEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ObjectDataSourceMethodEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ObjectDataSourceMethodEventHandler(sender As Object, e As ObjectDataSourceMethodEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ObjectDataSourceMethodEventHandler(System::Object ^ sender, ObjectDataSourceMethodEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceMethodEventHandler = delegate of obj * ObjectDataSourceMethodEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">事件的源，即 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />。</param>
    <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />。</param>
    <summary>表示将对 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" /> 控件的以下事件进行处理的方法：<see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />、<see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />、<see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" /> 或 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>， <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>， <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>，或<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>的事件<xref:System.Web.UI.WebControls.ObjectDataSource>控制可以处理用于确定由调用的方法的参数<xref:System.Web.UI.WebControls.ObjectDataSource>控件。 有关详情，请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>。  
  
 创建 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> 委托时，需要标识将要处理该事件的方法。 若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。 除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。 有关事件处理程序委托的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>控件与业务对象和一个<xref:System.Web.UI.WebControls.DetailsView>控件插入数据。 第二个代码示例提供了第一个代码示例使用示例中间层业务对象。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>控件与业务对象和一个<xref:System.Web.UI.WebControls.DetailsView>控件插入数据。 最初，<xref:System.Web.UI.WebControls.DetailsView>显示一个新`NorthwindEmployee`记录，以及自动生成**插入**按钮。 数据输入到的字段后<xref:System.Web.UI.WebControls.DetailsView>控件中，单击**插入**按钮，并<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>属性将确定哪种方法执行<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>操作。  
  
 在此示例中，`UpdateEmployeeInfo`方法用于执行 insert; 但是，它需要`NorthwindEmployee`参数以插入数据。 出于此原因，集合的字符串<xref:System.Web.UI.WebControls.DetailsView>控件传递自动是不够的。 `NorthwindEmployeeInserting`委托<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>处理对象<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>事件并使你能够操作前的输入的参数<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>操作继续进行。 因为`UpdateEmployeeInfo`方法要求`NorthwindEmployee`对象作为参数，一个使用字符串的集合创建，添加到<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>集合。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 下面的代码示例提供了前面的代码示例使用示例中间层业务对象。 代码示例包含以下两个基本类和一个其他类：  
  
-   `EmployeeLogic`类，该类是一个无状态类封装业务逻辑。  
  
-   `NorthwindEmployee`类，该类是一个包含仅加载和保存的数据层的数据所需的基本功能的模型类。  
  
-   附加`NorthwindDataException`类，该类为了提供便利。  
  
 这组示例类适用于在 Northwind Trader 数据库，这是随 Microsoft SQL Server 和 Microsoft Access 示例数据库。 有关完整的工作示例，使用这些类，通过将它们放在 App_Code 目录下的应用程序根目录中或将其编译成库，然后将生成的 DLL 放在 Bin 目录中。 `UpdateEmployeeInfo`方法未完全实现，因此你会将数据插入 Northwind Trader 数据库时使用此示例试验。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
  </Docs>
</Type>