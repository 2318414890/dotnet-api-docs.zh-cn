<Type Name="ButtonField" FullName="System.Web.UI.WebControls.ButtonField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6ac54289b5b10c7a9df4c643ea2e991cf7106be1" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51896256" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonField extends System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonField" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonField&#xA;Inherits ButtonFieldBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonField : System::Web::UI::WebControls::ButtonFieldBase" />
  <TypeSignature Language="F#" Value="type ButtonField = class&#xA;    inherit ButtonFieldBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ButtonFieldBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示数据绑定控件中以按钮形式显示的字段。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField>类由数据绑定控件 (如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>) 若要显示的按钮将显示每个记录。 <xref:System.Web.UI.WebControls.ButtonField>具体取决于使用它的数据绑定控件以不同方式显示对象。 例如，<xref:System.Web.UI.WebControls.GridView>控件显示<xref:System.Web.UI.WebControls.ButtonField>对象作为某一列，而<xref:System.Web.UI.WebControls.DetailsView>控件将其显示为一行。  
  
 单击按钮字段中的按钮会导致父数据绑定控件的命令事件。 你可以提供一个自定义的例程命令按钮单击事件处理程序提供命令事件时执行。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>控件将引发<xref:System.Web.UI.WebControls.GridView.RowCommand>事件，而<xref:System.Web.UI.WebControls.DetailsView>控件引发<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>事件。  
  
 若要确定引发命令事件的记录的索引，请使用<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>数据绑定控件传递到命令事件的事件参数的属性。 <xref:System.Web.UI.WebControls.ButtonField>类会自动填充<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>具有适当的索引值的属性。  
  
 若要指定要显示的按钮类型，请使用<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>属性。 在显示的链接或命令按钮，使用<xref:System.Web.UI.WebControls.ButtonField.Text%2A>属性来指定要在按钮中显示的标题。  
  
> [!NOTE]
>  如果您设置<xref:System.Web.UI.WebControls.ButtonField.Text%2A>属性中中的所有按钮<xref:System.Web.UI.WebControls.ButtonField>共享相同的标题。  
  
 或者，您可以将绑定<xref:System.Web.UI.WebControls.ButtonField>对象与数据源中的字段。 这使您可以显示不同的标题中的按钮<xref:System.Web.UI.WebControls.ButtonField>对象。 指定字段中的值用于按钮的文本标题。 设置<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>属性将绑定<xref:System.Web.UI.WebControls.ButtonField>对象与数据源中的字段。  
  
 在显示一个图像按钮，使用<xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>属性来指定要显示在按钮的图像<xref:System.Web.UI.WebControls.ButtonField>对象。  
  
> [!NOTE]
>  中的所有按钮<xref:System.Web.UI.WebControls.ButtonField>对象共享相同的映像。  
  
 您可以隐藏<xref:System.Web.UI.WebControls.ButtonField>通过设置数据绑定控件中的对象<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>属性设置为`false`。  
  
 <xref:System.Web.UI.WebControls.ButtonField>对象可用于自定义其标头和表尾部分。 若要在页眉或页脚部分显示标题，请设置<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>或<xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>属性，分别。 而不是显示文本的页眉节中，您可以通过设置中显示图像<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>属性。 若要隐藏中的标头部分<xref:System.Web.UI.WebControls.ButtonField>对象，设置<xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>属性设置为`false`。  
  
> [!NOTE]
>  一些数据绑定控件 (如<xref:System.Web.UI.WebControls.GridView>控件) 可以显示或隐藏控件的整个标头部分。 不支持这些数据绑定控件<xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>针对个别按钮字段的属性。 若要显示或隐藏数据绑定控件的整个标头部分 （如果可用），请使用`ShowHeader`的控件属性。  
  
 你还可以自定义外观<xref:System.Web.UI.WebControls.ButtonField>通过设置该字段的不同部分的样式属性的对象 （字体颜色、 背景色等）。 下表列出了不同的样式属性。  
  
|样式属性|样式设置|  
|--------------------|----------------------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|子 Web 服务器控件的<xref:System.Web.UI.WebControls.ButtonField>。|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|脚注部分的<xref:System.Web.UI.WebControls.ButtonField>。|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|标头部分<xref:System.Web.UI.WebControls.ButtonField>。|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|数据中的项<xref:System.Web.UI.WebControls.ButtonField>。|  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ButtonField>要显示的列中的命令按钮对象<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonFieldBase" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonField.%23ctor%2A>构造函数来初始化的新实例<xref:System.Web.UI.WebControls.ButtonField>类。 将字段添加到动态创建的数据绑定控件时，通常使用此构造函数。  
  
 若要添加<xref:System.Web.UI.WebControls.ButtonField>动态对象传递给数据绑定控件，创建一个新<xref:System.Web.UI.WebControls.ButtonField>对象，设置其属性，并将其添加到数据绑定控件的字段集合。 例如，如果使用的<xref:System.Web.UI.WebControls.GridView>控件中，添加<xref:System.Web.UI.WebControls.ButtonField>对象传递给<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。  
  
> [!NOTE]
>  尽管您可以添加字段动态到数据绑定控件时，应声明为静态，字段，以及然后能显示或隐藏，根据情况。 静态声明的所有应用字段会减小父数据绑定控件的视图状态的大小。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 M:System.Web.UI.WebControls.ButtonField.#ctor 构造函数添加<xref:System.Web.UI.WebControls.ButtonField>动态地为对象<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[ButtonFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldCtor/CS/buttonfieldctorcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldCtor/VB/buttonfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个字符串，该字符串表示当单击 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象中的按钮时要执行的操作。</summary>
        <value>当单击 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 中的按钮时要执行的操作的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>属性关联的命令名称，如`"Add"`或`"Remove"`的按钮在<xref:System.Web.UI.WebControls.ButtonField>对象。 可以设置<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>属性设置为任何字符串，标识要单击的命令按钮时执行的操作。 你可以然后以编程方式确定事件处理程序中的命令名称并执行相应的操作。  
  
> [!NOTE]
>  中的所有按钮<xref:System.Web.UI.WebControls.ButtonField>对象共享相同的命令名称。  
  
 数据绑定控件识别某些命令名称自动引发和处理该控件的相应事件。 识别以下的命令名称：  
  
-   `"Cancel"`  
  
-   `"Delete"`  
  
-   `"Edit"`  
  
-   `"Insert"`  
  
-   `"New"`  
  
-   `"Page"`  
  
-   `"Select"`  
  
-   `"Sort"`  
  
-   `"Update"`  
  
 若要调用分页，请设置<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>到`"Page"`并<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>包含<xref:System.Web.UI.WebControls.Button>控制对`"First"`， `"Last"`， `"Prev"`， `"Next"`，或页码。 但是，由于<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>有关<xref:System.Web.UI.WebControls.ButtonField>控件始终是整数行索引，<xref:System.Web.UI.WebControls.ButtonField>控件并不适用于调用分页。 同样，尽管您可以调用通过设置排序<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>到`"Sort"`，则<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>属性<xref:System.Web.UI.WebControls.ButtonField>控件始终是整数的行索引。 出于此原因，<xref:System.Web.UI.WebControls.ButtonField>控件并不适用于调用排序。 对于自定义命令名称，如`"Add"`和`"Remove"`，您需要自己编写检查的命令名称，并执行一些自定义操作的事件代码。 有关详情，请参阅<xref:System.Web.UI.WebControls.DataControlCommands>。  
  
> [!NOTE]
>  并非所有的命令名称所识别的每个数据绑定控件。 例如，`"New"`不能识别<xref:System.Web.UI.WebControls.GridView>控件并`"Select"`不能识别<xref:System.Web.UI.WebControls.DetailsView>控件。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>属性来指定中按钮的命令名称<xref:System.Web.UI.WebControls.ButtonField>对象的<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="buttonField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">要将当前 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 的属性复制到的 <see cref="T:System.Web.UI.WebControls.ButtonField" />。</param>
        <summary>将当前 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象的属性复制到指定的 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType>方法以复制的当前属性<xref:System.Web.UI.WebControls.ButtonFieldBase>-派生对象转换<xref:System.Web.UI.WebControls.DataControlField>创建的对象<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>重写时<see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />方法在派生类中，调用<see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />基类以确保复制该对象的所有属性的方法。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="buttonField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建并返回 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 类的新实例。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> 类的新实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.CreateField%2A>方法是使用一个帮助器方法<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>若要创建一个空的基类方法<xref:System.Web.UI.WebControls.ButtonField>要向其复制的当前属性的对象<xref:System.Web.UI.WebControls.ButtonField>-派生的对象。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>重写<see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" />方法以返回派生的类的新实例。 不要调用<see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" />基类的方法。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据字段的名称，该数据字段的值绑定到 <see cref="P:System.Web.UI.WebControls.Button.Text" /> 控件的 <see cref="T:System.Web.UI.WebControls.Button" /> 属性，此控件由 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象呈现。</summary>
        <value>要绑定到 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 的字段名称。 默认值为空字符串 ("")，表示尚未设置 <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" /> 属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>的属性<xref:System.Web.UI.WebControls.ButtonField>对象设置为<xref:System.Web.UI.WebControls.ButtonType.Button>或<xref:System.Web.UI.WebControls.ButtonType.Link>值，请使用<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>属性指定要绑定到的字段名称<xref:System.Web.UI.WebControls.ButtonField>对象。 字段的值则显示在按钮的文本作为<xref:System.Web.UI.WebControls.ButtonField>对象。 （可选） 可以设置显示的文本格式设置<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>属性。  
  
 而不是使用<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>属性将绑定<xref:System.Web.UI.WebControls.ButtonField>对象到某个字段从数据源，您可以使用<xref:System.Web.UI.WebControls.ButtonField.Text%2A>属性来显示静态文本中的按钮的文本<xref:System.Web.UI.WebControls.ButtonField>对象。 当<xref:System.Web.UI.WebControls.ButtonField.Text%2A>使用属性时，每个按钮共享相同的标题。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>并<xref:System.Web.UI.WebControls.ButtonField.Text%2A>属性均设置，<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>属性优先。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>属性来指定要在中显示的字段<xref:System.Web.UI.WebControls.ButtonField>列<xref:System.Web.UI.WebControls.GridView>控件。  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置字符串，该字符串指定字段值的显示格式。</summary>
        <value>指定字段值显示格式的格式字符串。 默认值为空字符串 ("")，表示尚无特殊格式设置应用于该字段值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>属性可指定在显示的值的自定义显示格式<xref:System.Web.UI.WebControls.ButtonField>对象。 如果<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>属性未设置，而无需任何特殊格式显示字段的值。  
  
> [!NOTE]
>  应用格式字符串，则仅当<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>属性设置。  
  
 格式字符串可以是任何文本字符串，并且通常包含字段的值的占位符。 例如，在格式字符串`"Item Value: {0}"`，则`{0}`占位符将被替换的字段值中显示时<xref:System.Web.UI.WebControls.ButtonField>对象。 格式字符串的其余部分将显示为文字文本。  
  
> [!NOTE]
>  如果格式字符串不包含一个占位符，在最终的显示文本中不包含数据源的字段的值。  
  
 占位符包含两个部分，用冒号分隔和包装在大括号，窗体中的 { `A` : `Bxx` }。 冒号前的值 (`A`常规示例中) 从零开始的参数列表中，指定字段值的索引。  
  
> [!NOTE]
>  这`A`参数是格式化语法的一部分。 由于每个单元中只有一个字段值，此值只能设置为 0。  
  
 冒号和冒号后面的值是可选的。 冒号后面的字符 (`B`常规示例中) 指定要在其中显示值的格式。 下表列出了常见的格式。  
  
|格式字符|描述|  
|----------------------|-----------------|  
|`C`|以货币格式显示数字值。|  
|`D`|以十进制格式显示数字值。|  
|`E`|以科学记数法 （指数） 格式显示数字值。|  
|`F`|以固定格式显示数字值。|  
|`G`|一般情况下设置显示数值的格式。|  
|`N`|采用数字格式显示数字值。|  
|`X`|以十六进制格式显示数字值。|  
  
> [!NOTE]
>  除`X`，格式字符不区分大小写。 `X`格式字符在指定的情况下会显示的十六进制字符。  
  
 格式字符后的值 (`xx`常规示例中) 指定的有效位数或小数位数来显示数字。 例如，格式字符串`"{0:F2}"`显示带两位小数位数的定点数。  
  
 有关设置字符串格式的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>属性可指定字段的值的自定义显示格式。  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">设置 .NET 中类型的格式</related>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataTextValue : obj -&gt; string&#xA;override this.FormatDataTextValue : obj -&gt; string" Usage="buttonField.FormatDataTextValue dataTextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">要格式化的字段值。</param>
        <summary>设定 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象内的单元格中的指定字段值。</summary>
        <returns>已转换为由 <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" /> 属性指定的格式的字段值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.FormatDataTextValue%2A>方法是用于转换为指定的格式的字段值的帮助器方法<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>属性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>当扩展<see cref="T:System.Web.UI.WebControls.ButtonField" />类，可以重写<see cref="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" />方法来执行自定义格式设置例程。</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要为 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象中每个按钮显示的图像。</summary>
        <value>要为 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 中每个按钮显示的图像。 默认值为空字符串 ("")，表示尚未设置 <see cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" /> 属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>的属性<xref:System.Web.UI.WebControls.ButtonField>对象设置为<xref:System.Web.UI.WebControls.ButtonType.Image>值，请使用<xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>属性来指定要为每个按钮显示的图像。 此映像可以是任何文件格式 （.jpg、.gif、.bmp、 等），只要客户端浏览器支持该格式。  
  
 此属性的值存储在视图状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>属性可指定要为每个按钮中显示的图像<xref:System.Web.UI.WebControls.ButtonField>对象。 对于要显示此代码示例，必须提供你自己的映像。  
  
 [!code-aspx-csharp[ButtonFieldImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldImageUrl/CS/buttonfieldimageurlcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldImageUrl/VB/buttonfieldimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool sortingEnabled, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool sortingEnabled, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="buttonField.Initialize (sortingEnabled, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingEnabled" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="sortingEnabled">如果启用排序，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="control">拥有 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 的数据控件。</param>
        <summary>初始化当前的 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象。</summary>
        <returns>
          <see langword="false" />，指示控件无需重新绑定到数据。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A>方法调用的数据控件与其<xref:System.Web.UI.WebControls.ButtonField>对象所关联来执行基本的对象初始化的字段，该字段添加到行集合之前的实例。 数据控件，如<xref:System.Web.UI.WebControls.DetailsView>并<xref:System.Web.UI.WebControls.GridView>，调用<xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>中的方法及其`CreateChildControls`方法之前的其他方法，如`CreateRow`，调用以创建包含数据的特定行。  
  
 调用<xref:System.Web.UI.WebControls.ButtonField.Initialize%2A>方法编写的自定义数据绑定控件时，使用<xref:System.Web.UI.WebControls.TableCell>对象执行基本初始化<xref:System.Web.UI.WebControls.ButtonField>对象。 如果实现此方法在<xref:System.Web.UI.WebControls.ButtonField>的派生的类型需要的任何对象初始化之前它将填充<xref:System.Web.UI.WebControls.TableCell>对象的数据，或在控件中<xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A>方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>应重写<see cref="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" />方法并返回<see langword="true" />，如果该字段需要数据绑定在回发时要正常工作的字段顺序执行。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="buttonField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">要初始化的 <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />。</param>
        <param name="cellType">
          <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 值，指示行的类型（标头、脚注或数据）。</param>
        <param name="rowState">
          <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 值之一。</param>
        <param name="rowIndex">行的索引（索引从零开始）。</param>
        <summary>将指定的 <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> 对象初始化为指定的行状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A>方法将创建由指定的按钮类型<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>属性并将其添加到<xref:System.Web.UI.Control.Controls%2A>的集合<xref:System.Web.UI.WebControls.DataControlFieldCell>对象。 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>的属性<xref:System.Web.UI.WebControls.Button>控件设置为`rowIndex`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象中每个按钮显示的静态标题。</summary>
        <value>为 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 中每个按钮显示的标题。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>的属性<xref:System.Web.UI.WebControls.ButtonField>对象设置为<xref:System.Web.UI.WebControls.ButtonType.Button>或<xref:System.Web.UI.WebControls.ButtonType.Link>值，请使用<xref:System.Web.UI.WebControls.ButtonField.Text%2A>属性来显示静态文本中的按钮的标题<xref:System.Web.UI.WebControls.ButtonField>。 每个按钮共享相同的标题。  
  
 而不是使用<xref:System.Web.UI.WebControls.ButtonField.Text%2A>属性用于显示静态文本<xref:System.Web.UI.WebControls.ButtonField>对象，可以使用<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>要绑定属性<xref:System.Web.UI.WebControls.ButtonField>到数据源中的字段。 然后为按钮的标题显示的字段的值。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>并<xref:System.Web.UI.WebControls.ButtonField.Text%2A>属性均设置，<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>属性优先。  
  
 此属性的值存储在视图状态。  
  
 此属性的值设置时，可以自动保存到资源文件使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>并[全球化和本地化](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ButtonField.Text%2A>属性来指定要显示中每个按钮的标题<xref:System.Web.UI.WebControls.ButtonField>对象。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="buttonField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确定包含在 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象中的控件是否支持回调。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A>方法是帮助器方法，用于确定控件是否包含在<xref:System.Web.UI.WebControls.ButtonField>对象支持回调。 此方法作为空方法 （不包含任何代码的方法） 以指示支持回调实现。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A>方法主要由控件开发人员。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生的类<see cref="T:System.Web.UI.WebControls.BoundField" />类可以重写<see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />方法，以指示所包含的字段的控件是否支持回调。 若要指示支持回调，实现<see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />方法作为空方法，不会引发异常; 否则，使用有用的消息说明为什么不支持回调引发异常。</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>