<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObjectChangeConflict.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e5186bdefdaee509f1b9c41e830169767c3f53bc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5186bdefdaee509f1b9c41e830169767c3f53bc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.ObjectChangeConflict">
          <source>Represents an update attempt with one or more optimistic concurrency conflicts.</source>
          <target state="translated">表示对一个或多个开放式并发冲突的更新尝试。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.ObjectChangeConflict">
          <source>This scenario is one in which an attempted update fails because database values have been updated since the client last read them.</source>
          <target state="translated">此方案会在其尝试进行更新失败，因为客户端上次读取它们以来已更新了数据库值。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.ObjectChangeConflict">
          <source>The following example shows how to retrieve information about objects in conflict.</source>
          <target state="translated">下面的示例演示如何检索有关对象的冲突信息。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.ObjectChangeConflict.IsDeleted">
          <source>Gets a value that indicates whether the object in conflict has been deleted from the database.</source>
          <target state="translated">获取指示是否已从数据库中删除发生冲突的对象的值。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.ObjectChangeConflict.IsDeleted">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the object has been deleted.</source>
          <target state="translated">如果该对象已被删除，则为 <ph id="ph1">&lt;see langword="True" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.ObjectChangeConflict.IsResolved">
          <source>Gets a value that indicates whether the conflicts for this object have already been resolved.</source>
          <target state="translated">获取指示是否已解决此对象的冲突的值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.ObjectChangeConflict.IsResolved">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the conflicts have been resolved.</source>
          <target state="translated">如果冲突已解决，则为 <ph id="ph1">&lt;see langword="True" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.ObjectChangeConflict.IsResolved">
          <source>This property is read-only and is automatically updated as conflicts are resolved.</source>
          <target state="translated">此属性是只读的将自动更新解决冲突。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.ObjectChangeConflict.MemberConflicts">
          <source>Gets a collection of all member conflicts that caused the update to fail.</source>
          <target state="translated">获取导致更新失败的所有成员冲突的集合。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.ObjectChangeConflict.MemberConflicts">
          <source>A collection of member conflicts.</source>
          <target state="translated">成员冲突的集合。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.ObjectChangeConflict.Object">
          <source>Gets the object in conflict.</source>
          <target state="translated">获取发生冲突的对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.ObjectChangeConflict.Object">
          <source>The object in conflict.</source>
          <target state="translated">发生冲突的对象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.ObjectChangeConflict">
          <source>Resolves member conflicts.</source>
          <target state="translated">解决成员冲突。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.ObjectChangeConflict.Resolve">
          <source>Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.</source>
          <target state="translated">通过保留当前值并重置基线原始值以匹配较新数据库值来解决成员冲突。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)">
          <source>The appropriate option from <ph id="ph1">&lt;see cref="T:System.Data.Linq.RefreshMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Linq.RefreshMode" /&gt;</ph> 的相应选择。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)">
          <source>Resolves member conflicts by using the specified <ph id="ph1">&lt;see cref="T:System.Data.Linq.RefreshMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.Linq.RefreshMode" /&gt;</ph> 来解决成员冲突。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)">
          <source>The following examples show what results are produced by using the various values for <ph id="ph1">&lt;xref:System.Data.Linq.RefreshMode&gt;</ph>.</source>
          <target state="translated">下面的示例演示使用的各种值生成哪些结果<ph id="ph1">&lt;xref:System.Data.Linq.RefreshMode&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)">
          <source>The following example overwrites current values with values from the database.</source>
          <target state="translated">下面的示例将当前值覆盖数据库中的值。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)">
          <source>The following example shows how to swap the original value with the values retrieved from the dtabase.</source>
          <target state="translated">下面的示例演示如何替换的原始值与从数据库检索到的值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)">
          <source>No current value is modified.</source>
          <target state="translated">不会修改当前值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)">
          <source>The following example keeps the current values that have been changed, but updates the other values with database values.</source>
          <target state="translated">下面的示例将保留已更改，但数据库值更新其他值的当前值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode,System.Boolean)">
          <source>The appropriate option from <ph id="ph1">&lt;see cref="T:System.Data.Linq.RefreshMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Linq.RefreshMode" /&gt;</ph> 的相应选择。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode,System.Boolean)">
          <source>When <ph id="ph1">&lt;see langword="true" /&gt;</ph>, automatically resolves conflicts resulting from a modified object that is no longer in the database.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则自动解决由数据库中不再存在的已修改对象产生的冲突。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode,System.Boolean)">
          <source>Resolve member conflicts keeping current values and resetting the baseline original values.</source>
          <target state="translated">解决保留当前值且表示基线原始值的成员冲突。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>