<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataContext.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56cbfb225f9d8295e7bf1faa0cef5897f808b990c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6cbfb225f9d8295e7bf1faa0cef5897f808b990c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>Represents the main entry point for the LINQ to SQL framework.</source>
          <target state="translated">表示 LINQ to SQL 框架的主入口点。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>The <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is the source of all entities mapped over a database connection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>是通过数据库连接映射的所有实体的源。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>It tracks changes that you made to all retrieved entities and maintains an "identity cache" that guarantees that entities retrieved more than one time are represented by using the same object instance.</source>
          <target state="translated">它跟踪对检索到的所有实体所做的更改并保留"标识缓存"表示实体检索不止一次的保证使用同一个对象实例。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>In general, a <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance is designed to last for one "unit of work" however your application defines that term.</source>
          <target state="translated">一般情况下，<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>实例旨在持续一个"的工作单位"应用程序但是定义该术语。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>A <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is lightweight and is not expensive to create.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>是轻量而不是创建开销很大。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>A typical <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> application creates <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.</source>
          <target state="translated">典型<ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>应用程序创建<ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>方法作用域或作为生存期较短的类表示逻辑组的成员实例相关的数据库操作。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>The connection string you use can be an ADO.NET connection string.</source>
          <target state="translated">你所使用的连接字符串可为 ADO.NET 连接字符串。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>You can also specify a filename to a SQL Server Express or SQL Server Compact file.</source>
          <target state="translated">你还可以指定 SQL Server Express 或 SQL Server Compact 文件的文件名。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)">
          <source>The connection used by the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">由 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 使用的连接。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class by referencing the connection used by the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">通过引用由 <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 使用的连接来初始化 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> opens and closes a database connection as needed if you provide a closed connection or a connection string.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>打开和关闭数据库连接，根据需要如果您提供关闭的连接或连接字符串。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)">
          <source>In general, you should never have to call <ph id="ph1">`Dispose`</ph> on a <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">一般情况下，你应永远不需要调用<ph id="ph1">`Dispose`</ph>上<ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)">
          <source>If you provide an open connection, the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> will not close it.</source>
          <target state="translated">如果你提供的打开连接，<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>不会关闭它。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)">
          <source>Therefore, do not instantiate a <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> with an open connection unless you have a good reason to do this.</source>
          <target state="translated">因此，不要实例化<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>具有打开的连接除非你有理由要这样做。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)">
          <source>In a <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> transaction, a <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> will not open or close a connection to avoid promotion.</source>
          <target state="translated">在<ph id="ph1">&lt;xref:System.Transactions&gt;</ph>事务，<ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>将不打开或关闭的连接，为了避免出现提升。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)">
          <source>The connection used by the .NET Framework.</source>
          <target state="translated">由 .NET Framework 使用的连接。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)">
          <source>A source for mapping.</source>
          <target state="translated">映射源。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class by referencing a connection and a mapping source.</source>
          <target state="translated">通过引用连接和映射源初始化 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source>This argument can be any one of the following:</source>
          <target state="translated">此参数可以是下列项之一：</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source>The name of a file where a SQL Server Express database resides.</source>
          <target state="translated">SQL Server Express 数据库所在的文件的名称。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source>The name of a server where a database is present.</source>
          <target state="translated">数据库所在的服务器的名称。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source>In this case the provider uses the default database for a user.</source>
          <target state="translated">在此情况下，提供程序对用户使用默认数据库。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source>A complete connection string.</source>
          <target state="translated">一个完整的连接字符串。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> just passes the string to the provider without modification.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 仅将字符串传递给提供程序，而不进行修改。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source>A source for mapping.</source>
          <target state="translated">映射源。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class by referencing a file source and a mapping source.</source>
          <target state="translated">通过引用文件源和映射源初始化 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class by referencing a file source.</source>
          <target state="translated">通过引用文件源来初始化 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.ChangeConflicts">
          <source>Gets a collection of objects that caused concurrency conflicts when <ph id="ph1">&lt;see cref="M:System.Data.Linq.DataContext.SubmitChanges" /&gt;</ph> was called.</source>
          <target state="translated">获取调用 <ph id="ph1">&lt;see cref="M:System.Data.Linq.DataContext.SubmitChanges" /&gt;</ph> 时导致并发冲突的对象的集合。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ChangeConflicts">
          <source>A collection of objects that caused concurrency conflicts.</source>
          <target state="translated">导致并发冲突的对象的集合。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ChangeConflicts">
          <source>The following example shows how the collection can be iterated over to retrieve conflict information.</source>
          <target state="translated">下面的示例演示如何集合可以循环访问，以检索冲突信息。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.CommandTimeout">
          <source>Gets or sets a value that increases the time-out period for queries that would otherwise time out during the default time-out period.</source>
          <target state="translated">获取或设置一个值，该值增大查询的超时期限，如果不增大则会在默认超时期限间出现超时。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.CommandTimeout">
          <source>An integer value that increases the time-out period for queries that would otherwise time out during the default time-out period.</source>
          <target state="translated">一个整数值，该值增大查询的超时期限，如果不增大则会在默认超时期限间出现超时。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.CommandTimeout">
          <source>This property gets or sets the command time-out used to execute generated commands (<ph id="ph1">`IDbCommands`</ph>).</source>
          <target state="translated">此属性获取或设置用于执行生成的命令的命令超时值 (<ph id="ph1">`IDbCommands`</ph>)。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.CommandTimeout">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandTimeout%2A&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandTimeout%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.CommandTimeout">
          <source>When this property is not set, the default value of <ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandTimeout%2A&gt;</ph> is used for query command execution.</source>
          <target state="translated">当此属性未设置，默认值的<ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandTimeout%2A&gt;</ph>用于执行查询命令。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.CommandTimeout">
          <source>This default value is set by the storage provider.</source>
          <target state="translated">此默认值由存储提供程序设置。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.CommandTimeout">
          <source>Note that some providers may throw exceptions if this value is set to a non-zero value.</source>
          <target state="translated">请注意，某些访问接口可能引发异常，是否此值设置为非零值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.Connection">
          <source>Gets the connection used by the framework.</source>
          <target state="translated">获取由框架使用的连接。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Connection">
          <source>The connection used by the framework.</source>
          <target state="translated">由框架使用的连接。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Connection">
          <source>You can use this property to interoperate with relational ADO.NET code.</source>
          <target state="translated">可以使用此属性与关系的 ADO.NET 代码进行互操作。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Connection">
          <source>The returned connection will be closed unless it has been explicitly opened by the user.</source>
          <target state="translated">返回的连接将关闭，除非已由用户显式打开。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>Creates a database on the server.</source>
          <target state="translated">在服务器上创建数据库。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>The name of the database is derived by using the following algorithm:</source>
          <target state="translated">数据库的名称的推导方式为使用以下算法：</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>If a database is identified in the connection string, its name is used.</source>
          <target state="translated">如果数据库在连接字符串中标识的则使用其名称。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>If a <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.DatabaseAttribute&gt;</ph> attribute is present, its <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A&gt;</ph> property is used as the name of the database.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Linq.Mapping.DatabaseAttribute&gt;</ph>属性不存在，其<ph id="ph2">&lt;xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A&gt;</ph>属性用作数据库的名称。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>If there is no database tag in the connection string and a strongly typed <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is used, a database that has the same name as the <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> inheriting class is checked.</source>
          <target state="translated">如果没有连接字符串和强类型中的没有数据库标记<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>使用时，具有与同名的数据库<ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>检查继承类。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>If a weakly typed <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is used, an exception is thrown.</source>
          <target state="translated">如果使用弱类型<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>是使用，将引发异常。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> has been created by using a file name, the database corresponding to that file name is created.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>已创建通过使用文件名称，创建与该文件名称对应的数据库。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>The following code shows how to set up a temporary database and then remove it.</source>
          <target state="translated">下面的代码演示如何将临时数据库设置，然后删除它。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The type of the elements in the returned collection.</source>
          <target state="translated">返回的集合中的元素的类型。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The instance of the method invocation (the current object).</source>
          <target state="translated">方法调用的实例（当前对象）。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> that identifies the CLR method that corresponds to a database method.</source>
          <target state="translated">标识与数据库方法相对应的 CLR 方法的 <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The array of parameters to be passed to the command.</source>
          <target state="translated">要传递给命令的参数数组。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>Executes the table-valued database function associated with the specified CLR method.</source>
          <target state="translated">执行与指定的 CLR 方法相关联的表值数据库函数。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>A collection of resultant values returned by the database query.</source>
          <target state="translated">由数据库查询返回的最终值的集合。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A&gt;</ph> method is used in automatically generated code and acts as a proxy to database functions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A&gt;</ph>方法使用自动生成的代码中，并且可作为数据库函数的代理。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.DatabaseExists">
          <source>Determines whether the associated database can be opened.</source>
          <target state="translated">确定是否可以打开关联数据库。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.DatabaseExists">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified database can be opened; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果可以打开指定的数据库，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.DatabaseExists">
          <source>This method uses the connection in the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.Connection%2A&gt;</ph> property to attempt to open the associated database.</source>
          <target state="translated">此方法使用中的连接<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.Connection%2A&gt;</ph>尝试打开关联的数据库的属性。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.DatabaseExists">
          <source>The following example uses this method to determine whether a database already exists.</source>
          <target state="translated">下面的示例使用此方法来确定数据库是否已存在。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.</source>
          <target state="translated">获取或设置一个值，该值指示延迟加载是一对多还是一对一的关系。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if deferred loading is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果启用延迟加载，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many.</source>
          <target state="translated">返回代码访问这些关系，null 之一时，如果关系是一对一，并且如果它是一个一对多，则返回一个空集合。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>The relationships can still be filled by setting the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.LoadOptions%2A&gt;</ph> property.</source>
          <target state="translated">仍可通过设置填写关系<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.LoadOptions%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).</source>
          <target state="translated">此属性的主要方案是，可以提取一种对象模型并将它发送 （例如，到 Web 服务）。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>If this property is set to <ph id="ph1">`false`</ph> after a query has been executed, an exception is thrown.</source>
          <target state="translated">如果此属性设置为<ph id="ph1">`false`</ph>执行查询后，将引发异常。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>See the <bpt id="p1">**</bpt>Valid Modes<ept id="p1">**</ept> section below for more information.</source>
          <target state="translated">请参阅<bpt id="p1">**</bpt>有效模式<ept id="p1">**</ept>下面部分以了解详细信息。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>Valid modes</source>
          <target state="translated">有效的模式</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>Deferred loading requires object tracking.</source>
          <target state="translated">延迟的加载需要对象跟踪。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>Only the following three modes are valid:</source>
          <target state="translated">仅以下三种模式是有效的：</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph> is ignored and inferred to be <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph> 忽略和推断<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>This behavior corresponds to a read-only <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">此行为对应于一个只读的<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>This situation corresponds to a <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> that allows users to load an object graph by using <ph id="ph2">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph> directives, but it does not enable deferred loading.</source>
          <target state="translated">这种情况下对应于<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>，允许用户通过使用来加载对象图<ph id="ph2">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph>指令，但它不会启用延迟的加载。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>Both are set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">两者都设置为<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>This is the default.</source>
          <target state="translated">这是默认设置。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>The flags may not be changed after a query has been executed.</source>
          <target state="translated">在执行查询后，不能更改标志。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>Any change after the execution of the first query that uses that <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> throws an exception.</source>
          <target state="translated">之后使用，在第一个查询执行的任何更改<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>引发异常。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.DeleteDatabase">
          <source>Deletes the associated database.</source>
          <target state="translated">删除关联数据库。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.DeleteDatabase">
          <source>This method uses the connection in the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.Connection%2A&gt;</ph> property to identify the database to be deleted.</source>
          <target state="translated">此方法使用中的连接<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.Connection%2A&gt;</ph>属性来标识要删除的数据库。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.DeleteDatabase">
          <source>The following example shows how to delete a database that has been temporarily created.</source>
          <target state="translated">下面的示例演示如何删除已暂时创建数据库。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 类使用的资源。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 类的当前实例所使用的所有资源。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class and optionally releases the managed resource.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 类使用的非托管资源，还可以选择释放托管资源。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>The SQL command to be executed.</source>
          <target state="translated">要执行的 SQL 命令。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>The array of parameters to be passed to the command.</source>
          <target state="translated">要传递给命令的参数数组。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>Note the following behavior:</source>
          <target state="translated">注意以下行为：</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</source>
          <target state="translated">如果数组中的对象的数目小于命令字符串中已标识的最大数，则会引发异常。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>If the array contains objects that are not referenced in the command string, no exception is thrown.</source>
          <target state="translated">如果数组包含未在命令字符串中引用的对象，则不会引发异常。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>If any one of the parameters is null, it is converted to <ph id="ph1">&lt;see langword="DBNull.Value" /&gt;</ph>.</source>
          <target state="translated">如果任一参数为 null，则该参数会转换为 <ph id="ph1">&lt;see langword="DBNull.Value" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>Executes SQL commands directly on the database.</source>
          <target state="translated">直接对数据库执行 SQL 命令。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>The number of rows modified by the executed command.</source>
          <target state="translated">执行的命令修改的行数。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>This method is a pass-through mechanism for cases where <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not adequately provide for a particular scenario.</source>
          <target state="translated">此方法是用于用例的传递机制其中<ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>不充分提供用于特定方案。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>The syntax for the command is almost the same as the syntax used to create an ADO.NET <ph id="ph1">`DataCommand`</ph>.</source>
          <target state="translated">该命令的语法是用于创建 ADO.NET 的语法几乎相同<ph id="ph1">`DataCommand`</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>The only difference is in how the parameters are specified.</source>
          <target state="translated">唯一的区别是中的指定参数的方式。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0.</source>
          <target state="translated">具体而言，通过将它们括在大括号 （{...}） 中指定的参数和枚举它们从 0 开始。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>The parameter is associated with the equally numbered object in the parameters array.</source>
          <target state="translated">此参数是与参数数组中均匀编号的对象相关联。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source><ph id="ph1">`ExecuteQuery`</ph> and <ph id="ph2">`ExecuteCommand`</ph> allow you to specify a variable number of arguments for parameter substitution.</source>
          <target state="translated"><ph id="ph1">`ExecuteQuery`</ph> 和<ph id="ph2">`ExecuteCommand`</ph>允许你指定的参数替换的参数个数可变。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>For example, you can specify the parameters when invoking ExecuteQuery<ph id="ph1">\&lt;</ph>TResult&gt;:</source>
          <target state="translated">例如，你可以指定参数，调用 ExecuteQuery 时<ph id="ph1">\&lt;</ph>TResult &gt;:</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>And, another example:</source>
          <target state="translated">而且，另一个示例：</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>The following example opens a connection and passes a SQL <ph id="ph1">`UPDATE`</ph> command to the SQL engine.</source>
          <target state="translated">下面的示例打开连接，并通过 SQL <ph id="ph1">`UPDATE`</ph> SQL 引擎命令。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)">
          <source>The entity to be deleted.</source>
          <target state="translated">要删除的实体。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)">
          <source>Executes, inside delete override methods, to redelegate to <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> the task of generating and executing dynamic SQL for delete operations.</source>
          <target state="translated">在删除重写方法中执行，以向 <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 重新委托生成和执行删除操作的动态 SQL 的任务。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)">
          <source>See <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;</ph>.</source>
          <target state="translated">请参阅 <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>The entity to be inserted.</source>
          <target state="translated">要插入的实体。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>Executes, inside insert override methods, to redelegate to <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> the task of generating and executing dynamic SQL for insert operations.</source>
          <target state="translated">在插入重写方法中执行，以向 <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 重新委托生成和执行插入操作的动态 SQL 的任务。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>Note the following considerations:</source>
          <target state="translated">请注意以下事项：</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>Because the method has a protected modifier, its use requires subclassing <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">由于该方法具有受保护的修饰符，使用它必须子类化<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>An exception is thrown if this operation is not called inside a <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> operation.</source>
          <target state="translated">如果在不调用此操作将引发异常<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>操作。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>It is not intended to be called as a stand-alone operation outside the scope of a <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> operation.</source>
          <target state="translated">它不可作为独立操作的范围之外调用<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>操作。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> 自身调用重写方法如果它们实现，上述方法旨在用于内部重写方法调用。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>It is the responsibility of the developer to pass in the correct entity.</source>
          <target state="translated">它负责的开发人员可以传递正确的实体。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>The implementation verifies that the passed-in entity is tracked.</source>
          <target state="translated">该实现可确保传入的实体进行跟踪。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.</source>
          <target state="translated">但是，它是开发人员可以维护的顺序，或将两次传递同一实体中的责任。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>It is the responsibility of the developer to invoke the correct dynamic API.</source>
          <target state="translated">它负责的开发人员可以调用正确的动态 API。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>For example, in the <ph id="ph1">`Update`</ph> override method, only the <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A&gt;</ph> method can be called.</source>
          <target state="translated">例如，在<ph id="ph1">`Update`</ph>重写方法，仅<ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A&gt;</ph>可以调用方法。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not detect or verify whether the invoked dynamic method matches the applicable operation.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 不检测或验证调用的动态方法是否与适用的操作相匹配。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>The results are undefined if an inapplicable method is called (for example, calling <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A&gt;</ph> for an object to be updated).</source>
          <target state="translated">结果是不确定的如果将不适用，则方法调用 (例如，调用<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A&gt;</ph>要更新的对象)。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)">
          <source>The entity to be updated.</source>
          <target state="translated">要更新的实体。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)">
          <source>Executes, inside update override methods, to redelegate to <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> the task of generating and executing dynamic SQL for update operations.</source>
          <target state="translated">在更新重写方法中执行，以向 <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 重新委托生成和执行更新操作的动态 SQL 的任务。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)">
          <source>See <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;</ph>.</source>
          <target state="translated">请参阅 <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The instance of the method invocation (the current object).</source>
          <target state="translated">方法调用的实例（当前对象）。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>Identifies the CLR method that corresponds to a database method.</source>
          <target state="translated">标识与数据库方法相对应的 CLR 方法。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The array of parameters to be passed to the command.</source>
          <target state="translated">要传递给命令的参数数组。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>Executes the stored database procedure or scalar function associated with the specified CLR method.</source>
          <target state="translated">执行数据库存储过程或与指定的 CLR 方法关联的标量函数。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The result (the return value and output parameters) of executing the specified method.</source>
          <target state="translated">执行指定方法的结果（返回值和输出参数）。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A&gt;</ph> method is used in automatically generated code and acts as a proxy to database functions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A&gt;</ph>方法使用自动生成的代码中，并且可作为数据库函数的代理。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>The type of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to be returned.</source>
          <target state="translated">要返回的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的类型。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:</source>
          <target state="translated">使查询结果中的列与对象中的字段或属性相匹配的算法如下所示：</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>If a field or property is mapped to a particular column name, that column name is expected in the resultset.</source>
          <target state="translated">如果字段或属性映射到特定列名称，则结果集中应包含该列名称。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</source>
          <target state="translated">如果未映射字段或属性，则结果集中应包含其名称与该字段或属性相同的列。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>The comparison is performed by looking for a case-sensitive match first.</source>
          <target state="translated">通过先查找区分大小写的匹配来执行比较。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>If this match is not found, a subsequent search occurs for a case-insensitive match.</source>
          <target state="translated">如果未找到匹配项，则会继续搜索不区分大小写的匹配项。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</source>
          <target state="translated">如果同时满足下列所有条件，则该查询应当返回（除延迟加载的对象外的）对象的所有跟踪的字段和属性：</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> is an entity explicitly tracked by the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> 是由 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 显式跟踪的实体。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source><ph id="ph1">&lt;see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>The entity has a primary key.</source>
          <target state="translated">实体具有主键。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>Otherwise an exception is thrown.</source>
          <target state="translated">否则会引发异常。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>The SQL query to be executed.</source>
          <target state="translated">要执行的 SQL 查询。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>The array of parameters to be passed to the command.</source>
          <target state="translated">要传递给命令的参数数组。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>Note the following behavior:</source>
          <target state="translated">注意以下行为：</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</source>
          <target state="translated">如果数组中的对象的数目小于命令字符串中已标识的最大数，则会引发异常。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>If the array contains objects that are not referenced in the command string, no exception is thrown.</source>
          <target state="translated">如果数组包含未在命令字符串中引用的对象，则不会引发异常。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>If a parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, it is converted to <ph id="ph2">&lt;see langword="DBNull.Value" /&gt;</ph>.</source>
          <target state="translated">如果某参数为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则该参数会转换为 <ph id="ph2">&lt;see langword="DBNull.Value" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>Executes SQL queries directly on the database.</source>
          <target state="translated">直接对数据库执行 SQL 查询。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> collection of objects returned by the query.</source>
          <target state="translated">由查询返回的对象的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The type of the elements in the returned collection.</source>
          <target state="translated">返回的集合中的元素的类型。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The SQL query to be executed.</source>
          <target state="translated">要执行的 SQL 查询。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The array of parameters to be passed to the command.</source>
          <target state="translated">要传递给命令的参数数组。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>Note the following behavior:</source>
          <target state="translated">注意以下行为：</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</source>
          <target state="translated">如果数组中的对象的数目小于命令字符串中已标识的最大数，则会引发异常。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>If the array contains objects that are not referenced in the command string, no exception is thrown.</source>
          <target state="translated">如果数组包含未在命令字符串中引用的对象，则不会引发异常。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>If a parameter is null, it is converted to <ph id="ph1">&lt;see langword="DBNull.Value" /&gt;</ph>.</source>
          <target state="translated">如果某参数为 null，则该参数会转换为 <ph id="ph1">&lt;see langword="DBNull.Value" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>Executes SQL queries directly on the database and returns objects.</source>
          <target state="translated">直接对数据库执行 SQL 查询并返回对象。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>A collection of objects returned by the query.</source>
          <target state="translated">由查询返回的对象的集合。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>This method is a pass-through mechanism for cases where <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not provide for a particular scenario.</source>
          <target state="translated">此方法是用于用例的传递机制其中<ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>不提供针对特定方案。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:</source>
          <target state="translated">对字段的查询的结果中的匹配列和属性的对象中的算法的工作方式如下：</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>If a field or property is mapped to a particular column name, that column name is expected in the resultset.</source>
          <target state="translated">如果字段或属性映射到特定列名称，则结果集中应包含该列名称。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</source>
          <target state="translated">如果未映射字段或属性，则结果集中应包含其名称与该字段或属性相同的列。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The comparison is performed by first looking for a case-sensitive match.</source>
          <target state="translated">通过寻找区分大小写的匹配项的第一个进行比较。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>If such a match is not found, a subsequent search occurs for a case-insensitive match.</source>
          <target state="translated">如果未找到这样的匹配，后续搜索则会不区分大小写的匹配项。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:</source>
          <target state="translated">查询必须返回所有跟踪的字段和属性 （除延迟加载） 的对象的下列所有条件：</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>If <ph id="ph1">`&lt;T&gt;`</ph> is an entity explicitly tracked by the <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`&lt;T&gt;`</ph>将实体显式跟踪<ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>ObjectTrackingEnabled is true.</source>
          <target state="translated">ObjectTrackingEnabled 也是如此。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The entity has a primary key.</source>
          <target state="translated">实体具有主键。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>Otherwise an exception is thrown.</source>
          <target state="translated">否则会引发异常。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.</source>
          <target state="translated">在所有其他情况下，查询可以检索到的被跟踪的字段和对象的属性的子集。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The following C# snippet shows one use for this method:</source>
          <target state="translated">以下 C# 代码段演示一个使用此方法：</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>In Visual Basic</source>
          <target state="translated">在 Visual Basic 中</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>Gets the modified objects tracked by <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</source>
          <target state="translated">获取由 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>跟踪的被修改对象。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>The set of objects is returned as three read-only collections.</source>
          <target state="translated">该对象集返回为三个只读的集合。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>Note the following considerations:</source>
          <target state="translated">请注意以下事项：</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.GetChangeSet%2A&gt;</ph> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.GetChangeSet%2A&gt;</ph> 可能产生副作用，如推理的插入和删除时通常执行的操作<ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>For example, objects that are used in the following operations can create corresponding inferred operations in the following list:</source>
          <target state="translated">例如，以下操作中使用的对象可以创建以下列表中的相应的推断的操作：</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.EntitySet%601.Add%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Data.Linq.Table%601.InsertOnSubmit%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.EntitySet%601.Add%2A&gt;</ph> 到<ph id="ph2">&lt;xref:System.Data.Linq.Table%601.InsertOnSubmit%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.EntityRef%601&gt;</ph> assignment to null (possibly because of <ph id="ph2">&lt;xref:System.Data.Linq.EntitySet%601.Remove%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.EntityRef%601&gt;</ph> 为 null 的分配 (可能由于具有<ph id="ph2">&lt;xref:System.Data.Linq.EntitySet%601.Remove%2A&gt;</ph>到<ph id="ph3">&lt;xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>The set may not be ordered according to foreign key constraints.</source>
          <target state="translated">不可能根据外键约束排序集。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available.</source>
          <target state="translated">数据库生成的值 （例如，主键和外键的值、 时间戳，等） 将不可用。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).</source>
          <target state="translated">此类信息需要执行数据库命令，可能是检索信息 （例如，从主键的外键） 的传播。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>The set of changed objects is computed at the time of the call.</source>
          <target state="translated">在调用时计算的一套更改的对象。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> can produce a different set if additional changes are made.</source>
          <target state="translated">后续调用<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>如果进行其他更改可能会产生一组不同。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>Output when no changes have been made appears as follows:</source>
          <target state="translated">在不进行任何更改后的输出显示如下：</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>The query whose SQL command information is to be retrieved.</source>
          <target state="translated">要检索其 SQL 命令信息的查询。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>Gets the information about SQL commands generated by <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>.</source>
          <target state="translated">获取有关由 <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 生成的 SQL 命令的信息。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>The requested command information object.</source>
          <target state="translated">请求的命令信息对象。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>This method is only a getter and does not affect <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> state.</source>
          <target state="translated">此方法是仅 getter 并且不会影响<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>状态。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>Note the following considerations:</source>
          <target state="translated">请注意以下事项：</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>The argument must be non-null.</source>
          <target state="translated">自变量必须为非 null。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>Otherwise, a null argument exception is thrown.</source>
          <target state="translated">否则，会引发空参数异常。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>Normal query translation exceptions thrown during <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> query execution apply for a query that cannot be translated.</source>
          <target state="translated">正常查询期间引发的转换异常<ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>查询执行适用于无法转换的查询。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>Only the first query command is returned.</source>
          <target state="translated">返回仅第一个查询命令。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>Specifically, additional commands that are used for eager loading (<ph id="ph1">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph>) are not included.</source>
          <target state="translated">具体而言，适用于预先加载的其他命令 (<ph id="ph1">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph>)，不会包括。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> does not track what the user does with the command.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> 不跟踪用户如何处理该命令。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>For example, results from the execution of the returned command are not tracked and do not affect <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> state.</source>
          <target state="translated">例如，返回命令的执行结果不会跟踪，并且不会影响<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>状态。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetTable(System.Type)">
          <source>The type of the objects to be returned.</source>
          <target state="translated">要返回的对象的类型。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetTable(System.Type)">
          <source>Returns a collection of objects of a particular type, where the type is defined by the <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter.</source>
          <target state="translated">返回特定类型的对象的集合，其中类型由 <ph id="ph1">&lt;paramref name="type" /&gt;</ph> 参数定义。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetTable(System.Type)">
          <source>A collection of objects defined by the <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter.</source>
          <target state="translated">由 <ph id="ph1">&lt;paramref name="type" /&gt;</ph> 参数定义的对象的集合。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable(System.Type)">
          <source>This is a weakly typed version of <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph>.</source>
          <target state="translated">这是弱类型的版本的<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable(System.Type)">
          <source>It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically.</source>
          <target state="translated">请务必具有弱类型的版本，因为它是相对较常见的做法动态构造查询。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable(System.Type)">
          <source>It would be inconvenient to force the application to use reflection to call the correct generic method.</source>
          <target state="translated">它将是强制应用程序使用反射来调用正确的泛型方法很不方便。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable(System.Type)">
          <source>If there is no collection for a particular type, an exception is thrown.</source>
          <target state="translated">如果没有为特定类型的集合，则引发异常。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable``1">
          <source>The type of the objects to be returned.</source>
          <target state="translated">要返回的对象的类型。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetTable``1">
          <source>Returns a collection of objects of a particular type, where the type is defined by the <ph id="ph1">&lt;paramref name="TEntity" /&gt;</ph> parameter.</source>
          <target state="translated">返回特定类型的对象的集合，其中类型由 <ph id="ph1">&lt;paramref name="TEntity" /&gt;</ph> 参数定义。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetTable``1">
          <source>A collection of objects defined by the <ph id="ph1">&lt;paramref name="TEntity" /&gt;</ph> parameter.</source>
          <target state="translated">由 <ph id="ph1">&lt;paramref name="TEntity" /&gt;</ph> 参数定义的对象的集合。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable``1">
          <source>This method is the main entry point for querying.</source>
          <target state="translated">此方法是查询的主入口点。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable``1">
          <source>When a strongly typed <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is created, new generated properties encapsulate calls to this method.</source>
          <target state="translated">当强类型化<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>是创建新的生成的属性封装到此方法的调用。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable``1">
          <source>For example, a <ph id="ph1">`Customers`</ph> property is generated that returns <ph id="ph2">`GetTable&lt;Customer&gt;`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Customers`</ph>属性会生成返回<ph id="ph2">`GetTable&lt;Customer&gt;`</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable``1">
          <source>If there is no collection for a particular type, an exception is thrown.</source>
          <target state="translated">如果没有为特定类型的集合，则引发异常。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.LoadOptions">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataLoadOptions" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</source>
          <target state="translated">获取或设置与此 <ph id="ph2">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 关联的 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataLoadOptions" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.LoadOptions">
          <source>The prefetch load options for related data.</source>
          <target state="translated">相关数据的预提取加载选项。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.LoadOptions">
          <source>This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.</source>
          <target state="translated">此属性获取或设置用于定义延迟加载成员和相关的集合成员身份的预提取行为的选项。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.Log">
          <source>Gets or sets the destination to write the SQL query or command.</source>
          <target state="translated">获取或设置要写入 SQL 查询或命令的目标。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Log">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> to use for writing the command.</source>
          <target state="translated">要用于编写命令的 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Log">
          <source>Set this property to <ph id="ph1">`null`</ph> to disable command logging.</source>
          <target state="translated">将此属性设置为<ph id="ph1">`null`</ph>禁用命令日志记录。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Log">
          <source>The following example displays generated SQL in the console window before it displays the results of the query.</source>
          <target state="translated">下面的示例在控制台窗口中显示生成的 SQL，然后再显示查询的结果。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.Mapping">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaModel" /&gt;</ph> on which the mapping is based.</source>
          <target state="translated">获取映射所基于的 <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaModel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Mapping">
          <source>The mapping between a database and domain objects.</source>
          <target state="translated">在数据库和域对象之间的映射。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>Gets or sets a value that indicates whether object tracking is enabled.</source>
          <target state="translated">获取或设置一个值，该值指示是否启用对象跟踪。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object tracking is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果启用跟踪对象，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为<ph id="ph2">&lt;see langword="false" /&gt;</ph> 。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>Setting this property to <ph id="ph1">`false`</ph> improves performance at retrieval time, because there are fewer items to track.</source>
          <target state="translated">此属性设置为<ph id="ph1">`false`</ph>可提高在检索时的性能，因为存在可减少要跟踪的项目。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>An exception is thrown:</source>
          <target state="translated">引发异常：</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>If the property is set to <ph id="ph1">`false`</ph> after a query has been executed.</source>
          <target state="translated">如果该属性设置为<ph id="ph1">`false`</ph>执行查询后。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>For more information, see the Valid Modes section in <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">有关详细信息，请参阅中的有效模式部分<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>If the property is set to <ph id="ph1">`false`</ph> and <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
          <target state="translated">如果该属性设置为<ph id="ph1">`false`</ph>和<ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>If <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph> is <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph> is ignored and treated as <ph id="ph4">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph>是<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph>被忽略并且视为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is read-only.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>是只读的。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>If <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph>是<ph id="ph2">`true`</ph>，<ph id="ph3">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph>是<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>In this case, <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> allows you to load an object graph by using <ph id="ph2">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph> directives, but does not enable deferred loading.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>允许你通过使用加载对象图<ph id="ph2">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph>指令，但不会启用延迟的加载。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>Refreshes object state by using data in the database.</source>
          <target state="translated">使用数据库中的数据刷新对象的状态。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>This method is useful after an optimistic concurrency error to bring items into a state for another attempt.</source>
          <target state="translated">在开放式并发错误来将项目变为另一次尝试的状态后，此方法很有用。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>It updates the state of the primitive fields and properties on the objects.</source>
          <target state="translated">它将更新的基元字段和属性的对象的状态。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>If an object is on the <bpt id="p1">*</bpt>many<ept id="p1">*</ept> side of a one-to-many relationship, the foreign key on the object will be set and the object pointer for the other side of the relationship will be set to the new value.</source>
          <target state="translated">如果某对象位于<bpt id="p1">*</bpt>许多<ept id="p1">*</ept>将设置一个对多关系，该对象上的外键端和关系的另一端的对象指针将设置为新值。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)">
          <source>A value that specifies how optimistic concurrency conflicts are handled.</source>
          <target state="translated">一个指定如何处理开放式并发冲突的值。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)">
          <source>The collection of entities to be refreshed.</source>
          <target state="translated">要刷新的实体的集合。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)">
          <source>Refreshes a collection of entity objects according to the specified mode.</source>
          <target state="translated">按照指定模式刷新实体对象的集合。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)">
          <source>A value that specifies how optimistic concurrency conflicts are handled.</source>
          <target state="translated">一个指定如何处理开放式并发冲突的值。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)">
          <source>The object to be refreshed.</source>
          <target state="translated">要刷新的对象。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)">
          <source>Refreshes an entity object according to the specified mode.</source>
          <target state="translated">按照指定模式刷新实体对象。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])">
          <source>A value that specifies how optimistic concurrency conflicts are handled.</source>
          <target state="translated">一个指定如何处理开放式并发冲突的值。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])">
          <source>The array of entity objects to be refreshed.</source>
          <target state="translated">要刷新的实体对象的数组。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])">
          <source>Refreshes an array of entity objects according to the specified mode.</source>
          <target state="translated">按照指定模式刷新实体对象的数组。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</source>
          <target state="translated">计算要插入、更新或删除的已修改对象的集，并执行相应命令以实现对数据库的更改。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>If override methods are present for insert, update, or delete, <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> executes these methods instead of the default <ph id="ph2">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> commands.</source>
          <target state="translated">如果存在用于插入、 更新或删除、 重写方法<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>执行这些方法，而不是默认值<ph id="ph2">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>命令。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> starts a transaction and will roll back if an exception occurs while <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> 启动一个事务，就会将返回如果发生异常时<ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>正在执行。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>However, this does not roll back the changes in memory or tracked by the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>; those changes will need to be rolled back manually.</source>
          <target state="translated">但是，这不会回滚所做的更改在内存中或由跟踪<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>; 这些更改将需要手动回滚。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>You can start with a new instance of the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> if the changes in memory are to be discarded.</source>
          <target state="translated">你可以使用的新实例启动<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>如果内存中的更改将被放弃。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.SubmitChanges">
          <source>Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</source>
          <target state="translated">计算要插入、更新或删除的已修改对象的集，并执行相应命令以实现对数据库的更改。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.SubmitChanges">
          <source>If override methods are present for insert, update, or delete, <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> executes these methods instead of the default <ph id="ph2">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> commands.</source>
          <target state="translated">如果存在用于插入、 更新或删除、 重写方法<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>执行这些方法，而不是默认值<ph id="ph2">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>命令。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)">
          <source>The action to be taken if the submission fails.</source>
          <target state="translated">提交失败时要采取的操作。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)">
          <source>Valid arguments are as follows:</source>
          <target state="translated">有效参数包括：</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)">
          <source>Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.</source>
          <target state="translated">将对检索到的对象所做的更改发送到基础数据库，并指定提交失败时要采取的操作。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)">
          <source>Default failure mode is <ph id="ph1">&lt;xref:System.Data.Linq.ConflictMode.FailOnFirstConflict&gt;</ph>.</source>
          <target state="translated">默认失败模式是<ph id="ph1">&lt;xref:System.Data.Linq.ConflictMode.FailOnFirstConflict&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>Gets or sets a local transaction for the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> to use to access the database.</source>
          <target state="translated">获取或设置要用于访问数据库的 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 的本地事务。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>The transaction object used by the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> when executing queries and commands.</source>
          <target state="translated">执行查询和命令时由 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 使用的事务对象。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>The primary scenario for this property is interoperability with relational <ph id="ph1">[!INCLUDE[vstecado](~/includes/vstecado-md.md)]</ph> code.</source>
          <target state="translated">此属性的主要方案是与关系互操作性<ph id="ph1">[!INCLUDE[vstecado](~/includes/vstecado-md.md)]</ph>代码。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>For example, use this property when you write your own <ph id="ph1">`Create`</ph><ph id="ph2">/</ph><ph id="ph3">`Update`</ph><ph id="ph4">/</ph><ph id="ph5">`Delete`</ph> methods to set the <ph id="ph6">`Transaction`</ph> property on the ADO <ph id="ph7">`Command`</ph> object.</source>
          <target state="translated">例如，使用此属性，当你编写你自己<ph id="ph1">`Create`</ph> <ph id="ph2">/</ph> <ph id="ph3">`Update`</ph> <ph id="ph4">/</ph> <ph id="ph5">`Delete`</ph>方法，以便设置<ph id="ph6">`Transaction`</ph>属性 ADO<ph id="ph7">`Command`</ph>对象。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>Note the following:</source>
          <target state="translated">请注意以下事项：</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>If this property has not been explicitly set, the getter returns null.</source>
          <target state="translated">如果此属性未显式设置，则 getter 返回 null。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>If the code is executing in a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> context, setting this property throws an exception.</source>
          <target state="translated">如果在中执行代码<ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph>上下文中，设置此属性将引发异常。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>If this property is set and a new <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> is opened, an exception is thrown when a query or update is executed.</source>
          <target state="translated">如果此属性为组和新<ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph>是打开，将引发异常时执行的查询或更新。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>Converts an existing <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to objects.</source>
          <target state="translated">将现有 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> 转换为对象。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>Each row in the <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> is converted to an object in the <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">中的每一行<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>转换中的某个对象为<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>Description: This method is used to convert an existing <ph id="ph1">&lt;xref:System.Data.Common.DbDataReader&gt;</ph> to objects.</source>
          <target state="translated">描述： 此方法用于将转换的现有<ph id="ph1">&lt;xref:System.Data.Common.DbDataReader&gt;</ph>到对象。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>Each row in the <ph id="ph1">&lt;xref:System.Data.Common.DbDataReader&gt;</ph> is converted to an object in the <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">中的每一行<ph id="ph1">&lt;xref:System.Data.Common.DbDataReader&gt;</ph>转换中的某个对象为<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><bpt id="p1">**</bpt>Generic parameters:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>泛型参数：<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><ph id="ph1">`T`</ph>: See <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteQuery%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`T`</ph>： 请参阅<ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteQuery%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><bpt id="p1">**</bpt>Parameters:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>参数：<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><ph id="ph1">`Query`</ph>: See the description for command under <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Query`</ph>： 请参见下命令的说明<ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><ph id="ph1">`Parameters`</ph>: See the description for parameters under <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Parameters`</ph>： 请参见下的参数的说明<ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><bpt id="p1">**</bpt>Return type:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>返回类型：<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>: collection of objects returned by the conversion.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>： 返回转换的对象的集合。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to be converted.</source>
          <target state="translated">要转换的 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)">
          <source>Converts an existing <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> to objects.</source>
          <target state="translated">将现有 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> 转换为对象。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)">
          <source>A list of objects returned by the conversion.</source>
          <target state="translated">由转换返回的对象的列表。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>The type of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to be returned.</source>
          <target state="translated">要返回的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的类型。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>The algorithm for matching columns in the result to fields and properties in the object works as follows:</source>
          <target state="translated">使查询结果中的列与对象中的字段和属性相匹配的算法如下所示：</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>If a field or property is mapped to a particular column name, that column name is expected in the resultset.</source>
          <target state="translated">如果字段或属性映射到特定列名称，则结果集中应包含该列名称。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</source>
          <target state="translated">如果未映射字段或属性，则结果集中应包含其名称与该字段或属性相同的列。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>The comparison is performed by looking for a case-sensitive match first.</source>
          <target state="translated">通过先查找区分大小写的匹配来执行比较。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>If this match is not found, a subsequent search is occurs for a case-insensitive match.</source>
          <target state="translated">如果未找到匹配项，则会继续搜索不区分大小写的匹配项。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</source>
          <target state="translated">如果同时满足下列所有条件，则该查询应当返回（除延迟加载的对象外的）对象的所有跟踪的字段和属性：</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> is an entity explicitly tracked by the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> 是由 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 显式跟踪的实体。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source><ph id="ph1">&lt;see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>The entity has a primary key.</source>
          <target state="translated">实体具有主键。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>Otherwise an exception is thrown.</source>
          <target state="translated">否则会引发异常。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to be converted.</source>
          <target state="translated">要转换的 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>Converts an existing <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> to objects.</source>
          <target state="translated">将现有 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> 转换为对象。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>A list of objects returned by the conversion.</source>
          <target state="translated">由转换返回的对象的列表。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)">
          <source>The type of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to be returned.</source>
          <target state="translated">要返回的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的类型。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to be converted.</source>
          <target state="translated">要转换的 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)">
          <source>Converts an existing <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> to objects.</source>
          <target state="translated">将现有 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> 转换为对象。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)">
          <source>A collection of objects returned by the conversion.</source>
          <target state="translated">由转换返回的对象的集合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>