<Type Name="DataLoadOptions" FullName="System.Data.Linq.DataLoadOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d7a1641f923121f7dc6f5ac9f8bc574e9cf05e1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37680931" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataLoadOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataLoadOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.DataLoadOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataLoadOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataLoadOptions sealed" />
  <TypeSignature Language="F#" Value="type DataLoadOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="537d1-101">Provides for immediate loading and filtering of related data.</span>
      <span class="sxs-lookup">
        <span data-stu-id="537d1-101">Provides for immediate loading and filtering of related data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="general"></a><span data-ttu-id="537d1-102">常规</span><span class="sxs-lookup"><span data-stu-id="537d1-102">General</span></span>  
 <span data-ttu-id="537d1-103">查询某对象时，实际上您只检索请求的对象。</span><span class="sxs-lookup"><span data-stu-id="537d1-103">When you query for an object, you actually retrieve only the object you requested.</span></span> <span data-ttu-id="537d1-104">*相关*不会自动获取对象在同一时间。</span><span class="sxs-lookup"><span data-stu-id="537d1-104">The *related* objects are not automatically fetched at the same time.</span></span> <span data-ttu-id="537d1-105">(有关详细信息，请参阅[跨关系查询](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md)。)</span><span class="sxs-lookup"><span data-stu-id="537d1-105">(For more information, see [Querying Across Relationships](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md).)</span></span>  
  
 <span data-ttu-id="537d1-106"><xref:System.Data.Linq.DataLoadOptions>类提供两种方法来实现即时加载指定的相关数据。</span><span class="sxs-lookup"><span data-stu-id="537d1-106">The <xref:System.Data.Linq.DataLoadOptions> class provides two methods to achieve immediate loading of specified related data.</span></span> <span data-ttu-id="537d1-107"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>方法，用以立即加载与主目标相关的数据。</span><span class="sxs-lookup"><span data-stu-id="537d1-107">The <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> method allows for immediate loading of data related to the main target.</span></span> <span data-ttu-id="537d1-108"><xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A>方法可筛选相关的对象。</span><span class="sxs-lookup"><span data-stu-id="537d1-108">The <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> method allows for filtering related objects.</span></span>  
  
## <a name="rules"></a><span data-ttu-id="537d1-109">规则</span><span class="sxs-lookup"><span data-stu-id="537d1-109">Rules</span></span>  
 <span data-ttu-id="537d1-110">请注意以下规则有关<xref:System.Data.Linq.DataLoadOptions>使用情况：</span><span class="sxs-lookup"><span data-stu-id="537d1-110">Note the following rules regarding <xref:System.Data.Linq.DataLoadOptions> usage:</span></span>  
  
-   <span data-ttu-id="537d1-111">将分配<xref:System.Data.Linq.DataLoadOptions>到<xref:System.Data.Linq.DataContext>执行第一个查询后将引发异常。</span><span class="sxs-lookup"><span data-stu-id="537d1-111">Assigning a <xref:System.Data.Linq.DataLoadOptions> to a <xref:System.Data.Linq.DataContext> after the first query has been executed generates an exception.</span></span>  
  
-   <span data-ttu-id="537d1-112">修改<xref:System.Data.Linq.DataLoadOptions>分配给后<xref:System.Data.Linq.DataContext>将引发异常</span><span class="sxs-lookup"><span data-stu-id="537d1-112">Modifying a <xref:System.Data.Linq.DataLoadOptions> after it has been assigned to a <xref:System.Data.Linq.DataContext> generates an exception</span></span>  
  
## <a name="cycle-handling"></a><span data-ttu-id="537d1-113">循环处理</span><span class="sxs-lookup"><span data-stu-id="537d1-113">Cycle Handling</span></span>  
 <span data-ttu-id="537d1-114"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> 和<xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A>指令必须不能创建循环。</span><span class="sxs-lookup"><span data-stu-id="537d1-114"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> and <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> directives must not create cycles.</span></span> <span data-ttu-id="537d1-115">下面给出了此类关系图的示例：</span><span class="sxs-lookup"><span data-stu-id="537d1-115">The following represent examples of such graphs:</span></span>  
  
-   <span data-ttu-id="537d1-116">示例 1： 自递归</span><span class="sxs-lookup"><span data-stu-id="537d1-116">Example 1: Self recursive</span></span>  
  
    -   `dlo.LoadWith<Employee>(e => e.Reports);`  
  
-   <span data-ttu-id="537d1-117">示例 2： 后向指针</span><span class="sxs-lookup"><span data-stu-id="537d1-117">Example 2: Back-pointers</span></span>  
  
    -   `dlo.LoadWith <Customer>(c => C.Orders);`  
  
    -   `dlo.LoadWith <Order>(o => o.Customer);`  
  
-   <span data-ttu-id="537d1-118">示例 3： 较长周期</span><span class="sxs-lookup"><span data-stu-id="537d1-118">Example 3: Longer cycles</span></span>  
  
     <span data-ttu-id="537d1-119">尽管这不应该发生在正常模式，就可以了。</span><span class="sxs-lookup"><span data-stu-id="537d1-119">Although this should not occur in a well-normalized model, it is possible.</span></span>  
  
    -   `dlo.LoadWith <A>(a => a.Bs);`  
  
    -   `dlo.LoadWith <B>(b => b.Cs);`  
  
    -   `dlo.LoadWith <C>(c => c.As);`  
  
-   <span data-ttu-id="537d1-120">示例 4： 自递归子查询</span><span class="sxs-lookup"><span data-stu-id="537d1-120">Example 4: Self recursive subQueries</span></span>  
  
    -   `dlo.AssociateWith<A>(a=>a.As.Where(a=>a.Id=33));`  
  
-   <span data-ttu-id="537d1-121">示例 5： 延长递归子查询</span><span class="sxs-lookup"><span data-stu-id="537d1-121">Example 5: Longer recursive subqueries</span></span>  
  
    -   `dlo.AssociateWith<A>(a=>a.Bs.Where(b=>b.Id==3));`  
  
    -   `dlo.AssociateWith<B>(b=>b.As.Where(a=>a.Id==3));`  
  
 <span data-ttu-id="537d1-122">以下是一些常规规则，帮助你了解这些方案中发生的事情。</span><span class="sxs-lookup"><span data-stu-id="537d1-122">The following are some general rules that help you understand what occurs in these scenarios.</span></span>  
  
 <span data-ttu-id="537d1-123">**LoadWith**每次调用<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>检查周期是否已引入到关系图。</span><span class="sxs-lookup"><span data-stu-id="537d1-123">**LoadWith** Each call to <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> checks whether cycles have been introduced into the graph.</span></span> <span data-ttu-id="537d1-124">如果有，如示例 1、 2 和 3，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="537d1-124">If there are, as in Examples 1, 2, and 3, an exception is thrown.</span></span>  
  
 <span data-ttu-id="537d1-125">**使用 AssociateWith**在运行时引擎不适应于现有的子查询子句表达式中的关系。</span><span class="sxs-lookup"><span data-stu-id="537d1-125">**AssociateWith** The engine at run time does not apply the existing SubQuery clauses to the relationship inside the expression.</span></span>  
  
-   <span data-ttu-id="537d1-126">示例 4 中`Where`子句执行对所有`A`，而不仅仅是子筛选的子查询表达式本身 （因为它将成为递归）</span><span class="sxs-lookup"><span data-stu-id="537d1-126">In Example 4, the `Where` clause is executed against all `A`, not just the ones sub-filtered by the SubQuery expression itself (because that would be recursive)</span></span>  
  
-   <span data-ttu-id="537d1-127">在示例 5 中，第一个`Where`子句应用于所有`B`s，即使在有子查询`B`。</span><span class="sxs-lookup"><span data-stu-id="537d1-127">In Example 5, the first `Where` clause is applied to all the `B`s, even though there are subqueries on `B`.</span></span> <span data-ttu-id="537d1-128">第二个`Where`子句应用于所有`A`即使有的子查询上`A`。</span><span class="sxs-lookup"><span data-stu-id="537d1-128">The second `Where` clause is applied to all the `A`s even though there are subqueries on `A`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="537d1-129">当检索`Customers`从 Northwind 示例数据库，可以使用<xref:System.Data.Linq.DataLoadOptions>以指定`Orders`也是要检索。</span><span class="sxs-lookup"><span data-stu-id="537d1-129">When you retrieve `Customers` from the Northwind sample database, you can use <xref:System.Data.Linq.DataLoadOptions> to specify that `Orders` is also to be retrieved.</span></span> <span data-ttu-id="537d1-130">您甚至可以指定哪些子集`Orders`来检索。</span><span class="sxs-lookup"><span data-stu-id="537d1-130">You can even specify which subset of `Orders` to retrieve.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLoadOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataLoadOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="537d1-131">Initializes a new instance of the <see cref="T:System.Data.Linq.DataLoadOptions" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-131">Initializes a new instance of the <see cref="T:System.Data.Linq.DataLoadOptions" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociateWith">
      <MemberSignature Language="C#" Value="public void AssociateWith (System.Linq.Expressions.LambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociateWith(class System.Linq.Expressions.LambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.AssociateWith(System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociateWith (expression As LambdaExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssociateWith(System::Linq::Expressions::LambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.AssociateWith : System.Linq.Expressions.LambdaExpression -&gt; unit" Usage="dataLoadOptions.AssociateWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="537d1-132">Identifies the query to be used on a particular one-to-many field or property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-132">Identifies the query to be used on a particular one-to-many field or property.</span>
          </span>
          <span data-ttu-id="537d1-133">Note the following:  If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-133">Note the following:  If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span>
          </span>
          <span data-ttu-id="537d1-134">If an operator other than a valid operator appears in the expression, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-134">If an operator other than a valid operator appears in the expression, an exception is thrown.</span>
          </span>
          <span data-ttu-id="537d1-135">Valid operators are as follows:  Where  OrderBy  ThenBy  OrderByDescending  ThenByDescending  Take</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-135">Valid operators are as follows:  Where  OrderBy  ThenBy  OrderByDescending  ThenByDescending  Take</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="537d1-136">Filters the objects retrieved for a particular relationship.</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-136">Filters the objects retrieved for a particular relationship.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="537d1-137">在以下示例中，内部循环访问只能通过那些`Orders`的尚未发运今天。</span><span class="sxs-lookup"><span data-stu-id="537d1-137">In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociateWith&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AssociateWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociateWith&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, object&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.AssociateWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociateWith(Of T) (expression As Expression(Of Func(Of T, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void AssociateWith(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="member this.AssociateWith : System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; -&gt; unit" Usage="dataLoadOptions.AssociateWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="537d1-138">要查询的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-138">The type that is queried against.</span>
          </span>
          <span data-ttu-id="537d1-139">如果未映射的类型，则将引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-139">If the type is unmapped, an exception is thrown.</span>
          </span>
        </typeparam>
        <param name="expression">
          <span data-ttu-id="537d1-140">Identifies the query to be used on a particular one-to-many field or property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-140">Identifies the query to be used on a particular one-to-many field or property.</span>
          </span>
          <span data-ttu-id="537d1-141">Note the following:  If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-141">Note the following:  If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span>
          </span>
          <span data-ttu-id="537d1-142">If an operator other than a valid operator appears in the expression, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-142">If an operator other than a valid operator appears in the expression, an exception is thrown.</span>
          </span>
          <span data-ttu-id="537d1-143">Valid operators are as follows:  Where  OrderBy  ThenBy  OrderByDescending  ThenByDescending  Take</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-143">Valid operators are as follows:  Where  OrderBy  ThenBy  OrderByDescending  ThenByDescending  Take</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="537d1-144">Filters objects retrieved for a particular relationship.</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-144">Filters objects retrieved for a particular relationship.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="537d1-145">有关如何避免周期的信息，请参阅<xref:System.Data.Linq.DataLoadOptions>。</span><span class="sxs-lookup"><span data-stu-id="537d1-145">For information about how to avoid cycles, see <xref:System.Data.Linq.DataLoadOptions>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="537d1-146">在以下示例中，内部循环访问只能通过那些`Orders`的尚未发运今天。</span><span class="sxs-lookup"><span data-stu-id="537d1-146">In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssociationCriteria">
      <MemberSignature Language="C#" Value="public bool GetAssociationCriteria (System.Reflection.MemberInfo memberInfo, out System.Linq.Expressions.LambdaExpression associationCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetAssociationCriteria(class System.Reflection.MemberInfo memberInfo, [out] class System.Linq.Expressions.LambdaExpression&amp; associationCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.GetAssociationCriteria(System.Reflection.MemberInfo,System.Linq.Expressions.LambdaExpression@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetAssociationCriteria(System::Reflection::MemberInfo ^ memberInfo, [Runtime::InteropServices::Out] System::Linq::Expressions::LambdaExpression ^ % associationCriteria);" />
      <MemberSignature Language="F#" Value="member this.GetAssociationCriteria : System.Reflection.MemberInfo *  -&gt; bool" Usage="dataLoadOptions.GetAssociationCriteria (memberInfo, associationCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="associationCriteria" Type="System.Linq.Expressions.LambdaExpression&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memberInfo">To be added.</param>
        <param name="associationCriteria">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmediate">
      <MemberSignature Language="C#" Value="public bool IsImmediate (System.Reflection.MemberInfo memberInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsImmediate(class System.Reflection.MemberInfo memberInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.IsImmediate(System.Reflection.MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsImmediate(System::Reflection::MemberInfo ^ memberInfo);" />
      <MemberSignature Language="F#" Value="member this.IsImmediate : System.Reflection.MemberInfo -&gt; bool" Usage="dataLoadOptions.IsImmediate memberInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="memberInfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWith">
      <MemberSignature Language="C#" Value="public void LoadWith (System.Linq.Expressions.LambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadWith(class System.Linq.Expressions.LambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.LoadWith(System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadWith (expression As LambdaExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadWith(System::Linq::Expressions::LambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.LoadWith : System.Linq.Expressions.LambdaExpression -&gt; unit" Usage="dataLoadOptions.LoadWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="537d1-147">A lambda expression that identifies the related material.</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-147">A lambda expression that identifies the related material.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="537d1-148">Retrieves specified data related to the main target by using a lambda expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-148">Retrieves specified data related to the main target by using a lambda expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="537d1-149">在下面的示例中，在执行查询时会检索到位于伦敦的所有 `Orders` 所下的所有 `Customers`。</span><span class="sxs-lookup"><span data-stu-id="537d1-149">In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed.</span></span> <span data-ttu-id="537d1-150">这样一来，连续访问 `Orders` 对象的 `Customer` 属性不会触发新的数据库查询。</span><span class="sxs-lookup"><span data-stu-id="537d1-150">As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWith&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void LoadWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadWith&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, object&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.LoadWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadWith(Of T) (expression As Expression(Of Func(Of T, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void LoadWith(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="member this.LoadWith : System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; -&gt; unit" Usage="dataLoadOptions.LoadWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="537d1-151">要查询的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-151">Type that is queried against.</span>
          </span>
          <span data-ttu-id="537d1-152">如果未映射此类型，则将引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-152">If this type is unmapped, an exception is thrown.</span>
          </span>
        </typeparam>
        <param name="expression">
          <span data-ttu-id="537d1-153">Identifies the field or property to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-153">Identifies the field or property to be retrieved.</span>
          </span>
          <span data-ttu-id="537d1-154">If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-154">If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="537d1-155">Specifies which sub-objects to retrieve when a query is submitted for an object of type T.</span>
          <span class="sxs-lookup">
            <span data-stu-id="537d1-155">Specifies which sub-objects to retrieve when a query is submitted for an object of type T.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="537d1-156">不能指定关系的两个级别的加载 (例如， `Orders.OrderDetails`)。</span><span class="sxs-lookup"><span data-stu-id="537d1-156">You cannot specify the loading of two levels of relationships (for example, `Orders.OrderDetails`).</span></span> <span data-ttu-id="537d1-157">在这些情况下，您必须指定两个单独<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="537d1-157">In these scenarios you must specify two separate <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> methods.</span></span>  
  
 <span data-ttu-id="537d1-158">若要避免重启，请参阅备注部分中<xref:System.Data.Linq.DataLoadOptions>。</span><span class="sxs-lookup"><span data-stu-id="537d1-158">To avoid cycling, see Remarks section in <xref:System.Data.Linq.DataLoadOptions>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="537d1-159">在下面的示例中，在执行查询时会检索到位于伦敦的所有 `Orders` 所下的所有 `Customers`。</span><span class="sxs-lookup"><span data-stu-id="537d1-159">In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed.</span></span> <span data-ttu-id="537d1-160">这样一来，连续访问 `Orders` 对象的 `Customer` 属性不会触发新的数据库查询。</span><span class="sxs-lookup"><span data-stu-id="537d1-160">As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>