<Type Name="DispatcherOperationCallback" FullName="System.Windows.Threading.DispatcherOperationCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f35837adb545826b8ccf6c0e4e6d525ca4ff04d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36463815" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate object DispatcherOperationCallback(object arg);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DispatcherOperationCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherOperationCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function DispatcherOperationCallback(arg As Object) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ DispatcherOperationCallback(System::Object ^ arg);" />
  <TypeSignature Language="F#" Value="type DispatcherOperationCallback = delegate of obj -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="arg">
      <span data-ttu-id="a2cae-101">一个传递到回叫的参数。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a2cae-101">An argument passed to the callback.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="a2cae-102">表示一个用于调度程序操作的委托。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a2cae-102">Represents a delegate to use for dispatcher operations.</span>
      </span>
    </summary>
    <returns>
      <span data-ttu-id="a2cae-103">由回叫返回的对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a2cae-103">The object returned by the callback.</span>
      </span>
    </returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2cae-104">不需要此委托用于调度程序操作，但<xref:System.Windows.Threading.DispatcherOperationCallback>和<xref:System.Threading.SendOrPostCallback>使用动态调用。</span><span class="sxs-lookup"><span data-stu-id="a2cae-104">It is not necessary to use this delegate for dispatcher operations, but <xref:System.Windows.Threading.DispatcherOperationCallback> and <xref:System.Threading.SendOrPostCallback> use dynamic invoking.</span></span>  
  
 <span data-ttu-id="a2cae-105">部分信任应用程序不支持动态调用，因此你必须使用<xref:System.Windows.Threading.DispatcherOperationCallback>或<xref:System.Threading.SendOrPostCallback>如果应用程序要在部分信任中运行。</span><span class="sxs-lookup"><span data-stu-id="a2cae-105">Partial Trust applications do not support dynamic invoking, so you must use either <xref:System.Windows.Threading.DispatcherOperationCallback> or <xref:System.Threading.SendOrPostCallback> if the application is going to be running in Partial Trust.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
    <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
  </Docs>
</Type>