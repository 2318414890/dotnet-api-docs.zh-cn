<Type Name="DispatcherUnhandledExceptionFilterEventArgs" FullName="System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59ff5d890e8899a4796b5ae29d5f2cd9cf2d941f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36463505" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DispatcherUnhandledExceptionFilterEventArgs : System.Windows.Threading.DispatcherEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DispatcherUnhandledExceptionFilterEventArgs extends System.Windows.Threading.DispatcherEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DispatcherUnhandledExceptionFilterEventArgs&#xA;Inherits DispatcherEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherUnhandledExceptionFilterEventArgs sealed : System::Windows::Threading::DispatcherEventArgs" />
  <TypeSignature Language="F#" Value="type DispatcherUnhandledExceptionFilterEventArgs = class&#xA;    inherit DispatcherEventArgs" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="27ada-101">为 <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" /> 事件提供数据。</span>
      <span class="sxs-lookup">
        <span data-stu-id="27ada-101">Provides data for the <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ada-102"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>发生事件时通过执行代码时<xref:System.Windows.Threading.Dispatcher>引发未经处理的异常。</span><span class="sxs-lookup"><span data-stu-id="27ada-102">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event occurs when code executing by way of the <xref:System.Windows.Threading.Dispatcher> throws an exception which is not handled.</span></span>  
  
 <span data-ttu-id="27ada-103"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>事件提供了一种方法不会引发<xref:System.Windows.Threading.Dispatcher.UnhandledException>事件。</span><span class="sxs-lookup"><span data-stu-id="27ada-103">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="27ada-104"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>首先，将引发事件; 如果<xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A>上<xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs>设置为`false`、<xref:System.Windows.Threading.Dispatcher.UnhandledException>不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="27ada-104">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
    <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
  </Docs>
  <Members>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27ada-105">获取通过调度程序执行代码时引发的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27ada-105">Gets the exception that was raised when executing code by way of the dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27ada-106">异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27ada-106">The exception.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />
      </Docs>
    </Member>
    <Member MemberName="RequestCatch">
      <MemberSignature Language="C#" Value="public bool RequestCatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequestCatch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestCatch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequestCatch { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequestCatch : bool with get, set" Usage="System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27ada-107">获取或设置异常是否应被捕获，并获取或设置调用的事件处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27ada-107">Gets or sets whether the exception should be caught and the event handlers called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27ada-108">如果应引发 <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27ada-108">
              <see langword="true" /> if the <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> should be raised; otherwise; <see langword="false" />.</span>
          </span>
          <span data-ttu-id="27ada-109">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27ada-109">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ada-110"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>事件提供了一种方法不会引发<xref:System.Windows.Threading.Dispatcher.UnhandledException>事件。</span><span class="sxs-lookup"><span data-stu-id="27ada-110">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="27ada-111"><xref:System.Windows.Threading.Dispatcher.UnhandledException>引发第一次，并且如果<xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A>上<xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs>设置为`false`、<xref:System.Windows.Threading.Dispatcher.UnhandledException>不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="27ada-111">The <xref:System.Windows.Threading.Dispatcher.UnhandledException> is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 <span data-ttu-id="27ada-112">在事件多路广播上一个处理程序可能具有已将设置此属性为`false`，指明不会捕获异常。</span><span class="sxs-lookup"><span data-stu-id="27ada-112">A previous handler in the event multicast might have already set this property to `false`, indicating that the exception will not be caught.</span></span>  <span data-ttu-id="27ada-113">"不要捕捉"行为将覆盖所有其他用户，因为它最有可能表示一个调试方案。</span><span class="sxs-lookup"><span data-stu-id="27ada-113">The "don't catch" behavior will override all others because it most likely means a debugging scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />
      </Docs>
    </Member>
  </Members>
</Type>