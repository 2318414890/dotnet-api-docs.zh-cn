<Type Name="ILease" FullName="System.Runtime.Remoting.Lifetime.ILease">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03b1c106b34acd9b0bf000ddda1760ed525fb1e2" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51861884" /></Metadata><TypeSignature Language="C#" Value="public interface ILease" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILease" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Lifetime.ILease" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILease" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILease" />
  <TypeSignature Language="F#" Value="type ILease = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9f052-101">定义远程处理生存期服务所使用的生存期租约对象。</span><span class="sxs-lookup"><span data-stu-id="9f052-101">Defines a lifetime lease object that is used by the remoting lifetime service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f052-102">可以删除服务器应用程序时，分布式垃圾回收控制。</span><span class="sxs-lookup"><span data-stu-id="9f052-102">Distributed garbage collection controls when server applications can be deleted.</span></span> <span data-ttu-id="9f052-103">传统上，分布式的垃圾回收使用引用计数和 ping 进行控制。</span><span class="sxs-lookup"><span data-stu-id="9f052-103">Traditionally, distributed garbage collection uses reference counts and pinging for control.</span></span> <span data-ttu-id="9f052-104">这适用于有几个客户端，每个对象，但也有成千上万的客户端每个每个对象时不起作用。</span><span class="sxs-lookup"><span data-stu-id="9f052-104">This works well when there are a few clients per object, but does not work well when there are thousands of clients per each object.</span></span> <span data-ttu-id="9f052-105">当客户端的数量增加时，生存期服务可采用传统分布式垃圾回收器和扩展的函数。</span><span class="sxs-lookup"><span data-stu-id="9f052-105">The lifetime service can assume the function of a traditional distributed garbage collector, and scales well when the number of clients increases.</span></span>  
  
 <span data-ttu-id="9f052-106">生存期服务将租约与每个远程激活的对象相关联。</span><span class="sxs-lookup"><span data-stu-id="9f052-106">The lifetime service associates a lease with each remotely activated object.</span></span> <span data-ttu-id="9f052-107">租约过期时，删除的对象。</span><span class="sxs-lookup"><span data-stu-id="9f052-107">When the lease expires, the object is removed.</span></span> <span data-ttu-id="9f052-108">租约可以指定某一对象具有无限的生存期。</span><span class="sxs-lookup"><span data-stu-id="9f052-108">A lease can specify that an object has an infinite lifetime.</span></span>  
  
 <span data-ttu-id="9f052-109">每个<xref:System.AppDomain>包含管理域中的租约的租约管理器。</span><span class="sxs-lookup"><span data-stu-id="9f052-109">Each <xref:System.AppDomain> contains a lease manager that administers the leases in the domain.</span></span> <span data-ttu-id="9f052-110">租约管理器定期检查租约过期。</span><span class="sxs-lookup"><span data-stu-id="9f052-110">The lease manager periodically examines the leases for time expiration.</span></span> <span data-ttu-id="9f052-111">如果租约过期时，它可以为已取消删除租约，对其引用或通过调用一个或多个租约主办方续订。</span><span class="sxs-lookup"><span data-stu-id="9f052-111">If a lease has expired, it can either be canceled by removing its reference to the lease, or renewed by invoking one or more of the lease's sponsors.</span></span>  
  
 <span data-ttu-id="9f052-112">租约包含属性，以确定其策略和续订租约时间的方法。</span><span class="sxs-lookup"><span data-stu-id="9f052-112">A lease contains properties that determine its policies, and methods that renew the lease time.</span></span> <span data-ttu-id="9f052-113">租约公开<xref:System.Runtime.Remoting.Lifetime.ILease>接口。</span><span class="sxs-lookup"><span data-stu-id="9f052-113">The lease exposes the <xref:System.Runtime.Remoting.Lifetime.ILease> interface.</span></span>  
  
 <span data-ttu-id="9f052-114">有关演示如何使用的示例<xref:System.Runtime.Remoting.Lifetime.ILease>接口，请参阅[生存期](https://msdn.microsoft.com/library/334a30e5-33cb-4f0f-a38a-ed4abc5560fa)。</span><span class="sxs-lookup"><span data-stu-id="9f052-114">For an example showing how to use the <xref:System.Runtime.Remoting.Lifetime.ILease> interface see [Lifetimes](https://msdn.microsoft.com/library/334a30e5-33cb-4f0f-a38a-ed4abc5560fa).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CurrentLeaseTime">
      <MemberSignature Language="C#" Value="public TimeSpan CurrentLeaseTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CurrentLeaseTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentLeaseTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CurrentLeaseTime { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentLeaseTime : TimeSpan" Usage="System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f052-115">获取租约的剩余时间。</span><span class="sxs-lookup"><span data-stu-id="9f052-115">Gets the amount of time remaining on the lease.</span></span></summary>
        <value><span data-ttu-id="9f052-116">租约的剩余时间。</span><span class="sxs-lookup"><span data-stu-id="9f052-116">The amount of time remaining on the lease.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9f052-117">直接调用方通过引用接口进行调用，且没有基础结构权限。</span><span class="sxs-lookup"><span data-stu-id="9f052-117">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9f052-118">用于操作的基础结构代码。</span><span class="sxs-lookup"><span data-stu-id="9f052-118">for operating with infrastructure code.</span></span> <span data-ttu-id="9f052-119">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="9f052-119">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Lifetime.LeaseState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Remoting.Lifetime.LeaseState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As LeaseState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Lifetime::LeaseState CurrentState { System::Runtime::Remoting::Lifetime::LeaseState get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentState : System.Runtime.Remoting.Lifetime.LeaseState" Usage="System.Runtime.Remoting.Lifetime.ILease.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Lifetime.LeaseState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f052-120">获取租约的当前 <see cref="T:System.Runtime.Remoting.Lifetime.LeaseState" />。</span><span class="sxs-lookup"><span data-stu-id="9f052-120">Gets the current <see cref="T:System.Runtime.Remoting.Lifetime.LeaseState" /> of the lease.</span></span></summary>
        <value><span data-ttu-id="9f052-121">租约的当前 <see cref="T:System.Runtime.Remoting.Lifetime.LeaseState" />。</span><span class="sxs-lookup"><span data-stu-id="9f052-121">The current <see cref="T:System.Runtime.Remoting.Lifetime.LeaseState" /> of the lease.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9f052-122">直接调用方通过引用接口进行调用，且没有基础结构权限。</span><span class="sxs-lookup"><span data-stu-id="9f052-122">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9f052-123">用于操作的基础结构代码。</span><span class="sxs-lookup"><span data-stu-id="9f052-123">for operating with infrastructure code.</span></span> <span data-ttu-id="9f052-124">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="9f052-124">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
        <altmember cref="T:System.Runtime.Remoting.Lifetime.LeaseState" />
      </Docs>
    </Member>
    <Member MemberName="InitialLeaseTime">
      <MemberSignature Language="C#" Value="public TimeSpan InitialLeaseTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan InitialLeaseTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialLeaseTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan InitialLeaseTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.InitialLeaseTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f052-125">获取或设置租约的初始时间。</span><span class="sxs-lookup"><span data-stu-id="9f052-125">Gets or sets the initial time for the lease.</span></span></summary>
        <value><span data-ttu-id="9f052-126">租约的初始时间。</span><span class="sxs-lookup"><span data-stu-id="9f052-126">The initial time for the lease.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f052-127">如果<xref:System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime%2A>属性设置为<xref:System.TimeSpan.Zero?displayProperty=nameWithType>，然后租约将永远不会超时并与之关联的对象将具有无限的生存期。</span><span class="sxs-lookup"><span data-stu-id="9f052-127">If the <xref:System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime%2A> property is set to <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, then the lease will never time out and the object associated with it will have an infinite lifetime.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9f052-128">直接调用方通过引用接口进行调用，且没有基础结构权限。</span><span class="sxs-lookup"><span data-stu-id="9f052-128">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9f052-129">用于操作的基础结构代码。</span><span class="sxs-lookup"><span data-stu-id="9f052-129">for operating with infrastructure code.</span></span> <span data-ttu-id="9f052-130">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="9f052-130">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Register">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f052-131">为该租约注册主办方。</span><span class="sxs-lookup"><span data-stu-id="9f052-131">Registers a sponsor for the lease.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (System.Runtime.Remoting.Lifetime.ISponsor obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(class System.Runtime.Remoting.Lifetime.ISponsor obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (obj As ISponsor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register(System::Runtime::Remoting::Lifetime::ISponsor ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Register : System.Runtime.Remoting.Lifetime.ISponsor -&gt; unit" Usage="iLease.Register obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9f052-132">主办方的回调对象。</span><span class="sxs-lookup"><span data-stu-id="9f052-132">The callback object of the sponsor.</span></span></param>
        <summary><span data-ttu-id="9f052-133">在不续订租约的前提下为该租约注册主办方。</span><span class="sxs-lookup"><span data-stu-id="9f052-133">Registers a sponsor for the lease without renewing the lease.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f052-134">如果当前方法注册主办方，则不续订租约。</span><span class="sxs-lookup"><span data-stu-id="9f052-134">If a sponsor is registered with the current method, the lease is not renewed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9f052-135">直接调用方通过引用接口进行调用，且没有基础结构权限。</span><span class="sxs-lookup"><span data-stu-id="9f052-135">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9f052-136">用于操作的基础结构代码。</span><span class="sxs-lookup"><span data-stu-id="9f052-136">for operating with infrastructure code.</span></span> <span data-ttu-id="9f052-137">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="9f052-137">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (System.Runtime.Remoting.Lifetime.ISponsor obj, TimeSpan renewalTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(class System.Runtime.Remoting.Lifetime.ISponsor obj, valuetype System.TimeSpan renewalTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (obj As ISponsor, renewalTime As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register(System::Runtime::Remoting::Lifetime::ISponsor ^ obj, TimeSpan renewalTime);" />
      <MemberSignature Language="F#" Value="abstract member Register : System.Runtime.Remoting.Lifetime.ISponsor * TimeSpan -&gt; unit" Usage="iLease.Register (obj, renewalTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
        <Parameter Name="renewalTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9f052-138">主办方的回调对象。</span><span class="sxs-lookup"><span data-stu-id="9f052-138">The callback object of the sponsor.</span></span></param>
        <param name="renewalTime"><span data-ttu-id="9f052-139">租约的续订期时间长度。</span><span class="sxs-lookup"><span data-stu-id="9f052-139">The length of time to renew the lease by.</span></span></param>
        <summary><span data-ttu-id="9f052-140">为该租约注册主办方，并将其续订指定的 <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="9f052-140">Registers a sponsor for the lease, and renews it by the specified <see cref="T:System.TimeSpan" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9f052-141">直接调用方通过引用接口进行调用，且没有基础结构权限。</span><span class="sxs-lookup"><span data-stu-id="9f052-141">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9f052-142">用于操作的基础结构代码。</span><span class="sxs-lookup"><span data-stu-id="9f052-142">for operating with infrastructure code.</span></span> <span data-ttu-id="9f052-143">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="9f052-143">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Renew">
      <MemberSignature Language="C#" Value="public TimeSpan Renew (TimeSpan renewalTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan Renew(valuetype System.TimeSpan renewalTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Renew(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Renew (renewalTime As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Renew(TimeSpan renewalTime);" />
      <MemberSignature Language="F#" Value="abstract member Renew : TimeSpan -&gt; TimeSpan" Usage="iLease.Renew renewalTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renewalTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="renewalTime"><span data-ttu-id="9f052-144">租约的续订期时间长度。</span><span class="sxs-lookup"><span data-stu-id="9f052-144">The length of time to renew the lease by.</span></span></param>
        <summary><span data-ttu-id="9f052-145">将租约续订指定的时间。</span><span class="sxs-lookup"><span data-stu-id="9f052-145">Renews a lease for the specified time.</span></span></summary>
        <returns><span data-ttu-id="9f052-146">该租约新的到期时间。</span><span class="sxs-lookup"><span data-stu-id="9f052-146">The new expiration time of the lease.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f052-147">租约时间设置的最大<xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A>或当前时间，加上续订时间。</span><span class="sxs-lookup"><span data-stu-id="9f052-147">The lease time is set to the maximum of the <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> or the current time plus the renewal time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9f052-148">直接调用方通过引用接口进行调用，且没有基础结构权限。</span><span class="sxs-lookup"><span data-stu-id="9f052-148">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9f052-149">用于操作的基础结构代码。</span><span class="sxs-lookup"><span data-stu-id="9f052-149">for operating with infrastructure code.</span></span> <span data-ttu-id="9f052-150">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="9f052-150">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RenewOnCallTime">
      <MemberSignature Language="C#" Value="public TimeSpan RenewOnCallTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RenewOnCallTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime" />
      <MemberSignature Language="VB.NET" Value="Public Property RenewOnCallTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RenewOnCallTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RenewOnCallTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f052-151">获取或设置对远程对象的调用续订 <see cref="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" /> 的时间。</span><span class="sxs-lookup"><span data-stu-id="9f052-151">Gets or sets the amount of time by which a call to the remote object renews the <see cref="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />.</span></span></summary>
        <value><span data-ttu-id="9f052-152">对远程对象的调用续订 <see cref="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" /> 的时间。</span><span class="sxs-lookup"><span data-stu-id="9f052-152">The amount of time by which a call to the remote object renews the <see cref="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f052-153">生存期服务在对远程对象的调用，添加<xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A>到<xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A>仅当<xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A>下降到低于<xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A>。</span><span class="sxs-lookup"><span data-stu-id="9f052-153">When you make a call to a remote object, the lifetime service adds the <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A> to the <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> only if the <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> has dropped below the <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A>.</span></span> <span data-ttu-id="9f052-154">连续调用因此不增加<xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A>不受约束。</span><span class="sxs-lookup"><span data-stu-id="9f052-154">Sequential calls therefore do not increase the <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> without bound.</span></span> <span data-ttu-id="9f052-155">相反，任何调用后立即<xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A>保证可<xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A>或更长时间。</span><span class="sxs-lookup"><span data-stu-id="9f052-155">Instead, immediately after any call, the <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> is guaranteed to be the <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A> or longer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9f052-156">直接调用方通过引用接口进行调用，且没有基础结构权限。</span><span class="sxs-lookup"><span data-stu-id="9f052-156">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9f052-157">用于操作的基础结构代码。</span><span class="sxs-lookup"><span data-stu-id="9f052-157">for operating with infrastructure code.</span></span> <span data-ttu-id="9f052-158">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="9f052-158">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SponsorshipTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan SponsorshipTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SponsorshipTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SponsorshipTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SponsorshipTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.SponsorshipTimeout : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f052-159">获取或设置等待主办方返回租约续订时间的时间。</span><span class="sxs-lookup"><span data-stu-id="9f052-159">Gets or sets the amount of time to wait for a sponsor to return with a lease renewal time.</span></span></summary>
        <value><span data-ttu-id="9f052-160">等待主办方返回租约续订时间的时间。</span><span class="sxs-lookup"><span data-stu-id="9f052-160">The amount of time to wait for a sponsor to return with a lease renewal time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f052-161">如果<xref:System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout%2A>是<xref:System.TimeSpan.Zero?displayProperty=nameWithType>，则此租约将不会发起人。</span><span class="sxs-lookup"><span data-stu-id="9f052-161">If the <xref:System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout%2A> is <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, then this lease will not take sponsors.</span></span>  
  
 <span data-ttu-id="9f052-162">如果主办方不会响应在超时期内续订租约的调用，它假定已经处于死状态，并从的当前租约主办方列表中删除。</span><span class="sxs-lookup"><span data-stu-id="9f052-162">If a sponsor does not respond to a call to renew a lease within the time-out period, it is assumed to be dead and is removed from the list of sponsors for the current lease.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9f052-163">直接调用方通过引用接口进行调用，且没有基础结构权限。</span><span class="sxs-lookup"><span data-stu-id="9f052-163">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9f052-164">用于操作的基础结构代码。</span><span class="sxs-lookup"><span data-stu-id="9f052-164">for operating with infrastructure code.</span></span> <span data-ttu-id="9f052-165">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="9f052-165">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public void Unregister (System.Runtime.Remoting.Lifetime.ISponsor obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(class System.Runtime.Remoting.Lifetime.ISponsor obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Unregister(System.Runtime.Remoting.Lifetime.ISponsor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unregister (obj As ISponsor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unregister(System::Runtime::Remoting::Lifetime::ISponsor ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Unregister : System.Runtime.Remoting.Lifetime.ISponsor -&gt; unit" Usage="iLease.Unregister obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9f052-166">要注销的租约赞助商。</span><span class="sxs-lookup"><span data-stu-id="9f052-166">The lease sponsor to unregister.</span></span></param>
        <summary><span data-ttu-id="9f052-167">从赞助商列表中删除赞助商。</span><span class="sxs-lookup"><span data-stu-id="9f052-167">Removes a sponsor from the sponsor list.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9f052-168">直接调用方通过引用接口进行调用，且没有基础结构权限。</span><span class="sxs-lookup"><span data-stu-id="9f052-168">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9f052-169">用于操作的基础结构代码。</span><span class="sxs-lookup"><span data-stu-id="9f052-169">for operating with infrastructure code.</span></span> <span data-ttu-id="9f052-170">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="9f052-170">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>