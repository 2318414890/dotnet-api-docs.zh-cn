<Type Name="ImmutableDictionary" FullName="System.Collections.Immutable.ImmutableDictionary">
  <TypeSignature Language="C#" Value="public static class ImmutableDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableDictionary extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableDictionary abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3213b-101">针对 <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /> 类的实例提供一组初始化方法。</span><span class="sxs-lookup"><span data-stu-id="3213b-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /> class.</span></span>  
  
 <span data-ttu-id="3213b-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see>（<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">关于不可变集合和安装方法</see>）</span><span class="sxs-lookup"><span data-stu-id="3213b-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="3213b-103">此类型是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="3213b-103">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Contains&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; map, TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; map, !!TKey key, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TKey, TValue) (map As IImmutableDictionary(Of TKey, TValue), key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ map, TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="map" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-104">不可变字典中键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-104">The type of the keys in the immutable dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-105">不可变字典中值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-105">The type of the values in the immutable dictionary.</span></span></typeparam>
        <param name="map"><span data-ttu-id="3213b-106">要搜索的不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-106">The immutable dictionary to search.</span></span></param>
        <param name="key"><span data-ttu-id="3213b-107">要在不可变字典中查找的键。</span><span class="sxs-lookup"><span data-stu-id="3213b-107">The key to locate in the immutable dictionary.</span></span></param>
        <param name="value"><span data-ttu-id="3213b-108">找到指定的键时，要在该键中查找的值。</span><span class="sxs-lookup"><span data-stu-id="3213b-108">The value to locate on the specified key, if the key is found.</span></span></param>
        <summary><span data-ttu-id="3213b-109">确定指定的不可变字典是否包含指定的键/值对。</span><span class="sxs-lookup"><span data-stu-id="3213b-109">Determines whether the specified immutable dictionary contains the specified key/value pair.</span></span></summary>
        <returns>
          <span data-ttu-id="3213b-110">如果此映射包含指定的键/值对，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3213b-110"><see langword="true" /> if this map contains the specified key/value pair; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-111">字典存储的键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-111">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-112">字典存储的值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-112">The type of values stored by the dictionary.</span></span></typeparam>
        <summary><span data-ttu-id="3213b-113">创建一个空的不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-113">Creates an empty immutable dictionary.</span></span></summary>
        <returns><span data-ttu-id="3213b-114">空的不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-114">An empty immutable dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-115">字典存储的键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-115">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-116">字典存储的值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-116">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="3213b-117">用于确定字典中键的相等性的实现。</span><span class="sxs-lookup"><span data-stu-id="3213b-117">The implementation to use to determine the equality of keys in the dictionary.</span></span></param>
        <summary><span data-ttu-id="3213b-118">创建使用指定键比较器的空不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-118">Creates an empty immutable dictionary that uses the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="3213b-119">空的不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-119">An empty immutable dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-120">字典存储的键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-120">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-121">字典存储的值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-121">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="3213b-122">用于确定字典中键的相等性的实现。</span><span class="sxs-lookup"><span data-stu-id="3213b-122">The implementation to use to determine the equality of keys in the dictionary.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="3213b-123">用于确定字典中值的相等性的实现。</span><span class="sxs-lookup"><span data-stu-id="3213b-123">The implementation to use to determine the equality of values in the dictionary.</span></span></param>
        <summary><span data-ttu-id="3213b-124">创建使用指定键和值比较器的空不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-124">Creates an empty immutable dictionary that uses the specified key and value comparers.</span></span></summary>
        <returns><span data-ttu-id="3213b-125">空的不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-125">An empty immutable dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-126">字典存储的键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-126">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-127">字典存储的值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-127">The type of values stored by the dictionary.</span></span></typeparam>
        <summary><span data-ttu-id="3213b-128">创建一个新的不可变字典生成器。</span><span class="sxs-lookup"><span data-stu-id="3213b-128">Creates a new immutable dictionary builder.</span></span></summary>
        <returns><span data-ttu-id="3213b-129">新的生成器。</span><span class="sxs-lookup"><span data-stu-id="3213b-129">The new builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-130">字典存储的键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-130">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-131">字典存储的值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-131">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="3213b-132">键比较器。</span><span class="sxs-lookup"><span data-stu-id="3213b-132">The key comparer.</span></span></param>
        <summary><span data-ttu-id="3213b-133">创建一个新的不可变字典生成器。</span><span class="sxs-lookup"><span data-stu-id="3213b-133">Creates a new immutable dictionary builder.</span></span></summary>
        <returns><span data-ttu-id="3213b-134">新的生成器。</span><span class="sxs-lookup"><span data-stu-id="3213b-134">The new builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-135">字典存储的键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-135">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-136">字典存储的值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-136">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="3213b-137">键比较器。</span><span class="sxs-lookup"><span data-stu-id="3213b-137">The key comparer.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="3213b-138">值比较器。</span><span class="sxs-lookup"><span data-stu-id="3213b-138">The value comparer.</span></span></param>
        <summary><span data-ttu-id="3213b-139">创建一个新的不可变字典生成器。</span><span class="sxs-lookup"><span data-stu-id="3213b-139">Creates a new immutable dictionary builder.</span></span></summary>
        <returns><span data-ttu-id="3213b-140">新的生成器。</span><span class="sxs-lookup"><span data-stu-id="3213b-140">The new builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-141">字典中键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-141">The type of keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-142">字典中值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-142">The type of values in the dictionary.</span></span></typeparam>
        <param name="items"><span data-ttu-id="3213b-143">在字典不可变之前用于填充该字典的项。</span><span class="sxs-lookup"><span data-stu-id="3213b-143">The items used to populate the dictionary before it’s immutable.</span></span></param>
        <summary><span data-ttu-id="3213b-144">创建包含指定项的新不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-144">Creates a new immutable dictionary that contains the specified items.</span></span></summary>
        <returns><span data-ttu-id="3213b-145">包含指定项的新不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-145">A new immutable dictionary that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-146">字典中键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-146">The type of keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-147">字典中值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-147">The type of values in the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="3213b-148">用于比较键的相等性的比较器实现。</span><span class="sxs-lookup"><span data-stu-id="3213b-148">The comparer implementation to use to compare keys for equality.</span></span></param>
        <param name="items"><span data-ttu-id="3213b-149">在字典不可变之前要添加到该字典中的项。</span><span class="sxs-lookup"><span data-stu-id="3213b-149">The items to add to the dictionary before it’s immutable.</span></span></param>
        <summary><span data-ttu-id="3213b-150">创建包含指定项并使用指定键比较器的新不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-150">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="3213b-151">包含指定项并使用指定比较器的新不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-151">A new immutable dictionary that contains the specified items and uses the specified comparer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-152">字典中键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-152">The type of keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-153">字典中值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-153">The type of values in the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="3213b-154">用于比较键的相等性的比较器实现。</span><span class="sxs-lookup"><span data-stu-id="3213b-154">The comparer implementation to use to compare keys for equality.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="3213b-155">用于比较值的相等性的比较器实现。</span><span class="sxs-lookup"><span data-stu-id="3213b-155">The comparer implementation to use to compare values for equality.</span></span></param>
        <param name="items"><span data-ttu-id="3213b-156">在字典不可变之前要添加到该字典中的项。</span><span class="sxs-lookup"><span data-stu-id="3213b-156">The items to add to the dictionary before it’s immutable.</span></span></param>
        <summary><span data-ttu-id="3213b-157">创建包含指定项并使用指定键比较器的新不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-157">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="3213b-158">包含指定项并使用指定比较器的新不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-158">A new immutable dictionary that contains the specified items and uses the specified comparer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-159">键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-159">The type of the key.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-160">值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-160">The type of the value.</span></span></typeparam>
        <param name="dictionary"><span data-ttu-id="3213b-161">要从中检索值的字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-161">The dictionary to retrieve the value from.</span></span></param>
        <param name="key"><span data-ttu-id="3213b-162">要搜索的键。</span><span class="sxs-lookup"><span data-stu-id="3213b-162">The key to search for.</span></span></param>
        <summary><span data-ttu-id="3213b-163">如果字典中存在匹配的键，则获取给定键的值。</span><span class="sxs-lookup"><span data-stu-id="3213b-163">Gets the value for a given key if a matching key exists in the dictionary.</span></span></summary>
        <returns><span data-ttu-id="3213b-164">该键的值；如果找不到匹配的键，则为 <c>default(TValue)</c>。</span><span class="sxs-lookup"><span data-stu-id="3213b-164">The value for the key, or <c>default(TValue)</c> if no matching key was found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key, TValue defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key, !!TValue defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey, defaultValue As TValue) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key, TValue defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="defaultValue" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-165">键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-165">The type of the key.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-166">值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-166">The type of the value.</span></span></typeparam>
        <param name="dictionary"><span data-ttu-id="3213b-167">要从中检索值的字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-167">The dictionary to retrieve the value from.</span></span></param>
        <param name="key"><span data-ttu-id="3213b-168">要搜索的键。</span><span class="sxs-lookup"><span data-stu-id="3213b-168">The key to search for.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="3213b-169">在字典中找不到匹配键时返回的默认值。</span><span class="sxs-lookup"><span data-stu-id="3213b-169">The default value to return if no matching key is found in the dictionary.</span></span></param>
        <summary><span data-ttu-id="3213b-170">如果字典中存在匹配的键，则获取给定键的值。</span><span class="sxs-lookup"><span data-stu-id="3213b-170">Gets the value for a given key if a matching key exists in the dictionary.</span></span></summary>
        <returns><span data-ttu-id="3213b-171">该键的值；如果找不到匹配的键，则为 <paramref name="defaultValue" />。</span><span class="sxs-lookup"><span data-stu-id="3213b-171">The value for the key, or <paramref name="defaultValue" /> if no matching key was found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-172">字典中的键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-172">The type of the keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-173">字典中的值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-173">The type of the values in the dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="3213b-174">要枚举的键/值对的序列。</span><span class="sxs-lookup"><span data-stu-id="3213b-174">The sequence of key/value pairs to enumerate.</span></span></param>
        <summary><span data-ttu-id="3213b-175">枚举键/值对的序列，并生成其内容的不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-175">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents.</span></span></summary>
        <returns><span data-ttu-id="3213b-176">一个不可变字典，其中包含指定序列中的键/值对。</span><span class="sxs-lookup"><span data-stu-id="3213b-176">An immutable dictionary that contains the key/value pairs in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-177">字典中的键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-177">The type of the keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-178">字典中的值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-178">The type of the values in the dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="3213b-179">要枚举的键/值对的序列。</span><span class="sxs-lookup"><span data-stu-id="3213b-179">The sequence of key/value pairs to enumerate.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="3213b-180">生成不可变字典时要使用的键比较器。</span><span class="sxs-lookup"><span data-stu-id="3213b-180">The key comparer to use when building the immutable dictionary.</span></span></param>
        <summary><span data-ttu-id="3213b-181">枚举键/值对的序列，并使用指定的键比较器生成其内容的不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-181">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="3213b-182">一个不可变字典，其中包含指定序列中的键/值对。</span><span class="sxs-lookup"><span data-stu-id="3213b-182">An immutable dictionary that contains the key/value pairs in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="3213b-183">字典中的键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-183">The type of the keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-184">字典中的值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-184">The type of the values in the dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="3213b-185">要枚举的键/值对的序列。</span><span class="sxs-lookup"><span data-stu-id="3213b-185">The sequence of key/value pairs to enumerate.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="3213b-186">生成不可变字典时要使用的键比较器。</span><span class="sxs-lookup"><span data-stu-id="3213b-186">The key comparer to use when building the immutable dictionary.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="3213b-187">用于不可变字典的值比较器。</span><span class="sxs-lookup"><span data-stu-id="3213b-187">The value comparer to use for the immutable dictionary.</span></span></param>
        <summary><span data-ttu-id="3213b-188">枚举键/值对的序列，并使用指定的键和值比较器生成其内容的不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-188">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key and value comparers.</span></span></summary>
        <returns><span data-ttu-id="3213b-189">一个不可变字典，其中包含指定序列中的键/值对。</span><span class="sxs-lookup"><span data-stu-id="3213b-189">An immutable dictionary that contains the key/value pairs in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="3213b-190">源集合中元素的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-190">The type of element in the source collection.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="3213b-191">生成的不可变字典中键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-191">The type of key in the resulting immutable dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="3213b-192">用于生成不可变字典的源集合。</span><span class="sxs-lookup"><span data-stu-id="3213b-192">The source collection used to generate the immutable dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="3213b-193">用于转换不可变字典键的函数。</span><span class="sxs-lookup"><span data-stu-id="3213b-193">The function used to transform keys for the immutable dictionary.</span></span></param>
        <summary><span data-ttu-id="3213b-194">通过向源键应用转换函数，从现有元素集合构造一个不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-194">Constructs an immutable dictionary from an existing collection of elements, applying a transformation function to the source keys.</span></span></summary>
        <returns><span data-ttu-id="3213b-195">包含 <paramref name="source" /> 中的元素的不可变字典，其键已通过应用 <paramref name="keySelector" /> 进行转换。</span><span class="sxs-lookup"><span data-stu-id="3213b-195">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="3213b-196">源集合中元素的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-196">The type of element in the source collection.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="3213b-197">生成的不可变字典中键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-197">The type of key in the resulting immutable dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="3213b-198">用于生成不可变字典的源集合。</span><span class="sxs-lookup"><span data-stu-id="3213b-198">The source collection used to generate the immutable dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="3213b-199">用于转换不可变字典键的函数。</span><span class="sxs-lookup"><span data-stu-id="3213b-199">The function used to transform keys for the immutable dictionary.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="3213b-200">用于字典的键比较器。</span><span class="sxs-lookup"><span data-stu-id="3213b-200">The key comparer to use for the dictionary.</span></span></param>
        <summary><span data-ttu-id="3213b-201">基于对序列进行某种形式的转换来构造一个不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-201">Constructs an immutable dictionary based on some transformation of a sequence.</span></span></summary>
        <returns><span data-ttu-id="3213b-202">包含 <paramref name="source" /> 中的元素的不可变字典，其键已通过应用 <paramref name="keySelector" /> 进行转换。</span><span class="sxs-lookup"><span data-stu-id="3213b-202">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="3213b-203">序列中元素的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-203">The type of the elements in the sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="3213b-204">生成的字典中键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-204">The type of the keys in the resulting dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-205">生成的字典中值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-205">The type of the values in the resulting dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="3213b-206">为生成字典而要枚举的序列。</span><span class="sxs-lookup"><span data-stu-id="3213b-206">The sequence to enumerate to generate the dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="3213b-207">用于从每个序列元素生成字典键的函数。</span><span class="sxs-lookup"><span data-stu-id="3213b-207">The function that will produce the key for the dictionary from each sequence element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="3213b-208">用于从每个序列元素生成字典值的函数。</span><span class="sxs-lookup"><span data-stu-id="3213b-208">The function that will produce the value for the dictionary from each sequence element.</span></span></param>
        <summary><span data-ttu-id="3213b-209">枚举并转换序列，然后生成其内容的不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-209">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents.</span></span></summary>
        <returns><span data-ttu-id="3213b-210">一个不可变字典，其中包含指定序列中的项。</span><span class="sxs-lookup"><span data-stu-id="3213b-210">An immutable dictionary that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="3213b-211">序列中元素的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-211">The type of the elements in the sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="3213b-212">生成的字典中键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-212">The type of the keys in the resulting dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-213">生成的字典中值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-213">The type of the values in the resulting dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="3213b-214">为生成字典而要枚举的序列。</span><span class="sxs-lookup"><span data-stu-id="3213b-214">The sequence to enumerate to generate the dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="3213b-215">用于从每个序列元素生成字典键的函数。</span><span class="sxs-lookup"><span data-stu-id="3213b-215">The function that will produce the key for the dictionary from each sequence element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="3213b-216">用于从每个序列元素生成字典值的函数。</span><span class="sxs-lookup"><span data-stu-id="3213b-216">The function that will produce the value for the dictionary from each sequence element.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="3213b-217">用于字典的键比较器。</span><span class="sxs-lookup"><span data-stu-id="3213b-217">The key comparer to use for the dictionary.</span></span></param>
        <summary><span data-ttu-id="3213b-218">枚举并转换序列，然后使用指定的键比较器生成其内容的不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-218">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="3213b-219">一个不可变字典，其中包含指定序列中的项。</span><span class="sxs-lookup"><span data-stu-id="3213b-219">An immutable dictionary that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="3213b-220">序列中元素的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-220">The type of the elements in the sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="3213b-221">生成的字典中键的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-221">The type of the keys in the resulting dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="3213b-222">生成的字典中值的类型。</span><span class="sxs-lookup"><span data-stu-id="3213b-222">The type of the values in the resulting dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="3213b-223">为生成字典而要枚举的序列。</span><span class="sxs-lookup"><span data-stu-id="3213b-223">The sequence to enumerate to generate the dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="3213b-224">用于从每个序列元素生成字典键的函数。</span><span class="sxs-lookup"><span data-stu-id="3213b-224">The function that will produce the key for the dictionary from each sequence element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="3213b-225">用于从每个序列元素生成字典值的函数。</span><span class="sxs-lookup"><span data-stu-id="3213b-225">The function that will produce the value for the dictionary from each sequence element.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="3213b-226">用于字典的键比较器。</span><span class="sxs-lookup"><span data-stu-id="3213b-226">The key comparer to use for the dictionary.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="3213b-227">用于字典的值比较器。</span><span class="sxs-lookup"><span data-stu-id="3213b-227">The value comparer to use for the dictionary.</span></span></param>
        <summary><span data-ttu-id="3213b-228">枚举并转换序列，然后使用指定的键和值比较器生成其内容的不可变字典。</span><span class="sxs-lookup"><span data-stu-id="3213b-228">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key and value comparers.</span></span></summary>
        <returns><span data-ttu-id="3213b-229">一个不可变字典，其中包含指定序列中的项。</span><span class="sxs-lookup"><span data-stu-id="3213b-229">An immutable dictionary that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>