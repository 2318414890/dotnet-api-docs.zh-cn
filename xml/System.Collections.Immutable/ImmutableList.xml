<Type Name="ImmutableList" FullName="System.Collections.Immutable.ImmutableList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4c3c3f91affe7b484730de9c9db99fc77898a035" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36712329" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableList" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableList abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableList = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2f9ff-101">针对 <see cref="T:System.Collections.Immutable.ImmutableList`1" /> 类的实例提供一组初始化方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2f9ff-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableList`1" /> class.</span>
      </span>
      <span data-ttu-id="2f9ff-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see>（<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">关于不可变集合和安装方法</see>）</span>
      <span class="sxs-lookup">
        <span data-stu-id="2f9ff-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="2f9ff-103">此类型是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2f9ff-103">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-104">要存储在  中的项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-104">The type of items to be stored in the .</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="2f9ff-105">创建一个空的不可变列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-105">Creates an empty immutable list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-106">一个空 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-106">An empty .</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create(T item);" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-107"> 中项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-107">The type of items in the .</span>
          </span>
        </typeparam>
        <param name="item">
          <span data-ttu-id="2f9ff-108">用于预先填充列表的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-108">The item to prepopulate the list with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-109">创建包含指定项的新不可变列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-109">Creates a new immutable list that contains the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-110">一个包含指定项的新  。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-110">A new  that contains the specified item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-111"> 中项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-111">The type of items in the .</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="2f9ff-112">一个数组，其中包含用于预先填充列表的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-112">An array that contains the items to prepopulate the list with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-113">创建包含指定项数组的新不可变列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-113">Creates a new immutable list that contains the specified array of items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-114">包含指定项的新不可变列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-114">A new immutable list that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableList(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableList.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-115">集合存储的项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-115">The type of items stored by the collection.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="2f9ff-116">创建一个新的不可变列表生成器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-116">Creates a new immutable list builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-117">不可变集合生成器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-117">The immutable collection builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-118"> 中项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-118">The type of items in the .</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="2f9ff-119">要添加到列表中的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-119">The items to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-120">创建包含指定项的新不可变列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-120">Creates a new immutable list that contains the specified items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-121">返回包含指定项的新不可变列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-121">Returns an immutable list that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-122">列表中项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-122">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="2f9ff-123">要搜索的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-123">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="2f9ff-124">要在列表中查找的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-124">The object to locate in the list.</span>
          </span>
          <span data-ttu-id="2f9ff-125">对于引用类型，该值可以为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-125">The value can be null for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-126">搜索指定的对象，并返回列表中第一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-126">Searches for the specified object and returns the zero-based index of the first occurrence within the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-127">如果在列表中从索引到最后一个元素的元素范围内找到项的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-127">The zero-based index of the first occurrence of item within the range of elements in the list that extends from index to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-128">列表中项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-128">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="2f9ff-129">要搜索的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-129">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="2f9ff-130">要在不可变列表中查找的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-130">The object to locate in the Immutable list.</span>
          </span>
          <span data-ttu-id="2f9ff-131">对于引用类型，该值可以为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-131">The value can be null for reference types.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="2f9ff-132">要在搜索中使用的相等性比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-132">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-133">搜索指定的对象，并返回列表中第一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-133">Searches for the specified object and returns the zero-based index of the first occurrence within the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-134">如果在不可变列表中从索引到最后一个元素的元素范围内找到第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-134">The zero-based index of the first occurrence of item within the range of elements in the immutable list that extends from index to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-135">列表中项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-135">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="2f9ff-136">要搜索的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-136">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="2f9ff-137">要在不可变列表中查找的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-137">The object to locate in the Immutable list.</span>
          </span>
          <span data-ttu-id="2f9ff-138">对于引用类型，该值可以为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-138">The value can be null for reference types.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="2f9ff-139">从零开始的搜索的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-139">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="2f9ff-140">空列表中 0（零）为有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-140">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-141">搜索指定对象并返回不可变列表中从指定索引到最后一个元素这部分元素中第一个匹配项的从零开始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-141">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-142">如果在不可变列表中从索引到最后一个元素的元素范围内找到第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-142">The zero-based index of the first occurrence of item within the range of elements in the Immutable list that extends from index to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-143">列表中项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-143">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="2f9ff-144">要搜索的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-144">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="2f9ff-145">要在不可变列表中查找的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-145">The object to locate in the Immutable list.</span>
          </span>
          <span data-ttu-id="2f9ff-146">对于引用类型，该值可以为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-146">The value can be null for reference types.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="2f9ff-147">从零开始的搜索的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-147">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="2f9ff-148">空列表中 0（零）为有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-148">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2f9ff-149">要搜索的部分中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-149">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-150">搜索指定对象并返回不可变列表中从指定索引到最后一个元素这部分元素中第一个匹配项的从零开始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-150">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-151">如果在不可变列表中从索引到最后一个元素的元素范围内找到第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-151">The zero-based index of the first occurrence of item within the range of elements in the Immutable list that extends from index to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-152">列表中项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-152">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="2f9ff-153">要搜索的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-153">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="2f9ff-154">要在不可变列表中查找的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-154">The object to locate in the Immutable list.</span>
          </span>
          <span data-ttu-id="2f9ff-155">对于引用类型，该值可以为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-155">The value can be null for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-156">搜索指定的对象，并返回整个不可变列表中最后一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-156">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-157">如果找到，则为整个不可变列表中项的最后一个匹配项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-157">The zero-based index of the last occurrence of item within the entire the Immutable list, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-158">列表中项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-158">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="2f9ff-159">要搜索的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-159">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="2f9ff-160">要在不可变列表中查找的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-160">The object to locate in the Immutable list.</span>
          </span>
          <span data-ttu-id="2f9ff-161">对于引用类型，该值可以为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-161">The value can be null for reference types.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="2f9ff-162">要在搜索中使用的相等性比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-162">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-163">搜索指定的对象，并返回整个不可变列表中最后一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-163">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-164">如果找到，则为整个不可变列表中项的最后一个匹配项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-164">The zero-based index of the last occurrence of item within the entire the Immutable list, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-165">列表中项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-165">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="2f9ff-166">要搜索的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-166">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="2f9ff-167">要在不可变列表中查找的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-167">The object to locate in the Immutable list.</span>
          </span>
          <span data-ttu-id="2f9ff-168">对于引用类型，该值可以为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-168">The value can be null for reference types.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="2f9ff-169">向后搜索的从零开始的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-169">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-170">搜索指定对象并返回不可变列表中从第一个元素到指定索引这部分元素中最后一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-170">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-171">如果在不可变列表中从第一个元素到索引的元素范围内找到项的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-171">The zero-based index of the last occurrence of item within the range of elements in the Immutable list that extends from the first element to index, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-172">列表中项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-172">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="2f9ff-173">要搜索的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-173">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="2f9ff-174">要在不可变列表中查找的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-174">The object to locate in the Immutable list.</span>
          </span>
          <span data-ttu-id="2f9ff-175">对于引用类型，该值可以为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-175">The value can be null for reference types.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="2f9ff-176">向后搜索的从零开始的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-176">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2f9ff-177">要搜索的部分中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-177">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-178">搜索指定对象并返回不可变列表中从第一个元素到指定索引这部分元素中最后一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-178">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-179">如果在不可变列表中从第一个元素到索引的元素范围内找到项的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-179">The zero-based index of the last occurrence of item within the range of elements in the Immutable list that extends from the first element to index, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; Remove&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; Remove&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Remove(Of T) (list As IImmutableList(Of T), value As T) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ Remove(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T value);" />
      <MemberSignature Language="F#" Value="static member Remove : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Remove (list, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-180">列表中项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-180">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="2f9ff-181">要搜索的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-181">The list to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2f9ff-182">要移除的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-182">The value to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-183">从此列表中移除指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-183">Removes the specified value from this list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-184">已移除元素的新不可变列表，或者此列表（如果该元素不在此列表中）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-184">A new immutable list with the element removed, or this list if the element is not in this list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; RemoveRange&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; RemoveRange&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveRange(Of T) (list As IImmutableList(Of T), items As IEnumerable(Of T)) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ RemoveRange(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member RemoveRange : System.Collections.Immutable.IImmutableList&lt;'T&gt; * seq&lt;'T&gt; -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.RemoveRange (list, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-185">列表中项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-185">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="2f9ff-186">要搜索的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-186">The list to search.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="2f9ff-187">在此列表中找到匹配项时要移除的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-187">The items to remove if matches are found in this list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-188">从此列表中移除指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-188">Removes the specified values from this list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-189">已移除元素的新不可变列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-189">A new immutable list with the elements removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; Replace&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T oldValue, T newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; Replace&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T oldValue, !!T newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace(Of T) (list As IImmutableList(Of T), oldValue As T, newValue As T) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ Replace(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T oldValue, T newValue);" />
      <MemberSignature Language="F#" Value="static member Replace : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * 'T -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Replace (list, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2f9ff-190">列表中项的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-190">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="2f9ff-191">要搜索的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-191">The list to search.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="2f9ff-192">要替换的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-192">The element to replace.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="2f9ff-193">用于替换旧元素的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-193">The element to replace the old element with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-194">将列表中第一个相等的元素替换为指定的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-194">Replaces the first equal element in the list with the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-195">新列表 - 即使被替换的值等于该位置的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-195">The new list -- even if the value being replaced is equal to the new value for that position.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2f9ff-196">在列表中不存在旧值时引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-196">Thrown when the old value does not exist in the list.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableList&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;TSource&gt; ToImmutableList&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!TSource&gt; ToImmutableList&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableList(Of TSource) (source As IEnumerable(Of TSource)) As ImmutableList(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableList&lt;TSource&gt; ^ ToImmutableList(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToImmutableList : seq&lt;'Source&gt; -&gt; System.Collections.Immutable.ImmutableList&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableList.ToImmutableList source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2f9ff-197">序列中元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-197">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2f9ff-198">要枚举的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-198">The sequence to enumerate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f9ff-199">枚举序列，并生成其内容的不可变列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-199">Enumerates a sequence and produces an immutable list of its contents.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f9ff-200">一个不可变列表，其中包含指定序列中的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f9ff-200">An immutable list that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>