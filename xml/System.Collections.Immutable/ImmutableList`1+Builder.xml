<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImmutableList`1+Builder.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5306457b56ab4b2273eb07eecea5c4f9fbc8b4028.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">306457b56ab4b2273eb07eecea5c4f9fbc8b4028</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableList`1.Builder">
          <source>Represents a list that mutates with little or no memory allocations and that can produce or build on immutable list instances very efficiently.</source>
          <target state="translated">表示一个只需少量或者无需内存分配就能转变，并且可以有效生成不可变列表实例或者构建于此类实例之上的列表。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableList`1.Builder">
          <source><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>about immutable collections and how to install<ept id="p3">&lt;/see&gt;</ept>)</source>
          <target state="translated"><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept>（<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>关于不可变集合和安装方法<ept id="p3">&lt;/see&gt;</ept>）</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableList`1.Builder">
          <source>Although <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A?displayProperty=nameWithType&gt;</ph> and other methods already provide fast bulk change operations on the list, the <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> class allows multiple combinations of changes to be made to a list with equal efficiency.</source>
          <target state="translated">尽管<ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A?displayProperty=nameWithType&gt;</ph>和其他方法已提供快速的大容量更改操作，在列表中，<ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>类允许发生改变，以对列表进行相等的效率与多个组合。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Add(`0)">
          <source>The item to add to the list.</source>
          <target state="translated">要添加到列表的项。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Add(`0)">
          <source>Adds an item to the immutable list.</source>
          <target state="translated">将项添加到不可变列表。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements to add to the end of the list.</source>
          <target state="translated">要添加到列表末尾的元素。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>Adds a series of elements to the end of this list.</source>
          <target state="translated">将一系列元素添加到此列表的末尾。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>The object to locate.</source>
          <target state="translated">要定位的对象。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>The value can be null for reference types.</source>
          <target state="translated">对于引用类型，该值可以为 null。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>Searches the entire <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> for an element using the default comparer and returns the zero-based index of the element.</source>
          <target state="translated">使用默认比较器在整个 <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> 中搜索元素，并返回该元素的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>The zero-based index of item in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated">如果找到项，则为 <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> 中项的从零开始的索引；否则为一个负数，该负数是大于 <ph id="ph2">&lt;paramref name="item" /&gt;</ph> 的下一个元素的索引的按位求补。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>不包含指定的值，该方法返回负整数。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">你可以应用于此负的整数，以获取大于搜索值的第一个元素的索引的按位求补运算 （~）。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">插入到的值时<ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>，此索引应使用的插入点，若要维护的排序顺序。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The object to locate.</source>
          <target state="translated">要定位的对象。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>This value can be null for reference types.</source>
          <target state="translated">对于引用类型，此值可以为 null。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> for the default comparer.</source>
          <target state="translated">比较元素时要使用的实现，若要使用默认比较器，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>Searches the entire <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">使用指定的比较器在整个 <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> 中搜索元素，并返回该元素从零开始的索引。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based index of item in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated">如果找到项，则为 <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> 中项的从零开始的索引；否则为一个负数，该负数是大于 <ph id="ph2">&lt;paramref name="item" /&gt;</ph> 的下一个元素的索引的按位求补。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>不包含指定的值，该方法返回负整数。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">你可以应用于此负的整数，以获取大于搜索值的第一个元素的索引的按位求补运算 （~）。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">插入到的值时<ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>，此索引应使用的插入点，若要维护的排序顺序。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based starting index of the range to search.</source>
          <target state="translated">要搜索范围的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The length of the range to search.</source>
          <target state="translated">要搜索的范围的长度。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The object to locate.</source>
          <target state="translated">要定位的对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>This value can be null for reference types.</source>
          <target state="translated">对于引用类型，此值可以为 null。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> for the default comparer.</source>
          <target state="translated">比较元素时要使用的实现，若要使用默认比较器，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>Searches the specified range of the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">使用指定的比较器在 <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> 的指定范围内搜索元素，并返回该元素从零开始的索引。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based index of item in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated">如果找到项，则为 <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> 中项的从零开始的索引；否则为一个负数，该负数是大于 <ph id="ph2">&lt;paramref name="item" /&gt;</ph> 的下一个元素的索引的按位求补。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>不包含指定的值，该方法返回负整数。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">你可以应用于此负的整数，以获取大于搜索值的第一个元素的索引的按位求补运算 （~）。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">插入到的值时<ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>，此索引应使用的插入点，若要维护的排序顺序。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Clear">
          <source>Removes all items from the immutable list.</source>
          <target state="translated">从不可变列表中移除所有项。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)">
          <source>The object to locate in the list.</source>
          <target state="translated">要在列表中查找的对象。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)">
          <source>Determines whether the immutable list contains a specific value.</source>
          <target state="translated">确定不可变列表是否包含特定值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item is found in the list; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在列表中找到该项，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>The type of the output of the delegate converter function.</source>
          <target state="translated">委托转换器函数的输出的类型。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>The converter function.</source>
          <target state="translated">转换器函数。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>Creates a new immutable list from the list represented by this builder by using the converter function.</source>
          <target state="translated">使用转换器函数从此生成器表示的列表创建一个新的不可变列表。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>A new immutable list from the list represented by this builder.</source>
          <target state="translated">从此生成器表示的列表创建的新不可变列表。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])">
          <source>The one-dimensional array that is the destination of the elements copied from the immutable list.</source>
          <target state="translated">一维数组，它是从不可变列表复制的元素的目标。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">该数组的索引必须从零开始。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])">
          <source>Copies the entire immutable list to a compatible one-dimensional array, starting at the beginning of the target array.</source>
          <target state="translated">从目标数组的开头开始，将整个不可变列表复制到兼容的一维数组。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the immutable list.</source>
          <target state="translated">一维数组，它是从不可变列表复制的元素的目标。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">该数组的索引必须从零开始。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in array at which copying begins.</source>
          <target state="translated">数组中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>Copies the entire immutable list to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">从目标数组的指定索引处开始，将整个不可变列表复制到兼容的一维数组。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The zero-based index in the source immutable list at which copying begins.</source>
          <target state="translated">源不可变列表中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the immutable list.</source>
          <target state="translated">一维数组，它是从不可变列表复制的元素的目标。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">该数组的索引必须从零开始。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The number of elements to copy.</source>
          <target state="translated">要复制的元素数。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>Copies the entire immutable list to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">从目标数组的指定索引处开始，将整个不可变列表复制到兼容的一维数组。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Count">
          <source>Gets the number of elements in this immutable list.</source>
          <target state="translated">获取此不可变列表中的元素数。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Count">
          <source>The number of elements in this list.</source>
          <target state="translated">此列表中的元素数。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to search for.</source>
          <target state="translated">委托，用于定义要搜索的元素应满足的条件。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})">
          <source>Determines whether the immutable list contains elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">确定不可变列表是否包含与指定谓词定义的条件匹配的元素。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the immutable list contains one or more elements that match the conditions defined by the specified predicate; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果不可变列表包含一个或多个元素与指定谓词定义的条件匹配，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">委托，用于定义要搜索的元素的条件。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire immutable list.</source>
          <target state="translated">搜索与指定谓词所定义的条件相匹配的元素，并返回整个不可变列表中的第一个匹配元素。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})">
          <source>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">如果找到与指定谓词定义的条件匹配的第一个元素，则为该元素；否则为类型 <ph id="ph1">&lt;paramref name="T" /&gt;</ph> 的默认值。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to search for.</source>
          <target state="translated">委托，用于定义要搜索的元素应满足的条件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})">
          <source>Retrieves all the elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">检索与指定谓词定义的条件匹配的所有元素。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})">
          <source>An immutable list containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty immutable list.</source>
          <target state="translated">如果找到一个其中所有元素均与指定谓词定义的条件匹配的不可变列表，则为该数组；否则为一个空不可变列表。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">委托，用于定义要搜索的元素的条件。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire immutable list.</source>
          <target state="translated">搜索与指定谓词所定义的条件相匹配的元素，并返回整个不可变列表中第一个匹配元素的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">如果找到与 <ph id="ph1">&lt;paramref name="match" /&gt;</ph> 定义的条件相匹配的第一个元素，则为该元素的从零开始的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">从零开始的搜索的起始索引。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">委托，用于定义要搜索的元素的条件。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</source>
          <target state="translated">搜索与指定谓词所定义的条件相匹配的元素，并返回不可变列表中从指定索引到最后一个元素的元素范围内第一个匹配项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">如果找到与 <ph id="ph1">&lt;paramref name="match" /&gt;</ph> 定义的条件相匹配的第一个元素，则为该元素的从零开始的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">从零开始的搜索的起始索引。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">要搜索的部分中的元素数。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">委托，用于定义要搜索的元素的条件。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the immutable list that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">搜索与指定谓词所定义的条件相匹配的一个元素，并返回不可变列表中从指定的索引开始、包含指定元素个数的元素范围内第一个匹配项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">如果找到与 <ph id="ph1">&lt;paramref name="match" /&gt;</ph> 定义的条件相匹配的第一个元素，则为该元素的从零开始的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">委托，用于定义要搜索的元素的条件。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire immutable list.</source>
          <target state="translated">搜索与指定谓词所定义的条件相匹配的元素，并返回整个不可变列表中的最后一个匹配元素。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})">
          <source>The last element that matches the conditions defined by the specified predicate, found; otherwise, the default value for type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">如果找到，则为与指定谓词所定义的条件相匹配的最后一个元素；否则为类型 <ph id="ph1">&lt;paramref name="T" /&gt;</ph> 的默认值。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">委托，用于定义要搜索的元素的条件。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire immutable list.</source>
          <target state="translated">搜索与指定谓词所定义的条件相匹配的元素，并返回整个不可变列表中最后一个匹配元素的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">如果找到与 <ph id="ph1">&lt;paramref name="match" /&gt;</ph> 定义的条件相匹配的最后一个元素，则为该元素的从零开始的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">向后搜索的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">委托，用于定义要搜索的元素的条件。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</source>
          <target state="translated">搜索与指定谓词所定义的条件相匹配的元素，并返回不可变列表中从第一个元素到指定索引的元素范围内最后一个匹配项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">如果找到与 <ph id="ph1">&lt;paramref name="match" /&gt;</ph> 定义的条件相匹配的最后一个元素，则为该元素的从零开始的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">向后搜索的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">要搜索的部分中的元素数。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">委托，用于定义要搜索的元素的条件。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">搜索与指定谓词所定义的条件相匹配的元素，并返回不可变列表中包含指定元素个数、到指定索引结束的元素范围内最后一个匹配项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">如果找到与 <ph id="ph1">&lt;paramref name="match" /&gt;</ph> 定义的条件相匹配的最后一个元素，则为该元素的从零开始的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ForEach(System.Action{`0})">
          <source>The delegate to perform on each element of the list.</source>
          <target state="translated">要对列表的每个元素执行的委托。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ForEach(System.Action{`0})">
          <source>Performs the specified action on each element of the list.</source>
          <target state="translated">对列表的每个元素执行指定操作。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">返回一个循环访问集合的枚举器。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator">
          <source>An enumerator that can be used to iterate through the list.</source>
          <target state="translated">一个可用于循环访问列表的枚举器。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>The zero-based index at which the range starts.</source>
          <target state="translated">范围开始处的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>The number of elements in the range.</source>
          <target state="translated">范围中的元素数。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>Creates a shallow copy of a range of elements in the source immutable list.</source>
          <target state="translated">在源不可变列表中创建元素范围的浅表复制。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>A shallow copy of a range of elements in the source immutable list.</source>
          <target state="translated">在源不可变列表中元素范围的浅表复制。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">要在不可变列表中查找的对象。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">对于引用类型，该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list.</source>
          <target state="translated">搜索指定的对象，并返回不可变列表中元素范围内第一个匹配项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the immutable list, if found; otherwise, –1.</source>
          <target state="translated">如果找到，则为不可变列表中元素范围内第一个 <ph id="ph1">&lt;paramref name="item" /&gt;</ph> 的从零开始的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">要在不可变列表中查找的对象。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">对于引用类型，该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">从零开始的搜索的起始索引。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">空列表中 0（零）为有效值。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</source>
          <target state="translated">搜索指定对象并返回不可变列表中从指定索引到最后一个元素这部分元素中第一个匹配项的从零开始索引。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that extends from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the last element, if found; otherwise, –1.</source>
          <target state="translated">如果在不可变列表中从 <ph id="ph1">&lt;paramref name="index" /&gt;</ph> 到最后一个元素的元素范围内找到项的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">要在不可变列表中查找的对象。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">对于引用类型，该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">从零开始的搜索的起始索引。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">空列表中 0（零）为有效值。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">要搜索的部分中的元素数。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">搜索指定对象并返回不可变列表中从指定索引开始并包含指定元素数的这部分元素中第一个匹配项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements, if found; otherwise, –1.</source>
          <target state="translated">如果在不可变列表中从 <ph id="ph1">&lt;paramref name="index" /&gt;</ph> 开始并包含 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 个元素的元素范围内找到项的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">要在不可变列表中查找的对象。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">对于引用类型，该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">从零开始的搜索的起始索引。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">空列表中 0（零）为有效值。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The number of elements to search.</source>
          <target state="translated">要搜索的元素数。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value comparer to use for comparing elements for equality.</source>
          <target state="translated">用于比较元素相等性的值比较器。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">搜索指定对象并返回 <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> 中从指定索引开始并包含指定元素数的这部分元素中第一个匹配项的从零开始索引。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements, if found; otherwise, –1</source>
          <target state="translated">如果在不可变列表中从 <ph id="ph1">&lt;paramref name="index" /&gt;</ph> 开始并包含 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 个元素的元素范围内找到项的第一个匹配项，则为该项的从零开始的索引；否则为 -1</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">从零开始的索引，应在该位置插入 <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)">
          <source>The object to insert into the immutable list.</source>
          <target state="translated">要插入到不可变列表中的对象。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)">
          <source>Inserts an item to the immutable list at the specified index.</source>
          <target state="translated">将项插入到不可变列表中的指定索引处。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The zero-based index at which the new elements should be inserted.</source>
          <target state="translated">应在此处插入新元素的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The collection whose elements should be inserted into the immutable list.</source>
          <target state="translated">应将其元素插入到不可变列表中的集合。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The collection itself cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, but it can contain elements that are null, if type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> is a reference type.</source>
          <target state="translated">集合自身不能为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，但它可以包含为 null 的元素（如果类型 <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> 为引用类型）。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>Inserts the elements of a collection into the immutable list at the specified index.</source>
          <target state="translated">将集合的元素插入不可变列表的指定索引处。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)">
          <source>The index of the item to get or set.</source>
          <target state="translated">要获取或设置的项的索引。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)">
          <source>Gets or sets the value for a given index in the list.</source>
          <target state="translated">获取或设置列表中给定索引的值。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)">
          <source>The value at the specified index.</source>
          <target state="translated">位于指定索引处的值。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">要在不可变列表中查找的对象。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">对于引用类型，该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</source>
          <target state="translated">搜索指定的对象，并返回整个不可变列表中最后一个匹配项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the entire immutable list, if found; otherwise, –1.</source>
          <target state="translated">如果找到，则为整个不可变列表中 <ph id="ph1">&lt;paramref name="item" /&gt;</ph> 最后一个匹配项的从零开始的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">要在不可变列表中查找的对象。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">对于引用类型，该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">向后搜索的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</source>
          <target state="translated">搜索指定对象并返回不可变列表中从第一个元素到指定索引这部分元素中最后一个匹配项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the immutable list that extends from the first element to <ph id="ph2">&lt;paramref name="index" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">如果在不可变列表中从第一个元素到 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 的元素范围内找到 <ph id="ph1">&lt;paramref name="item" /&gt;</ph> 的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">要在不可变列表中查找的对象。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">对于引用类型，该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">向后搜索的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">要搜索的部分中的元素数。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">搜索指定对象并返回不可变列表中到指定索引为止包含指定元素数的这部分元素中最后一个匹配项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the immutable list that contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements and ends at <ph id="ph3">&lt;paramref name="index" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">如果找到包含 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 个元素、到 <ph id="ph3">&lt;paramref name="index" /&gt;</ph> 为止的索引，则为不可变列表中元素范围内 <ph id="ph1">&lt;paramref name="item" /&gt;</ph> 的最后一个匹配项的从零开始的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">要在不可变列表中查找的对象。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">对于引用类型，该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">从零开始的搜索的起始索引。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">空列表中 0（零）为有效值。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The number of elements to search.</source>
          <target state="translated">要搜索的元素数。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value comparer to use for comparing elements for equality.</source>
          <target state="translated">用于比较元素相等性的值比较器。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">搜索指定对象并返回不可变列表中到指定索引为止包含指定元素数的这部分元素中最后一个匹配项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements, if found; otherwise, –1</source>
          <target state="translated">如果在不可变列表中从 <ph id="ph1">&lt;paramref name="index" /&gt;</ph> 开始并包含 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 个元素的元素范围内找到项的第一个匹配项，则为该项的从零开始的索引；否则为 -1</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source>The object to remove from the list.</source>
          <target state="translated">要从列表中移除的对象。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source>Removes the first occurrence of a specific object from the immutable list.</source>
          <target state="translated">从不可变列表中移除特定对象的第一个匹配项。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item was successfully removed from the list; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果从列表中成功移除了该项，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if item is not found in the list.</source>
          <target state="translated">如果在列表未找到该项，此方法也会返回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to remove.</source>
          <target state="translated">用于定义要移除的元素应满足的条件的委托。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})">
          <source>Removes all the elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">移除与指定的谓词所定义的条件相匹配的所有元素。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})">
          <source>The number of elements removed from the immutable list.</source>
          <target state="translated">从不可变列表中移除的元素数。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt(System.Int32)">
          <source>The zero-based index of the item to remove from the list.</source>
          <target state="translated">要从列表中移除的项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt(System.Int32)">
          <source>Removes the item at the specified index of the immutable list.</source>
          <target state="translated">移除不可变列表中指定索引处的项。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse">
          <source>Reverses the order of the elements in the entire immutable list.</source>
          <target state="translated">将整个不可变列表中元素的顺序反转。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)">
          <source>The zero-based starting index of the range to reverse.</source>
          <target state="translated">要反转的范围的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)">
          <source>The number of elements in the range to reverse.</source>
          <target state="translated">要反转的范围内的元素数。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)">
          <source>Reverses the order of the elements in the specified range of the immutable list.</source>
          <target state="translated">将不可变列表的指定范围中元素的顺序反转。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort">
          <source>Sorts the elements in the entire immutable list by using the default comparer.</source>
          <target state="translated">使用默认比较器对整个不可变列表中的元素进行排序。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>).</source>
          <target state="translated">比较元素时要使用的实现，若要使用默认比较器 (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>)，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Collections.Generic.IComparer{`0})">
          <source>Sorts the elements in the entire immutable list by using the specified comparer.</source>
          <target state="translated">使用指定的比较器对整个不可变列表中的元素进行排序。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Comparison{`0})">
          <source>The object to use when comparing elements.</source>
          <target state="translated">比较元素时要使用的对象。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Comparison{`0})">
          <source>Sorts the elements in the entire immutable list by using the specified comparison object.</source>
          <target state="translated">使用指定的比较对象对整个不可变列表中的元素进行排序。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based starting index of the range to sort.</source>
          <target state="translated">要排序范围的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The length of the range to sort.</source>
          <target state="translated">要排序的范围的长度。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>).</source>
          <target state="translated">比较元素时要使用的实现，若要使用默认比较器 (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>)，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>Sorts the elements in a range of elements in the immutable list  by using the specified comparer.</source>
          <target state="translated">使用指定的比较器对不可变列表中某个范围内的元素进行排序。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value indicating whether this instance is read-only.</source>
          <target state="translated">获取一个值，该值指示此实例是否为只读。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Always <bpt id="p1">&lt;c&gt;</bpt>false<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">始终<bpt id="p1">&lt;c&gt;</bpt>false<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">返回一个循环访问集合的枚举器。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">用于循环访问集合的枚举数。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the list.</source>
          <target state="translated">一维数组，它是从列表中复制的元素的目标。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">该数组的索引必须从零开始。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the list to an array, starting at a particular array index.</source>
          <target state="translated">从特定的数组索引开始，将列表的元素复制到一个数组中。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">获取一个值，该值指示是否同步对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问（线程安全）。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#IsSynchronized">
          <source>true if access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, false.</source>
          <target state="translated">如果对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问是同步的（线程安全），则为 true；否则为 false。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">获取可用于同步对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问的对象。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">可用于同步对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问的对象。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">返回一个循环访问集合的枚举器。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">用于循环访问集合的枚举数。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>The object to add to the list.</source>
          <target state="translated">要添加到列表中的对象。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>Adds an item to the list.</source>
          <target state="translated">将某项添加到列表中。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</source>
          <target state="translated">插入了新元素的位置，-1 指示该项未插入到集合中。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Clear">
          <source>Removes all items from the list.</source>
          <target state="translated">从列表中移除所有项。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Clear">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Clear">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>The object to locate in the list.</source>
          <target state="translated">要在列表中查找的对象。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>Determines whether the list contains a specific value.</source>
          <target state="translated">确定列表是否包含特定值。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> is found in the list; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在列表中找到 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>The object to locate in the list.</source>
          <target state="translated">要在列表中查找的对象。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>Determines the index of a specific item in the list.</source>
          <target state="translated">确定列表中特定项的索引。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>The index of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> if found in the list; otherwise, -1.</source>
          <target state="translated">如果在列表中找到，则为 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">从零开始的索引，应在该位置插入 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The object to insert into the list.</source>
          <target state="translated">要插入到列表中的对象。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>Inserts an item to the list at the specified index.</source>
          <target state="translated">将某项插入列表中指定的索引处。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 是否具有固定大小。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsFixedSize">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size; otherwise, false.</source>
          <target state="translated">true<ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>具有固定大小; 否则为 false。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 是否为只读。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsReadOnly">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only; otherwise, false.</source>
          <target state="translated">true<ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>是只读的; 否则为 false。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Item(System.Int32)">
          <source>The index.</source>
          <target state="translated">索引。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Item(System.Int32)">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> at the specified index.</source>
          <target state="translated">获取或设置指定索引处的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>The object to remove from the list.</source>
          <target state="translated">要从列表中移除的对象。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>Removes the first occurrence of a specific object from the list.</source>
          <target state="translated">从列表中移除特定对象的第一个匹配项。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable">
          <source>Creates an immutable list based on the contents of this instance.</source>
          <target state="translated">基于此实例的内容创建一个不可变列表。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable">
          <source>An immutable list.</source>
          <target state="translated">不可变列表。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable">
          <source>This method is an O(n) operation and approaches O(1) time as the number of actual mutations to the set since the last call to this method approaches 0.</source>
          <target state="translated">此方法是一项 o （n） 操作和方法 o （1） 时间为实际突变数集到自上次调用此方法接近 0。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions to check against the elements.</source>
          <target state="translated">用于定义检查元素时要对照条件的委托。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source>Determines whether every element in the immutable list matches the conditions defined by the specified predicate.</source>
          <target state="translated">确定不可变列表中的每个元素是否都与指定谓词定义的条件匹配。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if every element in the immutable list matches the conditions defined by the specified predicate; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果不可变列表中的每个元素都与指定的谓词所定义的条件相匹配，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source>If the list has no elements, the return value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果列表没有元素，则返回值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>