<Type Name="XmlNamespaceManager" FullName="System.Xml.XmlNamespaceManager">
  <TypeSignature Language="C#" Value="public class XmlNamespaceManager : System.Collections.IEnumerable, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlNamespaceManager extends System.Object implements class System.Collections.IEnumerable, class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNamespaceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlNamespaceManager&#xA;Implements IEnumerable, IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNamespaceManager : System::Collections::IEnumerable, System::Xml::IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b9abc-101">解析集合的命名空间、向集合添加命名空间和从集合中移除命名空间，以及提供对这些命名空间的范围管理。</span><span class="sxs-lookup"><span data-stu-id="b9abc-101">Resolves, adds, and removes namespaces to a collection and provides scope management for these namespaces.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9abc-102">有关如何声明和 XML 文档中使用命名空间的常规信息，请参阅[管理 XML 文档中的命名空间](~/docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)。</span><span class="sxs-lookup"><span data-stu-id="b9abc-102">For general information about how namespaces are declared and used in XML documents, see [Managing Namespaces in an XML Document](~/docs/standard/data/xml/managing-namespaces-in-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="b9abc-103"><xref:System.Xml.XmlNamespaceManager> 将前缀和命名空间存储为字符串。</span><span class="sxs-lookup"><span data-stu-id="b9abc-103"><xref:System.Xml.XmlNamespaceManager> stores prefixes and namespaces as strings.</span></span> <span data-ttu-id="b9abc-104">下面是可以使用此类执行的管理和查找任务的摘要。</span><span class="sxs-lookup"><span data-stu-id="b9abc-104">Here's a summary of management and lookup tasks you can perform with this class.</span></span> <span data-ttu-id="b9abc-105">有关更多信息和示例，请遵循指向每个方法或属性的引用页的链接。</span><span class="sxs-lookup"><span data-stu-id="b9abc-105">For more information and examples, follow the links to the reference page for each method or property.</span></span>  
  
|<span data-ttu-id="b9abc-106">到</span><span class="sxs-lookup"><span data-stu-id="b9abc-106">To</span></span>|<span data-ttu-id="b9abc-107">使用</span><span class="sxs-lookup"><span data-stu-id="b9abc-107">Use</span></span>|  
|--------|---------|  
|<span data-ttu-id="b9abc-108">添加命名空间</span><span class="sxs-lookup"><span data-stu-id="b9abc-108">Add a namespace</span></span>|<span data-ttu-id="b9abc-109"><xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="b9abc-109"><xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method</span></span>|  
|<span data-ttu-id="b9abc-110">移除命名空间</span><span class="sxs-lookup"><span data-stu-id="b9abc-110">Remove a namespace</span></span>|<span data-ttu-id="b9abc-111"><xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="b9abc-111"><xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> method</span></span>|  
|<span data-ttu-id="b9abc-112">查找默认命名空间的 URI</span><span class="sxs-lookup"><span data-stu-id="b9abc-112">Find the URI for the default namespace</span></span>|<span data-ttu-id="b9abc-113"><xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="b9abc-113"><xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A> property</span></span>|  
|<span data-ttu-id="b9abc-114">查找命名空间前缀的 URI</span><span class="sxs-lookup"><span data-stu-id="b9abc-114">Find the URI for a namespace prefix</span></span>|<span data-ttu-id="b9abc-115"><xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="b9abc-115"><xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method</span></span>|  
|<span data-ttu-id="b9abc-116">查找命名空间 URI 的前缀</span><span class="sxs-lookup"><span data-stu-id="b9abc-116">Find the prefix for a namespace URI</span></span>|<span data-ttu-id="b9abc-117"><xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="b9abc-117"><xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method</span></span>|  
|<span data-ttu-id="b9abc-118">获取当前节点中命名空间的列表</span><span class="sxs-lookup"><span data-stu-id="b9abc-118">Get a list of namespaces in the current node</span></span>|<span data-ttu-id="b9abc-119"><xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="b9abc-119"><xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method</span></span>|  
|<span data-ttu-id="b9abc-120">限定命名空间的范围</span><span class="sxs-lookup"><span data-stu-id="b9abc-120">Scope a namespace</span></span>|<span data-ttu-id="b9abc-121"><xref:System.Xml.XmlNamespaceManager.PushScope%2A> 和 <xref:System.Xml.XmlNamespaceManager.PopScope%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="b9abc-121"><xref:System.Xml.XmlNamespaceManager.PushScope%2A> and <xref:System.Xml.XmlNamespaceManager.PopScope%2A> methods</span></span>|  
|<span data-ttu-id="b9abc-122">检查是否在当前范围内定义了前缀</span><span class="sxs-lookup"><span data-stu-id="b9abc-122">Check whether a prefix is defined in the current scope</span></span>|<span data-ttu-id="b9abc-123"><xref:System.Xml.XmlNamespaceManager.HasNamespace%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="b9abc-123"><xref:System.Xml.XmlNamespaceManager.HasNamespace%2A> method</span></span>|  
|<span data-ttu-id="b9abc-124">获取用于查找前缀和 URI 的名称表</span><span class="sxs-lookup"><span data-stu-id="b9abc-124">Get the name table used to look up prefixes and URIs</span></span>|<span data-ttu-id="b9abc-125"><xref:System.Xml.XmlNamespaceManager.NameTable%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="b9abc-125"><xref:System.Xml.XmlNamespaceManager.NameTable%2A> property</span></span>|  
  
 <span data-ttu-id="b9abc-126">若要将命名空间添加到命名空间管理器中，你可以创建<xref:System.Xml.XmlNamespaceManager>对象，然后使用<xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9abc-126">To add namespaces to the namespace manager, you create a <xref:System.Xml.XmlNamespaceManager> object and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method.</span></span> <span data-ttu-id="b9abc-127">创建时默认前缀和命名空间对自动添加到命名空间管理器。</span><span class="sxs-lookup"><span data-stu-id="b9abc-127">Default prefix and namespace pairs are automatically added to the namespace manager on creation.</span></span>  
  
 <span data-ttu-id="b9abc-128">当你创建命名空间管理器时，您可以指定从名称表<xref:System.Xml.XmlReader>， <xref:System.Xml.Xsl.XsltContext>，或<xref:System.Xml.XmlDocument>类，以及如何将<xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>方法来添加命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9abc-128">When you create the namespace manager, you can specify a name table from the <xref:System.Xml.XmlReader>, <xref:System.Xml.Xsl.XsltContext>, or <xref:System.Xml.XmlDocument> class, and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method to add the namespaces.</span></span>  
  
 <span data-ttu-id="b9abc-129">你可以提供<xref:System.Xml.XmlNamespaceManager>对象作为参数传递给<xref:System.Xml.XmlNode.SelectNodes%2A>或<xref:System.Xml.XmlNode.SelectSingleNode%2A>方法<xref:System.Xml.XmlDocument>类来执行 XPath 查询表达式引用命名空间限定元素和属性名称。</span><span class="sxs-lookup"><span data-stu-id="b9abc-129">You can supply the <xref:System.Xml.XmlNamespaceManager> object as a parameter to the <xref:System.Xml.XmlNode.SelectNodes%2A> or <xref:System.Xml.XmlNode.SelectSingleNode%2A> method of the <xref:System.Xml.XmlDocument> class to execute XPath query expressions that reference namespace-qualified element and attribute names.</span></span>  
  
 <span data-ttu-id="b9abc-130">命名空间管理器假定前缀和命名空间已经过验证并符合[W3C 命名空间](https://www.w3.org/TR/REC-xml-names/)规范。</span><span class="sxs-lookup"><span data-stu-id="b9abc-130">The namespace manager assumes that prefixes and namespaces have already been verified and conform to the [W3C Namespaces](https://www.w3.org/TR/REC-xml-names/) specification.</span></span> <span data-ttu-id="b9abc-131">命名空间管理器不执行任何验证。</span><span class="sxs-lookup"><span data-stu-id="b9abc-131">The namespace manager does not perform any validation.</span></span>  
  
 <span data-ttu-id="b9abc-132">命名空间管理器将会原子化字符串时它们通过使用添加<xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>方法和使用执行查找<xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A>或<xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9abc-132">The namespace manager atomizes the strings when they are added by using the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method and when a lookup is performed by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> or <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method.</span></span>  
  
 <span data-ttu-id="b9abc-133">命名空间管理器除了添加和检索命名空间外，还实现枚举支持。</span><span class="sxs-lookup"><span data-stu-id="b9abc-133">The namespace manager implements enumeration support in addition to adding and retrieving namespaces.</span></span> <span data-ttu-id="b9abc-134">可以循环访问保存在命名空间管理器中使用的信息`foreach`构造。</span><span class="sxs-lookup"><span data-stu-id="b9abc-134">You can loop through the information saved in the namespace manager by using the `foreach` construct.</span></span> <span data-ttu-id="b9abc-135">例如，如果你创建的命名空间管理器名称`nsmanager`，你可以通过使用循环访问表`foreach (String prefix in nsmanager)`。</span><span class="sxs-lookup"><span data-stu-id="b9abc-135">For example, if you create a namespace manager with the name `nsmanager`, you can iterate through the table by using `foreach (String prefix in nsmanager)`.</span></span>  
  
 <span data-ttu-id="b9abc-136">由于命名空间管理器提供将前缀和命名空间作为对象的字符串比较功能，因此与字符串的直接比较相比，使用命名空间管理器可以提高性能。</span><span class="sxs-lookup"><span data-stu-id="b9abc-136">Because the namespace manager provides a string comparison with the prefix and namespaces as objects, there is a performance improvement when using the namespace manager over the direct comparison of a string.</span></span>  
  
 <span data-ttu-id="b9abc-137">下面的代码示例演示如何将绑定前缀`xsd`与命名空间 URI 的`http://www.w3.org/2001/XMLSchema`并将其添加到命名空间管理器：</span><span class="sxs-lookup"><span data-stu-id="b9abc-137">The following code example shows how to bind the prefix `xsd` with the namespace URI of `http://www.w3.org/2001/XMLSchema` and add it to the namespace manager:</span></span>  
  
```vb  
nsmgr.AddNamespace("xsd", "http://www.w3.org/2001/XMLSchema")  
```  
  
```csharp  
nsmgr.AddNamespace("xsd", "http://www.w3.org/2001/XMLSchema");  
```  
  
 <span data-ttu-id="b9abc-138">然后，您可以找到该命名空间使用<xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A>方法：</span><span class="sxs-lookup"><span data-stu-id="b9abc-138">You can then find the namespace by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method:</span></span>  
  
```vb  
nsmgr.LookupNamespace("xsd")  
```  
  
```csharp  
nsmgr.LookupNamespace("xsd");  
```  
  
 <span data-ttu-id="b9abc-139">下面的示例创建<xref:System.Xml.XmlNamespaceManager>通过从 XML 读取器的名称表：</span><span class="sxs-lookup"><span data-stu-id="b9abc-139">The following example creates an <xref:System.Xml.XmlNamespaceManager> by using the name table from an XML reader:</span></span>  
  
```vb  
Dim reader As New XmlTextReader("myfile.xml")  
Dim nsmanager As New XmlNamespaceManager(reader.NameTable)  
nsmanager.AddNamespace("msbooks", "www.microsoft.com/books")  
nsmanager.PushScope()  
nsmanager.AddNamespace("msstore", "www.microsoft.com/store")  
While reader.Read()  
    Console.WriteLine("Reader Prefix:{0}", reader.Prefix)  
    Console.WriteLine("XmlNamespaceManager Prefix:{0}",  
     nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)))  
End While  
```  
  
```csharp  
XmlTextReader reader = new XmlTextReader("myfile.xml");  
XmlNamespaceManager nsmanager = new XmlNamespaceManager(reader.NameTable);  
nsmanager.AddNamespace("msbooks", "www.microsoft.com/books");  
nsmanager.PushScope();  
nsmanager.AddNamespace("msstore", "www.microsoft.com/store");  
while (reader.Read())  
{  
    Console.WriteLine("Reader Prefix:{0}", reader.Prefix);  
    Console.WriteLine("XmlNamespaceManager Prefix:{0}",  
    nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)));  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlNamespaceManager (System.Xml.XmlNameTable nameTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlNamespaceManager(System::Xml::XmlNameTable ^ nameTable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nameTable"><span data-ttu-id="b9abc-140">要使用的 <see cref="T:System.Xml.XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="b9abc-140">The <see cref="T:System.Xml.XmlNameTable" /> to use.</span></span></param>
        <summary><span data-ttu-id="b9abc-141">使用指定的 <see cref="T:System.Xml.XmlNamespaceManager" /> 初始化 <see cref="T:System.Xml.XmlNameTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b9abc-141">Initializes a new instance of the <see cref="T:System.Xml.XmlNamespaceManager" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9abc-142">名称表用于查找前缀和命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9abc-142">The name table is used to look up prefixes and namespaces.</span></span> <span data-ttu-id="b9abc-143">构造函数中，可以指定现有名称表使用的预先原子化字符串。</span><span class="sxs-lookup"><span data-stu-id="b9abc-143">An existing name table with pre-atomized strings can be specified in the constructor.</span></span> <span data-ttu-id="b9abc-144">在此过程中有几个优点。</span><span class="sxs-lookup"><span data-stu-id="b9abc-144">There are several advantages in doing so.</span></span> <span data-ttu-id="b9abc-145">例如，如果的名称表<xref:System.Xml.XmlReader>对象使用，每个读取任何命名空间和前缀字符串推送到名称表后可以重新使用通过<xref:System.Xml.XmlNamespaceManager>。</span><span class="sxs-lookup"><span data-stu-id="b9abc-145">For example, if the name table of an <xref:System.Xml.XmlReader> object is used, after each read, any namespace and prefix strings pushed into the name table can be re-used by <xref:System.Xml.XmlNamespaceManager>.</span></span>  
  
 <span data-ttu-id="b9abc-146">有关原子化字符串的详细信息，请参阅 <xref:System.Xml.XmlNameTable>。</span><span class="sxs-lookup"><span data-stu-id="b9abc-146">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9abc-147">如果指定现有的名称表，在名称表中的任何命名空间不会自动添加到<xref:System.Xml.XmlNamespaceManager>。</span><span class="sxs-lookup"><span data-stu-id="b9abc-147">If you specify an existing name table, any namespaces in the name table are not automatically added to <xref:System.Xml.XmlNamespaceManager>.</span></span> <span data-ttu-id="b9abc-148">必须使用<xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>和<xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A>添加或删除命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9abc-148">You must use <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> and <xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> to add or remove namespaces.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9abc-149">下面的示例创建<xref:System.Xml.XmlNamespaceManager>使用读取器的名称表。</span><span class="sxs-lookup"><span data-stu-id="b9abc-149">The following example creates an <xref:System.Xml.XmlNamespaceManager> using the name table of the reader.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b9abc-150">向构造函数传递了 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="b9abc-150"><see langword="null" /> is passed to the constructor</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddNamespace">
      <MemberSignature Language="C#" Value="public virtual void AddNamespace (string prefix, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNamespace(string prefix, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddNamespace (prefix As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddNamespace(System::String ^ prefix, System::String ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="b9abc-151">与要添加的命名空间关联的前缀。</span><span class="sxs-lookup"><span data-stu-id="b9abc-151">The prefix to associate with the namespace being added.</span></span> <span data-ttu-id="b9abc-152">使用 String.Empty 来添加默认命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9abc-152">Use String.Empty to add a default namespace.</span></span>  
  
 <span data-ttu-id="b9abc-153">**注意**：如果 <see cref="T:System.Xml.XmlNamespaceManager" /> 将用于解析 XML 路径语言 (XPath) 表达式中的命名空间，则必须指定前缀。</span><span class="sxs-lookup"><span data-stu-id="b9abc-153">**Note**If the <see cref="T:System.Xml.XmlNamespaceManager" /> will be used for resolving namespaces in an XML Path Language (XPath) expression, a prefix must be specified.</span></span> <span data-ttu-id="b9abc-154">如果 XPath 表达式不包含前缀，则假定命名空间统一资源标识符 (URI) 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9abc-154">If an XPath expression does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace.</span></span> <span data-ttu-id="b9abc-155">有关 XPath 表达式和 <see cref="T:System.Xml.XmlNamespaceManager" /> 的更多信息，请参考 <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> 和 <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9abc-155">For more information about XPath expressions and the <see cref="T:System.Xml.XmlNamespaceManager" />, refer to the <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> and <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" /> methods.</span></span></param>
        <param name="uri"><span data-ttu-id="b9abc-156">要添加的命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9abc-156">The namespace to add.</span></span></param>
        <summary><span data-ttu-id="b9abc-157">将给定的命名空间添加到集合。</span><span class="sxs-lookup"><span data-stu-id="b9abc-157">Adds the given namespace to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9abc-158"><xref:System.Xml.XmlNamespaceManager> 不会检查`prefix`和`uri`的一致性的工具。</span><span class="sxs-lookup"><span data-stu-id="b9abc-158"><xref:System.Xml.XmlNamespaceManager> does not check `prefix` and `uri` for conformance.</span></span>  
  
 <span data-ttu-id="b9abc-159"><xref:System.Xml.XmlReader> 检查名称，包括前缀和命名空间，以确保它们是有效的 XML 名称根据万维网联合会 (W3C)[命名空间规范](https://www.w3.org/TR/REC-xml-names/)。</span><span class="sxs-lookup"><span data-stu-id="b9abc-159"><xref:System.Xml.XmlReader> checks names, including prefixes and namespaces, to ensure they are valid XML names according to the World Wide Web Consortium (W3C) [Namespaces specification](https://www.w3.org/TR/REC-xml-names/).</span></span> <span data-ttu-id="b9abc-160"><xref:System.Xml.XmlNamespaceManager> 内部使用<xref:System.Xml.XmlReader>，因此，若要避免重复工作，<xref:System.Xml.XmlNamespaceManager>假定所有前缀和命名空间都是有效。</span><span class="sxs-lookup"><span data-stu-id="b9abc-160"><xref:System.Xml.XmlNamespaceManager> is used internally by <xref:System.Xml.XmlReader>, so to avoid a duplication of efforts, <xref:System.Xml.XmlNamespaceManager> assumes all prefixes and namespaces are valid.</span></span>  
  
 <span data-ttu-id="b9abc-161">如果在当前范围内已存在的前缀和命名空间，新的前缀和命名空间对将替换现有的命名空间前缀/组合。</span><span class="sxs-lookup"><span data-stu-id="b9abc-161">If the prefix and namespace already exist within the current scope, the new prefix and namespace pair will replace the existing prefix/namespace combination.</span></span> <span data-ttu-id="b9abc-162">相同的前缀和命名空间组合可以存在于不同的范围。</span><span class="sxs-lookup"><span data-stu-id="b9abc-162">The same prefix and namespace combination can exist across different scopes.</span></span>  
  
 <span data-ttu-id="b9abc-163">以下前缀/命名空间对添加到默认情况下<xref:System.Xml.XmlNamespaceManager>。</span><span class="sxs-lookup"><span data-stu-id="b9abc-163">The following prefix/namespace pairs are added by default to the <xref:System.Xml.XmlNamespaceManager>.</span></span> <span data-ttu-id="b9abc-164">它们可以在任何范围确定。</span><span class="sxs-lookup"><span data-stu-id="b9abc-164">They can be determined at any scope.</span></span>  
  
|<span data-ttu-id="b9abc-165">前缀</span><span class="sxs-lookup"><span data-stu-id="b9abc-165">Prefix</span></span>|<span data-ttu-id="b9abc-166">命名空间</span><span class="sxs-lookup"><span data-stu-id="b9abc-166">Namespace</span></span>|  
|------------|---------------|  
|<span data-ttu-id="b9abc-167">xmlns</span><span class="sxs-lookup"><span data-stu-id="b9abc-167">xmlns</span></span>|<span data-ttu-id="b9abc-168">http://www.w3.org/2000/xmlns/ （xmlns 前缀的命名空间）</span><span class="sxs-lookup"><span data-stu-id="b9abc-168">http://www.w3.org/2000/xmlns/ (the xmlns prefix namespace)</span></span>|  
|<span data-ttu-id="b9abc-169">xml</span><span class="sxs-lookup"><span data-stu-id="b9abc-169">xml</span></span>|<span data-ttu-id="b9abc-170">http://www.w3.org/XML/1998/namespace （XML 命名空间）</span><span class="sxs-lookup"><span data-stu-id="b9abc-170">http://www.w3.org/XML/1998/namespace (the XML namespace)</span></span>|  
|<span data-ttu-id="b9abc-171">String.Empty</span><span class="sxs-lookup"><span data-stu-id="b9abc-171">String.Empty</span></span>|<span data-ttu-id="b9abc-172">String.Empty （空的命名空间）。</span><span class="sxs-lookup"><span data-stu-id="b9abc-172">String.Empty (the empty namespace).</span></span> <span data-ttu-id="b9abc-173">此值可为重新分配不同的前缀。</span><span class="sxs-lookup"><span data-stu-id="b9abc-173">This value can be reassigned a different prefix.</span></span> <span data-ttu-id="b9abc-174">例如，xmlns =""定义要空命名空间的默认命名空间</span><span class="sxs-lookup"><span data-stu-id="b9abc-174">For example, xmlns="" defines the default namespace to be the empty namespace</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9abc-175">下面的示例使用<xref:System.Xml.XmlNamespaceManager>若要解决的 XML 片段中的命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9abc-175">The following example uses <xref:System.Xml.XmlNamespaceManager> to resolve namespaces in an XML fragment.</span></span>  
  
 [!code-csharp[Classic WebData XmlNamespaceManager.AddNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.AddNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.AddNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.AddNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b9abc-176"><paramref name="prefix" /> 的值为“xml”或“xmlns”。</span><span class="sxs-lookup"><span data-stu-id="b9abc-176">The value for <paramref name="prefix" /> is "xml" or "xmlns".</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9abc-177"><paramref name="prefix" /> 或 <paramref name="uri" /> 的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9abc-177">The value for <paramref name="prefix" /> or <paramref name="uri" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultNamespace">
      <MemberSignature Language="C#" Value="public virtual string DefaultNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNamespaceManager.DefaultNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9abc-178">获取默认命名空间的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="b9abc-178">Gets the namespace URI for the default namespace.</span></span></summary>
        <value><span data-ttu-id="b9abc-179">返回默认命名空间的命名空间 URI；如果没有默认命名空间，则返回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="b9abc-179">Returns the namespace URI for the default namespace, or String.Empty if there is no default namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9abc-180">此方法是等效于调用 LookupNamespace(String.Empty)。</span><span class="sxs-lookup"><span data-stu-id="b9abc-180">This method is equivalent to calling LookupNamespace(String.Empty).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9abc-181">下面的示例显示默认的命名空间，如果存在。</span><span class="sxs-lookup"><span data-stu-id="b9abc-181">The following example displays the default namespace, if one exists.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9abc-182">返回一个枚举数，将使用该枚举数循环访问 <see cref="T:System.Xml.XmlNamespaceManager" /> 集合中的命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9abc-182">Returns an enumerator to use to iterate through the namespaces in the <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></summary>
        <returns><span data-ttu-id="b9abc-183">一个 <see cref="T:System.Collections.IEnumerator" />，包含 <see cref="T:System.Xml.XmlNamespaceManager" /> 存储的前缀。</span><span class="sxs-lookup"><span data-stu-id="b9abc-183">An <see cref="T:System.Collections.IEnumerator" /> containing the prefixes stored by the <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9abc-184">下面的代码演示如何使用<xref:System.Collections.IEnumerator>若要查看所有命名空间对存储在<xref:System.Xml.XmlNamespaceManager>对象。</span><span class="sxs-lookup"><span data-stu-id="b9abc-184">The following code shows how to use the <xref:System.Collections.IEnumerator> to view all the namespace pairs stored in the <xref:System.Xml.XmlNamespaceManager> object.</span></span>  
  
```vb  
Dim nsEnum As IEnumerator = nsmgr.GetEnumerator()  
Do While nsEnum.MoveNext  
  If nsEnum.Current <> "" Then  
    MsgBox("xmlns:" + nsEnum.Current + "=" + nsmgr.LookupNamespace(nsEnum.Current))  
  End If  
Loop  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespacesInScope">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,string&gt; GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetNamespacesInScope(System::Xml::XmlNamespaceScope scope);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="b9abc-185">一个指定要返回的命名空间节点的类型的枚举值。</span><span class="sxs-lookup"><span data-stu-id="b9abc-185">An enumeration value that specifies the type of namespace nodes to return.</span></span></param>
        <summary><span data-ttu-id="b9abc-186">获取被可用于枚举当前范围内的命名空间的前缀键控的命名空间名称的集合。</span><span class="sxs-lookup"><span data-stu-id="b9abc-186">Gets a collection of namespace names keyed by prefix which can be used to enumerate the namespaces currently in scope.</span></span></summary>
        <returns><span data-ttu-id="b9abc-187">当前范围中的命名空间和前缀对的集合。</span><span class="sxs-lookup"><span data-stu-id="b9abc-187">A collection of namespace and prefix pairs currently in scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9abc-188">字典包含的前缀键控的命名空间名称的集合。</span><span class="sxs-lookup"><span data-stu-id="b9abc-188">The dictionary consists of a collection of namespace names keyed by prefix.</span></span> <span data-ttu-id="b9abc-189">它可以用于枚举的范围内命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9abc-189">It can be used to enumerate the in-scope namespaces.</span></span> <span data-ttu-id="b9abc-190">字典是断开连接的命名空间列表副本。</span><span class="sxs-lookup"><span data-stu-id="b9abc-190">The dictionary is a disconnected copy of the namespace list.</span></span> <span data-ttu-id="b9abc-191">它保持当前范围内命名空间列表更改为不变。</span><span class="sxs-lookup"><span data-stu-id="b9abc-191">It remains unchanged as the current in-scope namespace list changes.</span></span>  
  
 <span data-ttu-id="b9abc-192">下表显示如何<xref:System.Xml.XmlNamespaceScope>值会影响返回的命名空间<xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9abc-192">The following table shows how <xref:System.Xml.XmlNamespaceScope> values affect the namespaces returned by the <xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method.</span></span>  
  
|<span data-ttu-id="b9abc-193">XmlNamespaceScope 值</span><span class="sxs-lookup"><span data-stu-id="b9abc-193">XmlNamespaceScope value</span></span>|<span data-ttu-id="b9abc-194">xmlns: xml</span><span class="sxs-lookup"><span data-stu-id="b9abc-194">xmlns:xml</span></span>|<span data-ttu-id="b9abc-195">xmlns:xmlns</span><span class="sxs-lookup"><span data-stu-id="b9abc-195">xmlns:xmlns</span></span>|<span data-ttu-id="b9abc-196">xmlns=""</span><span class="sxs-lookup"><span data-stu-id="b9abc-196">xmlns=""</span></span>|  
|-----------------------------|---------------|-----------------|---------------|  
|`All`|<span data-ttu-id="b9abc-197">是</span><span class="sxs-lookup"><span data-stu-id="b9abc-197">Yes</span></span>|<span data-ttu-id="b9abc-198">否</span><span class="sxs-lookup"><span data-stu-id="b9abc-198">No</span></span>|<span data-ttu-id="b9abc-199">否</span><span class="sxs-lookup"><span data-stu-id="b9abc-199">No</span></span>|  
|`ExcludeXml`|<span data-ttu-id="b9abc-200">否</span><span class="sxs-lookup"><span data-stu-id="b9abc-200">No</span></span>|<span data-ttu-id="b9abc-201">否</span><span class="sxs-lookup"><span data-stu-id="b9abc-201">No</span></span>|<span data-ttu-id="b9abc-202">否</span><span class="sxs-lookup"><span data-stu-id="b9abc-202">No</span></span>|  
|`Local`|<span data-ttu-id="b9abc-203">否</span><span class="sxs-lookup"><span data-stu-id="b9abc-203">No</span></span>|<span data-ttu-id="b9abc-204">否</span><span class="sxs-lookup"><span data-stu-id="b9abc-204">No</span></span>|<span data-ttu-id="b9abc-205">是</span><span class="sxs-lookup"><span data-stu-id="b9abc-205">Yes</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNamespace">
      <MemberSignature Language="C#" Value="public virtual bool HasNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasNamespace (prefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasNamespace(System::String ^ prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="b9abc-206">要查找的命名空间的前缀。</span><span class="sxs-lookup"><span data-stu-id="b9abc-206">The prefix of the namespace you want to find.</span></span></param>
        <summary><span data-ttu-id="b9abc-207">获取一个值，该值指示所提供的前缀是否具有为当前推送的范围定义的命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9abc-207">Gets a value indicating whether the supplied prefix has a namespace defined for the current pushed scope.</span></span></summary>
        <returns>
          <span data-ttu-id="b9abc-208">如果定义有命名空间，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9abc-208"><see langword="true" /> if there is a namespace defined; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9abc-209">若要确定是否存在默认值为空命名空间定义，设置`prefix`为 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="b9abc-209">To determine whether there is a default empty namespace defined, set `prefix` to String.Empty.</span></span> <span data-ttu-id="b9abc-210">返回值`true`指示是在当前范围内; 定义的默认命名空间`false`指示没有默认命名空间是否定义。</span><span class="sxs-lookup"><span data-stu-id="b9abc-210">A return value of `true` indicates that there is a default namespace defined in the current scope; `false` indicates that no default namespace is defined.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9abc-211">xmlns:x =""是根据非法[W3C 命名空间](https://www.w3.org/TR/REC-xml-names/)建议。</span><span class="sxs-lookup"><span data-stu-id="b9abc-211">xmlns:x= "" is illegal according to the [W3C Namespaces](https://www.w3.org/TR/REC-xml-names/) recommendation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9abc-212">下面的示例显示默认的命名空间，如果存在。</span><span class="sxs-lookup"><span data-stu-id="b9abc-212">The following example displays the default namespace, if one exists.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public virtual string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="b9abc-213">要解析其命名空间 URI 的前缀。</span><span class="sxs-lookup"><span data-stu-id="b9abc-213">The prefix whose namespace URI you want to resolve.</span></span> <span data-ttu-id="b9abc-214">若要匹配默认命名空间，请传递 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="b9abc-214">To match the default namespace, pass String.Empty.</span></span></param>
        <summary><span data-ttu-id="b9abc-215">获取指定前缀的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="b9abc-215">Gets the namespace URI for the specified prefix.</span></span></summary>
        <returns><span data-ttu-id="b9abc-216">返回 <paramref name="prefix" /> 的命名空间 URI；如果没有映射的命名空间，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9abc-216">Returns the namespace URI for <paramref name="prefix" /> or <see langword="null" /> if there is no mapped namespace.</span></span> <span data-ttu-id="b9abc-217">返回的字符串是原子化的。</span><span class="sxs-lookup"><span data-stu-id="b9abc-217">The returned string is atomized.</span></span>  
  
 <span data-ttu-id="b9abc-218">有关原子化字符串的更多信息，请参见 <see cref="T:System.Xml.XmlNameTable" /> 类。</span><span class="sxs-lookup"><span data-stu-id="b9abc-218">For more information on atomized strings, see the <see cref="T:System.Xml.XmlNameTable" /> class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b9abc-219">下面的示例将添加到的前缀/命名空间对<xref:System.Xml.XmlNamespaceManager>，然后显示集合中的所有对。</span><span class="sxs-lookup"><span data-stu-id="b9abc-219">The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager>, and then displays all the pairs in the collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public virtual string LookupPrefix (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LookupPrefix (uri As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ LookupPrefix(System::String ^ uri);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="b9abc-220">要为前缀解析的命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9abc-220">The namespace to resolve for the prefix.</span></span></param>
        <summary><span data-ttu-id="b9abc-221">查找为给定的命名空间 URI 声明的前缀。</span><span class="sxs-lookup"><span data-stu-id="b9abc-221">Finds the prefix declared for the given namespace URI.</span></span></summary>
        <returns><span data-ttu-id="b9abc-222">匹配的前缀。</span><span class="sxs-lookup"><span data-stu-id="b9abc-222">The matching prefix.</span></span> <span data-ttu-id="b9abc-223">如果没有映射的前缀，则方法返回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="b9abc-223">If there is no mapped prefix, the method returns String.Empty.</span></span> <span data-ttu-id="b9abc-224">如果提供空值，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9abc-224">If a null value is supplied, then <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9abc-225">此方法通过审核堆栈查找的映射的前缀 （也就是说，它看上去全局）。</span><span class="sxs-lookup"><span data-stu-id="b9abc-225">This method finds the mapped prefix by walking the stack (that is, it looks globally).</span></span> <span data-ttu-id="b9abc-226">所提供的字符串必须要使查找成功的原子化。</span><span class="sxs-lookup"><span data-stu-id="b9abc-226">The supplied string must be atomized for the lookup to succeed.</span></span> <span data-ttu-id="b9abc-227">换而言之，提供的字符串对象必须存在于命名空间管理器的名称表 (<xref:System.Xml.XmlNamespaceManager.NameTable%2A>)。</span><span class="sxs-lookup"><span data-stu-id="b9abc-227">In other words, the supplied string object must exist in the namespace manager's name table (<xref:System.Xml.XmlNamespaceManager.NameTable%2A>).</span></span>  
  
 <span data-ttu-id="b9abc-228">返回的字符串也是原子化。</span><span class="sxs-lookup"><span data-stu-id="b9abc-228">The returned string is also atomized.</span></span> <span data-ttu-id="b9abc-229">有关原子化字符串的更多信息，请参见 <xref:System.Xml.XmlNameTable> 类。</span><span class="sxs-lookup"><span data-stu-id="b9abc-229">For more information on atomized strings, see the <xref:System.Xml.XmlNameTable> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9abc-230">下面的示例演示如何使用<xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A>方法在写入属性时。</span><span class="sxs-lookup"><span data-stu-id="b9abc-230">The following example shows how to use the <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method when writing an attribute.</span></span> <span data-ttu-id="b9abc-231">它使用<xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType>方法启动该特性，来查找的前缀`urn:samples`命名空间 URI，然后使用该前缀的<xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType>编写时`ISBN`属性：</span><span class="sxs-lookup"><span data-stu-id="b9abc-231">It uses the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType> method to start the attribute, looks up the prefix for the `urn:samples` namespace URI, and then uses that prefix in the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType> when writing the `ISBN` attribute:</span></span>  
  
```vb  
Dim prefix As String = nsMgr.LookupPrefix("urn:samples")  
writer.WriteStartAttribute(prefix, "ISBN", "urn:samples")  
  
```  
  
```csharp  
XmlNameTable nt = new XmlNameTable();  
XmlNamespaceManager nsMgr = new XmlNamespaceManager(nt);  
nsMgr.AddNamespace("bk","urn:samples");string prefix = writer nsMgr.LookupPrefix("urn:samples");  
writer.WriteStartAttribute(prefix, "ISBN", "urn:samples");  
```  
  
 <span data-ttu-id="b9abc-232">下面的示例使用<xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A>若要查找的元素上定义的前缀。</span><span class="sxs-lookup"><span data-stu-id="b9abc-232">The following example uses <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> to find the prefix defined on an element.</span></span>  
  
```vb  
writer.WriteStartElement("root", "book")  
writer.WriteStartElement("x", "node", "author")  
s = writer.LookupPrefix("author")  
CError.Compare(s, "x", "Error in nested element")  
writer.WriteEndElement()  
s = writer.LookupPrefix("book")  
CError.Compare(s, Nothing, "Error in root element")  
writer.WriteEndElement()  
  
```  
  
 <span data-ttu-id="b9abc-233">**输出**</span><span class="sxs-lookup"><span data-stu-id="b9abc-233">**Output**</span></span>  
  
```  
<root xmlns="book">  
  <x:node xmlns:x="author" />   
</root>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNamespaceManager.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9abc-234">获取与此对象关联的 <see cref="T:System.Xml.XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="b9abc-234">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this object.</span></span></summary>
        <value><span data-ttu-id="b9abc-235">此对象使用的 <see cref="T:System.Xml.XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="b9abc-235">The <see cref="T:System.Xml.XmlNameTable" /> used by this object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9abc-236">名称表用于查找前缀和命名空间 Uri。</span><span class="sxs-lookup"><span data-stu-id="b9abc-236">The name table is used to look up prefixes and namespace URIs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="PopScope">
      <MemberSignature Language="C#" Value="public virtual bool PopScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PopScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.PopScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PopScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PopScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9abc-237">将命名空间范围弹出堆栈。</span><span class="sxs-lookup"><span data-stu-id="b9abc-237">Pops a namespace scope off the stack.</span></span></summary>
        <returns>
          <span data-ttu-id="b9abc-238">如果堆栈上留有命名空间范围，则为 <see langword="true" />；如果不再有要弹出的命名空间，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9abc-238"><see langword="true" /> if there are namespace scopes left on the stack; <see langword="false" /> if there are no more namespaces to pop.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9abc-239">当调用此方法，已添加到的所有命名空间<xref:System.Xml.XmlNamespaceManager>(通过调用<xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>) 自上次调用<xref:System.Xml.XmlNamespaceManager.PopScope%2A>会删除。</span><span class="sxs-lookup"><span data-stu-id="b9abc-239">When you call this method, all namespaces which were added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>) since the last call to <xref:System.Xml.XmlNamespaceManager.PopScope%2A> are removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9abc-240">下面的示例将添加到的前缀/命名空间对<xref:System.Xml.XmlNamespaceManager>，然后显示集合中的所有对。</span><span class="sxs-lookup"><span data-stu-id="b9abc-240">The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager> and then displays all the pairs in the collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.PushScope" />
      </Docs>
    </Member>
    <Member MemberName="PushScope">
      <MemberSignature Language="C#" Value="public virtual void PushScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PushScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.PushScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PushScope ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PushScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9abc-241">将命名空间范围推送到堆栈上。</span><span class="sxs-lookup"><span data-stu-id="b9abc-241">Pushes a namespace scope onto the stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9abc-242">调用此方法，添加到的所有命名空间后<xref:System.Xml.XmlNamespaceManager>(通过调用<xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>)，属于推送命名空间范围。</span><span class="sxs-lookup"><span data-stu-id="b9abc-242">After a call to this method, all namespaces, which are added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>), belong to the pushed namespace scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9abc-243">下面的示例将添加到的前缀/命名空间对<xref:System.Xml.XmlNamespaceManager>，然后显示集合中的所有对。</span><span class="sxs-lookup"><span data-stu-id="b9abc-243">The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager> and then displays all the pairs in the collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.PopScope" />
      </Docs>
    </Member>
    <Member MemberName="RemoveNamespace">
      <MemberSignature Language="C#" Value="public virtual void RemoveNamespace (string prefix, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNamespace(string prefix, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveNamespace (prefix As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveNamespace(System::String ^ prefix, System::String ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="b9abc-244">命名空间的前缀</span><span class="sxs-lookup"><span data-stu-id="b9abc-244">The prefix for the namespace</span></span></param>
        <param name="uri"><span data-ttu-id="b9abc-245">要为给定的前缀移除的命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9abc-245">The namespace to remove for the given prefix.</span></span> <span data-ttu-id="b9abc-246">所移除的命名空间来自当前的命名空间范围。</span><span class="sxs-lookup"><span data-stu-id="b9abc-246">The namespace removed is from the current namespace scope.</span></span> <span data-ttu-id="b9abc-247">忽略当前范围以外的命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9abc-247">Namespaces outside the current scope are ignored.</span></span></param>
        <summary><span data-ttu-id="b9abc-248">为给定的前缀移除给定的命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9abc-248">Removes the given namespace for the given prefix.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9abc-249"><paramref name="prefix" /> 或 <paramref name="uri" /> 的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9abc-249">The value of <paramref name="prefix" /> or <paramref name="uri" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>