<Type Name="XmlReader" FullName="System.Xml.XmlReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07b0bdeec60673efbb2fb7ba923fb5b19226b8d4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36435766" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlReader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlReader extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReader abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type XmlReader = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8fa94-101">表示提供对 XML 数据进行快速、非缓存、只进访问的读取器。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8fa94-101">Represents a reader that provides fast, noncached, forward-only access to XML data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-102"><xref:System.Xml.XmlReader> 提供对文档或流中的 XML 数据的只进、 只读访问。</span><span class="sxs-lookup"><span data-stu-id="8fa94-102"><xref:System.Xml.XmlReader> provides forward-only, read-only access to XML data in a document or stream.</span></span> <span data-ttu-id="8fa94-103">此类符合 W3C[可扩展标记语言 (XML) 1.0 （第四个版本）](https://www.w3.org/TR/2006/REC-xml-20060816/)和[在 XML 1.0 中的命名空间 （第三版）](https://www.w3.org/TR/REC-xml-names/)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-103">This class conforms to the W3C [Extensible Markup Language (XML) 1.0 (fourth edition)](https://www.w3.org/TR/2006/REC-xml-20060816/) and the [Namespaces in XML 1.0 (third edition)](https://www.w3.org/TR/REC-xml-names/) recommendations.</span></span>  
  
 <span data-ttu-id="8fa94-104"><xref:System.Xml.XmlReader> 方法使你遍历 XML 数据并读取的节点内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-104"><xref:System.Xml.XmlReader> methods let you move through XML data and read the contents of a node.</span></span> <span data-ttu-id="8fa94-105">类的属性反映的是读取器位于的当前节点的值。<xref:System.Xml.XmlReader.ReadState%2A>属性值指示的 XML 读取器的当前状态。</span><span class="sxs-lookup"><span data-stu-id="8fa94-105">The properties of the class reflect the value of the current node, which is where the reader is positioned.The <xref:System.Xml.XmlReader.ReadState%2A> property value indicates the current state of the XML reader.</span></span> <span data-ttu-id="8fa94-106">例如，将属性设置为<xref:System.Xml.ReadState.Initial?displayProperty=nameWithType>通过<xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType>方法和<xref:System.Xml.ReadState.Closed?displayProperty=nameWithType>通过<xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-106">For example, the property is set to <xref:System.Xml.ReadState.Initial?displayProperty=nameWithType> by the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> method and <xref:System.Xml.ReadState.Closed?displayProperty=nameWithType> by the <xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8fa94-107"><xref:System.Xml.XmlReader> 此外提供了数据一致性检查和对 DTD 或架构验证。</span><span class="sxs-lookup"><span data-stu-id="8fa94-107"><xref:System.Xml.XmlReader> also provides data conformance checks and validation against a DTD or schema.</span></span>  
  
 <span data-ttu-id="8fa94-108"><xref:System.Xml.XmlReader> 使用请求模型检索数据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-108"><xref:System.Xml.XmlReader> uses a pull model to retrieve data.</span></span> <span data-ttu-id="8fa94-109">此模型中：</span><span class="sxs-lookup"><span data-stu-id="8fa94-109">This model:</span></span>  
  
-   <span data-ttu-id="8fa94-110">自然，自上而下的过程优化，从而简化状态管理。</span><span class="sxs-lookup"><span data-stu-id="8fa94-110">Simplifies state management by a natural, top-down procedural refinement.</span></span>  
  
-   <span data-ttu-id="8fa94-111">支持多个输入的流和分层。</span><span class="sxs-lookup"><span data-stu-id="8fa94-111">Supports multiple input streams and layering.</span></span>  
  
-   <span data-ttu-id="8fa94-112">使客户端为分析器提供字符串直接写入，并因此避免额外字符串复制到其中的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="8fa94-112">Enables the client to give the parser a buffer into which the string is directly written, and thus avoids the necessity of an extra string copy.</span></span>  
  
-   <span data-ttu-id="8fa94-113">支持有选择地处理。</span><span class="sxs-lookup"><span data-stu-id="8fa94-113">Supports selective processing.</span></span> <span data-ttu-id="8fa94-114">客户端可以跳过的项目，并处理那些感兴趣的应用程序。</span><span class="sxs-lookup"><span data-stu-id="8fa94-114">The client can skip items and process those that are of interest to the application.</span></span> <span data-ttu-id="8fa94-115">你还可以设置属性提前以管理如何将 XML 流处理 （例如，规范化）。</span><span class="sxs-lookup"><span data-stu-id="8fa94-115">You can also set properties in advance to manage how the XML stream is processed (for example, normalization).</span></span>  
  
 <span data-ttu-id="8fa94-116">本节内容：</span><span class="sxs-lookup"><span data-stu-id="8fa94-116">In this section:</span></span>  
  
 <span data-ttu-id="8fa94-117">[创建 XML 读取器](#xmlreader_create) </span><span class="sxs-lookup"><span data-stu-id="8fa94-117">[Creating an XML reader](#xmlreader_create) </span></span>  
 <span data-ttu-id="8fa94-118">[验证 XML 数据](#xmlreader_validate) </span><span class="sxs-lookup"><span data-stu-id="8fa94-118">[Validating XML data](#xmlreader_validate) </span></span>  
 <span data-ttu-id="8fa94-119">[数据一致性](#xmlreader_data) </span><span class="sxs-lookup"><span data-stu-id="8fa94-119">[Data conformance](#xmlreader_data) </span></span>  
 <span data-ttu-id="8fa94-120">[在节点中导航](#xmlreader_nodes) </span><span class="sxs-lookup"><span data-stu-id="8fa94-120">[Navigating through nodes](#xmlreader_nodes) </span></span>  
 <span data-ttu-id="8fa94-121">[读取 XML 元素](#xmlreader_elements) </span><span class="sxs-lookup"><span data-stu-id="8fa94-121">[Reading XML elements](#xmlreader_elements) </span></span>  
 <span data-ttu-id="8fa94-122">[读取 XML 属性](#xmlreader_attributes) </span><span class="sxs-lookup"><span data-stu-id="8fa94-122">[Reading XML attributes](#xmlreader_attributes) </span></span>  
 <span data-ttu-id="8fa94-123">[读取 XML 内容](#xmlreader_content) </span><span class="sxs-lookup"><span data-stu-id="8fa94-123">[Reading XML content](#xmlreader_content) </span></span>  
 <span data-ttu-id="8fa94-124">[将转换为 CLR 类型](#xmlreader_clr) </span><span class="sxs-lookup"><span data-stu-id="8fa94-124">[Converting to CLR types](#xmlreader_clr) </span></span>  
 <span data-ttu-id="8fa94-125">[异步编程](#xmlreader_async) </span><span class="sxs-lookup"><span data-stu-id="8fa94-125">[Asynchronous programming](#xmlreader_async) </span></span>  
 [<span data-ttu-id="8fa94-126">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="8fa94-126">Security considerations</span></span>](#xmlreader_security)  
  
<a name="xmlreader_create"></a>   
## <a name="creating-an-xml-reader"></a><span data-ttu-id="8fa94-127">创建 XML 读取器</span><span class="sxs-lookup"><span data-stu-id="8fa94-127">Creating an XML reader</span></span>  
 <span data-ttu-id="8fa94-128">使用<xref:System.Xml.XmlReader.Create%2A>方法来创建<xref:System.Xml.XmlReader>实例。</span><span class="sxs-lookup"><span data-stu-id="8fa94-128">Use the <xref:System.Xml.XmlReader.Create%2A> method to create an <xref:System.Xml.XmlReader> instance.</span></span>  
  
 <span data-ttu-id="8fa94-129">虽然.NET Framework 提供的具体实现，但<xref:System.Xml.XmlReader>类，如<xref:System.Xml.XmlTextReader>， <xref:System.Xml.XmlNodeReader>，和<xref:System.Xml.XmlValidatingReader>类，我们建议你仅在这些方案中使用的专用的类：</span><span class="sxs-lookup"><span data-stu-id="8fa94-129">Although the .NET Framework provides concrete implementations of the <xref:System.Xml.XmlReader> class, such as the <xref:System.Xml.XmlTextReader>, <xref:System.Xml.XmlNodeReader>, and the <xref:System.Xml.XmlValidatingReader> classes, we recommend that you use the specialized classes only in these scenarios:</span></span>  
  
-   <span data-ttu-id="8fa94-130">如果想要读取的 XML DOM 子树，从<xref:System.Xml.XmlNode>对象，请使用<xref:System.Xml.XmlNodeReader>类。</span><span class="sxs-lookup"><span data-stu-id="8fa94-130">When you want to read an XML DOM subtree from an <xref:System.Xml.XmlNode> object, use the <xref:System.Xml.XmlNodeReader> class.</span></span> <span data-ttu-id="8fa94-131">（但是，此类不支持 DTD 或架构验证。）</span><span class="sxs-lookup"><span data-stu-id="8fa94-131">(However, this class doesn't support DTD or schema validation.)</span></span>  
  
-   <span data-ttu-id="8fa94-132">如果必须扩展上请求的实体，你不希望你的文本内容规范化，或者你不希望默认返回属性，请使用<xref:System.Xml.XmlTextReader>类。</span><span class="sxs-lookup"><span data-stu-id="8fa94-132">If you must expand entities on request, you don't want your text content normalized, or you don't want default attributes returned, use the <xref:System.Xml.XmlTextReader> class.</span></span>  
  
 <span data-ttu-id="8fa94-133">若要指定的要在 XML 读取器上启用的功能集，请将传递<xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType>对象传递给<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-133">To specify the set of features you want to enable on the XML reader, pass an <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object to the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="8fa94-134">你可以使用单个<xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType>要使用相同的功能，创建多个读取器的对象或修改<xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType>要使用不同的功能集创建新的读取器对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-134">You can use a single <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object to create multiple readers with the same functionality, or modify the <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object to create a new reader with a different set of features.</span></span> <span data-ttu-id="8fa94-135">你可以还轻松添加到现有的读取器的功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-135">You can also easily add features to an existing reader.</span></span>  
  
 <span data-ttu-id="8fa94-136">如果不使用<xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType>对象，则使用默认设置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-136">If you don't use a <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object, default settings are used.</span></span> <span data-ttu-id="8fa94-137">请参阅<xref:System.Xml.XmlReader.Create%2A>引用页面了解详细信息。</span><span class="sxs-lookup"><span data-stu-id="8fa94-137">See the <xref:System.Xml.XmlReader.Create%2A> reference page for details.</span></span>  
  
 <span data-ttu-id="8fa94-138"><xref:System.Xml.XmlReader> 引发<xref:System.Xml.XmlException>的 XML 分析错误。</span><span class="sxs-lookup"><span data-stu-id="8fa94-138"><xref:System.Xml.XmlReader> throws an <xref:System.Xml.XmlException> on XML parse errors.</span></span> <span data-ttu-id="8fa94-139">引发异常后，读取器的状态不是可预测的。</span><span class="sxs-lookup"><span data-stu-id="8fa94-139">After an exception is thrown, the state of the reader is not predictable.</span></span> <span data-ttu-id="8fa94-140">例如，报告的节点类型可能不同于当前节点的实际节点类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-140">For example, the reported node type may be different from the actual node type of the current node.</span></span> <span data-ttu-id="8fa94-141">使用<xref:System.Xml.XmlReader.ReadState%2A>属性检查是否在读取器处于错误状态。</span><span class="sxs-lookup"><span data-stu-id="8fa94-141">Use the <xref:System.Xml.XmlReader.ReadState%2A> property to check whether the reader is in error state.</span></span>  
  
<a name="xmlreader_validate"></a>   
## <a name="validating-xml-data"></a><span data-ttu-id="8fa94-142">验证 XML 数据</span><span class="sxs-lookup"><span data-stu-id="8fa94-142">Validating XML data</span></span>  
 <span data-ttu-id="8fa94-143">若要定义的 XML 文档及其元素关系、 数据类型和内容约束的结构，你使用文档类型定义 (DTD) 或 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="8fa94-143">To define the structure of an XML document and its element relationships, data types, and content constraints, you use a document type definition (DTD) or XML Schema definition language (XSD) schema.</span></span> <span data-ttu-id="8fa94-144">XML 文档被视为是正确如果它满足定义的所有语法要求[W3C XML 1.0 建议](https://www.w3.org/TR/2006/REC-xml-20060816/)。</span><span class="sxs-lookup"><span data-stu-id="8fa94-144">An XML document is considered to be well formed if it meets all the syntactical requirements defined by the [W3C XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span> <span data-ttu-id="8fa94-145">如果它的格式正确并且也符合其 DTD 或架构定义的约束，则会被视为有效。</span><span class="sxs-lookup"><span data-stu-id="8fa94-145">It's considered valid if it's well formed and also conforms to the constraints defined by its DTD or schema.</span></span> <span data-ttu-id="8fa94-146">(请参阅[W3C XML 架构第 1 部分： 结构](https://www.w3.org/TR/xmlschema-1/)和[W3C XML 架构第 2 部分： 数据类型](https://www.w3.org/TR/xmlschema-2/)建议。)因此，虽然所有有效的 XML 文档都是格式正确的，但并不是所有格式正确的 XML 文档都是有效的。</span><span class="sxs-lookup"><span data-stu-id="8fa94-146">(See the [W3C XML Schema Part 1: Structures](https://www.w3.org/TR/xmlschema-1/) and the [W3C XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/)recommendations.) Therefore, although all valid XML documents are well formed, not all well-formed XML documents are valid.</span></span>  
  
 <span data-ttu-id="8fa94-147">你可以验证对 DTD，内联 XSD 架构的数据或 XSD 架构存储在<xref:System.Xml.Schema.XmlSchemaSet>对象 （缓存）; 这些方案如下所述上<xref:System.Xml.XmlReader.Create%2A>引用页。</span><span class="sxs-lookup"><span data-stu-id="8fa94-147">You can validate the data against a DTD, an inline XSD Schema, or an XSD Schema stored in an <xref:System.Xml.Schema.XmlSchemaSet> object (a cache); these scenarios are described on the <xref:System.Xml.XmlReader.Create%2A> reference page.</span></span> <span data-ttu-id="8fa94-148"><xref:System.Xml.XmlReader> 不支持 XML 数据简化 (XDR) 架构验证。</span><span class="sxs-lookup"><span data-stu-id="8fa94-148"><xref:System.Xml.XmlReader> doesn't support XML-Data Reduced (XDR) schema validation.</span></span>  
  
 <span data-ttu-id="8fa94-149">在使用以下设置<xref:System.Xml.XmlReaderSettings>类指定哪种类型的验证，如果有的话，<xref:System.Xml.XmlReader>实例支持。</span><span class="sxs-lookup"><span data-stu-id="8fa94-149">You use the following settings on the <xref:System.Xml.XmlReaderSettings> class to specify what type of validation, if any, the <xref:System.Xml.XmlReader> instance supports.</span></span>  
  
|<span data-ttu-id="8fa94-150">使用此<xref:System.Xml.XmlReaderSettings>成员</span><span class="sxs-lookup"><span data-stu-id="8fa94-150">Use this <xref:System.Xml.XmlReaderSettings> member</span></span>|<span data-ttu-id="8fa94-151">若要指定</span><span class="sxs-lookup"><span data-stu-id="8fa94-151">To specify</span></span>|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------|----------------|  
|<span data-ttu-id="8fa94-152"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="8fa94-152"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> property</span></span>|<span data-ttu-id="8fa94-153">是否允许 DTD 处理。</span><span class="sxs-lookup"><span data-stu-id="8fa94-153">Whether to allow DTD processing.</span></span> <span data-ttu-id="8fa94-154">默认设置为不允许 DTD 处理。</span><span class="sxs-lookup"><span data-stu-id="8fa94-154">The default is to disallow DTD processing.</span></span>|  
|<span data-ttu-id="8fa94-155"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="8fa94-155"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> property</span></span>|<span data-ttu-id="8fa94-156">读取器是否应验证数据，以及要执行 （DTD 或架构） 的验证类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-156">Whether the reader should validate data, and what type of validation to perform (DTD or schema).</span></span> <span data-ttu-id="8fa94-157">默认设置为无数据验证。</span><span class="sxs-lookup"><span data-stu-id="8fa94-157">The default is no data validation.</span></span>|  
|<span data-ttu-id="8fa94-158"><xref:System.Xml.XmlReaderSettings.ValidationEventHandler>事件</span><span class="sxs-lookup"><span data-stu-id="8fa94-158"><xref:System.Xml.XmlReaderSettings.ValidationEventHandler> event</span></span>|<span data-ttu-id="8fa94-159">事件处理程序接收有关验证事件的信息。</span><span class="sxs-lookup"><span data-stu-id="8fa94-159">An event handler for receiving information about validation events.</span></span> <span data-ttu-id="8fa94-160">如果未提供事件处理程序，在出现第一个验证错误时将引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-160">If an event handler is not provided, an <xref:System.Xml.XmlException> is thrown on the first validation error.</span></span>|  
|<span data-ttu-id="8fa94-161"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="8fa94-161"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property</span></span>|<span data-ttu-id="8fa94-162">其他验证选项通过<xref:System.Xml.Schema.XmlSchemaValidationFlags>枚举成员：</span><span class="sxs-lookup"><span data-stu-id="8fa94-162">Additional validation options through the <xref:System.Xml.Schema.XmlSchemaValidationFlags> enumeration members:</span></span><br /><br /> <span data-ttu-id="8fa94-163">-   `AllowXmlAttributes`-允许 XML 属性 (`xml:*`) 在实例文档，即使它们在架构中未定义中。</span><span class="sxs-lookup"><span data-stu-id="8fa94-163">-   `AllowXmlAttributes`-- Allow XML attributes (`xml:*`) in instance documents even when they're not defined in the schema.</span></span> <span data-ttu-id="8fa94-164">属性基于其数据类型进行验证。</span><span class="sxs-lookup"><span data-stu-id="8fa94-164">The attributes are validated based on their data type.</span></span> <span data-ttu-id="8fa94-165">请参阅<xref:System.Xml.Schema.XmlSchemaValidationFlags>设置以在特定方案中使用的引用页。</span><span class="sxs-lookup"><span data-stu-id="8fa94-165">See the <xref:System.Xml.Schema.XmlSchemaValidationFlags> reference page for  the setting to use in specific scenarios.</span></span> <span data-ttu-id="8fa94-166">（默认情况下禁用）。</span><span class="sxs-lookup"><span data-stu-id="8fa94-166">(Disabled by default.)</span></span><br /><span data-ttu-id="8fa94-167">-   `ProcessIdentityConstraints` -处理的标识约束 (`xs:ID`， `xs:IDREF`， `xs:key`， `xs:keyref`， `xs:unique`) 在验证期间遇到。</span><span class="sxs-lookup"><span data-stu-id="8fa94-167">-   `ProcessIdentityConstraints` --Process identity constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, `xs:unique`) encountered during validation.</span></span> <span data-ttu-id="8fa94-168">（默认情况下启用）。</span><span class="sxs-lookup"><span data-stu-id="8fa94-168">(Enabled by default.)</span></span><br /><span data-ttu-id="8fa94-169">-   `ProcessSchemaLocation` -处理指定的架构`xsi:schemaLocation`或`xsi:noNamespaceSchemaLocation`属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-169">-   `ProcessSchemaLocation` --Process schemas specified by the `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` attribute.</span></span> <span data-ttu-id="8fa94-170">（默认情况下启用）。</span><span class="sxs-lookup"><span data-stu-id="8fa94-170">(Enabled by default.)</span></span><br /><span data-ttu-id="8fa94-171">-   `ProcessInlineSchema`-在验证过程中处理内联 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="8fa94-171">-   `ProcessInlineSchema`-- Process inline XML Schemas during validation.</span></span> <span data-ttu-id="8fa94-172">（默认情况下禁用）。</span><span class="sxs-lookup"><span data-stu-id="8fa94-172">(Disabled by default.)</span></span><br /><span data-ttu-id="8fa94-173">-   `ReportValidationWarnings`-如果发生验证警告，则报告事件。</span><span class="sxs-lookup"><span data-stu-id="8fa94-173">-   `ReportValidationWarnings`--Report events if a validation warning occurs.</span></span> <span data-ttu-id="8fa94-174">如果没有验证特定元素或属性时所依据的 DTD 或 XML 架构，通常会发出警告。</span><span class="sxs-lookup"><span data-stu-id="8fa94-174">A warning is typically issued when there is no DTD or XML Schema to validate a particular element or attribute against.</span></span> <span data-ttu-id="8fa94-175"><xref:System.Xml.XmlReaderSettings.ValidationEventHandler> 用于通知。</span><span class="sxs-lookup"><span data-stu-id="8fa94-175">The <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> is used for notification.</span></span> <span data-ttu-id="8fa94-176">（默认情况下禁用）。</span><span class="sxs-lookup"><span data-stu-id="8fa94-176">(Disabled by default.)</span></span>|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|<span data-ttu-id="8fa94-177">用于验证的 <xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-177">The <xref:System.Xml.Schema.XmlSchemaSet> to use for validation.</span></span>|  
|<span data-ttu-id="8fa94-178"><xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="8fa94-178"><xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property</span></span>|<span data-ttu-id="8fa94-179"><xref:System.Xml.XmlResolver>解析和访问外部资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-179">The <xref:System.Xml.XmlResolver> for resolving and accessing external resources.</span></span> <span data-ttu-id="8fa94-180">这可以包括如 DTD 和架构，以及任何外部实体`xs:include`或`xs:import`XML 架构中包含的元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-180">This can include external entities such as DTD and schemas, and any `xs:include` or `xs:import` elements contained in the XML Schema.</span></span> <span data-ttu-id="8fa94-181">如果没有指定<xref:System.Xml.XmlResolver>、<xref:System.Xml.XmlReader>使用默认<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-181">If you don't specify an <xref:System.Xml.XmlResolver>, the <xref:System.Xml.XmlReader> uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span>|  
  
<a name="xmlreader_data"></a>   
## <a name="data-conformance"></a><span data-ttu-id="8fa94-182">数据一致性</span><span class="sxs-lookup"><span data-stu-id="8fa94-182">Data conformance</span></span>  
 <span data-ttu-id="8fa94-183">通过创建的 XML 读取器<xref:System.Xml.XmlReader.Create%2A>方法默认情况下满足以下的法规遵从性要求：</span><span class="sxs-lookup"><span data-stu-id="8fa94-183">XML readers that are created by the <xref:System.Xml.XmlReader.Create%2A> method meet the following compliance requirements by default:</span></span>  
  
-   <span data-ttu-id="8fa94-184">新行和属性值进行规范化根据 W3C [XML 1.0 建议](https://www.w3.org/TR/2006/REC-xml-20060816/)。</span><span class="sxs-lookup"><span data-stu-id="8fa94-184">New lines and attribute value are normalized according to the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span>  
  
-   <span data-ttu-id="8fa94-185">自动展开所有实体。</span><span class="sxs-lookup"><span data-stu-id="8fa94-185">All entities are automatically expanded.</span></span>  
  
-   <span data-ttu-id="8fa94-186">始终添加文档类型定义中声明的默认属性，即使不会验证读取器也是如此。</span><span class="sxs-lookup"><span data-stu-id="8fa94-186">Default attributes declared in the document type definition are always added even when the reader doesn't validate.</span></span>  
  
-   <span data-ttu-id="8fa94-187">允许的 XML 前缀映射到正确的 XML 命名空间 URI 的声明。</span><span class="sxs-lookup"><span data-stu-id="8fa94-187">Declaration of XML prefix mapped to the correct XML namespace URI is allowed.</span></span>  
  
-   <span data-ttu-id="8fa94-188">在一次的表示法名称`NotationType`特性声明和`NmTokens`在单个`Enumeration`属性声明各不相同。</span><span class="sxs-lookup"><span data-stu-id="8fa94-188">The notation names in a single `NotationType` attribute declaration and `NmTokens` in a single `Enumeration` attribute declaration are distinct.</span></span>  
  
 <span data-ttu-id="8fa94-189">使用这些<xref:System.Xml.XmlReaderSettings>属性以指定类型的一致性检查你想要启用：</span><span class="sxs-lookup"><span data-stu-id="8fa94-189">Use these <xref:System.Xml.XmlReaderSettings> properties to specify the type of conformance checks you want to enable:</span></span>  
  
|<span data-ttu-id="8fa94-190">使用此<xref:System.Xml.XmlReaderSettings>属性</span><span class="sxs-lookup"><span data-stu-id="8fa94-190">Use this <xref:System.Xml.XmlReaderSettings> property</span></span>|<span data-ttu-id="8fa94-191">到</span><span class="sxs-lookup"><span data-stu-id="8fa94-191">To</span></span>|<span data-ttu-id="8fa94-192">默认</span><span class="sxs-lookup"><span data-stu-id="8fa94-192">Default</span></span>|  
|-------------------------------------------------------------------------------------------------------------------------------------------------------------|--------|-------------|  
|<span data-ttu-id="8fa94-193"><xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="8fa94-193"><xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> property</span></span>|<span data-ttu-id="8fa94-194">启用或禁用的以下检查：</span><span class="sxs-lookup"><span data-stu-id="8fa94-194">Enable or disable checks for the following:</span></span><br /><br /> <span data-ttu-id="8fa94-195">-字符都是合法的 XML 字符，范围内，定义[2.2 字符](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets)W3C XML 1.0 建议的部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-195">-   Characters are within the range of legal XML characters, as defined by the [2.2 Characters](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets) section of the W3C XML 1.0 Recommendation.</span></span><br /><span data-ttu-id="8fa94-196">的按照定义所有 XML 名称都是否有效， [2.3 常见语法构造](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name)W3C XML 1.0 建议的部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-196">-   All XML names are valid, as defined by the [2.3 Common Syntactic Constructs](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) section of the W3C XML 1.0 Recommendation.</span></span><br /><br /> <span data-ttu-id="8fa94-197">当此属性设置为`true`（默认值）、<xref:System.Xml.XmlException>如果 XML 文件包含非法字符或无效的 XML 名称将引发异常 （例如，元素名称与大量开始）。</span><span class="sxs-lookup"><span data-stu-id="8fa94-197">When this property is set to `true` (default), an <xref:System.Xml.XmlException> exception is thrown if the XML file contains illegal characters or invalid XML names (for example, an element name starts with a number).</span></span>|<span data-ttu-id="8fa94-198">启用的字符和名称检查。</span><span class="sxs-lookup"><span data-stu-id="8fa94-198">Character and name checking is enabled.</span></span><br /><br /> <span data-ttu-id="8fa94-199">将 <xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> 设置为 `false` 会禁用对字符实体引用的字符检查。</span><span class="sxs-lookup"><span data-stu-id="8fa94-199">Setting <xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> to `false` turns off character checking for character entity references.</span></span> <span data-ttu-id="8fa94-200">如果读取器正在处理文本数据时，它始终会检查 XML 名称是否有效，而不考虑此设置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-200">If the reader is processing text data, it always checks that XML names are valid, regardless of this setting.</span></span> <span data-ttu-id="8fa94-201">**注意：** 存在 DTD 时，XML 1.0 建议要求文档级别的一致性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-201">**Note:**  The XML 1.0 recommendation requires document-level conformance when a DTD is present.</span></span> <span data-ttu-id="8fa94-202">因此，如果读取器配置为支持<xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>，但 XML 数据包含文档类型定义 (DTD)<xref:System.Xml.XmlException>引发。</span><span class="sxs-lookup"><span data-stu-id="8fa94-202">Therefore, if the reader is configured to support <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>, but the XML data contains a document type definition (DTD), an <xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="8fa94-203"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="8fa94-203"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> property</span></span>|<span data-ttu-id="8fa94-204">选择强制执行的一致性的级别：</span><span class="sxs-lookup"><span data-stu-id="8fa94-204">Choose the level of conformance to enforce:</span></span><br /><br /> <span data-ttu-id="8fa94-205">-   <xref:System.Xml.ConformanceLevel.Document>.</span><span class="sxs-lookup"><span data-stu-id="8fa94-205">-   <xref:System.Xml.ConformanceLevel.Document>.</span></span> <span data-ttu-id="8fa94-206">符合的规则[格式良好的 XML 1.0 文档](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed)。</span><span class="sxs-lookup"><span data-stu-id="8fa94-206">Conforms to the rules for a [well-formed XML 1.0 document](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed).</span></span><br /><span data-ttu-id="8fa94-207">-   <xref:System.Xml.ConformanceLevel.Fragment>.</span><span class="sxs-lookup"><span data-stu-id="8fa94-207">-   <xref:System.Xml.ConformanceLevel.Fragment>.</span></span> <span data-ttu-id="8fa94-208">可以使用作为格式良好的文档片段的规则符合[外部分析实体](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities)。</span><span class="sxs-lookup"><span data-stu-id="8fa94-208">Conforms to the rules for a well-formed document fragment that can be consumed as an [external parsed entity](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities).</span></span><br /><span data-ttu-id="8fa94-209">-   <xref:System.Xml.ConformanceLevel.Auto>.</span><span class="sxs-lookup"><span data-stu-id="8fa94-209">-   <xref:System.Xml.ConformanceLevel.Auto>.</span></span> <span data-ttu-id="8fa94-210">符合决定读取器的级别。</span><span class="sxs-lookup"><span data-stu-id="8fa94-210">Conforms to the level decided by the reader.</span></span><br /><br /> <span data-ttu-id="8fa94-211">如果数据不符合规则，在<xref:System.Xml.XmlException>引发异常。</span><span class="sxs-lookup"><span data-stu-id="8fa94-211">If the data isn't in conformance, an <xref:System.Xml.XmlException> exception is thrown.</span></span>|<xref:System.Xml.ConformanceLevel.Document>|  
  
<a name="xmlreader_nodes"></a>   
## <a name="navigating-through-nodes"></a><span data-ttu-id="8fa94-212">在节点中导航</span><span class="sxs-lookup"><span data-stu-id="8fa94-212">Navigating through nodes</span></span>  
 <span data-ttu-id="8fa94-213">当前节点是 XML 读取器当前定位在其的 XML 节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-213">The current node is the XML node on which the XML reader is currently positioned.</span></span> <span data-ttu-id="8fa94-214">所有<xref:System.Xml.XmlReader>方法执行与此节点和所有相关的操作<xref:System.Xml.XmlReader>属性反映当前节点的值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-214">All <xref:System.Xml.XmlReader> methods perform operations in relation to this node, and all <xref:System.Xml.XmlReader> properties reflect the value of the current node.</span></span>  
  
 <span data-ttu-id="8fa94-215">以下方法使易于导航节点和分析数据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-215">The following methods make it easy to navigate through nodes and parse data.</span></span>  
  
|<span data-ttu-id="8fa94-216">使用此<xref:System.Xml.XmlReaderSettings>方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-216">Use this <xref:System.Xml.XmlReaderSettings> method</span></span>|<span data-ttu-id="8fa94-217">到</span><span class="sxs-lookup"><span data-stu-id="8fa94-217">To</span></span>|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<xref:System.Xml.XmlReader.Read%2A>|<span data-ttu-id="8fa94-218">读取的第一个节点，并一次前进流一个节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-218">Read the first node, and advance through the stream one node at a time.</span></span> <span data-ttu-id="8fa94-219">此类调用通常都执行内部`while`循环。</span><span class="sxs-lookup"><span data-stu-id="8fa94-219">Such calls are typically performed inside a `while` loop.</span></span><br /><br /> <span data-ttu-id="8fa94-220">使用<xref:System.Xml.XmlReader.NodeType%2A>属性以获取当前节点的类型 （例如，属性、 注释、 元素和等等）。</span><span class="sxs-lookup"><span data-stu-id="8fa94-220">Use the <xref:System.Xml.XmlReader.NodeType%2A> property to get the type (for example, attribute, comment, element, and so on) of the current node.</span></span>|  
|<xref:System.Xml.XmlReader.Skip%2A>|<span data-ttu-id="8fa94-221">跳过当前节点的子级，并移到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-221">Skip the children of the current node and move to the next node.</span></span>|  
|<span data-ttu-id="8fa94-222"><xref:System.Xml.XmlReader.MoveToContent%2A> 和 <xref:System.Xml.XmlReader.MoveToContentAsync%2A></span><span class="sxs-lookup"><span data-stu-id="8fa94-222"><xref:System.Xml.XmlReader.MoveToContent%2A> and <xref:System.Xml.XmlReader.MoveToContentAsync%2A></span></span>|<span data-ttu-id="8fa94-223">跳过非内容节点并将移到下一个内容节点或文件的末尾。</span><span class="sxs-lookup"><span data-stu-id="8fa94-223">Skip non-content nodes and move to the next content node or to the end of the file.</span></span><br /><br /> <span data-ttu-id="8fa94-224">非内容节点包括<xref:System.Xml.XmlNodeType.ProcessingInstruction>， <xref:System.Xml.XmlNodeType.DocumentType>， <xref:System.Xml.XmlNodeType.Comment>， <xref:System.Xml.XmlNodeType.Whitespace>，和<xref:System.Xml.XmlNodeType.SignificantWhitespace>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-224">Non-content nodes include <xref:System.Xml.XmlNodeType.ProcessingInstruction>, <xref:System.Xml.XmlNodeType.DocumentType>, <xref:System.Xml.XmlNodeType.Comment>, <xref:System.Xml.XmlNodeType.Whitespace>, and <xref:System.Xml.XmlNodeType.SignificantWhitespace>.</span></span><br /><br /> <span data-ttu-id="8fa94-225">内容节点包含非空白文本<xref:System.Xml.XmlNodeType.CDATA>， <xref:System.Xml.XmlNodeType.EntityReference> ，和<xref:System.Xml.XmlNodeType.EndEntity>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-225">Content nodes include non-white space text, <xref:System.Xml.XmlNodeType.CDATA>, <xref:System.Xml.XmlNodeType.EntityReference> , and <xref:System.Xml.XmlNodeType.EndEntity>.</span></span>|  
|<xref:System.Xml.XmlReader.ReadSubtree%2A>|<span data-ttu-id="8fa94-226">读取元素及其所有子级，并返回一个新<xref:System.Xml.XmlReader>实例设置为<xref:System.Xml.ReadState.Initial?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-226">Read an element and all its children, and return a new <xref:System.Xml.XmlReader> instance set to <xref:System.Xml.ReadState.Initial?displayProperty=nameWithType>.</span></span><br /><br /> <span data-ttu-id="8fa94-227">此方法可用于创建在 XML 元素; 周围的边界例如，如果你想要将数据传递给另一个组件进行处理，并且你想要限制的数据量可以访问该组件。</span><span class="sxs-lookup"><span data-stu-id="8fa94-227">This method is useful for creating boundaries around XML elements; for example, if you want to pass data to another component for processing and you want to limit how much of your data the component can access.</span></span>|  
  
 <span data-ttu-id="8fa94-228">请参阅<xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType>举例说明一次在文本流的一个节点中导航和显示每个节点的类型的引用页。</span><span class="sxs-lookup"><span data-stu-id="8fa94-228">See the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> reference page for an example of navigating through a text stream one node at a time and displaying the type of each node.</span></span>  
  
 <span data-ttu-id="8fa94-229">下列各节描述了如何可以读取特定类型的数据，如元素、 属性和类型化数据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-229">The following sections describe how you can read specific types of data, such as elements, attributes, and typed data.</span></span>  
  
<a name="xmlreader_elements"></a>   
## <a name="reading-xml-elements"></a><span data-ttu-id="8fa94-230">读取 XML 元素</span><span class="sxs-lookup"><span data-stu-id="8fa94-230">Reading XML elements</span></span>  
 <span data-ttu-id="8fa94-231">下表列出的方法和属性，<xref:System.Xml.XmlReader>类提供用于处理元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-231">The following table lists the methods and properties that the <xref:System.Xml.XmlReader> class provides for processing elements.</span></span> <span data-ttu-id="8fa94-232">在 <xref:System.Xml.XmlReader> 置于某个元素上之后，节点属性（例如 <xref:System.Xml.XmlReader.Name%2A>）将反映元素的值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-232">After the <xref:System.Xml.XmlReader> is positioned on an element, the node properties, such as <xref:System.Xml.XmlReader.Name%2A>, reflect the element values.</span></span> <span data-ttu-id="8fa94-233">除了下面所述的成员之外，<xref:System.Xml.XmlReader> 类的任何常规方法和属性也可以用于处理元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-233">In addition to the members described below, any of the general methods and properties of the <xref:System.Xml.XmlReader> class can also be used to process elements.</span></span> <span data-ttu-id="8fa94-234">例如，可以使用 <xref:System.Xml.XmlReader.ReadInnerXml%2A> 方法读取元素的内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-234">For example, you can use the <xref:System.Xml.XmlReader.ReadInnerXml%2A> method to read the contents of an element.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8fa94-235">请参阅第 3.1 节的[W3C XML 1.0 建议](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-starttags)有关的开始标记的定义，结束标记和空元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-235">See section 3.1 of the [W3C XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-starttags) for definitions of start tags, end tags, and empty element tags.</span></span>  
  
|<span data-ttu-id="8fa94-236">使用此<xref:System.Xml.XmlReader>成员</span><span class="sxs-lookup"><span data-stu-id="8fa94-236">Use this <xref:System.Xml.XmlReader> member</span></span>|<span data-ttu-id="8fa94-237">到</span><span class="sxs-lookup"><span data-stu-id="8fa94-237">To</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<span data-ttu-id="8fa94-238"><xref:System.Xml.XmlReader.IsStartElement%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-238"><xref:System.Xml.XmlReader.IsStartElement%2A> method</span></span>|<span data-ttu-id="8fa94-239">检查当前节点是否是开始标记还是空元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-239">Check if the current node is a start tag or an empty element tag.</span></span>|  
|<span data-ttu-id="8fa94-240"><xref:System.Xml.XmlReader.ReadStartElement%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-240"><xref:System.Xml.XmlReader.ReadStartElement%2A> method</span></span>|<span data-ttu-id="8fa94-241">检查当前节点是元素，并使读取器前进到下一个节点 (调用<xref:System.Xml.XmlReader.IsStartElement%2A>跟<xref:System.Xml.XmlReader.Read%2A>)。</span><span class="sxs-lookup"><span data-stu-id="8fa94-241">Check that the current node is an element and advance the reader to the next node (calls <xref:System.Xml.XmlReader.IsStartElement%2A> followed by <xref:System.Xml.XmlReader.Read%2A>).</span></span>|  
|<span data-ttu-id="8fa94-242"><xref:System.Xml.XmlReader.ReadEndElement%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-242"><xref:System.Xml.XmlReader.ReadEndElement%2A> method</span></span>|<span data-ttu-id="8fa94-243">请检查当前节点为结束标记，使读取器前进到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-243">Check that the current node is an end tag and advance the reader to the next node.</span></span>|  
|<span data-ttu-id="8fa94-244"><xref:System.Xml.XmlReader.ReadElementString%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-244"><xref:System.Xml.XmlReader.ReadElementString%2A> method</span></span>|<span data-ttu-id="8fa94-245">读取纯文本元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-245">Read a text-only element.</span></span>|  
|<span data-ttu-id="8fa94-246"><xref:System.Xml.XmlReader.ReadToDescendant%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-246"><xref:System.Xml.XmlReader.ReadToDescendant%2A> method</span></span>|<span data-ttu-id="8fa94-247">使 XML 读取器前进到下一个具有指定的名称的子代 （子级） 元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-247">Advance the XML reader to the next descendant (child) element that has the specified name.</span></span>|  
|<span data-ttu-id="8fa94-248"><xref:System.Xml.XmlReader.ReadToNextSibling%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-248"><xref:System.Xml.XmlReader.ReadToNextSibling%2A> method</span></span>|<span data-ttu-id="8fa94-249">向前移动到具有指定的名称的下一个同级元素的 XML 读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-249">Advance the XML reader to the next sibling element that has the specified name.</span></span>|  
|<span data-ttu-id="8fa94-250"><xref:System.Xml.XmlReader.IsEmptyElement%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="8fa94-250"><xref:System.Xml.XmlReader.IsEmptyElement%2A> property</span></span>|<span data-ttu-id="8fa94-251">检查当前元素是否有结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-251">Check if the current element has an end element tag.</span></span> <span data-ttu-id="8fa94-252">例如:</span><span class="sxs-lookup"><span data-stu-id="8fa94-252">For example:</span></span><br /><br /> <span data-ttu-id="8fa94-253">-   `<item num="123"/>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A>是`true`。)</span><span class="sxs-lookup"><span data-stu-id="8fa94-253">-   `<item num="123"/>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A> is `true`.)</span></span><br /><span data-ttu-id="8fa94-254">-   `<item num="123"> </item>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A>是`false`，尽管该元素的内容为空。)</span><span class="sxs-lookup"><span data-stu-id="8fa94-254">-   `<item num="123"> </item>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A> is `false`, although the element's content is empty.)</span></span>|  
  
 <span data-ttu-id="8fa94-255">读取元素的文本内容的示例，请参阅<xref:System.Xml.XmlReader.ReadString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-255">For an example of reading the text content of elements, see the <xref:System.Xml.XmlReader.ReadString%2A> method.</span></span> <span data-ttu-id="8fa94-256">下面的示例通过处理元素`while`循环。</span><span class="sxs-lookup"><span data-stu-id="8fa94-256">The following example processes elements by using a `while` loop.</span></span>  
  
 [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]
 [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  
  
<a name="xmlreader_attributes"></a>   
## <a name="reading-xml-attributes"></a><span data-ttu-id="8fa94-257">读取 XML 属性</span><span class="sxs-lookup"><span data-stu-id="8fa94-257">Reading XML attributes</span></span>  
 <span data-ttu-id="8fa94-258">XML 属性最常见的元素，但它们还允许在 XML 声明和文档类型节点上。</span><span class="sxs-lookup"><span data-stu-id="8fa94-258">XML attributes are most commonly found on elements, but they're also allowed on XML declaration and document type nodes.</span></span>  
  
 <span data-ttu-id="8fa94-259">当定位在元素节点上，<xref:System.Xml.XmlReader.MoveToAttribute%2A>方法使你可以通过该元素的属性列表。</span><span class="sxs-lookup"><span data-stu-id="8fa94-259">When positioned on an element node, the <xref:System.Xml.XmlReader.MoveToAttribute%2A> method lets you go through the attribute list of the element.</span></span> <span data-ttu-id="8fa94-260">请注意，之后<xref:System.Xml.XmlReader.MoveToAttribute%2A>已调用节点属性如<xref:System.Xml.XmlReader.Name%2A>， <xref:System.Xml.XmlReader.NamespaceURI%2A>，和<xref:System.Xml.XmlReader.Prefix%2A>反映该属性的属性、 不是属性的元素的属性属于。</span><span class="sxs-lookup"><span data-stu-id="8fa94-260">Note that after <xref:System.Xml.XmlReader.MoveToAttribute%2A> has been called, node properties such as <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> reflect the properties of that attribute, not the properties of the element the attribute belongs to.</span></span>  
  
 <span data-ttu-id="8fa94-261"><xref:System.Xml.XmlReader>类提供这些方法和属性，以读取和处理的元素的属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-261">The <xref:System.Xml.XmlReader> class provides these methods and properties to read and process attributes on elements.</span></span>  
  
|<span data-ttu-id="8fa94-262">使用此<xref:System.Xml.XmlReader>成员</span><span class="sxs-lookup"><span data-stu-id="8fa94-262">Use this <xref:System.Xml.XmlReader> member</span></span>|<span data-ttu-id="8fa94-263">到</span><span class="sxs-lookup"><span data-stu-id="8fa94-263">To</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<span data-ttu-id="8fa94-264"><xref:System.Xml.XmlReader.HasAttributes%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="8fa94-264"><xref:System.Xml.XmlReader.HasAttributes%2A> property</span></span>|<span data-ttu-id="8fa94-265">检查当前节点是否有任何属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-265">Check whether the current node has any attributes.</span></span>|  
|<span data-ttu-id="8fa94-266"><xref:System.Xml.XmlReader.AttributeCount%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="8fa94-266"><xref:System.Xml.XmlReader.AttributeCount%2A> property</span></span>|<span data-ttu-id="8fa94-267">获取当前元素的属性数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-267">Get the number of attributes on the current element.</span></span>|  
|<span data-ttu-id="8fa94-268"><xref:System.Xml.XmlReader.MoveToFirstAttribute%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-268"><xref:System.Xml.XmlReader.MoveToFirstAttribute%2A> method</span></span>|<span data-ttu-id="8fa94-269">将移到元素中的第一个属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-269">Move to the first attribute in an element.</span></span>|  
|<span data-ttu-id="8fa94-270"><xref:System.Xml.XmlReader.MoveToNextAttribute%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-270"><xref:System.Xml.XmlReader.MoveToNextAttribute%2A> method</span></span>|<span data-ttu-id="8fa94-271">将移到下一个属性元素中。</span><span class="sxs-lookup"><span data-stu-id="8fa94-271">Move to the next attribute in an element.</span></span>|  
|<span data-ttu-id="8fa94-272"><xref:System.Xml.XmlReader.MoveToAttribute%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-272"><xref:System.Xml.XmlReader.MoveToAttribute%2A> method</span></span>|<span data-ttu-id="8fa94-273">将移动到指定的属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-273">Move to a specified attribute.</span></span>|  
|<span data-ttu-id="8fa94-274"><xref:System.Xml.XmlReader.GetAttribute%2A> 方法或<xref:System.Xml.XmlReader.Item%2A>属性</span><span class="sxs-lookup"><span data-stu-id="8fa94-274"><xref:System.Xml.XmlReader.GetAttribute%2A> method or <xref:System.Xml.XmlReader.Item%2A> property</span></span>|<span data-ttu-id="8fa94-275">获取指定属性的值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-275">Get the value of a specified attribute.</span></span>|  
|<span data-ttu-id="8fa94-276"><xref:System.Xml.XmlReader.IsDefault%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="8fa94-276"><xref:System.Xml.XmlReader.IsDefault%2A> property</span></span>|<span data-ttu-id="8fa94-277">检查当前节点是否是从 DTD 或架构中定义的默认值生成的属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-277">Check whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</span></span>|  
|<span data-ttu-id="8fa94-278"><xref:System.Xml.XmlReader.MoveToElement%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-278"><xref:System.Xml.XmlReader.MoveToElement%2A> method</span></span>|<span data-ttu-id="8fa94-279">将移动到拥有当前属性的元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-279">Move to the element that owns the current attribute.</span></span> <span data-ttu-id="8fa94-280">使用此方法在其属性导航后返回到该元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-280">Use this method to return to an element after navigating through its attributes.</span></span>|  
|<span data-ttu-id="8fa94-281"><xref:System.Xml.XmlReader.ReadAttributeValue%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-281"><xref:System.Xml.XmlReader.ReadAttributeValue%2A> method</span></span>|<span data-ttu-id="8fa94-282">将属性值分析为一个或多个`Text`， `EntityReference`，或`EndEntity`节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-282">Parse the attribute value into one or more `Text`, `EntityReference`, or `EndEntity` nodes.</span></span>|  
  
 <span data-ttu-id="8fa94-283">任何常规的 <xref:System.Xml.XmlReader> 方法和属性也可以用于处理属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-283">Any of the general <xref:System.Xml.XmlReader> methods and properties can also be used to process attributes.</span></span> <span data-ttu-id="8fa94-284">例如，在 <xref:System.Xml.XmlReader> 位于某个属性上之后，<xref:System.Xml.XmlReader.Name%2A> 和 <xref:System.Xml.XmlReader.Value%2A> 属性将反映该属性的值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-284">For example, after the <xref:System.Xml.XmlReader> is positioned on an attribute, the <xref:System.Xml.XmlReader.Name%2A> and <xref:System.Xml.XmlReader.Value%2A> properties reflect the values of the attribute.</span></span> <span data-ttu-id="8fa94-285">也可以使用任何内容 `Read` 方法来获取属性的值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-285">You can also use any of the content `Read` methods to get the value of the attribute.</span></span>  
  
 <span data-ttu-id="8fa94-286">此示例使用<xref:System.Xml.XmlReader.AttributeCount%2A>属性来定位在元素上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-286">This example uses the <xref:System.Xml.XmlReader.AttributeCount%2A> property to navigate through all the attributes on an element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]
 [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]  
  
 <span data-ttu-id="8fa94-287">此示例使用<xref:System.Xml.XmlReader.MoveToNextAttribute%2A>中的方法`while`循环访问的属性导航。</span><span class="sxs-lookup"><span data-stu-id="8fa94-287">This example uses the <xref:System.Xml.XmlReader.MoveToNextAttribute%2A> method in a `while` loop to navigate through the attributes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]
 [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]  
  
 <span data-ttu-id="8fa94-288">**读取 XML 声明节点上的属性**</span><span class="sxs-lookup"><span data-stu-id="8fa94-288">**Reading attributes on XML declaration nodes**</span></span>  
  
 <span data-ttu-id="8fa94-289">当 XML 读取器定位在 XML 声明节点上，<xref:System.Xml.XmlReader.Value%2A>属性返回的版本，独立和作为单个字符串的编码信息。</span><span class="sxs-lookup"><span data-stu-id="8fa94-289">When the XML reader is positioned on an XML declaration node, the <xref:System.Xml.XmlReader.Value%2A> property returns the version, standalone, and encoding information as a single string.</span></span> <span data-ttu-id="8fa94-290"><xref:System.Xml.XmlReader> 创建的对象<xref:System.Xml.XmlReader.Create%2A>方法，<xref:System.Xml.XmlTextReader>类，与<xref:System.Xml.XmlValidatingReader>类公开的版本，独立和编码的项作为属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-290"><xref:System.Xml.XmlReader> objects created by the <xref:System.Xml.XmlReader.Create%2A> method, the <xref:System.Xml.XmlTextReader> class, and the <xref:System.Xml.XmlValidatingReader> class expose the version, standalone, and encoding items as attributes.</span></span>  
  
 <span data-ttu-id="8fa94-291">**读取文档类型节点上的属性**</span><span class="sxs-lookup"><span data-stu-id="8fa94-291">**Reading attributes on document type nodes**</span></span>  
  
 <span data-ttu-id="8fa94-292">当 XML 读取器定位在文档类型节点，<xref:System.Xml.XmlReader.GetAttribute%2A>方法和<xref:System.Xml.XmlReader.Item%2A>属性可以用于返回的系统和公共文本的值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-292">When the XML reader is positioned on a document type node, the <xref:System.Xml.XmlReader.GetAttribute%2A> method and <xref:System.Xml.XmlReader.Item%2A> property can be used to return the values for the SYSTEM and PUBLIC literals.</span></span> <span data-ttu-id="8fa94-293">例如，调用 `reader.GetAttribute("PUBLIC")` 将返回 PUBLIC 值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-293">For example, calling `reader.GetAttribute("PUBLIC")` returns the PUBLIC value.</span></span>  
  
 <span data-ttu-id="8fa94-294">**读取处理指令节点上的属性**</span><span class="sxs-lookup"><span data-stu-id="8fa94-294">**Reading attributes on processing instruction nodes**</span></span>  
  
 <span data-ttu-id="8fa94-295">在 <xref:System.Xml.XmlReader> 位于某个处理指令节点上时，<xref:System.Xml.XmlReader.Value%2A> 属性将返回整个文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-295">When the <xref:System.Xml.XmlReader> is positioned on a processing instruction node, the <xref:System.Xml.XmlReader.Value%2A> property returns the entire text content.</span></span> <span data-ttu-id="8fa94-296">处理指令节点中的项目不视为属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-296">Items in the processing instruction node aren't treated as attributes.</span></span> <span data-ttu-id="8fa94-297">它们无法与读取<xref:System.Xml.XmlReader.GetAttribute%2A>或<xref:System.Xml.XmlReader.MoveToAttribute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-297">They can't be read with the <xref:System.Xml.XmlReader.GetAttribute%2A> or <xref:System.Xml.XmlReader.MoveToAttribute%2A> method.</span></span>  
  
<a name="xmlreader_content"></a>   
## <a name="reading-xml-content"></a><span data-ttu-id="8fa94-298">读取 XML 内容</span><span class="sxs-lookup"><span data-stu-id="8fa94-298">Reading XML content</span></span>  
 <span data-ttu-id="8fa94-299">XMLReader 类包括以下成员从 XML 文件中读取内容和字符串值的形式返回的内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-299">The XMLReader class includes the following members that read content from an XML file and return the content as string values.</span></span> <span data-ttu-id="8fa94-300">(若要返回 CLR 类型，请参阅[下一节](#xmlreader_clr)。)</span><span class="sxs-lookup"><span data-stu-id="8fa94-300">(To return CLR types, see the [next section](#xmlreader_clr).)</span></span>  
  
|<span data-ttu-id="8fa94-301">使用此<xref:System.Xml.XmlReader>成员</span><span class="sxs-lookup"><span data-stu-id="8fa94-301">Use this <xref:System.Xml.XmlReader> member</span></span>|<span data-ttu-id="8fa94-302">到</span><span class="sxs-lookup"><span data-stu-id="8fa94-302">To</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<span data-ttu-id="8fa94-303"><xref:System.Xml.XmlReader.Value%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="8fa94-303"><xref:System.Xml.XmlReader.Value%2A> property</span></span>|<span data-ttu-id="8fa94-304">获取当前节点的文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-304">Get the text content of the current node.</span></span> <span data-ttu-id="8fa94-305">返回的值取决于节点类型;请参阅<xref:System.Xml.XmlReader.Value%2A>引用页面了解详细信息。</span><span class="sxs-lookup"><span data-stu-id="8fa94-305">The value returned depends on the node type; see the <xref:System.Xml.XmlReader.Value%2A> reference page for details.</span></span>|  
|<span data-ttu-id="8fa94-306"><xref:System.Xml.XmlReader.ReadString%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-306"><xref:System.Xml.XmlReader.ReadString%2A> method</span></span>|<span data-ttu-id="8fa94-307">字符串形式获取的元素或文本节点的内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-307">Get the content of an element or text node as a string.</span></span> <span data-ttu-id="8fa94-308">此方法将停止处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-308">This method stops on processing instructions and comments.</span></span><br /><br /> <span data-ttu-id="8fa94-309">有关此方法如何处理特定节点类型的详细信息，请参阅<xref:System.Xml.XmlReader.ReadString%2A>引用页。</span><span class="sxs-lookup"><span data-stu-id="8fa94-309">For details on how this method handles specific node types, see the <xref:System.Xml.XmlReader.ReadString%2A> reference page.</span></span>|  
|<span data-ttu-id="8fa94-310"><xref:System.Xml.XmlReader.ReadInnerXml%2A> 和 <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-310"><xref:System.Xml.XmlReader.ReadInnerXml%2A> and <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A> methods</span></span>|<span data-ttu-id="8fa94-311">获取当前节点，包括标记，但不包括开始和结束标记的所有内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-311">Get all the content of the current node, including the markup, but excluding start and end tags.</span></span> <span data-ttu-id="8fa94-312">例如，对于：</span><span class="sxs-lookup"><span data-stu-id="8fa94-312">For example, for:</span></span><br /><br /> `<node>this<child id="123"/></node>`<br /><br /> <span data-ttu-id="8fa94-313"><xref:System.Xml.XmlReader.ReadInnerXml%2A> 返回：</span><span class="sxs-lookup"><span data-stu-id="8fa94-313"><xref:System.Xml.XmlReader.ReadInnerXml%2A> returns:</span></span><br /><br /> `this<child id="123"/>`|  
|<span data-ttu-id="8fa94-314"><xref:System.Xml.XmlReader.ReadOuterXml%2A> 和 <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-314"><xref:System.Xml.XmlReader.ReadOuterXml%2A> and <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A> methods</span></span>|<span data-ttu-id="8fa94-315">获取当前节点及其子级，包括标记和开始/结束标记的所有内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-315">Get all the content of the current node and its children, including markup and start/end tags.</span></span> <span data-ttu-id="8fa94-316">例如，对于：</span><span class="sxs-lookup"><span data-stu-id="8fa94-316">For example, for:</span></span><br /><br /> `<node>this<child id="123"/></node>`<br /><br /> <span data-ttu-id="8fa94-317"><xref:System.Xml.XmlReader.ReadOuterXml%2A> 返回：</span><span class="sxs-lookup"><span data-stu-id="8fa94-317"><xref:System.Xml.XmlReader.ReadOuterXml%2A> returns:</span></span><br /><br /> `<node>this<child id="123"/></node>`|  
  
<a name="xmlreader_clr"></a>   
## <a name="converting-to-clr-types"></a><span data-ttu-id="8fa94-318">将转换为 CLR 类型</span><span class="sxs-lookup"><span data-stu-id="8fa94-318">Converting to CLR types</span></span>  
 <span data-ttu-id="8fa94-319">你可以使用的成员<xref:System.Xml.XmlReader>（下表中列出） 的类读取 XML 数据和返回作为公共语言运行时 (CLR) 类型，而不是字符串的值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-319">You can use the members of the <xref:System.Xml.XmlReader> class (listed in the following table) to read XML data and return values as common language runtime (CLR) types instead of strings.</span></span> <span data-ttu-id="8fa94-320">这些成员，可以是最适合你的编码任务而无需手动分析或转换字符串值的表示形式获取值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-320">These members enable you to get values in the representation that is most appropriate for your coding task without having to manually parse or convert string values.</span></span>  
  
-   <span data-ttu-id="8fa94-321">**ReadElementContentAs**只能在元素节点类型上调用方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-321">The **ReadElementContentAs** methods can only be called on element node types.</span></span> <span data-ttu-id="8fa94-322">这些方法不能在包含子元素或混合内容的元素上使用。</span><span class="sxs-lookup"><span data-stu-id="8fa94-322">These methods cannot be used on elements that contain child elements or mixed content.</span></span> <span data-ttu-id="8fa94-323">在调用时，<xref:System.Xml.XmlReader> 对象读取开始标记，读取元素内容，然后移过结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-323">When called, the <xref:System.Xml.XmlReader> object reads the start tag, reads the element content, and then moves past the end element tag.</span></span> <span data-ttu-id="8fa94-324">将忽略处理指令和注释并展开实体。</span><span class="sxs-lookup"><span data-stu-id="8fa94-324">Processing instructions and comments are ignored and entities are expanded.</span></span>  
  
-   <span data-ttu-id="8fa94-325">**ReadContentAs**方法读取位于读取器当前位置的文本内容和如果 XML 数据没有任何架构或数据类型信息与之关联，将文本内容转换为所请求的返回类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-325">The **ReadContentAs** methods read the text content at the current reader position, and if the XML data doesn't have any schema or data type information associated with it, convert the text content to the requested return type.</span></span> <span data-ttu-id="8fa94-326">文本、空白、有效空白和 CDATA 节串联在一起。</span><span class="sxs-lookup"><span data-stu-id="8fa94-326">Text, white space, significant white space and CDATA sections are concatenated.</span></span> <span data-ttu-id="8fa94-327">跳过注释和处理指令，而实体引用自动解决。</span><span class="sxs-lookup"><span data-stu-id="8fa94-327">Comments and processing instructions are skipped, and entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="8fa94-328"><xref:System.Xml.XmlReader>类使用定义的规则[W3C XML 架构第 2 部分： 数据类型](https://www.w3.org/TR/xmlschema-2/)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-328">The <xref:System.Xml.XmlReader> class uses the rules defined by the [W3C XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/)recommendation.</span></span>  
  
|<span data-ttu-id="8fa94-329">使用此<xref:System.Xml.XmlReader>方法</span><span class="sxs-lookup"><span data-stu-id="8fa94-329">Use this <xref:System.Xml.XmlReader> method</span></span>|<span data-ttu-id="8fa94-330">返回此 CLR 类型</span><span class="sxs-lookup"><span data-stu-id="8fa94-330">To return this CLR type</span></span>|  
|--------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|  
|<span data-ttu-id="8fa94-331"><xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsBoolean%2A></span><span class="sxs-lookup"><span data-stu-id="8fa94-331"><xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsBoolean%2A></span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="8fa94-332"><xref:System.Xml.XmlReader.ReadContentAsDateTime%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A></span><span class="sxs-lookup"><span data-stu-id="8fa94-332"><xref:System.Xml.XmlReader.ReadContentAsDateTime%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A></span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="8fa94-333"><xref:System.Xml.XmlReader.ReadContentAsDouble%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsDouble%2A></span><span class="sxs-lookup"><span data-stu-id="8fa94-333"><xref:System.Xml.XmlReader.ReadContentAsDouble%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsDouble%2A></span></span>|<xref:System.Double>|  
|<span data-ttu-id="8fa94-334"><xref:System.Xml.XmlReader.ReadContentAsLong%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A></span><span class="sxs-lookup"><span data-stu-id="8fa94-334"><xref:System.Xml.XmlReader.ReadContentAsLong%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A></span></span>|<xref:System.Int64>|  
|<span data-ttu-id="8fa94-335"><xref:System.Xml.XmlReader.ReadContentAsInt%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsInt%2A></span><span class="sxs-lookup"><span data-stu-id="8fa94-335"><xref:System.Xml.XmlReader.ReadContentAsInt%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsInt%2A></span></span>|<xref:System.Int32>|  
|<span data-ttu-id="8fa94-336"><xref:System.Xml.XmlReader.ReadContentAsString%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsString%2A></span><span class="sxs-lookup"><span data-stu-id="8fa94-336"><xref:System.Xml.XmlReader.ReadContentAsString%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsString%2A></span></span>|<xref:System.String>|  
|<span data-ttu-id="8fa94-337"><xref:System.Xml.XmlReader.ReadContentAs%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAs%2A></span><span class="sxs-lookup"><span data-stu-id="8fa94-337"><xref:System.Xml.XmlReader.ReadContentAs%2A> and <xref:System.Xml.XmlReader.ReadElementContentAs%2A></span></span>|<span data-ttu-id="8fa94-338">使用指定的类型`returnType`参数</span><span class="sxs-lookup"><span data-stu-id="8fa94-338">The type you specify with the `returnType` parameter</span></span>|  
|<span data-ttu-id="8fa94-339"><xref:System.Xml.XmlReader.ReadContentAsObject%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A></span><span class="sxs-lookup"><span data-stu-id="8fa94-339"><xref:System.Xml.XmlReader.ReadContentAsObject%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A></span></span>|<span data-ttu-id="8fa94-340">指定的最合适类型<xref:System.Xml.XmlReader.ValueType%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-340">The most appropriate type, as specified by the <xref:System.Xml.XmlReader.ValueType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8fa94-341">请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)映射信息。</span><span class="sxs-lookup"><span data-stu-id="8fa94-341">See [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) for mapping information.</span></span>|  
  
 <span data-ttu-id="8fa94-342">如果元素不能轻松地转换为 CLR 类型由于其格式，因此，你可以使用架构映射以确保成功的转换。</span><span class="sxs-lookup"><span data-stu-id="8fa94-342">If an element can't easily be converted to a CLR type because of its format, you can use a schema mapping to ensure a successful conversion.</span></span> <span data-ttu-id="8fa94-343">下面的示例使用.xsd 文件将转换`hire-date`元素`xs:date`类型，然后使用<xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A>方法以返回元素作为<xref:System.DateTime>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-343">The following example uses an .xsd file to convert the `hire-date` element to the `xs:date` type, and then uses the <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A> method to return the element as a <xref:System.DateTime> object.</span></span>  
  
 <span data-ttu-id="8fa94-344">**输入 (hireDate.xml):**</span><span class="sxs-lookup"><span data-stu-id="8fa94-344">**Input (hireDate.xml):**</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#9](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/hireDate.xml#9)]  
  
 <span data-ttu-id="8fa94-345">**架构 (hireDate.xsd):**</span><span class="sxs-lookup"><span data-stu-id="8fa94-345">**Schema (hireDate.xsd):**</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#10](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/hireDate.xsd#10)]  
  
 <span data-ttu-id="8fa94-346">**代码：**</span><span class="sxs-lookup"><span data-stu-id="8fa94-346">**Code:**</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#13](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#13)]
 [!code-vb[XmlReader.ReadElementContentAs#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#13)]  
  
 <span data-ttu-id="8fa94-347">**输出：**</span><span class="sxs-lookup"><span data-stu-id="8fa94-347">**Output:**</span></span>  
  
```  
Six Month Review Date:  7/8/2003 12:00:00 AM  
```  
  
<a name="xmlreader_async"></a>   
## <a name="asynchronous-programming"></a><span data-ttu-id="8fa94-348">异步编程</span><span class="sxs-lookup"><span data-stu-id="8fa94-348">Asynchronous programming</span></span>  
 <span data-ttu-id="8fa94-349">大部分<xref:System.Xml.XmlReader>方法都具有有它们的方法名称末尾的"Async"的异步对应项。</span><span class="sxs-lookup"><span data-stu-id="8fa94-349">Most of the <xref:System.Xml.XmlReader> methods have asynchronous counterparts that have "Async" at the end of their method names.</span></span> <span data-ttu-id="8fa94-350">例如，异步等效于<xref:System.Xml.XmlReader.ReadContentAsObject%2A>是<xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-350">For example, the asynchronous equivalent of <xref:System.Xml.XmlReader.ReadContentAsObject%2A> is <xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>.</span></span>  
  
 <span data-ttu-id="8fa94-351">使用异步方法调用，可以使用以下方法：</span><span class="sxs-lookup"><span data-stu-id="8fa94-351">The following methods can be used with asynchronous method calls:</span></span>  
  
-   <xref:System.Xml.XmlReader.GetAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToFirstAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToNextAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToElement%2A>  
  
-   <xref:System.Xml.XmlReader.ReadAttributeValue%2A>  
  
-   <xref:System.Xml.XmlReader.ReadSubtree%2A>  
  
-   <xref:System.Xml.XmlReader.ResolveEntity%2A>  
  
 <span data-ttu-id="8fa94-352">以下各节描述了不具有异步对应的方法的用法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-352">The following sections describe asynchronous usage for methods that don't have asynchronous counterparts.</span></span>  
  
 <span data-ttu-id="8fa94-353">**ReadStartElement 方法**</span><span class="sxs-lookup"><span data-stu-id="8fa94-353">**ReadStartElement method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#1)]
 [!code-vb[System.Xml.XmlReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#1)]  
  
 <span data-ttu-id="8fa94-354">**ReadEndElement 方法**</span><span class="sxs-lookup"><span data-stu-id="8fa94-354">**ReadEndElement method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#2)]
 [!code-vb[System.Xml.XmlReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#2)]  
  
 <span data-ttu-id="8fa94-355">**ReadToNextSibling 方法**</span><span class="sxs-lookup"><span data-stu-id="8fa94-355">**ReadToNextSibling method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#3)]
 [!code-vb[System.Xml.XmlReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#3)]  
  
 <span data-ttu-id="8fa94-356">**ReadToFollowing 方法**</span><span class="sxs-lookup"><span data-stu-id="8fa94-356">**ReadToFollowing method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#4)]
 [!code-vb[System.Xml.XmlReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#4)]  
  
 <span data-ttu-id="8fa94-357">**ReadToDescendant 方法**</span><span class="sxs-lookup"><span data-stu-id="8fa94-357">**ReadToDescendant method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#5)]
 [!code-vb[System.Xml.XmlReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#5)]  
  
<a name="xmlreader_security"></a>   
## <a name="security-considerations"></a><span data-ttu-id="8fa94-358">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="8fa94-358">Security considerations</span></span>  
 <span data-ttu-id="8fa94-359">使用时，请考虑以下<xref:System.Xml.XmlReader>类：</span><span class="sxs-lookup"><span data-stu-id="8fa94-359">Consider the following when working with the <xref:System.Xml.XmlReader> class:</span></span>  
  
-   <span data-ttu-id="8fa94-360">从引发的异常<xref:System.Xml.XmlReader>可能会泄露冒泡到你的应用程序可能不想的路径信息。</span><span class="sxs-lookup"><span data-stu-id="8fa94-360">Exceptions thrown from the <xref:System.Xml.XmlReader> can disclose path information that you might not want bubbled up to your app.</span></span> <span data-ttu-id="8fa94-361">你的应用必须捕获异常并进行相应的处理。</span><span class="sxs-lookup"><span data-stu-id="8fa94-361">Your app must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="8fa94-362">不要启用 DTD 处理，如果你担心拒绝服务问题或正在处理不可信的源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-362">Do not enable DTD processing if you're concerned about denial of service issues or if you're dealing with untrusted sources.</span></span> <span data-ttu-id="8fa94-363">对于默认禁用 DTD 处理<xref:System.Xml.XmlReader>创建的对象<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-363">DTD processing is disabled by default for <xref:System.Xml.XmlReader> objects created by the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
     <span data-ttu-id="8fa94-364">如果启用了 DTD 处理，可以使用 <xref:System.Xml.XmlSecureResolver> 限制 <xref:System.Xml.XmlReader> 可以访问的资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-364">If you have DTD processing enabled, you can use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlReader> can access.</span></span> <span data-ttu-id="8fa94-365">你还可以设计您的应用程序，以使 XML 处理受内存和时间的约束。</span><span class="sxs-lookup"><span data-stu-id="8fa94-365">You can also design your app so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="8fa94-366">例如，你可以在 ASP.NET 应用程序中配置超时限制。</span><span class="sxs-lookup"><span data-stu-id="8fa94-366">For example, you can configure time-out limits in your ASP.NET app.</span></span>  
  
-   <span data-ttu-id="8fa94-367">XML 数据可以包含对外部资源（例如架构文件）的引用。</span><span class="sxs-lookup"><span data-stu-id="8fa94-367">XML data can include references to external resources such as a schema file.</span></span> <span data-ttu-id="8fa94-368">默认情况下，通过使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据的对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-368">By default, external resources are resolved by using an <xref:System.Xml.XmlUrlResolver> object with no user credentials.</span></span> <span data-ttu-id="8fa94-369">通过执行下列操作之一，可以使此操作更加安全：</span><span class="sxs-lookup"><span data-stu-id="8fa94-369">You can secure this further by doing one of the following:</span></span>  
  
    -   <span data-ttu-id="8fa94-370">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-370">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
    -   <span data-ttu-id="8fa94-371">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-371">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to `null`.</span></span>  
  
-   <span data-ttu-id="8fa94-372"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>和<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>验证标志<xref:System.Xml.XmlReaderSettings>对象不默认设置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-372">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.XmlReaderSettings> object aren't set by default.</span></span> <span data-ttu-id="8fa94-373">这样，在处理来自不可信的源的 XML 数据时，可以帮助防止 <xref:System.Xml.XmlReader> 受到基于架构的攻击。</span><span class="sxs-lookup"><span data-stu-id="8fa94-373">This helps to protect the <xref:System.Xml.XmlReader> against schema-based attacks when it is processing XML data from an untrusted source.</span></span> <span data-ttu-id="8fa94-374">设置了这些标志后，<xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象的 <xref:System.Xml.XmlReaderSettings> 用于在 <xref:System.Xml.XmlReader> 中解析实例文档中遇到的架构位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-374">When these flags are set, the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> of the <xref:System.Xml.XmlReaderSettings> object is used to resolve schema locations encountered in the instance document in the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="8fa94-375">如果<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>属性设置为`null`，架构位置不解析即使<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>和<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>设置验证标志。</span><span class="sxs-lookup"><span data-stu-id="8fa94-375">If the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property is set to `null`, schema locations aren't resolved even if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags are set.</span></span>  
  
     <span data-ttu-id="8fa94-376">在验证过程中添加的架构会添加新类型，并且可能更改被验证的文档的验证结果。</span><span class="sxs-lookup"><span data-stu-id="8fa94-376">Schemas added during validation add new types and can change the validation outcome of the document being validated.</span></span> <span data-ttu-id="8fa94-377">因此，只应从可信的源解析外部架构。</span><span class="sxs-lookup"><span data-stu-id="8fa94-377">As a result, external schemas should only be resolved from trusted sources.</span></span>  
  
     <span data-ttu-id="8fa94-378">我们建议禁用<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>标志时验证高可用性方案中，针对文档的大部分内容都有标识约束的架构中的不可信的大型 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="8fa94-378">We recommend disabling the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flag when validating untrusted, large XML documents in high availability scenarios against a schema that has identity constraints over a large part of the document.</span></span> <span data-ttu-id="8fa94-379">默认情况下启用此标志。</span><span class="sxs-lookup"><span data-stu-id="8fa94-379">This flag is enabled by default.</span></span>  
  
-   <span data-ttu-id="8fa94-380">XML 数据可以包含大量属性、命名空间声明、嵌套元素等，需要大量的时间来处理。</span><span class="sxs-lookup"><span data-stu-id="8fa94-380">XML data can contain a large number of attributes, namespace declarations, nested elements and so on that require a substantial amount of time to process.</span></span> <span data-ttu-id="8fa94-381">将发送到的输入的大小限制<xref:System.Xml.XmlReader>，你可以：</span><span class="sxs-lookup"><span data-stu-id="8fa94-381">To limit the size of the input that is sent to the <xref:System.Xml.XmlReader>, you can:</span></span>  
  
    -   <span data-ttu-id="8fa94-382">通过设置限制的文档大小<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-382">Limit the size of the document by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> property.</span></span>  
  
    -   <span data-ttu-id="8fa94-383">通过设置扩展实体产生的字符数限制<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-383">Limit the number of characters that result from expanding entities by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> property.</span></span>  
  
    -   <span data-ttu-id="8fa94-384">创建自定义`IStream`实现<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-384">Create a custom `IStream` implementation for the <xref:System.Xml.XmlReader>.</span></span>  
  
-   <span data-ttu-id="8fa94-385"><xref:System.Xml.XmlReader.ReadValueChunk%2A>方法可以用于处理大型数据流。</span><span class="sxs-lookup"><span data-stu-id="8fa94-385">The <xref:System.Xml.XmlReader.ReadValueChunk%2A> method can be used to handle large streams of data.</span></span> <span data-ttu-id="8fa94-386">此方法一次读取少量的字符，而不是为整个值分配单个字符串。</span><span class="sxs-lookup"><span data-stu-id="8fa94-386">This method reads a small number of characters at a time instead of allocating a single string for the whole value.</span></span>  
  
-   <span data-ttu-id="8fa94-387">在读取 XML 文档具有大量唯一的本地名称、 命名空间或前缀时，可能出现的问题。</span><span class="sxs-lookup"><span data-stu-id="8fa94-387">When reading an XML document with a large number of unique local names, namespaces, or prefixes, a problem can occur.</span></span> <span data-ttu-id="8fa94-388">如果你使用的派生自的类<xref:System.Xml.XmlReader>，并且你调用<xref:System.Xml.XmlReader.LocalName%2A>， <xref:System.Xml.XmlReader.Prefix%2A>，或<xref:System.Xml.XmlReader.NamespaceURI%2A>每个项的属性，则返回的字符串添加到<xref:System.Xml.NameTable>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-388">If you are using a class that derives from <xref:System.Xml.XmlReader>, and you call the <xref:System.Xml.XmlReader.LocalName%2A>, <xref:System.Xml.XmlReader.Prefix%2A>, or <xref:System.Xml.XmlReader.NamespaceURI%2A> property for each item, the returned string is added to a <xref:System.Xml.NameTable>.</span></span> <span data-ttu-id="8fa94-389">包含的集合<xref:System.Xml.NameTable>的大小，创建字符串句柄的虚拟内存泄漏绝不会减小。</span><span class="sxs-lookup"><span data-stu-id="8fa94-389">The collection held by the <xref:System.Xml.NameTable> never decreases in size, creating a virtual memory leak of the string handles.</span></span> <span data-ttu-id="8fa94-390">有关这一种解决方法是派生自<xref:System.Xml.NameTable>类，并强制实施最大大小配额。</span><span class="sxs-lookup"><span data-stu-id="8fa94-390">One mitigation for this is to derive from the <xref:System.Xml.NameTable> class and enforce a maximum size quota.</span></span> <span data-ttu-id="8fa94-391">(没有方法以防止使用<xref:System.Xml.NameTable>，或切换<xref:System.Xml.NameTable>已满时)。</span><span class="sxs-lookup"><span data-stu-id="8fa94-391">(There is no way to prevent the use of a <xref:System.Xml.NameTable>, or to switch the <xref:System.Xml.NameTable> when it is full).</span></span> <span data-ttu-id="8fa94-392">另一种缓解是避免使用所提到的属性，并改为使用<xref:System.Xml.XmlReader.MoveToAttribute%2A>方法替换<xref:System.Xml.XmlReader.IsStartElement%2A>方法尽可能; 这些方法不返回的字符串，并因此避免过度填充问题<xref:System.Xml.NameTable>集合。</span><span class="sxs-lookup"><span data-stu-id="8fa94-392">Another mitigation is to avoid using the properties mentioned and instead use the <xref:System.Xml.XmlReader.MoveToAttribute%2A> method with the <xref:System.Xml.XmlReader.IsStartElement%2A> method where possible; those methods don't return strings and thus avoid the problem of overfilling the <xref:System.Xml.NameTable> collection.</span></span>  
  
-   <span data-ttu-id="8fa94-393"><xref:System.Xml.XmlReaderSettings> 对象可以包含敏感信息，例如用户凭据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-393"><xref:System.Xml.XmlReaderSettings> objects can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="8fa94-394">不可信的组件可能会使用 <xref:System.Xml.XmlReaderSettings> 对象及其用户凭据来创建 <xref:System.Xml.XmlReader> 对象，以读取数据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-394">An untrusted component could use the <xref:System.Xml.XmlReaderSettings> object and its user credentials to create <xref:System.Xml.XmlReader> objects to read data.</span></span> <span data-ttu-id="8fa94-395">缓存时要小心<xref:System.Xml.XmlReaderSettings>对象，或传递时<xref:System.Xml.XmlReaderSettings>到另一个组件中的对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-395">Be careful when caching <xref:System.Xml.XmlReaderSettings> objects, or when passing the <xref:System.Xml.XmlReaderSettings> object from one component to another.</span></span>  
  
-   <span data-ttu-id="8fa94-396">不接受来自不可信的源的支持组件，例如 <xref:System.Xml.NameTable>、<xref:System.Xml.XmlNamespaceManager> 和 <xref:System.Xml.XmlResolver> 对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-396">Do not accept supporting components, such as <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager>, and <xref:System.Xml.XmlResolver> objects, from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-397">下面的代码示例演示如何使用异步 API 来分析 XML。</span><span class="sxs-lookup"><span data-stu-id="8fa94-397">The following example code shows how to use the asynchronous API to parse XML.</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#6)]
 [!code-vb[System.Xml.XmlReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-398">初始化 <see langword="XmlReader" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-398">Initializes a new instance of the <see langword="XmlReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-399">派生的类构造函数来初始化此类型中的状态将调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-399">This constructor is called by derived class constructors to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public abstract int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-400">当在派生类中被重写时，获取当前节点上的属性数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-400">When overridden in a derived class, gets the number of attributes on the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-401">当前节点上的属性数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-401">The number of attributes on the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-402">此属性是与相关`Element`，`DocumentType`和`XmlDeclaration`仅限节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-402">This property is relevant to `Element`, `DocumentType` and `XmlDeclaration` nodes only.</span></span> <span data-ttu-id="8fa94-403">（其他节点类型不具有属性。）</span><span class="sxs-lookup"><span data-stu-id="8fa94-403">(Other node types do not have attributes.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-404">下面的示例显示了当前节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-404">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]
 [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-405">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-405">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-406">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-406">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public abstract string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-407">当在派生类中被重写时，获取当前节点的基 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-407">When overridden in a derived class, gets the base URI of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-408">当前节点的基 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-408">The base URI of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-409">联网的 XML 文档的聚合使用各种 W3C 标准包含机制的数据块组成，因此包含来自不同位置的节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-409">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="8fa94-410">DTD 实体是该示例，但这并不限于 Dtd。</span><span class="sxs-lookup"><span data-stu-id="8fa94-410">DTD entities are an example of this, but this is not limited to DTDs.</span></span> <span data-ttu-id="8fa94-411">基 URI 将指示你这些节点来自何处。</span><span class="sxs-lookup"><span data-stu-id="8fa94-411">The base URI tells you where these nodes came from.</span></span> <span data-ttu-id="8fa94-412">如果没有要返回的节点没有基 URI （例如，它们已分析从内存中字符串），`String.Empty`返回。</span><span class="sxs-lookup"><span data-stu-id="8fa94-412">If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), `String.Empty` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-413">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-413">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-414">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-414">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public virtual bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-415">获取一个值，该值指示 <see cref="T:System.Xml.XmlReader" /> 是否实现二进制内容读取方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-415">Gets a value indicating whether the <see cref="T:System.Xml.XmlReader" /> implements the binary content read methods.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-416">如果实现了二进制内容读取方法，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-416">
              <see langword="true" /> if the binary content read methods are implemented; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-417">二进制内容读取方法包括<xref:System.Xml.XmlReader.ReadContentAsBase64%2A>， <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>， <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>，和<xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-417">The binary content read methods include the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A> methods.</span></span> <span data-ttu-id="8fa94-418">如果此属性返回`false`<xref:System.NotSupportedException>将返回在任何二进制文件读取时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-418">If this property returns `false` a <xref:System.NotSupportedException> is returned when any of the binary read methods is called.</span></span>  
  
 <span data-ttu-id="8fa94-419">所有 Microsoft.NET Framework 实现<xref:System.Xml.XmlReader>类返回`true`此属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-419">All Microsoft .NET Framework implementations of the <xref:System.Xml.XmlReader> class return `true` for this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-420">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-420">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-421">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-421">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadValueChunk">
      <MemberSignature Language="C#" Value="public virtual bool CanReadValueChunk { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadValueChunk" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.CanReadValueChunk" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReadValueChunk As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadValueChunk { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadValueChunk : bool" Usage="System.Xml.XmlReader.CanReadValueChunk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-422">获取一个值，该值指示 <see cref="T:System.Xml.XmlReader" /> 是否实现 <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-422">Gets a value indicating whether the <see cref="T:System.Xml.XmlReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-423">如果 <see cref="T:System.Xml.XmlReader" /> 实现 <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> 方法，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-423">
              <see langword="true" /> if the <see cref="T:System.Xml.XmlReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-424">文本分析<xref:System.Xml.XmlReader>从静态创建的对象<xref:System.Xml.XmlReader.Create%2A>方法始终返回`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-424">Text parsing <xref:System.Xml.XmlReader> objects that were created from the static <xref:System.Xml.XmlReader.Create%2A> method always return `true`.</span></span> <span data-ttu-id="8fa94-425">所有其他 Microsoft.NET Framework 实现<xref:System.Xml.XmlReader>类，其中包括<xref:System.Xml.XmlTextReader>类，则返回`false`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-425">All other Microsoft .NET Framework implementations of the <xref:System.Xml.XmlReader> class, including the <xref:System.Xml.XmlTextReader> class, return `false`.</span></span>  
  
 <span data-ttu-id="8fa94-426">如果此属性返回`false`<xref:System.NotSupportedException>时返回<xref:System.Xml.XmlReader.ReadValueChunk%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-426">If this property returns `false` a <xref:System.NotSupportedException> is returned when the <xref:System.Xml.XmlReader.ReadValueChunk%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-427">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-427">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-428">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-428">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public virtual bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-429">获取一个值，该值指示此读取器是否可以分析和解析实体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-429">Gets a value indicating whether this reader can parse and resolve entities.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-430">如果此读取器可以分析和解析实体，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-430">
              <see langword="true" /> if the reader can parse and resolve entities; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-431">此属性始终返回`false`为的实现<xref:System.Xml.XmlReader>不支持 DTD 信息。</span><span class="sxs-lookup"><span data-stu-id="8fa94-431">This property always returns `false` for implementations of <xref:System.Xml.XmlReader> that do not support DTD information.</span></span> <span data-ttu-id="8fa94-432">在这种情况下，调用<xref:System.Xml.XmlReader.ResolveEntity%2A>引发异常。</span><span class="sxs-lookup"><span data-stu-id="8fa94-432">In this case, calling <xref:System.Xml.XmlReader.ResolveEntity%2A> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-433">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-433">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-434">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-434">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="xmlReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-435">当在派生类中被重写时，将 <see cref="P:System.Xml.XmlReader.ReadState" /> 更改为 <see cref="F:System.Xml.ReadState.Closed" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-435">When overridden in a derived class, changes the <see cref="P:System.Xml.XmlReader.ReadState" /> to <see cref="F:System.Xml.ReadState.Closed" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-436">此方法也会释放读取过程中占用的任何资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-436">This method also releases any resources held during reading.</span></span> <span data-ttu-id="8fa94-437">如果<xref:System.Xml.XmlReader.Close%2A>已被调用，不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="8fa94-437">If <xref:System.Xml.XmlReader.Close%2A> has already been called, no action is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-438">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-438">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-439">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-439">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-440">创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-440">Creates a new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-441">大部分<xref:System.Xml.XmlReader.Create%2A>重载包括`settings`接受参数<xref:System.Xml.XmlReaderSettings>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-441">Most of the <xref:System.Xml.XmlReader.Create%2A> overloads include a `settings` parameter that accepts an <xref:System.Xml.XmlReaderSettings> object.</span></span> <span data-ttu-id="8fa94-442">你可以使用为此对象：</span><span class="sxs-lookup"><span data-stu-id="8fa94-442">You can use this object to:</span></span>  
  
-   <span data-ttu-id="8fa94-443">指定你希望在上受支持的功能<xref:System.Xml.XmlReader>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-443">Specify which features you want supported on the <xref:System.Xml.XmlReader> object.</span></span>  
  
-   <span data-ttu-id="8fa94-444">重用<xref:System.Xml.XmlReaderSettings>对象以创建多个读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-444">Reuse the <xref:System.Xml.XmlReaderSettings> object to create multiple readers.</span></span> <span data-ttu-id="8fa94-445">可以使用相同的设置创建多个具有相同功能的读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-445">You can use the same settings to create multiple readers with the same functionality.</span></span> <span data-ttu-id="8fa94-446">或者，你可以在修改设置<xref:System.Xml.XmlReaderSettings>实例，并使用不同的功能集创建新的读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-446">Or, you can modify the settings on an <xref:System.Xml.XmlReaderSettings> instance and create a new reader with a different set of features.</span></span>  
  
-   <span data-ttu-id="8fa94-447">将功能添加到现有的 XML 读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-447">Add features to an existing XML reader.</span></span> <span data-ttu-id="8fa94-448"><xref:System.Xml.XmlReader.Create%2A> 方法可以接受其他 <xref:System.Xml.XmlReader> 对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-448">The <xref:System.Xml.XmlReader.Create%2A> method can accept another <xref:System.Xml.XmlReader> object.</span></span> <span data-ttu-id="8fa94-449">基础<xref:System.Xml.XmlReader>对象可以是用户定义的读取器<xref:System.Xml.XmlTextReader>对象，或另一个<xref:System.Xml.XmlReader>你想要添加到的其他功能的实例。</span><span class="sxs-lookup"><span data-stu-id="8fa94-449">The underlying <xref:System.Xml.XmlReader> object can be a user-defined reader, a <xref:System.Xml.XmlTextReader> object, or another <xref:System.Xml.XmlReader> instance that you want to add additional features to.</span></span>  
  
-   <span data-ttu-id="8fa94-450">充分利用功能，例如更好的一致性检查和法规遵从性到[XML 1.0 （第四个版本）](https://www.w3.org/TR/2006/REC-xml-20060816/)仅在可用的建议<xref:System.Xml.XmlReader>创建的静态对象<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-450">Take full advantage of features such as better conformance checking and compliance to the [XML 1.0 (fourth edition)](https://www.w3.org/TR/2006/REC-xml-20060816/)recommendation that are available only on <xref:System.Xml.XmlReader> objects created by the static <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8fa94-451">尽管.NET Framework 包括的具体实现<xref:System.Xml.XmlReader>类，如<xref:System.Xml.XmlTextReader>， <xref:System.Xml.XmlNodeReader>，和<xref:System.Xml.XmlValidatingReader>类，我们建议你创建<xref:System.Xml.XmlReader>实例使用<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-451">Although the .NET Framework includes concrete implementations of the <xref:System.Xml.XmlReader> class, such as the <xref:System.Xml.XmlTextReader>, <xref:System.Xml.XmlNodeReader>, and the <xref:System.Xml.XmlValidatingReader> classes, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
## <a name="default-settings"></a><span data-ttu-id="8fa94-452">默认设置</span><span class="sxs-lookup"><span data-stu-id="8fa94-452">Default settings</span></span>  
 <span data-ttu-id="8fa94-453">如果你使用<xref:System.Xml.XmlReader.Create%2A>不接受的重载<xref:System.Xml.XmlReaderSettings>对象，将使用以下默认读取器设置：</span><span class="sxs-lookup"><span data-stu-id="8fa94-453">If you use a <xref:System.Xml.XmlReader.Create%2A> overload that doesn't accept a <xref:System.Xml.XmlReaderSettings> object, the following default reader settings are used:</span></span>  
  
|<span data-ttu-id="8fa94-454">设置</span><span class="sxs-lookup"><span data-stu-id="8fa94-454">Setting</span></span>|<span data-ttu-id="8fa94-455">默认</span><span class="sxs-lookup"><span data-stu-id="8fa94-455">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|<span data-ttu-id="8fa94-456">0</span><span class="sxs-lookup"><span data-stu-id="8fa94-456">0</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|<span data-ttu-id="8fa94-457">0</span><span class="sxs-lookup"><span data-stu-id="8fa94-457">0</span></span>|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`|  
|<xref:System.Xml.XmlReaderSettings.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|<span data-ttu-id="8fa94-458">空的 <xref:System.Xml.Schema.XmlSchemaSet> 对象</span><span class="sxs-lookup"><span data-stu-id="8fa94-458">An empty <xref:System.Xml.Schema.XmlSchemaSet> object</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<span data-ttu-id="8fa94-459"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> 启用</span><span class="sxs-lookup"><span data-stu-id="8fa94-459"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> enabled</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|<span data-ttu-id="8fa94-460">一个新 <xref:System.Xml.XmlUrlResolver> 对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-460">A new <xref:System.Xml.XmlUrlResolver> object.</span></span>  <span data-ttu-id="8fa94-461">从.NET Framework 4.5.2 开始，此设置不会产生的默认值为`null`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-461">Starting with the .NET Framework 4.5.2, this setting has a default value of `null`.</span></span>|  
  
## <a name="settings-for-common-scenarios"></a><span data-ttu-id="8fa94-462">有关常见方案的设置</span><span class="sxs-lookup"><span data-stu-id="8fa94-462">Settings for common scenarios</span></span>  
 <span data-ttu-id="8fa94-463">以下是<xref:System.Xml.XmlReaderSettings>属性应设置为一些典型的 XML 读取器方案。</span><span class="sxs-lookup"><span data-stu-id="8fa94-463">Here are the <xref:System.Xml.XmlReaderSettings> properties you should set for some of the typical XML reader scenarios.</span></span>  
  
|<span data-ttu-id="8fa94-464">需求</span><span class="sxs-lookup"><span data-stu-id="8fa94-464">Requirement</span></span>|<span data-ttu-id="8fa94-465">Set</span><span class="sxs-lookup"><span data-stu-id="8fa94-465">Set</span></span>|  
|-----------------|---------|  
|<span data-ttu-id="8fa94-466">数据必须是格式良好的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="8fa94-466">Data must be a well-formed XML document.</span></span>|<span data-ttu-id="8fa94-467"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> 到<xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-467"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> to <xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<span data-ttu-id="8fa94-468">数据必须是格式正确的 XML 分析实体。</span><span class="sxs-lookup"><span data-stu-id="8fa94-468">Data must be a well-formed XML parsed entity.</span></span>|<span data-ttu-id="8fa94-469"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> 到<xref:System.Xml.ConformanceLevel.Fragment>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-469"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> to <xref:System.Xml.ConformanceLevel.Fragment>.</span></span>|  
|<span data-ttu-id="8fa94-470">必须对 DTD 验证数据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-470">Data must be validated against a DTD.</span></span>|<span data-ttu-id="8fa94-471"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> 至 <xref:System.Xml.DtdProcessing.Parse></span><span class="sxs-lookup"><span data-stu-id="8fa94-471"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> to <xref:System.Xml.DtdProcessing.Parse></span></span><br /><span data-ttu-id="8fa94-472"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> 到<xref:System.Xml.ValidationType.DTD>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-472"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.DTD>.</span></span>|  
|<span data-ttu-id="8fa94-473">必须针对 XML 架构验证数据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-473">Data must be validated against an XML schema.</span></span>|<span data-ttu-id="8fa94-474"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> 至 <xref:System.Xml.ValidationType.Schema></span><span class="sxs-lookup"><span data-stu-id="8fa94-474"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.Schema></span></span><br /><span data-ttu-id="8fa94-475"><xref:System.Xml.XmlReaderSettings.Schemas%2A> 到<xref:System.Xml.Schema.XmlSchemaSet>用于进行验证。</span><span class="sxs-lookup"><span data-stu-id="8fa94-475"><xref:System.Xml.XmlReaderSettings.Schemas%2A> to the <xref:System.Xml.Schema.XmlSchemaSet> to use for validation.</span></span> <span data-ttu-id="8fa94-476">请注意，<xref:System.Xml.XmlReader>不支持 XML 数据简化 (XDR) 架构验证。</span><span class="sxs-lookup"><span data-stu-id="8fa94-476">Note that <xref:System.Xml.XmlReader> doesn't support XML-Data Reduced (XDR) schema validation.</span></span>|  
|<span data-ttu-id="8fa94-477">必须针对内联 XML 架构验证数据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-477">Data must be validated against an inline XML schema.</span></span>|<span data-ttu-id="8fa94-478"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> 至 <xref:System.Xml.ValidationType.Schema></span><span class="sxs-lookup"><span data-stu-id="8fa94-478"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.Schema></span></span><br /><span data-ttu-id="8fa94-479"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> 到<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-479"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> to <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>.</span></span>|  
|<span data-ttu-id="8fa94-480">类型支持。</span><span class="sxs-lookup"><span data-stu-id="8fa94-480">Type support.</span></span>|<span data-ttu-id="8fa94-481"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> 至 <xref:System.Xml.ValidationType.Schema></span><span class="sxs-lookup"><span data-stu-id="8fa94-481"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.Schema></span></span><br /><span data-ttu-id="8fa94-482"><xref:System.Xml.XmlReaderSettings.Schemas%2A> 到<xref:System.Xml.Schema.XmlSchemaSet>使用。</span><span class="sxs-lookup"><span data-stu-id="8fa94-482"><xref:System.Xml.XmlReaderSettings.Schemas%2A> to the <xref:System.Xml.Schema.XmlSchemaSet> to use.</span></span>|  
  
 <span data-ttu-id="8fa94-483"><xref:System.Xml.XmlReader> 不支持 XML 数据简化 (XDR) 架构验证。</span><span class="sxs-lookup"><span data-stu-id="8fa94-483"><xref:System.Xml.XmlReader> doesn't support XML-Data Reduced (XDR) schema validation.</span></span>  
  
## <a name="asynchronous-programming"></a><span data-ttu-id="8fa94-484">异步编程</span><span class="sxs-lookup"><span data-stu-id="8fa94-484">Asynchronous programming</span></span>  
 <span data-ttu-id="8fa94-485">在同步模式下，<xref:System.Xml.XmlReader.Create%2A>方法从文件、 流或文本读取器的缓冲区中读取第一个区块的数据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-485">In synchronous mode, the <xref:System.Xml.XmlReader.Create%2A> method reads the first chunk of data from the buffer of the file, stream, or text reader.</span></span> <span data-ttu-id="8fa94-486">如果某个 I/O 操作失败，这可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="8fa94-486">This may throw an exception if an I/O operation fails.</span></span> <span data-ttu-id="8fa94-487">在异步模式下，第一次的 I/O 操作会出现一个读取操作，因此读取的操作发生时，将引发产生异常。</span><span class="sxs-lookup"><span data-stu-id="8fa94-487">In asynchronous mode, the first I/O operation occurs with a read operation, so exceptions that arise will be thrown when the read operation occurs.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="8fa94-488">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="8fa94-488">Security considerations</span></span>  
 <span data-ttu-id="8fa94-489">默认情况下，<xref:System.Xml.XmlReader>使用<xref:System.Xml.XmlUrlResolver>没有用户凭据以打开资源的对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-489">By default, the <xref:System.Xml.XmlReader> uses an <xref:System.Xml.XmlUrlResolver> object with no user credentials to open resources.</span></span> <span data-ttu-id="8fa94-490">这意味着，默认情况下，XML 读取器可以访问不需要凭据的任何位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-490">This means that, by default, the XML reader can access any location that doesn't require credentials.</span></span> <span data-ttu-id="8fa94-491">使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>属性来控制对资源的访问：</span><span class="sxs-lookup"><span data-stu-id="8fa94-491">Use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to control access to resources:</span></span>  
  
-   <span data-ttu-id="8fa94-492">设置<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>到<xref:System.Xml.XmlSecureResolver>对象来限制 XML 读取器可以访问的资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-492">Set <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> to an <xref:System.Xml.XmlSecureResolver> object to restrict the resources that the XML reader can access.</span></span>  
  
 <span data-ttu-id="8fa94-493">或</span><span class="sxs-lookup"><span data-stu-id="8fa94-493">-or-</span></span>  
  
-   <span data-ttu-id="8fa94-494">设置<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>到`null`以防止 XML 读取器打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-494">Set <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> to `null` to prevent the XML reader from opening any external resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-495">此示例创建的 XML 读取器去除无关紧要的空白区域，去除注释，并执行片段级别的一致性检查。</span><span class="sxs-lookup"><span data-stu-id="8fa94-495">This example creates an XML reader that strips insignificant white space, strips comments, and performs fragment-level conformance checking.</span></span>  
  
 [!code-csharp[XmlReader.Create#11](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#11)]
 [!code-vb[XmlReader.Create#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#11)]  
  
 <span data-ttu-id="8fa94-496">下面的示例使用<xref:System.Xml.XmlUrlResolver>使用默认凭据来访问的文件。</span><span class="sxs-lookup"><span data-stu-id="8fa94-496">The following example uses an <xref:System.Xml.XmlUrlResolver> with default credentials to access a file.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 [!code-cpp[XmlReaderSettings.cctor#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)]
 [!code-csharp[XmlReaderSettings.cctor#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)]
 [!code-vb[XmlReaderSettings.cctor#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)]  
  
 <span data-ttu-id="8fa94-497">下面的代码包装内其他读取器的读取器实例。</span><span class="sxs-lookup"><span data-stu-id="8fa94-497">The following code wraps a reader instance within another reader.</span></span>  
  
 [!code-csharp[XmlReader.Create#13](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#13)]
 [!code-vb[XmlReader.Create#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#13)]  
  
 <span data-ttu-id="8fa94-498">此示例链接读取器可以添加 DTD 和 XML 架构验证。</span><span class="sxs-lookup"><span data-stu-id="8fa94-498">This example chains readers to add DTD and XML schema validation.</span></span>  
  
 [!code-csharp[XmlReader.Create#12](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#12)]
 [!code-vb[XmlReader.Create#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="8fa94-499">包含 XML 数据的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-499">The stream that contains the XML data.</span>
          </span>
          <span data-ttu-id="8fa94-500">
            <see cref="T:System.Xml.XmlReader" /> 对流的前几个字节进行扫描，查找字节顺序标记或其他编码标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-500">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span>
          </span>
          <span data-ttu-id="8fa94-501">在确定编码方式后，使用该编码方式继续读取流，而处理过程继续将输入内容分析为 (Unicode) 字符流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-501">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-502">使用带默认设置的指定流创建新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-502">Creates a new <see cref="T:System.Xml.XmlReader" /> instance using the specified stream with default settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-503">一个用于读取数据流中所含数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-503">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-504"><xref:System.Xml.XmlReaderSettings>对象使用默认设置用于创建读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-504">An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader.</span></span> <span data-ttu-id="8fa94-505">如果你想要指定要在创建读取器上支持的功能，请使用采用的重载<xref:System.Xml.XmlReaderSettings>对象作为一个其自变量，并传入<xref:System.Xml.XmlReaderSettings>具有正确设置的对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-505">If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.</span></span>  
  
 <span data-ttu-id="8fa94-506">默认<xref:System.Xml.XmlUrlResolver>不使用凭据用于访问任何外部资源，如文档类型定义 (DTD)、 实体、 架构和等等。</span><span class="sxs-lookup"><span data-stu-id="8fa94-506">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-507">从.NET Framework 4.5.2，无默认值开始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="8fa94-507">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="8fa94-508">如果你的解决方案面向.NET Framework 4.5.2 或更高版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-508">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-509">如果需要身份验证的网络资源位于外部的资源，则指定<xref:System.Xml.XmlResolver>使用必要的凭据使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-509">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-510">创建<xref:System.Xml.XmlReader>对象扩展实体引用，并执行的新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="8fa94-510">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-511">下面的示例创建<xref:System.Xml.XmlReader>从读取的对象<xref:System.IO.FileStream>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-511">The following example creates an <xref:System.Xml.XmlReader> object that reads from a <xref:System.IO.FileStream>.</span></span>  
  
 [!code-csharp[XmlReader.Create#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#8)]
 [!code-vb[XmlReader.Create#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-512">
            <paramref name="input" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-512">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8fa94-513">
            <see cref="T:System.Xml.XmlReader" /> 没有足够的权限访问 XML 数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-513">The <see cref="T:System.Xml.XmlReader" /> does not have sufficient permissions to access the location of the XML data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextReader -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="8fa94-514">从其中读取 XML 数据的文本读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-514">The text reader from which to read the XML data.</span>
          </span>
          <span data-ttu-id="8fa94-515">由于文本读取器返回的是 Unicode 字符流，因此，XML 读取器未使用 XML 声明中指定的编码对数据流进行解码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-515">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration is not used by the XML reader to decode the data stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-516">使用指定的文本读取器创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-516">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-517">一个用于读取数据流中所含数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-517">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-518"><xref:System.Xml.XmlReaderSettings>对象使用默认设置用于创建读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-518">An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader.</span></span> <span data-ttu-id="8fa94-519">如果你想要指定要在创建读取器上支持的功能，请使用采用的重载<xref:System.Xml.XmlReaderSettings>对象作为一个其自变量，并传入<xref:System.Xml.XmlReaderSettings>具有正确设置的对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-519">If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.</span></span>  
  
 <span data-ttu-id="8fa94-520">默认<xref:System.Xml.XmlUrlResolver>不使用凭据用于访问任何外部资源，如文档类型定义 (DTD)、 实体、 架构和等等。</span><span class="sxs-lookup"><span data-stu-id="8fa94-520">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-521">从.NET Framework 4.5.2，无默认值开始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="8fa94-521">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="8fa94-522">如果你的解决方案面向.NET Framework 4.5.2 或更高版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-522">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-523">如果需要身份验证的网络资源位于外部的资源，则指定<xref:System.Xml.XmlResolver>使用必要的凭据使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-523">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-524">创建<xref:System.Xml.XmlReader>对象扩展实体引用，并执行的新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="8fa94-524">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-525">下面的示例使用<xref:System.IO.StringReader>类来读取的 XML 字符串。</span><span class="sxs-lookup"><span data-stu-id="8fa94-525">The following example uses the <xref:System.IO.StringReader> class to read an XML string.</span></span>  
  
 [!code-csharp[XmlReader.Create#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#7)]
 [!code-vb[XmlReader.Create#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-526">
            <paramref name="input" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-526">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (string inputUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(string inputUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (inputUri As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::String ^ inputUri);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create inputUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="8fa94-527">包含 XML 数据的文件的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-527">The URI for the file that contains the XML data.</span>
          </span>
          <span data-ttu-id="8fa94-528">
            <see cref="T:System.Xml.XmlUrlResolver" /> 类用于将路径转换为规范化数据表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-528">The <see cref="T:System.Xml.XmlUrlResolver" /> class is used to convert the path to a canonical data representation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-529">用指定的 URI 创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-529">Creates a new <see cref="T:System.Xml.XmlReader" /> instance with specified URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-530">一个用于读取数据流中所含数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-530">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-531"><xref:System.Xml.XmlReaderSettings>对象使用默认设置用于创建读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-531">An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader.</span></span> <span data-ttu-id="8fa94-532">如果你想要指定要在创建读取器上支持的功能，请使用采用的重载<xref:System.Xml.XmlReaderSettings>对象作为一个其自变量，并传入<xref:System.Xml.XmlReaderSettings>具有正确设置的对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-532">If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.</span></span>  
  
 <span data-ttu-id="8fa94-533">默认<xref:System.Xml.XmlUrlResolver>不使用凭据用于访问任何外部资源，如文档类型定义 (DTD)、 实体、 架构和等等。</span><span class="sxs-lookup"><span data-stu-id="8fa94-533">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-534">从.NET Framework 4.5.2，无默认值开始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="8fa94-534">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="8fa94-535">如果你的解决方案面向.NET Framework 4.5.2 或更高版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-535">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-536">如果需要身份验证的网络资源位于外部的资源，则指定<xref:System.Xml.XmlResolver>使用必要的凭据使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-536">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-537">创建<xref:System.Xml.XmlReader>对象扩展实体引用，并执行的新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="8fa94-537">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-538">下面的示例创建<xref:System.Xml.XmlReader>读取 URI 指定的 XML 数据文件的对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-538">The following example creates an <xref:System.Xml.XmlReader> object that reads XML data file specified by the URI.</span></span>  
  
 [!code-csharp[XmlReader.Create#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#6)]
 [!code-vb[XmlReader.Create#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-539">
            <paramref name="inputUri" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-539">The <paramref name="inputUri" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8fa94-540">
            <see cref="T:System.Xml.XmlReader" /> 没有足够的权限访问 XML 数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-540">The <see cref="T:System.Xml.XmlReader" /> does not have sufficient permissions to access the location of the XML data.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8fa94-541">由 URI 标识的文件不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-541">The file identified by the URI does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="8fa94-542">
            <block subset="none" type="note">
              <para>改为在[用于 Windows 应用商店应用的 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) 或[可移植类库](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)中捕获基类异常 <see cref="T:System.FormatException" />。</para>
            </block>  URI 格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-542">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.FormatException" />, instead.  </para>
              </block>  The URI format is not correct.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Xml.XmlReaderSettings -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="8fa94-543">包含 XML 数据的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-543">The stream that contains the XML data.</span>
          </span>
          <span data-ttu-id="8fa94-544">
            <see cref="T:System.Xml.XmlReader" /> 对流的前几个字节进行扫描，查找字节顺序标记或其他编码标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-544">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span>
          </span>
          <span data-ttu-id="8fa94-545">在确定编码方式后，使用该编码方式继续读取流，而处理过程继续将输入内容分析为 (Unicode) 字符流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-545">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="8fa94-546">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-546">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="8fa94-547">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-547">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-548">使用指定的流和设置创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-548">Creates a new <see cref="T:System.Xml.XmlReader" /> instance with the specified stream and settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-549">一个用于读取数据流中所含数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-549">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-550">默认情况下<xref:System.Xml.XmlUrlResolver>不使用凭据用于访问任何外部资源，如文档类型定义 (DTD)、 实体、 架构和等等。</span><span class="sxs-lookup"><span data-stu-id="8fa94-550">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-551">从.NET Framework 4.5.2，无默认值开始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="8fa94-551">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="8fa94-552">如果你的解决方案面向.NET Framework 4.5.2 或更高版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-552">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-553">如果需要身份验证的网络资源位于外部的资源，则使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-553">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-554">可以使用以下方法之一来控制哪些资源<xref:System.Xml.XmlReader>可以访问：</span><span class="sxs-lookup"><span data-stu-id="8fa94-554">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="8fa94-555">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-555">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="8fa94-556">或</span><span class="sxs-lookup"><span data-stu-id="8fa94-556">-or-</span></span>  
>   
>  -   <span data-ttu-id="8fa94-557">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-557">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="8fa94-558">创建<xref:System.Xml.XmlReader>对象扩展实体引用，并执行的新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="8fa94-558">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-559">
            <paramref name="input" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-559">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextReader * System.Xml.XmlReaderSettings -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="8fa94-560">从其中读取 XML 数据的文本读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-560">The text reader from which to read the XML data.</span>
          </span>
          <span data-ttu-id="8fa94-561">由于文本读取器返回的是 Unicode 字符流，因此，XML 读取器未使用 XML 声明中指定的编码对数据流进行解码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-561">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="8fa94-562">新 <see cref="T:System.Xml.XmlReader" /> 的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-562">The settings for the new <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="8fa94-563">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-563">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-564">使用指定的文本读取器和设置创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-564">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader and settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-565">一个用于读取数据流中所含数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-565">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-566">默认情况下<xref:System.Xml.XmlUrlResolver>不使用凭据用于访问任何外部资源，如文档类型定义 (DTD)、 实体、 架构和等等。</span><span class="sxs-lookup"><span data-stu-id="8fa94-566">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-567">从.NET Framework 4.5.2，无默认值开始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="8fa94-567">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="8fa94-568">如果你的解决方案面向.NET Framework 4.5.2 或更高版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-568">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-569">如果需要身份验证的网络资源位于外部的资源，则使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-569">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-570">可以使用以下方法之一来控制哪些资源<xref:System.Xml.XmlReader>可以访问：</span><span class="sxs-lookup"><span data-stu-id="8fa94-570">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="8fa94-571">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-571">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="8fa94-572">或</span><span class="sxs-lookup"><span data-stu-id="8fa94-572">-or-</span></span>  
>   
>  -   <span data-ttu-id="8fa94-573">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-573">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="8fa94-574">创建<xref:System.Xml.XmlReader>对象扩展实体引用，并执行的新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="8fa94-574">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-575">
            <paramref name="input" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-575">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (string inputUri, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(string inputUri, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (inputUri As String, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::String ^ inputUri, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Xml.XmlReaderSettings -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (inputUri, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="8fa94-576">包含 XML 数据的文件的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-576">The URI for the file containing the XML data.</span>
          </span>
          <span data-ttu-id="8fa94-577">
            <see cref="T:System.Xml.XmlReaderSettings" /> 对象上的 <see cref="T:System.Xml.XmlResolver" /> 对象用于将路径转换为规范化数据表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-577">The <see cref="T:System.Xml.XmlResolver" /> object on the <see cref="T:System.Xml.XmlReaderSettings" /> object is used to convert the path to a canonical data representation.</span>
          </span>
          <span data-ttu-id="8fa94-578">如果 <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> 为 <see langword="null" />，则使用新的 <see cref="T:System.Xml.XmlUrlResolver" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-578">If <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> is <see langword="null" />, a new <see cref="T:System.Xml.XmlUrlResolver" /> object is used.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="8fa94-579">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-579">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="8fa94-580">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-580">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-581">使用指定的 URI 和设置创建新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-581">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified URI and settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-582">一个用于读取数据流中所含数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-582">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-583">默认情况下<xref:System.Xml.XmlUrlResolver>不使用凭据用于访问任何外部资源，如文档类型定义 (DTD)、 实体、 架构和等等。</span><span class="sxs-lookup"><span data-stu-id="8fa94-583">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-584">从.NET Framework 4.5.2，无默认值开始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="8fa94-584">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="8fa94-585">如果你的解决方案面向.NET Framework 4.5.2 或更高版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-585">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-586">这意味着，<xref:System.Xml.XmlReader>可以访问任何不需要身份验证的位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-586">This means that the <xref:System.Xml.XmlReader> can access any locations that does not require authentication.</span></span> <span data-ttu-id="8fa94-587">如果需要身份验证的网络资源位于外部的资源，则使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-587">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-588">你可以限制的资源，<xref:System.Xml.XmlReader>可以访问通过设置<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>属性<xref:System.Xml.XmlSecureResolver>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-588">You can restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
 <span data-ttu-id="8fa94-589">创建<xref:System.Xml.XmlReader>对象扩展实体引用，并执行的新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="8fa94-589">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-590">下面的示例创建<xref:System.Xml.XmlReader>支持文档类型定义 (DTD) 验证的对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-590">The following example creates an <xref:System.Xml.XmlReader> object that supports document type definition (DTD) validation.</span></span>  
  
 [!code-csharp[XmlReader.Create#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#3)]
 [!code-vb[XmlReader.Create#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-591">
            <paramref name="inputUri" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-591">The <paramref name="inputUri" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8fa94-592">找不到 URI 指定的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-592">The file specified by the URI cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="8fa94-593">
            <block subset="none" type="note">
              <para>改为在[用于 Windows 应用商店应用的 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) 或[可移植类库](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)中捕获基类异常 <see cref="T:System.FormatException" />。</para>
            </block>  URI 格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-593">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.FormatException" />, instead.  </para>
              </block>  The URI format is not correct.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.Xml.XmlReader reader, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.Xml.XmlReader reader, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (reader As XmlReader, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::Xml::XmlReader ^ reader, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlReader * System.Xml.XmlReaderSettings -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (reader, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="8fa94-594">要用作基础 XML 编写器的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-594">The object that you want to use as the underlying XML reader.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="8fa94-595">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-595">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="8fa94-596">
            <see cref="T:System.Xml.XmlReaderSettings" /> 对象的一致性级别要么必须与基础读取器的一致性级别匹配，要么必须设置为 <see cref="F:System.Xml.ConformanceLevel.Auto" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-596">The conformance level of the <see cref="T:System.Xml.XmlReaderSettings" /> object must either match the conformance level of the underlying reader, or it must be set to <see cref="F:System.Xml.ConformanceLevel.Auto" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-597">使用指定的 XML 读取器和设置创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-597">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified XML reader and settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-598">在指定的 <see cref="T:System.Xml.XmlReader" /> 对象周围包装的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-598">An object that is wrapped around the specified <see cref="T:System.Xml.XmlReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-599">此方法允许将其他功能添加到基础<xref:System.Xml.XmlReader>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-599">This method allows you add additional features to an underlying <xref:System.Xml.XmlReader> object.</span></span> <span data-ttu-id="8fa94-600">基础<xref:System.Xml.XmlReader>对象可以是另一个<xref:System.Xml.XmlReader>创建对象<xref:System.Xml.XmlReader.Create%2A>方法，或<xref:System.Xml.XmlReader>对象使用的一个具体创建<xref:System.Xml.XmlReader>实现。</span><span class="sxs-lookup"><span data-stu-id="8fa94-600">The underlying <xref:System.Xml.XmlReader> object can be another <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A> method, or an <xref:System.Xml.XmlReader> object created using one of the concrete <xref:System.Xml.XmlReader> implementations.</span></span>  
  
 <span data-ttu-id="8fa94-601">默认<xref:System.Xml.XmlUrlResolver>不使用凭据用于访问任何外部资源如架构。</span><span class="sxs-lookup"><span data-stu-id="8fa94-601">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a schema.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-602">从.NET Framework 4.5.2，无默认值开始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="8fa94-602">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="8fa94-603">如果你的解决方案面向.NET Framework 4.5.2 或更高版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-603">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-604">如果需要身份验证的网络资源位于外部的资源，则指定<xref:System.Xml.XmlResolver>使用必要的凭据使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-604">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-605">可以使用以下方法之一来控制哪些资源<xref:System.Xml.XmlReader>可以访问：</span><span class="sxs-lookup"><span data-stu-id="8fa94-605">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="8fa94-606">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-606">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="8fa94-607">或</span><span class="sxs-lookup"><span data-stu-id="8fa94-607">-or-</span></span>  
>   
>  -   <span data-ttu-id="8fa94-608">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-608">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="8fa94-609">创建<xref:System.Xml.XmlReader>对象扩展实体引用，并执行的新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="8fa94-609">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-610">下面的示例创建一个验证<xref:System.Xml.XmlReader>包装在周围的对象<xref:System.Xml.XmlNodeReader>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-610">The following example creates a validating <xref:System.Xml.XmlReader> object that is wrapped around an <xref:System.Xml.XmlNodeReader> object.</span></span>  
  
 [!code-csharp[XmlReader.Create#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#5)]
 [!code-vb[XmlReader.Create#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-611">
            <paramref name="reader" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-611">The <paramref name="reader" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-612">
            <see cref="T:System.Xml.XmlReaderSettings" /> 对象指定的一致性级别与基础读取器的一致性级别不一致。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-612">If the <see cref="T:System.Xml.XmlReaderSettings" /> object specifies a conformance level that is not consistent with conformance level of the underlying reader.</span>
          </span>
          <span data-ttu-id="8fa94-613">- 或 -  基础 <see cref="T:System.Xml.XmlReader" /> 处于 <see cref="F:System.Xml.ReadState.Error" /> 或 <see cref="F:System.Xml.ReadState.Closed" /> 状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-613">-or-  The underlying <see cref="T:System.Xml.XmlReader" /> is in an <see cref="F:System.Xml.ReadState.Error" /> or <see cref="F:System.Xml.ReadState.Closed" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings, string baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input, class System.Xml.XmlReaderSettings settings, string baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream, settings As XmlReaderSettings, baseUri As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input, System::Xml::XmlReaderSettings ^ settings, System::String ^ baseUri);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Xml.XmlReaderSettings * string -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings, baseUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="baseUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="8fa94-614">包含 XML 数据的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-614">The stream that contains the XML data.</span>
          </span>
          <span data-ttu-id="8fa94-615">
            <see cref="T:System.Xml.XmlReader" /> 对流的前几个字节进行扫描，查找字节顺序标记或其他编码标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-615">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span>
          </span>
          <span data-ttu-id="8fa94-616">在确定编码方式后，使用该编码方式继续读取流，而处理过程继续将输入内容分析为 (Unicode) 字符流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-616">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="8fa94-617">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-617">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="8fa94-618">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-618">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="baseUri">
          <span data-ttu-id="8fa94-619">正在读取的实体或文档的基 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-619">The base URI for the entity or document being read.</span>
          </span>
          <span data-ttu-id="8fa94-620">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-620">This value can be <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8fa94-621">“安全说明” 基 URI 用于解析 XML 文档的相对 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-621">**Security Note** The base URI is used to resolve the relative URI of the XML document.</span>
          </span>
          <span data-ttu-id="8fa94-622">不要使用来自非信任源的基 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-622">Do not use a base URI from an untrusted source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-623">使用指定的流、基 URI 和设置创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-623">Creates a new <see cref="T:System.Xml.XmlReader" /> instance using the specified stream, base URI, and settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-624">一个用于读取数据流中所含数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-624">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-625">默认情况下<xref:System.Xml.XmlUrlResolver>不使用凭据用于访问任何外部资源，如文档类型定义 (DTD)、 实体、 架构和等等。</span><span class="sxs-lookup"><span data-stu-id="8fa94-625">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-626">从.NET Framework 4.5.2，无默认值开始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="8fa94-626">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="8fa94-627">如果你的解决方案面向.NET Framework 4.5.2 或更高版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-627">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-628">如果需要身份验证的网络资源位于外部的资源，则使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-628">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-629">可以使用以下方法之一来控制哪些资源<xref:System.Xml.XmlReader>可以访问：</span><span class="sxs-lookup"><span data-stu-id="8fa94-629">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="8fa94-630">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-630">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="8fa94-631">或</span><span class="sxs-lookup"><span data-stu-id="8fa94-631">-or-</span></span>  
>   
>  -   <span data-ttu-id="8fa94-632">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-632">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="8fa94-633">创建<xref:System.Xml.XmlReader>对象扩展实体引用，并执行的新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="8fa94-633">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-634">
            <paramref name="input" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-634">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input, class System.Xml.XmlReaderSettings settings, class System.Xml.XmlParserContext inputContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input, System::Xml::XmlReaderSettings ^ settings, System::Xml::XmlParserContext ^ inputContext);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Xml.XmlReaderSettings * System.Xml.XmlParserContext -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings, inputContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="inputContext" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="8fa94-635">包含 XML 数据的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-635">The stream that contains the XML data.</span>
          </span>
          <span data-ttu-id="8fa94-636">
            <see cref="T:System.Xml.XmlReader" /> 对流的前几个字节进行扫描，查找字节顺序标记或其他编码标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-636">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span>
          </span>
          <span data-ttu-id="8fa94-637">在确定编码方式后，使用该编码方式继续读取流，而处理过程继续将输入内容分析为 (Unicode) 字符流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-637">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="8fa94-638">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-638">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="8fa94-639">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-639">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inputContext">
          <span data-ttu-id="8fa94-640">分析 XML 片段所需的上下文信息.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-640">The context information required to parse the XML fragment.</span>
          </span>
          <span data-ttu-id="8fa94-641">上下文信息可以包括要使用的 <see cref="T:System.Xml.XmlNameTable" />、编码、命名空间范围、当前的 <c>xml:lang</c> 和 <c>xml:space</c> 范围、基 URI 和文档类型定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-641">The context information can include the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c> and <c>xml:space</c> scope, base URI, and document type definition.</span>
          </span>
          <span data-ttu-id="8fa94-642">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-642">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-643">使用指定的流、设置和用于分析的上下文信息创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-643">Creates a new <see cref="T:System.Xml.XmlReader" /> instance using the specified stream, settings, and context information for parsing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-644">一个用于读取数据流中所含数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-644">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-645">默认情况下<xref:System.Xml.XmlUrlResolver>不使用凭据用于访问任何外部资源，如文档类型定义 (DTD)、 实体、 架构和等等。</span><span class="sxs-lookup"><span data-stu-id="8fa94-645">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-646">从.NET Framework 4.5.2，无默认值开始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="8fa94-646">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="8fa94-647">如果你的解决方案面向.NET Framework 4.5.2 或更高版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-647">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-648">如果需要身份验证的网络资源位于外部的资源，则使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-648">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-649">可以使用以下方法之一来控制哪些资源<xref:System.Xml.XmlReader>可以访问：</span><span class="sxs-lookup"><span data-stu-id="8fa94-649">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="8fa94-650">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-650">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="8fa94-651">或</span><span class="sxs-lookup"><span data-stu-id="8fa94-651">-or-</span></span>  
>   
>  -   <span data-ttu-id="8fa94-652">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-652">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="8fa94-653">创建<xref:System.Xml.XmlReader>对象扩展实体引用，并执行的新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="8fa94-653">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-654">
            <paramref name="input" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-654">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings, string baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input, class System.Xml.XmlReaderSettings settings, string baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader, settings As XmlReaderSettings, baseUri As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input, System::Xml::XmlReaderSettings ^ settings, System::String ^ baseUri);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextReader * System.Xml.XmlReaderSettings * string -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings, baseUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="baseUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="8fa94-655">从其中读取 XML 数据的文本读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-655">The text reader from which to read the XML data.</span>
          </span>
          <span data-ttu-id="8fa94-656">由于文本读取器返回的是 Unicode 字符流，因此，<see cref="T:System.Xml.XmlReader" /> 未使用 XML 声明中指定的编码对数据流进行解码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-656">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the <see cref="T:System.Xml.XmlReader" /> to decode the data stream.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="8fa94-657">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-657">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="8fa94-658">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-658">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="baseUri">
          <span data-ttu-id="8fa94-659">正在读取的实体或文档的基 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-659">The base URI for the entity or document being read.</span>
          </span>
          <span data-ttu-id="8fa94-660">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-660">This value can be <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8fa94-661">“安全说明” 基 URI 用于解析 XML 文档的相对 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-661">**Security Note** The base URI is used to resolve the relative URI of the XML document.</span>
          </span>
          <span data-ttu-id="8fa94-662">不要使用来自非信任源的基 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-662">Do not use a base URI from an untrusted source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-663">使用指定的文本读取器、设置和基 URI 创建一个新的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-663">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader, settings, and base URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-664">一个用于读取数据流中所含数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-664">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-665">默认情况下<xref:System.Xml.XmlUrlResolver>不使用凭据用于访问任何外部资源，如文档类型定义 (DTD)、 实体、 架构和等等。</span><span class="sxs-lookup"><span data-stu-id="8fa94-665">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-666">从.NET Framework 4.5.2，无默认值开始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="8fa94-666">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="8fa94-667">如果你的解决方案面向.NET Framework 4.5.2 或更高版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-667">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-668">如果需要身份验证的网络资源位于外部的资源，则使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-668">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-669">可以使用以下方法之一来控制哪些资源<xref:System.Xml.XmlReader>可以访问：</span><span class="sxs-lookup"><span data-stu-id="8fa94-669">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="8fa94-670">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-670">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="8fa94-671">或</span><span class="sxs-lookup"><span data-stu-id="8fa94-671">-or-</span></span>  
>   
>  -   <span data-ttu-id="8fa94-672">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-672">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="8fa94-673">创建<xref:System.Xml.XmlReader>对象扩展实体引用，并执行的新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="8fa94-673">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-674">
            <paramref name="input" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-674">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input, class System.Xml.XmlReaderSettings settings, class System.Xml.XmlParserContext inputContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input, System::Xml::XmlReaderSettings ^ settings, System::Xml::XmlParserContext ^ inputContext);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextReader * System.Xml.XmlReaderSettings * System.Xml.XmlParserContext -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings, inputContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="inputContext" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="8fa94-675">从其中读取 XML 数据的文本读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-675">The text reader from which to read the XML data.</span>
          </span>
          <span data-ttu-id="8fa94-676">由于文本读取器返回的是 Unicode 字符流，因此，XML 读取器未使用 XML 声明中指定的编码对数据流进行解码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-676">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="8fa94-677">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-677">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="8fa94-678">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-678">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inputContext">
          <span data-ttu-id="8fa94-679">分析 XML 片段所需的上下文信息.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-679">The context information required to parse the XML fragment.</span>
          </span>
          <span data-ttu-id="8fa94-680">上下文信息可以包括要使用的 <see cref="T:System.Xml.XmlNameTable" />、编码、命名空间范围、当前的 <c>xml:lang</c> 和 <c>xml:space</c> 范围、基 URI 和文档类型定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-680">The context information can include the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c> and <c>xml:space</c> scope, base URI, and document type definition.</span>
          </span>
          <span data-ttu-id="8fa94-681">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-681">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-682">使用指定的文本读取器、设置和要用于分析的上下文信息创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-682">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader, settings, and context information for parsing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-683">一个用于读取数据流中所含数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-683">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-684">默认情况下<xref:System.Xml.XmlUrlResolver>不使用凭据用于访问任何外部资源，如文档类型定义 (DTD)、 实体、 架构和等等。</span><span class="sxs-lookup"><span data-stu-id="8fa94-684">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-685">从.NET Framework 4.5.2，无默认值开始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="8fa94-685">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="8fa94-686">如果你的解决方案面向.NET Framework 4.5.2 或更高版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-686">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-687">如果需要身份验证的网络资源位于外部的资源，则使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-687">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-688">可以使用以下方法之一来控制哪些资源<xref:System.Xml.XmlReader>可以访问：</span><span class="sxs-lookup"><span data-stu-id="8fa94-688">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="8fa94-689">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-689">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="8fa94-690">或</span><span class="sxs-lookup"><span data-stu-id="8fa94-690">-or-</span></span>  
>   
>  -   <span data-ttu-id="8fa94-691">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="8fa94-691">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="8fa94-692">创建<xref:System.Xml.XmlReader>对象扩展实体引用，并执行的新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="8fa94-692">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-693">下面的示例创建<xref:System.Xml.XmlReader>读取的 XML 片段的对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-693">The following example creates an <xref:System.Xml.XmlReader> object that reads an XML fragment.</span></span>  
  
 [!code-csharp[XmlReader.Create#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#1)]
 [!code-vb[XmlReader.Create#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-694">
            <paramref name="input" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-694">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-695">
            <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> 和 <see cref="P:System.Xml.XmlParserContext.NameTable" /> 属性都包含值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-695">The <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> and <see cref="P:System.Xml.XmlParserContext.NameTable" /> properties both contain values.</span>
          </span>
          <span data-ttu-id="8fa94-696">（只能设置并使用这些 <see langword="NameTable" /> 属性之中的一个）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-696">(Only one of these <see langword="NameTable" /> properties can be set and used).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (string inputUri, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(string inputUri, class System.Xml.XmlReaderSettings settings, class System.Xml.XmlParserContext inputContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (inputUri As String, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::String ^ inputUri, System::Xml::XmlReaderSettings ^ settings, System::Xml::XmlParserContext ^ inputContext);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Xml.XmlReaderSettings * System.Xml.XmlParserContext -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (inputUri, settings, inputContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="inputContext" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="8fa94-697">包含 XML 数据的文件的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-697">The URI for the file containing the XML data.</span>
          </span>
          <span data-ttu-id="8fa94-698">
            <see cref="T:System.Xml.XmlReaderSettings" /> 对象上的 <see cref="T:System.Xml.XmlResolver" /> 对象用于将路径转换为规范化数据表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-698">The <see cref="T:System.Xml.XmlResolver" /> object on the <see cref="T:System.Xml.XmlReaderSettings" /> object is used to convert the path to a canonical data representation.</span>
          </span>
          <span data-ttu-id="8fa94-699">如果 <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> 为 <see langword="null" />，则使用新的 <see cref="T:System.Xml.XmlUrlResolver" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-699">If <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> is <see langword="null" />, a new <see cref="T:System.Xml.XmlUrlResolver" /> object is used.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="8fa94-700">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-700">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="8fa94-701">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-701">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inputContext">
          <span data-ttu-id="8fa94-702">分析 XML 片段所需的上下文信息.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-702">The context information required to parse the XML fragment.</span>
          </span>
          <span data-ttu-id="8fa94-703">上下文信息可以包括要使用的 <see cref="T:System.Xml.XmlNameTable" />、编码、命名空间范围、当前的 <c>xml:lang</c> 和 <c>xml:space</c> 范围、基 URI 和文档类型定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-703">The context information can include the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c> and <c>xml:space</c> scope, base URI, and document type definition.</span>
          </span>
          <span data-ttu-id="8fa94-704">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-704">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-705">使用指定的 URI、设置和进行分析的上下文信息创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-705">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified URI, settings, and context information for parsing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-706">一个用于读取数据流中所含数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-706">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-707">默认情况下<xref:System.Xml.XmlUrlResolver>不使用凭据用于访问任何外部资源，如文档类型定义 (DTD)、 实体、 架构和等等。</span><span class="sxs-lookup"><span data-stu-id="8fa94-707">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-708">从.NET Framework 4.5.2，无默认值开始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="8fa94-708">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="8fa94-709">如果你的解决方案面向.NET Framework 4.5.2 或更高版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-709">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8fa94-710">这意味着，<xref:System.Xml.XmlReader>可以访问任何不需要身份验证的位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-710">This means that the <xref:System.Xml.XmlReader> can access any locations that does not require authentication.</span></span> <span data-ttu-id="8fa94-711">如果需要身份验证的网络资源位于外部的资源，则使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>属性指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-711">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-712">你可以限制的资源，<xref:System.Xml.XmlReader>可以访问通过设置<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>属性<xref:System.Xml.XmlSecureResolver>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-712">You can restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
 <span data-ttu-id="8fa94-713">创建<xref:System.Xml.XmlReader>对象扩展实体引用，并执行的新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="8fa94-713">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-714">
            <see langword="inputUri" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-714">The <see langword="inputUri" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8fa94-715">
            <see cref="T:System.Xml.XmlReader" /> 没有足够的权限访问 XML 数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-715">The <see cref="T:System.Xml.XmlReader" /> does not have sufficient permissions to access the location of the XML data.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-716">
            <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> 和 <see cref="P:System.Xml.XmlParserContext.NameTable" /> 属性都包含值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-716">The <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> and <see cref="P:System.Xml.XmlParserContext.NameTable" /> properties both contain values.</span>
          </span>
          <span data-ttu-id="8fa94-717">（只能设置并使用这些 <see langword="NameTable" /> 属性之中的一个）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-717">(Only one of these <see langword="NameTable" /> properties can be set and used).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8fa94-718">找不到 URI 指定的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-718">The file specified by the URI cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="8fa94-719">URI 格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-719">The URI format is not correct.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public abstract int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-720">当在派生类中被重写时，获取 XML 文档中当前节点的深度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-720">When overridden in a derived class, gets the depth of the current node in the XML document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-721">XML 文档中当前节点的深度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-721">The depth of the current node in the XML document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa94-722">请参阅<xref:System.Xml.XmlTextReader.Depth%2A>(在`XmlTextReader`类) 使用此属性的示例。</span><span class="sxs-lookup"><span data-stu-id="8fa94-722">See <xref:System.Xml.XmlTextReader.Depth%2A> (in the `XmlTextReader` class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-723">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-723">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-724">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-724">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-725">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-725">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-726">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-726">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-727">释放 <see cref="T:System.Xml.XmlReader" /> 类使用的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-727">Releases the resources used by the <see cref="T:System.Xml.XmlReader" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="xmlReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-728">释放 <see cref="T:System.Xml.XmlReader" /> 类的当前实例所使用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-728">Releases all resources used by the current instance of the <see cref="T:System.Xml.XmlReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-729">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-729">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-730">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-730">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xmlReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8fa94-731">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-731">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-732">释放由 <see cref="T:System.Xml.XmlReader" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-732">Releases the unmanaged resources used by the <see cref="T:System.Xml.XmlReader" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-733">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-733">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-734">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-734">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public abstract bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-735">当在派生类中被重写时，获取一个值，该值指示此读取器是否定位在流的结尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-735">When overridden in a derived class, gets a value indicating whether the reader is positioned at the end of the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-736">如果此读取器定位在流的结尾，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-736">
              <see langword="true" /> if the reader is positioned at the end of the stream; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-737">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-737">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-738">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-738">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-739">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-739">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-740">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-740">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-741">当在派生类中被重写时，获取属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-741">When overridden in a derived class, gets the value of an attribute.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public abstract string GetAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAttribute (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetAttribute(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : int -&gt; string" Usage="xmlReader.GetAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="8fa94-742">属性的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-742">The index of the attribute.</span>
          </span>
          <span data-ttu-id="8fa94-743">索引是从零开始的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-743">The index is zero-based.</span>
          </span>
          <span data-ttu-id="8fa94-744">（第一个属性的索引为 0。）</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-744">(The first attribute has index 0.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-745">当在派生类中被重写时，获取具有指定索引的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-745">When overridden in a derived class, gets the value of the attribute with the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-746">指定的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-746">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="8fa94-747">此方法不移动读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-747">This method does not move the reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa94-748">下面的示例获取第三个属性的值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-748">The following example gets the value of the third attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#2)]
 [!code-vb[XmlReaderBasic#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8fa94-749">
            <paramref name="i" /> 超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-749">
              <paramref name="i" /> is out of range.</span>
          </span>
          <span data-ttu-id="8fa94-750">它必须是非负数且小于特性集合的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-750">It must be non-negative and less than the size of the attribute collection.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-751">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-751">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-752">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-752">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public abstract string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string -&gt; string" Usage="xmlReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8fa94-753">属性的限定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-753">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-754">当在派生类中被重写时，获取具有指定 <see cref="P:System.Xml.XmlReader.Name" /> 的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-754">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.Name" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-755">指定的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-755">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="8fa94-756">如果找不到该属性，或者值为 <see langword="String.Empty" />，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-756">If the attribute is not found or the value is <see langword="String.Empty" />, <see langword="null" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-757">此方法不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-757">This method does not move the reader.</span></span>  
  
 <span data-ttu-id="8fa94-758">如果读取器定位在`DocumentType`节点，此方法可以用于获取的公共和系统文本，例如， `reader.GetAttribute("PUBLIC")`</span><span class="sxs-lookup"><span data-stu-id="8fa94-758">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute("PUBLIC")`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-759">下面的示例获取 ISBN 属性的值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-759">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#3)]
 [!code-vb[XmlReaderBasic#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-760">
            <paramref name="name" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-760">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-761">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-761">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-762">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-762">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public abstract string GetAttribute (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAttribute (name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetAttribute(System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string * string -&gt; string" Usage="xmlReader.GetAttribute (name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8fa94-763">属性的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-763">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-764">属性的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-764">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-765">当在派生类中被重写时，获取具有指定 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-765">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-766">指定的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-766">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="8fa94-767">如果找不到该属性，或者值为 <see langword="String.Empty" />，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-767">If the attribute is not found or the value is <see langword="String.Empty" />, <see langword="null" /> is returned.</span>
          </span>
          <span data-ttu-id="8fa94-768">此方法不移动读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-768">This method does not move the reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-769">下面的 XML 包含特定的命名空间中的属性：</span><span class="sxs-lookup"><span data-stu-id="8fa94-769">The following XML contains an attribute in a specific namespace:</span></span>  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 <span data-ttu-id="8fa94-770">你可以查找`dt:type`属性使用一个自变量 （前缀和本地名称） 或两个自变量 （本地名称和命名空间 URI）：</span><span class="sxs-lookup"><span data-stu-id="8fa94-770">You can lookup the `dt:type` attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):</span></span>  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 <span data-ttu-id="8fa94-771">查找`xmlns:dt`特性，请使用以下参数之一：</span><span class="sxs-lookup"><span data-stu-id="8fa94-771">To lookup the `xmlns:dt` attribute, use one of the following arguments:</span></span>  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 <span data-ttu-id="8fa94-772">你还可以获得此信息使用<xref:System.Xml.XmlReader.Prefix%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-772">You can also get this information using the <xref:System.Xml.XmlReader.Prefix%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-773">
            <paramref name="name" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-773">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-774">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-774">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-775">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-775">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GetValueAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetValueAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetValueAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValueAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetValueAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetValueAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GetValueAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.GetValueAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-776">异步获取当前节点的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-776">Asynchronously gets the value of the current node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-777">当前节点的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-777">The value of the current node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-778">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-778">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-779">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-779">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-780">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-780">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public virtual bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Xml.XmlReader.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-781">获取一个值，该值指示当前节点是否有任何属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-781">Gets a value indicating whether the current node has any attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-782">如果当前节点具有属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-782">
              <see langword="true" /> if the current node has attributes; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa94-783">下面的示例显示了当前节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-783">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]
 [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-784">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-784">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-785">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-785">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public virtual bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlReader.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-786">当在派生类中被重写时，获取一个值，该值指示当前节点是否可以具有 <see cref="P:System.Xml.XmlReader.Value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-786">When overridden in a derived class, gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlReader.Value" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-787">如果读取器当前定位在的节点可以具有 <see langword="Value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-787">
              <see langword="true" /> if the node on which the reader is currently positioned can have a <see langword="Value" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8fa94-788">如果为 <see langword="false" />，则节点值为 <see langword="String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-788">If <see langword="false" />, the node has a value of <see langword="String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-789">下表列出具有要返回的值的节点类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-789">The following table lists node types that have a value to return.</span></span>  
  
|<span data-ttu-id="8fa94-790">节点类型</span><span class="sxs-lookup"><span data-stu-id="8fa94-790">Node Type</span></span>|<span data-ttu-id="8fa94-791">“值”</span><span class="sxs-lookup"><span data-stu-id="8fa94-791">Value</span></span>|  
|---------------|-----------|  
|`Attribute`|<span data-ttu-id="8fa94-792">属性的值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-792">The value of the attribute.</span></span>|  
|`CDATA`|<span data-ttu-id="8fa94-793">CDATA 节的内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-793">The content of the CDATA section.</span></span>|  
|`Comment`|<span data-ttu-id="8fa94-794">注释的内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-794">The content of the comment.</span></span>|  
|`DocumentType`|<span data-ttu-id="8fa94-795">内部子集。</span><span class="sxs-lookup"><span data-stu-id="8fa94-795">The internal subset.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="8fa94-796">全部内容（不包括指令目标）。</span><span class="sxs-lookup"><span data-stu-id="8fa94-796">The entire content, excluding the target.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="8fa94-797">混合内容模型中标记之间的空白。</span><span class="sxs-lookup"><span data-stu-id="8fa94-797">The white space between markup in a mixed content model.</span></span>|  
|`Text`|<span data-ttu-id="8fa94-798">文本节点的内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-798">The content of the text node.</span></span>|  
|`Whitespace`|<span data-ttu-id="8fa94-799">标记之间的空白。</span><span class="sxs-lookup"><span data-stu-id="8fa94-799">The white space between markup.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="8fa94-800">声明的内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-800">The content of the declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-801">请参阅<xref:System.Xml.XmlTextReader.HasValue%2A>(在`XmlTextReader`类) 使用此方法的示例。</span><span class="sxs-lookup"><span data-stu-id="8fa94-801">See <xref:System.Xml.XmlTextReader.HasValue%2A> (in the `XmlTextReader` class) for a sample using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-802">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-802">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-803">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-803">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public virtual bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlReader.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-804">当在派生类中被重写时，获取一个值，该值指示当前节点是否是从 DTD 或架构中定义的默认值生成的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-804">When overridden in a derived class, gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-805">如果当前节点是其值从 DTD 或架构中定义的默认值生成的属性，则为 <see langword="true" />；如果属性值为显式设置的，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-805">
              <see langword="true" /> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <see langword="false" /> if the attribute value was explicitly set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-806">`IsDefault` 始终返回`false`为的实现`XmlReader`不支持架构或 DTD 信息。</span><span class="sxs-lookup"><span data-stu-id="8fa94-806">`IsDefault` always returns `false` for implementations of `XmlReader` that do not support schema or DTD information.</span></span> <span data-ttu-id="8fa94-807">此属性仅适用于属性节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-807">This property applies only to an attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-808">下面的示例显示在根元素上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-808">The following example displays all attributes on the root element.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Xml;  
  
public class Sample   
{  
  public static void Main(){  
  
    // Create the reader.  
    XmlReader reader = XmlReader.Create("book4.xml");  
  
    reader.MoveToContent();  
  
    // Display each of the attribute nodes, including default attributes.  
    while (reader.MoveToNextAttribute()){  
        if (reader.IsDefault)  
          Console.Write("(default attribute) ");  
        Console.WriteLine("{0} = {1}", reader.Name, reader.Value);    
    }             
  
    //Close the reader.  
    reader.Close();       
  
  }  
} // End class  
```  
  
 <span data-ttu-id="8fa94-809">该示例使用以下文件</span><span class="sxs-lookup"><span data-stu-id="8fa94-809">The example uses the following files as input.</span></span>  
  
 `book4.xml`  
  
```xml  
<!DOCTYPE book SYSTEM 'book.dtd'>  
<book ISBN = '1-861001-57-5'>  
  <title>Pride And Prejudice</title>  
  <price>19.95</price>  
</book>  
```  
  
 `book.dtd`  
  
```  
<!ELEMENT book (title,price)>   
<!ATTLIST book   
   genre CDATA "novel"  
   ISBN CDATA #REQUIRED>  
<!ELEMENT title (#PCDATA)>  
<!ELEMENT price (#PCDATA)>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-810">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-810">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-811">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-811">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public abstract bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-812">当在派生类中被重写时，获取一个值，该值指示当前节点是否为空元素（例如 <c>&lt;MyElement/&gt;</c>）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-812">When overridden in a derived class, gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-813">
            <see langword="true" /> 如果当前节点为元素 (<see cref="P:System.Xml.XmlReader.NodeType" />等于<see langword="XmlNodeType.Element" />) 的结尾<c> / &gt; </c>; 否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-813">
              <see langword="true" /> if the current node is an element (<see cref="P:System.Xml.XmlReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) that ends with <c>/&gt;</c>; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-814">此属性使您能够确定下面各项之间的差异：</span><span class="sxs-lookup"><span data-stu-id="8fa94-814">This property enables you to determine the difference between the following:</span></span>  
  
 <span data-ttu-id="8fa94-815">`<item num="123"/>` (`IsEmptyElement`是`true`)。</span><span class="sxs-lookup"><span data-stu-id="8fa94-815">`<item num="123"/>` (`IsEmptyElement` is `true`).</span></span>  
  
 <span data-ttu-id="8fa94-816">`<item num="123"></item>` (`IsEmptyElement`是`false`，尽管元素内容为空)。</span><span class="sxs-lookup"><span data-stu-id="8fa94-816">`<item num="123"></item>` (`IsEmptyElement` is `false`, although element content is empty).</span></span>  
  
 <span data-ttu-id="8fa94-817">相应`EndElement`节点不为空的元素生成。</span><span class="sxs-lookup"><span data-stu-id="8fa94-817">A corresponding `EndElement` node is not generated for empty elements.</span></span>  
  
 <span data-ttu-id="8fa94-818">如果已将默认内容添加到架构验证来说，由于元素`IsEmptyElement`仍会返回`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-818">If default content has been added to an element due to schema validation, `IsEmptyElement` still returns `true`.</span></span> <span data-ttu-id="8fa94-819">它没有任何影响在该元素具有默认值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-819">It has no bearing on whether or not the element has a default value.</span></span> <span data-ttu-id="8fa94-820">换而言之，`IsEmptyElement`仅报告是否与源文档中的元素具有结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-820">In other words, `IsEmptyElement` simply reports whether or not the element in the source document had an end element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-821">下面的示例显示了每个元素的文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-821">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]
 [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  
  
 <span data-ttu-id="8fa94-822">该示例使用文件，`elems.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="8fa94-822">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#3](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/elems.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-823">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-823">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-824">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-824">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsName">
      <MemberSignature Language="C#" Value="public static bool IsName (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsName(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsName (str As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsName(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member IsName : string -&gt; bool" Usage="System.Xml.XmlReader.IsName str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="8fa94-825">要验证的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-825">The name to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-826">返回一个值，该值指示字符串自变量是否是有效的 XML 名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-826">Returns a value indicating whether the string argument is a valid XML name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-827">如果该名称有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-827">
              <see langword="true" /> if the name is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-828">此方法使用[W3C XML 1.0 建议](http://go.microsoft.com/fwlink/?LinkId=49863)以确定名称是否有效。</span><span class="sxs-lookup"><span data-stu-id="8fa94-828">This method uses the [W3C XML 1.0 Recommendation](http://go.microsoft.com/fwlink/?LinkId=49863) to determine whether the name is valid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-829">
            <paramref name="str" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-829">The <paramref name="str" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsNameToken">
      <MemberSignature Language="C#" Value="public static bool IsNameToken (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNameToken(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsNameToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNameToken (str As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNameToken(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member IsNameToken : string -&gt; bool" Usage="System.Xml.XmlReader.IsNameToken str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="8fa94-830">要验证的名称标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-830">The name token to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-831">返回一个值，该值指示该字符串自变量是否是有效的 XML 名称标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-831">Returns a value indicating whether or not the string argument is a valid XML name token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-832">如果它是有效的名称标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-832">
              <see langword="true" /> if it is a valid name token; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-833">此方法使用[W3C XML 1.0 建议](http://go.microsoft.com/fwlink/?LinkId=49863)以确定名称标记是否有效。</span><span class="sxs-lookup"><span data-stu-id="8fa94-833">This method uses the [W3C XML 1.0 Recommendation](http://go.microsoft.com/fwlink/?LinkId=49863) to determine whether the name token is valid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-834">
            <paramref name="str" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-834">The <paramref name="str" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-835">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-835">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-836">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-836">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-837">测试当前内容节点是否是开始标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-837">Tests if the current content node is a start tag.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public virtual bool IsStartElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsStartElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStartElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStartElement();" />
      <MemberSignature Language="F#" Value="abstract member IsStartElement : unit -&gt; bool&#xA;override this.IsStartElement : unit -&gt; bool" Usage="xmlReader.IsStartElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-838">调用 <see cref="M:System.Xml.XmlReader.MoveToContent" /> 并测试当前内容节点是否是开始标记或空元素标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-838">Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the current content node is a start tag or empty element tag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-839">如果 <see cref="M:System.Xml.XmlReader.MoveToContent" /> 找到开始标记或空元素标记，则为 <see langword="true" />；如果找到不同于 <see langword="false" /> 的节点类型，则为 <see langword="XmlNodeType.Element" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-839">
              <see langword="true" /> if <see cref="M:System.Xml.XmlReader.MoveToContent" /> finds a start tag or empty element tag; <see langword="false" /> if a node type other than <see langword="XmlNodeType.Element" /> was found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-840">此方法将跳过的空白区域、 注释和处理指令之前读取器定位在内容节点上。</span><span class="sxs-lookup"><span data-stu-id="8fa94-840">This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</span></span> <span data-ttu-id="8fa94-841">然后，此方法测试如果当前节点为元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-841">The method then tests if the current node is an element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-842">下面的示例显示了每个元素的文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-842">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]
 [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  
  
 <span data-ttu-id="8fa94-843">该示例使用文件，`elems.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="8fa94-843">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#3](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/elems.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-844">在输入流中遇到不正确的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-844">Incorrect XML is encountered in the input stream.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-845">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-845">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-846">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-846">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.MoveToContent" />
      </Docs>
    </Member>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public virtual bool IsStartElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStartElement (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStartElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member IsStartElement : string -&gt; bool&#xA;override this.IsStartElement : string -&gt; bool" Usage="xmlReader.IsStartElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8fa94-847">与找到的元素的 <see langword="Name" /> 属性匹配的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-847">The string matched against the <see langword="Name" /> property of the element found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-848">调用 <see cref="M:System.Xml.XmlReader.MoveToContent" /> 并测试当前内容节点是否是开始标记或空元素标记，以及所找到元素的 <see cref="P:System.Xml.XmlReader.Name" /> 属性是否与给定的参数匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-848">Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the current content node is a start tag or empty element tag and if the <see cref="P:System.Xml.XmlReader.Name" /> property of the element found matches the given argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-849">如果生成的节点是一个元素，且 <see langword="true" /> 属性与指定的字符串匹配，则为 <see langword="Name" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-849">
              <see langword="true" /> if the resulting node is an element and the <see langword="Name" /> property matches the specified string.</span>
          </span>
          <span data-ttu-id="8fa94-850">如果找到 <see langword="false" /> 之外的节点类型，或者元素的 <see langword="XmlNodeType.Element" /> 属性与指定的字符串不匹配，则为 <see langword="Name" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-850">
              <see langword="false" /> if a node type other than <see langword="XmlNodeType.Element" /> was found or if the element <see langword="Name" /> property does not match the specified string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-851">此方法将跳过的空白区域、 注释和处理指令之前读取器定位在内容节点上。</span><span class="sxs-lookup"><span data-stu-id="8fa94-851">This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</span></span> <span data-ttu-id="8fa94-852">然后，此方法测试如果当前节点为元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-852">The method then tests if the current node is an element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-853">下面的示例显示价格的每个元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-853">The following example displays each price element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#17](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#17)]
 [!code-vb[XmlReaderBasic#17](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-854">在输入流中遇到不正确的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-854">Incorrect XML is encountered in the input stream.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-855">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-855">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-856">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-856">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.MoveToContent" />
      </Docs>
    </Member>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public virtual bool IsStartElement (string localname, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartElement(string localname, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStartElement (localname As String, ns As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStartElement(System::String ^ localname, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member IsStartElement : string * string -&gt; bool&#xA;override this.IsStartElement : string * string -&gt; bool" Usage="xmlReader.IsStartElement (localname, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname">
          <span data-ttu-id="8fa94-857">与找到的元素的 <see langword="LocalName" /> 属性匹配的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-857">The string to match against the <see langword="LocalName" /> property of the element found.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="8fa94-858">与找到的元素的 <see langword="NamespaceURI" /> 属性匹配的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-858">The string to match against the <see langword="NamespaceURI" /> property of the element found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-859">调用 <see cref="M:System.Xml.XmlReader.MoveToContent" /> 并测试当前内容节点是否是开始标记或空元素标记，以及所找到元素的 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 属性是否与给定的字符串匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-859">Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the current content node is a start tag or empty element tag and if the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element found match the given strings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-860">如果生成的节点是一个元素，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-860">
              <see langword="true" /> if the resulting node is an element.</span>
          </span>
          <span data-ttu-id="8fa94-861">如果找到 <see langword="false" /> 之外的节点类型，或者元素的 <see langword="XmlNodeType.Element" /> 和 <see langword="LocalName" /> 属性与指定的字符串不匹配，则为 <see langword="NamespaceURI" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-861">
              <see langword="false" /> if a node type other than <see langword="XmlNodeType.Element" /> was found or if the <see langword="LocalName" /> and <see langword="NamespaceURI" /> properties of the element do not match the specified strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-862">此方法将跳过的空白区域、 注释和处理指令之前读取器定位在内容节点上。</span><span class="sxs-lookup"><span data-stu-id="8fa94-862">This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</span></span> <span data-ttu-id="8fa94-863">然后，此方法测试如果当前节点为元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-863">The method then tests if the current node is an element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-864">在输入流中遇到不正确的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-864">Incorrect XML is encountered in the input stream.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-865">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-865">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-866">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-866">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.MoveToContent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-867">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-867">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-868">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-868">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-869">当在派生类中被重写时，获取此属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-869">When overridden in a derived class, gets the value of the attribute.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[int] { System::String ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Xml.XmlReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="8fa94-870">属性的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-870">The index of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-871">当在派生类中被重写时，获取具有指定索引的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-871">When overridden in a derived class, gets the value of the attribute with the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-872">指定的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-872">The value of the specified attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-873">此属性不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-873">This property does not move the reader.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-874">下面的示例显示了当前节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-874">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]
 [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-875">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-875">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-876">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-876">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.GetAttribute(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Xml.XmlReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8fa94-877">属性的限定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-877">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-878">当在派生类中被重写时，获取具有指定 <see cref="P:System.Xml.XmlReader.Name" /> 的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-878">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.Name" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-879">指定的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-879">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="8fa94-880">如果未找到该属性，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-880">If the attribute is not found, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-881">此属性不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-881">This property does not move the reader.</span></span>  
  
 <span data-ttu-id="8fa94-882">如果读取器定位在`DocumentType`节点，此方法可以用于获取的公共和系统文本，例如， `reader["PUBLIC"]`</span><span class="sxs-lookup"><span data-stu-id="8fa94-882">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader["PUBLIC"]`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-883">下面的示例获取 ISBN 属性的值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-883">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#7)]
 [!code-vb[XmlReaderBasic#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-884">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-884">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-885">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-885">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.GetAttribute(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string name, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : string" Usage="System.Xml.XmlReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8fa94-886">属性的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-886">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-887">属性的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-887">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-888">当在派生类中被重写时，获取具有指定 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-888">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-889">指定的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-889">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="8fa94-890">如果未找到该属性，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-890">If the attribute is not found, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-891">此属性不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-891">This property does not move the reader.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-892">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-892">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-893">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-893">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-894">当在派生类中被重写时，获取当前节点的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-894">When overridden in a derived class, gets the local name of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-895">移除了前缀的当前节点的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-895">The name of the current node with the prefix removed.</span>
          </span>
          <span data-ttu-id="8fa94-896">例如，<see langword="LocalName" />是<see langword="book" />元素<c> &lt;bk:book&gt;</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-896">For example, <see langword="LocalName" /> is <see langword="book" /> for the element <c>&lt;bk:book&gt;</c>.</span>
          </span>
          <span data-ttu-id="8fa94-897">对于没有名称的节点类型（如 <see langword="Text" />、<see langword="Comment" /> 等），该属性返回 <see langword="String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-897">For node types that do not have a name (like <see langword="Text" />, <see langword="Comment" />, and so on), this property returns <see langword="String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa94-898">下面的示例显示每个节点的本地名称并且，如果它们存在，前缀和命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="8fa94-898">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]
 [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  
  
 <span data-ttu-id="8fa94-899">该示例使用的文件，book2.xml，</span><span class="sxs-lookup"><span data-stu-id="8fa94-899">The example uses the file, book2.xml, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-900">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-900">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-901">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-901">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlReader.Name" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public abstract string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member LookupNamespace : string -&gt; string" Usage="xmlReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="8fa94-902">要解析其命名空间 URI 的前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-902">The prefix whose namespace URI you want to resolve.</span>
          </span>
          <span data-ttu-id="8fa94-903">若要匹配默认命名空间，请传递一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-903">To match the default namespace, pass an empty string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-904">当在派生类中被重写时，在当前元素的范围内解析命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-904">When overridden in a derived class, resolves a namespace prefix in the current element's scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-905">前缀映射到的命名空间 URI；如果未找到任何匹配的前缀，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-905">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-906">在下面的 XML 字符串，如果读取器定位在`href`特性，前缀`a`通过调用解决`reader.LookupNamespace("a")`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-906">In the following XML string, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace("a")`.</span></span> <span data-ttu-id="8fa94-907">返回的字符串是`urn:456`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-907">The returned string is `urn:456`.</span></span>  
  
```xml  
<root xmlns:a="urn:456">  
  <item>  
  <ref href="a:b"/>  
  </item>  
 </root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-908">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-908">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-909">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-909">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-910">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-910">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-911">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-911">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-912">当在派生类中被重写时，移动到指定的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-912">When overridden in a derived class, moves to the specified attribute.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public virtual void MoveToAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveToAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MoveToAttribute (i As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveToAttribute(int i);" />
      <MemberSignature Language="F#" Value="abstract member MoveToAttribute : int -&gt; unit&#xA;override this.MoveToAttribute : int -&gt; unit" Usage="xmlReader.MoveToAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="8fa94-913">属性的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-913">The index of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-914">当在派生类中被重写时，移动到具有指定索引的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-914">When overridden in a derived class, moves to the attribute with the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa94-915">下面的示例显示了当前节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-915">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#4)]
 [!code-vb[XmlReaderBasic#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-916">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-916">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-917">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-917">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8fa94-918">参数为负值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-918">The parameter has a negative value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member MoveToAttribute : string -&gt; bool" Usage="xmlReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8fa94-919">属性的限定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-919">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-920">当在派生类中被重写时，移动到具有指定 <see cref="P:System.Xml.XmlReader.Name" /> 的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-920">When overridden in a derived class, moves to the attribute with the specified <see cref="P:System.Xml.XmlReader.Name" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-921">如果找到了属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-921">
              <see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8fa94-922">如果为 <see langword="false" />，则读取器的位置未改变。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-922">If <see langword="false" />, the reader's position does not change.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-923">在调用`MoveToAttribute`、 <xref:System.Xml.XmlReader.Name%2A>， <xref:System.Xml.XmlReader.NamespaceURI%2A>，和<xref:System.Xml.XmlReader.Prefix%2A>属性反映该属性的属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-923">After calling `MoveToAttribute`, the <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-924">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-924">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-925">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-925">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-926">参数是空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-926">The parameter is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToAttribute(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToAttribute (name As String, ns As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member MoveToAttribute : string * string -&gt; bool" Usage="xmlReader.MoveToAttribute (name, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8fa94-927">属性的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-927">The local name of the attribute.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="8fa94-928">属性的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-928">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-929">当在派生类中被重写时，移动到具有指定的 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-929">When overridden in a derived class, moves to the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-930">如果找到了属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-930">
              <see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8fa94-931">如果为 <see langword="false" />，则读取器的位置未改变。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-931">If <see langword="false" />, the reader's position does not change.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-932">在调用`MoveToAttribute`、 <xref:System.Xml.XmlReader.Name%2A>， <xref:System.Xml.XmlReader.NamespaceURI%2A>，和<xref:System.Xml.XmlReader.Prefix%2A>属性反映该属性的属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-932">After calling `MoveToAttribute`, the <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-933">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-933">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-934">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-934">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-935">两个参数值均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-935">Both parameter values are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToContent">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeType MoveToContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xml.XmlNodeType MoveToContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToContent () As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeType MoveToContent();" />
      <MemberSignature Language="F#" Value="abstract member MoveToContent : unit -&gt; System.Xml.XmlNodeType&#xA;override this.MoveToContent : unit -&gt; System.Xml.XmlNodeType" Usage="xmlReader.MoveToContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-936">检查当前节点是否是内容（非空白文本、<see langword="CDATA" />、<see langword="Element" />、<see langword="EndElement" />、<see langword="EntityReference" /> 或 <see langword="EndEntity" />）节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-936">Checks whether the current node is a content (non-white space text, <see langword="CDATA" />, <see langword="Element" />, <see langword="EndElement" />, <see langword="EntityReference" />, or <see langword="EndEntity" />) node.</span>
          </span>
          <span data-ttu-id="8fa94-937">如果此节点不是内容节点，则读取器向前跳至下一个内容节点或文件结尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-937">If the node is not a content node, the reader skips ahead to the next content node or end of file.</span>
          </span>
          <span data-ttu-id="8fa94-938">它跳过以下类型的节点：<see langword="ProcessingInstruction" />、<see langword="DocumentType" />、<see langword="Comment" />、<see langword="Whitespace" /> 或 <see langword="SignificantWhitespace" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-938">It skips over nodes of the following type: <see langword="ProcessingInstruction" />, <see langword="DocumentType" />, <see langword="Comment" />, <see langword="Whitespace" />, or <see langword="SignificantWhitespace" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-939">此方法找到的当前节点的 <see cref="P:System.Xml.XmlReader.NodeType" />；如果读取器已到达输入流的末尾，则为 <see langword="XmlNodeType.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-939">The <see cref="P:System.Xml.XmlReader.NodeType" /> of the current node found by the method or <see langword="XmlNodeType.None" /> if the reader has reached the end of the input stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-940">如果当前节点是属性节点，则此方法将读取器移回拥有该属性的元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-940">If the current node is an attribute node, this method moves the reader back to the element that owns the attribute.</span></span>  
  
 <span data-ttu-id="8fa94-941">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.MoveToContentAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-941">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.MoveToContentAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-942">当你想要编写代码，可以跳过但不会破坏的随机 XML 标记，这非常有用。</span><span class="sxs-lookup"><span data-stu-id="8fa94-942">This is useful when you want to write code that can skip over random XML markup without breaking.</span></span> <span data-ttu-id="8fa94-943">例如，假设有以下代码：</span><span class="sxs-lookup"><span data-stu-id="8fa94-943">For example, suppose you have the following code:</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/VB/source.vb#1)]  
  
 <span data-ttu-id="8fa94-944">此代码可以处理但不会破坏以下输入：</span><span class="sxs-lookup"><span data-stu-id="8fa94-944">This code can handle the following inputs without breaking:</span></span>  
  
```xml  
<price>123.4</price>  
```  
  
 <span data-ttu-id="8fa94-945">和</span><span class="sxs-lookup"><span data-stu-id="8fa94-945">and</span></span>  
  
```xml  
<?xml version="1.0"><!DOCTYPE price SYSTEM  
  "abc"><price>123.4</price>  
```  
  
 <span data-ttu-id="8fa94-946">和</span><span class="sxs-lookup"><span data-stu-id="8fa94-946">and</span></span>  
  
```xml  
<?xml version="1.0"><!DOCTYPE price SYSTEM "abc"  
  [<!ENTTIY p  
  "123.4">]><price>&p;</price>  
```  
  
 <span data-ttu-id="8fa94-947">和</span><span class="sxs-lookup"><span data-stu-id="8fa94-947">and</span></span>  
  
```xml  
<!-- some test comment --><?processing  
  instruction?><price>123.4</price>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-948">在输入流中遇到不正确的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-948">Incorrect XML encountered in the input stream.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-949">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-949">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-950">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-950">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToContentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Xml.XmlNodeType&gt; MoveToContentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.Xml.XmlNodeType&gt; MoveToContentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToContentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToContentAsync () As Task(Of XmlNodeType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Xml::XmlNodeType&gt; ^ MoveToContentAsync();" />
      <MemberSignature Language="F#" Value="abstract member MoveToContentAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlNodeType&gt;&#xA;override this.MoveToContentAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlNodeType&gt;" Usage="xmlReader.MoveToContentAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;MoveToContentAsync&gt;c__async5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlNodeType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-951">异步检查当前节点是否为内容节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-951">Asynchronously checks whether the current node is a content node.</span>
          </span>
          <span data-ttu-id="8fa94-952">如果此节点不是内容节点，则读取器向前跳至下一个内容节点或文件结尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-952">If the node is not a content node, the reader skips ahead to the next content node or end of file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-953">此方法找到的当前节点的 <see cref="P:System.Xml.XmlReader.NodeType" />；如果读取器已到达输入流的末尾，则为 <see langword="XmlNodeType.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-953">The <see cref="P:System.Xml.XmlReader.NodeType" /> of the current node found by the method or <see langword="XmlNodeType.None" /> if the reader has reached the end of the input stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-954">这是异步版本<xref:System.Xml.XmlReader.MoveToContent%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-954">This is the asynchronous version of <xref:System.Xml.XmlReader.MoveToContent%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-955">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-955">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-956">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-956">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-957">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-957">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public abstract bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToElement();" />
      <MemberSignature Language="F#" Value="abstract member MoveToElement : unit -&gt; bool" Usage="xmlReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-958">当在派生类中被重写时，移动到包含当前属性节点的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-958">When overridden in a derived class, moves to the element that contains the current attribute node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-959">如果读取器定位在属性上（读取器移动到拥有该属性的元素），则为 <see langword="true" />；如果读取器未定位在属性上（读取器的位置不更改），则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-959">
              <see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-960">使用此方法在其属性导航后返回到该元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-960">Use this method to return to an element after navigating through its attributes.</span></span> <span data-ttu-id="8fa94-961">此方法将读取器移动到以下节点类型之一： `Element`， `DocumentType`，或`XmlDeclaration`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-961">This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-962">下面的示例显示了当前节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-962">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#4)]
 [!code-vb[XmlReaderBasic#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-963">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-963">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-964">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-964">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="abstract member MoveToFirstAttribute : unit -&gt; bool" Usage="xmlReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-965">当在派生类中被重写时，移动到第一个属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-965">When overridden in a derived class, moves to the first attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-966">如果属性存在（读取器移动到第一个属性），则为 <see langword="true" />；否则为 <see langword="false" />（读取器的位置不更改）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-966">
              <see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa94-967">下面的示例获取第一个属性的值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-967">The following example gets the value of the first attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#5)]
 [!code-vb[XmlReaderBasic#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-968">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-968">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-969">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-969">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="abstract member MoveToNextAttribute : unit -&gt; bool" Usage="xmlReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-970">当在派生类中被重写时，移动到下一个属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-970">When overridden in a derived class, moves to the next attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-971">如果存在下一个属性，则为 <see langword="true" />；如果没有其他属性，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-971">
              <see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-972">如果当前节点是元素节点，则此方法等效于<xref:System.Xml.XmlReader.MoveToFirstAttribute%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-972">If the current node is an element node, this method is equivalent to <xref:System.Xml.XmlReader.MoveToFirstAttribute%2A>.</span></span> <span data-ttu-id="8fa94-973">如果`MoveToNextAttribute`返回`true`，读取器移动到下一步属性; 否则，读取器的位置不会更改。</span><span class="sxs-lookup"><span data-stu-id="8fa94-973">If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-974">下面的示例显示了当前节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-974">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]
 [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-975">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-975">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-976">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-976">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlReader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-977">当在派生类中被重写时，获取当前节点的限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-977">When overridden in a derived class, gets the qualified name of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-978">当前节点的限定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-978">The qualified name of the current node.</span>
          </span>
          <span data-ttu-id="8fa94-979">例如，<see langword="Name" />是<see langword="bk:book" />元素<c> &lt;bk:book&gt;</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-979">For example, <see langword="Name" /> is <see langword="bk:book" /> for the element <c>&lt;bk:book&gt;</c>.</span>
          </span>
          <span data-ttu-id="8fa94-980">返回的名称取决于节点的 <see cref="P:System.Xml.XmlReader.NodeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-980">The name returned is dependent on the <see cref="P:System.Xml.XmlReader.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="8fa94-981">下列节点类型返回所列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-981">The following node types return the listed values.</span>
          </span>
          <span data-ttu-id="8fa94-982">所有其他节点类型返回空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-982">All other node types return an empty string.</span>
          </span>
          <span data-ttu-id="8fa94-983">
            <list type="table">
              <listheader>
                <term> 节点类型</term>
                <description>名称</description>
              </listheader>
              <item>
                <term>
                  <see langword="Attribute" />
                </term>
                <description>属性的名称。</description>
              </item>
              <item>
                <term>
                  <see langword="DocumentType" />
                </term>
                <description> 文档类型名称。</description>
              </item>
              <item>
                <term>
                  <see langword="Element" />
                </term>
                <description> 标记名称。</description>
              </item>
              <item>
                <term>
                  <see langword="EntityReference" />
                </term>
                <description> 引用的实体名称。</description>
              </item>
              <item>
                <term>
                  <see langword="ProcessingInstruction" />
                </term>
                <description> 处理指令的目标。</description>
              </item>
              <item>
                <term>
                  <see langword="XmlDeclaration" />
                </term>
                <description> 文字字符串<see langword="xml" />。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-983">
              <list type="table">
                <listheader>
                  <term> Node type  </term>
                  <description> Name  </description>
                </listheader>
                <item>
                  <term>
                    <see langword="Attribute" />
                  </term>
                  <description> The name of the attribute.  </description>
                </item>
                <item>
                  <term>
                    <see langword="DocumentType" />
                  </term>
                  <description> The document type name.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Element" />
                  </term>
                  <description> The tag name.  </description>
                </item>
                <item>
                  <term>
                    <see langword="EntityReference" />
                  </term>
                  <description> The name of the entity referenced.  </description>
                </item>
                <item>
                  <term>
                    <see langword="ProcessingInstruction" />
                  </term>
                  <description> The target of the processing instruction.  </description>
                </item>
                <item>
                  <term>
                    <see langword="XmlDeclaration" />
                  </term>
                  <description> The literal string <see langword="xml" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa94-984">下面的示例读取 XML 文件，并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-984">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="8fa94-985">此示例使用`items.xml`文件。</span><span class="sxs-lookup"><span data-stu-id="8fa94-985">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-986">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-986">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-987">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-987">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlReader.LocalName" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public abstract string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-988">当在派生类中被重写时，获取读取器定位在其上的节点的命名空间 URI（采用 W3C 命名空间规范中定义的形式）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-988">When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-989">当前节点的命名空间 URI；否则为空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-989">The namespace URI of the current node; otherwise an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-990">此属性是与相关`Element`和`Attribute`仅限节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-990">This property is relevant to `Element` and `Attribute` nodes only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-991">下面的示例显示每个节点的本地名称并且，如果它们存在，前缀和命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="8fa94-991">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]
 [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  
  
 <span data-ttu-id="8fa94-992">该示例使用的文件，book2.xml，</span><span class="sxs-lookup"><span data-stu-id="8fa94-992">The example uses the file, book2.xml, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-993">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-993">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-994">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-994">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-995">当在派生类中被重写时，获取与该实现关联的 <see cref="T:System.Xml.XmlNameTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-995">When overridden in a derived class, gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-996">
            <see langword="XmlNameTable" />，它使你能够获取该节点内字符串的原子化版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-996">The <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-997">从返回的所有节点和属性名称<xref:System.Xml.XmlReader>使用原子化`NameTable`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-997">All node and attribute names returned from <xref:System.Xml.XmlReader> are atomized using the `NameTable`.</span></span> <span data-ttu-id="8fa94-998">当多次返回相同的名称 (例如， `Customer`)，然后相同`String`为该名称将返回的对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-998">When the same name is returned multiple times (for example, `Customer`), then the same `String` object will be returned for that name.</span></span> <span data-ttu-id="8fa94-999">这使您可以编写高效的代码，未对象上而不是昂贵的字符串比较这些字符串的比较。</span><span class="sxs-lookup"><span data-stu-id="8fa94-999">This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1000">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1000">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1001">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1001">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1002">当在派生类中被重写时，获取当前节点的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1002">When overridden in a derived class, gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-1003">指定当前节点的类型的枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1003">One of the enumeration values that specify the type of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa94-1004">下面的示例读取 XML 文件，并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1004">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="8fa94-1005">此示例使用`items.xml`文件。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1005">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1006">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1006">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1007">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1007">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public abstract string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1008">当在派生类中被重写时，获取与当前节点关联的命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1008">When overridden in a derived class, gets the namespace prefix associated with the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-1009">与当前节点关联的命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1009">The namespace prefix associated with the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa94-1010">下面的示例显示每个节点的本地名称并且，如果它们存在，前缀和命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1010">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]
 [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  
  
 <span data-ttu-id="8fa94-1011">该示例使用的文件，book2.xml，</span><span class="sxs-lookup"><span data-stu-id="8fa94-1011">The example uses the file, book2.xml, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1012">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1012">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1013">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1013">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public virtual char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlReader.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1014">当在派生类中被重写时，获取用于括住特性节点值的引号字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1014">When overridden in a derived class, gets the quotation mark character used to enclose the value of an attribute node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-1015">用于括起属性节点的值的引号字符（" 或 '）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1015">The quotation mark character (" or ') used to enclose the value of an attribute node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1016">此属性仅适用于属性节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1016">This property applies only to an attribute node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1017">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1017">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1018">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1018">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="xmlReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1019">当在派生类中被重写时，从流中读取下一个节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1019">When overridden in a derived class, reads the next node from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1020">如果已成功读取下一节点，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1020">
              <see langword="true" /> if the next node was read successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1021">当<xref:System.Xml.XmlReader>是首次创建和初始化，没有可用信息。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1021">When an <xref:System.Xml.XmlReader> is first created and initialized, there is no information available.</span></span> <span data-ttu-id="8fa94-1022">必须调用<xref:System.Xml.XmlReader.Read%2A>读取的第一个节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1022">You must call <xref:System.Xml.XmlReader.Read%2A> to read the first node.</span></span> <span data-ttu-id="8fa94-1023"><xref:System.Xml.XmlReader.Read%2A>方法设置要启动的 XML 读取器的状态<xref:System.Xml.ReadState>遍历 XML 文件按顺序直至其达到的文件，此时该方法返回的值的末尾`false`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1023">The <xref:System.Xml.XmlReader.Read%2A> method sets the state of the XML reader to initiate <xref:System.Xml.ReadState> and moves through the XML file sequentially until it reaches the end of the file, at which point the method returns a value of `false`.</span></span>  
  
 <span data-ttu-id="8fa94-1024">此方法需要至少四个字节从数据流才能开始分析。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1024">This method requires at least four bytes from the data stream in order to begin parsing.</span></span> <span data-ttu-id="8fa94-1025">如果返回少于四个字节，并且在流中没有更多的数据，该方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1025">If fewer than four bytes are returned and there is no more data in the stream, the method returns `false`.</span></span> <span data-ttu-id="8fa94-1026">如果在流中没有更多的数据，该方法将阻止分析直到收到的第四个字节。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1026">If there is more data in the stream, the method will block parsing until receipt of the fourth byte.</span></span>  
  
 <span data-ttu-id="8fa94-1027">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.ReadAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1027">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-1028">下面的示例读取 XML 文件，并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1028">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="8fa94-1029">此示例使用`items.xml`文件。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1029">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 <span data-ttu-id="8fa94-1030">**输出：**</span><span class="sxs-lookup"><span data-stu-id="8fa94-1030">**Output:**</span></span>  
  
```  
<Item>Test with an entity: 123</Item><Item>Test with a child element <more> stuff</Item><Item>Test with a CDATA section <![CDATA[<456>]]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1031">分析 XML 时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1031">An error occurred while parsing the XML.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1032">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1032">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1033">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1033">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; ReadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync () As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.ReadAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="xmlReader.ReadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1034">异步读取该流的下一个节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1034">Asynchronously reads the next node from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1035">如果成功读取了下一个节点，则为 <see langword="true" />；如果没有其他节点可读取，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1035">
              <see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1036">这是异步版本<xref:System.Xml.XmlReader.Read%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1036">This is the asynchronous version of <xref:System.Xml.XmlReader.Read%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-1037">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1037">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1038">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1038">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-1039">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1039">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public abstract bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="abstract member ReadAttributeValue : unit -&gt; bool" Usage="xmlReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1040">当在派生类中被重写时，将属性值解析为一个或多个 <see langword="Text" />、<see langword="EntityReference" /> 或 <see langword="EndEntity" /> 节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1040">When overridden in a derived class, parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1041">如果有可返回的节点，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1041">
              <see langword="true" /> if there are nodes to return.</span>
          </span>
          <span data-ttu-id="8fa94-1042">如果进行初始调用时读取器不是定位在属性节点上，或者如果已读取了所有属性值，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1042">
              <see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span>
          </span>
          <span data-ttu-id="8fa94-1043">如果是空属性（如 <c>misc=""</c>），则返回 <see langword="true" />，同时返回值为 <see langword="String.Empty" /> 的单个节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1043">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of <see langword="String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1044">使用此方法之后调用<xref:System.Xml.XmlReader.MoveToAttribute%2A>通读构成的属性值的文本或实体引用节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1044">Use this method after calling <xref:System.Xml.XmlReader.MoveToAttribute%2A> to read through the text or entity reference nodes that make up the attribute value.</span></span> <span data-ttu-id="8fa94-1045"><xref:System.Xml.XmlReader.Depth%2A>属性值节点是一个加上属性节点的深度; 它递增和递减由一个单步执行和跳出执行常规实体引用时。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1045">The <xref:System.Xml.XmlReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1046">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1046">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1047">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1047">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAs">
      <MemberSignature Language="C#" Value="public virtual object ReadContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadContentAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAs (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadContentAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj&#xA;override this.ReadContentAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlReader.ReadContentAs (returnType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType">
          <span data-ttu-id="8fa94-1048">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1048">The type of the value to be returned.</span>
          </span>
          <span data-ttu-id="8fa94-1049">注意：随着 .NET Framework 3.5 的发布，<c>returnType</c> 参数的值现在可以是 <see cref="T:System.DateTimeOffset" /> 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1049">**Note** With the release of the .NET Framework 3.5, the value of the <c>returnType</c> parameter can now be the <see cref="T:System.DateTimeOffset" /> type.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="8fa94-1050">一个 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象，用于解析与类型转换有关的任何命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1050">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span>
          </span>
          <span data-ttu-id="8fa94-1051">例如，将 <see cref="T:System.Xml.XmlQualifiedName" /> 对象转换为 <c>xs:string</c> 时可以使用此对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1051">For example, this can be used when converting an <see cref="T:System.Xml.XmlQualifiedName" /> object to an <c>xs:string</c>.</span>
          </span>
          <span data-ttu-id="8fa94-1052">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1052">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1053">将内容作为指定类型的对象读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1053">Reads the content as an object of the type specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1054">已转换为请求类型的串联文本内容或属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1054">The concatenated text content or attribute value converted to the requested type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1055">此方法读取读取器当前位置的文本内容，并将其转换为所请求的返回类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1055">This method reads the text content at the current reader position and converts it to the requested return type.</span></span> <span data-ttu-id="8fa94-1056">文本、空白、有效空白和 CDATA 节串联在一起。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1056">Text, white space, significant white space and CDATA sections are concatenated.</span></span> <span data-ttu-id="8fa94-1057">跳过注释和处理指令，并自动解析实体引用。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1057">Comments and processing instructions are skipped and entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="8fa94-1058">此方法用于读取、 将转换如有必要，以及返回当前节点中的原子值项内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1058">This method is used to read, convert if necessary, and return atomic value items from the current node content.</span></span> <span data-ttu-id="8fa94-1059">返回输入的类型是否为有效的映射的当前节点然后包含当前节点的值的目标类型的实例的类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1059">If the input type is a valid mappings for the type of the current node then an instance of the target type containing the value of the current node is returned.</span></span> <span data-ttu-id="8fa94-1060">请参阅备注部分中的<xref:System.Xml.XmlReader>referencepage 有关默认映射的列表。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1060">See the Remarks section in the <xref:System.Xml.XmlReader> referencepage for a list of the default mappings.</span></span>  
  
 <span data-ttu-id="8fa94-1061">例如，如果你有以下 XML 文本：</span><span class="sxs-lookup"><span data-stu-id="8fa94-1061">For example, if you had the following XML text:</span></span>  
  
```xml  
<elem>123 <!-- comment --> <?pi my_text?> 456 <?pi another_pi?></elem>  
```  
  
 <span data-ttu-id="8fa94-1062">如果数据类型化和一个字符串数组，提供给<xref:System.Xml.XmlReader.ReadContentAs%2A>从根据有效的 CLR 类型映射的列表的字符串转换方法调用，则整数值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1062">If the data is typed and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call, then the integer values are converted from strings according to the list of valid CLR type mappings.</span></span>  
  
 <span data-ttu-id="8fa94-1063">如果数据将非类型化，并且一个字符串数组，提供给<xref:System.Xml.XmlReader.ReadContentAs%2A>方法调用，则内容将被分析为单独的字符串。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1063">If the data is untyped and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call, then the content is parsed into separate strings.</span></span> <span data-ttu-id="8fa94-1064">包含两个字符串的数组被返回"123"和"456"的值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1064">An array containing two strings is returned with the values "123" and "456".</span></span> <span data-ttu-id="8fa94-1065">从内容不保留空格。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1065">The spaces are not preserved from the content.</span></span>  
  
 <span data-ttu-id="8fa94-1066">通常在读取非类型化的数据的内容被分析根据所提供的类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1066">In general when reading untyped data the content is parsed according to the supplied type.</span></span> <span data-ttu-id="8fa94-1067">例如，如果一个整数数组提供给<xref:System.Xml.XmlReader.ReadContentAs%2A>方法调用，则字符串解析为整数的数组{123,456}。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1067">For example, if an integer array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call then the string is parsed into an array of integers {123,456}.</span></span>  
  
 <span data-ttu-id="8fa94-1068">在下面的示例 XML 文本不是由空格分隔</span><span class="sxs-lookup"><span data-stu-id="8fa94-1068">In the following example the XML text is not separated by spaces</span></span>  
  
```xml  
<elem>123<!-- comment --><?pi my_text?>456789<?pi another_pi?></elem>  
```  
  
 <span data-ttu-id="8fa94-1069">如果有非类型化的内容和一个字符串数组，提供给<xref:System.Xml.XmlReader.ReadContentAs%2A>方法然后调用包含一个具有值"123456789"返回串联的字符串的数组。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1069">If the content is untyped and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call then an array containing one concatenated string is returned with the value "123456789".</span></span>  
  
 <span data-ttu-id="8fa94-1070">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1070">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="8fa94-1071">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="8fa94-1071">XmlNodeType</span></span>|<span data-ttu-id="8fa94-1072">返回值</span><span class="sxs-lookup"><span data-stu-id="8fa94-1072">Return value</span></span>|<span data-ttu-id="8fa94-1073">读取器行为</span><span class="sxs-lookup"><span data-stu-id="8fa94-1073">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="8fa94-1074">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1074">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="8fa94-1075">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1075">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1076">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1076">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="8fa94-1077">与调用相同`XmlConvert.ToXxx`上属性值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1077">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="8fa94-1078">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1078">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="8fa94-1079">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1079">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="8fa94-1080">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1080">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1081">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1081">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="8fa94-1082">空字符串。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1082">An empty string.</span></span>|<span data-ttu-id="8fa94-1083">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1083">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="8fa94-1084">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1084">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="8fa94-1085">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1085">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="8fa94-1086">有关详细信息，请参阅备注部分的<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1086">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1087">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.ReadContentAsAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1087">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-1088">下面的示例使用<xref:System.Xml.XmlReader.ReadContentAs%2A>方法以返回到字符串对象的数组的颜色元素的内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1088">The following example uses the <xref:System.Xml.XmlReader.ReadContentAs%2A> method to return the contents of the colors element into an array of string objects.</span></span>  
  
 [!code-csharp[XmlReader.ReadContentAs#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadContentAs/CS/readContentAs.cs#2)]
 [!code-vb[XmlReader.ReadContentAs#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadContentAs/VB/readContentAs.vb#2)]  
  
 <span data-ttu-id="8fa94-1089">示例使用 `dataFile_2.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1089">The example uses the `dataFile_2.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadContentAs#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadContentAs/XML/dataFile_2.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8fa94-1090">内容格式不是目标类型的正确格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1090">The content is not in the correct format for the target type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8fa94-1091">试图进行的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1091">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1092">
            <paramref name="returnType" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1092">The <paramref name="returnType" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1093">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1093">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1094">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1094">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8fa94-1095">读取 <see langword="Decimal.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1095">Read <see langword="Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadContentAsAsync (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadContentAsAsync(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsAsync (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadContentAsAsync(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsAsync : Type * System.Xml.IXmlNamespaceResolver -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.ReadContentAsAsync : Type * System.Xml.IXmlNamespaceResolver -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlReader.ReadContentAsAsync (returnType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadContentAsAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType">
          <span data-ttu-id="8fa94-1096">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1096">The type of the value to be returned.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="8fa94-1097">一个 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象，用于解析与类型转换有关的任何命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1097">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1098">将内容作为指定类型的对象异步读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1098">Asynchronously reads the content as an object of the type specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1099">已转换为请求类型的串联文本内容或属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1099">The concatenated text content or attribute value converted to the requested type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1100">这是异步版本<xref:System.Xml.XmlReader.ReadContentAs%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1100">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAs%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-1101">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1101">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1102">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1102">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-1103">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1103">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public virtual int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBase64 : byte[] * int * int -&gt; int&#xA;override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8fa94-1104">结果文本复制到的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1104">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="8fa94-1105">此值不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1105">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8fa94-1106">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1106">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8fa94-1107">要复制到缓冲区的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1107">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="8fa94-1108">此方法返回复制的实际字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1108">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1109">读取内容并返回 Base64 解码的二进制字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1109">Reads the content and returns the Base64 decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1110">写入缓冲区的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1110">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1111">此方法的内容流式处理，将解码`Base64`内容，并返回已解码的二进制字节 (例如，内联`Base64`编码的 GIF 图像) 到缓冲区。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1111">This method streams the content, decodes the `Base64` content, and returns the decoded binary bytes (for example, an inline `Base64` encoded GIF image) into the buffer.</span></span> <span data-ttu-id="8fa94-1112">可以连续调用此方法，以读取大的嵌入文本流。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1112">This method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="8fa94-1113">有关详细信息，请参阅 RFC 1521"MIME （多用途 Internet 邮件扩展） 部分一个： 机制来指定以及描述 Internet 消息正文的格式"。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1113">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="8fa94-1114">你可以获取从 Rfc[征求意见文档网站](http://go.microsoft.com/fwlink/?LinkId=37119)。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1114">You can obtain RFCs from the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkId=37119).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8fa94-1115">不应访问的任何读取器属性之间调用<xref:System.Xml.XmlReader.ReadContentAsBase64%2A>方法，直到该方法返回值`0`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1115">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A> method until the method returns the value `0`.</span></span>  
  
 <span data-ttu-id="8fa94-1116">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="8fa94-1116">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="8fa94-1117"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> 返回的值`0`时它已达到它正在操作的字节流的末尾。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1117"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> returns the value `0` when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="8fa94-1118">读取器定位在的第一个非内容节点上。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1118">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="8fa94-1119">如果您要求更少，或的字节数比流读取器将保留在当前位置中剩余的精确数目。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1119">If you ask for fewer, or the exact number of, bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="8fa94-1120"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> 不支持对以下 XML 节点类型： `Element`， `XmlDeclaration`， `None`， `Document`， `DocumentType`， `Notation`， `Entity`， `DocumentFragment`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1120"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span></span>  
  
 <span data-ttu-id="8fa94-1121">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.ReadContentAsBase64Async%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1121">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsBase64Async%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1122">
            <paramref name="buffer" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1122">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1123">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1123">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1124">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1124">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8fa94-1125">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1125">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8fa94-1126">
            <see cref="T:System.Xml.XmlReader" /> 实现不支持此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1126">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadContentAsBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadContentAsBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadContentAsBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadContentAsBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadContentAsBase64Async (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8fa94-1127">结果文本复制到的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1127">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="8fa94-1128">此值不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1128">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8fa94-1129">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1129">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8fa94-1130">要复制到缓冲区的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1130">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="8fa94-1131">此方法返回复制的实际字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1131">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1132">异步读取内容并返回 Base64 解码的二进制字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1132">Asynchronously reads the content and returns the Base64 decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1133">写入缓冲区的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1133">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1134">这是异步版本<xref:System.Xml.XmlReader.ReadContentAsBase64%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1134">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsBase64%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-1135">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1135">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1136">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1136">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-1137">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1137">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public virtual int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBinHex : byte[] * int * int -&gt; int&#xA;override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8fa94-1138">结果文本复制到的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1138">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="8fa94-1139">此值不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1139">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8fa94-1140">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1140">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8fa94-1141">要复制到缓冲区的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1141">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="8fa94-1142">此方法返回复制的实际字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1142">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1143">读取内容并返回 <see langword="BinHex" /> 解码的二进制字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1143">Reads the content and returns the <see langword="BinHex" /> decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1144">写入缓冲区的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1144">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1145">此方法的内容流式处理，将解码`BinHex`内容，并返回已解码的二进制字节 (例如，内联`BinHex`编码的 GIF 图像) 到缓冲区。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1145">This method streams the content, decodes the `BinHex` content, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span> <span data-ttu-id="8fa94-1146">可以连续调用此方法，以读取大的嵌入文本流。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1146">This method can be called successively to read large streams of embedded text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8fa94-1147">不应访问的任何读取器属性之间调用<xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>方法，直到该方法返回值`0`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1147">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> method until the method returns the value `0`.</span></span>  
  
 <span data-ttu-id="8fa94-1148">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="8fa94-1148">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="8fa94-1149"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> 返回的值`0`时它已达到它正在操作的字节流的末尾。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1149"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> returns the value `0` when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="8fa94-1150">读取器定位在的第一个非内容节点上。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1150">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="8fa94-1151">如果你请求更少，或者在当前位置保持的字节数比流中读取器剩余的精确数目。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1151">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="8fa94-1152"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> 不支持对以下 XML 节点类型： `Element`， `XmlDeclaration`， `None`， `Document`， `DocumentType`， `Notation, Entity`， `DocumentFragment`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1152"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation, Entity`, `DocumentFragment`.</span></span>  
  
 <span data-ttu-id="8fa94-1153">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.ReadContentAsBinHexAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1153">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsBinHexAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1154">
            <paramref name="buffer" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1154">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1155">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1155">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1156">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1156">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8fa94-1157">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1157">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8fa94-1158">
            <see cref="T:System.Xml.XmlReader" /> 实现不支持此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1158">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadContentAsBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadContentAsBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadContentAsBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadContentAsBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadContentAsBinHexAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8fa94-1159">结果文本复制到的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1159">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="8fa94-1160">此值不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1160">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8fa94-1161">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1161">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8fa94-1162">要复制到缓冲区的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1162">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="8fa94-1163">此方法返回复制的实际字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1163">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1164">异步读取内容并返回 <see langword="BinHex" /> 解码的二进制字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1164">Asynchronously reads the content and returns the <see langword="BinHex" /> decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1165">写入缓冲区的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1165">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1166">这是异步版本<xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1166">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-1167">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1167">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1168">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1168">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-1169">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1169">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadContentAsBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadContentAsBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadContentAsBoolean();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBoolean : unit -&gt; bool&#xA;override this.ReadContentAsBoolean : unit -&gt; bool" Usage="xmlReader.ReadContentAsBoolean " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1170">将当前位置的文本内容作为 <see langword="Boolean" /> 读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1170">Reads the text content at the current position as a <see langword="Boolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1171">作为 <see cref="T:System.Boolean" /> 对象的文本内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1171">The text content as a <see cref="T:System.Boolean" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1172">此方法将文本、 空白、 有效空白和 CDATA 节连接在一起，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1172">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="8fa94-1173">实体引用将自动解决。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1173">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="8fa94-1174">如果内容类型`xsd:boolean`，则读取器返回取消装箱<xref:System.Boolean>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1174">If the content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object.</span></span> <span data-ttu-id="8fa94-1175">如果内容未类型化`xsd:boolean`，读取器将尝试将其转换为<xref:System.Boolean>根据定义的规则的对象[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1175">If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1176">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1176">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="8fa94-1177">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="8fa94-1177">XmlNodeType</span></span>|<span data-ttu-id="8fa94-1178">返回值</span><span class="sxs-lookup"><span data-stu-id="8fa94-1178">Return value</span></span>|<span data-ttu-id="8fa94-1179">读取器行为</span><span class="sxs-lookup"><span data-stu-id="8fa94-1179">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="8fa94-1180">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1180">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="8fa94-1181">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1181">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1182">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1182">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="8fa94-1183">与调用相同`XmlConvert.ToXxx`上属性值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1183">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="8fa94-1184">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1184">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="8fa94-1185">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1185">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="8fa94-1186">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1186">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1187">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1187">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="8fa94-1188">空字符串。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1188">An empty string.</span></span>|<span data-ttu-id="8fa94-1189">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1189">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="8fa94-1190">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1190">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="8fa94-1191">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1191">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="8fa94-1192">有关详细信息，请参阅<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1192">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-1193">下面的示例使用<xref:System.Xml.XmlReader.ReadContentAsBoolean%2A>方法来读取特性作为 B`oolean`值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1193">The following example uses the <xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> method to read the attribute as a B`oolean` value.</span></span>  
  
 [!code-csharp[XmlReader.ReadContentAs#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadContentAs/CS/readContentAs.cs#1)]
 [!code-vb[XmlReader.ReadContentAs#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadContentAs/VB/readContentAs.vb#1)]  
  
 <span data-ttu-id="8fa94-1194">示例使用 `dataFile_2.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1194">The example uses the `dataFile_2.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadContentAs#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadContentAs/XML/dataFile_2.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8fa94-1195">试图进行的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1195">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8fa94-1196">该字符串格式无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1196">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1197">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1197">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1198">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1198">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ReadContentAsDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ReadContentAsDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDateTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ReadContentAsDateTime();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsDateTime : unit -&gt; DateTime&#xA;override this.ReadContentAsDateTime : unit -&gt; DateTime" Usage="xmlReader.ReadContentAsDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1199">将当前位置的文本内容作为 <see cref="T:System.DateTime" /> 对象读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1199">Reads the text content at the current position as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1200">作为 <see cref="T:System.DateTime" /> 对象的文本内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1200">The text content as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1201">此方法将文本、 空白、 有效空白和 CDATA 节连接在一起，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1201">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="8fa94-1202">实体引用将自动解决。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1202">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="8fa94-1203">如果内容类型`xsd:dateTime`，则读取器返回取消装箱<xref:System.DateTime>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1203">If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object.</span></span> <span data-ttu-id="8fa94-1204">如果内容未类型化`xsd:dateTime`，读取器将尝试将其转换为<xref:System.DateTime>根据定义的规则的对象[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1204">If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8fa94-1205">如果内容类型化为 <xref:System.DateTime.Year%2A?displayProperty=nameWithType>，则不能使用 `xsd:gMonthDay` 值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1205">You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value when the content is typed as `xsd:gMonthDay`.</span></span> <span data-ttu-id="8fa94-1206"><xref:System.Xml.XmlReader> 始终设置<xref:System.DateTime.Year%2A?displayProperty=nameWithType>在这种情况下为 1904年值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1206"><xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value to 1904 in this case.</span></span>  
  
 <span data-ttu-id="8fa94-1207">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1207">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="8fa94-1208">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="8fa94-1208">XmlNodeType</span></span>|<span data-ttu-id="8fa94-1209">返回值</span><span class="sxs-lookup"><span data-stu-id="8fa94-1209">Return value</span></span>|<span data-ttu-id="8fa94-1210">读取器行为</span><span class="sxs-lookup"><span data-stu-id="8fa94-1210">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="8fa94-1211">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1211">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="8fa94-1212">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1212">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1213">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1213">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="8fa94-1214">与调用相同`XmlConvert.ToXxx`上属性值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1214">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="8fa94-1215">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1215">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="8fa94-1216">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1216">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="8fa94-1217">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1217">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1218">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1218">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="8fa94-1219">空字符串。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1219">An empty string.</span></span>|<span data-ttu-id="8fa94-1220">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1220">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="8fa94-1221">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1221">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="8fa94-1222">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1222">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="8fa94-1223">有关详细信息，请参阅<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1223">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8fa94-1224">试图进行的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1224">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8fa94-1225">该字符串格式无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1225">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1226">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1226">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1227">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1227">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDateTimeOffset">
      <MemberSignature Language="C#" Value="public virtual DateTimeOffset ReadContentAsDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTimeOffset ReadContentAsDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDateTimeOffset () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTimeOffset ReadContentAsDateTimeOffset();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsDateTimeOffset : unit -&gt; DateTimeOffset&#xA;override this.ReadContentAsDateTimeOffset : unit -&gt; DateTimeOffset" Usage="xmlReader.ReadContentAsDateTimeOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1228">将当前位置的文本内容作为 <see cref="T:System.DateTimeOffset" /> 对象读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1228">Reads the text content at the current position as a <see cref="T:System.DateTimeOffset" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1229">作为 <see cref="T:System.DateTimeOffset" /> 对象的文本内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1229">The text content as a <see cref="T:System.DateTimeOffset" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1230">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1230">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1231">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1231">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadContentAsDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadContentAsDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadContentAsDecimal();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsDecimal : unit -&gt; decimal&#xA;override this.ReadContentAsDecimal : unit -&gt; decimal" Usage="xmlReader.ReadContentAsDecimal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1232">将当前位置的文本内容作为 <see cref="T:System.Decimal" /> 对象读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1232">Reads the text content at the current position as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1233">作为 <see cref="T:System.Decimal" /> 对象的当前位置的文本内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1233">The text content at the current position as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1234">此方法将文本、 空白、 有效空白和 CDATA 节连接在一起，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1234">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="8fa94-1235">实体引用将自动解决。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1235">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="8fa94-1236">如果内容类型`xsd:decimal`，则读取器返回取消装箱<xref:System.Decimal>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1236">If the content is typed `xsd:decimal`, the reader returns an unboxed <xref:System.Decimal> object.</span></span> <span data-ttu-id="8fa94-1237">如果内容未类型化`xsd:decimal`，读取器将尝试将其转换为<xref:System.Decimal>根据定义的规则的对象[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1237">If the content is not typed `xsd:decimal`, the reader attempts to convert it to a <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1238">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1238">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="8fa94-1239">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="8fa94-1239">XmlNodeType</span></span>|<span data-ttu-id="8fa94-1240">返回值</span><span class="sxs-lookup"><span data-stu-id="8fa94-1240">Return value</span></span>|<span data-ttu-id="8fa94-1241">读取器行为</span><span class="sxs-lookup"><span data-stu-id="8fa94-1241">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="8fa94-1242">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1242">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="8fa94-1243">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1243">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1244">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1244">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="8fa94-1245">与调用相同`XmlConvert.ToXxx`上属性值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1245">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="8fa94-1246">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1246">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="8fa94-1247">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1247">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="8fa94-1248">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1248">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1249">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1249">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="8fa94-1250">空字符串。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1250">An empty string.</span></span>|<span data-ttu-id="8fa94-1251">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1251">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="8fa94-1252">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1252">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="8fa94-1253">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1253">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="8fa94-1254">有关详细信息，请参阅<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1254">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8fa94-1255">试图进行的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1255">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8fa94-1256">该字符串格式无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1256">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1257">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1257">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1258">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1258">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadContentAsDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadContentAsDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadContentAsDouble();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsDouble : unit -&gt; double&#xA;override this.ReadContentAsDouble : unit -&gt; double" Usage="xmlReader.ReadContentAsDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1259">将当前位置的文本内容作为双精度浮点数读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1259">Reads the text content at the current position as a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1260">作为双精度浮点数的文本内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1260">The text content as a double-precision floating-point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1261">此方法将文本、 空白、 有效空白和 CDATA 节连接在一起，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1261">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="8fa94-1262">实体引用将自动解决。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1262">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="8fa94-1263">如果内容类型`xsd:double`，则读取器返回的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1263">If the content is typed `xsd:double`, the reader returns a double-precision floating-point number.</span></span> <span data-ttu-id="8fa94-1264">如果内容未类型化`xsd:double`，读取器将尝试将其转换为双精度浮点数，根据定义的规则[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1264">If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1265">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1265">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="8fa94-1266">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="8fa94-1266">XmlNodeType</span></span>|<span data-ttu-id="8fa94-1267">返回值</span><span class="sxs-lookup"><span data-stu-id="8fa94-1267">Return value</span></span>|<span data-ttu-id="8fa94-1268">读取器行为</span><span class="sxs-lookup"><span data-stu-id="8fa94-1268">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="8fa94-1269">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1269">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="8fa94-1270">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1270">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1271">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1271">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="8fa94-1272">与调用相同`XmlConvert.ToXxx`上属性值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1272">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="8fa94-1273">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1273">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="8fa94-1274">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1274">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="8fa94-1275">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1275">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1276">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1276">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="8fa94-1277">空字符串。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1277">An empty string.</span></span>|<span data-ttu-id="8fa94-1278">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1278">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="8fa94-1279">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1279">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="8fa94-1280">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1280">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="8fa94-1281">有关详细信息，请参阅<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1281">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8fa94-1282">试图进行的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1282">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8fa94-1283">该字符串格式无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1283">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1284">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1284">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1285">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1285">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsFloat">
      <MemberSignature Language="C#" Value="public virtual float ReadContentAsFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadContentAsFloat() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsFloat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsFloat () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadContentAsFloat();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsFloat : unit -&gt; single&#xA;override this.ReadContentAsFloat : unit -&gt; single" Usage="xmlReader.ReadContentAsFloat " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1286">将当前位置的文本内容作为单精度浮点数读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1286">Reads the text content at the current position as a single-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1287">作为单精度浮点数的当前位置的文本内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1287">The text content at the current position as a single-precision floating point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1288">此方法将文本、 空白、 有效空白和 CDATA 节连接在一起，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1288">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="8fa94-1289">实体引用将自动解决。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1289">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="8fa94-1290">如果内容类型`xsd:float`，则读取器返回取消装箱单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1290">If the content is typed `xsd:float`, the reader returns an unboxed a single-precision floating point number.</span></span> <span data-ttu-id="8fa94-1291">如果内容未类型化`xsd:float`，读取器将尝试将其转换为单精度浮点数根据定义的规则[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1291">If the content is not typed `xsd:float`, the reader attempts to convert it to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1292">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1292">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="8fa94-1293">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="8fa94-1293">XmlNodeType</span></span>|<span data-ttu-id="8fa94-1294">返回值</span><span class="sxs-lookup"><span data-stu-id="8fa94-1294">Return value</span></span>|<span data-ttu-id="8fa94-1295">读取器行为</span><span class="sxs-lookup"><span data-stu-id="8fa94-1295">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="8fa94-1296">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1296">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="8fa94-1297">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1297">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1298">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1298">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="8fa94-1299">与调用相同`XmlConvert.ToXxx`上属性值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1299">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="8fa94-1300">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1300">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="8fa94-1301">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1301">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="8fa94-1302">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1302">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1303">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1303">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="8fa94-1304">空字符串。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1304">An empty string.</span></span>|<span data-ttu-id="8fa94-1305">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1305">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="8fa94-1306">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1306">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="8fa94-1307">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1307">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="8fa94-1308">有关详细信息，请参阅备注部分的<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1308">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8fa94-1309">试图进行的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1309">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8fa94-1310">该字符串格式无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1310">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1311">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1311">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1312">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1312">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsInt">
      <MemberSignature Language="C#" Value="public virtual int ReadContentAsInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadContentAsInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsInt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsInt () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadContentAsInt();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsInt : unit -&gt; int&#xA;override this.ReadContentAsInt : unit -&gt; int" Usage="xmlReader.ReadContentAsInt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1313">将当前位置的文本内容作为 32 位有符号整数读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1313">Reads the text content at the current position as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1314">作为 32 位有符号整数的文本内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1314">The text content as a 32-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1315">此方法将文本、 空白、 有效空白和 CDATA 节连接在一起，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1315">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="8fa94-1316">实体引用将自动解决。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1316">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="8fa94-1317">如果内容类型`xsd:integer`，则读取器返回的未装箱的 32 位有符号的整数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1317">If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer.</span></span> <span data-ttu-id="8fa94-1318">如果内容未类型化`xsd:integer`，读取器将尝试将其转换为 32 位有符号整数，根据定义的规则[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1318">If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1319">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1319">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="8fa94-1320">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="8fa94-1320">XmlNodeType</span></span>|<span data-ttu-id="8fa94-1321">返回值</span><span class="sxs-lookup"><span data-stu-id="8fa94-1321">Return value</span></span>|<span data-ttu-id="8fa94-1322">读取器行为</span><span class="sxs-lookup"><span data-stu-id="8fa94-1322">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="8fa94-1323">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1323">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="8fa94-1324">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1324">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1325">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1325">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="8fa94-1326">与调用相同`XmlConvert.ToXxx`上属性值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1326">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="8fa94-1327">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1327">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="8fa94-1328">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1328">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="8fa94-1329">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1329">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1330">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1330">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="8fa94-1331">空字符串。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1331">An empty string.</span></span>|<span data-ttu-id="8fa94-1332">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1332">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="8fa94-1333">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1333">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="8fa94-1334">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1334">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="8fa94-1335">有关详细信息，请参阅备注部分的<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1335">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8fa94-1336">试图进行的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1336">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8fa94-1337">该字符串格式无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1337">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1338">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1338">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1339">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1339">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsLong">
      <MemberSignature Language="C#" Value="public virtual long ReadContentAsLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadContentAsLong() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsLong" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsLong () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadContentAsLong();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsLong : unit -&gt; int64&#xA;override this.ReadContentAsLong : unit -&gt; int64" Usage="xmlReader.ReadContentAsLong " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1340">将当前位置的文本内容作为 64 位有符号整数读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1340">Reads the text content at the current position as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1341">作为 64 位有符号整数的文本内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1341">The text content as a 64-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1342">此方法将文本、 空白、 有效空白和 CDATA 节连接在一起，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1342">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="8fa94-1343">实体引用将自动解决。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1343">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="8fa94-1344">如果内容类型`xsd:long`，则读取器返回的未装箱的 64 位有符号的整数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1344">If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer.</span></span> <span data-ttu-id="8fa94-1345">如果内容未类型化`xsd:long`，读取器将尝试将其转换为 64 位有符号整数，根据定义的规则[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1345">If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1346">下表介绍此方法将每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1346">The following table describes this method treats each node type.</span></span>  
  
|<span data-ttu-id="8fa94-1347">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="8fa94-1347">XmlNodeType</span></span>|<span data-ttu-id="8fa94-1348">返回值</span><span class="sxs-lookup"><span data-stu-id="8fa94-1348">Return value</span></span>|<span data-ttu-id="8fa94-1349">读取器行为</span><span class="sxs-lookup"><span data-stu-id="8fa94-1349">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="8fa94-1350">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1350">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="8fa94-1351">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1351">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1352">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1352">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="8fa94-1353">与相同`XmlConvert.ToXxx`上属性值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1353">Same as `XmlConvert.ToXxx` on attribute value.</span></span>|<span data-ttu-id="8fa94-1354">读取器将保留在当前位置</span><span class="sxs-lookup"><span data-stu-id="8fa94-1354">The reader remains in the current position</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="8fa94-1355">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1355">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="8fa94-1356">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1356">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1357">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1357">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="8fa94-1358">空字符串。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1358">An empty string.</span></span>|<span data-ttu-id="8fa94-1359">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1359">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="8fa94-1360">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1360">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="8fa94-1361">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1361">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="8fa94-1362">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1362">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8fa94-1363">试图进行的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1363">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8fa94-1364">该字符串格式无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1364">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1365">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1365">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1366">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1366">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsObject">
      <MemberSignature Language="C#" Value="public virtual object ReadContentAsObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadContentAsObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadContentAsObject();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsObject : unit -&gt; obj&#xA;override this.ReadContentAsObject : unit -&gt; obj" Usage="xmlReader.ReadContentAsObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1367">将当前位置的文本内容作为 <see cref="T:System.Object" /> 读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1367">Reads the text content at the current position as an <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1368">作为最适当的公共语言运行时 (CLR) 对象的文本内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1368">The text content as the most appropriate common language runtime (CLR) object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1369">此方法将文本、 空白、 有效空白和 CDATA 节连接在一起，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1369">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="8fa94-1370">实体引用将自动解决。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1370">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="8fa94-1371">如果内容类型，则读取器返回由指定的最适当类型的装箱的 CLR<xref:System.Xml.XmlReader.ValueType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1371">If the content is typed, the reader returns a boxed CLR of the most appropriate type, specified by the <xref:System.Xml.XmlReader.ValueType%2A> property.</span></span> <span data-ttu-id="8fa94-1372">如果内容是列表类型，则读取器返回适当类型的装箱对象的数组。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1372">If the content is a list type, the reader returns an array of boxed objects of the appropriate type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8fa94-1373">如果出现验证错误时分析内容时，读卡器<xref:System.Xml.XmlReader>创建对象<xref:System.Xml.XmlReader.Create%2A>方法，则读取器返回作为字符串的内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1373">If a validation error occurs while parsing the content and the reader is an <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A> method, the reader returns the content as a string.</span></span> <span data-ttu-id="8fa94-1374">换而言之验证错误或警告时，内容被视为非类型化。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1374">In other words when a validation error or warning occurs, the content is considered to be untyped.</span></span>  
  
 <span data-ttu-id="8fa94-1375">如果内容未类型化，读取器将以字符串的形式返回内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1375">If the content is not typed, the reader returns the content as a string.</span></span>  
  
 <span data-ttu-id="8fa94-1376">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1376">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="8fa94-1377">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="8fa94-1377">XmlNodeType</span></span>|<span data-ttu-id="8fa94-1378">返回值</span><span class="sxs-lookup"><span data-stu-id="8fa94-1378">Return value</span></span>|<span data-ttu-id="8fa94-1379">读取器行为</span><span class="sxs-lookup"><span data-stu-id="8fa94-1379">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="8fa94-1380">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1380">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="8fa94-1381">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1381">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1382">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1382">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="8fa94-1383">与调用相同`XmlConvert.ToXxx`上属性值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1383">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="8fa94-1384">读取器将保留在当前位置</span><span class="sxs-lookup"><span data-stu-id="8fa94-1384">The reader remains in the current position</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="8fa94-1385">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1385">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="8fa94-1386">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1386">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1387">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1387">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="8fa94-1388">如果读取器验证读取器的架构元素的值 (<xref:System.Xml.XmlReaderSettings.ValidationType%2A>设置为<xref:System.Xml.ValidationType.Schema>); 否则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1388">The value of the element if the reader is a schema validating reader (<xref:System.Xml.XmlReaderSettings.ValidationType%2A> is set to <xref:System.Xml.ValidationType.Schema>); otherwise an empty string.</span></span>|<span data-ttu-id="8fa94-1389">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1389">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="8fa94-1390">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1390">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="8fa94-1391">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1391">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="8fa94-1392">有关详细信息，请参阅备注部分的<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1392">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1393">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1393">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8fa94-1394">试图进行的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1394">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8fa94-1395">该字符串格式无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1395">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1396">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1396">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1397">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1397">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsObjectAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadContentAsObjectAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadContentAsObjectAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsObjectAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsObjectAsync () As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadContentAsObjectAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsObjectAsync : unit -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.ReadContentAsObjectAsync : unit -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlReader.ReadContentAsObjectAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadContentAsObjectAsync&gt;c__async0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1398">将当前位置的文本内容作为 <see cref="T:System.Object" /> 对象异步读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1398">Asynchronously reads the text content at the current position as an <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1399">作为最适当的公共语言运行时 (CLR) 对象的文本内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1399">The text content as the most appropriate common language runtime (CLR) object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1400">这是异步版本<xref:System.Xml.XmlReader.ReadContentAsObject%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1400">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsObject%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-1401">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1401">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1402">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1402">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-1403">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1403">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsString">
      <MemberSignature Language="C#" Value="public virtual string ReadContentAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadContentAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadContentAsString();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsString : unit -&gt; string&#xA;override this.ReadContentAsString : unit -&gt; string" Usage="xmlReader.ReadContentAsString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1404">将当前位置的文本内容作为 <see cref="T:System.String" /> 对象读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1404">Reads the text content at the current position as a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1405">作为 <see cref="T:System.String" /> 对象的文本内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1405">The text content as a <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1406">此方法将文本、 空白、 有效空白和 CDATA 节连接在一起，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1406">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="8fa94-1407">实体引用将自动解决。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1407">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="8fa94-1408">可以使用此方法将类型化的值转换为字符串，或时跳过注释和处理指令，读取的文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1408">This method can be used convert typed values to a string, or to read the text content while skipping comments and processing instructions.</span></span>  
  
 <span data-ttu-id="8fa94-1409">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1409">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="8fa94-1410">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="8fa94-1410">XmlNodeType</span></span>|<span data-ttu-id="8fa94-1411">返回值</span><span class="sxs-lookup"><span data-stu-id="8fa94-1411">Return value</span></span>|<span data-ttu-id="8fa94-1412">读取器行为</span><span class="sxs-lookup"><span data-stu-id="8fa94-1412">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="8fa94-1413">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1413">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="8fa94-1414">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1414">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1415">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1415">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="8fa94-1416">与调用相同`XmlConvert.ToXxx`上属性值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1416">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="8fa94-1417">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1417">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="8fa94-1418">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1418">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="8fa94-1419">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1419">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="8fa94-1420">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1420">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="8fa94-1421">空字符串。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1421">An empty string.</span></span>|<span data-ttu-id="8fa94-1422">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1422">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="8fa94-1423">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1423">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="8fa94-1424">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1424">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="8fa94-1425">有关详细信息，请参阅备注部分的<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1425">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1426">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.ReadContentAsStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1426">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8fa94-1427">试图进行的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1427">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8fa94-1428">该字符串格式无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1428">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1429">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1429">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1430">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1430">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadContentAsStringAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadContentAsStringAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsStringAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsStringAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadContentAsStringAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsStringAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadContentAsStringAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.ReadContentAsStringAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1431">将当前位置的文本内容作为 <see cref="T:System.String" /> 对象异步读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1431">Asynchronously reads the text content at the current position as a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1432">作为 <see cref="T:System.String" /> 对象的文本内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1432">The text content as a <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1433">这是异步版本<xref:System.Xml.XmlReader.ReadContentAsString%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1433">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsString%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-1434">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1434">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1435">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1435">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-1436">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1436">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAs">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1437">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1437">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1438">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1438">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-1439">读取当前元素，并将内容作为指定类型的对象返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1439">Reads the current element and returns the contents as an object of the type specified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAs">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAs (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj&#xA;override this.ReadElementContentAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlReader.ReadElementContentAs (returnType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType">
          <span data-ttu-id="8fa94-1440">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1440">The type of the value to be returned.</span>
          </span>
          <span data-ttu-id="8fa94-1441">注意：随着 .NET Framework 3.5 的发布，<c>returnType</c> 参数的值现在可以是 <see cref="T:System.DateTimeOffset" /> 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1441">**Note** With the release of the .NET Framework 3.5, the value of the <c>returnType</c> parameter can now be the <see cref="T:System.DateTimeOffset" /> type.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="8fa94-1442">一个 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象，用于解析与类型转换有关的任何命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1442">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1443">将元素内容作为请求类型读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1443">Reads the element content as the requested type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1444">转换为请求类型的对象的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1444">The element content converted to the requested typed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1445">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1445">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1446">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1446">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1447">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1447">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1448">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1448">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1449">有关详细信息，请参阅备注部分的<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1449">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1450">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.ReadElementContentAsAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1450">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-1451">下面的示例使用<xref:System.Xml.XmlReader.ReadElementContentAs%2A>方法来读取的内容`date`节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1451">The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAs%2A> method to read the content of the `date` node.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#5)]
 [!code-vb[XmlReader.ReadElementContentAs#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#5)]  
  
 <span data-ttu-id="8fa94-1452">示例使用 `dataFile.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1452">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1453">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1453">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1454">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1454">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1455">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1455">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1456">- 或 -  无法将元素内容转换成请求的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1456">-or-  The element content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1457">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1457">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8fa94-1458">读取 <see langword="Decimal.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1458">Read <see langword="Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAs">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAs (returnType As Type, namespaceResolver As IXmlNamespaceResolver, localName As String, namespaceURI As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAs : Type * System.Xml.IXmlNamespaceResolver * string * string -&gt; obj&#xA;override this.ReadElementContentAs : Type * System.Xml.IXmlNamespaceResolver * string * string -&gt; obj" Usage="xmlReader.ReadElementContentAs (returnType, namespaceResolver, localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="returnType">
          <span data-ttu-id="8fa94-1459">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1459">The type of the value to be returned.</span>
          </span>
          <span data-ttu-id="8fa94-1460">注意：随着 .NET Framework 3.5 的发布，<c>returnType</c> 参数的值现在可以是 <see cref="T:System.DateTimeOffset" /> 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1460">**Note** With the release of the .NET Framework 3.5, the value of the <c>returnType</c> parameter can now be the <see cref="T:System.DateTimeOffset" /> type.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="8fa94-1461">一个 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象，用于解析与类型转换有关的任何命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1461">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="8fa94-1462">元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1462">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-1463">元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1463">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1464">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后将元素内容作为请求类型读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1464">Checks that the specified local name and namespace URI matches that of the current element, then reads the element content as the requested type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1465">转换为请求类型的对象的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1465">The element content converted to the requested typed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1466">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1466">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1467">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1467">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1468">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1468">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1469">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1469">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1470">有关详细信息，请参阅备注部分的<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1470">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1471">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1471">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1472">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1472">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1473">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1473">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1474">- 或 -  无法将元素内容转换成请求的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1474">-or-  The element content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1475">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1475">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-1476">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1476">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8fa94-1477">读取 <see langword="Decimal.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1477">Read <see langword="Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadElementContentAsAsync (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadElementContentAsAsync(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsAsync (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadElementContentAsAsync(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsAsync : Type * System.Xml.IXmlNamespaceResolver -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.ReadElementContentAsAsync : Type * System.Xml.IXmlNamespaceResolver -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlReader.ReadElementContentAsAsync (returnType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadElementContentAsAsync&gt;c__async4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType">
          <span data-ttu-id="8fa94-1478">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1478">The type of the value to be returned.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="8fa94-1479">一个 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象，用于解析与类型转换有关的任何命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1479">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1480">将元素内容作为请求类型异步读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1480">Asynchronously reads the element content as the requested type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1481">转换为请求类型的对象的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1481">The element content converted to the requested typed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1482">这是异步版本<xref:System.Xml.XmlReader.ReadElementContentAs%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1482">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAs%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-1483">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1483">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1484">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1484">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-1485">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1485">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBase64 : byte[] * int * int -&gt; int&#xA;override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8fa94-1486">结果文本复制到的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1486">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="8fa94-1487">此值不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1487">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8fa94-1488">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1488">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8fa94-1489">要复制到缓冲区的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1489">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="8fa94-1490">此方法返回复制的实际字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1490">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1491">读取元素并对 <see langword="Base64" /> 内容进行解码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1491">Reads the element and decodes the <see langword="Base64" /> content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1492">写入缓冲区的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1492">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1493">此方法读取元素内容，将使用其解码`Base64`编码，并返回已解码的二进制字节 (例如，内联`Base64`-编码的 GIF 图像) 到缓冲区。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1493">This method reads the element content, decodes it using `Base64` encoding, and returns the decoded binary bytes (for example, an inline `Base64`-encoded GIF image) into the buffer.</span></span> <span data-ttu-id="8fa94-1494">有关详细信息，请参阅 RFC 1521"MIME （多用途 Internet 邮件扩展） 部分一个： 机制来指定以及描述 Internet 消息正文的格式"。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1494">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="8fa94-1495">你可以获取从 Rfc[征求意见文档网站](http://go.microsoft.com/fwlink/?LinkId=37119)。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1495">You can obtain RFCs from the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkId=37119).</span></span>  
  
 <span data-ttu-id="8fa94-1496"><xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A> 只能读取简单内容元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1496"><xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A> can only read simple-content elements.</span></span> <span data-ttu-id="8fa94-1497">该元素可以包含文本、 空白、 有效空白、 CDATA 节、 注释和处理指令。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1497">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="8fa94-1498">它还可以包含实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1498">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="8fa94-1499">元素不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1499">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1500">此方法是非常类似于<xref:System.Xml.XmlReader.ReadContentAsBase64%2A>方法，但它只能在元素节点类型上调用。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1500">This method is very similar to the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="8fa94-1501">如果`count`值高于在文档中，字节数是否等于在文档中，字节数或<xref:System.Xml.XmlReader>读取文档中的所有剩余字节，并返回读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1501">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="8fa94-1502">下一步<xref:System.Xml.XmlReader>方法调用将返回零，并将读取器移动到节点以下`EndElement`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1502">The next <xref:System.Xml.XmlReader> method call returns a zero and moves the reader to the node following the `EndElement`.</span></span>  
  
 <span data-ttu-id="8fa94-1503">如果调用<xref:System.Xml.XmlReader.Read%2A>消耗了全部元素内容时之前，读取器的行为类似于第一个内容已被用尽，然后<xref:System.Xml.XmlReader.Read%2A>调用了方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1503">If you call <xref:System.Xml.XmlReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlReader.Read%2A> method was called.</span></span> <span data-ttu-id="8fa94-1504">这意味着读取器将读取的所有文本，直到遇到 end 元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1504">This means that the reader will read all the text until the end element is encountered.</span></span> <span data-ttu-id="8fa94-1505">然后，它将读取结束标记节点、 读取下一个节点，然后将自身定位在下一步的后续节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1505">It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
 <span data-ttu-id="8fa94-1506">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.ReadElementContentAsBase64Async%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1506">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsBase64Async%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-1507">下面的示例读取一个内联`Base64`编码的图像。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1507">The following example reads an inline `Base64` encoded image.</span></span> <span data-ttu-id="8fa94-1508">`Base64`数据嵌入在`<image>`元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1508">The `Base64` data is embedded within the `<image>` element.</span></span> <span data-ttu-id="8fa94-1509">A<xref:System.IO.BinaryWriter>用于创建新的二进制数据文件。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1509">A <xref:System.IO.BinaryWriter> is used to create a new binary data file.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#4)]
 [!code-vb[XmlReader_Read_Write_Binary#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1510">
            <paramref name="buffer" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1510">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1511">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1511">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1512">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1512">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8fa94-1513">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1513">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8fa94-1514">
            <see cref="T:System.Xml.XmlReader" /> 实现不支持此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1514">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1515">该元素包含混合内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1515">The element contains mixed-content.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8fa94-1516">无法将内容转换成请求的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1516">The content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadElementContentAsBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadElementContentAsBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadElementContentAsBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadElementContentAsBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadElementContentAsBase64Async (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8fa94-1517">结果文本复制到的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1517">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="8fa94-1518">此值不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1518">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8fa94-1519">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1519">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8fa94-1520">要复制到缓冲区的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1520">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="8fa94-1521">此方法返回复制的实际字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1521">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1522">异步读取元素并对 <see langword="Base64" /> 内容进行解码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1522">Asynchronously reads the element and decodes the <see langword="Base64" /> content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1523">写入缓冲区的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1523">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1524">这是异步版本<xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1524">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-1525">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1525">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1526">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1526">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-1527">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1527">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBinHex : byte[] * int * int -&gt; int&#xA;override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8fa94-1528">结果文本复制到的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1528">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="8fa94-1529">此值不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1529">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8fa94-1530">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1530">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8fa94-1531">要复制到缓冲区的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1531">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="8fa94-1532">此方法返回复制的实际字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1532">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1533">读取元素并对 <see langword="BinHex" /> 内容进行解码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1533">Reads the element and decodes the <see langword="BinHex" /> content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1534">写入缓冲区的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1534">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1535">此方法读取元素内容，将使用其解码`BinHex`编码，并返回已解码的二进制字节 (例如，内联`BinHex`-编码的 GIF 图像) 到缓冲区。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1535">This method reads the element content, decodes it using `BinHex` encoding, and returns the decoded binary bytes (for example, an inline `BinHex`-encoded GIF image) into the buffer.</span></span>  
  
 <span data-ttu-id="8fa94-1536">此方法只能读取简单内容元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1536">This method can only read simple-content elements.</span></span> <span data-ttu-id="8fa94-1537">该元素可以包含文本、 空白、 有效空白、 CDATA 节、 注释和处理指令。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1537">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="8fa94-1538">它还可以包含实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1538">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="8fa94-1539">元素不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1539">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1540">此方法是非常类似于<xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>方法，但它只能在元素节点类型上调用。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1540">This method is very similar to the <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="8fa94-1541">如果`count`值高于在文档中，字节数是否等于在文档中，字节数或<xref:System.Xml.XmlReader>读取文档中的所有剩余字节，并返回读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1541">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="8fa94-1542">下一步<xref:System.Xml.XmlReader>方法调用将返回零，并将读取器移动到节点以下`EndElement`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1542">The next <xref:System.Xml.XmlReader> method call returns a zero and moves the reader to the node following the `EndElement`.</span></span>  
  
 <span data-ttu-id="8fa94-1543">如果调用<xref:System.Xml.XmlReader.Read%2A>消耗了全部元素内容时之前，读取器的行为类似于第一个内容已被用尽，然后<xref:System.Xml.XmlReader.Read%2A>调用了方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1543">If you call <xref:System.Xml.XmlReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlReader.Read%2A> method was called.</span></span> <span data-ttu-id="8fa94-1544">这意味着读取器将读取的所有文本，直到遇到 end 元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1544">This means that the reader will read all the text until the end element is encountered.</span></span> <span data-ttu-id="8fa94-1545">然后，它将读取结束标记节点、 读取下一个节点，然后将自身定位在下一步的后续节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1545">It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
 <span data-ttu-id="8fa94-1546">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.ReadElementContentAsBinHexAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1546">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsBinHexAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-1547">下面的示例读取一个内联`BinHex`编码的图像。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1547">The following example reads an inline `BinHex` encoded image.</span></span> <span data-ttu-id="8fa94-1548">`BinHex`数据嵌入在`<image>`元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1548">The `BinHex` data is embedded within the `<image>` element.</span></span> <span data-ttu-id="8fa94-1549">A<xref:System.IO.BinaryWriter>用于创建新的二进制数据文件。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1549">A <xref:System.IO.BinaryWriter> is used to create a new binary data file.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#2)]
 [!code-vb[XmlReader_Read_Write_Binary#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1550">
            <paramref name="buffer" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1550">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1551">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1551">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1552">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1552">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8fa94-1553">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1553">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8fa94-1554">
            <see cref="T:System.Xml.XmlReader" /> 实现不支持此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1554">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1555">该元素包含混合内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1555">The element contains mixed-content.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8fa94-1556">无法将内容转换成请求的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1556">The content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadElementContentAsBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadElementContentAsBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadElementContentAsBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadElementContentAsBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadElementContentAsBinHexAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8fa94-1557">结果文本复制到的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1557">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="8fa94-1558">此值不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1558">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8fa94-1559">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1559">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8fa94-1560">要复制到缓冲区的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1560">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="8fa94-1561">此方法返回复制的实际字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1561">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1562">异步读取元素并对 <see langword="BinHex" /> 内容进行解码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1562">Asynchronously reads the element and decodes the <see langword="BinHex" /> content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1563">写入缓冲区的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1563">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1564">这是异步版本<xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1564">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-1565">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1565">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1566">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1566">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-1567">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1567">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsBoolean">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1568">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1568">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1569">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1569">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-1570">将当前元素值作为 <see cref="T:System.Boolean" /> 对象读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1570">Reads the current element value as a <see cref="T:System.Boolean" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadElementContentAsBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadElementContentAsBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadElementContentAsBoolean();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBoolean : unit -&gt; bool&#xA;override this.ReadElementContentAsBoolean : unit -&gt; bool" Usage="xmlReader.ReadElementContentAsBoolean " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1571">读取当前元素并将内容作为 <see cref="T:System.Boolean" /> 对象返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1571">Reads the current element and returns the contents as a <see cref="T:System.Boolean" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1572">作为 <see cref="T:System.Boolean" /> 对象的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1572">The element content as a <see cref="T:System.Boolean" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1573">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1573">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1574">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1574">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1575">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1575">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1576">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1576">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1577">如果指定类型的元素内容`xsd:boolean`，则读取器返回取消装箱<xref:System.Boolean>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1577">If the element content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object.</span></span> <span data-ttu-id="8fa94-1578">如果内容未类型化`xsd:boolean`，读取器将尝试将其转换为<xref:System.Boolean>根据定义的规则的对象[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1578">If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1579">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1579">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1580">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1580">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1581">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1581">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1582">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1582">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1583">- 或 -  无法将元素内容转换为 <see cref="T:System.Boolean" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1583">-or-  The element content cannot be converted to a <see cref="T:System.Boolean" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1584">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1584">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadElementContentAsBoolean (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadElementContentAsBoolean(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBoolean (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadElementContentAsBoolean(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBoolean : string * string -&gt; bool&#xA;override this.ReadElementContentAsBoolean : string * string -&gt; bool" Usage="xmlReader.ReadElementContentAsBoolean (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="8fa94-1585">元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1585">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-1586">元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1586">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1587">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为 <see cref="T:System.Boolean" /> 对象返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1587">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.Boolean" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1588">作为 <see cref="T:System.Boolean" /> 对象的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1588">The element content as a <see cref="T:System.Boolean" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1589">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1589">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1590">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1590">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1591">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1591">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1592">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1592">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1593">如果内容类型`xsd:boolean`，则读取器返回取消装箱<xref:System.Boolean>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1593">If the content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object.</span></span> <span data-ttu-id="8fa94-1594">如果内容未类型化`xsd:boolean`，读取器将尝试将其转换为<xref:System.Boolean>根据定义的规则的对象[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1594">If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1595">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1595">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1596">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1596">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1597">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1597">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1598">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1598">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1599">- 或 -  无法将元素内容转换成请求的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1599">-or-  The element content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1600">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1600">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-1601">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1601">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsDateTime">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1602">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1602">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1603">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1603">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-1604">读取当前元素并将内容作为 <see cref="T:System.DateTime" /> 对象返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1604">Reads the current element and returns the contents as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ReadElementContentAsDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ReadElementContentAsDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDateTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ReadElementContentAsDateTime();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDateTime : unit -&gt; DateTime&#xA;override this.ReadElementContentAsDateTime : unit -&gt; DateTime" Usage="xmlReader.ReadElementContentAsDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1605">读取当前元素并将内容作为 <see cref="T:System.DateTime" /> 对象返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1605">Reads the current element and returns the contents as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1606">作为 <see cref="T:System.DateTime" /> 对象的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1606">The element content as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1607">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1607">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1608">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1608">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1609">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1609">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1610">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1610">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1611">如果内容类型`xsd:dateTime`，则读取器返回取消装箱<xref:System.DateTime>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1611">If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object.</span></span> <span data-ttu-id="8fa94-1612">如果内容未类型化`xsd:dateTime`，读取器将尝试将其转换为<xref:System.DateTime>根据定义的规则的对象[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1612">If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8fa94-1613">如果内容类型化为 <xref:System.DateTime.Year%2A?displayProperty=nameWithType>，则不能使用 `xsd:gMonthDay` 值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1613">You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value when the content is typed as `xsd:gMonthDay`.</span></span> <span data-ttu-id="8fa94-1614"><xref:System.Xml.XmlReader> 始终设置<xref:System.DateTime.Year%2A?displayProperty=nameWithType>在这种情况下为 1904年值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1614"><xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value to 1904 in this case.</span></span>  
  
 <span data-ttu-id="8fa94-1615">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1615">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-1616">下面的示例使用<xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A>方法来读取的内容`date`元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1616">The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A> method to read the content of the `date` element.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#4)]
 [!code-vb[XmlReader.ReadElementContentAs#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#4)]  
  
 <span data-ttu-id="8fa94-1617">示例使用 `dataFile.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1617">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1618">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1618">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1619">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1619">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1620">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1620">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1621">- 或 -  无法将元素内容转换为 <see cref="T:System.DateTime" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1621">-or-  The element content cannot be converted to a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1622">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1622">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ReadElementContentAsDateTime (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ReadElementContentAsDateTime(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDateTime (localName As String, namespaceURI As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ReadElementContentAsDateTime(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDateTime : string * string -&gt; DateTime&#xA;override this.ReadElementContentAsDateTime : string * string -&gt; DateTime" Usage="xmlReader.ReadElementContentAsDateTime (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="8fa94-1623">元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1623">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-1624">元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1624">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1625">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为 <see cref="T:System.DateTime" /> 对象返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1625">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1626">作为 <see cref="T:System.DateTime" /> 对象的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1626">The element contents as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1627">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1627">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1628">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1628">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1629">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1629">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1630">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1630">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1631">如果内容类型`xsd:dateTime`，则读取器返回取消装箱<xref:System.DateTime>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1631">If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object.</span></span> <span data-ttu-id="8fa94-1632">如果内容未类型化`xsd:dateTime`，读取器将尝试将其转换为<xref:System.DateTime>根据定义的规则的对象[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1632">If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8fa94-1633">如果内容类型化为 <xref:System.DateTime.Year%2A?displayProperty=nameWithType>，则不能使用 `xsd:gMonthDay` 值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1633">You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value when the content is typed as `xsd:gMonthDay`.</span></span> <span data-ttu-id="8fa94-1634"><xref:System.Xml.XmlReader> 始终设置<xref:System.DateTime.Year%2A?displayProperty=nameWithType>在这种情况下为 1904年值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1634"><xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value to 1904 in this case.</span></span>  
  
 <span data-ttu-id="8fa94-1635">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1635">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1636">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1636">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1637">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1637">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1638">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1638">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1639">- 或 -  无法将元素内容转换成请求的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1639">-or-  The element content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1640">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1640">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-1641">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1641">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsDecimal">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1642">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1642">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1643">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1643">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-1644">将当前元素值作为 <see cref="T:System.Decimal" /> 对象读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1644">Reads the current element value as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadElementContentAsDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadElementContentAsDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadElementContentAsDecimal();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDecimal : unit -&gt; decimal&#xA;override this.ReadElementContentAsDecimal : unit -&gt; decimal" Usage="xmlReader.ReadElementContentAsDecimal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1645">读取当前元素并将内容作为 <see cref="T:System.Decimal" /> 对象返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1645">Reads the current element and returns the contents as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1646">作为 <see cref="T:System.Decimal" /> 对象的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1646">The element content as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1647">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1647">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1648">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1648">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1649">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1649">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1650">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1650">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1651">读取器将尝试将元素内容转换为转换<xref:System.Decimal>根据定义的规则的对象[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1651">The reader attempts to convert the element content to an <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1652">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1652">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1653">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1653">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1654">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1654">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1655">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1655">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1656">- 或 -  无法将元素内容转换为 <see cref="T:System.Decimal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1656">-or-  The element content cannot be converted to a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1657">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1657">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadElementContentAsDecimal (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadElementContentAsDecimal(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDecimal (localName As String, namespaceURI As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadElementContentAsDecimal(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDecimal : string * string -&gt; decimal&#xA;override this.ReadElementContentAsDecimal : string * string -&gt; decimal" Usage="xmlReader.ReadElementContentAsDecimal (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="8fa94-1658">元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1658">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-1659">元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1659">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1660">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为 <see cref="T:System.Decimal" /> 对象返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1660">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1661">作为 <see cref="T:System.Decimal" /> 对象的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1661">The element content as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1662">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1662">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1663">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1663">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1664">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1664">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1665">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1665">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1666">读取器将尝试将元素内容转换为转换<xref:System.Decimal>根据定义的规则的对象[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1666">The reader attempts to convert the element content to an <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1667">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1667">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1668">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1668">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1669">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1669">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1670">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1670">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1671">- 或 -  无法将元素内容转换为 <see cref="T:System.Decimal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1671">-or-  The element content cannot be converted to a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1672">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1672">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-1673">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1673">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsDouble">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1674">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1674">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1675">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1675">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-1676">读取当前元素并将内容作为双精度浮点数返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1676">Reads the current element and returns the contents as a double-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadElementContentAsDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadElementContentAsDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadElementContentAsDouble();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDouble : unit -&gt; double&#xA;override this.ReadElementContentAsDouble : unit -&gt; double" Usage="xmlReader.ReadElementContentAsDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1677">读取当前元素并将内容作为双精度浮点数返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1677">Reads the current element and returns the contents as a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1678">作为双精度浮点数的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1678">The element content as a double-precision floating-point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1679">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1679">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1680">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1680">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1681">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1681">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1682">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1682">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1683">如果内容类型`xsd:double`，则读取器返回的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1683">If the content is typed `xsd:double`, the reader returns a double-precision floating-point number.</span></span> <span data-ttu-id="8fa94-1684">如果内容未类型化`xsd:double`，读取器将尝试将其转换为双精度浮点数，根据定义的规则[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1684">If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1685">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1685">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-1686">下面的示例使用方法以返回的元素内容作为双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1686">The following example uses the method to return the element content as a double-precision floating-point number.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#7)]
 [!code-vb[XmlReader.ReadElementContentAs#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#7)]  
  
 <span data-ttu-id="8fa94-1687">示例使用 `dataFile.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1687">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1688">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1688">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1689">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1689">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1690">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1690">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1691">- 或 -  无法将元素内容转换为双精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1691">-or-  The element content cannot be converted to a double-precision floating-point number.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1692">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1692">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadElementContentAsDouble (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadElementContentAsDouble(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDouble (localName As String, namespaceURI As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadElementContentAsDouble(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDouble : string * string -&gt; double&#xA;override this.ReadElementContentAsDouble : string * string -&gt; double" Usage="xmlReader.ReadElementContentAsDouble (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="8fa94-1693">元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1693">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-1694">元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1694">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1695">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为双精度浮点数返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1695">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1696">作为双精度浮点数的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1696">The element content as a double-precision floating-point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1697">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1697">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1698">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1698">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1699">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1699">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1700">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1700">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1701">如果内容类型`xsd:double`，则读取器返回的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1701">If the content is typed `xsd:double`, the reader returns a double-precision floating-point number.</span></span> <span data-ttu-id="8fa94-1702">如果内容未类型化`xsd:double`，读取器将尝试将其转换为双精度浮点数，根据定义的规则[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1702">If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1703">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1703">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1704">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1704">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1705">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1705">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1706">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1706">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1707">- 或 -  无法将元素内容转换成请求的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1707">-or-  The element content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1708">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1708">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-1709">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1709">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsFloat">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1710">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1710">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1711">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1711">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-1712">将当前元素值作为单精度浮点数读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1712">Reads the current element value as a single-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsFloat">
      <MemberSignature Language="C#" Value="public virtual float ReadElementContentAsFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadElementContentAsFloat() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsFloat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsFloat () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadElementContentAsFloat();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsFloat : unit -&gt; single&#xA;override this.ReadElementContentAsFloat : unit -&gt; single" Usage="xmlReader.ReadElementContentAsFloat " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1713">读取当前元素并将内容作为单精度浮点数返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1713">Reads the current element and returns the contents as single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1714">作为单精度浮点数的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1714">The element content as a single-precision floating point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1715">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1715">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1716">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1716">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1717">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1717">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1718">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1718">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1719">读取器将尝试将元素内容转换为单精度浮点数根据定义的规则[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1719">The reader attempts to convert the element content to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1720">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1720">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1721">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1721">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1722">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1722">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1723">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1723">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1724">- 或 -  无法将元素内容转换为单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1724">-or-  The element content cannot be converted to a single-precision floating-point number.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1725">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1725">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsFloat">
      <MemberSignature Language="C#" Value="public virtual float ReadElementContentAsFloat (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadElementContentAsFloat(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsFloat (localName As String, namespaceURI As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadElementContentAsFloat(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsFloat : string * string -&gt; single&#xA;override this.ReadElementContentAsFloat : string * string -&gt; single" Usage="xmlReader.ReadElementContentAsFloat (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="8fa94-1726">元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1726">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-1727">元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1727">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1728">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为单精度浮点数返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1728">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1729">作为单精度浮点数的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1729">The element content as a single-precision floating point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1730">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1730">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1731">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1731">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1732">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1732">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1733">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1733">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1734">读取器将尝试将元素内容转换为单精度浮点数根据定义的规则[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1734">The reader attempts to convert the element content to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1735">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1735">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1736">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1736">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1737">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1737">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1738">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1738">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1739">- 或 -  无法将元素内容转换为单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1739">-or-  The element content cannot be converted to a single-precision floating-point number.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1740">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1740">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-1741">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1741">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsInt">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1742">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1742">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1743">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1743">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-1744">读取当前元素并将内容作为 32 位有符号整数返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1744">Reads the current element and returns the contents as a 32-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsInt">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsInt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsInt () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsInt();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsInt : unit -&gt; int&#xA;override this.ReadElementContentAsInt : unit -&gt; int" Usage="xmlReader.ReadElementContentAsInt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1745">读取当前元素并将内容作为 32 位有符号整数返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1745">Reads the current element and returns the contents as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1746">作为 32 位有符号整数的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1746">The element content as a 32-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1747">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1747">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1748">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1748">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1749">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1749">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1750">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1750">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1751">如果内容类型`xsd:integer`，则读取器返回的未装箱的 32 位有符号的整数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1751">If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer.</span></span> <span data-ttu-id="8fa94-1752">如果内容未类型化`xsd:integer`，读取器将尝试将其转换为 32 位有符号整数，根据定义的规则[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1752">If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1753">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1753">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1754">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1754">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1755">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1755">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1756">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1756">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1757">- 或 -  无法将元素内容转换为 32 位有符号整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1757">-or-  The element content cannot be converted to a 32-bit signed integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1758">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1758">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsInt">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsInt (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsInt(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsInt (localName As String, namespaceURI As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsInt(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsInt : string * string -&gt; int&#xA;override this.ReadElementContentAsInt : string * string -&gt; int" Usage="xmlReader.ReadElementContentAsInt (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="8fa94-1759">元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1759">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-1760">元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1760">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1761">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为 32 位有符号整数返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1761">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1762">作为 32 位有符号整数的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1762">The element content as a 32-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1763">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1763">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1764">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1764">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1765">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1765">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1766">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1766">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1767">如果内容类型`xsd:integer`，则读取器返回的未装箱的 32 位有符号的整数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1767">If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer.</span></span> <span data-ttu-id="8fa94-1768">如果内容未类型化`xsd:integer`，读取器将尝试将其转换为 32 位有符号整数，根据定义的规则[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1768">If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1769">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1769">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1770">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1770">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1771">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1771">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1772">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1772">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1773">- 或 -  无法将元素内容转换为 32 位有符号整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1773">-or-  The element content cannot be converted to a 32-bit signed integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1774">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1774">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-1775">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1775">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsLong">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1776">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1776">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1777">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1777">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-1778">读取当前元素并将内容作为 64 位有符号整数返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1778">Reads the current element and returns the contents as a 64-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsLong">
      <MemberSignature Language="C#" Value="public virtual long ReadElementContentAsLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadElementContentAsLong() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsLong" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsLong () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadElementContentAsLong();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsLong : unit -&gt; int64&#xA;override this.ReadElementContentAsLong : unit -&gt; int64" Usage="xmlReader.ReadElementContentAsLong " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1779">读取当前元素并将内容作为 64 位有符号整数返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1779">Reads the current element and returns the contents as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1780">作为 64 位有符号整数的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1780">The element content as a 64-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1781">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1781">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1782">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1782">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1783">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1783">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1784">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1784">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1785">如果内容类型`xsd:long`，则读取器返回的未装箱的 64 位有符号的整数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1785">If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer.</span></span> <span data-ttu-id="8fa94-1786">如果内容未类型化`xsd:long`，读取器将尝试将其转换为 64 位有符号整数，根据定义的规则[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1786">If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1787">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1787">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-1788">下面的示例使用<xref:System.Xml.XmlReader.ReadElementContentAsLong%2A>方法来读取的内容`longValue`元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1788">The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A> method to read the content of the `longValue` element.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#3)]
 [!code-vb[XmlReader.ReadElementContentAs#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#3)]  
  
 <span data-ttu-id="8fa94-1789">示例使用 `dataFile.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1789">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1790">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1790">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1791">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1791">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1792">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1792">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1793">- 或 -  无法将元素内容转换为 64 位有符号整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1793">-or-  The element content cannot be converted to a 64-bit signed integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1794">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1794">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsLong">
      <MemberSignature Language="C#" Value="public virtual long ReadElementContentAsLong (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadElementContentAsLong(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsLong (localName As String, namespaceURI As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadElementContentAsLong(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsLong : string * string -&gt; int64&#xA;override this.ReadElementContentAsLong : string * string -&gt; int64" Usage="xmlReader.ReadElementContentAsLong (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="8fa94-1795">元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1795">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-1796">元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1796">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1797">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为 64 位有符号整数返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1797">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1798">作为 64 位有符号整数的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1798">The element content as a 64-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1799">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1799">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1800">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1800">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1801">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1801">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1802">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1802">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1803">如果内容类型`xsd:long`，则读取器返回的未装箱的 64 位有符号的整数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1803">If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer.</span></span> <span data-ttu-id="8fa94-1804">如果内容未类型化`xsd:long`，读取器将尝试将其转换为 64 位有符号整数，根据定义的规则[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1804">If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1805">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1805">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1806">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1806">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1807">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1807">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1808">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1808">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1809">- 或 -  无法将元素内容转换为 64 位有符号整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1809">-or-  The element content cannot be converted to a 64-bit signed integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1810">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1810">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-1811">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1811">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsObject">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1812">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1812">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1813">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1813">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-1814">读取当前元素并将内容作为 <see cref="T:System.Object" /> 返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1814">Reads the current element and returns the contents as an <see cref="T:System.Object" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsObject">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAsObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAsObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAsObject();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsObject : unit -&gt; obj&#xA;override this.ReadElementContentAsObject : unit -&gt; obj" Usage="xmlReader.ReadElementContentAsObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1815">读取当前元素并将内容作为 <see cref="T:System.Object" /> 返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1815">Reads the current element and returns the contents as an <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1816">一个最适当类型的装箱的公共语言运行时 (CLR) 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1816">A boxed common language runtime (CLR) object of the most appropriate type.</span>
          </span>
          <span data-ttu-id="8fa94-1817">
            <see cref="P:System.Xml.XmlReader.ValueType" /> 属性确定了适当的 CLR 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1817">The <see cref="P:System.Xml.XmlReader.ValueType" /> property determines the appropriate CLR type.</span>
          </span>
          <span data-ttu-id="8fa94-1818">如果将内容类型化为列表类型，则此方法返回一个适当类型的装箱对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1818">If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1819">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1819">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1820">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1820">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1821">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1821">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1822">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1822">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1823">有关详细信息，请参阅备注部分的<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1823">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1824">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.ReadElementContentAsObjectAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1824">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsObjectAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-1825">下面的示例使用方法来读取的内容`price`节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1825">The following example uses the method to read the content of the `price` node.</span></span> <span data-ttu-id="8fa94-1826">读取器在架构中使用信息将内容映射到正确的数据类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1826">The reader uses the information in the schema to map the content to the correct data type.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#6)]
 [!code-vb[XmlReader.ReadElementContentAs#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#6)]  
  
 <span data-ttu-id="8fa94-1827">该示例使用下面的两个文件</span><span class="sxs-lookup"><span data-stu-id="8fa94-1827">The example uses the following two files as input.</span></span>  
  
 `item.xml`  
  
 [!code-xml[XmlReader.ReadElementContentAs#11](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/item.xml#11)]  
  
 `item.xsd`  
  
 [!code-xml[XmlReader.ReadElementContentAs#12](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/item.xsd#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1828">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1828">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1829">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1829">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1830">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1830">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1831">- 或 -  无法将元素内容转换成请求的类型</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1831">-or-  The element content cannot be converted to the requested type</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1832">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1832">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsObject">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAsObject (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAsObject(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsObject (localName As String, namespaceURI As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAsObject(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsObject : string * string -&gt; obj&#xA;override this.ReadElementContentAsObject : string * string -&gt; obj" Usage="xmlReader.ReadElementContentAsObject (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="8fa94-1833">元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1833">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-1834">元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1834">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1835">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为 <see cref="T:System.Object" /> 返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1835">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as an <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1836">一个最适当类型的装箱的公共语言运行时 (CLR) 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1836">A boxed common language runtime (CLR) object of the most appropriate type.</span>
          </span>
          <span data-ttu-id="8fa94-1837">
            <see cref="P:System.Xml.XmlReader.ValueType" /> 属性确定了适当的 CLR 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1837">The <see cref="P:System.Xml.XmlReader.ValueType" /> property determines the appropriate CLR type.</span>
          </span>
          <span data-ttu-id="8fa94-1838">如果将内容类型化为列表类型，则此方法返回一个适当类型的装箱对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1838">If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1839">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1839">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1840">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1840">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1841">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1841">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1842">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1842">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1843">有关详细信息，请参阅备注部分的<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1843">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1844">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1844">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1845">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1845">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1846">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1846">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1847">- 或 -  无法将元素内容转换成请求的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1847">-or-  The element content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1848">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1848">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-1849">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1849">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsObjectAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadElementContentAsObjectAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadElementContentAsObjectAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsObjectAsync () As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadElementContentAsObjectAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsObjectAsync : unit -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.ReadElementContentAsObjectAsync : unit -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlReader.ReadElementContentAsObjectAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadElementContentAsObjectAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1850">异步读取当前元素并将内容作为 <see cref="T:System.Object" /> 返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1850">Asynchronously reads the current element and returns the contents as an <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1851">一个最适当类型的装箱的公共语言运行时 (CLR) 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1851">A boxed common language runtime (CLR) object of the most appropriate type.</span>
          </span>
          <span data-ttu-id="8fa94-1852">
            <see cref="P:System.Xml.XmlReader.ValueType" /> 属性确定了适当的 CLR 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1852">The <see cref="P:System.Xml.XmlReader.ValueType" /> property determines the appropriate CLR type.</span>
          </span>
          <span data-ttu-id="8fa94-1853">如果将内容类型化为列表类型，则此方法返回一个适当类型的装箱对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1853">If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1854">这是异步版本<xref:System.Xml.XmlReader.ReadElementContentAsObject%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1854">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-1855">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1855">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1856">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1856">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-1857">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1857">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1858">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1858">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1859">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1859">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-1860">读取当前元素并将内容作为 <see cref="T:System.String" /> 对象返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1860">Reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementContentAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementContentAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementContentAsString();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsString : unit -&gt; string&#xA;override this.ReadElementContentAsString : unit -&gt; string" Usage="xmlReader.ReadElementContentAsString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1861">读取当前元素并将内容作为 <see cref="T:System.String" /> 对象返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1861">Reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1862">作为 <see cref="T:System.String" /> 对象的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1862">The element content as a <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1863">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1863">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1864">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1864">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1865">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1865">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1866">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1866">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1867">有关详细信息，请参阅备注部分的<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1867">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="8fa94-1868">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.ReadElementContentAsStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1868">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-1869">下面的示例读取`stringValue`元素并返回的文本内容 （忽略注释和处理指令）。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1869">The following example reads the `stringValue` element and returns the text content (ignoring the comment and processing instruction).</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#1)]
 [!code-vb[XmlReader.ReadElementContentAs#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#1)]  
  
 <span data-ttu-id="8fa94-1870">示例使用 `dataFile.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1870">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1871">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1871">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1872">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1872">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1873">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1873">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1874">- 或 -  无法将元素内容转换为 <see cref="T:System.String" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1874">-or-  The element content cannot be converted to a <see cref="T:System.String" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1875">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1875">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementContentAsString (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementContentAsString(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsString (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementContentAsString(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsString : string * string -&gt; string&#xA;override this.ReadElementContentAsString : string * string -&gt; string" Usage="xmlReader.ReadElementContentAsString (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="8fa94-1876">元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1876">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-1877">元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1877">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1878">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为 <see cref="T:System.String" /> 对象返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1878">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1879">作为 <see cref="T:System.String" /> 对象的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1879">The element content as a <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1880">此方法读取开始标记，该元素的内容，并将移过结束元素标记读取器。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1880">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="8fa94-1881">扩展实体并将忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1881">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="8fa94-1882">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1882">The element can only contain simple content.</span></span> <span data-ttu-id="8fa94-1883">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1883">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="8fa94-1884">有关详细信息，请参阅备注部分的<xref:System.Xml.XmlReader>引用页和[W3C XML 架构第 2 部分： 数据类型](http://go.microsoft.com/fwlink/?LinkId=4871)建议。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1884">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-1885">下面的示例读取`stringValue`元素并返回的文本内容 （忽略注释和处理指令）。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1885">The following example reads the `stringValue` element and returns the text content (ignoring the comment and processing instruction).</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#2)]
 [!code-vb[XmlReader.ReadElementContentAs#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#2)]  
  
 <span data-ttu-id="8fa94-1886">示例使用 `dataFile.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1886">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1887">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1887">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1888">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1888">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1889">当前元素包含子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1889">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="8fa94-1890">- 或 -  无法将元素内容转换为 <see cref="T:System.String" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1890">-or-  The element content cannot be converted to a <see cref="T:System.String" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-1891">使用 <see langword="null" /> 参数调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1891">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-1892">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1892">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadElementContentAsStringAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadElementContentAsStringAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsStringAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsStringAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadElementContentAsStringAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsStringAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadElementContentAsStringAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.ReadElementContentAsStringAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadElementContentAsStringAsync&gt;c__async3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1893">异步读取当前元素并将内容作为 <see cref="T:System.String" /> 对象返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1893">Asynchronously reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1894">作为 <see cref="T:System.String" /> 对象的元素内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1894">The element content as a <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1895">这是异步版本<xref:System.Xml.XmlReader.ReadElementContentAsString%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1895">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsString%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-1896">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1896">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1897">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1897">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-1898">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1898">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementString">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1899">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1899">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1900">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1900">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-1901">读取只有简单文本的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1901">Reads the simple text-only elements.</span>
          </span>
          <span data-ttu-id="8fa94-1902">但是，建议改用 <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> 方法，因为该方法可以更直接地处理此操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1902">However, we recommend that you use the <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1903">我们建议你使用<xref:System.Xml.XmlReader.ReadElementContentAsString%2A>方法来读取文本元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1903">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString%2A> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementString();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementString : unit -&gt; string&#xA;override this.ReadElementString : unit -&gt; string" Usage="xmlReader.ReadElementString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1904">读取纯文本元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1904">Reads a text-only element.</span>
          </span>
          <span data-ttu-id="8fa94-1905">但是，建议改用 <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> 方法，因为该方法可以更直接地处理此操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1905">However, we recommend that you use the <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1906">所读取的元素中包含的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1906">The text contained in the element that was read.</span>
          </span>
          <span data-ttu-id="8fa94-1907">如果元素为空，则返回一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1907">An empty string if the element is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1908">我们建议你使用<xref:System.Xml.XmlReader.ReadElementContentAsString>方法来读取文本元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1908">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1909">下一个内容节点不是开始标记；或者找到的元素不包含简单文本值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1909">The next content node is not a start tag; or the element found does not contain a simple text value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1910">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1910">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1911">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1911">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementString (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementString(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementString (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementString(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementString : string -&gt; string&#xA;override this.ReadElementString : string -&gt; string" Usage="xmlReader.ReadElementString name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8fa94-1912">要检查的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1912">The name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1913">在读取纯文本元素之前，检查所找到元素的 <see cref="P:System.Xml.XmlReader.Name" /> 属性是否与给定的字符串匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1913">Checks that the <see cref="P:System.Xml.XmlReader.Name" /> property of the element found matches the given string before reading a text-only element.</span>
          </span>
          <span data-ttu-id="8fa94-1914">但是，建议改用 <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> 方法，因为该方法可以更直接地处理此操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1914">However, we recommend that you use the <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1915">所读取的元素中包含的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1915">The text contained in the element that was read.</span>
          </span>
          <span data-ttu-id="8fa94-1916">如果元素为空，则返回一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1916">An empty string if the element is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1917">我们建议你使用<xref:System.Xml.XmlReader.ReadElementContentAsString>方法来读取文本元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1917">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1918">如果下一个内容节点不是一个开始标记；如果元素 <see langword="Name" /> 与给定的参数不匹配；或者如果找到的元素不包含简单的文本值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1918">If the next content node is not a start tag; if the element <see langword="Name" /> does not match the given argument; or if the element found does not contain a simple text value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1919">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1919">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1920">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1920">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementString (string localname, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementString(string localname, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementString (localname As String, ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementString(System::String ^ localname, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementString : string * string -&gt; string&#xA;override this.ReadElementString : string * string -&gt; string" Usage="xmlReader.ReadElementString (localname, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname">
          <span data-ttu-id="8fa94-1921">要检查的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1921">The local name to check.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="8fa94-1922">要检查的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1922">The namespace URI to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-1923">在读取纯文本元素之前，检查所找到元素的 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 属性是否与给定的字符串匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1923">Checks that the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element found matches the given strings before reading a text-only element.</span>
          </span>
          <span data-ttu-id="8fa94-1924">但是，建议改用 <see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /> 方法，因为该方法可以更直接地处理此操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1924">However, we recommend that you use the <see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /> method instead, because it provides a more straightforward way to handle this operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1925">所读取的元素中包含的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1925">The text contained in the element that was read.</span>
          </span>
          <span data-ttu-id="8fa94-1926">如果元素为空，则返回一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1926">An empty string if the element is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1927">我们建议你使用<xref:System.Xml.XmlReader.ReadElementContentAsString%28System.String%2CSystem.String%29>方法来读取文本元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1927">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString%28System.String%2CSystem.String%29> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1928">如果下一个内容节点不是一个开始标记；如果元素 <see langword="LocalName" /> 或 <see langword="NamespaceURI" /> 与给定的参数不匹配；或者如果找到的元素不包含简单的文本值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1928">If the next content node is not a start tag; if the element <see langword="LocalName" /> or <see langword="NamespaceURI" /> do not match the given arguments; or if the element found does not contain a simple text value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1929">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1929">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1930">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1930">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEndElement">
      <MemberSignature Language="C#" Value="public virtual void ReadEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadEndElement();" />
      <MemberSignature Language="F#" Value="abstract member ReadEndElement : unit -&gt; unit&#xA;override this.ReadEndElement : unit -&gt; unit" Usage="xmlReader.ReadEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1931">检查当前内容节点是否为结束标记并将读取器推进到下一个节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1931">Checks that the current content node is an end tag and advances the reader to the next node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa94-1932">下面的示例显示了每个元素的文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1932">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#11](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#11)]
 [!code-vb[XmlReaderBasic#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#11)]  
  
 <span data-ttu-id="8fa94-1933">该示例使用`book3.xml`文件。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1933">The example uses the `book3.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#6](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book3.xml#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1934">当前节点不是一个结束标记，或者如果在输入流中遇到不正确的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1934">The current node is not an end tag or if incorrect XML is encountered in the input stream.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1935">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1935">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1936">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1936">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadStartElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadInnerXml">
      <MemberSignature Language="C#" Value="public virtual string ReadInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadInnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInnerXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadInnerXml();" />
      <MemberSignature Language="F#" Value="abstract member ReadInnerXml : unit -&gt; string&#xA;override this.ReadInnerXml : unit -&gt; string" Usage="xmlReader.ReadInnerXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1937">当在派生类中被重写时，将所有内容（包括标记）当做字符串读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1937">When overridden in a derived class, reads all the content, including markup, as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1938">当前节点中的所有 XML 内容（包括标记）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1938">All the XML content, including markup, in the current node.</span>
          </span>
          <span data-ttu-id="8fa94-1939">如果当前节点没有任何子级，则返回空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1939">If the current node has no children, an empty string is returned.</span>
          </span>
          <span data-ttu-id="8fa94-1940">如果当前节点既非元素，也非属性，则返回空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1940">If the current node is neither an element nor attribute, an empty string is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1941">此方法返回当前节点包括的标记中的所有内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1941">This method returns all the content of the current node including the markup.</span></span> <span data-ttu-id="8fa94-1942">不返回当前节点（开始标记）和对应的结束节点（结束标记）。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1942">The current node (start tag) and corresponding end node (end tag) are not returned.</span></span> <span data-ttu-id="8fa94-1943">例如，如果你有以下：</span><span class="sxs-lookup"><span data-stu-id="8fa94-1943">For example, if you had the following:</span></span>  
  
```xml  
<node>  
 this <child id="123"/>  
</node>  
```  
  
 <span data-ttu-id="8fa94-1944">`ReadInnerXml` 返回 `this <child id="123"/>`</span><span class="sxs-lookup"><span data-stu-id="8fa94-1944">`ReadInnerXml` returns `this <child id="123"/>`</span></span>  
  
 <span data-ttu-id="8fa94-1945">此方法可按以下方式处理元素和属性节点：</span><span class="sxs-lookup"><span data-stu-id="8fa94-1945">This method handles element and attribute nodes in the following manner:</span></span>  
  
|<span data-ttu-id="8fa94-1946">节点类型</span><span class="sxs-lookup"><span data-stu-id="8fa94-1946">Node type</span></span>|<span data-ttu-id="8fa94-1947">调用前的位置</span><span class="sxs-lookup"><span data-stu-id="8fa94-1947">Position before the call</span></span>|<span data-ttu-id="8fa94-1948">XML 片断</span><span class="sxs-lookup"><span data-stu-id="8fa94-1948">XML fragment</span></span>|<span data-ttu-id="8fa94-1949">返回值</span><span class="sxs-lookup"><span data-stu-id="8fa94-1949">Return value</span></span>|<span data-ttu-id="8fa94-1950">在调用后的位置</span><span class="sxs-lookup"><span data-stu-id="8fa94-1950">Position after the call</span></span>|  
|---------------|------------------------------|------------------|------------------|-----------------------------|  
|`Element`|<span data-ttu-id="8fa94-1951">在 `item1` 开始标记上。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1951">On the `item1` start tag.</span></span>|<span data-ttu-id="8fa94-1952">\<item1>text1\</item1>\<item2>text2\</item2></span><span class="sxs-lookup"><span data-stu-id="8fa94-1952">\<item1>text1\</item1>\<item2>text2\</item2></span></span>|<span data-ttu-id="8fa94-1953">text1</span><span class="sxs-lookup"><span data-stu-id="8fa94-1953">text1</span></span>|<span data-ttu-id="8fa94-1954">在 `item2` 开始标记上。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1954">On the `item2` start tag.</span></span>|  
|`Attribute`|<span data-ttu-id="8fa94-1955">在 `attr1` 属性节点上。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1955">On the `attr1` attribute node.</span></span>|<span data-ttu-id="8fa94-1956">\<item attr1="val1" attr2="val2">text\</item></span><span class="sxs-lookup"><span data-stu-id="8fa94-1956">\<item attr1="val1" attr2="val2">text\</item></span></span>|<span data-ttu-id="8fa94-1957">val1</span><span class="sxs-lookup"><span data-stu-id="8fa94-1957">val1</span></span>|<span data-ttu-id="8fa94-1958">保留在 `attr1` 属性节点上。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1958">Remains on the `attr1` attribute node.</span></span>|  
  
 <span data-ttu-id="8fa94-1959">如果读取器定位在叶节点上，则调用 `ReadInnerXml` 等效于调用 <xref:System.Xml.XmlReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1959">If the reader is positioned on a leaf node, calling `ReadInnerXml` is equivalent to calling <xref:System.Xml.XmlReader.Read%2A>.</span></span> <span data-ttu-id="8fa94-1960">该方法返回`String.Empty`（特性节点除外，在这种情况下返回的属性的值）。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1960">The method returns `String.Empty` (except for attribute nodes, in which case the value of the attribute is returned).</span></span>  
  
 <span data-ttu-id="8fa94-1961">此方法会检查格式正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1961">This method checks for well-formed XML.</span></span> <span data-ttu-id="8fa94-1962">如果`ReadInnerXml`从调用<xref:System.Xml.XmlValidatingReader>，此方法还将验证返回的内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1962">If `ReadInnerXml` is called from an <xref:System.Xml.XmlValidatingReader>, this method also validates the content returned.</span></span>  
  
 <span data-ttu-id="8fa94-1963">在中实现<xref:System.Xml.XmlNodeReader>，<xref:System.Xml.XmlTextReader>和`XmlValidatingReader`类`ReadOuterXml`方法可以识别命名空间。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1963">As implemented in the <xref:System.Xml.XmlNodeReader>, <xref:System.Xml.XmlTextReader> and `XmlValidatingReader` classes the `ReadOuterXml` method is namespace aware.</span></span>  
  
 <span data-ttu-id="8fa94-1964">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1964">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-1965">下面的示例比较`ReadInnerXml`和<xref:System.Xml.XmlReader.ReadOuterXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1965">The following example compares the `ReadInnerXml` and <xref:System.Xml.XmlReader.ReadOuterXml%2A> methods.</span></span>  
  
 [!code-csharp[XmlReaderBasic#12](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#12)]
 [!code-vb[XmlReaderBasic#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#12)]  
  
 <span data-ttu-id="8fa94-1966">该示例使用`2books.xml`文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1966">The example uses `2books.xml` file as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-1967">XML 的格式不良，或分析 XML 时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1967">The XML was not well-formed, or an error occurred while parsing the XML.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1968">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1968">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-1969">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1969">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInnerXmlAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadInnerXmlAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadInnerXmlAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadInnerXmlAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInnerXmlAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadInnerXmlAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadInnerXmlAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadInnerXmlAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.ReadInnerXmlAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadInnerXmlAsync&gt;c__async6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1970">异步读取所有内容，包括作为字符串的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1970">Asynchronously reads all the content, including markup, as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1971">当前节点中的所有 XML 内容（包括标记）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1971">All the XML content, including markup, in the current node.</span>
          </span>
          <span data-ttu-id="8fa94-1972">如果当前节点没有任何子级，则返回空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1972">If the current node has no children, an empty string is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1973">这是异步版本<xref:System.Xml.XmlReader.ReadInnerXml%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1973">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadInnerXml%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-1974">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1974">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-1975">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1975">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-1976">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1976">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadOuterXml">
      <MemberSignature Language="C#" Value="public virtual string ReadOuterXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadOuterXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadOuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadOuterXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadOuterXml();" />
      <MemberSignature Language="F#" Value="abstract member ReadOuterXml : unit -&gt; string&#xA;override this.ReadOuterXml : unit -&gt; string" Usage="xmlReader.ReadOuterXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-1977">当在派生类中被重写时，读取表示该节点和所有它的子级的内容（包括标记）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1977">When overridden in a derived class, reads the content, including markup, representing this node and all its children.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-1978">如果读取器定位在元素或属性节点上，此方法将返回当前节点及其所有子级的所有 XML 内容（包括标记）；否则返回空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-1978">If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-1979">此方法类似于是<xref:System.Xml.XmlReader.ReadInnerXml%2A>但它还返回的开始和结束标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1979">This method is similar to <xref:System.Xml.XmlReader.ReadInnerXml%2A> except it also returns the start and end tags.</span></span>  
  
 <span data-ttu-id="8fa94-1980">此方法可按以下方式处理元素和属性节点：</span><span class="sxs-lookup"><span data-stu-id="8fa94-1980">This method handles element and attribute nodes in the following manner:</span></span>  
  
|<span data-ttu-id="8fa94-1981">节点类型</span><span class="sxs-lookup"><span data-stu-id="8fa94-1981">Node type</span></span>|<span data-ttu-id="8fa94-1982">调用前的位置</span><span class="sxs-lookup"><span data-stu-id="8fa94-1982">Position before the call</span></span>|<span data-ttu-id="8fa94-1983">XML 片断</span><span class="sxs-lookup"><span data-stu-id="8fa94-1983">XML fragment</span></span>|<span data-ttu-id="8fa94-1984">返回值</span><span class="sxs-lookup"><span data-stu-id="8fa94-1984">Return value</span></span>|<span data-ttu-id="8fa94-1985">在调用后的位置</span><span class="sxs-lookup"><span data-stu-id="8fa94-1985">Position After the Call</span></span>|  
|---------------|------------------------------|------------------|------------------|-----------------------------|  
|`Element`|<span data-ttu-id="8fa94-1986">在 `item1` 开始标记上。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1986">On the `item1` start tag.</span></span>|<span data-ttu-id="8fa94-1987">\<item1>text1\</item1>\<item2>text2\</item2></span><span class="sxs-lookup"><span data-stu-id="8fa94-1987">\<item1>text1\</item1>\<item2>text2\</item2></span></span>|<span data-ttu-id="8fa94-1988">\<item1>text1\</item1></span><span class="sxs-lookup"><span data-stu-id="8fa94-1988">\<item1>text1\</item1></span></span>|<span data-ttu-id="8fa94-1989">在 `item2` 开始标记上。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1989">On the `item2` start tag.</span></span>|  
|`Attribute`|<span data-ttu-id="8fa94-1990">在 `attr1` 属性节点上。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1990">On the `attr1` attribute node.</span></span>|<span data-ttu-id="8fa94-1991">\<item attr1="val1" attr2="val2">text\</item></span><span class="sxs-lookup"><span data-stu-id="8fa94-1991">\<item attr1="val1" attr2="val2">text\</item></span></span>|<span data-ttu-id="8fa94-1992">attr1="val1"</span><span class="sxs-lookup"><span data-stu-id="8fa94-1992">attr1="val1"</span></span>|<span data-ttu-id="8fa94-1993">保留在 `attr1` 属性节点上。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1993">Remains on the `attr1` attribute node.</span></span>|  
  
 <span data-ttu-id="8fa94-1994">如果读取器定位在叶节点上，则调用 `ReadOuterXml` 等效于调用 <xref:System.Xml.XmlReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1994">If the reader is positioned on a leaf node, calling `ReadOuterXml` is equivalent to calling <xref:System.Xml.XmlReader.Read%2A>.</span></span> <span data-ttu-id="8fa94-1995">该方法返回`String.Empty`（特性节点除外，在这种情况下返回的属性标记）。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1995">The method returns `String.Empty` (except for attribute nodes, in which case the attribute markup is returned).</span></span>  
  
 <span data-ttu-id="8fa94-1996">此方法会检查格式正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1996">This method checks for well-formed XML.</span></span> <span data-ttu-id="8fa94-1997">如果`ReadOuterXml`从调用<xref:System.Xml.XmlValidatingReader>，此方法还将验证返回的内容</span><span class="sxs-lookup"><span data-stu-id="8fa94-1997">If `ReadOuterXml` is called from an <xref:System.Xml.XmlValidatingReader>, this method also validates the content returned</span></span>  
  
 <span data-ttu-id="8fa94-1998">在中实现<xref:System.Xml.XmlNodeReader>，<xref:System.Xml.XmlTextReader>和`XmlValidatingReader`类`ReadOuterXml`方法可以识别命名空间。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1998">As implemented in the <xref:System.Xml.XmlNodeReader>, <xref:System.Xml.XmlTextReader> and `XmlValidatingReader` classes the `ReadOuterXml` method is namespace aware.</span></span> <span data-ttu-id="8fa94-1999">给定以下 XML 文本`<A xmlns:S="urn:1"><S:B>hello</S:B></A>`，如果读取器定位在`S:B`开始标记，`ReadOuterXml`返回`<S:B xmlns:S="urn:1">hello<S:B/>`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-1999">Given the following XML text `<A xmlns:S="urn:1"><S:B>hello</S:B></A>`, if the reader were positioned on the `S:B` start tag, `ReadOuterXml` returns `<S:B xmlns:S="urn:1">hello<S:B/>`.</span></span>  
  
 <span data-ttu-id="8fa94-2000">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2000">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-2001">下面的示例比较`ReadInnerXml`和`ReadOuterXml`方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2001">The following example compares the `ReadInnerXml` and `ReadOuterXml` methods.</span></span>  
  
 [!code-csharp[XmlReaderBasic#12](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#12)]
 [!code-vb[XmlReaderBasic#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#12)]  
  
 <span data-ttu-id="8fa94-2002">该示例使用`2books.xml`文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2002">The example uses `2books.xml` file as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-2003">XML 的格式不良，或分析 XML 时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2003">The XML was not well-formed, or an error occurred while parsing the XML.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2004">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2004">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2005">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2005">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadOuterXmlAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadOuterXmlAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadOuterXmlAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadOuterXmlAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadOuterXmlAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadOuterXmlAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadOuterXmlAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadOuterXmlAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.ReadOuterXmlAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadOuterXmlAsync&gt;c__async8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-2006">异步读取包含该节点和所有它的子级的内容（包括标记）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2006">Asynchronously reads the content, including markup, representing this node and all its children.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-2007">如果读取器定位在元素或属性节点上，此方法将返回当前节点及其所有子级的所有 XML 内容（包括标记）；否则返回空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2007">If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2008">这是异步版本<xref:System.Xml.XmlReader.ReadOuterXml%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2008">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadOuterXml%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-2009">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2009">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2010">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2010">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-2011">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2011">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2012">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2012">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2013">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2013">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-2014">检查当前节点是否为元素并将读取器推进到下一个节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2014">Checks that the current node is an element and advances the reader to the next node.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadStartElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadStartElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadStartElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadStartElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadStartElement();" />
      <MemberSignature Language="F#" Value="abstract member ReadStartElement : unit -&gt; unit&#xA;override this.ReadStartElement : unit -&gt; unit" Usage="xmlReader.ReadStartElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-2015">检查当前节点是否为元素并将读取器推进到下一个节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2015">Checks that the current node is an element and advances the reader to the next node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2016">此方法调用<xref:System.Xml.XmlReader.IsStartElement%2A>跟<xref:System.Xml.XmlReader.Read%2A>将您定位在输入流中找到该元素的内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2016">This method calls <xref:System.Xml.XmlReader.IsStartElement%2A> followed by <xref:System.Xml.XmlReader.Read%2A> to position you on the content of that element found in the input stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-2017">在输入流中遇到不正确的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2017">Incorrect XML was encountered in the input stream.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2018">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2018">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2019">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2019">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadEndElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadStartElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadStartElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadStartElement (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadStartElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadStartElement : string -&gt; unit&#xA;override this.ReadStartElement : string -&gt; unit" Usage="xmlReader.ReadStartElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8fa94-2020">元素的限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2020">The qualified name of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-2021">检查当前内容节点是否为具有给定 <see cref="P:System.Xml.XmlReader.Name" /> 的元素并将读取器推进到下一个节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2021">Checks that the current content node is an element with the given <see cref="P:System.Xml.XmlReader.Name" /> and advances the reader to the next node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2022">对此方法的调用对应于调用<xref:System.Xml.XmlReader.IsStartElement%2A>跟调用<xref:System.Xml.XmlReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2022">A call to this method corresponds to a call to <xref:System.Xml.XmlReader.IsStartElement%2A> followed by a call to <xref:System.Xml.XmlReader.Read%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-2023">下面的示例显示了每个元素的文本内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2023">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#11](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#11)]
 [!code-vb[XmlReaderBasic#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#11)]  
  
 <span data-ttu-id="8fa94-2024">该示例使用`book3.xml`文件。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2024">The example uses the `book3.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#6](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book3.xml#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-2025">在输入流中遇到不正确的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2025">Incorrect XML was encountered in the input stream.</span>
          </span>
          <span data-ttu-id="8fa94-2026">- 或 -  元素的 <see cref="P:System.Xml.XmlReader.Name" /> 与给定的 <paramref name="name" /> 不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2026">-or-  The <see cref="P:System.Xml.XmlReader.Name" /> of the element does not match the given <paramref name="name" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2027">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2027">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2028">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2028">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadEndElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadStartElement (string localname, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadStartElement(string localname, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadStartElement (localname As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadStartElement(System::String ^ localname, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member ReadStartElement : string * string -&gt; unit&#xA;override this.ReadStartElement : string * string -&gt; unit" Usage="xmlReader.ReadStartElement (localname, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname">
          <span data-ttu-id="8fa94-2029">元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2029">The local name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="8fa94-2030">元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2030">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-2031">检查当前内容节点是否为具有给定 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 的元素并将读取器推进到下一个节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2031">Checks that the current content node is an element with the given <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> and advances the reader to the next node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2032">对此方法的调用对应于调用<xref:System.Xml.XmlReader.IsStartElement%2A>跟调用<xref:System.Xml.XmlReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2032">A call to this method corresponds to a call to <xref:System.Xml.XmlReader.IsStartElement%2A> followed by a call to <xref:System.Xml.XmlReader.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-2033">在输入流中遇到不正确的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2033">Incorrect XML was encountered in the input stream.</span>
          </span>
          <span data-ttu-id="8fa94-2034">- 或 -  所找到元素的 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 属性与给定的参数不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2034">-or-  The <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element found do not match the given arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2035">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2035">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2036">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2036">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadEndElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public abstract System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-2037">当在派生类中被重写时，获取读取器的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2037">When overridden in a derived class, gets the state of the reader.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-2038">指定读取器的状态的枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2038">One of the enumeration values that specifies the state of the reader.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2039"><xref:System.Xml.XmlReader.ReadState%2A>属性具有以下值之一：</span><span class="sxs-lookup"><span data-stu-id="8fa94-2039">The <xref:System.Xml.XmlReader.ReadState%2A> property has one of the following values:</span></span>  
  
-   <span data-ttu-id="8fa94-2040"><xref:System.Xml.ReadState.Initial>当<xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType>调用方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2040"><xref:System.Xml.ReadState.Initial>, when the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> method is called.</span></span>  
  
-   <span data-ttu-id="8fa94-2041"><xref:System.Xml.ReadState.Interactive>当<xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType>已调用方法，并且可能在读取器上调用其他方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2041"><xref:System.Xml.ReadState.Interactive>, when the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> method has been called, and additional methods may be called on the reader.</span></span>  
  
-   <span data-ttu-id="8fa94-2042"><xref:System.Xml.ReadState.EndOfFile>已在成功到达 XML 文档的结尾。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2042"><xref:System.Xml.ReadState.EndOfFile>, when the end of the XML document has been reached successfully.</span></span>  
  
-   <span data-ttu-id="8fa94-2043"><xref:System.Xml.ReadState.Closed>当<xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType>调用方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2043"><xref:System.Xml.ReadState.Closed>, when the <xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType> method is called.</span></span>  
  
-   <span data-ttu-id="8fa94-2044"><xref:System.Xml.ReadState.Error>当发生错误，无法读取的安装程序无法继续。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2044"><xref:System.Xml.ReadState.Error>, when an error is preventing the read operation from continuing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2045">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2045">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2046">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2046">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public virtual string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="abstract member ReadString : unit -&gt; string&#xA;override this.ReadString : unit -&gt; string" Usage="xmlReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-2047">当在派生类中被重写时，将元素或文本节点的内容当做字符串读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2047">When overridden in a derived class, reads the contents of an element or text node as a string.</span>
          </span>
          <span data-ttu-id="8fa94-2048">但是，建议改用 <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> 方法，因为该方法可以更直接地处理此操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2048">However, we recommend that you use the <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-2049">元素的内容或空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2049">The contents of the element or an empty string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2050">我们建议你使用<xref:System.Xml.XmlReader.ReadElementContentAsString%2A>方法来读取元素或文本节点作为字符串的内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2050">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString%2A> method to read the contents of an element or text node as a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-2051">分析 XML 时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2051">An error occurred while parsing the XML.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2052">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2052">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2053">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2053">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader ReadSubtree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader ReadSubtree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadSubtree" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSubtree () As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlReader ^ ReadSubtree();" />
      <MemberSignature Language="F#" Value="abstract member ReadSubtree : unit -&gt; System.Xml.XmlReader&#xA;override this.ReadSubtree : unit -&gt; System.Xml.XmlReader" Usage="xmlReader.ReadSubtree " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-2054">返回新的 <see langword="XmlReader" /> 实例，此实例可用于读取当前节点及其所有子节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2054">Returns a new <see langword="XmlReader" /> instance that can be used to read the current node, and all its descendants.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-2055">设置为 <see cref="F:System.Xml.ReadState.Initial" /> 的新 XML 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2055">A new XML reader instance set to <see cref="F:System.Xml.ReadState.Initial" />.</span>
          </span>
          <span data-ttu-id="8fa94-2056">调用 <see cref="M:System.Xml.XmlReader.Read" /> 方法时，会将新的读取器定位在调用 <see cref="M:System.Xml.XmlReader.ReadSubtree" /> 方法之前的当前节点上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2056">Calling the <see cref="M:System.Xml.XmlReader.Read" /> method positions the new reader on the node that was current before the call to the <see cref="M:System.Xml.XmlReader.ReadSubtree" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2057"><xref:System.Xml.XmlReader.ReadSubtree%2A> 可以仅在元素节点上调用。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2057"><xref:System.Xml.XmlReader.ReadSubtree%2A> can be called only on element nodes.</span></span> <span data-ttu-id="8fa94-2058">当已读取整个子树时，调用到<xref:System.Xml.XmlReader.Read%2A>方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2058">When the entire sub-tree has been read, calls to the <xref:System.Xml.XmlReader.Read%2A> method returns `false`.</span></span> <span data-ttu-id="8fa94-2059">当新的 XML 读取器已关闭，位于原始 readeris`EndElement`节点的子树。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2059">When the new XML reader has been closed, the original readeris positioned on the `EndElement` node of the sub-tree.</span></span> <span data-ttu-id="8fa94-2060">因此，如果调用<xref:System.Xml.XmlReader.ReadSubtree%2A>未关闭的书籍元素子树已读取和新的 XML 读取器之后开始标记上的方法，原始的 XML 读取器定位在的书籍元素的结束标记。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2060">Thus, if you called the <xref:System.Xml.XmlReader.ReadSubtree%2A> method on the start tag of the book element, after the sub-tree has been read and the new XML reader has been closed, the original XML reader is positioned on the end tag of the book element.</span></span>  
  
 <span data-ttu-id="8fa94-2061">在关闭新的读取器之前，不应对原始读取器执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2061">You should not perform any operations on the original reader until the new reader has been closed.</span></span> <span data-ttu-id="8fa94-2062">不支持此操作，因为这样可能会导致意想不到的行为。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2062">This action is not supported and can result in unpredictable behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8fa94-2063"><xref:System.Xml.XmlReader.ReadSubtree%2A>方法不适用于 creatingcopies 可以独立地使用 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2063">The <xref:System.Xml.XmlReader.ReadSubtree%2A> method isn't intended for creatingcopies of the XML data that you can work with independently.</span></span> <span data-ttu-id="8fa94-2064">它的 designedto 创建 XML 元素周围的边界。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2064">It's designedto create a boundary around an XML element.</span></span> <span data-ttu-id="8fa94-2065">如果你想要将数据传递给另一个组件进行处理，你想要限制组件可以访问你数据，这非常有用。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2065">This is useful if you want to pass data to another component for processing and you wish to limit how much of your data the component can access.</span></span> <span data-ttu-id="8fa94-2066">传递时，返回 XML 读取器<xref:System.Xml.XmlReader.ReadSubtree%2A>给另一个应用程序，应用程序的方法可以访问仅该 XML 元素，不是整个 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2066">When you pass an XML reader returned by the <xref:System.Xml.XmlReader.ReadSubtree%2A> method to another application, the application can access only that XML element, not the entire XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-2067">下面的示例显示如何使用 <xref:System.Xml.XmlReader.ReadSubtree%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2067">The following example shows how to use the <xref:System.Xml.XmlReader.ReadSubtree%2A> method.</span></span>  
  
 [!code-csharp[XmlReaderBasic#13](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#13)]
 [!code-vb[XmlReaderBasic#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#13)]  
  
 <span data-ttu-id="8fa94-2068">使用下面的 XML 数据，若要运行本主题中的示例：</span><span class="sxs-lookup"><span data-stu-id="8fa94-2068">Use the following XML data to run the examples in this topic:</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<Books>  
  <Book>  
    <Title>A Brief History of Time</Title>  
  </Book>  
  <Book>  
    <Title>Principle Of Relativity</Title>  
  </Book>  
  <Book>  
    <Title>Victory of Reason</Title>  
  </Book>  
  <Book>  
    <Title>The Unicorn that did not Fail</Title>  
  </Book>  
  <Book>  
    <Title>Rational Ontology</Title>  
  </Book>  
  <Book>  
    <Title>The Meaning of Pizza</Title>  
  </Book>  
</Books>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2069">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2069">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2070">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2070">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToDescendant">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2071">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2071">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2072">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2072">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-2073">让 <see cref="T:System.Xml.XmlReader" /> 前进到下一个匹配的子代元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2073">Advances the <see cref="T:System.Xml.XmlReader" /> to the next matching descendant element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToDescendant">
      <MemberSignature Language="C#" Value="public virtual bool ReadToDescendant (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToDescendant(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToDescendant (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToDescendant(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadToDescendant : string -&gt; bool&#xA;override this.ReadToDescendant : string -&gt; bool" Usage="xmlReader.ReadToDescendant name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8fa94-2074">要移动到的元素的限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2074">The qualified name of the element you wish to move to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-2075">让 <see cref="T:System.Xml.XmlReader" /> 前进到下一个具有指定限定名的子代元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2075">Advances the <see cref="T:System.Xml.XmlReader" /> to the next descendant element with the specified qualified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-2076">如果找到匹配的子代元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2076">
              <see langword="true" /> if a matching descendant element is found; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8fa94-2077">如果未找到匹配的子元素，<see cref="T:System.Xml.XmlReader" /> 将定位在元素的结束标记（<see cref="P:System.Xml.XmlReader.NodeType" /> 为 <see langword="XmlNodeType.EndElement" />）上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2077">If a matching child element is not found, the <see cref="T:System.Xml.XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the element.</span>
          </span>
          <span data-ttu-id="8fa94-2078">如果调用 <see cref="T:System.Xml.XmlReader" /> 时没有将 <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /> 定位在某个元素上，则此方法返回 <see langword="false" /> 且 <see cref="T:System.Xml.XmlReader" /> 的位置保持不变。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2078">If the <see cref="T:System.Xml.XmlReader" /> is not positioned on an element when <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /> was called, this method returns <see langword="false" /> and the position of the <see cref="T:System.Xml.XmlReader" /> is not changed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa94-2079">下面的示例分析第二个 book 节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2079">The following example parses the second book node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#14](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#14)]
 [!code-vb[XmlReaderBasic#14](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#14)]  
  
 <span data-ttu-id="8fa94-2080">该示例使用文件，`2books.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2080">The example uses the file, `2books.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2081">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2081">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2082">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2082">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-2083">参数是空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2083">The parameter is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToDescendant">
      <MemberSignature Language="C#" Value="public virtual bool ReadToDescendant (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToDescendant(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToDescendant (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToDescendant(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadToDescendant : string * string -&gt; bool&#xA;override this.ReadToDescendant : string * string -&gt; bool" Usage="xmlReader.ReadToDescendant (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="8fa94-2084">要移动到的元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2084">The local name of the element you wish to move to.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-2085">要移动到的元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2085">The namespace URI of the element you wish to move to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-2086">让 <see cref="T:System.Xml.XmlReader" /> 前进到下一个具有指定的本地名称和命名空间 URI 的子代元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2086">Advances the <see cref="T:System.Xml.XmlReader" /> to the next descendant element with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-2087">如果找到匹配的子代元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2087">
              <see langword="true" /> if a matching descendant element is found; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8fa94-2088">如果未找到匹配的子元素，<see cref="T:System.Xml.XmlReader" /> 将定位在元素的结束标记（<see cref="P:System.Xml.XmlReader.NodeType" /> 为 <see langword="XmlNodeType.EndElement" />）上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2088">If a matching child element is not found, the <see cref="T:System.Xml.XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the element.</span>
          </span>
          <span data-ttu-id="8fa94-2089">如果调用 <see cref="T:System.Xml.XmlReader" /> 时没有将 <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /> 定位在某个元素上，则此方法返回 <see langword="false" /> 且 <see cref="T:System.Xml.XmlReader" /> 的位置保持不变。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2089">If the <see cref="T:System.Xml.XmlReader" /> is not positioned on an element when <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /> was called, this method returns <see langword="false" /> and the position of the <see cref="T:System.Xml.XmlReader" /> is not changed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2090">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2090">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2091">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2091">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-2092">两个参数值均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2092">Both parameter values are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToFollowing">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2093">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2093">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2094">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2094">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-2095">一直读取，直到找到命名元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2095">Reads until the named element is found.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool ReadToFollowing (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToFollowing(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToFollowing(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToFollowing (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToFollowing(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadToFollowing : string -&gt; bool&#xA;override this.ReadToFollowing : string -&gt; bool" Usage="xmlReader.ReadToFollowing name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8fa94-2096">元素的限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2096">The qualified name of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-2097">一直读取，直到找到具有指定限定名的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2097">Reads until an element with the specified qualified name is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-2098">如果找到匹配的元素，则为 <see langword="true" />；否则为 <see langword="false" /> 且 <see cref="T:System.Xml.XmlReader" /> 位于文件的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2098">
              <see langword="true" /> if a matching element is found; otherwise <see langword="false" /> and the <see cref="T:System.Xml.XmlReader" /> is in an end of file state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2099">此方法是功能上等效执行`following::name`从当前节点的 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2099">This method is functionally equivalent executing the `following::name` XPath expression from the current node.</span></span> <span data-ttu-id="8fa94-2100">它提供了在 XML 文档中查找命名的元素的快速方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2100">It provides a quick way to find a named element in the XML document.</span></span> <span data-ttu-id="8fa94-2101">将读取器推进到下一步的后续元素，匹配的指定的名称，并返回`true`如果找到了匹配的元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2101">It advances the reader to the next following element that matches the specified name and returns `true` if a matching element is found.</span></span> <span data-ttu-id="8fa94-2102">使用下面的示例中，读取器将读取到指定的元素的第一个实例转发读取时。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2102">Using the example below, the reader would read to the first instance of the specified element while reading forward.</span></span>  
  
```xml  
<!--"sample.xml"-->  
<?xmlversion="1.0">  
   <items>  
      <item xmls="urn:1"/>  
   </items>  
</xml>  
  
```  
  
```csharp  
XmlTextReader reader = newXmlTextReader("sample.xml");  
  
reader.ReadToFollowing("item");  
  
```  
  
 <span data-ttu-id="8fa94-2103">可以在所有节点类型上调用此方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2103">This method can be called on all node types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2104">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2104">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2105">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2105">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-2106">参数是空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2106">The parameter is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool ReadToFollowing (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToFollowing(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToFollowing (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToFollowing(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadToFollowing : string * string -&gt; bool&#xA;override this.ReadToFollowing : string * string -&gt; bool" Usage="xmlReader.ReadToFollowing (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="8fa94-2107">元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2107">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-2108">元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2108">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-2109">一直读取，直到找到具有指定的本地名称和命名空间 URI 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2109">Reads until an element with the specified local name and namespace URI is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-2110">如果找到匹配的元素，则为 <see langword="true" />；否则为 <see langword="false" /> 且 <see cref="T:System.Xml.XmlReader" /> 位于文件的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2110">
              <see langword="true" /> if a matching element is found; otherwise <see langword="false" /> and the <see cref="T:System.Xml.XmlReader" /> is in an end of file state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2111">此方法是功能上等效执行`following::name`从当前节点的 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2111">This method is functionally equivalent executing the `following::name` XPath expression from the current node.</span></span> <span data-ttu-id="8fa94-2112">它提供了在 XML 文档中查找命名的元素的快速方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2112">It provides a quick way to find a named element in the XML document.</span></span> <span data-ttu-id="8fa94-2113">将读取器推进到下一步的后续元素，匹配的指定的名称，并返回`true`如果找到了匹配的元素。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2113">It advances the reader to the next following element that matches the specified name and returns `true` if a matching element is found.</span></span>  
  
```xml  
<!--"sample.xml"-->  
<?xmlversion="1.0">  
   <items>  
      <item xmls="urn:1"/>  
   </items>  
</xml>  
  
```  
  
```csharp  
XmlTextReader reader = newXmlTextReader("sample.xml");  
  
reader.ReadToFollowing("item", "urn:1");  
  
```  
  
 <span data-ttu-id="8fa94-2114">可以在所有节点类型上调用此方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2114">This method can be called on all node types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2115">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2115">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2116">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2116">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-2117">两个参数值均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2117">Both parameter values are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToNextSibling">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2118">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2118">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2119">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2119">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="8fa94-2120">让 <see langword="XmlReader" /> 前进到下一个匹配的同级元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2120">Advances the <see langword="XmlReader" /> to the next matching sibling element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToNextSibling">
      <MemberSignature Language="C#" Value="public virtual bool ReadToNextSibling (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToNextSibling(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToNextSibling(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToNextSibling (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToNextSibling(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadToNextSibling : string -&gt; bool&#xA;override this.ReadToNextSibling : string -&gt; bool" Usage="xmlReader.ReadToNextSibling name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8fa94-2121">要移动到的同级元素的限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2121">The qualified name of the sibling element you wish to move to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-2122">让 <see langword="XmlReader" /> 前进到下一个具有指定限定名的同级元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2122">Advances the <see langword="XmlReader" /> to the next sibling element with the specified qualified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-2123">如果找到匹配的同级元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2123">
              <see langword="true" /> if a matching sibling element is found; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8fa94-2124">如果没有找到匹配的同级元素，<see langword="XmlReader" /> 会定位在父元素的结束标记（<see cref="P:System.Xml.XmlReader.NodeType" /> 为 <see langword="XmlNodeType.EndElement" />）上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2124">If a matching sibling element is not found, the <see langword="XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the parent element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="8fa94-2125">不要调用<xref:System.Xml.XmlReader.ReadToNextSibling%2A>时`XmlReader`是初始状态 (<xref:System.Xml.XmlReader.ReadState%2A>是<xref:System.Xml.ReadState.Initial>)。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2125">Do not call <xref:System.Xml.XmlReader.ReadToNextSibling%2A> when the `XmlReader` is an initial state (<xref:System.Xml.XmlReader.ReadState%2A> is <xref:System.Xml.ReadState.Initial>).</span></span> <span data-ttu-id="8fa94-2126">你可以调用<xref:System.Xml.XmlReader.Read%2A>向前移动`XmlReader`，然后调用<xref:System.Xml.XmlReader.ReadToNextSibling%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2126">You can call <xref:System.Xml.XmlReader.Read%2A> to advance the `XmlReader` and then call the <xref:System.Xml.XmlReader.ReadToNextSibling%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-2127">下面的示例读取每个 book 节点上的 ISBN 属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2127">The following example reads the ISBN attribute on each book node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#15](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#15)]
 [!code-vb[XmlReaderBasic#15](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2128">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2128">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2129">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2129">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fa94-2130">参数是空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2130">The parameter is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToNextSibling">
      <MemberSignature Language="C#" Value="public virtual bool ReadToNextSibling (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToNextSibling(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToNextSibling (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToNextSibling(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadToNextSibling : string * string -&gt; bool&#xA;override this.ReadToNextSibling : string * string -&gt; bool" Usage="xmlReader.ReadToNextSibling (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="8fa94-2131">要移动到的同级元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2131">The local name of the sibling element you wish to move to.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="8fa94-2132">你希望移动到的同级元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2132">The namespace URI of the sibling element you wish to move to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-2133">将 <see langword="XmlReader" /> 推进到具有指定的本地名称和命名空间 URI 的下一个同级元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2133">Advances the <see langword="XmlReader" /> to the next sibling element with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-2134">如果找到匹配的同级元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2134">
              <see langword="true" /> if a matching sibling element is found; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8fa94-2135">如果没有找到匹配的同级元素，<see langword="XmlReader" /> 会定位在父元素的结束标记（<see cref="P:System.Xml.XmlReader.NodeType" /> 为 <see langword="XmlNodeType.EndElement" />）上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2135">If a matching sibling element is not found, the <see langword="XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the parent element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="8fa94-2136">不要调用<xref:System.Xml.XmlReader.ReadToNextSibling%2A>时`XmlReader`是初始状态 (<xref:System.Xml.XmlReader.ReadState%2A>是<xref:System.Xml.ReadState.Initial>)。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2136">Do not call <xref:System.Xml.XmlReader.ReadToNextSibling%2A> when the `XmlReader` is an initial state (<xref:System.Xml.XmlReader.ReadState%2A> is <xref:System.Xml.ReadState.Initial>).</span></span> <span data-ttu-id="8fa94-2137">你可以调用<xref:System.Xml.XmlReader.Read%2A>向前移动`XmlReader`，然后调用<xref:System.Xml.XmlReader.ReadToNextSibling%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2137">You can call <xref:System.Xml.XmlReader.Read%2A> to advance the `XmlReader` and then call the <xref:System.Xml.XmlReader.ReadToNextSibling%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2138">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2138">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2139">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2139">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-2140">两个参数值均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2140">Both parameter values are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadValueChunk">
      <MemberSignature Language="C#" Value="public virtual int ReadValueChunk (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadValueChunk(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadValueChunk (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadValueChunk(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadValueChunk : char[] * int * int -&gt; int&#xA;override this.ReadValueChunk : char[] * int * int -&gt; int" Usage="xmlReader.ReadValueChunk (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8fa94-2141">作为文本内容写入到的缓冲区的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2141">The array of characters that serves as the buffer to which the text contents are written.</span>
          </span>
          <span data-ttu-id="8fa94-2142">此值不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2142">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8fa94-2143">缓冲区中的偏移量，<see cref="T:System.Xml.XmlReader" /> 可以从这个位置开始复制结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2143">The offset within the buffer where the <see cref="T:System.Xml.XmlReader" /> can start to copy the results.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8fa94-2144">要复制到缓冲区中的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2144">The maximum number of characters to copy into the buffer.</span>
          </span>
          <span data-ttu-id="8fa94-2145">此方法返回复制的实际字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2145">The actual number of characters copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-2146">读取嵌入在 XML 文档中的大量文本流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2146">Reads large streams of text embedded in an XML document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-2147">读取到缓冲区中的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2147">The number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="8fa94-2148">如果不再有文本内容，则返回值零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2148">The value zero is returned when there is no more text content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2149">此方法可实现的非常大的流式处理方式，即，XML 文档中嵌入的文本流读取少量的字符而不是为整个值分配单个字符串的一次。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2149">This method enables reading of very large streams of text embedded in an XML document in a streaming fashion, that is, a small number of characters at a time instead of allocating a single string for the whole value.</span></span> <span data-ttu-id="8fa94-2150">可以具有值的任何节点上调用此方法 (<xref:System.Xml.XmlReader.HasValue%2A>是`true`)，但实际流式处理的节点值仅在文本、 空白和有效空白节点上调用时出现。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2150">This method can be called on any node that has a value (<xref:System.Xml.XmlReader.HasValue%2A> is `true`), however actual streaming of the node value only occurs when called on a text, white space and significant white space nodes.</span></span> <span data-ttu-id="8fa94-2151">其他节点类型值进行缓存，包括属性和 CDATA 节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2151">Other node type values are cached, including attributes and CDATA nodes.</span></span>  
  
 <span data-ttu-id="8fa94-2152">此方法返回的内容<xref:System.Xml.XmlReader.Value%2A>属性并不会移动<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2152">This method returns only the content of the <xref:System.Xml.XmlReader.Value%2A> property and does not move the <xref:System.Xml.XmlReader>.</span></span>  
  
 <span data-ttu-id="8fa94-2153">此方法读取指定的数目的字符 (`count`) 到字符缓冲区中的节点值 (`buffer`) 指定偏移量 (`index`) 并返回写入到缓冲区的字符数。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2153">This method reads the specified number of characters (`count`) of the node value into a character buffer (`buffer`) at a specified offset (`index`) and returns the number of characters written to the buffer.</span></span> <span data-ttu-id="8fa94-2154">它将返回`0`时它已达到值的末尾。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2154">It returns the `0` when it has reached the end of the value.</span></span> <span data-ttu-id="8fa94-2155">它不能重新启动才能再次读取该值。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2155">It cannot be restarted to read through the value again.</span></span>  
  
 <span data-ttu-id="8fa94-2156">对的调用之间<xref:System.Xml.XmlReader.ReadValueChunk%2A><xref:System.Xml.XmlReader>属性不会更改除<xref:System.Xml.XmlReader.Value%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2156">In between calls to <xref:System.Xml.XmlReader.ReadValueChunk%2A> the <xref:System.Xml.XmlReader> properties do no change except for the <xref:System.Xml.XmlReader.Value%2A> property.</span></span> <span data-ttu-id="8fa94-2157">当<xref:System.Xml.XmlReader.Value%2A>访问属性时它也可能返回的部分值 (带有尚未返回的字符<xref:System.Xml.XmlReader.ReadValueChunk%2A>) 或全部值，具体取决于实现。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2157">When the <xref:System.Xml.XmlReader.Value%2A> property is accessed it may either return a partial value (with characters not yet returned by <xref:System.Xml.XmlReader.ReadValueChunk%2A>) or a full value depending on the implementation.</span></span> <span data-ttu-id="8fa94-2158">所有<xref:System.Xml.XmlReader>中的实现<xref:System.Xml>命名空间部分为返回值<xref:System.Xml.XmlReader.Value%2A>属性实现。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2158">All the <xref:System.Xml.XmlReader> implementations in the <xref:System.Xml> namespace return a partial value for the <xref:System.Xml.XmlReader.Value%2A> property implementation.</span></span>  
  
 <span data-ttu-id="8fa94-2159">任何 Read 方法可以调用之间调用<xref:System.Xml.XmlReader.ReadValueChunk%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2159">Any Read method can be called in between calls to <xref:System.Xml.XmlReader.ReadValueChunk%2A>.</span></span> <span data-ttu-id="8fa94-2160">如果发生这种情况，<xref:System.Xml.XmlReader>移动到下<xref:System.Xml.XmlNodeType>流和尚不返回任何字符中将跳过。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2160">If this occurs, the <xref:System.Xml.XmlReader> moves to the next <xref:System.Xml.XmlNodeType> in the stream and any characters not yet returned are skipped.</span></span>  
  
 <span data-ttu-id="8fa94-2161">可能有一种情况时<xref:System.Xml.XmlReader.ReadValueChunk%2A>返回请求的字符数小于。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2161">There may be a case when <xref:System.Xml.XmlReader.ReadValueChunk%2A> returns less than the requested number of characters.</span></span> <span data-ttu-id="8fa94-2162">例如，如果在位置 127 和 128 使用代理项对有 200 个字符长整型值，你调用<xref:System.Xml.XmlReader.ReadValueChunk%2A>与 128 个字符的缓冲区，该方法调用将返回而不是请求 128 127 个字符。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2162">For example, if you had a 200-character long value with a surrogate pair at positions 127 and 128 and you called <xref:System.Xml.XmlReader.ReadValueChunk%2A> with a 128-character buffer, the method call would return 127 characters instead of the requested 128.</span></span> <span data-ttu-id="8fa94-2163">则将在下一步中返回的代理项对<xref:System.Xml.XmlReader.ReadValueChunk%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2163">The surrogate pair would then be returned in the next <xref:System.Xml.XmlReader.ReadValueChunk%2A> call.</span></span> <span data-ttu-id="8fa94-2164">在这种情况下，<xref:System.Xml.XmlReader.ReadValueChunk%2A>未返回请求的 128 个字符，因为这样做因此将会造成缓冲区末尾的不完整的代理项对。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2164">In this case, <xref:System.Xml.XmlReader.ReadValueChunk%2A> did not return the requested 128 characters because doing so would have resulted in an incomplete surrogate pair at the end of the buffer.</span></span>  
  
 <span data-ttu-id="8fa94-2165">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.ReadValueChunkAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2165">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadValueChunkAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2166">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2166">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2167">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2167">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fa94-2168">
            <paramref name="buffer" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2168">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8fa94-2169">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2169">The index into the buffer, or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8fa94-2170">
            <see cref="T:System.Xml.XmlReader" /> 实现不支持此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2170">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8fa94-2171">XML 数据不是格式良好的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2171">The XML data is not well-formed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadValueChunkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadValueChunkAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadValueChunkAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadValueChunkAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadValueChunkAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadValueChunkAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadValueChunkAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadValueChunkAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8fa94-2172">作为文本内容写入到的缓冲区的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2172">The array of characters that serves as the buffer to which the text contents are written.</span>
          </span>
          <span data-ttu-id="8fa94-2173">此值不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2173">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8fa94-2174">缓冲区中的偏移量，<see cref="T:System.Xml.XmlReader" /> 可以从这个位置开始复制结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2174">The offset within the buffer where the <see cref="T:System.Xml.XmlReader" /> can start to copy the results.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8fa94-2175">要复制到缓冲区中的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2175">The maximum number of characters to copy into the buffer.</span>
          </span>
          <span data-ttu-id="8fa94-2176">此方法返回复制的实际字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2176">The actual number of characters copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa94-2177">异步读取嵌入在 XML 文档中的大量文本流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2177">Asynchronously reads large streams of text embedded in an XML document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-2178">读取到缓冲区中的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2178">The number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="8fa94-2179">如果不再有文本内容，则返回值零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2179">The value zero is returned when there is no more text content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2180">这是异步版本<xref:System.Xml.XmlReader.ReadValueChunk%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2180">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadValueChunk%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-2181">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2181">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2182">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2182">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-2183">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2183">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public abstract void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResolveEntity();" />
      <MemberSignature Language="F#" Value="abstract member ResolveEntity : unit -&gt; unit" Usage="xmlReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-2184">当在派生类中被重写时，解析 <see langword="EntityReference" /> 节点的实体引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2184">When overridden in a derived class, resolves the entity reference for <see langword="EntityReference" /> nodes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2185">如果读取器定位在`EntityReference`节点 (`XmlNodeType.EntityReference`)，如果<xref:System.Xml.XmlReader.Read%2A>称为之后调用此方法，实体替换文本进行分析。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2185">If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlReader.Read%2A> is called after calling this method, the entity replacement text is parsed.</span></span> <span data-ttu-id="8fa94-2186">完成实体替换文本后，`EndEntity`将返回节点关闭实体引用作用域。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2186">When the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8fa94-2187">调用此方法后，如果实体为一部分的属性值时，你必须调用<xref:System.Xml.XmlReader.ReadAttributeValue%2A>以单步执行该实体。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2187">After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlReader.ReadAttributeValue%2A> to step into the entity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2188">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2188">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2189">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2189">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.EntityHandling" />
        <altmember cref="P:System.Xml.XmlReader.CanResolveEntity" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlReader.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-2190">获取作为架构验证结果分配给当前节点的架构信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2190">Gets the schema information that has been assigned to the current node as a result of schema validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-2191">一个包含当前节点的架构信息的 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2191">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the schema information for the current node.</span>
          </span>
          <span data-ttu-id="8fa94-2192">架构信息可以在元素、特性或具有非空 <see cref="P:System.Xml.XmlReader.ValueType" />（类型化值）的文本节点上设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2192">Schema information can be set on elements, attributes, or on text nodes with a non-null <see cref="P:System.Xml.XmlReader.ValueType" /> (typed values).</span>
          </span>
          <span data-ttu-id="8fa94-2193">如果当前节点不属于上述节点类型，或者如果 <see langword="XmlReader" /> 实例未报告架构信息，则此属性返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2193">If the current node is not one of the above node types, or if the <see langword="XmlReader" /> instance does not report schema information, this property returns <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8fa94-2194">如果从 <see cref="T:System.Xml.XmlTextReader" /> 或 <see cref="T:System.Xml.XmlValidatingReader" /> 对象调用此属性，则此属性总是返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2194">If this property is called from an <see cref="T:System.Xml.XmlTextReader" /> or an <see cref="T:System.Xml.XmlValidatingReader" /> object, this property always returns <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8fa94-2195">这些 <see langword="XmlReader" /> 实现不会通过 <see langword="SchemaInfo" /> 属性公开架构信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2195">These <see langword="XmlReader" /> implementations do not expose schema information through the <see langword="SchemaInfo" /> property.</span>
          </span>
          <span data-ttu-id="8fa94-2196">
            <block subset="none" type="note">
              <para> 如果你必须为某个元素获取架构验证信息集 (PSVI)，将读取器定位在的结束标记的元素，而不是开始标记上。通过获取 PSVI<see langword="SchemaInfo" />读取器的属性。通过创建验证读取器<see cref="Overload:System.Xml.XmlReader.Create" />与<see cref="P:System.Xml.XmlReaderSettings.ValidationType" />属性设置为<see cref="F:System.Xml.ValidationType.Schema" />具有完整的 PSVI 的元素仅在读取器定位在元素的结束标记上时。  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2196">
              <block subset="none" type="note">
                <para> If you have to get the post-schema-validation information set (PSVI) for an element, position the reader on the end tag of the element, rather than on the start tag. You get the PSVI through the <see langword="SchemaInfo" /> property of a reader. The validating reader that is created through <see cref="Overload:System.Xml.XmlReader.Create" /> with the <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> property set to <see cref="F:System.Xml.ValidationType.Schema" /> has complete PSVI for an element only when the reader is positioned on the end tag of an element.  </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2197"><xref:System.Xml.Schema.IXmlSchemaInfo>接口中公开一部分的后架构验证信息集 (PSVI) 与 XML 节点相关联。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2197">The <xref:System.Xml.Schema.IXmlSchemaInfo> interface exposes a subset of the Post Schema Validation Infoset (PSVI) associated with an XML node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2198">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2198">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2199">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2199">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReaderSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReaderSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Settings As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlReaderSettings ^ Settings { System::Xml::XmlReaderSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xml.XmlReaderSettings" Usage="System.Xml.XmlReader.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-2200">获取用于创建此 <see cref="T:System.Xml.XmlReader" /> 实例的 <see cref="T:System.Xml.XmlReaderSettings" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2200">Gets the <see cref="T:System.Xml.XmlReaderSettings" /> object used to create this <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-2201">用于创建此读取器实例的 <see cref="T:System.Xml.XmlReaderSettings" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2201">The <see cref="T:System.Xml.XmlReaderSettings" /> object used to create this reader instance.</span>
          </span>
          <span data-ttu-id="8fa94-2202">如果此读取器不是使用 <see cref="Overload:System.Xml.XmlReader.Create" /> 方法创建的，则此属性返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2202">If this reader was not created using the <see cref="Overload:System.Xml.XmlReader.Create" /> method, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa94-2203"><xref:System.Xml.XmlReaderSettings>对象可以包含敏感信息，例如用户凭据。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2203">The <xref:System.Xml.XmlReaderSettings> object can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="8fa94-2204">应用程序时一定要谨慎缓存此对象或将其传递到另一个组件。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2204">Applications must be careful when caching this object or passing it to another component.</span></span>  
  
 <span data-ttu-id="8fa94-2205"><xref:System.Xml.XmlReaderSettings>类用于指定要在创建读取器实例上支持的功能集。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2205">The <xref:System.Xml.XmlReaderSettings> class is used to specify the set of features to support on the created reader instance.</span></span> <span data-ttu-id="8fa94-2206"><xref:System.Xml.XmlReaderSettings>无法修改此属性返回的对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2206">The <xref:System.Xml.XmlReaderSettings> object returned by this property cannot be modified.</span></span> <span data-ttu-id="8fa94-2207">任何尝试更改单个设置导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2207">Any attempt to change individual settings results in an exception being thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2208">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2208">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2209">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2209">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public virtual void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip();" />
      <MemberSignature Language="F#" Value="abstract member Skip : unit -&gt; unit&#xA;override this.Skip : unit -&gt; unit" Usage="xmlReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-2210">跳过当前节点的子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2210">Skips the children of the current node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2211">在下面的 XML 输入是否读取器定位在`<a>`节点或任何其属性、 调用`Skip`到读取器定位`<b>`节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2211">In the following XML input if the reader is positioned on the `<a>` node or any of its attributes, calling `Skip` positions the reader to the `<b>` node.</span></span>  
  
 <span data-ttu-id="8fa94-2212">如果读取器定位在叶节点上已 (如`<x>`节点或文本节点`abc`)，则调用`Skip`等同于调用<xref:System.Xml.XmlReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2212">If the reader is positioned on a leaf node already (such as the `<x>` node or the text node `abc`), calling `Skip` is the same as calling <xref:System.Xml.XmlReader.Read%2A>.</span></span>  
  
```xml  
<a name="bob" age="123">  
 <x/>abc<y/>  
</a>  
<b>  
...  
</b>  
```  
  
 <span data-ttu-id="8fa94-2213">此方法会检查格式正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2213">This method checks for well-formed XML.</span></span>  
  
 <span data-ttu-id="8fa94-2214">如果读取器<xref:System.Xml.XmlValidatingReader>，此方法还将验证已跳过的内容。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2214">If the reader is an <xref:System.Xml.XmlValidatingReader>, this method also validates the skipped content.</span></span>  
  
 <span data-ttu-id="8fa94-2215">`XmlReader`实现确定是否`Skip`方法将扩展外部实体。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2215">The `XmlReader` implementation determines whether or not the `Skip` method will expand external entities.</span></span> <span data-ttu-id="8fa94-2216">下表描述了是否为各种类型的扩展外部实体`XmlReader`对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2216">The following table describes whether the external entities are expanded for the various types of `XmlReader` objects.</span></span>  
  
|<span data-ttu-id="8fa94-2217">XmlReader 的类型</span><span class="sxs-lookup"><span data-stu-id="8fa94-2217">Type of XmlReader</span></span>|<span data-ttu-id="8fa94-2218">将扩展外部实体</span><span class="sxs-lookup"><span data-stu-id="8fa94-2218">Expands external entities</span></span>|  
|-----------------------|-------------------------------|  
|<xref:System.Xml.XmlTextReader>|<span data-ttu-id="8fa94-2219">不是。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2219">No.</span></span>|  
|<span data-ttu-id="8fa94-2220"><xref:System.Xml.XmlReader> 创建的实例<xref:System.Xml.XmlReader.Create%2A>正在读取的文本数据的方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2220"><xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method that is reading text data.</span></span>|<span data-ttu-id="8fa94-2221">不是。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2221">No.</span></span>|  
|<span data-ttu-id="8fa94-2222"><xref:System.Xml.XmlReader> 创建的实例<xref:System.Xml.XmlReader.Create%2A>正在读取的二进制数据的方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2222"><xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method that is reading binary data.</span></span>|<span data-ttu-id="8fa94-2223">不适用。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2223">Not applicable.</span></span>|  
|<span data-ttu-id="8fa94-2224">架构验证<xref:System.Xml.XmlReader>而创建的实例<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2224">A schema validating <xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>|<span data-ttu-id="8fa94-2225">可以。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2225">Yes.</span></span>|  
|<xref:System.Xml.XmlValidatingReader>|<span data-ttu-id="8fa94-2226">可以。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2226">Yes.</span></span>|  
|<span data-ttu-id="8fa94-2227"><xref:System.Xml.XmlReader> 返回实例<xref:System.Xml.XPath.XPathNavigator>对象。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2227"><xref:System.Xml.XmlReader> instance returned by a <xref:System.Xml.XPath.XPathNavigator> object.</span></span>|<span data-ttu-id="8fa94-2228">不适用。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2228">Not applicable.</span></span>|  
|<xref:System.Xml.XmlNodeReader>|<span data-ttu-id="8fa94-2229">不是。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2229">No.</span></span>|  
|<span data-ttu-id="8fa94-2230"><xref:System.Xml.XmlReader> 实例包装在另一个<xref:System.Xml.XmlReader>实例。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2230"><xref:System.Xml.XmlReader> instance wrapped around another <xref:System.Xml.XmlReader> instance.</span></span>|<span data-ttu-id="8fa94-2231">取决于基础的实现<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2231">Depends on the implementation of the underlying <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="8fa94-2232">(`Skip`方法对基础<xref:System.Xml.XmlReader>称为)。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2232">(The `Skip` method on the underlying <xref:System.Xml.XmlReader> is called).</span></span>|  
  
 <span data-ttu-id="8fa94-2233">此方法的异步版本，请参阅<xref:System.Xml.XmlReader.SkipAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2233">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.SkipAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-2234">下面的示例分析 XML 文件的第二个 book 节点上启动。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2234">The following example parses an XML file starting on the second book node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#14](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#14)]
 [!code-vb[XmlReaderBasic#14](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#14)]  
  
 <span data-ttu-id="8fa94-2235">该示例使用文件，`2books.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2235">The example uses the file, `2books.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2236">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2236">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2237">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2237">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SkipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SkipAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SkipAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.SkipAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SkipAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SkipAsync();" />
      <MemberSignature Language="F#" Value="abstract member SkipAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SkipAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlReader.SkipAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-2238">异步跳过当前节点的子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2238">Asynchronously skips the children of the current node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fa94-2239">当前节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2239">The current node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2240">这是异步版本<xref:System.Xml.XmlReader.Skip%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2240">This is the asynchronous version of <xref:System.Xml.XmlReader.Skip%2A>, with the same functionality.</span></span> <span data-ttu-id="8fa94-2241">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2241">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2242">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2242">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8fa94-2243">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2243">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-2244">当在派生类中被重写时，获取当前节点的文本值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2244">When overridden in a derived class, gets the text value of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-2245">返回的值取决于节点的 <see cref="P:System.Xml.XmlReader.NodeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2245">The value returned depends on the <see cref="P:System.Xml.XmlReader.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="8fa94-2246">下表列出具有要返回的值的节点类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2246">The following table lists node types that have a value to return.</span>
          </span>
          <span data-ttu-id="8fa94-2247">所有其他节点类型返回 <see langword="String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2247">All other node types return <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="8fa94-2248">
            <list type="table">
              <listheader>
                <term> 节点类型</term>
                <description>值</description>
              </listheader>
              <item>
                <term>
                  <see langword="Attribute" />
                </term>
                <description>属性的值。</description>
              </item>
              <item>
                <term>
                  <see langword="CDATA" />
                </term>
                <description> CDATA 节的内容。</description>
              </item>
              <item>
                <term>
                  <see langword="Comment" />
                </term>
                <description> 注释的内容。</description>
              </item>
              <item>
                <term>
                  <see langword="DocumentType" />
                </term>
                <description> 内部子集。</description>
              </item>
              <item>
                <term>
                  <see langword="ProcessingInstruction" />
                </term>
                <description> 整个内容 （不包括目标）。</description>
              </item>
              <item>
                <term>
                  <see langword="SignificantWhitespace" />
                </term>
                <description> 在混合内容模型中的标记之间的空白。</description>
              </item>
              <item>
                <term>
                  <see langword="Text" />
                </term>
                <description> 文本节点的内容。</description>
              </item>
              <item>
                <term>
                  <see langword="Whitespace" />
                </term>
                <description> 标记之间的空白。</description>
              </item>
              <item>
                <term>
                  <see langword="XmlDeclaration" />
                </term>
                <description> 声明的内容。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2248">
              <list type="table">
                <listheader>
                  <term> Node type  </term>
                  <description> Value  </description>
                </listheader>
                <item>
                  <term>
                    <see langword="Attribute" />
                  </term>
                  <description> The value of the attribute.  </description>
                </item>
                <item>
                  <term>
                    <see langword="CDATA" />
                  </term>
                  <description> The content of the CDATA section.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Comment" />
                  </term>
                  <description> The content of the comment.  </description>
                </item>
                <item>
                  <term>
                    <see langword="DocumentType" />
                  </term>
                  <description> The internal subset.  </description>
                </item>
                <item>
                  <term>
                    <see langword="ProcessingInstruction" />
                  </term>
                  <description> The entire content, excluding the target.  </description>
                </item>
                <item>
                  <term>
                    <see langword="SignificantWhitespace" />
                  </term>
                  <description> The white space between markup in a mixed content model.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Text" />
                  </term>
                  <description> The content of the text node.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Whitespace" />
                  </term>
                  <description> The white space between markup.  </description>
                </item>
                <item>
                  <term>
                    <see langword="XmlDeclaration" />
                  </term>
                  <description> The content of the declaration.  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2249">此属性的异步版本，请参阅<xref:System.Xml.XmlReader.GetValueAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2249">For the asynchronous version of this property, see the <xref:System.Xml.XmlReader.GetValueAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-2250">下面的示例读取 XML 文件，并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2250">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="8fa94-2251">此示例使用`items.xml`文件。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2251">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2252">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2252">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2253">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2253">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public virtual Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.Xml.XmlReader.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-2254">获取当前节点的公共语言运行时 (CLR) 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2254">Gets The Common Language Runtime (CLR) type for the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-2255">与节点的类型化值对应的 CLR 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2255">The CLR type that corresponds to the typed value of the node.</span>
          </span>
          <span data-ttu-id="8fa94-2256">默认值为 <see langword="System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2256">The default is <see langword="System.String" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2257">请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)有关默认映射的列表。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2257">See [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) for a list of the default mappings.</span></span>  
  
 <span data-ttu-id="8fa94-2258">类型的元素`xs:int`具有`ValueType`的`System.Int32`默认情况下。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2258">An element of type `xs:int` has a `ValueType` of `System.Int32` by default.</span></span> <span data-ttu-id="8fa94-2259">但是，`ValueType`可能是一种有效类型可以映射到`xs:int`，如`System.Int16`或`System.Double`。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2259">However, the `ValueType` could be one of the valid types that can be mapped to `xs:int`, such as `System.Int16` or `System.Double`.</span></span>  
  
 <span data-ttu-id="8fa94-2260">如果节点为非类型化，或如果该节点是包含混合的内容的元素，节点值映射到`System.String`类型。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2260">If a node is un-typed, or if the node is an element that contains mixed content, the node value is mapped to the `System.String` type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2261">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2261">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2262">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2262">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8fa94-2263">
            <para>实施者必须提供<see langword="ValueType" />的每个节点，即使它只是<see langword="System.String" />类型。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2263">
              <para>Implementers must provide a <see langword="ValueType" /> for every node, even if it is only the <see langword="System.String" /> type.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlReader.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-2264">当在派生类中被重写时，获取当前的 <see langword="xml:lang" /> 范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2264">When overridden in a derived class, gets the current <see langword="xml:lang" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-2265">当前 <see langword="xml:lang" /> 范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2265">The current <see langword="xml:lang" /> scope.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa94-2266">此属性表示`xml:lang`中当前节点所在作用域。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2266">This property represents the `xml:lang` scope within which the current node resides.</span></span> <span data-ttu-id="8fa94-2267">例如，下面是与 XML 片段`xml:lang`设置为英语 （美国） 的根元素中：</span><span class="sxs-lookup"><span data-stu-id="8fa94-2267">For example, here is an XML fragment with `xml:lang` set to US English in the root element:</span></span>  
  
```xml  
<root xml:lang="en-us">   
<name>Fred</name>   
</root>   
```  
  
 <span data-ttu-id="8fa94-2268">当读取器定位在`name`元素，你可以使用此属性来发现它是否在美国英语的作用域`xml:lang`属性。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2268">When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a US English `xml:lang` attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa94-2269">请参阅<xref:System.Xml.XmlTextReader.XmlLang%2A?displayProperty=nameWithType>有关使用此属性的示例。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2269">See <xref:System.Xml.XmlTextReader.XmlLang%2A?displayProperty=nameWithType> for an example of using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2270">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2270">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2271">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2271">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlReader.XmlSpace" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlReader.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa94-2272">当在派生类中被重写时，获取当前的 <see langword="xml:space" /> 范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2272">When overridden in a derived class, gets the current <see langword="xml:space" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa94-2273">
            <see cref="T:System.Xml.XmlSpace" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2273">One of the <see cref="T:System.Xml.XmlSpace" /> values.</span>
          </span>
          <span data-ttu-id="8fa94-2274">如果不存在任何 <see langword="xml:space" /> 范围，则该属性默认值为 <see langword="XmlSpace.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2274">If no <see langword="xml:space" /> scope exists, this property defaults to <see langword="XmlSpace.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa94-2275">请参阅<xref:System.Xml.XmlTextReader.XmlSpace%2A>(在`XmlTextReader`类) 使用此属性的示例。</span><span class="sxs-lookup"><span data-stu-id="8fa94-2275">See <xref:System.Xml.XmlTextReader.XmlSpace%2A> (in the `XmlTextReader` class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fa94-2276">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2276">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="8fa94-2277">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa94-2277">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlReader.XmlLang" />
      </Docs>
    </Member>
  </Members>
</Type>