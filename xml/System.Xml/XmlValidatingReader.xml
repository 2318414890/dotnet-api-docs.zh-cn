<Type Name="XmlValidatingReader" FullName="System.Xml.XmlValidatingReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2a65eeb1ab67830da19f834694c9030f70becd3" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59354911" /></Metadata><TypeSignature Language="C#" Value="public class XmlValidatingReader : System.Xml.XmlReader, System.Xml.IXmlLineInfo, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlValidatingReader extends System.Xml.XmlReader implements class System.Xml.IXmlLineInfo, class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlValidatingReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlValidatingReader&#xA;Inherits XmlReader&#xA;Implements IXmlLineInfo, IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlValidatingReader : System::Xml::XmlReader, System::Xml::IXmlLineInfo, System::Xml::IXmlNamespaceResolver" />
  <TypeSignature Language="F#" Value="type XmlValidatingReader = class&#xA;    inherit XmlReader&#xA;    interface IXmlLineInfo&#xA;    interface IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IXmlLineInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.Obsolete("Use XmlReader created by XmlReader.Create() method using appropriate XmlReaderSettings instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Obsolete("Use XmlReader created by XmlReader.Create() method using appropriate XmlReaderSettings instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c9b4e-101">表示提供文档类型定义 (DTD)、XML 数据简化 (XDR) 架构和 XML 架构定义语言 (XSD) 验证的读取器。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-101">Represents a reader that provides document type definition (DTD), XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) validation.</span></span>  
  
<span data-ttu-id="c9b4e-102">此类已过时。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-102">This class is obsolete.</span></span> <span data-ttu-id="c9b4e-103">从 .NET Framework 2.0 开始，建议你使用 <see cref="T:System.Xml.XmlReaderSettings" /> 类和 <see cref="Overload:System.Xml.XmlReader.Create" /> 方法创建一个验证的 XML 读取器。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-103">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlReaderSettings" /> class and the <see cref="Overload:System.Xml.XmlReader.Create" /> method to create a validating XML reader.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9b4e-104">`XmlValidatingReader` 实现<xref:System.Xml.XmlReader>类，并进行数据验证提供支持。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-104">`XmlValidatingReader` implements the <xref:System.Xml.XmlReader> class and provides support for data validation.</span></span> <span data-ttu-id="c9b4e-105">使用<xref:System.Xml.XmlValidatingReader.Schemas%2A>属性使读取器使用缓存中的架构文件验证<xref:System.Xml.Schema.XmlSchemaCollection>。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-105">Use the <xref:System.Xml.XmlValidatingReader.Schemas%2A> property to have the reader validate by using schema files that are cached in an <xref:System.Xml.Schema.XmlSchemaCollection>.</span></span> <span data-ttu-id="c9b4e-106"><xref:System.Xml.XmlValidatingReader.ValidationType%2A>属性指定读取器应执行的验证类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-106">The <xref:System.Xml.XmlValidatingReader.ValidationType%2A> property specifies what type of validation the reader should perform.</span></span> <span data-ttu-id="c9b4e-107">将属性设置为 ValidationType.None 创建非验证读取器。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-107">Setting the property to ValidationType.None creates a non-validating reader.</span></span>  
  
 <span data-ttu-id="c9b4e-108"><xref:System.Xml.XmlValidatingReader> 引发<xref:System.Xml.XmlException>的 XML 分析错误。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-108"><xref:System.Xml.XmlValidatingReader> throws an <xref:System.Xml.XmlException> on XML parse errors.</span></span> <span data-ttu-id="c9b4e-109">引发异常后读取器状态不是可预测的。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-109">After an exception is thrown the state of the reader is not predictable.</span></span> <span data-ttu-id="c9b4e-110">例如，报告的节点类型可能不同于当前节点的实际节点类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-110">For example, the reported node type may be different than the actual node type of the current node.</span></span> <span data-ttu-id="c9b4e-111">使用<xref:System.Xml.XmlValidatingReader.ReadState%2A>属性检查是否在读取器处于错误状态。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-111">Use the <xref:System.Xml.XmlValidatingReader.ReadState%2A> property to check whether a reader is in error state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-112"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-112">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-113">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-113">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-114">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-114">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="c9b4e-115">此类具有继承要求。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-115">This class has an inheritance demand.</span></span> <span data-ttu-id="c9b4e-116">需要完全信任继承<see langword="XmlValidatingReader" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-116">Full trust is required to inherit from <see langword="XmlValidatingReader" />.</span></span></para></block>
    <altmember cref="T:System.Xml.XmlReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9b4e-117">初始化 <see langword="XmlValidatingReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-117">Initializes a new instance of the <see langword="XmlValidatingReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlValidatingReader : System.Xml.XmlReader -&gt; System.Xml.XmlValidatingReader" Usage="new System.Xml.XmlValidatingReader reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="c9b4e-118">验证时要从中读取的 <see langword="XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-118">The <see langword="XmlReader" /> to read from while validating.</span></span> <span data-ttu-id="c9b4e-119">当前实现仅支持 <see cref="T:System.Xml.XmlTextReader" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-119">The current implementation supports only <see cref="T:System.Xml.XmlTextReader" />.</span></span></param>
        <summary><span data-ttu-id="c9b4e-120">初始化 <see langword="XmlValidatingReader" /> 类的新实例，该类验证从给定的 <see cref="T:System.Xml.XmlReader" /> 返回的内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-120">Initializes a new instance of the <see langword="XmlValidatingReader" /> class that validates the content returned from the given <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-121"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-121">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-122">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-122">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-123">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-123">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-124">从返回的所有节点给定`XmlReader`也会返回此验证读取器，因此在过程中没有不丢失信息。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-124">All nodes returned from the given `XmlReader` are also returned from this validating reader, so there is no information loss in the process.</span></span> <span data-ttu-id="c9b4e-125">未从基础读取器返回的新节点可能会添加此读取器 （例如，默认属性和实体引用的子级）。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-125">New nodes not returned from the underlying reader may be added by this reader (for example, default attributes and the children of an entity reference).</span></span> <span data-ttu-id="c9b4e-126">设置任何属性给定`XmlTextReader`也适用于此验证读取器。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-126">Any properties set on the given `XmlTextReader` also apply to this validating reader.</span></span> <span data-ttu-id="c9b4e-127">例如，如果提供的读取器必须为 WhitespaceHandling.None 集，此验证读取器还会忽略空白区域。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-127">For example, if the supplied reader had WhitespaceHandling.None set, this validating reader also ignores white space.</span></span>  
  
 <span data-ttu-id="c9b4e-128">当进行验证，需要外部文档类型定义 (Dtd) 或架构<xref:System.Xml.XmlValidatingReader.XmlResolver%2A>属性集<xref:System.Xml.XmlResolver>对象用于解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-128">When external document type definitions (DTDs) or schemas are needed for validation, the <xref:System.Xml.XmlValidatingReader.XmlResolver%2A> property sets the <xref:System.Xml.XmlResolver> object to use for resolving external resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-129">下面的示例验证两个文档。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-129">The following example validates two documents.</span></span>  
  
 [!code-cpp[XmlValidatingReader.Cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.Cctor/CPP/valid_xsd2.cpp#1)]
 [!code-csharp[XmlValidatingReader.Cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.Cctor/CS/valid_xsd2.cs#1)]
 [!code-vb[XmlValidatingReader.Cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.Cctor/VB/valid_xsd2.vb#1)]  
  
 <span data-ttu-id="c9b4e-130">该示例使用以下输入的文件：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-130">The sample uses the following input files:</span></span>  
  
 `notValidXSD.xml`  
  
 [!code-xml[XmlValidatingReader.Cctor#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/notvalidxsd.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.Cctor#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/books.xsd#3)]  
  
 `inlineXSD.xml`  
  
 [!code-xml[XmlValidatingReader.Cctor#4](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/inlinexsd.xml#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9b4e-131">指定的读取器不是 <see langword="XmlTextReader" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-131">The reader specified is not an <see langword="XmlTextReader" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlTextReader" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (System.IO.Stream xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As Stream, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::IO::Stream ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlValidatingReader : System.IO.Stream * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlValidatingReader" Usage="new System.Xml.XmlValidatingReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.IO.Stream" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment"><span data-ttu-id="c9b4e-132">包含要分析的 XML 片段的流。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-132">The stream containing the XML fragment to parse.</span></span></param>
        <param name="fragType"><span data-ttu-id="c9b4e-133">XML 片段的 <see cref="T:System.Xml.XmlNodeType" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-133">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span></span> <span data-ttu-id="c9b4e-134">这确定片段可以包含的内容（请参见下表）。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-134">This determines what the fragment can contain (see table below).</span></span></param>
        <param name="context"><span data-ttu-id="c9b4e-135">要在其中分析 XML 片段的 <see cref="T:System.Xml.XmlParserContext" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-135">The <see cref="T:System.Xml.XmlParserContext" /> in which the XML fragment is to be parsed.</span></span> <span data-ttu-id="c9b4e-136">这包括要使用的 <see cref="T:System.Xml.XmlNameTable" />、编码、命名空间范围、当前的 <see langword="xml:lang" /> 和 <see langword="xml:space" /> 范围。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-136">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, current <see langword="xml:lang" />, and <see langword="xml:space" /> scope.</span></span></param>
        <summary><span data-ttu-id="c9b4e-137">用指定的值初始化 <see langword="XmlValidatingReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-137">Initializes a new instance of the <see langword="XmlValidatingReader" /> class with the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-138"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-138">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-139">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-139">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-140">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-140">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-141">此构造函数将给定的字符串分析为 XML 的片段。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-141">This constructor parses the given string as a fragment of XML.</span></span> <span data-ttu-id="c9b4e-142">如果 XML 片段的元素或属性，可以跳过格式正确的 XML 文档的根级别规则。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-142">If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</span></span>  
  
 <span data-ttu-id="c9b4e-143">下表列出了有效值`fragType`和读取器如何分析每个不同的节点类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-143">The following table lists valid values for `fragType` and how the reader parses each of the different node types.</span></span>  
  
|<span data-ttu-id="c9b4e-144">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="c9b4e-144">XmlNodeType</span></span>|<span data-ttu-id="c9b4e-145">片段可能包含</span><span class="sxs-lookup"><span data-stu-id="c9b4e-145">Fragment May Contain</span></span>|  
|-----------------|--------------------------|  
|<span data-ttu-id="c9b4e-146">元素</span><span class="sxs-lookup"><span data-stu-id="c9b4e-146">Element</span></span>|<span data-ttu-id="c9b4e-147">任何有效的元素内容 （例如，元素、 注释、 处理指令、 cdata、 文本和实体引用的任意组合）。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-147">Any valid element content (for example, any combination of elements, comments, processing instructions, cdata, text, and entity references).</span></span>|  
|<span data-ttu-id="c9b4e-148">特性</span><span class="sxs-lookup"><span data-stu-id="c9b4e-148">Attribute</span></span>|<span data-ttu-id="c9b4e-149">属性 （在引号内的部分） 的值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-149">The value of an attribute (the part inside the quotes).</span></span>|  
|<span data-ttu-id="c9b4e-150">Document</span><span class="sxs-lookup"><span data-stu-id="c9b4e-150">Document</span></span>|<span data-ttu-id="c9b4e-151">整个 XML 文档; 的内容这会强制文档级别规则。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-151">The contents of an entire XML document; this enforces document level rules.</span></span>|  
  
 <span data-ttu-id="c9b4e-152">读取器使用以下步骤来确定的流的编码：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-152">The reader uses the following steps to determine the encoding of the stream:</span></span>  
  
1.  <span data-ttu-id="c9b4e-153">检查<xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType>属性来确定的编码。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-153">Checks the <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType> property to determine the encoding.</span></span>  
  
2.  <span data-ttu-id="c9b4e-154">如果`Encoding`属性是`null`，读取器检查流的开始处的字节顺序标记。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-154">If the `Encoding` property is `null`, the reader checks for a byte-order mark at the beginning of the stream.</span></span>  
  
3.  <span data-ttu-id="c9b4e-155">如果`Encoding`属性是`null`，并找到无字节顺序标记，则读取器假设在 utf-8 中编码流。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-155">If the `Encoding` property is `null`, and no byte-order mark is found, the reader assumes the stream is encoded in UTF-8.</span></span>  
  
 <span data-ttu-id="c9b4e-156">如果将使用文档类型定义 (DTD) 验证此读取器 (即<xref:System.Xml.XmlValidatingReader.ValidationType%2A>设置为 ValidationType.DTD 或 ValidationType.Auto)，则`XmlParserContext`中的指定构造函数必须提供所需的所有文档类型信息。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-156">If this reader will be validating using document type definition (DTD) (that is, <xref:System.Xml.XmlValidatingReader.ValidationType%2A> is set to ValidationType.DTD or ValidationType.Auto), the `XmlParserContext` specified in the constructor must supply all the necessary DocumentType information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-157">不能使用 DTD 验证片段。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-157">It is not possible to validate a fragment by using a DTD.</span></span> <span data-ttu-id="c9b4e-158">根据定义 DTD 要求整个文档加载进行验证。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-158">By definition a DTD requires an entire document to be loaded for validation.</span></span>  
  
 <span data-ttu-id="c9b4e-159">如果此读取器将通过使用 XML 数据缩减 (XDR) 或 XML 架构定义语言 (XSD) 架构进行验证，使用<xref:System.Xml.XmlValidatingReader.Schemas%2A>属性来指定<xref:System.Xml.Schema.XmlSchemaCollection>包含的架构 (即，`XmlParserContext`不需要提供文档类型信息）。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-159">If this reader will be validating by using XML-Data Reduced (XDR) or XML Schema definition language (XSD) schemas, use the <xref:System.Xml.XmlValidatingReader.Schemas%2A> property to specify the <xref:System.Xml.Schema.XmlSchemaCollection> that contains the schemas (that is, the `XmlParserContext` does not need to supply the DocumentType information).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="c9b4e-160"><paramref name="fragType" /> 不是下表列出的节点类型之一。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-160"><paramref name="fragType" /> is not one of the node types listed in the table below.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (string xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As String, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::String ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlValidatingReader : string * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlValidatingReader" Usage="new System.Xml.XmlValidatingReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.String" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment"><span data-ttu-id="c9b4e-161">包含要分析的 XML 片段的字符串。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-161">The string containing the XML fragment to parse.</span></span></param>
        <param name="fragType"><span data-ttu-id="c9b4e-162">XML 片段的 <see cref="T:System.Xml.XmlNodeType" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-162">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span></span> <span data-ttu-id="c9b4e-163">这还确定了片段字符串可以包含的内容（请参见下表）。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-163">This also determines what the fragment string can contain (see table below).</span></span></param>
        <param name="context"><span data-ttu-id="c9b4e-164">要在其中分析 XML 片段的 <see cref="T:System.Xml.XmlParserContext" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-164">The <see cref="T:System.Xml.XmlParserContext" /> in which the XML fragment is to be parsed.</span></span> <span data-ttu-id="c9b4e-165">这包括要使用的 <see cref="T:System.Xml.NameTable" />、编码、命名空间范围、当前 xml:lang 和 xml:space 范围。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-165">This includes the <see cref="T:System.Xml.NameTable" /> to use, encoding, namespace scope, current xml:lang, and xml:space scope.</span></span></param>
        <summary><span data-ttu-id="c9b4e-166">用指定的值初始化 <see langword="XmlValidatingReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-166">Initializes a new instance of the <see langword="XmlValidatingReader" /> class with the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-167"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-167">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-168">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-168">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-169">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-169">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-170">此构造函数将给定的字符串分析为 XML 的片段。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-170">This constructor parses the given string as a fragment of XML.</span></span> <span data-ttu-id="c9b4e-171">如果 XML 片段的元素或属性，可以跳过格式正确的 XML 文档的根级别规则。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-171">If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</span></span> <span data-ttu-id="c9b4e-172">此构造函数可以处理从返回的字符串<xref:System.Xml.XmlReader.ReadInnerXml%2A>。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-172">This constructor can handle strings returned from <xref:System.Xml.XmlReader.ReadInnerXml%2A>.</span></span>  
  
 <span data-ttu-id="c9b4e-173">下表列出了有效值`fragType`和读取器如何分析每个不同的节点类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-173">The following table lists valid values for `fragType` and how the reader parses each of the different node types.</span></span>  
  
|<span data-ttu-id="c9b4e-174">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="c9b4e-174">XmlNodeType</span></span>|<span data-ttu-id="c9b4e-175">片段可能包含</span><span class="sxs-lookup"><span data-stu-id="c9b4e-175">Fragment May Contain</span></span>|  
|-----------------|--------------------------|  
|<span data-ttu-id="c9b4e-176">元素</span><span class="sxs-lookup"><span data-stu-id="c9b4e-176">Element</span></span>|<span data-ttu-id="c9b4e-177">任何有效的元素内容 （例如，元素、 注释、 处理指令、 cdata、 文本和实体引用的任意组合）。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-177">Any valid element content (for example, any combination of elements, comments, processing instructions, cdata, text, and entity references).</span></span>|  
|<span data-ttu-id="c9b4e-178">特性</span><span class="sxs-lookup"><span data-stu-id="c9b4e-178">Attribute</span></span>|<span data-ttu-id="c9b4e-179">属性 （在引号内的部分） 的值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-179">The value of an attribute (the part inside the quotes).</span></span>|  
|<span data-ttu-id="c9b4e-180">Document</span><span class="sxs-lookup"><span data-stu-id="c9b4e-180">Document</span></span>|<span data-ttu-id="c9b4e-181">整个 XML 文档; 的内容这会强制文档级别规则。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-181">The contents of an entire XML document; this enforces document level rules.</span></span>|  
  
 <span data-ttu-id="c9b4e-182">如果此读取器将使用文档类型定义 (DTD) 验证 (即<xref:System.Xml.XmlValidatingReader.ValidationType%2A>设置为 ValidationType.DTD 或 ValidationType.Auto)，则`XmlParserContext`中的指定构造函数必须提供所需的所有文档类型信息。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-182">If this reader will be validating by using document type definition (DTD) (that is, <xref:System.Xml.XmlValidatingReader.ValidationType%2A> is set to ValidationType.DTD or ValidationType.Auto), the `XmlParserContext` specified in the constructor must supply all the necessary DocumentType information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-183">不能使用 DTD 验证片段。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-183">It is not possible to validate a fragment by using DTD.</span></span> <span data-ttu-id="c9b4e-184">按照定义 DTD 需要整个文档加载进行验证。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-184">By definition DTD requires an entire document to be loaded for validation.</span></span>  
  
 <span data-ttu-id="c9b4e-185">如果此读取器将通过使用 XML 数据缩减 (XDR) 或 XML 架构定义语言 (XSD) 架构进行验证，使用<xref:System.Xml.XmlValidatingReader.Schemas%2A>属性来指定<xref:System.Xml.Schema.XmlSchemaCollection>包含的架构 (`XmlParserContext`不需要提供 DocumentType信息）。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-185">If this reader will be validating by using XML-Data Reduced (XDR) or XML Schema definition language (XSD) schemas, use the <xref:System.Xml.XmlValidatingReader.Schemas%2A> property to specify the <xref:System.Xml.Schema.XmlSchemaCollection> that contains the schemas (the `XmlParserContext` does not need to supply the DocumentType information).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-186">下面的示例读取 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-186">The following example reads an XML fragment.</span></span> <span data-ttu-id="c9b4e-187">它使用`XmlParserContext`并将其<xref:System.Xml.XmlNamespaceManager>处理命名空间匹配。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-187">It uses an `XmlParserContext` and its <xref:System.Xml.XmlNamespaceManager> to handle namespace matching.</span></span>  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="c9b4e-188"><paramref name="fragType" /> 不是下表列出的节点类型之一。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-188"><paramref name="fragType" /> is not one of the node types listed in the table below.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public override int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlValidatingReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-189">获取当前节点上的属性数目。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-189">Gets the number of attributes on the current node.</span></span></summary>
        <value><span data-ttu-id="c9b4e-190">当前节点上的属性数目。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-190">The number of attributes on the current node.</span></span> <span data-ttu-id="c9b4e-191">该数目包括默认属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-191">This number includes default attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-192"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-192">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-193">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-193">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-194">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-194">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-195">此属性是与相关`Element`， `DocumentType`，和`XmlDeclaration`仅限节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-195">This property is relevant to `Element`, `DocumentType`, and `XmlDeclaration` nodes only.</span></span> <span data-ttu-id="c9b4e-196">（其他节点类型没有属性。）</span><span class="sxs-lookup"><span data-stu-id="c9b4e-196">(Other node types do not have attributes.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-197">下面的示例读取的根节点上的所有元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-197">The following example reads all the elements on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlValidatingReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-198">获取当前节点的基 URI。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-198">Gets the base URI of the current node.</span></span></summary>
        <value><span data-ttu-id="c9b4e-199">当前节点的基 URI。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-199">The base URI of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-200"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-200">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-201">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-201">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-202">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-202">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-203">联网的 XML 文档通过使用各种 World Wide Web 联合会 (W3C) 标准包含机制聚合的数据块组成，因此包含来自不同位置的节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-203">A networked XML document is comprised of chunks of data aggregated by using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="c9b4e-204">文档类型定义 (DTD) 实体是举例说明此操作，但这并不局限于 Dtd。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-204">document type definition (DTD) entities are an example of this, but this is not limited to DTDs.</span></span> <span data-ttu-id="c9b4e-205">基 URI 将指示您从这些节点的源位置。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-205">The base URI tells you where these nodes came from.</span></span> <span data-ttu-id="c9b4e-206">如果没有要返回的节点没有基 URI （例如，它们已从分析的内存中字符串），则返回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-206">If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), String.Empty is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-207">下面的示例分析文件并显示每个节点的基 URI。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-207">The following example parses a file and displays the base URI of each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c9b4e-208">该示例使用该文件，`uri.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-208">The example uses the file, `uri.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/XML/source.xml#2)]  
  
 <span data-ttu-id="c9b4e-209">`style.xml`文件包含的 XML 文本`<style>hardcover</style>`。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-209">The `style.xml` file contains the XML text `<style>hardcover</style>`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public override bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlValidatingReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-210">获取一个值，该值指示 <see cref="T:System.Xml.XmlValidatingReader" /> 是否实现二进制内容读取方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-210">Gets a value indicating whether the <see cref="T:System.Xml.XmlValidatingReader" /> implements the binary content read methods.</span></span></summary>
        <value><span data-ttu-id="c9b4e-211">如果实现了二进制内容读取方法，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-211"><see langword="true" /> if the binary content read methods are implemented; otherwise <see langword="false" />.</span></span> <span data-ttu-id="c9b4e-212"><see cref="T:System.Xml.XmlValidatingReader" /> 类返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-212">The <see cref="T:System.Xml.XmlValidatingReader" /> class returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-213"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-213">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-214">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-214">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-215">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-215">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span> 
  
 <span data-ttu-id="c9b4e-216">二进制内容读取方法包括<xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>， <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>， <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBase64%2A>，和<xref:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-216">The binary content read methods include the <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public override bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlValidatingReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-217">获取一个值，该值指示此读取器是否可以分析和解析实体。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-217">Gets a value indicating whether this reader can parse and resolve entities.</span></span></summary>
        <value><span data-ttu-id="c9b4e-218">如果此读取器可以分析和解析实体，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-218"><see langword="true" /> if the reader can parse and resolve entities; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9b4e-219"><see langword="XmlValidatingReader" /> 始终返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-219"><see langword="XmlValidatingReader" /> always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-220"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-220">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-221">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-221">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-222">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-222">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlValidatingReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9b4e-223">将 <see cref="P:System.Xml.XmlReader.ReadState" /> 更改为“已关闭”。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-223">Changes the <see cref="P:System.Xml.XmlReader.ReadState" /> to Closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-224"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-224">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-225">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-225">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-226">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-226">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-227">此方法也会释放读取时占用任何资源。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-227">This method also releases any resources held while reading.</span></span> <span data-ttu-id="c9b4e-228">如果此读取器已通过使用构造<xref:System.Xml.XmlTextReader>，此方法也会调用`Close`基础读取器上。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-228">If this reader was constructed by using an <xref:System.Xml.XmlTextReader>, this method also calls `Close` on the underlying reader.</span></span> <span data-ttu-id="c9b4e-229">如果此读取器已通过使用流构造，此方法还会调用`Close`对基础流。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-229">If this reader was constructed by using a stream, this method also calls `Close` on the underlying stream.</span></span>  
  
 <span data-ttu-id="c9b4e-230">如果`Close`已被调用，不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-230">If `Close` has already been called, no action is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlValidatingReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-231">获取 XML 文档中当前节点的深度。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-231">Gets the depth of the current node in the XML document.</span></span></summary>
        <value><span data-ttu-id="c9b4e-232">XML 文档中当前节点的深度。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-232">The depth of the current node in the XML document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-233"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-233">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-234">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-234">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-235">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-235">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-236">以下示例显示每个节点，包括其深度、 行号和行位置。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-236">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[IXmlLineInfo#1](~/samples/snippets/cpp/VS_Snippets_Data/IXmlLineInfo/CPP/lineinfo.cpp#1)]
 [!code-csharp[IXmlLineInfo#1](~/samples/snippets/csharp/VS_Snippets_Data/IXmlLineInfo/CS/lineinfo.cs#1)]
 [!code-vb[IXmlLineInfo#1](~/samples/snippets/visualbasic/VS_Snippets_Data/IXmlLineInfo/VB/lineinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.IXmlLineInfo" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Xml.XmlValidatingReader.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-237">获取文档的编码属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-237">Gets the encoding attribute for the document.</span></span></summary>
        <value><span data-ttu-id="c9b4e-238">编码值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-238">The encoding value.</span></span> <span data-ttu-id="c9b4e-239">如果不存在任何编码属性且不存在字节顺序标记，则这将默认为 UTF-8。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-239">If no encoding attribute exists, and there is not byte-order mark, this defaults to UTF-8.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-240"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-240">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-241">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-241">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-242">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-242">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-243">读取任何外部引用时 （如扩展的文档类型定义 (DTD) 文件中的实体或读取架构文件） 的 encoding 属性设置为在外部引用的编码值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-243">When any external reference is read (such as expanding an entity in a document type definition (DTD) file or reading a schema file) the encoding property is set to the encoding value of the external reference.</span></span> <span data-ttu-id="c9b4e-244">如果在外部引用中未指定编码，并且没有任何字节顺序标记，这将默认为 utf-8。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-244">If encoding is not specified in the external reference, and there is no byte-order mark, this defaults to UTF-8.</span></span>  
  
 <span data-ttu-id="c9b4e-245">支持所有基础操作系统支持的编码标准。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-245">All the encoding standards that the underlying operating system supports are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EntityHandling">
      <MemberSignature Language="C#" Value="public System.Xml.EntityHandling EntityHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.EntityHandling EntityHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.EntityHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityHandling As EntityHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::EntityHandling EntityHandling { System::Xml::EntityHandling get(); void set(System::Xml::EntityHandling value); };" />
      <MemberSignature Language="F#" Value="member this.EntityHandling : System.Xml.EntityHandling with get, set" Usage="System.Xml.XmlValidatingReader.EntityHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.EntityHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-246">获取或设置一个值，该值指定读取器处理实体的方式。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-246">Gets or sets a value that specifies how the reader handles entities.</span></span></summary>
        <value><span data-ttu-id="c9b4e-247"><see cref="T:System.Xml.EntityHandling" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-247">One of the <see cref="T:System.Xml.EntityHandling" /> values.</span></span> <span data-ttu-id="c9b4e-248">如果未指定 <see langword="EntityHandling" />，则它将默认为 EntityHandling.ExpandEntities。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-248">If no <see langword="EntityHandling" /> is specified, it defaults to EntityHandling.ExpandEntities.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-249"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-249">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-250">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-250">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-251">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-251">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-252">此属性可以更改，并在下一步后生效<xref:System.Xml.XmlValidatingReader.Read%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-252">This property can be changed and takes effect after the next <xref:System.Xml.XmlValidatingReader.Read%2A> call.</span></span>  
  
 <span data-ttu-id="c9b4e-253">当`EntityHandling`设置为`ExpandCharEntities`，属性值仅部分进行规范化。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-253">When `EntityHandling` is set to `ExpandCharEntities`, attribute values are only partially normalized.</span></span> <span data-ttu-id="c9b4e-254">读取器规范化独立于相邻实体引用节点的内容的每个单独的文本节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-254">The reader normalizes each individual text node independently from the content of adjacent entity reference nodes.</span></span>  
  
 <span data-ttu-id="c9b4e-255">为了说明该实体之间的区别处理模式，请考虑以下 XML:</span><span class="sxs-lookup"><span data-stu-id="c9b4e-255">To illustrate the difference between the entity handling modes consider the following XML:</span></span>  
  
```xml  
<!DOCTYPE doc [<!ENTITY num "123">]>  
 <doc> &#65; &num; </doc>  
```  
  
 <span data-ttu-id="c9b4e-256">当`EntityHandling`设置为`ExpandEntities`"doc"元素节点包含一个文本节点具有展开的实体文本：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-256">When `EntityHandling` is set to `ExpandEntities` the "doc" element node contains one text node with the expanded entity text:</span></span>  
  
|<span data-ttu-id="c9b4e-257">深度</span><span class="sxs-lookup"><span data-stu-id="c9b4e-257">Depth</span></span>|<span data-ttu-id="c9b4e-258">NodeType</span><span class="sxs-lookup"><span data-stu-id="c9b4e-258">NodeType</span></span>|<span data-ttu-id="c9b4e-259">name</span><span class="sxs-lookup"><span data-stu-id="c9b4e-259">Name</span></span>|<span data-ttu-id="c9b4e-260">值</span><span class="sxs-lookup"><span data-stu-id="c9b4e-260">Value</span></span>|  
|-----------|--------------|----------|-----------|  
|<span data-ttu-id="c9b4e-261">1</span><span class="sxs-lookup"><span data-stu-id="c9b4e-261">1</span></span>|<span data-ttu-id="c9b4e-262">Text</span><span class="sxs-lookup"><span data-stu-id="c9b4e-262">Text</span></span>||<span data-ttu-id="c9b4e-263">A 123</span><span class="sxs-lookup"><span data-stu-id="c9b4e-263">A 123</span></span>|  
  
 <span data-ttu-id="c9b4e-264">当`EntityHandling`设置为`ExpandCharEntities`，和<xref:System.Xml.XmlTextReader.WhitespaceHandling%2A>设置为有效或全部，"doc"元素扩展字符实体，并返回作为节点的常规实体：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-264">When `EntityHandling` is set to `ExpandCharEntities`, and <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A> is set to Significant or All, the "doc" element expands the character entity and returns the general entity as a node:</span></span>  
  
|<span data-ttu-id="c9b4e-265">深度</span><span class="sxs-lookup"><span data-stu-id="c9b4e-265">Depth</span></span>|<span data-ttu-id="c9b4e-266">NodeType</span><span class="sxs-lookup"><span data-stu-id="c9b4e-266">NodeType</span></span>|<span data-ttu-id="c9b4e-267">name</span><span class="sxs-lookup"><span data-stu-id="c9b4e-267">Name</span></span>|<span data-ttu-id="c9b4e-268">值</span><span class="sxs-lookup"><span data-stu-id="c9b4e-268">Value</span></span>|  
|-----------|--------------|----------|-----------|  
|<span data-ttu-id="c9b4e-269">1</span><span class="sxs-lookup"><span data-stu-id="c9b4e-269">1</span></span>|<span data-ttu-id="c9b4e-270">Text</span><span class="sxs-lookup"><span data-stu-id="c9b4e-270">Text</span></span>||<span data-ttu-id="c9b4e-271">包含当前请求的 URL 的</span><span class="sxs-lookup"><span data-stu-id="c9b4e-271">A</span></span>|  
|<span data-ttu-id="c9b4e-272">1</span><span class="sxs-lookup"><span data-stu-id="c9b4e-272">1</span></span>|<span data-ttu-id="c9b4e-273">EntityReference</span><span class="sxs-lookup"><span data-stu-id="c9b4e-273">EntityReference</span></span>|<span data-ttu-id="c9b4e-274">num</span><span class="sxs-lookup"><span data-stu-id="c9b4e-274">num</span></span>||  
|<span data-ttu-id="c9b4e-275">1</span><span class="sxs-lookup"><span data-stu-id="c9b4e-275">1</span></span>|<span data-ttu-id="c9b4e-276">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="c9b4e-276">SignificantWhitespace</span></span>|||  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-277">下面的示例使用`ResolveEntity`方法以展开常规实体。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-277">The following example uses the `ResolveEntity` method to expand a general entity.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c9b4e-278">该示例使用该文件，`book1.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-278">The example uses the file, `book1.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.ResolveEntity Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9b4e-279">指定了无效值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-279">Invalid value was specified.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlValidatingReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-280">获取一个值，该值指示读取器是否定位在流结尾。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-280">Gets a value indicating whether the reader is positioned at the end of the stream.</span></span></summary>
        <value><span data-ttu-id="c9b4e-281">如果此读取器定位在流的结尾，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-281"><see langword="true" /> if the reader is positioned at the end of the stream; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-282"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-282">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-283">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-283">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-284">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-284">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9b4e-285">获取属性的值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-285">Gets the value of an attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : int -&gt; string" Usage="xmlValidatingReader.GetAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="c9b4e-286">属性的索引。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-286">The index of the attribute.</span></span> <span data-ttu-id="c9b4e-287">索引是从零开始的。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-287">The index is zero-based.</span></span> <span data-ttu-id="c9b4e-288">（第一个属性的索引为 0。）</span><span class="sxs-lookup"><span data-stu-id="c9b4e-288">(The first attribute has index 0.)</span></span></param>
        <summary><span data-ttu-id="c9b4e-289">获取具有指定索引的属性的值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-289">Gets the value of the attribute with the specified index.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-290">指定的属性的值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-290">The value of the specified attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9b4e-291">此方法不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-291">This method does not move the reader.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-292"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-292">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-293">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-293">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-294">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-294">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9b4e-295"><paramref name="i" /> 参数小于 0 或大于等于 <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-295">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string -&gt; string" Usage="xmlValidatingReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c9b4e-296">属性的限定名称。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-296">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="c9b4e-297">获取具有指定名称的属性的值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-297">Gets the value of the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-298">指定的属性的值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-298">The value of the specified attribute.</span></span> <span data-ttu-id="c9b4e-299">如果未找到该属性，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-299">If the attribute is not found, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-300"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-300">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-301">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-301">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-302">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-302">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-303">此方法不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-303">This method does not move the reader.</span></span>  
  
 <span data-ttu-id="c9b4e-304">如果读取器定位在`DocumentType`节点，此方法可用于获取 PUBLIC 和 SYSTEM 文本，例如， `reader.GetAttribute("PUBLIC")`</span><span class="sxs-lookup"><span data-stu-id="c9b4e-304">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute("PUBLIC")`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-305">下面的示例获取的 ISBN 属性的值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-305">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c9b4e-306">该示例使用该文件，`attrs.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-306">The example uses the file, `attrs.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.GetAttribute Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/XML/attrs.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string * string -&gt; string" Usage="xmlValidatingReader.GetAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="c9b4e-307">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-307">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="c9b4e-308">属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-308">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="c9b4e-309">获取具有指定的本地名称和命名空间统一资源标识符 (URI) 的属性的值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-309">Gets the value of the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</span></span></summary>
        <returns><span data-ttu-id="c9b4e-310">指定的属性的值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-310">The value of the specified attribute.</span></span> <span data-ttu-id="c9b4e-311">如果未找到该属性，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-311">If the attribute is not found, <see langword="null" /> is returned.</span></span> <span data-ttu-id="c9b4e-312">此方法不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-312">This method does not move the reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-313"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-313">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-314">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-314">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-315">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-315">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-316">下面的 XML 包含特定命名空间中的一个属性：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-316">The following XML contains an attribute in a specific namespace:</span></span>  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 <span data-ttu-id="c9b4e-317">您可以查找`dt:type`属性使用一个参数 （前缀和本地名称） 或 （本地名称和命名空间 URI） 的两个参数：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-317">You can look up the `dt:type` attribute by using one argument (prefix and local name) or two arguments (local name and namespace URI):</span></span>  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 <span data-ttu-id="c9b4e-318">若要查找`xmlns:dt`属性，请使用以下参数之一：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-318">To look up the `xmlns:dt` attribute, use one of the following arguments:</span></span>  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 <span data-ttu-id="c9b4e-319">此外可以通过获取此信息<xref:System.Xml.XmlValidatingReader.Prefix%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-319">You can also get this information by using the <xref:System.Xml.XmlValidatingReader.Prefix%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasLineInfo">
      <MemberSignature Language="C#" Value="public bool HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function HasLineInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasLineInfo();" />
      <MemberSignature Language="F#" Value="abstract member HasLineInfo : unit -&gt; bool&#xA;override this.HasLineInfo : unit -&gt; bool" Usage="xmlValidatingReader.HasLineInfo " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9b4e-320">获取一个值，该值指示该类是否可返回行信息。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-320">Gets a value indicating whether the class can return line information.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-321">如果该类可以返回行信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-321"><see langword="true" /> if the class can return line information; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-322"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-322">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-323">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-323">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-324">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-324">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlValidatingReader.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-325">获取一个值，该值指示当前节点是否可以具有 String.Empty 以外的 <see cref="P:System.Xml.XmlValidatingReader.Value" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-325">Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlValidatingReader.Value" /> other than String.Empty.</span></span></summary>
        <value><span data-ttu-id="c9b4e-326">如果读取器当前定位在的节点可以具有 <see langword="Value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-326"><see langword="true" /> if the node on which the reader is currently positioned can have a <see langword="Value" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-327"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-327">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-328">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-328">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-329">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-329">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-330">下表列出具有要返回的值的节点类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-330">The following table lists node types that have a value to return.</span></span>  
  
|<span data-ttu-id="c9b4e-331">节点类型</span><span class="sxs-lookup"><span data-stu-id="c9b4e-331">Node Type</span></span>|<span data-ttu-id="c9b4e-332">值</span><span class="sxs-lookup"><span data-stu-id="c9b4e-332">Value</span></span>|  
|---------------|-----------|  
|`Attribute`|<span data-ttu-id="c9b4e-333">属性的值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-333">The value of the attribute.</span></span>|  
|`CDATA`|<span data-ttu-id="c9b4e-334">CDATA 节的内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-334">The content of the CDATA section.</span></span>|  
|`Comment`|<span data-ttu-id="c9b4e-335">注释的内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-335">The content of the comment.</span></span>|  
|`DocumentType`|<span data-ttu-id="c9b4e-336">内部子集。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-336">The internal subset.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="c9b4e-337">全部内容（不包括指令目标）。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-337">The entire content, excluding the target.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="c9b4e-338">混合内容模型中标记之间的空白。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-338">The white space between markup in a mixed content model.</span></span>|  
|`Text`|<span data-ttu-id="c9b4e-339">文本节点的内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-339">The content of the text node.</span></span>|  
|`Whitespace`|<span data-ttu-id="c9b4e-340">标记之间的空白。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-340">The white space between markup.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="c9b4e-341">声明的内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-341">The content of the declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-342">下面的示例 XML 中读取的各种数据类型，并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-342">The following example reads in XML with various data types and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public override bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlValidatingReader.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-343">获取一个值，该值指示当前节点是否是从文档类型定义 (DTD) 或架构中定义的默认值生成的属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-343">Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the document type definition (DTD) or schema.</span></span></summary>
        <value><span data-ttu-id="c9b4e-344">如果当前节点是其值从 DTD 或架构中定义的默认值生成的属性，则为 <see langword="true" />；如果属性值为显式设置的，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-344"><see langword="true" /> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <see langword="false" /> if the attribute value was explicitly set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9b4e-345">此属性仅适用于属性节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-345">This property applies only to an attribute node.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-346"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-346">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-347">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-347">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-348">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-348">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-349">下面的示例显示所有属性节点上的根元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-349">The following example displays all attributes nodes on the root element.</span></span>  
  
 [!code-cpp[XmlValidatingReader.IsDefault#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.IsDefault/CPP/readdefattr.cpp#1)]
 [!code-csharp[XmlValidatingReader.IsDefault#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.IsDefault/CS/readdefattr.cs#1)]
 [!code-vb[XmlValidatingReader.IsDefault#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.IsDefault/VB/readdefattr.vb#1)]  
  
 <span data-ttu-id="c9b4e-350">该示例使用以下文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-350">The example uses the following files as input.</span></span>  
  
 `book4.xml`  
  
 [!code-xml[XmlValidatingReader.IsDefault#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.IsDefault/XML/book4.xml#2)]  
  
 `book.dtd`  
  
 [!code-xml[XmlValidatingReader.IsDefault#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.IsDefault/XML/book.dtd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public override bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlValidatingReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-351">获取一个值，该值指示当前节点是否为空元素（例如 <c>&lt;MyElement/&gt;</c>）。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-351">Gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span></span></summary>
        <value><span data-ttu-id="c9b4e-352"><see langword="true" /> 如果当前节点是一个元素 (<see cref="P:System.Xml.XmlValidatingReader.NodeType" />等于<see langword="XmlNodeType.Element" />)，结尾<c>/ &gt;</c>; 否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-352"><see langword="true" /> if the current node is an element (<see cref="P:System.Xml.XmlValidatingReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) that ends with <c>/&gt;</c>; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-353"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-353">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-354">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-354">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-355">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-355">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-356">此属性使您能够确定下面各项之间的差异：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-356">This property enables you to determine the difference between the following:</span></span>  
  
 <span data-ttu-id="c9b4e-357">`<item num="123"/>` (`IsEmptyElement`是`true`)。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-357">`<item num="123"/>` (`IsEmptyElement` is `true`).</span></span>  
  
 <span data-ttu-id="c9b4e-358">`<item num="123">` (`IsEmptyElement`是`false`，尽管元素内容为空)。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-358">`<item num="123">` (`IsEmptyElement` is `false`, although element content is empty).</span></span>  
  
 <span data-ttu-id="c9b4e-359">相应`EndElement`节点不为空元素生成。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-359">A corresponding `EndElement` node is not generated for empty elements.</span></span>  
  
 <span data-ttu-id="c9b4e-360">如果默认的内容已添加到由于架构验证的元素`IsEmptyElement`仍返回`true`。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-360">If default content has been added to an element due to schema validation, `IsEmptyElement` still returns `true`.</span></span> <span data-ttu-id="c9b4e-361">它没有任何影响在该元素是否有默认值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-361">It has no bearing on whether or not the element has a default value.</span></span> <span data-ttu-id="c9b4e-362">换而言之，`IsEmptyElement`只是报告是否在源文档中的元素必须为结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-362">In other words, `IsEmptyElement` simply reports whether or not the element in the source document had an end element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-363">以下示例显示每个元素的文本内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-363">The following example displays the text content of each element.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c9b4e-364">该示例使用该文件，`elems.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-364">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.IsEmptyElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[int] { System::String ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Xml.XmlValidatingReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : string" Usage="System.Xml.XmlValidatingReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="namespaceURI">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Xml.XmlValidatingReader.LineNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LineNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-365">获取当前行号。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-365">Gets the current line number.</span></span></summary>
        <value><span data-ttu-id="c9b4e-366">当前行号。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-366">The current line number.</span></span> <span data-ttu-id="c9b4e-367">此属性的起始值为 1。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-367">The starting value for this property is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-368"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-368">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-369">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-369">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-370">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-370">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-371">此属性通常用于错误报告，但可以随时调用。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-371">This property is most commonly used for error reporting, but can be called at any time.</span></span> <span data-ttu-id="c9b4e-372">此属性的起始值为 1。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-372">The starting value for this property is 1.</span></span> <span data-ttu-id="c9b4e-373">结合<xref:System.Xml.XmlValidatingReader.LinePosition%2A>，值为 1，1 表示文档的开头。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-373">Combined with <xref:System.Xml.XmlValidatingReader.LinePosition%2A>, a value of 1,1 indicates the start of the document.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LinePosition : int" Usage="System.Xml.XmlValidatingReader.LinePosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LinePosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-374">获取当前行位置。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-374">Gets the current line position.</span></span></summary>
        <value><span data-ttu-id="c9b4e-375">当前行位置。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-375">The current line position.</span></span> <span data-ttu-id="c9b4e-376">此属性的起始值为 1。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-376">The starting value for this property is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-377"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-377">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-378">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-378">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-379">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-379">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-380">此属性通常用于错误报告，但可以随时调用。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-380">This property is most commonly used for error reporting, but can be called at any time.</span></span> <span data-ttu-id="c9b4e-381">此属性的起始值`1`。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-381">The starting value for this property is `1`.</span></span>  
  
 <span data-ttu-id="c9b4e-382">所指示的位置是文本的在标记中的第一个字符。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-382">The position indicated is the first character of text in the markup.</span></span>  
  
```xml  
<root>  
 abc<tag/>  
</root>  
```  
  
 <span data-ttu-id="c9b4e-383">前面的 XML 文本，在第一行`LinePosition`的`2`对应于字符`r`; 在第二行`LinePosition`的`5`对应于字符`t`; 和第三行`LinePosition`的`3`对应于字符`r`。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-383">On the first line of the preceding XML text, a `LinePosition` of `2` corresponds to the character `r`; on the second line, a `LinePosition` of `5` corresponds to the character `t`; and on the third line, a `LinePosition` of `3` corresponds to the character `r`.</span></span>  
  
 <span data-ttu-id="c9b4e-384">结合<xref:System.Xml.XmlValidatingReader.LineNumber%2A>，值为`1,1`指示文档的开头。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-384">Combined with <xref:System.Xml.XmlValidatingReader.LineNumber%2A>, a value of `1,1` indicates the start of the document.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlValidatingReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-385">获取当前节点的本地名称。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-385">Gets the local name of the current node.</span></span></summary>
        <value><span data-ttu-id="c9b4e-386">移除了前缀的当前节点的名称。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-386">The name of the current node with the prefix removed.</span></span> <span data-ttu-id="c9b4e-387">例如，<see langword="LocalName" />是<see langword="book" />元素<c>&lt;bk:book&gt;</c>。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-387">For example, <see langword="LocalName" /> is <see langword="book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
<span data-ttu-id="c9b4e-388">对于没有名称的节点类型（如 <see langword="Text" />、<see langword="Comment" /> 等），该属性返回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-388">For node types that do not have a name (like <see langword="Text" />, <see langword="Comment" />, and so on), this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-389"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-389">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-390">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-390">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-391">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-391">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-392">下面的示例读取 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-392">The following example reads an XML fragment.</span></span>  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public override string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="override this.LookupNamespace : string -&gt; string" Usage="xmlValidatingReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="c9b4e-393">要解析其命名空间统一资源标识符 (URI) 的前缀。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-393">The prefix whose namespace Uniform Resource Identifier (URI) you want to resolve.</span></span> <span data-ttu-id="c9b4e-394">若要匹配默认命名空间，请传递一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-394">To match the default namespace, pass an empty string.</span></span></param>
        <summary><span data-ttu-id="c9b4e-395">解析当前元素的范围内的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-395">Resolves a namespace prefix in the current element's scope.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-396">前缀映射到的命名空间 URI；如果未找到任何匹配的前缀，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-396">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-397"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-397">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-398">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-398">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-399">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-399">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span> 
  
 <span data-ttu-id="c9b4e-400">如果读取器定位在以下 XML 字符串中`href`属性，该前缀`a`解析通过调用`reader.LookupNamespace("a", true)`。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-400">In the following XML string, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace("a", true)`.</span></span> <span data-ttu-id="c9b4e-401">返回的字符串是`urn:456`。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-401">The returned string is `urn:456`.</span></span>  
  
```xml  
<root xmlns:a="urn:456">  
 <item>  
 <ref href="a:b"/>  
 </item>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9b4e-402">移动到指定的属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-402">Moves to the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override void MoveToAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveToAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MoveToAttribute (i As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MoveToAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : int -&gt; unit" Usage="xmlValidatingReader.MoveToAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="c9b4e-403">属性的索引。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-403">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="c9b4e-404">移动到具有指定索引的属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-404">Moves to the attribute with the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-405"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-405">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-406">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-406">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-407">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-407">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-408">下面的示例读取的根节点上的所有元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-408">The following example reads all the elements on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9b4e-409"><paramref name="i" /> 参数小于 0 或大于等于 <see cref="P:System.Xml.XmlReader.AttributeCount" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-409">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlReader.AttributeCount" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string -&gt; bool" Usage="xmlValidatingReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c9b4e-410">属性的限定名称。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-410">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="c9b4e-411">移动到具有指定名称的属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-411">Moves to the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-412">如果找到了属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-412"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9b4e-413">如果为 <see langword="false" />，则读取器的位置未改变。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-413">If <see langword="false" />, the position of the reader does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-414"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-414">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-415">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-415">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-416">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-416">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-417">调用此方法后<xref:System.Xml.XmlValidatingReader.Name%2A>， <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>，和<xref:System.Xml.XmlValidatingReader.Prefix%2A>属性反映了该属性的属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-417">After calling this method, the <xref:System.Xml.XmlValidatingReader.Name%2A>, <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>, and <xref:System.Xml.XmlValidatingReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-418">下面的示例读取一个特性，其文本和实体引用节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-418">The following example reads an attribute with text and entity reference nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string * string -&gt; bool" Usage="xmlValidatingReader.MoveToAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="c9b4e-419">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-419">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="c9b4e-420">属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-420">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="c9b4e-421">移动到具有指定的本地名称和命名空间统一资源标识符 (URI) 的属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-421">Moves to the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</span></span></summary>
        <returns><span data-ttu-id="c9b4e-422">如果找到了属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-422"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9b4e-423">如果为 <see langword="false" />，则读取器的位置未改变。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-423">If <see langword="false" />, the position of the reader does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-424"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-424">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-425">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-425">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-426">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-426">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-427">调用此方法后<xref:System.Xml.XmlValidatingReader.Name%2A>， <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>，和<xref:System.Xml.XmlValidatingReader.Prefix%2A>属性反映了该属性的属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-427">After calling this method, the <xref:System.Xml.XmlValidatingReader.Name%2A>, <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>, and <xref:System.Xml.XmlValidatingReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public override bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToElement();" />
      <MemberSignature Language="F#" Value="override this.MoveToElement : unit -&gt; bool" Usage="xmlValidatingReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9b4e-428">移动到包含当前属性节点的元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-428">Moves to the element that contains the current attribute node.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-429">如果读取器定位在属性上（读取器移动到拥有该属性的元素），则为 <see langword="true" />；如果读取器未定位在属性上（读取器的位置不更改），则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-429"><see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-430"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-430">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-431">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-431">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-432">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-432">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-433">此方法用于通过其属性导航后返回到该元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-433">Use this method to return to an element after navigating through its attributes.</span></span> <span data-ttu-id="c9b4e-434">此方法将读取器移动到以下节点类型之一： `Element`， `DocumentType`，或`XmlDeclaration`。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-434">This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-435">下面的示例读取的根节点上的所有元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-435">The following example reads all the elements on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToFirstAttribute : unit -&gt; bool" Usage="xmlValidatingReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9b4e-436">移动到第一个属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-436">Moves to the first attribute.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-437">如果属性存在（读取器移动到第一个属性），则为 <see langword="true" />；否则为 <see langword="false" />（读取器的位置不更改）。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-437"><see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-438"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-438">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-439">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-439">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-440">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-440">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-441">下面的示例读取 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-441">The following example reads an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToNextAttribute : unit -&gt; bool" Usage="xmlValidatingReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9b4e-442">移动到下一个属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-442">Moves to the next attribute.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-443">如果存在下一个属性，则为 <see langword="true" />；如果没有其他属性，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-443"><see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-444"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-444">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-445">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-445">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-446">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-446">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-447">如果当前节点是元素节点，此方法等同于<xref:System.Xml.XmlValidatingReader.MoveToFirstAttribute%2A>。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-447">If the current node is an element node, this method is equivalent to <xref:System.Xml.XmlValidatingReader.MoveToFirstAttribute%2A>.</span></span> <span data-ttu-id="c9b4e-448">如果`MoveToNextAttribute`返回`true`，读取器移动到下一步属性; 否则为读取器位置不会更改。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-448">If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-449">下面的示例读取 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-449">The following example reads an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlValidatingReader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-450">获取当前节点的限定名称。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-450">Gets the qualified name of the current node.</span></span></summary>
        <value><span data-ttu-id="c9b4e-451">当前节点的限定名称。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-451">The qualified name of the current node.</span></span> <span data-ttu-id="c9b4e-452">例如，<see langword="Name" />是<see langword="bk:book" />元素<c>&lt;bk:book&gt;</c>。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-452">For example, <see langword="Name" /> is <see langword="bk:book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
<span data-ttu-id="c9b4e-453">返回的名称取决于节点的 <see cref="P:System.Xml.XmlValidatingReader.NodeType" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-453">The name returned is dependent on the <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> of the node.</span></span> <span data-ttu-id="c9b4e-454">下列节点类型返回所列的值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-454">The following node types return the listed values.</span></span> <span data-ttu-id="c9b4e-455">所有其他节点类型返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-455">All other node types return an empty string.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="c9b4e-456">节点类型</span><span class="sxs-lookup"><span data-stu-id="c9b4e-456">Node Type</span></span> 
 </term><description> <span data-ttu-id="c9b4e-457">name</span><span class="sxs-lookup"><span data-stu-id="c9b4e-457">Name</span></span> 
 </description></listheader><item><term><see langword="Attribute" /></term><description> <span data-ttu-id="c9b4e-458">属性名。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-458">The name of the attribute.</span></span>  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> <span data-ttu-id="c9b4e-459">文档类型名称。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-459">The document type name.</span></span>  
  
 </description></item><item><term><see langword="Element" /></term><description> <span data-ttu-id="c9b4e-460">标记名称。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-460">The tag name.</span></span>  
  
 </description></item><item><term><see langword="EntityReference" /></term><description> <span data-ttu-id="c9b4e-461">引用的实体的名称。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-461">The name of the entity referenced.</span></span>  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> <span data-ttu-id="c9b4e-462">处理指令的目标。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-462">The target of the processing instruction.</span></span>  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> <span data-ttu-id="c9b4e-463">字符串 <see langword="xml" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-463">The literal string <see langword="xml" />.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-464"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-464">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-465">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-465">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-466">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-466">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-467">下面的示例读取 XML 文件，并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-467">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c9b4e-468">该示例使用该文件，`items.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-468">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlValidatingReader.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-469">获取或设置一个值，该值指示是否进行命名空间支持。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-469">Gets or sets a value indicating whether to do namespace support.</span></span></summary>
        <value><span data-ttu-id="c9b4e-470">要进行命名空间支持，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-470"><see langword="true" /> to do namespace support; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9b4e-471">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-471">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-472"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-472">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-473">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-473">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-474">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-474">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlValidatingReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-475">对于读取器定位到的节点，按照万维网联合会 (W3C) 命名空间规范的定义，获取该节点的命名空间统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-475">Gets the namespace Uniform Resource Identifier (URI) (as defined in the World Wide Web Consortium (W3C) Namespace specification) of the node on which the reader is positioned.</span></span></summary>
        <value><span data-ttu-id="c9b4e-476">当前节点的命名空间 URI；否则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-476">The namespace URI of the current node; otherwise an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9b4e-477">此属性是与相关`Element`和`Attribute`仅限节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-477">This property is relevant to `Element` and `Attribute` nodes only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-478"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-478">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-479">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-479">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-480">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-480">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-481">下面的示例读取 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-481">The following example reads an XML fragment.</span></span>  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlValidatingReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-482">获取与此实现关联的 <see cref="T:System.Xml.XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-482">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span></span></summary>
        <value><span data-ttu-id="c9b4e-483"><see langword="XmlNameTable" />，它使你能够获取节点内字符串的原子化版本。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-483"><see langword="XmlNameTable" /> that enables you to get the atomized version of a string within the node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-484"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-484">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-485">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-485">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-486">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-486">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-487">从返回的所有节点和属性名称<xref:System.Xml.XmlValidatingReader>通过使用原子化`NameTable`。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-487">All node and attribute names returned from <xref:System.Xml.XmlValidatingReader> are atomized by using the `NameTable`.</span></span> <span data-ttu-id="c9b4e-488">当多次返回相同的名称 (例如， `Customer`)，相同`String`对象将返回为该名称。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-488">When the same name is returned multiple times (for example, `Customer`), the same `String` object will be returned for that name.</span></span> <span data-ttu-id="c9b4e-489">这使您能够编写高效的代码，does 对象上而不是成本高昂的字符串比较这些字符串的比较。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-489">This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlValidatingReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-490">获取当前节点的类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-490">Gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="c9b4e-491"><see cref="T:System.Xml.XmlNodeType" /> 值之一，表示当前节点的类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-491">One of the <see cref="T:System.Xml.XmlNodeType" /> values representing the type of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-492"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-492">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-493">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-493">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-494">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-494">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-495">此属性永远不会返回以下`XmlNodeType`类型： `Document`， `DocumentFragment`， `Entity`，或`Notation`。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-495">This property never returns the following `XmlNodeType` types: `Document`, `DocumentFragment`, `Entity`, or `Notation`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-496">下面的示例读取 XML 文件，并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-496">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c9b4e-497">该示例使用该文件，`items.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-497">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlValidatingReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-498">获取与当前节点关联的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-498">Gets the namespace prefix associated with the current node.</span></span></summary>
        <value><span data-ttu-id="c9b4e-499">与当前节点关联的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-499">The namespace prefix associated with the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-500"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-500">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-501">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-501">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-502">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-502">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-503">下面的示例读取 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-503">The following example reads an XML fragment.</span></span>  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public override char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlValidatingReader.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-504">获取用于括起属性节点的值的引号字符。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-504">Gets the quotation mark character used to enclose the value of an attribute node.</span></span></summary>
        <value><span data-ttu-id="c9b4e-505">用于括起属性节点的值的引号字符（" 或 '）。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-505">The quotation mark character (" or ') used to enclose the value of an attribute node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9b4e-506">此属性仅适用于属性节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-506">This property applies only to an attribute node.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-507"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-507">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-508">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-508">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-509">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-509">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xmlValidatingReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9b4e-510">从流中读取下一个节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-510">Reads the next node from the stream.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-511">如果成功读取了下一个节点，则为 <see langword="true" />；如果没有其他节点可读取，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-511"><see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-512"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-512">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-513">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-513">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-514">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-514">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-515">当首次创建并初始化一个读取器时，没有任何可用信息。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-515">When a reader is first created and initialized, there is no information available.</span></span> <span data-ttu-id="c9b4e-516">必须调用`Read`读取的第一个节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-516">You must call `Read` to read the first node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-517">下面的示例读取 XML 文件，并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-517">The following example reads an XML file and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c9b4e-518">该示例使用该文件，`items.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-518">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public override bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="override this.ReadAttributeValue : unit -&gt; bool" Usage="xmlValidatingReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9b4e-519">将属性值分析为一个或多个 <see langword="Text" />、<see langword="EntityReference" /> 或 <see langword="EndEntity" /> 节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-519">Parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-520">如果有可返回的节点，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-520"><see langword="true" /> if there are nodes to return.</span></span>  
  
 <span data-ttu-id="c9b4e-521">如果进行初始调用时读取器不是定位在属性节点上，或者如果已读取了所有属性值，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-521"><see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span></span>  
  
<span data-ttu-id="c9b4e-522">如果是空属性，如 <c>misc=""</c>，则返回 <see langword="true" />，同时返回值为 String.Empty 的单个节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-522">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of String.Empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-523"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-523">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-524">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-524">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-525">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-525">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-526">使用此方法之后调用<xref:System.Xml.XmlValidatingReader.MoveToAttribute%2A>通读组成属性值的文本或实体引用节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-526">Use this method after calling <xref:System.Xml.XmlValidatingReader.MoveToAttribute%2A> to read through the text or entity reference nodes that make up the attribute value.</span></span> <span data-ttu-id="c9b4e-527"><xref:System.Xml.XmlReader.Depth%2A>的属性值的节点是属性节点的深度加一。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-527">The <xref:System.Xml.XmlReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node.</span></span> <span data-ttu-id="c9b4e-528">`Depth`按一个单步执行和跳出执行常规实体引用时递增和递减。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-528">The `Depth` increments and decrements by one when you step into and out of general entity references.</span></span>  
  
 <span data-ttu-id="c9b4e-529">例如，假设有以下 XML: `<test name="a &b; c"/>`</span><span class="sxs-lookup"><span data-stu-id="c9b4e-529">For example, suppose you have the following XML: `<test name="a &b; c"/>`</span></span>  
  
 <span data-ttu-id="c9b4e-530">其中实体`b`定义文档类型定义 (DTD) 中，如下所示： `<!ENTITY b "123">`</span><span class="sxs-lookup"><span data-stu-id="c9b4e-530">where the entity `b` is defined in the document type definition (DTD) as follows: `<!ENTITY b "123">`</span></span>  
  
 <span data-ttu-id="c9b4e-531">如果<xref:System.Xml.XmlValidatingReader.EntityHandling%2A>设置为`ExpandCharEntities`，下面的 C# 代码两个文本节点和一个实体引用节点的形式返回属性值：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-531">If <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> is set to `ExpandCharEntities`, the following C# code returns the attribute value as two text nodes and one entity reference node:</span></span>  
  
```csharp  
reader.MoveToAttribute("name");  
  while (reader.ReadAttributeValue())  
  {  
  if (reader.NodeType == XmlNodeType.Text)  
  {  
  // at this point reader.Value == "a " or " c"  
  }  
  else if (reader.NodeType == XmlNodeType.EntityReference)  
  {  
  // at this point reader.Name == "b"  
  reader.ResolveEntity();  
  while (reader.ReadAttributeValue() &&  
  reader.NodeType != XmlNodeType.EndEntity)  
  {  
  // reader.Value == "123"  
  }  
  }  
    }  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-532">下面的示例读取一个特性，其文本和实体引用节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-532">The following example reads an attribute with text and entity reference nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c9b4e-533">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-533">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="c9b4e-534">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-534">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="c9b4e-535">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-535">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="c9b4e-536">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-536">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="c9b4e-537">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-537">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="c9b4e-538">读取内容并返回 Base64 解码的二进制字节。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-538">Reads the content and returns the Base64 decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-539">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-539">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-540"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-540">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-541">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-541">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-542">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-542">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span> 
  
 <span data-ttu-id="c9b4e-543">此方法的内容流式处理、 对 Base64 内容解码并返回解码后的二进制字节 （例如，内联 Base64 编码 GIF 图像） 到缓冲区。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-543">This method streams the content, decodes the Base64 content, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="c9b4e-544">可以连续调用此方法，以读取大的嵌入文本流。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-544">This method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="c9b4e-545">有关详细信息，请参阅 RFC 1521"MIME （多用途 Internet 邮件扩展） 部分一个：用于指定和 Internet 消息正文的格式描述机制"。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-545">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="c9b4e-546">您可以获得从 Rfc[征求意见文档网站](https://www.rfc-editor.org)。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-546">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-547">不应访问的任何读取器属性调用之间<xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>方法，直到该方法返回值 0。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-547">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="c9b4e-548">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-548">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="c9b4e-549"><xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> 它已达到处理字节流的末尾时返回的值为 0。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-549"><xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="c9b4e-550">读取器位于第一个非内容节点上。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-550">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="c9b4e-551">如果您要求更少，或在其当前位置中保留的字节数比流，读取器中剩余的精确数目。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-551">If you ask for fewer, or the exact number, of bytes than are left in the stream, the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="c9b4e-552"><xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> 不支持以下 XML 节点类型：元素、 XmlDeclaration，None、 文档、 DocumentType、 表示法、 实体和 DocumentFragment。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-552"><xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> is not supported on the following XML node types:  Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, and DocumentFragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c9b4e-553"><paramref name="buffer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-553">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9b4e-554">当前节点不支持 <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-554"><see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9b4e-555">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-555">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c9b4e-556">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-556">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="c9b4e-557">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-557">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="c9b4e-558">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-558">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="c9b4e-559">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-559">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="c9b4e-560">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-560">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="c9b4e-561">读取内容并返回 BinHex 解码的二进制字节。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-561">Reads the content and returns the BinHex decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-562">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-562">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-563"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-563">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-564">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-564">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-565">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-565">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span> 
  
 <span data-ttu-id="c9b4e-566">此方法的内容流式处理、 解码 BinHex 内容，并返回已解码的二进制字节 （例如，内联 BinHex 编码 GIF 图像） 到缓冲区。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-566">This method streams the content, decodes the BinHex content, and returns the decoded binary bytes (for example, an inline BinHex encoded GIF image) into the buffer.</span></span> <span data-ttu-id="c9b4e-567">可以连续调用此方法，以读取大的嵌入文本流。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-567">This method can be called successively to read large streams of embedded text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-568">不应访问的任何读取器属性调用之间<xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>方法，直到该方法返回值 0。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-568">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="c9b4e-569">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-569">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="c9b4e-570"><xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> 它已达到处理字节流的末尾时返回的值为 0。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-570"><xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="c9b4e-571">读取器位于第一个非内容节点上。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-571">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="c9b4e-572">如果您要求更少，或在其当前位置中保留的字节数比流，读取器中剩余的精确数目。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-572">If you ask for fewer, or the exact number, of bytes than are left in the stream, the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="c9b4e-573"><xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> 不支持以下 XML 节点类型：元素、 XmlDeclaration，None、 文档、 DocumentType、 表示法、 实体和 DocumentFragment。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-573"><xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> is not supported on the following XML node types:  Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, and DocumentFragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c9b4e-574"><paramref name="buffer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-574">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9b4e-575">当前节点不支持 <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-575"><see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9b4e-576">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-576">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c9b4e-577"><see cref="T:System.Xml.XmlValidatingReader" /> 实现不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-577">The <see cref="T:System.Xml.XmlValidatingReader" /> implementation does not support this method.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c9b4e-578">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-578">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="c9b4e-579">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-579">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="c9b4e-580">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-580">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="c9b4e-581">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-581">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="c9b4e-582">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-582">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="c9b4e-583">读取元素并对 Base64 内容进行解码。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-583">Reads the element and decodes the Base64 content.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-584">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-584">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-585"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-585">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-586">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-586">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-587">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-587">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-588">此方法读取元素内容，对使用 Base64 编码，对其进行解码并返回已解码的二进制字节 （例如，内联 Base64 编码 GIF 图像） 到缓冲区。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-588">This method reads the element content, decodes it using Base64 encoding, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="c9b4e-589">有关详细信息，请参阅 RFC 1521"MIME （多用途 Internet 邮件扩展） 部分一个：用于指定和 Internet 消息正文的格式描述机制"。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-589">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="c9b4e-590">您可以获得从 Rfc[征求意见文档网站](https://www.rfc-editor.org)。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-590">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
 <span data-ttu-id="c9b4e-591">此方法可读取只有简单内容的元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-591">This method can read only simple-content elements.</span></span> <span data-ttu-id="c9b4e-592">元素可以包含文本、 空白、 有效空白、 CDATA 部分、 注释和处理指令。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-592">The element can contain text, white space, significant white space, CDATA sections, comments, and processing instructions.</span></span> <span data-ttu-id="c9b4e-593">它还可以包含实体引用，会自动扩展。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-593">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="c9b4e-594">元素不能具有子元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-594">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="c9b4e-595">此方法是非常类似于<xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>方法，但它可以调用仅在元素节点类型上。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-595">This method is very similar to the <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> method except that it can be called only on element node types.</span></span>  
  
 <span data-ttu-id="c9b4e-596">如果`count`值高于在文档中的字节数是否等于在文档中的字节数或<xref:System.Xml.XmlValidatingReader>读取该文档中的所有剩余字节，并返回读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-596">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlValidatingReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="c9b4e-597">下一步<xref:System.Xml.XmlValidatingReader>方法调用会返回 0 并将读取器移动到节点以下<xref:System.Xml.XmlNodeType.EndElement>。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-597">The next <xref:System.Xml.XmlValidatingReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.</span></span>  
  
 <span data-ttu-id="c9b4e-598">如果您调用<xref:System.Xml.XmlValidatingReader.Read%2A>的所有元素内容使用之前，读取器的行为类似于第一个内容，然后<xref:System.Xml.XmlValidatingReader.Read%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-598">If you call <xref:System.Xml.XmlValidatingReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlValidatingReader.Read%2A> method was called.</span></span> <span data-ttu-id="c9b4e-599">这意味着读取器将读取所有文本，直到遇到结束元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-599">This means that the reader will read all the text until the end element is encountered.</span></span> <span data-ttu-id="c9b4e-600">然后它将阅读结束标记节点、 读取下一个节点，并最后将自身定位到下一个后续节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-600">It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c9b4e-601"><paramref name="buffer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-601">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9b4e-602">当前节点不是元素节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-602">The current node is not an element node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9b4e-603">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-603">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c9b4e-604"><see cref="T:System.Xml.XmlValidatingReader" /> 实现不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-604">The <see cref="T:System.Xml.XmlValidatingReader" /> implementation does not support this method.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="c9b4e-605">该元素包含混合内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-605">The element contains mixed-content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="c9b4e-606">无法将内容转换成请求的类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-606">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c9b4e-607">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-607">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="c9b4e-608">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-608">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="c9b4e-609">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-609">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="c9b4e-610">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-610">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="c9b4e-611">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-611">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="c9b4e-612">读取元素并对 BinHex 内容进行解码。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-612">Reads the element and decodes the BinHex content.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-613">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-613">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-614"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-614">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-615">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-615">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-616">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-616">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-617">此方法读取元素内容，并使用 BinHex 编码、 解码并返回已解码的二进制字节 （例如，内联 BinHex 编码 GIF 图像） 到缓冲区。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-617">This method reads the element content, decodes it using BinHex encoding, and returns the decoded binary bytes (for example, an inline BinHex encoded GIF image) into the buffer.</span></span>  
  
 <span data-ttu-id="c9b4e-618">此方法可读取只有简单内容的元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-618">This method can read only simple-content elements.</span></span> <span data-ttu-id="c9b4e-619">元素可以包含文本、 空白、 有效空白、 CDATA 部分、 注释和处理指令。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-619">The element can contain text, white space, significant white space, CDATA sections, comments, and processing instructions.</span></span> <span data-ttu-id="c9b4e-620">它还可以包含实体引用，会自动扩展。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-620">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="c9b4e-621">元素不能具有子元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-621">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="c9b4e-622">此方法是非常类似于<xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>方法，但它可以调用仅在元素节点类型上。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-622">This method is very similar to the <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> method except that it can be called only on element node types.</span></span>  
  
 <span data-ttu-id="c9b4e-623">如果`count`值高于在文档中的字节数是否等于在文档中的字节数或<xref:System.Xml.XmlValidatingReader>读取该文档中的所有剩余字节，并返回读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-623">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlValidatingReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="c9b4e-624">下一步<xref:System.Xml.XmlValidatingReader>方法调用会返回 0 并将读取器移动到节点以下<xref:System.Xml.XmlNodeType.EndElement>。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-624">The next <xref:System.Xml.XmlValidatingReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.</span></span>  
  
 <span data-ttu-id="c9b4e-625">如果您调用<xref:System.Xml.XmlValidatingReader.Read%2A>的所有元素内容使用之前，读取器的行为类似于第一个内容，然后<xref:System.Xml.XmlValidatingReader.Read%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-625">If you call <xref:System.Xml.XmlValidatingReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlValidatingReader.Read%2A> method was called.</span></span> <span data-ttu-id="c9b4e-626">这意味着读取器将读取所有文本，直到遇到结束元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-626">This means that the reader will read all the text until the end element is encountered.</span></span> <span data-ttu-id="c9b4e-627">然后它将阅读结束标记节点、 读取下一个节点，并最后将自身定位到下一个后续节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-627">It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c9b4e-628"><paramref name="buffer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-628">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9b4e-629">当前节点不是元素节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-629">The current node is not an element node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9b4e-630">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-630">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c9b4e-631"><see cref="T:System.Xml.XmlValidatingReader" /> 实现不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-631">The <see cref="T:System.Xml.XmlValidatingReader" /> implementation does not support this method.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="c9b4e-632">该元素包含混合内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-632">The element contains mixed-content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="c9b4e-633">无法将内容转换成请求的类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-633">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Reader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReader Reader" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Reader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reader As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlReader ^ Reader { System::Xml::XmlReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Reader : System.Xml.XmlReader" Usage="System.Xml.XmlValidatingReader.Reader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-634">获取用于构造此 <see langword="XmlValidatingReader" /> 的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-634">Gets the <see cref="T:System.Xml.XmlReader" /> used to construct this <see langword="XmlValidatingReader" />.</span></span></summary>
        <value><span data-ttu-id="c9b4e-635">构造函数中指定的 <see langword="XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-635">The <see langword="XmlReader" /> specified in the constructor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-636"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-636">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-637">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-637">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-638">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-638">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-639">此属性允许用户访问特定于提供的读取器的属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-639">This property allows the user to access properties specific to the supplied reader.</span></span> <span data-ttu-id="c9b4e-640">返回类型化`XmlReader`。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-640">It returns a typed `XmlReader`.</span></span> <span data-ttu-id="c9b4e-641">用户应该查询之前强制转换的类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-641">The user should query for the type before casting.</span></span>  
  
 <span data-ttu-id="c9b4e-642">更改返回的读取器 （例如，调用之一读取方法） 的状态可能会导致不可预知的结果。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-642">Changing the state of the returned reader (for example, calling one of the read methods) can lead to unpredictable results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public override System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlValidatingReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-643">获取读取器的状态。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-643">Gets the state of the reader.</span></span></summary>
        <value><span data-ttu-id="c9b4e-644"><see cref="T:System.Xml.ReadState" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-644">One of the <see cref="T:System.Xml.ReadState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-645"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-645">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-646">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-646">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-647">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-647">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="override this.ReadString : unit -&gt; string" Usage="xmlValidatingReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9b4e-648">将元素或文本节点的内容读取为一个字符串。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-648">Reads the contents of an element or text node as a string.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-649">该元素或文本节点的内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-649">The contents of the element or text node.</span></span> <span data-ttu-id="c9b4e-650">如果读取器定位在元素或文本节点以外的位置，或者当前上下文中没有其他文本内容可返回，则这可以是空字符串。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-650">This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="c9b4e-651">文本节点可以是元素或属性文本节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-651">The text node can be either an element or an attribute text node.</span></span>  
  
</para></block></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-652"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-652">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-653">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-653">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-654">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-654">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-655">如果定位在元素上，`ReadString`一起连接所有文本、 有效空白、 空白和 CDATA 部分节点类型，并返回串联的数据作为元素内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-655">If positioned on an element, `ReadString` concatenates all text, significant white space, white space, and CDATA section node types together and returns the concatenated data as the element content.</span></span> <span data-ttu-id="c9b4e-656">读取器停止时遇到任何标记，包括注释和处理指令。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-656">The reader stops when any markup is encountered, including comments and processing instructions.</span></span> <span data-ttu-id="c9b4e-657">这可以在混合内容模型中发生，也可以在读取元素结束标记时发生。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-657">This could occur in a mixed content model, or when an element end tag is read.</span></span>  
  
 <span data-ttu-id="c9b4e-658">如果定位在文本节点上`ReadString`执行相同的串联文本节点从到元素结束标记。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-658">If positioned on a text node, `ReadString` performs the same concatenation from the text node to the element end tag.</span></span> <span data-ttu-id="c9b4e-659">如果读取器定位在属性文本节点上，则 `ReadString` 与读取器定位在元素开始标记上时的功能相同。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-659">If the reader is positioned on an attribute text node, `ReadString` has the same functionality as if the reader were position on the element start tag.</span></span> <span data-ttu-id="c9b4e-660">它返回所有串联在一起的元素文本节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-660">It returns all the concatenated element text nodes.</span></span>  
  
 <span data-ttu-id="c9b4e-661"><xref:System.Xml.XmlValidatingReader.EntityHandling%2A>属性确定如何`ReadString`的工作方式如下：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-661">The <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> property determines how `ReadString` works as follows:</span></span>  
  
|<span data-ttu-id="c9b4e-662">值</span><span class="sxs-lookup"><span data-stu-id="c9b4e-662">Value</span></span>|<span data-ttu-id="c9b4e-663">描述</span><span class="sxs-lookup"><span data-stu-id="c9b4e-663">Description</span></span>|  
|-----------|-----------------|  
|<span data-ttu-id="c9b4e-664">ExpandEntities</span><span class="sxs-lookup"><span data-stu-id="c9b4e-664">ExpandEntities</span></span>|<span data-ttu-id="c9b4e-665">返回扩展的字符和常规实体。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-665">Returns expanded character and general entities.</span></span> <span data-ttu-id="c9b4e-666">这是默认设置。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-666">This is the default.</span></span>|  
|<span data-ttu-id="c9b4e-667">ExpandCharEntities</span><span class="sxs-lookup"><span data-stu-id="c9b4e-667">ExpandCharEntities</span></span>|<span data-ttu-id="c9b4e-668">返回的文本内容，但不是包括常规实体引用。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-668">Returns the text content up to but not including a general entity reference.</span></span> <span data-ttu-id="c9b4e-669">这意味着常规实体都会导致 ReadString 停止。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-669">This means a general entity causes ReadString to stop.</span></span> <span data-ttu-id="c9b4e-670">必须调用`Read`到单步跳过的实体引用。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-670">You must call `Read` to step over the entity reference.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-671">以下示例显示每个元素的文本的内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-671">The following example displays the text content of each of the elements.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c9b4e-672">该示例使用该文件，`elems.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-672">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.IsEmptyElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadTypedValue">
      <MemberSignature Language="C#" Value="public object ReadTypedValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ReadTypedValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadTypedValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTypedValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ReadTypedValue();" />
      <MemberSignature Language="F#" Value="member this.ReadTypedValue : unit -&gt; obj" Usage="xmlValidatingReader.ReadTypedValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9b4e-673">获取指定 XML 架构定义语言 (XSD) 类型的公共语言运行时类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-673">Gets the common language runtime type for the specified XML Schema definition language (XSD) type.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-674">指定 XML 架构类型的公共语言运行时类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-674">The common language runtime type for the specified XML Schema type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-675"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-675">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-676">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-676">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-677">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-677">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-678">例如，如果架构类型指`xsd:int`，运行时类型`int32`的对象返回。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-678">For example, if the schema type is defined as `xsd:int`, the runtime type `int32` is returned for the object.</span></span> <span data-ttu-id="c9b4e-679">可以使用测试这<xref:System.Object.GetType%2A>方法，并强制转换相应地。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-679">This can be tested using the <xref:System.Object.GetType%2A> method and cast accordingly.</span></span> <span data-ttu-id="c9b4e-680"><xref:System.Xml.XmlValidatingReader.ReadTypedValue%2A>方法始终返回派生自的类型<xref:System.Object>类。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-680">The <xref:System.Xml.XmlValidatingReader.ReadTypedValue%2A> method always returns a type that is derived from the <xref:System.Object> class.</span></span> <span data-ttu-id="c9b4e-681">它将永远不会返回<xref:System.Object>类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-681">It never returns the <xref:System.Object> type.</span></span>  
  
 <span data-ttu-id="c9b4e-682">如果读取器定位在属性上，此方法返回运行时类型化的对象，但不会更改读取器位置。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-682">If the reader is positioned on an attribute, this method returns the runtime typed object, but does not change the position of the reader.</span></span> <span data-ttu-id="c9b4e-683">如果读取器定位在元素上，`ReadTypedValue`读取任何 CDATA、 文本、 空白、 有效空白和注释节点返回运行时类型化的对象并将读取器定位的结束标记。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-683">If the reader is positioned on an element, `ReadTypedValue` reads any CDATA, text, white space, significant white space, and comment nodes, returns the runtime typed object and positions the reader on the end tag.</span></span> <span data-ttu-id="c9b4e-684">例如没有直接的映射，任何类型`NMTOKENS`，以字符串形式返回。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-684">Any types that do not have a direct mapping, for example `NMTOKENS`, are returned as strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-685">如果<xref:System.Xml.XmlValidatingReader.ValidationType%2A>已设置为 ValidationType.None，数据类型信息不提供从架构或文档类型定义 (Dtd)。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-685">If <xref:System.Xml.XmlValidatingReader.ValidationType%2A> has been set to ValidationType.None, data type information is not provided from either schemas or document type definitions (DTDs).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c9b4e-686">在调用<xref:System.Xml.XmlValidatingReader.Close%2A>，`ReadTypedValue`将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-686">After calling <xref:System.Xml.XmlValidatingReader.Close%2A>, `ReadTypedValue` will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-687">下面的示例显示在 XML 文档中的每个元素的类型信息。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-687">The following example displays the type information for each of the elements in the XML document.</span></span>  
  
 [!code-cpp[XmlValidatingReader.SchemaType#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CPP/schematype.cpp#1)]
 [!code-csharp[XmlValidatingReader.SchemaType#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CS/schematype.cs#1)]
 [!code-vb[XmlValidatingReader.SchemaType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.SchemaType/VB/schematype.vb#1)]  
  
 <span data-ttu-id="c9b4e-688">该示例使用以下输入的文件。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-688">The example uses the following input files.</span></span>  
  
 `booksSchema.xml`  
  
 [!code-xml[XmlValidatingReader.SchemaType#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/booksschema.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.SchemaType#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public override void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResolveEntity();" />
      <MemberSignature Language="F#" Value="override this.ResolveEntity : unit -&gt; unit" Usage="xmlValidatingReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9b4e-689">解析 <see langword="EntityReference" /> 节点的实体引用。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-689">Resolves the entity reference for <see langword="EntityReference" /> nodes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-690"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-690">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-691">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-691">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-692">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-692">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-693">如果读取器定位在`EntityReference`节点 (`XmlNodeType.EntityReference`)，如果<xref:System.Xml.XmlValidatingReader.Read%2A>之后的调用此方法中，实体替换文本进行分析。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-693">If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlValidatingReader.Read%2A> is called after calling this method, the entity replacement text is parsed.</span></span> <span data-ttu-id="c9b4e-694">完成实体替换文本后，`EndEntity`返回节点关闭实体引用作用域。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-694">After the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-695">调用此方法后，如果实体是一部分的属性值，则必须调用<xref:System.Xml.XmlValidatingReader.ReadAttributeValue%2A>来单步执行该实体。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-695">After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlValidatingReader.ReadAttributeValue%2A> to step into the entity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-696">下面的示例使用`ResolveEntity`展开常规实体。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-696">The following example uses `ResolveEntity` to expand a general entity.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c9b4e-697">该示例使用该文件，`book1.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-697">The example uses the file, `book1.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.ResolveEntity Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9b4e-698">读取器不是定位在 <see langword="EntityReference" /> 节点上。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-698">The reader is not positioned on an <see langword="EntityReference" /> node.</span></span></exception>
        <altmember cref="T:System.Xml.EntityHandling" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaCollection Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaCollection Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemaCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaCollection ^ Schemas { System::Xml::Schema::XmlSchemaCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaCollection" Usage="System.Xml.XmlValidatingReader.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-699">获取一个用于验证的 <see cref="T:System.Xml.Schema.XmlSchemaCollection" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-699">Gets a <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> to use for validation.</span></span></summary>
        <value><span data-ttu-id="c9b4e-700">用于验证的 <see langword="XmlSchemaCollection" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-700">The <see langword="XmlSchemaCollection" /> to use for validation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-701"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-701">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-702">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-702">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-703">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-703">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-704">`XmlSchemaCollection`包含预加载的 XML 数据缩减 (XDR) 和 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-704">The `XmlSchemaCollection` holds pre-loaded XML-Data Reduced (XDR) and XML Schema definition language (XSD) schemas.</span></span> <span data-ttu-id="c9b4e-705">此属性为读取者访问权限提供的架构缓存，并允许它进行验证，而无需每次都重新加载架构。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-705">This property gives the reader access to the cache of schemas and allows it to validate without having to re-load schemas every time.</span></span> <span data-ttu-id="c9b4e-706">读取器不会添加任何内容到`XmlSchemaCollection`。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-706">The reader does not add anything to the `XmlSchemaCollection`.</span></span>  
  
 <span data-ttu-id="c9b4e-707">如果`XmlSchemaCollection`包括 XML 架构 (XSD) 包含`include`或`import`仅出于验证目的加载这些其他命名空间引用其他命名空间，架构的元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-707">If the `XmlSchemaCollection` includes an XML schema (XSD) which contains `include` or `import` elements that reference other namespaces, the schemas for these other namespaces are loaded for validation purposes only.</span></span> <span data-ttu-id="c9b4e-708">除非这些架构未显式添加到架构集合，它们将无法访问使用任何集合方法或属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-708">Unless these schemas were explicitly added to the schema collection, they will not be accessible using any of the collection methods or properties.</span></span> <span data-ttu-id="c9b4e-709">例如，如果集合包含的架构文件`a.xsd`，其中包含对架构文件的引用`b.xsd`，则必须添加`b.xsd`到架构集合之前可以使用任何集合方法或属性进行访问。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-709">For example, if the collection contains the schema file `a.xsd`, which contains a reference to the schema file `b.xsd`, you must add `b.xsd` to the schema collection before you can access it using any of the collection methods or properties.</span></span>  
  
 <span data-ttu-id="c9b4e-710">当`XmlSchemaCollection`使用访问`Schemas`属性，<xref:System.Xml.Schema.XmlSchemaCollection.Add%2A?displayProperty=nameWithType>方法使用<xref:System.Xml.XmlResolver>指定的<xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-710">When the `XmlSchemaCollection` is accessed using the `Schemas` property, the <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A?displayProperty=nameWithType> method uses the <xref:System.Xml.XmlResolver> specified by the <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-711">必须将架构添加到`XmlSchemaCollection`之前第一个`Read`调用。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-711">The schemas must be added to the `XmlSchemaCollection` before the first `Read` call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-712">下面的示例验证三个使用 XmlSchemaCollection 中存储的架构的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-712">The following example validates three XML files using schemas stored in the XmlSchemaCollection.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c9b4e-713">该示例使用以下五个输入的文件：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-713">The sample uses the following five input files:</span></span>  
  
 `booksSchema.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#2)]  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#3)]  
  
 `newbooks.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#4)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#5)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#6](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="SchemaType">
      <MemberSignature Language="C#" Value="public object SchemaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SchemaType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.SchemaType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaType As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SchemaType { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaType : obj" Usage="System.Xml.XmlValidatingReader.SchemaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-714">获取架构类型对象。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-714">Gets a schema type object.</span></span></summary>
        <value><span data-ttu-id="c9b4e-715"><see cref="T:System.Xml.Schema.XmlSchemaDatatype" />、<see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> 或 <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />，这取决于节点值是内置 XML 架构定义语言 (XSD) 类型还是用户定义的 simpleType 或 complexType；如果当前节点没有架构类型，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-715"><see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, or <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> depending whether the node value is a built in XML Schema definition language (XSD) type or a user defined simpleType or complexType; <see langword="null" /> if the current node has no schema type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-716"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-716">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-717">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-717">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-718">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-718">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-719">用户需要测试返回的类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-719">The user needs to test for the returned type.</span></span> <span data-ttu-id="c9b4e-720">例如，应用于对象的</span><span class="sxs-lookup"><span data-stu-id="c9b4e-720">For example,</span></span>  
  
```csharp  
object obj = vreader.SchemaType;  
 if (obj is XmlSchemaType)  
 {  
   XmlSchemaType st = (XmlSchemaType)obj;  
   // use XmlSchemaType object  
 }  
 if (obj is XmlSchemaDatatype)  
 {  
   XmlSchemaDatatype sd = (XmlSchemaDatatype)obj;  
   Type vt = sd.ValueType;  
   // use XmlSchemaDatatype object  
       }  
```  
  
 <span data-ttu-id="c9b4e-721">如果在执行 XML 架构验证时，`XmlSchemaType`或`XmlSchemaDatatype`对应于正在读取的当前元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-721">If XML Schema validation is being performed, the `XmlSchemaType` or `XmlSchemaDatatype` corresponds to the current element being read.</span></span> <span data-ttu-id="c9b4e-722">如果正在执行文档类型定义 （DTD 验证），此属性返回`null`。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-722">If document type definition (DTD validation) is being performed, this property returns `null`.</span></span>  
  
 <span data-ttu-id="c9b4e-723">`XmlSchemaDatatype` 返回当前元素或属性，如果是简单类型，可以指定特殊的验证约束的简单类型，如 min 和 max。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-723">`XmlSchemaDatatype` is returned if the current element, or attribute, is a simple type that can specify special validation constraints on the simple types, like min and max.</span></span>  
  
 <span data-ttu-id="c9b4e-724">`XmlSchemaSimpleType` 返回当前元素或属性，如果是用户定义简单类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-724">`XmlSchemaSimpleType` is returned if the current element, or attribute, is a user defined simpleType.</span></span>  
  
 <span data-ttu-id="c9b4e-725">`XmlSchemaComplexType` 如果当前元素是用户定义复杂类型返回。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-725">`XmlSchemaComplexType` is returned if the current element is a user defined complexType.</span></span> <span data-ttu-id="c9b4e-726">属性不能返回此类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-726">This type cannot be returned by attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-727">如果<xref:System.Xml.XmlValidatingReader.ValidationType%2A>已设置到 ValidationType.None，提供数据的类型信息从架构或 Dtd。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-727">If <xref:System.Xml.XmlValidatingReader.ValidationType%2A> has been set to ValidationType.None, no data type information is provided from either schemas or DTDs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c9b4e-728">在调用<xref:System.Xml.XmlValidatingReader.Close%2A>，SchemaType 将返回 Null。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-728">After calling <xref:System.Xml.XmlValidatingReader.Close%2A>, SchemaType will return Null.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-729">下面的示例显示在 XML 文档中的每个元素的类型信息。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-729">The following example displays the type information for each of the elements in the XML document.</span></span>  
  
 [!code-cpp[XmlValidatingReader.SchemaType#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CPP/schematype.cpp#1)]
 [!code-csharp[XmlValidatingReader.SchemaType#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CS/schematype.cs#1)]
 [!code-vb[XmlValidatingReader.SchemaType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.SchemaType/VB/schematype.vb#1)]  
  
 <span data-ttu-id="c9b4e-730">该示例使用以下输入的文件。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-730">The example uses the following input files.</span></span>  
  
 `booksSchema.xml`  
  
 [!code-xml[XmlValidatingReader.SchemaType#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/booksschema.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.SchemaType#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlReaderSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReaderSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Settings As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlReaderSettings ^ Settings { System::Xml::XmlReaderSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xml.XmlReaderSettings" Usage="System.Xml.XmlValidatingReader.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-731">获取用于创建此 <see cref="T:System.Xml.XmlValidatingReader" /> 实例的 <see cref="T:System.Xml.XmlReaderSettings" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-731">Gets the <see cref="T:System.Xml.XmlReaderSettings" /> object that was used to create this <see cref="T:System.Xml.XmlValidatingReader" /> instance.</span></span></summary>
        <value><span data-ttu-id="c9b4e-732">由于没有使用 <see cref="T:System.Xml.XmlReaderSettings" /> 类和 <see cref="Overload:System.Xml.XmlReader.Create" /> 方法对 <see cref="T:System.Xml.XmlValidatingReader" /> 对象进行实例化，因此为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-732"><see langword="null" /> because <see cref="T:System.Xml.XmlValidatingReader" /> objects are not instantiated using the <see cref="T:System.Xml.XmlReaderSettings" /> class and the <see cref="Overload:System.Xml.XmlReader.Create" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="c9b4e-733"><xref:System.Xml.XmlValidatingReader> 类在 .NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-733">The <xref:System.Xml.XmlValidatingReader> class is obsolete in .NET Framework version 2.0.</span></span> <span data-ttu-id="c9b4e-734">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-734">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-735">有关详细信息，请参阅[使用 XmlReader 验证 XML 数据](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hdf992b8(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-735">For more information, see [Validating XML Data with XmlReader](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hdf992b8(v=vs.100)).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlLineInfo.HasLineInfo">
      <MemberSignature Language="C#" Value="bool IXmlLineInfo.HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Xml.IXmlLineInfo.HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlLineInfo#HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Function HasLineInfo () As Boolean Implements IXmlLineInfo.HasLineInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Xml.IXmlLineInfo.HasLineInfo() = System::Xml::IXmlLineInfo::HasLineInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9b4e-736">获取一个值，该值指示该类是否可返回行信息。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-736">Gets a value indicating whether the class can return line information.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-737">如果可以提供 <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> 和 <see cref="P:System.Xml.IXmlLineInfo.LinePosition" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-737"><see langword="true" /> if <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition" /> can be provided; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,string&gt; IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String) Implements IXmlNamespaceResolver.GetNamespacesInScope" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) = System::Xml::IXmlNamespaceResolver::GetNamespacesInScope;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="c9b4e-738">一个标识读取器范围的 <see cref="T:System.Xml.XmlNamespaceScope" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-738">An <see cref="T:System.Xml.XmlNamespaceScope" /> object that identifies the scope of the reader.</span></span></param>
        <summary><span data-ttu-id="c9b4e-739">有关此成员的说明，请参见 <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-739">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-740">一个标识作用域汇总命名空间的 T:System.Collections.IDictionary 对象。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-740">An T:System.Collections.IDictionary object that identifies the namespaces in scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9b4e-741">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-741">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c9b4e-742">它只能在 <xref:System.Xml.XmlValidatingReader> 实例强制转换为 <xref:System.Xml.IXmlNamespaceResolver> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-742">It can be used only when the <xref:System.Xml.XmlValidatingReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupNamespace">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupNamespace (prefix As String) As String Implements IXmlNamespaceResolver.LookupNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupNamespace(System::String ^ prefix) = System::Xml::IXmlNamespaceResolver::LookupNamespace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="c9b4e-743">命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-743">The namespace prefix.</span></span></param>
        <summary><span data-ttu-id="c9b4e-744">有关此成员的说明，请参见 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-744">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-745">一个字符串值，它包含与前缀关联的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-745">A string value that contains the namespace Uri that is associated with the prefix.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9b4e-746">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-746">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c9b4e-747">它只能在 <xref:System.Xml.XmlValidatingReader> 实例强制转换为 <xref:System.Xml.IXmlNamespaceResolver> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-747">It can be used only when the <xref:System.Xml.XmlValidatingReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupPrefix">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupPrefix (namespaceName As String) As String Implements IXmlNamespaceResolver.LookupPrefix" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupPrefix(System::String ^ namespaceName) = System::Xml::IXmlNamespaceResolver::LookupPrefix;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="namespaceName"><span data-ttu-id="c9b4e-748">与前缀关联的命名空间。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-748">The namespace that is associated with the prefix.</span></span></param>
        <summary><span data-ttu-id="c9b4e-749">有关此成员的说明，请参见 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-749">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="c9b4e-750">一个字符串值，它包含与 <paramref name="namespaceName" /> 关联的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-750">A string value that contains the namespace prefix that is associated with the <paramref name="namespaceName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9b4e-751">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-751">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c9b4e-752">它只能在 <xref:System.Xml.XmlValidatingReader> 实例强制转换为 <xref:System.Xml.IXmlNamespaceResolver> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-752">It can be used only when the <xref:System.Xml.XmlValidatingReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlValidatingReader.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-753">设置事件处理程序以接收有关文档类型定义 (DTD)、XML 数据简化 (XDR) 架构和 XML 架构定义语言 (XSD) 架构验证错误的信息。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-753">Sets an event handler for receiving information about document type definition (DTD), XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) schema validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-754"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-754">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-755">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-755">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-756">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-756">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-757">这些事件发生期间<xref:System.Xml.XmlValidatingReader.Read%2A>且仅当<xref:System.Xml.XmlValidatingReader.ValidationType%2A>DTD、 XDR、 架构或自动程序指定。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-757">These events occur during <xref:System.Xml.XmlValidatingReader.Read%2A> and only if a <xref:System.Xml.XmlValidatingReader.ValidationType%2A> of DTD, XDR, Schema, or Auto is specified.</span></span>  
  
 <span data-ttu-id="c9b4e-758">如果不提供任何事件处理程序，则<xref:System.Xml.XmlException>（严重级别等于 XmlSeverityType.Error） 的第一个验证错误时引发。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-758">If no event handler is provided, an <xref:System.Xml.XmlException> is thrown on the first validation error (Severity is equal to XmlSeverityType.Error).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-759">如果某个元素报告验证错误，不验证该元素的内容模型的其余部分，但是，将验证其子级。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-759">If an element reports a validation error, the rest of the content model for that element is not validated, however, its children are validated.</span></span> <span data-ttu-id="c9b4e-760">读取器仅报告给定元素的第一个错误。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-760">The reader only reports the first error for a given element.</span></span>  
  
 <span data-ttu-id="c9b4e-761">可以使用回调处理程序<xref:System.Xml.Schema.ValidationEventArgs.Severity%2A?displayProperty=nameWithType>属性以确保根据架构进行验证 XML 实例文档。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-761">The callback handler can use the <xref:System.Xml.Schema.ValidationEventArgs.Severity%2A?displayProperty=nameWithType> property to guarantee that an XML instance document is validated against a schema.</span></span> <span data-ttu-id="c9b4e-762">`Severity`属性可用于区分验证错误 （严重级别等于 XmlSeverityType.Error） 指明出现错误，并验证警告 （严重性等于 XmlSeverityType.Warning），指出没有架构提供了信息。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-762">The `Severity` property allows you to distinguish between validation errors (Severity is equal to XmlSeverityType.Error) that indicate a fatal error, and validation warnings (Severity is equal to XmlSeverityType.Warning) that indicate that no schema information is available.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-763">下面的示例验证针对 XML 架构文件。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-763">The following example validates a file against an XML Schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c9b4e-764">该示例使用以下两个输入的文件：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-764">The sample uses the following two input files:</span></span>  
  
 <span data-ttu-id="c9b4e-765">`notValidXSD.xml` (`xsi:schemaLocation`属性读取器标识 XML 架构。)</span><span class="sxs-lookup"><span data-stu-id="c9b4e-765">`notValidXSD.xml` (The `xsi:schemaLocation` attribute identifies the XML Schema for the reader.)</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationEventHandler Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/XML/source.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationEventHandler Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationType : System.Xml.ValidationType with get, set" Usage="System.Xml.XmlValidatingReader.ValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-766">获取或设置一个值，该值指示要执行的验证的类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-766">Gets or sets a value indicating the type of validation to perform.</span></span></summary>
        <value><span data-ttu-id="c9b4e-767"><see cref="T:System.Xml.ValidationType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-767">One of the <see cref="T:System.Xml.ValidationType" /> values.</span></span> <span data-ttu-id="c9b4e-768">如果未设置此属性，则它默认为 ValidationType.Auto。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-768">If this property is not set, it defaults to ValidationType.Auto.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-769"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-769">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-770">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-770">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-771">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-771">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-772">必须设置此属性，才能在首次调用<xref:System.Xml.XmlValidatingReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-772">This property must be set before the first call to <xref:System.Xml.XmlValidatingReader.Read%2A>.</span></span> <span data-ttu-id="c9b4e-773">此属性设置为 ValidationType.None 创建非验证读取器。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-773">Setting this property to ValidationType.None creates a non-validating reader.</span></span>  
  
 <span data-ttu-id="c9b4e-774">如果进行验证，需要外部文档类型定义 (Dtd) 或架构<xref:System.Xml.XmlResolver>使用。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-774">If external document type definitions (DTDs) or schemas are needed for validation, the <xref:System.Xml.XmlResolver> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-775">下面的示例验证两个文件。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-775">The following example validates two files.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c9b4e-776">该示例使用以下四个输入的文件：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-776">The sample uses the following four input files:</span></span>  
  
 <span data-ttu-id="c9b4e-777">`notValid.xml` ("X-架构:"前缀标识读取器的 XML 数据缩减 (XDR) 架构。)</span><span class="sxs-lookup"><span data-stu-id="c9b4e-777">`notValid.xml` (The "x-schema:" prefix identifies the XML-Data Reduced (XDR) schema for the reader.)</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#2)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#3)]  
  
 `cdDTD.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#4)]  
  
 `book1.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9b4e-778">在调用了 Read 之后设置该属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-778">Setting the property after a Read has been called.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlValidatingReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-779">获取当前节点的文本值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-779">Gets the text value of the current node.</span></span></summary>
        <value><span data-ttu-id="c9b4e-780">返回的值取决于节点的 <see cref="P:System.Xml.XmlValidatingReader.NodeType" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-780">The value returned depends on the <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> of the node.</span></span> <span data-ttu-id="c9b4e-781">下表列出具有要返回的值的节点类型。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-781">The following table lists node types that have a value to return.</span></span> <span data-ttu-id="c9b4e-782">所有其他节点类型返回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-782">All other node types return String.Empty.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="c9b4e-783">节点类型</span><span class="sxs-lookup"><span data-stu-id="c9b4e-783">Node Type</span></span> 
 </term><description> <span data-ttu-id="c9b4e-784">值</span><span class="sxs-lookup"><span data-stu-id="c9b4e-784">Value</span></span> 
 </description></listheader><item><term><see langword="Attribute" /></term><description> <span data-ttu-id="c9b4e-785">属性的值。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-785">The value of the attribute.</span></span>  
  
 </description></item><item><term><see langword="CDATA" /></term><description> <span data-ttu-id="c9b4e-786">CDATA 节的内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-786">The content of the CDATA section.</span></span>  
  
 </description></item><item><term><see langword="Comment" /></term><description> <span data-ttu-id="c9b4e-787">注释的内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-787">The content of the comment.</span></span>  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> <span data-ttu-id="c9b4e-788">内部子集。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-788">The internal subset.</span></span>  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> <span data-ttu-id="c9b4e-789">全部内容（不包括指令目标）。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-789">The entire content, excluding the target.</span></span>  
  
 </description></item><item><term><see langword="SignificantWhitespace" /></term><description> <span data-ttu-id="c9b4e-790">混合内容模型中标记之间的空白。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-790">The white space between markup in a mixed content model.</span></span>  
  
 </description></item><item><term><see langword="Text" /></term><description> <span data-ttu-id="c9b4e-791">文本节点的内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-791">The content of the text node.</span></span>  
  
 </description></item><item><term><see langword="Whitespace" /></term><description> <span data-ttu-id="c9b4e-792">标记之间的空白。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-792">The white space between markup.</span></span>  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> <span data-ttu-id="c9b4e-793">声明的内容。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-793">The content of the declaration.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-794"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-794">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-795">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-795">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-796">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-796">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-797">下面的示例读取 XML 文件，并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-797">The following example reads an XML file and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c9b4e-798">该示例使用该文件，`items.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-798">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlValidatingReader.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-799">获取当前 <see langword="xml:lang" /> 范围。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-799">Gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="c9b4e-800">当前 <see langword="xml:lang" /> 范围。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-800">The current <see langword="xml:lang" /> scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-801"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-801">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-802">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-802">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-803">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-803">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-804">此属性表示当前节点驻留在其中的 xml: lang 范围。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-804">This property represents the xml:lang scope within which the current node resides.</span></span> <span data-ttu-id="c9b4e-805">例如，下面是与 XML 片段`xml:lang`设置为美国英语的根元素中：</span><span class="sxs-lookup"><span data-stu-id="c9b4e-805">For example, here is an XML fragment with `xml:lang` set to U.S. English in the root element:</span></span>  
  
```xml  
<root xml:lang="en-us">   
<name>Fred</name>   
</root>   
```  
  
 <span data-ttu-id="c9b4e-806">当读取器定位在`name`元素中，您可以使用此属性来发现它是否在美国的作用域英语`xml:lang`属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-806">When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a U.S. English `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlValidatingReader.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-807">设置用于解析外部文档类型定义 (DTD) 和架构位置引用的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-807">Sets the <see cref="T:System.Xml.XmlResolver" /> used for resolving external document type definition (DTD) and schema location references.</span></span> <span data-ttu-id="c9b4e-808"><see langword="XmlResolver" /> 用于处理 XML 架构定义语言 (XSD) 架构中找到的任何 import 或 include 元素。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-808">The <see langword="XmlResolver" /> is also used to handle any import or include elements found in XML Schema definition language (XSD) schemas.</span></span></summary>
        <value><span data-ttu-id="c9b4e-809">要使用的 <see langword="XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-809">The <see langword="XmlResolver" /> to use.</span></span> <span data-ttu-id="c9b4e-810">如果设置为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-810">If set to <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="c9b4e-811">在 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 的 1.1 版本中，调用方必须受到完全信任才能指定 <see langword="XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-811">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the caller must be fully trusted to specify an <see langword="XmlResolver" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-812"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-812">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-813">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-813">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-814">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-814">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="c9b4e-815">`XmlResolver`用于加载任何 Dtd、 实体或完成验证过程所需的架构。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-815">The `XmlResolver` is used to load any DTDs, entities, or schemas needed to complete the validation process.</span></span>  
  
 <span data-ttu-id="c9b4e-816">可以随时设置此属性并且将会影响下一步后<xref:System.Xml.XmlValidatingReader.Read%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-816">This property can be set at any time and takes affect after the next <xref:System.Xml.XmlValidatingReader.Read%2A> call.</span></span> <span data-ttu-id="c9b4e-817">如果此属性设置为`null`，读取器假设用户不想在解析外部引用。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-817">If this property is set to `null`, the reader assumes the user is not interested in resolving external references.</span></span> <span data-ttu-id="c9b4e-818">在这种情况下，读取器只验证针对内部资源，如果资源存在。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-818">In this case, the reader only validates against internal resources, if the resource is present.</span></span>  
  
 <span data-ttu-id="c9b4e-819">在 1.1 版中[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]，如果未设置此属性，该应用程序的信任级别将确定默认行为。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-819">In version 1.1 of [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] , if this property is not set, the trust level of the application determines the default behavior.</span></span>  
  
 <span data-ttu-id="c9b4e-820">`Fully trusted code:` 读取器使用默认值<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-820">`Fully trusted code:` The reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="c9b4e-821">如果访问网络资源需要身份验证，使用`XmlResolver`属性来指定`XmlResolver`与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-821">If authentication is required to access a network resource, use the `XmlResolver` property to specify an `XmlResolver` with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c9b4e-822">`Semi-trusted code:` `XmlResolver`属性设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-822">`Semi-trusted code:` The `XmlResolver` property is set to `null`.</span></span> <span data-ttu-id="c9b4e-823">不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-823">External resources are not resolved.</span></span>  
  
 <span data-ttu-id="c9b4e-824">在验证时使用的架构，可以通过提供避免昂贵的加载进程<xref:System.Xml.Schema.XmlSchemaCollection>使用<xref:System.Xml.XmlValidatingReader.Schemas%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-824">When validating using schemas, you can avoid the expensive load process by providing an <xref:System.Xml.Schema.XmlSchemaCollection> using the <xref:System.Xml.XmlValidatingReader.Schemas%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9b4e-825">下面的示例使用`XmlResolver`属性来指定访问网络的 DTD 文件所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-825">The following example uses the `XmlResolver` property to specify the credentials necessary to access the networked DTD file.</span></span>  
  
 [!code-cpp[XmlValidatingReader.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.XmlResolver/CPP/vrdr_resolver.cpp#1)]
 [!code-csharp[XmlValidatingReader.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.XmlResolver/CS/vrdr_resolver.cs#1)]
 [!code-vb[XmlValidatingReader.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.XmlResolver/VB/vrdr_resolver.vb#1)]  
  
 <span data-ttu-id="c9b4e-826">该示例使用以下文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-826">The example uses the following files as input.</span></span>  
  
 `book5.xml`  
  
 [!code-xml[XmlValidatingReader.XmlResolver#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.XmlResolver/XML/book5.xml#2)]  
  
 `books.dtd`  
  
 [!code-xml[XmlValidatingReader.XmlResolver#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.XmlResolver/XML/books.dtd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlValidatingReader.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9b4e-827">获取当前 <see langword="xml:space" /> 范围。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-827">Gets the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="c9b4e-828"><see cref="T:System.Xml.XmlSpace" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-828">One of the <see cref="T:System.Xml.XmlSpace" /> values.</span></span> <span data-ttu-id="c9b4e-829">如果不存在任何 <see langword="xml:space" /> 范围，则该属性默认值为 <see langword="XmlSpace.None" />。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-829">If no <see langword="xml:space" /> scope exists, this property defaults to <see langword="XmlSpace.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9b4e-830"><xref:System.Xml.XmlValidatingReader>类中已过时[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-830">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="c9b4e-831">您可以创建验证<xref:System.Xml.XmlReader>使用的实例<xref:System.Xml.XmlReaderSettings>类和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-831">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="c9b4e-832">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="c9b4e-832">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
  </Members>
</Type>