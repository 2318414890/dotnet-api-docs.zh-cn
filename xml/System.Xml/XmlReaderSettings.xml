<Type Name="XmlReaderSettings" FullName="System.Xml.XmlReaderSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="adf00ca7f047d43ff6881b848edebef8034fd9f7" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56402597" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlReaderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlReaderSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlReaderSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlReaderSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReaderSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlReaderSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4bf0c-101">指定在由 <see cref="T:System.Xml.XmlReader" /> 方法创建的 <see cref="Overload:System.Xml.XmlReader.Create" /> 对象上支持的一组功能。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-101">Specifies a set of features to support on the <see cref="T:System.Xml.XmlReader" /> object created by the <see cref="Overload:System.Xml.XmlReader.Create" /> method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-102">您使用<xref:System.Xml.XmlReader.Create%2A>方法来获取<xref:System.Xml.XmlReader>实例。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-102">You use the <xref:System.Xml.XmlReader.Create%2A> method to obtain <xref:System.Xml.XmlReader> instances.</span></span> <span data-ttu-id="4bf0c-103">此方法使用<xref:System.Xml.XmlReaderSettings>类，以指定要在中实现的功能<xref:System.Xml.XmlReader>对象创建。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-103">This method uses the <xref:System.Xml.XmlReaderSettings> class to specify which features to implement in the <xref:System.Xml.XmlReader> object it creates.</span></span>  
  
 <span data-ttu-id="4bf0c-104">请参阅备注部分<xref:System.Xml.XmlReader>和<xref:System.Xml.XmlReader.Create%2A>参考有关要用于符合性检查、 验证和其他常见方案的设置信息的页。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-104">See the Remarks sections of the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlReader.Create%2A> reference pages for information about which settings to use for conformance checks, validation, and other common scenarios.</span></span> <span data-ttu-id="4bf0c-105">请参阅<xref:System.Xml.XmlReaderSettings.%23ctor>构造函数的默认设置的列表。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-105">See the <xref:System.Xml.XmlReaderSettings.%23ctor> constructor for a list of default settings.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="4bf0c-106">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="4bf0c-106">Security considerations</span></span>  
 <span data-ttu-id="4bf0c-107">使用时，请考虑以下<xref:System.Xml.XmlReaderSettings>类。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-107">Consider the following when using the <xref:System.Xml.XmlReaderSettings> class.</span></span>  
  
-   <span data-ttu-id="4bf0c-108">默认情况下不设置 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 对象的 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 和 <xref:System.Xml.XmlReaderSettings> 验证标志。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-108">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.XmlReaderSettings> object are not set by default.</span></span> <span data-ttu-id="4bf0c-109">设置了这些标志后，<xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象的 <xref:System.Xml.XmlReaderSettings> 用于在 <xref:System.Xml.XmlReader> 中解析实例文档中遇到的架构位置。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-109">When these flags are set, the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> of the <xref:System.Xml.XmlReaderSettings> object is used to resolve schema locations encountered in the instance document in the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="4bf0c-110">如果<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>对象是`null`，则不解析架构位置即使<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>和<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>设置验证标志。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-110">If the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> object is `null`, schema locations are not resolved even if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags are set.</span></span>  
  
-   <span data-ttu-id="4bf0c-111">在验证过程中添加的架构会添加新类型，并且可能更改被验证的文档的验证结果。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-111">Schemas added during validation add new types and can change the validation outcome of the document being validated.</span></span> <span data-ttu-id="4bf0c-112">因此，只应从可信的源解析外部架构。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-112">As a result, external schemas should only be resolved from trusted sources.</span></span>  
  
-   <span data-ttu-id="4bf0c-113">验证错误消息可能会公开敏感内容模型的信息。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-113">Validation error messages may expose sensitive content model information.</span></span> <span data-ttu-id="4bf0c-114">使用处理验证错误和警告消息<xref:System.Xml.Schema.ValidationEventHandler>委派，或作为公开<xref:System.Xml.Schema.XmlSchemaValidationException>如果没有事件处理程序提供给<xref:System.Xml.XmlReaderSettings>对象 (验证警告不会导致<xref:System.Xml.Schema.XmlSchemaValidationException>引发)。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-114">Validation error and warning messages are handled using the <xref:System.Xml.Schema.ValidationEventHandler> delegate, or are exposed as an <xref:System.Xml.Schema.XmlSchemaValidationException> if no event handler is provided to the <xref:System.Xml.XmlReaderSettings> object (validation warnings do not cause an <xref:System.Xml.Schema.XmlSchemaValidationException> to be thrown).</span></span> <span data-ttu-id="4bf0c-115">此内容模型的信息不应在不受信任的情况下公开。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-115">This content model information should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="4bf0c-116">验证警告消息所抑制的默认值，并可以通过设置报告<xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings>标志。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-116">Validation warning messages are suppressed by default and can be reported by setting the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> flag.</span></span>  
  
-   <span data-ttu-id="4bf0c-117"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>属性的<xref:System.Xml.Schema.XmlSchemaValidationException>返回导致异常的架构文件的 URI 路径。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-117">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidationException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="4bf0c-118"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>不应在不受信任的情况下公开属性。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-118">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span>  
  
-   <span data-ttu-id="4bf0c-119">禁用<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>时验证不受信任的大型 XML 文档中实现高可用性方案中，针对具有标识约束的架构文档的很大程度上，建议使用标志 （默认情况下启用）。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-119">Disabling the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flag (enabled by default) is recommended when validating, untrusted, large XML documents in high availability scenarios against a schema with identity constraints over a large part of the document.</span></span>  
  
-   <span data-ttu-id="4bf0c-120"><xref:System.Xml.XmlReaderSettings> 对象可以包含敏感信息，例如用户凭据。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-120"><xref:System.Xml.XmlReaderSettings> objects can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="4bf0c-121">在缓存 <xref:System.Xml.XmlReaderSettings> 对象时，或在将 <xref:System.Xml.XmlReaderSettings> 对象从一个组件传递到另一个组件时，应小心。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-121">You should be careful when caching <xref:System.Xml.XmlReaderSettings> objects, or when passing the <xref:System.Xml.XmlReaderSettings> object from one component to another.</span></span>  
  
-   <span data-ttu-id="4bf0c-122">默认情况下禁用 DTD 处理。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-122">DTD processing is disabled by default.</span></span> <span data-ttu-id="4bf0c-123">如果启用 DTD 处理，需要注意的包括来自不受信任的源和可能的拒绝服务攻击的 Dtd。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-123">If you enable DTD processing, you need to be aware of including DTDs from untrusted sources and possible denial of service attacks.</span></span> <span data-ttu-id="4bf0c-124">使用<xref:System.Xml.XmlSecureResolver>来限制的资源的<xref:System.Xml.XmlReader>可以访问。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-124">Use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlReader> can access.</span></span>  
  
-   <span data-ttu-id="4bf0c-125">不接受来自不可信的源的支持组件，例如 <xref:System.Xml.NameTable>、<xref:System.Xml.XmlNamespaceManager> 和 <xref:System.Xml.XmlResolver> 对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-125">Do not accept supporting components, such as <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager>, and <xref:System.Xml.XmlResolver> objects, from an untrusted source.</span></span>  
  
-   <span data-ttu-id="4bf0c-126">使用 <xref:System.Xml.XmlReader> 的应用程序的内存使用量可能与分析的 XML 文档的大小有关。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-126">Memory usage of an application that uses <xref:System.Xml.XmlReader> may have a correlation to the size of the parsed XML document.</span></span> <span data-ttu-id="4bf0c-127">拒绝服务攻击的一种形式是提交过大的 XML 文档进行分析。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-127">One form of denial of service attack is when excessively large XML documents are submitted to be parsed.</span></span> <span data-ttu-id="4bf0c-128">您可以限制可通过设置分析文档的大小<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>属性，然后限制通过设置扩展实体产生的字符数<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-128">You can limit the size of the document that can be parsed by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> property and then limit the number of characters that result from expanding entities by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-129">下面的示例创建<xref:System.Xml.XmlReader>，它使用<xref:System.Xml.XmlUrlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-129">The following example creates an <xref:System.Xml.XmlReader> that uses an <xref:System.Xml.XmlUrlResolver> with the necessary credentials.</span></span>  
  
 [!code-csharp[XmlReader.Create#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#2)]
 [!code-vb[XmlReader.Create#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="4bf0c-130">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="4bf0c-130">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4bf0c-131">初始化 <see cref="T:System.Xml.XmlReaderSettings" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-131">Initializes a new instance of the <see cref="T:System.Xml.XmlReaderSettings" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bf0c-132">初始化 <see cref="T:System.Xml.XmlReaderSettings" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-132">Initializes a new instance of the <see cref="T:System.Xml.XmlReaderSettings" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-133">下表显示的实例的初始属性值<xref:System.Xml.XmlReaderSettings>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-133">The following table shows initial property values for an instance of <xref:System.Xml.XmlReaderSettings>.</span></span>  
  
|<span data-ttu-id="4bf0c-134">Property</span><span class="sxs-lookup"><span data-stu-id="4bf0c-134">Property</span></span>|<span data-ttu-id="4bf0c-135">初始值</span><span class="sxs-lookup"><span data-stu-id="4bf0c-135">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|<span data-ttu-id="4bf0c-136">`false`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-136">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|<span data-ttu-id="4bf0c-137">`true`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-137">`true`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<span data-ttu-id="4bf0c-138"><xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-138"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|<span data-ttu-id="4bf0c-139">`false`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-139">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|<span data-ttu-id="4bf0c-140">`false`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-140">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|<span data-ttu-id="4bf0c-141">`false`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-141">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|<span data-ttu-id="4bf0c-142">0.</span><span class="sxs-lookup"><span data-stu-id="4bf0c-142">0.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|<span data-ttu-id="4bf0c-143">0.</span><span class="sxs-lookup"><span data-stu-id="4bf0c-143">0.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|<span data-ttu-id="4bf0c-144">（没有扩展实体产生的字符数没有限制） 为 0。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-144">0 (there is no limit on the number of characters that result from expanding entities).</span></span>|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|<span data-ttu-id="4bf0c-145">（在 XML 文档的大小没有任何限制） 为 0。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-145">0 (there is no limit on the size of the XML document).</span></span>|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|<span data-ttu-id="4bf0c-146">`null`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-146">`null`.</span></span>|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|<span data-ttu-id="4bf0c-147">`true`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-147">`true`.</span></span> <span data-ttu-id="4bf0c-148">此属性已过时。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-148">This property is obsolete.</span></span> <span data-ttu-id="4bf0c-149">请改用 <xref:System.Xml.XmlTextReader.DtdProcessing%2A>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-149">Use <xref:System.Xml.XmlTextReader.DtdProcessing%2A> instead.</span></span> <span data-ttu-id="4bf0c-150">如果已设置<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>为其默认值`true`设置<xref:System.Xml.XmlTextReader.DtdProcessing%2A>到`Prohibit`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-150">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to its default value `true` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Prohibit`.</span></span> <span data-ttu-id="4bf0c-151">如果已设置<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>到`false`设置<xref:System.Xml.XmlTextReader.DtdProcessing%2A>到`Parse`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-151">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to `false` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Parse`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|<span data-ttu-id="4bf0c-152">一个空 <xref:System.Xml.Schema.XmlSchemaSet> 对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-152">An empty <xref:System.Xml.Schema.XmlSchemaSet> object.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<span data-ttu-id="4bf0c-153"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-153"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<span data-ttu-id="4bf0c-154"><xref:System.Xml.ValidationType.None>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-154"><xref:System.Xml.ValidationType.None>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|<span data-ttu-id="4bf0c-155">一个新 <xref:System.Xml.XmlUrlResolver> 对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-155">A new <xref:System.Xml.XmlUrlResolver> object.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-156">以下命令创建可用于构造去除处理指令、 注释和无关紧要的空白区域的读取器的设置对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-156">The following creates a settings object that can be used to construct a reader that strips processing instructions, comments, and insignificant white space.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings (System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor(System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings(System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlReaderSettings : System.Xml.XmlResolver -&gt; System.Xml.XmlReaderSettings" Usage="new System.Xml.XmlReaderSettings resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="resolver"><span data-ttu-id="4bf0c-157">XML 解析器。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-157">The XML resolver.</span></span></param>
        <summary><span data-ttu-id="4bf0c-158">初始化 <see cref="T:System.Xml.XmlReaderSettings" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-158">Initializes a new instance of the <see cref="T:System.Xml.XmlReaderSettings" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlReaderSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-159">获取或设置是否可对特定 <see cref="T:System.Xml.XmlReader" /> 实例使用异步 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-159">Gets or sets whether asynchronous <see cref="T:System.Xml.XmlReader" /> methods can be used on a particular <see cref="T:System.Xml.XmlReader" /> instance.</span></span></summary>
        <value><span data-ttu-id="4bf0c-160">则可以使用异步方法，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-160"><see langword="true" /> if asynchronous methods can be used; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-161">必须将此值设置为`true`创建一个新<xref:System.Xml.XmlReader>实例，如果你想要使用异步<xref:System.Xml.XmlReader>该实例上的方法。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-161">You must set this value to `true` when you create a new <xref:System.Xml.XmlReader> instance if you want to use asynchronous <xref:System.Xml.XmlReader> methods on that instance.</span></span> <span data-ttu-id="4bf0c-162">之后<xref:System.Xml.XmlReader>创建实例后，<xref:System.Xml.XmlReaderSettings.Async%2A>属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-162">After the <xref:System.Xml.XmlReader> instance is created, the <xref:System.Xml.XmlReaderSettings.Async%2A> property is read-only.</span></span> <span data-ttu-id="4bf0c-163">此属性的默认值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-163">The default value of this property is `false`.</span></span>  
  
 <span data-ttu-id="4bf0c-164">通过忽略此标志<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>重载。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-164">This flag is ignored by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="4bf0c-165">这意味着，如果您创建一个新<xref:System.Xml.XmlReader>基于现有<xref:System.Xml.XmlReader>，异步行为取决于输入<xref:System.Xml.XmlReader>，并且您无法使用<xref:System.Xml.XmlReaderSettings.Async%2A>更改异步行为的标志。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-165">This means that if you create a new <xref:System.Xml.XmlReader> based on an existing <xref:System.Xml.XmlReader>, the async behavior depends on the input <xref:System.Xml.XmlReader>, and you cannot use the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to change the async behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="4bf0c-166">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="4bf0c-166">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-167">获取或设置一个值，该值指示是否进行字符检查。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-167">Gets or sets a value indicating whether to do character checking.</span></span></summary>
        <value><span data-ttu-id="4bf0c-168">如果进行字符检查，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-168"><see langword="true" /> to do character checking; otherwise <see langword="false" />.</span></span> <span data-ttu-id="4bf0c-169">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-169">The default is <see langword="true" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="4bf0c-170">如果 <see cref="T:System.Xml.XmlReader" /> 处理文本数据，则无论属性如何设置，读取器将总是检查 XML 名称和文本内容是否有效。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-170">If the <see cref="T:System.Xml.XmlReader" /> is processing text data, it always checks that the XML names and text content are valid, regardless of the property setting.</span></span> <span data-ttu-id="4bf0c-171">将 <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> 设置为 <see langword="false" /> 会禁用对字符实体引用的字符检查。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-171">Setting <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> to <see langword="false" /> turns off character checking for character entity references.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-172">此属性指示要检查它读取和引发的 XML 数据中的字符的 XML 读取器<xref:System.Xml.XmlException>如果任何字符不在合法 XML 字符的范围。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-172">This property instructs the XML reader to check characters in the XML data it's reading and throw an <xref:System.Xml.XmlException> if any characters are outside the range of legal XML characters.</span></span> <span data-ttu-id="4bf0c-173">如果启用字符检查，必须确保符合下列条件：</span><span class="sxs-lookup"><span data-stu-id="4bf0c-173">When character checking is enabled, you are ensured the following:</span></span>  
  
-   <span data-ttu-id="4bf0c-174">定义的字符是合法的 XML 字符的范围内[2.2 字符](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets)W3C XML 1.0 建议的部分。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-174">Characters are within the range of legal XML characters, as defined by the [2.2 Characters](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets) section of the W3C XML 1.0 Recommendation.</span></span>  
  
-   <span data-ttu-id="4bf0c-175">定义的所有 XML 名称都是否有效， [2.3 常用语法构造](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name)W3C XML 1.0 建议的部分。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-175">All XML names are valid, as defined by the [2.3 Common Syntactic Constructs](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) section of the W3C XML 1.0 Recommendation.</span></span>  
  
 <span data-ttu-id="4bf0c-176">当此属性设置为`true`，这是默认设置，<xref:System.Xml.XmlException>引发异常，如果 XML 文件中包含非法字符或无效的 XML 名称 （例如，元素名称以数字开头）。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-176">When this property is set to `true`, which is the default setting, an <xref:System.Xml.XmlException> exception is thrown if the XML file contains illegal characters or invalid XML names (for example, an element name starts with a number).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReaderSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReaderSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReaderSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlReaderSettings" Usage="xmlReaderSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bf0c-177">创建 <see cref="T:System.Xml.XmlReaderSettings" /> 实例的副本。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-177">Creates a copy of the <see cref="T:System.Xml.XmlReaderSettings" /> instance.</span></span></summary>
        <returns><span data-ttu-id="4bf0c-178">克隆的 <see cref="T:System.Xml.XmlReaderSettings" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-178">The cloned <see cref="T:System.Xml.XmlReaderSettings" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-179">克隆<xref:System.Xml.XmlReaderSettings>而不会影响原始对象上的设置可以修改对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-179">The cloned <xref:System.Xml.XmlReaderSettings> object can be modified without affecting the settings on the original object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public bool CloseInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseInput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseInput : bool with get, set" Usage="System.Xml.XmlReaderSettings.CloseInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-180">获取或设置一个值，该值指示当读取器关闭时，是否应关闭基础流或 <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-180">Gets or sets a value indicating whether the underlying stream or <see cref="T:System.IO.TextReader" /> should be closed when the reader is closed.</span></span></summary>
        <value><span data-ttu-id="4bf0c-181">如果当读取器关闭时基础流或 <see cref="T:System.IO.TextReader" /> 也应关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-181"><see langword="true" /> to close the underlying stream or <see cref="T:System.IO.TextReader" /> when the reader is closed; otherwise <see langword="false" />.</span></span> <span data-ttu-id="4bf0c-182">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-182">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-183">当流时使用此设置或<xref:System.IO.TextReader>传递给<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-183">This setting is used when a stream or <xref:System.IO.TextReader> is passed to the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="4bf0c-184">如果进行自身处理读取器创建一个流，如创建读取器时使用的 URI 或打开外部文档类型定义时，它始终关闭读取器关闭时。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-184">If a stream is created by the reader for its own processing, such as when the reader is created with a URI or when it opens an external document type definition, it is always closed when the reader is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-185">获取或设置 <see cref="T:System.Xml.XmlReader" /> 将遵循的一致性级别。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-185">Gets or sets the level of conformance which the <see cref="T:System.Xml.XmlReader" /> will comply.</span></span></summary>
        <value><span data-ttu-id="4bf0c-186">指定一致性级别（XML 读取器将强制该级别）的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-186">One of the enumeration values that specifies the level of conformance that the XML reader will enforce.</span></span> <span data-ttu-id="4bf0c-187">默认值为 <see cref="F:System.Xml.ConformanceLevel.Document" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-187">The default is <see cref="F:System.Xml.ConformanceLevel.Document" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-188">通过创建的 XML 读取器<xref:System.Xml.XmlReader.Create%2A>方法默认情况下满足以下符合性要求：</span><span class="sxs-lookup"><span data-stu-id="4bf0c-188">XML readers that are created by the <xref:System.Xml.XmlReader.Create%2A> method meet the following compliance requirements by default:</span></span>  
  
-   <span data-ttu-id="4bf0c-189">新行和属性值根据 W3C 进行规范化[XML 1.0 建议](https://www.w3.org/TR/2006/REC-xml-20060816/)。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-189">New lines and attribute value are normalized according to the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span>  
  
-   <span data-ttu-id="4bf0c-190">自动展开所有实体。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-190">All entities are automatically expanded.</span></span>  
  
-   <span data-ttu-id="4bf0c-191">即使在读取器不会验证时，总是会添加文档类型定义中声明的默认属性。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-191">Default attributes declared in the document type definition are always added even when the reader does not validate.</span></span>  
  
-   <span data-ttu-id="4bf0c-192">允许的声明映射到正确的 XML 命名空间 URI 的 XML 前缀。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-192">Declaration of XML prefix mapped to the correct XML namespace URI is allowed.</span></span>  
  
-   <span data-ttu-id="4bf0c-193">在单个的表示法名称`NotationType`特性声明并`NmTokens`在单个`Enumeration`特性声明是不同的。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-193">The notation names in a single `NotationType` attribute declaration and `NmTokens` in a single `Enumeration` attribute declaration are distinct.</span></span>  
  
 <span data-ttu-id="4bf0c-194">可以使用<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>属性来检查并确保正在读取的流符合格式正确的 XML 1.0 文档或文档片段的规则。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-194">You can use the <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> property to check and guarantee that the stream being read complies with the rules for a well-formed XML 1.0 document or document fragment.</span></span> <span data-ttu-id="4bf0c-195">如果数据不相符，<xref:System.Xml.XmlException>引发异常。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-195">If the data doesn't comply, an <xref:System.Xml.XmlException> exception is thrown.</span></span> <span data-ttu-id="4bf0c-196">默认值是<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>（文档级一致性）。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-196">The default is <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level conformance).</span></span>  
  
 <span data-ttu-id="4bf0c-197">三个符合性级别为：</span><span class="sxs-lookup"><span data-stu-id="4bf0c-197">The three conformance levels are:</span></span>  
  
|<span data-ttu-id="4bf0c-198">设置</span><span class="sxs-lookup"><span data-stu-id="4bf0c-198">Setting</span></span>|<span data-ttu-id="4bf0c-199">描述</span><span class="sxs-lookup"><span data-stu-id="4bf0c-199">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|<span data-ttu-id="4bf0c-200">可确保 XML 数据符合格式正确的 XML 1.0 文档的规则。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-200">Ensures that the XML data conforms to the rules for a well-formed XML 1.0 document.</span></span> <span data-ttu-id="4bf0c-201">此检查级别确保任何处理器均可以使用作为正在读取的流[格式正确的 XML 1.0 文档](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed)。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-201">This level of checking ensures that any processor can consume the stream being read as an [well-formed XML 1.0 document](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed).</span></span><br /><br /> <span data-ttu-id="4bf0c-202">读取器检查下列事项：</span><span class="sxs-lookup"><span data-stu-id="4bf0c-202">The reader checks for the following:</span></span><br /><br /> <span data-ttu-id="4bf0c-203">-顶级项不得包含 XML 声明、 文档类型定义 (DTD)、 元素、 注释、 空格或处理指令以外的任何节点。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-203">-   The top-level item must not have any nodes other than XML Declaration, document type definition (DTD), element, comment, white space, or processing instruction.</span></span><br /><span data-ttu-id="4bf0c-204">XML 数据必须具有恰好一个顶级元素节点。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-204">-   The XML data must have exactly one top-level element node.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Fragment>|<span data-ttu-id="4bf0c-205">可确保 XML 数据符合格式正确的 XML 1.0 文档片断的规则。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-205">Ensures that the XML data conforms to the rules for a well-formed XML 1.0 document fragment.</span></span><br /><br /> <span data-ttu-id="4bf0c-206">此设置接受包含多个根元素的 XML 数据或位于顶级的文本节点。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-206">This setting accepts XML data with multiple root elements, or text nodes at the top-level.</span></span> <span data-ttu-id="4bf0c-207">此检查级别确保任何处理器均可以使用作为正在读取的流[外部已分析的实体](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities)。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-207">This level of checking ensures that any processor can consume the stream being read as an [external parsed entity](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities).</span></span>|  
|<xref:System.Xml.ConformanceLevel.Auto>|<span data-ttu-id="4bf0c-208">指定读取器应确定的基于传入数据的一致性检查级别。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-208">Specifies that the reader should determine the level of conformance checking based on the incoming data.</span></span><br /><br /> <span data-ttu-id="4bf0c-209">如果 XML 数据包含 DTD 信息，将应用文档一致性检查。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-209">Document conformance checking is applied if the XML data contains DTD information.</span></span><br /><br /> <span data-ttu-id="4bf0c-210">如果 XML 数据包含下列某一项，将应用片断一致性检查。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-210">Fragment conformance checking is applied if the XML data contains one of following:</span></span><br /><br /> <span data-ttu-id="4bf0c-211">的在根级别文本、 CDATA 或实体引用节点。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-211">-   Text, CDATA, or entity reference node at the root level.</span></span><br /><span data-ttu-id="4bf0c-212">的在根级别多个元素。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-212">-   More than one element at the root level.</span></span><br /><span data-ttu-id="4bf0c-213">的在根级别任何元素。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-213">-   No element at the root level.</span></span><br /><br /> <span data-ttu-id="4bf0c-214">如果存在冲突，例如在根级别存在文本节点和 DTD 时，将引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-214">An <xref:System.Xml.XmlException> is thrown if there is a conflict, such as when there is a text node and a DTD at the root level.</span></span><br /><br /> <span data-ttu-id="4bf0c-215">如果使用 <xref:System.Xml.XmlReader.Create%2A> 方法为现有 <xref:System.Xml.XmlReader> 添加附加功能，可以在包装方案中使用此设置。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-215">This setting can be used in wrapping scenarios when the <xref:System.Xml.XmlReader.Create%2A> method is used to add additional features to an existing <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="4bf0c-216">在这种情况下，<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>不会添加任何新的一致性检查。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-216">In this case, <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> does not add any new conformance checking.</span></span> <span data-ttu-id="4bf0c-217">一致性检查留给正在包装的 <xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-217">Conformance checking is left to the <xref:System.Xml.XmlReader> that is being wrapped.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="4bf0c-218">如果存在 DTD，XML 1.0 建议要求文档级别的一致性。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-218">The XML 1.0 recommendation requires document-level conformance when a DTD is present.</span></span> <span data-ttu-id="4bf0c-219">因此，如果读取器配置为支持<xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>，但是 XML 数据包含文档类型定义 (DTD)<xref:System.Xml.XmlException>引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-219">Therefore, if the reader is configured to support <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>, but the XML data contains a document type definition (DTD), an <xref:System.Xml.XmlException> is thrown.</span></span>  
  
 <span data-ttu-id="4bf0c-220">下面是读取器如何处理特定符合性冲突，具体取决于设置<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>属性：</span><span class="sxs-lookup"><span data-stu-id="4bf0c-220">Here's how the reader handles specific conformance violations depending on the setting of the <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> property:</span></span>  
  
|<span data-ttu-id="4bf0c-221">条件</span><span class="sxs-lookup"><span data-stu-id="4bf0c-221">Condition</span></span>|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="4bf0c-222">文本或类型化的值将显示在顶级。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-222">Text or a typed value appears at the top level.</span></span>|<span data-ttu-id="4bf0c-223"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-223"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-224">不考虑此设置的冲突。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-224">Not considered a violation for this setting.</span></span>|<span data-ttu-id="4bf0c-225">不考虑此设置的冲突。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-225">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="4bf0c-226">多个元素或没有任何元素出现在最高级别。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-226">Multiple elements or no element appear at the top level.</span></span>|<span data-ttu-id="4bf0c-227"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-227"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-228">不考虑此设置的冲突。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-228">Not considered a violation for this setting.</span></span>|<span data-ttu-id="4bf0c-229">不考虑此设置的冲突。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-229">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="4bf0c-230">顶级项是空白。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-230">Top-level item is white space.</span></span>|<span data-ttu-id="4bf0c-231">不考虑此设置的冲突。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-231">Not considered a violation for this setting.</span></span>|<span data-ttu-id="4bf0c-232">不考虑此设置的冲突。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-232">Not considered a violation for this setting.</span></span>|<span data-ttu-id="4bf0c-233">不考虑此设置的冲突。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-233">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="4bf0c-234">顶级项是 （被识别为文本节点） 的属性。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-234">Top-level item is an attribute (recognized as a text node).</span></span>|<span data-ttu-id="4bf0c-235"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-235"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-236">不考虑此设置的冲突。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-236">Not considered a violation for this setting.</span></span>|<span data-ttu-id="4bf0c-237">不考虑此设置的冲突。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-237">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="4bf0c-238">发现多个连续的文本节点。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-238">Multiple, contiguous text nodes are found.</span></span>|<span data-ttu-id="4bf0c-239">不考虑此设置的冲突。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-239">Not considered a violation for this setting.</span></span>|<span data-ttu-id="4bf0c-240">不考虑此设置的冲突。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-240">Not considered a violation for this setting.</span></span>|<span data-ttu-id="4bf0c-241">不考虑此设置的冲突。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-241">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="4bf0c-242">在相同的局部范围中两次声明相同的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-242">The same namespace prefix is declared twice in the same local scope.</span></span>|<span data-ttu-id="4bf0c-243"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-243"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-244"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-244"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-245"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-245"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="4bf0c-246">在本地作用域中不存在的元素或属性中的命名空间。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-246">The namespace in an element or attribute doesn't exist in the local scope.</span></span>|<span data-ttu-id="4bf0c-247"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-247"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-248"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-248"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-249"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-249"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="4bf0c-250">数据包含前缀和命名空间不匹配。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-250">Data contains a prefix-namespace mismatch.</span></span>|<span data-ttu-id="4bf0c-251"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-251"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-252"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-252"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-253"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-253"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="4bf0c-254">`xml:space` 属性包含无效值。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-254">`xml:space` attribute contains an invalid value.</span></span>|<span data-ttu-id="4bf0c-255"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-255"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-256"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-256"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-257"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-257"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="4bf0c-258">遇到无效的名称。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-258">An invalid name is encountered.</span></span>|<span data-ttu-id="4bf0c-259"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-259"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-260"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-260"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-261"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-261"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="4bf0c-262">`xml`前缀不与匹配http://www.w3.org/XML/1998/namespaceURI。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-262">The `xml` prefix isn't matched to the http://www.w3.org/XML/1998/namespace URI.</span></span>|<span data-ttu-id="4bf0c-263"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-263"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-264"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-264"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4bf0c-265"><xref:System.Xml.XmlException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-265"><xref:System.Xml.XmlException> is thrown.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-266">下面的示例创建<xref:System.Xml.XmlReader>对象，它读取 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-266">The following example creates an <xref:System.Xml.XmlReader> object that reads an XML fragment.</span></span>  
  
 [!code-csharp[XmlReader.Create#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#1)]
 [!code-vb[XmlReader.Create#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DtdProcessing">
      <MemberSignature Language="C#" Value="public System.Xml.DtdProcessing DtdProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.DtdProcessing DtdProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property DtdProcessing As DtdProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::DtdProcessing DtdProcessing { System::Xml::DtdProcessing get(); void set(System::Xml::DtdProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.DtdProcessing : System.Xml.DtdProcessing with get, set" Usage="System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.DtdProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-267">获取或设置确定 DTD 的处理的值。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-267">Gets or sets a value that determines the processing of DTDs.</span></span></summary>
        <value><span data-ttu-id="4bf0c-268">确定 DTD 的处理的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-268">One of the enumeration values that determines the processing of DTDs.</span></span> <span data-ttu-id="4bf0c-269">默认值为 <see cref="F:System.Xml.DtdProcessing.Prohibit" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-269">The default is <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-270">文档类型定义 (DTD) 验证通过在 W3C 中定义的有效性约束来实现[可扩展标记语言 (XML) 1.0 （第四版） 建议](https://www.w3.org/TR/2006/REC-xml-20060816/)。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-270">Document type definition (DTD) validation is implemented by using the validity constraints defined in the W3C [Extensible Markup Language (XML) 1.0 (fourth edition) recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span> <span data-ttu-id="4bf0c-271">Dtd 使用形式语法来描述的结构和语法符合 XML 文档;它们指定的内容和 XML 文档的允许值。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-271">DTDs use a formal grammar to describe the structure and syntax of compliant XML documents; they specify the content and values allowed for the XML document.</span></span>  
  
 <span data-ttu-id="4bf0c-272">此属性可以具有下列值之一：</span><span class="sxs-lookup"><span data-stu-id="4bf0c-272">This property can have one of the following values:</span></span>  
  
-   <span data-ttu-id="4bf0c-273"><xref:System.Xml.DtdProcessing.Parse?displayProperty=nameWithType> 若要启用 DTD 处理。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-273"><xref:System.Xml.DtdProcessing.Parse?displayProperty=nameWithType> to enable DTD processing.</span></span>  
  
-   <span data-ttu-id="4bf0c-274"><xref:System.Xml.DtdProcessing.Prohibit?displayProperty=nameWithType> 若要引发<xref:System.Xml.XmlException>遇到 DTD 时出现异常。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-274"><xref:System.Xml.DtdProcessing.Prohibit?displayProperty=nameWithType> to throw an <xref:System.Xml.XmlException> exception when a DTD is encountered.</span></span>  
  
-   <span data-ttu-id="4bf0c-275"><xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType> 若要禁用 DTD 处理而不是警告或异常。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-275"><xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType> to disable DTD processing without warnings or exceptions.</span></span>  
  
 <span data-ttu-id="4bf0c-276">为针对 DTD 执行验证，<xref:System.Xml.XmlReader> 使用 XML 文档的 DOCTYPE 声明中所定义的 DTD。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-276">To perform validation against a DTD, the <xref:System.Xml.XmlReader> uses the DTD defined in the DOCTYPE declaration of an XML document.</span></span> <span data-ttu-id="4bf0c-277">DOCTYPE 声明既可以指向内联 DTD，也可以是对外部 DTD 文件的引用。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-277">The DOCTYPE declaration can either point to an inline DTD or can be a reference to an external DTD file.</span></span> <span data-ttu-id="4bf0c-278">若要验证对 DTD 的 XML 文件：</span><span class="sxs-lookup"><span data-stu-id="4bf0c-278">To validate an XML file against a DTD:</span></span>  
  
-   <span data-ttu-id="4bf0c-279">将 <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A?displayProperty=nameWithType> 属性设置为 `DtdProcessing.Parse.`</span><span class="sxs-lookup"><span data-stu-id="4bf0c-279">Set the <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A?displayProperty=nameWithType> property to `DtdProcessing.Parse.`</span></span>  
  
-   <span data-ttu-id="4bf0c-280">将 <xref:System.Xml.XmlReaderSettings.ValidationType%2A?displayProperty=nameWithType> 属性设置为 `ValidationType.DTD`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-280">Set the <xref:System.Xml.XmlReaderSettings.ValidationType%2A?displayProperty=nameWithType> property to `ValidationType.DTD`.</span></span>  
  
-   <span data-ttu-id="4bf0c-281">如果 DTD 是存储在要求进行身份验证的网络资源上的外部文件，请将具有必要凭据的 <xref:System.Xml.XmlResolver> 对象传递给 <xref:System.Xml.XmlReader.Create%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-281">If the DTD is an external file stored on a network resource that requires authentication, pass an <xref:System.Xml.XmlResolver> object with the necessary credentials to the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4bf0c-282">如果<xref:System.Xml.XmlReaderSettings.DtdProcessing%2A>属性设置为<xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>，则<xref:System.Xml.XmlReader>不会报告 Dtd。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-282">If the <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> property is set to <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, the <xref:System.Xml.XmlReader> will not report the DTDs.</span></span> <span data-ttu-id="4bf0c-283">这意味着 DTD/DOCTYPE 上输出都将丢失。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-283">This means that the DTD/DOCTYPE will be lost on output.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-284">以下示例使用 DTD 文件验证 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-284">The following example validates an XML file using a DTD file.</span></span>  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
## <a name="input"></a><span data-ttu-id="4bf0c-285">输入</span><span class="sxs-lookup"><span data-stu-id="4bf0c-285">Input</span></span>  
 <span data-ttu-id="4bf0c-286">示例使用 `itemDTD.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-286">The example uses the `itemDTD.xml` file as input.</span></span>  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreComments">
      <MemberSignature Language="C#" Value="public bool IgnoreComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreComments" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreComments { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreComments : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-287">获取或设置一个值，该值指示是否忽略注释。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-287">Gets or sets a value indicating whether to ignore comments.</span></span></summary>
        <value><span data-ttu-id="4bf0c-288">如果忽略注释，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-288"><see langword="true" /> to ignore comments; otherwise <see langword="false" />.</span></span> <span data-ttu-id="4bf0c-289">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-289">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-290">此属性设置为`true`可能会导致从读取器返回的多个连续的文本节点。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-290">Setting this property to `true` can result in multiple contiguous text nodes being returned from the reader.</span></span> <span data-ttu-id="4bf0c-291">此值不影响验证。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-291">This does not affect validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-292">以下命令创建可用于构造去除处理指令、 注释和无关紧要的空白区域的读取器的设置对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-292">The following creates a settings object that can be used to construct a reader that strips processing instructions, comments, and insignificant white space.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreProcessingInstructions">
      <MemberSignature Language="C#" Value="public bool IgnoreProcessingInstructions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreProcessingInstructions" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreProcessingInstructions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreProcessingInstructions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreProcessingInstructions : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-293">获取或设置一个值，该值指示是否忽略处理指令。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-293">Gets or sets a value indicating whether to ignore processing instructions.</span></span></summary>
        <value><span data-ttu-id="4bf0c-294">如果忽略处理指令，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-294"><see langword="true" /> to ignore processing instructions; otherwise <see langword="false" />.</span></span> <span data-ttu-id="4bf0c-295">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-295">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-296">此属性设置为`true`可能会导致从读取器返回的多个连续的文本节点。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-296">Setting this property to `true` can result in multiple contiguous text nodes being returned from the reader.</span></span> <span data-ttu-id="4bf0c-297">此值不影响验证。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-297">This does not affect validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-298">以下命令创建可用于构造去除处理指令、 注释和无关紧要的空白区域的读取器的设置对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-298">The following creates a settings object that can be used to construct a reader that strips processing instructions, comments, and insignificant white space.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWhitespace">
      <MemberSignature Language="C#" Value="public bool IgnoreWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWhitespace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWhitespace : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-299">获取或设置一个值，该值指示是否忽略无关紧要的空白区域。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-299">Gets or sets a value indicating whether to ignore insignificant white space.</span></span></summary>
        <value><span data-ttu-id="4bf0c-300">如果忽略空白，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-300"><see langword="true" /> to ignore white space; otherwise <see langword="false" />.</span></span> <span data-ttu-id="4bf0c-301">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-301">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-302">不被视为是有意义的空白包括空格、 制表符和用来分隔的标记为了提高可读性的空白行。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-302">White space that is not considered to be significant includes spaces, tabs, and blank lines used to set apart the markup for greater readability.</span></span> <span data-ttu-id="4bf0c-303">此示例是在元素内容中的空白区域。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-303">An example of this is white space in element content.</span></span>  
  
 <span data-ttu-id="4bf0c-304">此属性设置不会影响在混合内容模式或的作用域中出现的空白区域中的标记之间的空白区域`xml:space='preserve'`属性。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-304">This property setting does not affect white space between markup in a mixed content mode, or white space that occurs within the scope of an `xml:space='preserve'` attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-305">以下命令创建可用于构造去除处理指令、 注释和无关紧要的空白区域的读取器的设置对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-305">The following creates a settings object that can be used to construct a reader that strips processing instructions, comments, and insignificant white space.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LineNumberOffset">
      <MemberSignature Language="C#" Value="public int LineNumberOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumberOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LineNumberOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumberOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineNumberOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-306">获取或设置 <see cref="T:System.Xml.XmlReader" /> 对象的行号偏移量。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-306">Gets or sets line number offset of the <see cref="T:System.Xml.XmlReader" /> object.</span></span></summary>
        <value><span data-ttu-id="4bf0c-307">行号偏移量。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-307">The line number offset.</span></span> <span data-ttu-id="4bf0c-308">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-308">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-309"><xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>设置确定的点位置<xref:System.Xml.IXmlLineInfo.LineNumber%2A>属性开始计数。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-309">The <xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A> setting determines the point where the <xref:System.Xml.IXmlLineInfo.LineNumber%2A> property starts counting.</span></span> <span data-ttu-id="4bf0c-310">这是更大的文档中嵌入 XML 数据的情况下很有用。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-310">This is useful if your XML data is embedded within a larger document.</span></span> <span data-ttu-id="4bf0c-311">例如，如果您的 XML 数据嵌入在一个更大的文档，并且你的数据开始文档的第 101 行，您可能想要指定读取器开始第 100 行。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-311">For example, if your XML data were embedded in a larger document, and your data started on line 101 of the document, you may want to specify that the reader start at line 100.</span></span> <span data-ttu-id="4bf0c-312">因此，如果读取器引发了异常分析 XML 的第一行时，它将报告作为第 101 行，而不是第 1 行的行号。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-312">Therefore, if the reader threw an exception while parsing the first line of the XML, it would report the line number as line 101, rather than line 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LinePositionOffset">
      <MemberSignature Language="C#" Value="public int LinePositionOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePositionOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LinePositionOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePositionOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LinePositionOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-313">获取或设置 <see cref="T:System.Xml.XmlReader" /> 对象的行位置偏移量。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-313">Gets or sets line position offset of the <see cref="T:System.Xml.XmlReader" /> object.</span></span></summary>
        <value><span data-ttu-id="4bf0c-314">行位置偏移量。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-314">The line position offset.</span></span> <span data-ttu-id="4bf0c-315">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-315">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-316"><xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>设置确定的点位置<xref:System.Xml.IXmlLineInfo.LinePosition%2A>属性开始计数。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-316">The <xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A> setting determines the point where the <xref:System.Xml.IXmlLineInfo.LinePosition%2A> property starts counting.</span></span> <span data-ttu-id="4bf0c-317">如果您的 XML 数据嵌入在更大的文档和没有开头的 XML 的新行，这非常有用。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-317">This is useful if your XML data is embedded within a larger document and there is no new line at the beginning of the XML.</span></span> <span data-ttu-id="4bf0c-318">在这种情况下，如果读取器引发了异常分析 XML 时，您希望其返回的行位置相对于主文档，而不仅仅是相对于 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-318">In this case, if the reader throws an exception while parsing the XML, you want it to return the line position relative to the main document, not just relative to the XML fragment.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersFromEntities">
      <MemberSignature Language="C#" Value="public long MaxCharactersFromEntities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersFromEntities" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersFromEntities As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersFromEntities { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersFromEntities : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-319">获取或设置一个值，该值指示文档中允许扩展实体产生的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-319">Gets or sets a value indicating the maximum allowable number of characters in a document that result from expanding entities.</span></span></summary>
        <value><span data-ttu-id="4bf0c-320">扩展实体中允许的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-320">The maximum allowable number of characters from expanded entities.</span></span> <span data-ttu-id="4bf0c-321">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-321">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-322">零 (0) 值表示的扩展实体产生的字符数没有限制。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-322">A zero (0) value means no limits on the number of characters that result from expanding entities.</span></span> <span data-ttu-id="4bf0c-323">一个非零值指定的最大可以扩展实体产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-323">A non-zero value specifies the maximum number of characters that can result from expanding entities.</span></span>  
  
 <span data-ttu-id="4bf0c-324">如果读取器读取的文档所包含的实体扩展的大小将超出此属性，将尝试<xref:System.Xml.XmlException>将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-324">If the reader attempts to read a document that contains entities such that the expanded size will exceed this property, an <xref:System.Xml.XmlException> will be thrown.</span></span>  
  
 <span data-ttu-id="4bf0c-325">此属性允许您以缓解拒绝服务攻击，攻击者将提交尝试超过内存限制通过扩展实体的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-325">This property allows you to mitigate denial of service attacks where the attacker submits XML documents that attempt to exceed memory limits via expanding entities.</span></span> <span data-ttu-id="4bf0c-326">通过限制从扩展实体产生的字符，可以检测攻击和可靠地进行恢复。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-326">By limiting the characters that result from expanded entities, you can detect the attack and recover reliably.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-327">下面的代码设置此属性，再然后尝试包含扩展的大小大于设置限制到的实体的文档进行分析。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-327">The following code sets this property, and then attempts to parse a document that contains an entity that expands to a size greater than the set limit.</span></span> <span data-ttu-id="4bf0c-328">在实际方案中，您将此限制设置为足够大，可用于尚未处理有效文档值足够小，以限制来自恶意文档的威胁。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-328">In a real world scenario, you would set this limit to a value large enough to handle valid documents, yet small enough to limit the threat from malicious documents.</span></span>  
  
```csharp  
string markup =  
@"<!DOCTYPE Root [  
  <!ENTITY anEntity ""Expands to more than 30 characters"">  
  <!ELEMENT Root (#PCDATA)>  
]>  
<Root>Content &anEntity;</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD;  
settings.MaxCharactersFromEntities = 30;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = _  
    "<!DOCTYPE Root [" + Environment.NewLine + _  
    "  <!ENTITY anEntity ""Expands to more than 30 characters"">" + Environment.NewLine + _  
    "  <!ELEMENT Root (#PCDATA)>" + Environment.NewLine + _  
    "]>" + Environment.NewLine + _  
    "<Root>Content &anEntity;</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD  
settings.MaxCharactersFromEntities = 30  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 <span data-ttu-id="4bf0c-329">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="4bf0c-329">This example produces the following output:</span></span>  
  
```  
There is an error in XML document (MaxCharactersFromEntities, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersInDocument">
      <MemberSignature Language="C#" Value="public long MaxCharactersInDocument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersInDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersInDocument As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersInDocument { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersInDocument : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-330">获取或设置一个值，该值指明 XML 文档中所允许的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-330">Gets or sets a value indicating the maximum allowable number of characters in an XML document.</span></span> <span data-ttu-id="4bf0c-331">零 (0) 值表示对 XML 文档的大小没有限制。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-331">A zero (0) value means no limits on the size of the XML document.</span></span> <span data-ttu-id="4bf0c-332">非零值指定最大大小（以字符数计）。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-332">A non-zero value specifies the maximum size, in characters.</span></span></summary>
        <value><span data-ttu-id="4bf0c-333">XML 文档中所允许的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-333">The maximum allowable number of characters in an XML document.</span></span> <span data-ttu-id="4bf0c-334">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-334">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-335">零 (0) 值表示已分析文档中的字符数没有限制。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-335">A zero (0) value means no limits on the number of characters in the parsed document.</span></span> <span data-ttu-id="4bf0c-336">一个非零值指定的最大可分析的字符数。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-336">A non-zero value specifies the maximum number of characters that can be parsed.</span></span>  
  
 <span data-ttu-id="4bf0c-337">文档的最大字符计数包括生成扩展实体中的字符计数。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-337">The maximum character count for the document includes the count of characters that result from expanded entities.</span></span>  
  
 <span data-ttu-id="4bf0c-338">如果读取器读取的文档大小超过了此属性，将尝试<xref:System.Xml.XmlException>将引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-338">If the reader attempts to read a document with a size that exceeds this property, an <xref:System.Xml.XmlException> will be thrown.</span></span>  
  
 <span data-ttu-id="4bf0c-339">此属性允许您以缓解拒绝服务攻击，攻击者将提交极大 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-339">This property allows you to mitigate denial of service attacks where the attacker submits extremely large XML documents.</span></span> <span data-ttu-id="4bf0c-340">通过限制文档的大小，可以检测攻击和可靠地进行恢复。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-340">By limiting the size of a document, you can detect the attack and recover reliably.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-341">下面的代码设置此属性，然后尝试分析文档大小超过限制。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-341">The following code sets this property, and then attempts to parse a document larger than the limit.</span></span> <span data-ttu-id="4bf0c-342">在实际方案中，您将此限制设置为足够大，可用于尚未处理有效文档值足够小，以限制来自恶意文档的威胁。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-342">In a real world scenario, you would set this limit to a value large enough to handle valid documents, yet small enough to limit the threat from malicious documents.</span></span>  
  
```csharp  
string markup = "<Root>Content</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.MaxCharactersInDocument = 10;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = "<Root>Content</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.MaxCharactersInDocument = 10  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 <span data-ttu-id="4bf0c-343">此代码生成以下输出：</span><span class="sxs-lookup"><span data-stu-id="4bf0c-343">This code produces the following output:</span></span>  
  
```  
There is an error in XML document (MaxCharactersInDocument, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); void set(System::Xml::XmlNameTable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable with get, set" Usage="System.Xml.XmlReaderSettings.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-344">获取或设置用于原子化字符串比较的 <see cref="T:System.Xml.XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-344">Gets or sets the <see cref="T:System.Xml.XmlNameTable" /> used for atomized string comparisons.</span></span></summary>
        <value><span data-ttu-id="4bf0c-345"><see cref="T:System.Xml.XmlNameTable" />，它存储使用此 <see cref="T:System.Xml.XmlReader" /> 对象创建的所有 <see cref="T:System.Xml.XmlReaderSettings" /> 实例使用的所有原子化字符串。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-345">The <see cref="T:System.Xml.XmlNameTable" /> that stores all the atomized strings used by all <see cref="T:System.Xml.XmlReader" /> instances created using this <see cref="T:System.Xml.XmlReaderSettings" /> object.</span></span>  
  
<span data-ttu-id="4bf0c-346">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-346">The default is <see langword="null" />.</span></span> <span data-ttu-id="4bf0c-347">如果该值为<see langword="null" />，创建的 <see cref="T:System.Xml.XmlReader" /> 实例将使用新的空 <see cref="T:System.Xml.NameTable" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-347">The created <see cref="T:System.Xml.XmlReader" /> instance will use a new empty <see cref="T:System.Xml.NameTable" /> if this value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-348">将此属性设置为<xref:System.Xml.XmlNameTable>如果你想要共享的常见名称表在所有实例创建<xref:System.Xml.XmlReader>实例。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-348">Set this property to an <xref:System.Xml.XmlNameTable> instance if you want to share a common name table among all the created <xref:System.Xml.XmlReader> instances.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4bf0c-349">
  <xref:System.Xml.NameTable> 类不是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-349">The <xref:System.Xml.NameTable> class is not thread-safe.</span></span> <span data-ttu-id="4bf0c-350">因此它不能共享之间<xref:System.Xml.XmlReader>同时运行在不同的线程中的对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-350">Therefore it cannot be shared between <xref:System.Xml.XmlReader> objects that run simultaneously in different threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProhibitDtd">
      <MemberSignature Language="C#" Value="public bool ProhibitDtd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProhibitDtd" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberSignature Language="VB.NET" Value="Public Property ProhibitDtd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProhibitDtd { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProhibitDtd : bool with get, set" Usage="System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("Use XmlReaderSettings.DtdProcessing property instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-351">获取或设置一个值，该值指示是否禁用文档类型定义 (DTD) 处理。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-351">Gets or sets a value indicating whether to prohibit document type definition (DTD) processing.</span></span> <span data-ttu-id="4bf0c-352">此属性已过时。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-352">This property is obsolete.</span></span> <span data-ttu-id="4bf0c-353">请改用 <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-353">Use <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> instead.</span></span></summary>
        <value><span data-ttu-id="4bf0c-354">如果禁用 DTD 处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-354"><see langword="true" /> to prohibit DTD processing; otherwise <see langword="false" />.</span></span> <span data-ttu-id="4bf0c-355">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-355">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-356">如果设置为`true`，则<xref:System.Xml.XmlReader>引发<xref:System.Xml.XmlException>时遇到任何 DTD 内容。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-356">When set to `true`, the <xref:System.Xml.XmlReader> throws an <xref:System.Xml.XmlException> when any DTD content is encountered.</span></span> <span data-ttu-id="4bf0c-357">如果您担心拒绝服务问题或您在处理不可信的源，则不要启用 DTD 处理。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-357">Do not enable DTD processing if you are concerned about Denial of Service issues or if you are dealing with untrusted sources.</span></span>  
  
 <span data-ttu-id="4bf0c-358">如果启用了 DTD 处理，可以使用 <xref:System.Xml.XmlSecureResolver> 限制 <xref:System.Xml.XmlReader> 可以访问的资源。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-358">If you have DTD processing enabled, you can use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlReader> can access.</span></span> <span data-ttu-id="4bf0c-359">还可以设计应用程序以使 XML 处理受内存和时间的约束。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-359">You can also design your application so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="4bf0c-360">例如，在 ASP.NET 应用程序中配置超时限制。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-360">For example, configure time-out limits in your ASP.NET application.</span></span>  
  
 <span data-ttu-id="4bf0c-361">此属性已过时。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-361">This property is obsolete.</span></span> <span data-ttu-id="4bf0c-362">请改用 <xref:System.Xml.XmlTextReader.DtdProcessing%2A>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-362">Use <xref:System.Xml.XmlTextReader.DtdProcessing%2A> instead.</span></span> <span data-ttu-id="4bf0c-363">如果已设置<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>为其默认值`true`设置<xref:System.Xml.XmlTextReader.DtdProcessing%2A>到`Prohibit`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-363">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to its default value `true` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Prohibit`.</span></span> <span data-ttu-id="4bf0c-364">如果已设置<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>到`false`设置<xref:System.Xml.XmlTextReader.DtdProcessing%2A>到`Parse`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-364">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to `false` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Parse`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-365">下面的示例验证使用 DTD 的数据。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-365">The following example validates data using a DTD.</span></span>  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
 <span data-ttu-id="4bf0c-366">该示例使用 itemDTD.xml 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-366">The example uses the itemDTD.xml file as input.</span></span>  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlReaderSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bf0c-367">将设置类的成员重置为各自的默认值。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-367">Resets the members of the settings class to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-368">下表显示的实例的初始属性值<xref:System.Xml.XmlReaderSettings>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-368">The following table shows initial property values for an instance of <xref:System.Xml.XmlReaderSettings>.</span></span>  
  
|<span data-ttu-id="4bf0c-369">属性</span><span class="sxs-lookup"><span data-stu-id="4bf0c-369">Property</span></span>|<span data-ttu-id="4bf0c-370">初始值</span><span class="sxs-lookup"><span data-stu-id="4bf0c-370">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|<span data-ttu-id="4bf0c-371">`false`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-371">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|<span data-ttu-id="4bf0c-372">`true`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-372">`true`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<span data-ttu-id="4bf0c-373"><xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-373"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|<span data-ttu-id="4bf0c-374">`false`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-374">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|<span data-ttu-id="4bf0c-375">`false`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-375">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|<span data-ttu-id="4bf0c-376">`false`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-376">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|<span data-ttu-id="4bf0c-377">0.</span><span class="sxs-lookup"><span data-stu-id="4bf0c-377">0.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|<span data-ttu-id="4bf0c-378">0.</span><span class="sxs-lookup"><span data-stu-id="4bf0c-378">0.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|<span data-ttu-id="4bf0c-379">（没有扩展实体产生的字符数没有限制） 为 0。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-379">0 (there is no limit on the number of characters that result from expanding entities).</span></span>|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|<span data-ttu-id="4bf0c-380">（在 XML 文档的大小没有任何限制） 为 0。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-380">0 (there is no limit on the size of the XML document).</span></span>|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|<span data-ttu-id="4bf0c-381">`null`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-381">`null`.</span></span>|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|<span data-ttu-id="4bf0c-382">`true`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-382">`true`.</span></span> <span data-ttu-id="4bf0c-383">此属性已过时。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-383">This property is obsolete.</span></span> <span data-ttu-id="4bf0c-384">请改用 <xref:System.Xml.XmlTextReader.DtdProcessing%2A>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-384">Use <xref:System.Xml.XmlTextReader.DtdProcessing%2A> instead.</span></span> <span data-ttu-id="4bf0c-385">如果已设置<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>为其默认值`true`设置<xref:System.Xml.XmlTextReader.DtdProcessing%2A>到`Prohibit`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-385">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to its default value `true` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Prohibit`.</span></span> <span data-ttu-id="4bf0c-386">如果已设置<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>到`false`设置<xref:System.Xml.XmlTextReader.DtdProcessing%2A>到`Parse`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-386">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to `false` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Parse`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|<span data-ttu-id="4bf0c-387">一个空 <xref:System.Xml.Schema.XmlSchemaSet> 对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-387">An empty <xref:System.Xml.Schema.XmlSchemaSet> object.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<span data-ttu-id="4bf0c-388"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-388"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<span data-ttu-id="4bf0c-389"><xref:System.Xml.ValidationType.None>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-389"><xref:System.Xml.ValidationType.None>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|<span data-ttu-id="4bf0c-390">一个新 <xref:System.Xml.XmlUrlResolver> 对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-390">A new <xref:System.Xml.XmlUrlResolver> object.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); void set(System::Xml::Schema::XmlSchemaSet ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet with get, set" Usage="System.Xml.XmlReaderSettings.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-391">获取或设置在执行架构验证时使用的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-391">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to use when performing schema validation.</span></span></summary>
        <value><span data-ttu-id="4bf0c-392">当执行架构验证时使用的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-392">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to use when performing schema validation.</span></span> <span data-ttu-id="4bf0c-393">默认为空的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-393">The default is an empty <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   <span data-ttu-id="4bf0c-394">不要使用来自未知或不受信任的源或位置的架构。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-394">Do not use schemas from unknown or untrusted sources or locations.</span></span> <span data-ttu-id="4bf0c-395">执行此操作将影响你的代码的安全性。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-395">Doing so will compromise the security of your code.</span></span>  
> -   <span data-ttu-id="4bf0c-396">XML 架构 （包括内联架构） 是本质上是容易受到拒绝服务攻击;不接受不受信任的方案中。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-396">XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</span></span>  
> -   <span data-ttu-id="4bf0c-397">架构验证错误消息和异常可能会公开的内容模型的架构文件的 URI 路径的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-397">Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</span></span> <span data-ttu-id="4bf0c-398">请注意不公开此信息向不受信任调用方。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-398">Be careful not to expose this information to untrusted callers.</span></span>  
> -   <span data-ttu-id="4bf0c-399">有关其他信息，请参阅"安全注意事项"部分。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-399">For additional information, see the "Security considerations" section.</span></span>  
  
 <span data-ttu-id="4bf0c-400"><xref:System.Xml.Schema.XmlSchemaSet>类仅支持 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-400">The <xref:System.Xml.Schema.XmlSchemaSet> class only supports XML Schema definition language (XSD) schemas.</span></span> <span data-ttu-id="4bf0c-401"><xref:System.Xml.XmlReader> 创建的实例<xref:System.Xml.XmlReader.Create%2A>方法不能配置为启用 XML 数据缩减 (XDR) 架构验证。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-401"><xref:System.Xml.XmlReader> instances created by the <xref:System.Xml.XmlReader.Create%2A> method cannot be configured to enable XML-Data Reduced (XDR) schema validation.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="4bf0c-402">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="4bf0c-402">Security considerations</span></span>  
  
-   <span data-ttu-id="4bf0c-403">不要使用来自未知或不受信任的源架构。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-403">Do not use schemas from unknown or untrusted sources.</span></span> <span data-ttu-id="4bf0c-404">执行此操作将影响你的代码的安全性。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-404">Doing so will compromise the security of your code.</span></span> <span data-ttu-id="4bf0c-405"><xref:System.Xml.XmlUrlResolver>类用于解析外部架构默认情况下。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-405">The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default.</span></span> <span data-ttu-id="4bf0c-406">若要禁用解析导入、 包括和重新定义架构的元素，设置<xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType>属性设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-406">To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> property to `null`.</span></span>  
  
-   <span data-ttu-id="4bf0c-407">由于使用而引发的异常<xref:System.Xml.Schema.XmlSchemaSet>类，如<xref:System.Xml.Schema.XmlSchemaException>类可能包含不应在不受信任的方案中公开的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-407">Exceptions raised as a result of using the <xref:System.Xml.Schema.XmlSchemaSet> class, such as the <xref:System.Xml.Schema.XmlSchemaException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="4bf0c-408">例如，<xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>属性的<xref:System.Xml.Schema.XmlSchemaException>返回导致异常的架构文件的 URI 路径。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-408">For example, the <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="4bf0c-409"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>不应在不受信任的情况下公开属性。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-409">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="4bf0c-410">应正确处理异常，以便在不受信任的情况下不公开此敏感信息。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-410">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-411">下面的示例使用<xref:System.Xml.XmlReaderSettings>对象和<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法以将架构与 XML 文档相关联。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-411">The example below uses the <xref:System.Xml.XmlReaderSettings> object and the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to associate a schema with an XML document.</span></span> <span data-ttu-id="4bf0c-412">该架构添加到<xref:System.Xml.XmlReaderSettings.Schemas%2A>属性的<xref:System.Xml.XmlReaderSettings>对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-412">The schema is added to the <xref:System.Xml.XmlReaderSettings.Schemas%2A> property of the <xref:System.Xml.XmlReaderSettings> object.</span></span> <span data-ttu-id="4bf0c-413">值<xref:System.Xml.XmlReaderSettings.Schemas%2A>属性是<xref:System.Xml.Schema.XmlSchemaSet>对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-413">The value of the <xref:System.Xml.XmlReaderSettings.Schemas%2A> property is an <xref:System.Xml.Schema.XmlSchemaSet> object.</span></span> <span data-ttu-id="4bf0c-414">架构用于验证 XML 文档符合架构内容模型。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-414">The schema is used to validate that the XML document conforms to the schema content model.</span></span> <span data-ttu-id="4bf0c-415">由处理架构验证错误和警告<xref:System.Xml.XmlReaderSettings.ValidationEventHandler>中定义<xref:System.Xml.XmlReaderSettings>对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-415">Schema validation errors and warnings are handled by the <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> defined in the <xref:System.Xml.XmlReaderSettings> object.</span></span>  
  
 [!code-cpp[XmlSchemaSetOverall Example#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaSetOverall Example/CPP/xmlschemasetexample.cpp#1)]
 [!code-csharp[XmlSchemaSetOverall Example#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaSetOverall Example/CS/xmlschemasetexample.cs#1)]
 [!code-vb[XmlSchemaSetOverall Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaSetOverall Example/VB/xmlschemasetexample.vb#1)]  
  
 <span data-ttu-id="4bf0c-416">该示例使用 books.xml 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-416">The example uses the books.xml file as input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xml#2)]  
  
 <span data-ttu-id="4bf0c-417">该示例使用 books.xsd 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-417">The example uses the books.xsd file as an input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlReaderSettings.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-418">在读取器遇到验证错误时发生。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-418">Occurs when the reader encounters validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-419">这些事件发生时读取 XML 实例文档，如果<xref:System.Xml.XmlReaderSettings.ValidationType%2A>设置为<xref:System.Xml.ValidationType.DTD>或<xref:System.Xml.ValidationType.Schema>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-419">These events occur while reading an XML instance document if the <xref:System.Xml.XmlReaderSettings.ValidationType%2A> is set to either <xref:System.Xml.ValidationType.DTD> or <xref:System.Xml.ValidationType.Schema>.</span></span> <span data-ttu-id="4bf0c-420">如果<xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings>上启用了设置<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>时遇到的所有验证警告时，也可能发生这些事件的属性。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-420">If the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> setting has been enabled on the <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property these events also occur when any validation warnings are encountered.</span></span>  
  
 <span data-ttu-id="4bf0c-421">如果读取器配置为进行验证，并且没有验证事件处理程序已设置，<xref:System.Xml.Schema.XmlSchemaValidationException>所有验证错误时都引发。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-421">If the reader is configured for validation and no validation event handler has been set, an <xref:System.Xml.Schema.XmlSchemaValidationException> is thrown for all validation errors.</span></span> <span data-ttu-id="4bf0c-422">(验证警告不会导致<xref:System.Xml.Schema.XmlSchemaValidationException>引发)。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-422">(Validation warnings do not cause an <xref:System.Xml.Schema.XmlSchemaValidationException> to be thrown).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4bf0c-423">验证错误消息可能会公开敏感内容模型的信息。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-423">Validation error messages may expose sensitive content model information.</span></span> <span data-ttu-id="4bf0c-424">使用处理验证错误和警告消息<xref:System.Xml.Schema.ValidationEventHandler>委派，或作为公开<xref:System.Xml.Schema.XmlSchemaValidationException>如果没有事件处理程序提供给<xref:System.Xml.XmlReaderSettings>对象 (验证警告不会导致<xref:System.Xml.Schema.XmlSchemaValidationException>引发)。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-424">Validation error and warning messages are handled using the <xref:System.Xml.Schema.ValidationEventHandler> delegate, or are exposed as an <xref:System.Xml.Schema.XmlSchemaValidationException> if no event handler is provided to the <xref:System.Xml.XmlReaderSettings> object (validation warnings do not cause an <xref:System.Xml.Schema.XmlSchemaValidationException> to be thrown).</span></span> <span data-ttu-id="4bf0c-425">此内容模型的信息不应在不受信任的情况下公开。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-425">This content model information should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="4bf0c-426">验证警告消息所抑制的默认值，并可以通过设置报告<xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings>标志。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-426">Validation warning messages are suppressed by default and can be reported by setting the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> flag.</span></span>  
>   
>  <span data-ttu-id="4bf0c-427"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>属性的<xref:System.Xml.Schema.XmlSchemaValidationException>返回导致异常的架构文件的 URI 路径。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-427">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidationException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="4bf0c-428"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>不应在不受信任的情况下公开属性。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-428">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-429">下面的示例显示了设置，以指定要创建一个读取器来验证使用内联架构和显示验证警告。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-429">The following example shows the settings to specify to create a reader that validates using an inline schema and that also displays validation warnings.</span></span> <span data-ttu-id="4bf0c-430">验证事件处理程序使用<xref:System.Xml.Schema.XmlSeverityType>枚举来区分警告和错误。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-430">The validation event handler uses the <xref:System.Xml.Schema.XmlSeverityType> enumeration to differentiate between warnings and errors.</span></span>  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationFlags">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationFlags As XmlSchemaValidationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaValidationFlags ValidationFlags { System::Xml::Schema::XmlSchemaValidationFlags get(); void set(System::Xml::Schema::XmlSchemaValidationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationFlags : System.Xml.Schema.XmlSchemaValidationFlags with get, set" Usage="System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-431">获取或设置一个指示架构验证设置的值。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-431">Gets or sets a value indicating the schema validation settings.</span></span> <span data-ttu-id="4bf0c-432">此设置应用于验证架构的 <see cref="T:System.Xml.XmlReader" /> 对象（<see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> 属性设置为 <see langword="ValidationType.Schema" />）。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-432">This setting applies to <see cref="T:System.Xml.XmlReader" /> objects that validate schemas (<see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> property set to <see langword="ValidationType.Schema" />).</span></span></summary>
        <value><span data-ttu-id="4bf0c-433">指定验证选项的枚举值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-433">A bitwise combination of enumeration values that specify validation options.</span></span> <span data-ttu-id="4bf0c-434"><see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> 和 <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> 默认情况下启用。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-434"><see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> and <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> are enabled by default.</span></span> <span data-ttu-id="4bf0c-435"><see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />、<see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> 和 <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> 默认情况下禁用。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-435"><see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />, and <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> are disabled by default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4bf0c-436">默认情况下不设置 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 对象的 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 和 <xref:System.Xml.XmlReaderSettings> 验证标志。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-436">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.XmlReaderSettings> object are not set by default.</span></span> <span data-ttu-id="4bf0c-437">设置了这些标志后，<xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象的 <xref:System.Xml.XmlReaderSettings> 用于在 <xref:System.Xml.XmlReader> 中解析实例文档中遇到的架构位置。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-437">When these flags are set, the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> of the <xref:System.Xml.XmlReaderSettings> object is used to resolve schema locations encountered in the instance document in the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="4bf0c-438">如果<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>对象是`null`，则不解析架构位置即使<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>和<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>设置验证标志。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-438">If the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> object is `null`, schema locations are not resolved even if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags are set.</span></span>  
>   
>  <span data-ttu-id="4bf0c-439">在验证过程中添加的架构会添加新类型，并且可能更改被验证的文档的验证结果。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-439">Schemas added during validation add new types and can change the validation outcome of the document being validated.</span></span> <span data-ttu-id="4bf0c-440">因此，只应从可信的源解析外部架构。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-440">As a result, external schemas should only be resolved from trusted sources.</span></span>  
>   
>  <span data-ttu-id="4bf0c-441">禁用<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>时验证不受信任的大型 XML 文档中实现高可用性方案中，针对具有标识约束的架构文档的很大程度上，建议使用标志 （默认情况下启用）。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-441">Disabling the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flag (enabled by default) is recommended when validating, untrusted, large XML documents in high availability scenarios against a schema with identity constraints over a large part of the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-442">下面的示例验证根据内联 XML 架构的 XML 文件，从而<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>设置。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-442">The following example validates an XML file against an inline XML Schema by enabling the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> setting.</span></span> <span data-ttu-id="4bf0c-443">XML 读取器配置为显示验证警告，sp 您还看到预期的警告上的根元素。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-443">The XML reader is configured to display validation warnings, sp you also see the expected warning on the root element.</span></span>  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
## <a name="input"></a><span data-ttu-id="4bf0c-444">输入</span><span class="sxs-lookup"><span data-stu-id="4bf0c-444">Input</span></span>  
 <span data-ttu-id="4bf0c-445">示例使用 inlineSchema.xml 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-445">The example uses the inlineSchema.xml file as input.</span></span>  
  
 [!code-xml[XmlReaderSettings.IgnoreInlineSchema#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/XML/inlineSchema.xml#3)]  
  
## <a name="output"></a><span data-ttu-id="4bf0c-446">输出</span><span class="sxs-lookup"><span data-stu-id="4bf0c-446">Output</span></span>  
 <span data-ttu-id="4bf0c-447">警告： 找不到匹配的架构。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-447">Warning:   Matching schema not found.</span></span> <span data-ttu-id="4bf0c-448">未进行任何验证。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-448">No validation occurred.</span></span> <span data-ttu-id="4bf0c-449">找不到元素“root”的架构信息。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-449">Could not find schema information for the element 'root'.</span></span>  
  
 <span data-ttu-id="4bf0c-450">验证错误： 元素 xsdheadcount: Headcount 具有无效子元素 division。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-450">Validation error:   The element 'xsdHeadCount:HeadCount' has invalid child element 'division'.</span></span> <span data-ttu-id="4bf0c-451">应包含“ID”。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-451">Expected 'ID'.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationType : System.Xml.ValidationType with get, set" Usage="System.Xml.XmlReaderSettings.ValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-452">获取或设置一个值，该值指示 <see cref="T:System.Xml.XmlReader" /> 在读取时是否执行验证或类型分配。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-452">Gets or sets a value indicating whether the <see cref="T:System.Xml.XmlReader" /> will perform validation or type assignment when reading.</span></span></summary>
        <value><span data-ttu-id="4bf0c-453"><see cref="T:System.Xml.ValidationType" /> 的一个值指示 XmlReader 是否将呈现有效或当读取的时执行验证或类型分配。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-453">One of the <see cref="T:System.Xml.ValidationType" /> values that indicates whether XmlReader will perform validation or type assignment when reading.</span></span> <span data-ttu-id="4bf0c-454">默认值为 <see langword="ValidationType.None" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-454">The default is <see langword="ValidationType.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-455">下表描述了<xref:System.Xml.ValidationType>值。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-455">The following table describes the <xref:System.Xml.ValidationType> values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4bf0c-456"><xref:System.Xml.ValidationType.Auto>和<xref:System.Xml.ValidationType.XDR>枚举的值为.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-456">The <xref:System.Xml.ValidationType.Auto> and <xref:System.Xml.ValidationType.XDR> enumeration values are obsolete in .NET Framework version 2.0.</span></span>  
  
|<span data-ttu-id="4bf0c-457">ValidationType</span><span class="sxs-lookup"><span data-stu-id="4bf0c-457">ValidationType</span></span>|<span data-ttu-id="4bf0c-458">描述</span><span class="sxs-lookup"><span data-stu-id="4bf0c-458">Description</span></span>|  
|--------------------|-----------------|  
|`DTD`|<span data-ttu-id="4bf0c-459">使用文档类型定义 (DTD) 执行验证。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-459">Validation is performed using a document type definition (DTD).</span></span> <span data-ttu-id="4bf0c-460">**注意：**<xref:System.Xml.XmlReaderSettings.DtdProcessing%2A>属性也必须设置为<xref:System.Xml.DtdProcessing.Parse>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-460">**Note:**  The <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> property must also be set to <xref:System.Xml.DtdProcessing.Parse>.</span></span>|  
|`None`|<span data-ttu-id="4bf0c-461"><xref:System.Xml.XmlReader>不会验证数据，或执行任何类型赋值。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-461">The <xref:System.Xml.XmlReader> does not validate data, or perform any type assignment.</span></span>|  
|`Schema`|<span data-ttu-id="4bf0c-462">使用 XML 架构定义语言 (XSD) 架构执行验证和类型分配。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-462">Validation and type assignment is performed using an XML Schema definition language (XSD) schema.</span></span> <span data-ttu-id="4bf0c-463">读取器访问使用以下 XML 架构：</span><span class="sxs-lookup"><span data-stu-id="4bf0c-463">The reader accesses the XML Schema using the following:</span></span><br /><br /> <span data-ttu-id="4bf0c-464">-使用<xref:System.Xml.XmlReaderSettings.Schemas%2A>属性来访问<xref:System.Xml.Schema.XmlSchemaSet>与此读取器关联的对象。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-464">-   Uses the <xref:System.Xml.XmlReaderSettings.Schemas%2A> property to access the <xref:System.Xml.Schema.XmlSchemaSet> object associated with this reader.</span></span><br /><span data-ttu-id="4bf0c-465">-使用 XML 实例文档中包含的内联架构。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-465">-   Uses the in-line schema contained in the XML instance document.</span></span> <span data-ttu-id="4bf0c-466">(<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>必须启用选项。)</span><span class="sxs-lookup"><span data-stu-id="4bf0c-466">(The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> option must be enabled.)</span></span><br /><span data-ttu-id="4bf0c-467">-使用指定的架构位置提示的 XML 架构 (`xsi:schemaLocation`或`xsi:noNamespaceSchemaLocation`属性) 在 XML 实例文档中找到。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-467">-   Uses the XML Schema specified by schema location hints (`xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` attribute) found in the XML instance document.</span></span> <span data-ttu-id="4bf0c-468">(<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>必须启用选项。)</span><span class="sxs-lookup"><span data-stu-id="4bf0c-468">(The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> option must be enabled.)</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-469">下面的示例验证使用存储在架构<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-469">The following example validates using a schema stored in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
 [!code-cpp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CPP/XmlReader_Validate_SchemaSet.cpp#1)]
 [!code-csharp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CS/validschemaset.cs#1)]
 [!code-vb[XmlReader_Validate_SchemaSet#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_SchemaSet/VB/validschemaset.vb#1)]  
  
 <span data-ttu-id="4bf0c-470">该示例使用以下输入的文件：</span><span class="sxs-lookup"><span data-stu-id="4bf0c-470">The sample uses the following input files:</span></span>  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/booksschemafail.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bf0c-471">设置用来访问外部文档的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-471">Sets the <see cref="T:System.Xml.XmlResolver" /> used to access external documents.</span></span></summary>
        <value><span data-ttu-id="4bf0c-472">用来访问外部文档的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-472">An <see cref="T:System.Xml.XmlResolver" /> used to access external documents.</span></span> <span data-ttu-id="4bf0c-473">如果设置为 <see langword="null" />，当 <see cref="T:System.Xml.XmlException" /> 试图访问外部资源时，将引发 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-473">If set to <see langword="null" />, an <see cref="T:System.Xml.XmlException" /> is thrown when the <see cref="T:System.Xml.XmlReader" /> tries to access an external resource.</span></span> <span data-ttu-id="4bf0c-474">默认值为没有凭据的新 <see cref="T:System.Xml.XmlUrlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-474">The default is a new <see cref="T:System.Xml.XmlUrlResolver" /> with no credentials.</span></span>  <span data-ttu-id="4bf0c-475">从.NET Framework 4.5.2 开始，此设置的默认值为<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-475">Starting with the .NET Framework 4.5.2, this setting has a default value of <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf0c-476"><xref:System.Xml.XmlResolver>用于查找和打开 XML 实例文档，或找到并打开 XML 实例文档引用的任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-476">The <xref:System.Xml.XmlResolver> is used to locate and open an XML instance document, or to locate and open any external resources referenced by the XML instance document.</span></span> <span data-ttu-id="4bf0c-477">这可能包括实体、 DTD 或架构。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-477">This can include entities, DTD, or schemas.</span></span> <span data-ttu-id="4bf0c-478"><xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType>属性可用于指定所需的网络身份验证的任何凭据。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-478">The <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> property can be used to specify any credentials required for network authentication.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4bf0c-479">因为<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>可以包含敏感信息，如用户凭据，应当小心缓存时<xref:System.Xml.XmlReaderSettings>对象，或传递时<xref:System.Xml.XmlReaderSettings>到另一个对象从一个组件。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-479">Because the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> can contain sensitive information such as user credentials, you should be careful when caching <xref:System.Xml.XmlReaderSettings> objects, or when passing the <xref:System.Xml.XmlReaderSettings> object from one component to another.</span></span>  
>   
>  <span data-ttu-id="4bf0c-480"><xref:System.Xml.XmlSecureResolver>可用于访问外部文档。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-480">An <xref:System.Xml.XmlSecureResolver> can be used to access external documents.</span></span> <span data-ttu-id="4bf0c-481"><xref:System.Xml.XmlSecureResolver>类可帮助保护的另一个实现<xref:System.Xml.XmlResolver>通过包装<xref:System.Xml.XmlResolver>对象和限制的资源的基础<xref:System.Xml.XmlResolver>有权访问。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-481">The <xref:System.Xml.XmlSecureResolver> class helps to secure another implementation of <xref:System.Xml.XmlResolver> by wrapping the <xref:System.Xml.XmlResolver> object and restricting the resources that the underlying <xref:System.Xml.XmlResolver> has access to.</span></span>  
>   
>  <span data-ttu-id="4bf0c-482">默认情况下不设置 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 对象的 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 和 <xref:System.Xml.XmlReaderSettings> 验证标志。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-482">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.XmlReaderSettings> object are not set by default.</span></span> <span data-ttu-id="4bf0c-483">设置了这些标志后，<xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象的 <xref:System.Xml.XmlReaderSettings> 用于在 <xref:System.Xml.XmlReader> 中解析实例文档中遇到的架构位置。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-483">When these flags are set, the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> of the <xref:System.Xml.XmlReaderSettings> object is used to resolve schema locations encountered in the instance document in the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="4bf0c-484">如果<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>对象是`null`，则不解析架构位置即使<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>和<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>设置验证标志。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-484">If the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> object is `null`, schema locations are not resolved even if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags are set.</span></span>  
>   
>  <span data-ttu-id="4bf0c-485">在验证过程中添加的架构会添加新类型，并且可能更改被验证的文档的验证结果。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-485">Schemas added during validation add new types and can change the validation outcome of the document being validated.</span></span> <span data-ttu-id="4bf0c-486">因此，只应从可信的源解析外部架构。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-486">As a result, external schemas should only be resolved from trusted sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf0c-487">下面的示例创建<xref:System.Xml.XmlReader>，它使用<xref:System.Xml.XmlSecureResolver>具有默认凭据。</span><span class="sxs-lookup"><span data-stu-id="4bf0c-487">The following example creates an <xref:System.Xml.XmlReader> that uses an <xref:System.Xml.XmlSecureResolver> with default credentials.</span></span>  
  
 [!code-csharp[XmlReader.Create#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#10)]
 [!code-vb[XmlReader.Create#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>