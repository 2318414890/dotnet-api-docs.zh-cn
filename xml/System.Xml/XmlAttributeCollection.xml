<Type Name="XmlAttributeCollection" FullName="System.Xml.XmlAttributeCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7bfa2badf121014f21a4f11682da6f73ebbbdf20" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720811" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlAttributeCollection : System.Xml.XmlNamedNodeMap, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlAttributeCollection extends System.Xml.XmlNamedNodeMap implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlAttributeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlAttributeCollection&#xA;Inherits XmlNamedNodeMap&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributeCollection sealed : System::Xml::XmlNamedNodeMap, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNamedNodeMap</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="800cf-101">表示可以按名称或索引访问的属性的集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="800cf-101">Represents a collection of attributes that can be accessed by name or index.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-102">`XmlAttributeCollection` 扩展<xref:System.Xml.XmlNamedNodeMap>类通过添加强类型化帮助器方法。</span><span class="sxs-lookup"><span data-stu-id="800cf-102">`XmlAttributeCollection` extends the <xref:System.Xml.XmlNamedNodeMap> class by adding strongly typed helper methods.</span></span> <span data-ttu-id="800cf-103">此类可用于添加、 删除或修改集合中的特性。</span><span class="sxs-lookup"><span data-stu-id="800cf-103">You can use this class to add, remove, or modify attributes in the collection.</span></span> <span data-ttu-id="800cf-104">`XmlAttributeCollection` 返回<xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="800cf-104">`XmlAttributeCollection` is returned by the <xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlAttribute" />
    <altmember cref="T:System.Xml.XmlElement" />
  </Docs>
  <Members>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Append (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Append(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Append(System::Xml::XmlAttribute ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="800cf-105">要插入的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-105">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="800cf-106">将指定的特性插入集合，并将其作为集合中的最后一个节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-106">Inserts the specified attribute as the last node in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="800cf-107">追加到集合末尾的 <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-107">The <see langword="XmlAttribute" /> to append to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-108">如果已在集合中存在具有相同名称的属性，则将从集合中移除原始特性和`node`添加到集合的末尾。</span><span class="sxs-lookup"><span data-stu-id="800cf-108">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `node` is added to the end of the collection.</span></span>  
  
 <span data-ttu-id="800cf-109">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="800cf-109">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="800cf-110">下面的示例将新属性添加到文档。</span><span class="sxs-lookup"><span data-stu-id="800cf-110">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="800cf-111">
            <paramref name="node" /> 是从创建此集合的文档之外的另一个文档创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-111">
              <paramref name="node" /> was created from a document different from the one that created this collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Xml.XmlAttribute[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Xml.XmlAttribute[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As XmlAttribute(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Xml::XmlAttribute ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Xml.XmlAttribute[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="800cf-112">从该集合向其中复制对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-112">The array that is the destination of the objects copied from this collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="800cf-113">array 中复制开始处的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-113">The index in the array where copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="800cf-114">从该集合中将所有 <see cref="T:System.Xml.XmlAttribute" /> 对象复制到给定数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-114">Copies all the <see cref="T:System.Xml.XmlAttribute" /> objects from this collection into the given array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-115">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="800cf-115">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="800cf-116">下面的示例使用`CopyTo`将所有属性复制到一个数组集合中。</span><span class="sxs-lookup"><span data-stu-id="800cf-116">The following example uses `CopyTo` to copy all the attributes in the collection into an array.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute InsertAfter (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute InsertAfter(class System.Xml.XmlAttribute newNode, class System.Xml.XmlAttribute refNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAfter (newNode As XmlAttribute, refNode As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ InsertAfter(System::Xml::XmlAttribute ^ newNode, System::Xml::XmlAttribute ^ refNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XmlAttribute" />
        <Parameter Name="refNode" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newNode">
          <span data-ttu-id="800cf-117">要插入的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-117">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span>
          </span>
        </param>
        <param name="refNode">
          <span data-ttu-id="800cf-118">
            <see cref="T:System.Xml.XmlAttribute" />，它是引用特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-118">The <see cref="T:System.Xml.XmlAttribute" /> that is the reference attribute.</span>
          </span>
          <span data-ttu-id="800cf-119">
            <c>newNode</c> 放置在 <c>refNode</c> 之后。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-119">
              <c>newNode</c> is placed after the <c>refNode</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="800cf-120">将指定特性直接插入到指定引用特性之后。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-120">Inserts the specified attribute immediately after the specified reference attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="800cf-121">要插入到集合中的 <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-121">The <see langword="XmlAttribute" /> to insert into the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-122">如果已在集合中存在具有相同名称的属性，则将从集合中移除原始特性和`newNode`插入到集合。</span><span class="sxs-lookup"><span data-stu-id="800cf-122">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `newNode` is inserted into the collection.</span></span> <span data-ttu-id="800cf-123">如果`refNode`是`null`，`newNode`集合的开头插入。</span><span class="sxs-lookup"><span data-stu-id="800cf-123">If `refNode` is `null`, `newNode` is inserted at the beginning of the collection.</span></span>  
  
 <span data-ttu-id="800cf-124">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="800cf-124">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="800cf-125">下面的示例将新属性添加到文档。</span><span class="sxs-lookup"><span data-stu-id="800cf-125">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="800cf-126">
            <paramref name="newNode" /> 是从创建此集合的文档之外的另一个文档创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-126">The <paramref name="newNode" /> was created from a document different from the one that created this collection.</span>
          </span>
          <span data-ttu-id="800cf-127">或者，<paramref name="refNode" /> 不是此集合的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-127">Or the <paramref name="refNode" /> is not a member of this collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute InsertBefore (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute InsertBefore(class System.Xml.XmlAttribute newNode, class System.Xml.XmlAttribute refNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertBefore (newNode As XmlAttribute, refNode As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ InsertBefore(System::Xml::XmlAttribute ^ newNode, System::Xml::XmlAttribute ^ refNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XmlAttribute" />
        <Parameter Name="refNode" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newNode">
          <span data-ttu-id="800cf-128">要插入的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-128">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span>
          </span>
        </param>
        <param name="refNode">
          <span data-ttu-id="800cf-129">
            <see cref="T:System.Xml.XmlAttribute" />，它是引用特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-129">The <see cref="T:System.Xml.XmlAttribute" /> that is the reference attribute.</span>
          </span>
          <span data-ttu-id="800cf-130">
            <c>newNode</c> 放置在 <c>refNode</c> 之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-130">
              <c>newNode</c> is placed before the <c>refNode</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="800cf-131">将指定特性直接插入到指定引用特性之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-131">Inserts the specified attribute immediately before the specified reference attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="800cf-132">要插入到集合中的 <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-132">The <see langword="XmlAttribute" /> to insert into the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-133">如果已在集合中存在具有相同名称的属性，则将从集合中移除原始特性和`newNode`插入到集合。</span><span class="sxs-lookup"><span data-stu-id="800cf-133">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `newNode` is inserted into the collection.</span></span> <span data-ttu-id="800cf-134">如果`refNode`是`null`，`newNode`插入到集合的末尾。</span><span class="sxs-lookup"><span data-stu-id="800cf-134">If `refNode` is `null`, `newNode` is inserted at the end of the collection.</span></span>  
  
 <span data-ttu-id="800cf-135">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="800cf-135">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="800cf-136">下面的示例将新属性添加到文档。</span><span class="sxs-lookup"><span data-stu-id="800cf-136">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="800cf-137">
            <paramref name="newNode" /> 是从创建此集合的文档之外的另一个文档创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-137">The <paramref name="newNode" /> was created from a document different from the one that created this collection.</span>
          </span>
          <span data-ttu-id="800cf-138">或者，<paramref name="refNode" /> 不是此集合的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-138">Or the <paramref name="refNode" /> is not a member of this collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ItemOf">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="800cf-139">获取具有指定名称或索引的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-139">Gets the attribute with the specified name or index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(i As Integer) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[int] { System::Xml::XmlAttribute ^ get(int i); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="800cf-140">属性的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-140">The index of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="800cf-141">获取具有指定索引的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-141">Gets the attribute with the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="800cf-142">位于指定索引处的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-142">The <see cref="T:System.Xml.XmlAttribute" /> at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-143">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="800cf-143">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="800cf-144">它等效于调用<xref:System.Xml.XmlNamedNodeMap.Item%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="800cf-144">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.Item%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="800cf-145">下面的示例显示集合中的所有属性。</span><span class="sxs-lookup"><span data-stu-id="800cf-145">The following example displays all the attributes in the collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="800cf-146">正在传递的索引超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-146">The index being passed in is out of range.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[System::String ^] { System::Xml::XmlAttribute ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="800cf-147">属性的限定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-147">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="800cf-148">获取具有指定名称的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-148">Gets the attribute with the specified name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="800cf-149">具有指定名称的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-149">The <see cref="T:System.Xml.XmlAttribute" /> with the specified name.</span>
          </span>
          <span data-ttu-id="800cf-150">如果此特性不存在，则此属性返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-150">If the attribute does not exist, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-151">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="800cf-151">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="800cf-152">它等效于调用<xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>。</span><span class="sxs-lookup"><span data-stu-id="800cf-152">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="800cf-153">下面的示例从文档中删除属性。</span><span class="sxs-lookup"><span data-stu-id="800cf-153">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[string localName, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[System::String ^, System::String ^] { System::Xml::XmlAttribute ^ get(System::String ^ localName, System::String ^ namespaceURI); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="800cf-154">属性的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-154">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="800cf-155">属性的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-155">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="800cf-156">获取具有指定的本地名称和命名空间唯一资源标识符 (URI) 的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-156">Gets the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="800cf-157">具有指定的本地名称和命名空间 URI 的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-157">The <see cref="T:System.Xml.XmlAttribute" /> with the specified local name and namespace URI.</span>
          </span>
          <span data-ttu-id="800cf-158">如果此特性不存在，则此属性返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-158">If the attribute does not exist, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-159">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="800cf-159">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="800cf-160">它等效于调用<xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>。</span><span class="sxs-lookup"><span data-stu-id="800cf-160">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepend">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Prepend (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Prepend(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Prepend (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Prepend(System::Xml::XmlAttribute ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="800cf-161">要插入的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-161">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="800cf-162">将指定特性插入集合中，并将其作为集合的第一个节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-162">Inserts the specified attribute as the first node in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="800cf-163">添加到集合中的 <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-163">The <see langword="XmlAttribute" /> added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-164">如果已在集合中存在具有相同名称的属性，则将从集合中移除原始特性和`node`添加到集合的开头。</span><span class="sxs-lookup"><span data-stu-id="800cf-164">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `node` is added to the beginning of the collection.</span></span>  
  
 <span data-ttu-id="800cf-165">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="800cf-165">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="800cf-166">下面的示例将新属性添加到文档。</span><span class="sxs-lookup"><span data-stu-id="800cf-166">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Remove (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Remove(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Remove(System::Xml::XmlAttribute ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="800cf-167">要移除的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-167">The <see cref="T:System.Xml.XmlAttribute" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="800cf-168">从集合中移除指定的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-168">Removes the specified attribute from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="800cf-169">移除的节点，或者，如果在集合中找不到此节点，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-169">The node removed or <see langword="null" /> if it is not found in the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-170">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="800cf-170">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="800cf-171">下面的示例从文档中删除属性。</span><span class="sxs-lookup"><span data-stu-id="800cf-171">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="800cf-172">从集合中移除所有特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-172">Removes all attributes from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-173">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="800cf-173">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="800cf-174">下面的示例从文档中删除所有属性。</span><span class="sxs-lookup"><span data-stu-id="800cf-174">The following example removes all attributes from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute RemoveAt (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute RemoveAt(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (i As Integer) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ RemoveAt(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="800cf-175">要删除的节点的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-175">The index of the node to remove.</span>
          </span>
          <span data-ttu-id="800cf-176">第一个节点的索引为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-176">The first node has index 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="800cf-177">从集合中移除与指定的索引对应的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-177">Removes the attribute corresponding to the specified index from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="800cf-178">如果在指定索引处没有特性，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-178">Returns <see langword="null" /> if there is no attribute at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-179">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="800cf-179">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="800cf-180">下面的示例从文档中删除属性。</span><span class="sxs-lookup"><span data-stu-id="800cf-180">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNamedItem">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode SetNamedItem (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode SetNamedItem(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetNamedItem (node As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ SetNamedItem(System::Xml::XmlNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="800cf-181">要存储在此集合中的特性节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-181">An attribute node to store in this collection.</span>
          </span>
          <span data-ttu-id="800cf-182">以后可以使用节点的名称访问该节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-182">The node will later be accessible using the name of the node.</span>
          </span>
          <span data-ttu-id="800cf-183">如果集合中已存在具有该名称的节点，则用新的进行替换；否则，将把该节点追加到集合的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-183">If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="800cf-184">使用 <see cref="T:System.Xml.XmlNode" /> 属性添加 <see cref="P:System.Xml.XmlNode.Name" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-184">Adds a <see cref="T:System.Xml.XmlNode" /> using its <see cref="P:System.Xml.XmlNode.Name" /> property</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="800cf-185">如果 <paramref name="node" /> 替换具有相同名称的现有节点，则返回旧节点；否则返回新添加的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-185">If the <paramref name="node" /> replaces an existing node with the same name, the old node is returned; otherwise, the added node is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="800cf-186">下面的示例将新属性添加到文档。</span><span class="sxs-lookup"><span data-stu-id="800cf-186">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="800cf-187">
            <paramref name="node" /> 是从创建此集合的文档之外的另一个 <see cref="T:System.Xml.XmlDocument" /> 创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-187">
              <paramref name="node" /> was created from a different <see cref="T:System.Xml.XmlDocument" /> than the one that created this collection.</span>
          </span>
          <span data-ttu-id="800cf-188">此 <see langword="XmlAttributeCollection" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-188">This <see langword="XmlAttributeCollection" /> is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="800cf-189">
            <paramref name="node" /> 是 <see cref="T:System.Xml.XmlAttribute" />，后者已经是另一个 <see cref="T:System.Xml.XmlElement" /> 对象的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-189">
              <paramref name="node" /> is an <see cref="T:System.Xml.XmlAttribute" /> that is already an attribute of another <see cref="T:System.Xml.XmlElement" /> object.</span>
          </span>
          <span data-ttu-id="800cf-190">若要在其他元素中重新使用特性，必须克隆想重新使用的 <see langword="XmlAttribute" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-190">To re-use attributes in other elements, you must clone the <see langword="XmlAttribute" /> objects you want to re-use.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="800cf-191">从该集合向其中复制对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-191">The array that is the destination of the objects copied from this collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="800cf-192">array 中复制开始处的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-192">The index in the array where copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="800cf-193">有关此成员的说明，请参阅 <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-193">For a description of this member, see <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-194">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="800cf-194">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="800cf-195">它只能在 <xref:System.Xml.XmlAttributeCollection> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="800cf-195">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="800cf-196">有关此成员的说明，请参阅 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-196">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="800cf-197">返回包含特性计数的 <see langword="int" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-197">Returns an <see langword="int" /> that contains the count of the attributes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-198">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="800cf-198">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="800cf-199">它只能在 <xref:System.Xml.XmlAttributeCollection> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="800cf-199">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="800cf-200">有关此成员的说明，请参阅 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-200">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="800cf-201">如果集合已同步，则返回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-201">Returns <see langword="true" /> if the collection is synchronized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-202">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="800cf-202">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="800cf-203">它只能在 <xref:System.Xml.XmlAttributeCollection> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="800cf-203">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="800cf-204">有关此成员的说明，请参阅 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-204">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="800cf-205">返回作为集合的根的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="800cf-205">Returns the <see cref="T:System.Object" /> that is the root of the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="800cf-206">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="800cf-206">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="800cf-207">它只能在 <xref:System.Xml.XmlAttributeCollection> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="800cf-207">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>