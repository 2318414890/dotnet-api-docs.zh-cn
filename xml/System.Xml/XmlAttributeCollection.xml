<Type Name="XmlAttributeCollection" FullName="System.Xml.XmlAttributeCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="263eb5e9b734a3b232359ebc41d2719e8291ce70" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51906890" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlAttributeCollection : System.Xml.XmlNamedNodeMap, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlAttributeCollection extends System.Xml.XmlNamedNodeMap implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlAttributeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlAttributeCollection&#xA;Inherits XmlNamedNodeMap&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributeCollection sealed : System::Xml::XmlNamedNodeMap, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type XmlAttributeCollection = class&#xA;    inherit XmlNamedNodeMap&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNamedNodeMap</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="20d30-101">表示可以按名称或索引访问的属性的集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="20d30-101">Represents a collection of attributes that can be accessed by name or index.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-102">`XmlAttributeCollection` 扩展了<xref:System.Xml.XmlNamedNodeMap>类通过添加强类型化帮助器方法。</span><span class="sxs-lookup"><span data-stu-id="20d30-102">`XmlAttributeCollection` extends the <xref:System.Xml.XmlNamedNodeMap> class by adding strongly typed helper methods.</span></span> <span data-ttu-id="20d30-103">此类可用于添加、 删除或修改集合中的特性。</span><span class="sxs-lookup"><span data-stu-id="20d30-103">You can use this class to add, remove, or modify attributes in the collection.</span></span> <span data-ttu-id="20d30-104">`XmlAttributeCollection` 返回的<xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="20d30-104">`XmlAttributeCollection` is returned by the <xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlAttribute" />
    <altmember cref="T:System.Xml.XmlElement" />
    <related type="Article" href="https://msdn.microsoft.com/library/ce2df341-a1a4-4e97-8e1b-cd45b8e3e71e">
      <span data-ttu-id="20d30-105">访问 DOM 中的属性</span>
      <span class="sxs-lookup">
        <span data-stu-id="20d30-105">Accessing Attributes in the DOM</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/2038a90b-92af-4a0a-baaa-08e688d95194">
      <span data-ttu-id="20d30-106">按名称或索引检索未排序节点</span>
      <span class="sxs-lookup">
        <span data-stu-id="20d30-106">Unordered Node Retrieval by Name or Index</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/b5e52844-4820-47c0-a61d-de2da33e9f54">
      <span data-ttu-id="20d30-107">XML 文档对象模型 (DOM)</span>
      <span class="sxs-lookup">
        <span data-stu-id="20d30-107">XML Document Object Model (DOM)</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Append (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Append(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Append(System::Xml::XmlAttribute ^ node);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.Append node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="20d30-108">要插入的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-108">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d30-109">将指定的特性插入集合，并将其作为集合中的最后一个节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-109">Inserts the specified attribute as the last node in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20d30-110">追加到集合末尾的 <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-110">The <see langword="XmlAttribute" /> to append to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-111">如果已经存在于集合中具有相同名称的属性，从集合删除的原始属性和`node`添加到集合的末尾。</span><span class="sxs-lookup"><span data-stu-id="20d30-111">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `node` is added to the end of the collection.</span></span>  
  
 <span data-ttu-id="20d30-112">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="20d30-112">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20d30-113">下面的示例将新属性添加到文档。</span><span class="sxs-lookup"><span data-stu-id="20d30-113">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20d30-114">
            <paramref name="node" /> 是从创建此集合的文档之外的另一个文档创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-114">
              <paramref name="node" /> was created from a document different from the one that created this collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Xml.XmlAttribute[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Xml.XmlAttribute[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As XmlAttribute(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Xml::XmlAttribute ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Xml.XmlAttribute[] * int -&gt; unit" Usage="xmlAttributeCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Xml.XmlAttribute[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="20d30-115">从该集合向其中复制对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-115">The array that is the destination of the objects copied from this collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="20d30-116">array 中复制开始处的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-116">The index in the array where copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d30-117">从该集合中将所有 <see cref="T:System.Xml.XmlAttribute" /> 对象复制到给定数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-117">Copies all the <see cref="T:System.Xml.XmlAttribute" /> objects from this collection into the given array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-118">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="20d30-118">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20d30-119">下面的示例使用`CopyTo`若要将所有属性都复制到一个数组，集合中。</span><span class="sxs-lookup"><span data-stu-id="20d30-119">The following example uses `CopyTo` to copy all the attributes in the collection into an array.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute InsertAfter (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute InsertAfter(class System.Xml.XmlAttribute newNode, class System.Xml.XmlAttribute refNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAfter (newNode As XmlAttribute, refNode As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ InsertAfter(System::Xml::XmlAttribute ^ newNode, System::Xml::XmlAttribute ^ refNode);" />
      <MemberSignature Language="F#" Value="member this.InsertAfter : System.Xml.XmlAttribute * System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.InsertAfter (newNode, refNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XmlAttribute" />
        <Parameter Name="refNode" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newNode">
          <span data-ttu-id="20d30-120">要插入的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-120">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span>
          </span>
        </param>
        <param name="refNode">
          <span data-ttu-id="20d30-121">
            <see cref="T:System.Xml.XmlAttribute" />，它是引用特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-121">The <see cref="T:System.Xml.XmlAttribute" /> that is the reference attribute.</span>
          </span>
          <span data-ttu-id="20d30-122">
            <c>newNode</c> 放置在 <c>refNode</c> 之后。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-122">
              <c>newNode</c> is placed after the <c>refNode</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d30-123">将指定特性直接插入到指定引用特性之后。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-123">Inserts the specified attribute immediately after the specified reference attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20d30-124">要插入到集合中的 <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-124">The <see langword="XmlAttribute" /> to insert into the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-125">如果已经存在于集合中具有相同名称的属性，从集合删除的原始属性和`newNode`插入到集合。</span><span class="sxs-lookup"><span data-stu-id="20d30-125">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `newNode` is inserted into the collection.</span></span> <span data-ttu-id="20d30-126">如果`refNode`是`null`，`newNode`插入到集合的开头。</span><span class="sxs-lookup"><span data-stu-id="20d30-126">If `refNode` is `null`, `newNode` is inserted at the beginning of the collection.</span></span>  
  
 <span data-ttu-id="20d30-127">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="20d30-127">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20d30-128">下面的示例将新属性添加到文档。</span><span class="sxs-lookup"><span data-stu-id="20d30-128">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20d30-129">
            <paramref name="newNode" /> 是从创建此集合的文档之外的另一个文档创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-129">The <paramref name="newNode" /> was created from a document different from the one that created this collection.</span>
          </span>
          <span data-ttu-id="20d30-130">或者，<paramref name="refNode" /> 不是此集合的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-130">Or the <paramref name="refNode" /> is not a member of this collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute InsertBefore (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute InsertBefore(class System.Xml.XmlAttribute newNode, class System.Xml.XmlAttribute refNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertBefore (newNode As XmlAttribute, refNode As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ InsertBefore(System::Xml::XmlAttribute ^ newNode, System::Xml::XmlAttribute ^ refNode);" />
      <MemberSignature Language="F#" Value="member this.InsertBefore : System.Xml.XmlAttribute * System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.InsertBefore (newNode, refNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XmlAttribute" />
        <Parameter Name="refNode" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newNode">
          <span data-ttu-id="20d30-131">要插入的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-131">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span>
          </span>
        </param>
        <param name="refNode">
          <span data-ttu-id="20d30-132">
            <see cref="T:System.Xml.XmlAttribute" />，它是引用特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-132">The <see cref="T:System.Xml.XmlAttribute" /> that is the reference attribute.</span>
          </span>
          <span data-ttu-id="20d30-133">
            <c>newNode</c> 放置在 <c>refNode</c> 之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-133">
              <c>newNode</c> is placed before the <c>refNode</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d30-134">将指定特性直接插入到指定引用特性之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-134">Inserts the specified attribute immediately before the specified reference attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20d30-135">要插入到集合中的 <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-135">The <see langword="XmlAttribute" /> to insert into the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-136">如果已经存在于集合中具有相同名称的属性，从集合删除的原始属性和`newNode`插入到集合。</span><span class="sxs-lookup"><span data-stu-id="20d30-136">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `newNode` is inserted into the collection.</span></span> <span data-ttu-id="20d30-137">如果`refNode`是`null`，`newNode`插入到集合的末尾。</span><span class="sxs-lookup"><span data-stu-id="20d30-137">If `refNode` is `null`, `newNode` is inserted at the end of the collection.</span></span>  
  
 <span data-ttu-id="20d30-138">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="20d30-138">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20d30-139">下面的示例将新属性添加到文档。</span><span class="sxs-lookup"><span data-stu-id="20d30-139">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20d30-140">
            <paramref name="newNode" /> 是从创建此集合的文档之外的另一个文档创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-140">The <paramref name="newNode" /> was created from a document different from the one that created this collection.</span>
          </span>
          <span data-ttu-id="20d30-141">或者，<paramref name="refNode" /> 不是此集合的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-141">Or the <paramref name="refNode" /> is not a member of this collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ItemOf">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20d30-142">获取具有指定名称或索引的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-142">Gets the attribute with the specified name or index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(i As Integer) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[int] { System::Xml::XmlAttribute ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.ItemOf(int) : System.Xml.XmlAttribute" Usage="System.Xml.XmlAttributeCollection.ItemOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="20d30-143">属性的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-143">The index of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d30-144">获取具有指定索引的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-144">Gets the attribute with the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20d30-145">位于指定索引处的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-145">The <see cref="T:System.Xml.XmlAttribute" /> at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-146">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="20d30-146">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="20d30-147">它相当于调用<xref:System.Xml.XmlNamedNodeMap.Item%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="20d30-147">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.Item%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20d30-148">下面的示例显示集合中的所有属性。</span><span class="sxs-lookup"><span data-stu-id="20d30-148">The following example displays all the attributes in the collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="20d30-149">正在传递的索引超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-149">The index being passed in is out of range.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[System::String ^] { System::Xml::XmlAttribute ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.ItemOf(string) : System.Xml.XmlAttribute" Usage="System.Xml.XmlAttributeCollection.ItemOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="20d30-150">属性的限定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-150">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d30-151">获取具有指定名称的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-151">Gets the attribute with the specified name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20d30-152">具有指定名称的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-152">The <see cref="T:System.Xml.XmlAttribute" /> with the specified name.</span>
          </span>
          <span data-ttu-id="20d30-153">如果此特性不存在，则此属性返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-153">If the attribute does not exist, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-154">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="20d30-154">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="20d30-155">它相当于调用<xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>。</span><span class="sxs-lookup"><span data-stu-id="20d30-155">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20d30-156">下面的示例从文档中移除属性。</span><span class="sxs-lookup"><span data-stu-id="20d30-156">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[string localName, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[System::String ^, System::String ^] { System::Xml::XmlAttribute ^ get(System::String ^ localName, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.ItemOf(string * string) : System.Xml.XmlAttribute" Usage="System.Xml.XmlAttributeCollection.ItemOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="20d30-157">属性的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-157">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="20d30-158">属性的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-158">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d30-159">获取具有指定的本地名称和命名空间唯一资源标识符 (URI) 的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-159">Gets the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20d30-160">具有指定的本地名称和命名空间 URI 的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-160">The <see cref="T:System.Xml.XmlAttribute" /> with the specified local name and namespace URI.</span>
          </span>
          <span data-ttu-id="20d30-161">如果此特性不存在，则此属性返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-161">If the attribute does not exist, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-162">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="20d30-162">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="20d30-163">它相当于调用<xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>。</span><span class="sxs-lookup"><span data-stu-id="20d30-163">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepend">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Prepend (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Prepend(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Prepend (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Prepend(System::Xml::XmlAttribute ^ node);" />
      <MemberSignature Language="F#" Value="member this.Prepend : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.Prepend node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="20d30-164">要插入的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-164">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d30-165">将指定特性插入集合中，并将其作为集合的第一个节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-165">Inserts the specified attribute as the first node in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20d30-166">添加到集合中的 <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-166">The <see langword="XmlAttribute" /> added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-167">如果已经存在于集合中具有相同名称的属性，从集合删除的原始属性和`node`添加到集合的开头。</span><span class="sxs-lookup"><span data-stu-id="20d30-167">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `node` is added to the beginning of the collection.</span></span>  
  
 <span data-ttu-id="20d30-168">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="20d30-168">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20d30-169">下面的示例将新属性添加到文档。</span><span class="sxs-lookup"><span data-stu-id="20d30-169">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Remove (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Remove(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Remove(System::Xml::XmlAttribute ^ node);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.Remove node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="20d30-170">要移除的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-170">The <see cref="T:System.Xml.XmlAttribute" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d30-171">从集合中移除指定的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-171">Removes the specified attribute from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20d30-172">移除的节点，或者，如果在集合中找不到此节点，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-172">The node removed or <see langword="null" /> if it is not found in the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-173">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="20d30-173">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20d30-174">下面的示例从文档中移除属性。</span><span class="sxs-lookup"><span data-stu-id="20d30-174">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : unit -&gt; unit" Usage="xmlAttributeCollection.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20d30-175">从集合中移除所有特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-175">Removes all attributes from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-176">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="20d30-176">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20d30-177">下面的示例从文档中移除所有属性。</span><span class="sxs-lookup"><span data-stu-id="20d30-177">The following example removes all attributes from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute RemoveAt (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute RemoveAt(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (i As Integer) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ RemoveAt(int i);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.RemoveAt i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="20d30-178">要删除的节点的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-178">The index of the node to remove.</span>
          </span>
          <span data-ttu-id="20d30-179">第一个节点的索引为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-179">The first node has index 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d30-180">从集合中移除与指定的索引对应的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-180">Removes the attribute corresponding to the specified index from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20d30-181">如果在指定索引处没有特性，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-181">Returns <see langword="null" /> if there is no attribute at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-182">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="20d30-182">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20d30-183">下面的示例从文档中移除属性。</span><span class="sxs-lookup"><span data-stu-id="20d30-183">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNamedItem">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode SetNamedItem (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode SetNamedItem(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetNamedItem (node As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ SetNamedItem(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.SetNamedItem : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlAttributeCollection.SetNamedItem node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="20d30-184">要存储在此集合中的特性节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-184">An attribute node to store in this collection.</span>
          </span>
          <span data-ttu-id="20d30-185">以后可以使用节点的名称访问该节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-185">The node will later be accessible using the name of the node.</span>
          </span>
          <span data-ttu-id="20d30-186">如果集合中已存在具有该名称的节点，则用新的进行替换；否则，将把该节点追加到集合的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-186">If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d30-187">使用 <see cref="T:System.Xml.XmlNode" /> 属性添加 <see cref="P:System.Xml.XmlNode.Name" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-187">Adds a <see cref="T:System.Xml.XmlNode" /> using its <see cref="P:System.Xml.XmlNode.Name" /> property</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20d30-188">如果 <paramref name="node" /> 替换具有相同名称的现有节点，则返回旧节点；否则返回新添加的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-188">If the <paramref name="node" /> replaces an existing node with the same name, the old node is returned; otherwise, the added node is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="20d30-189">下面的示例将新属性添加到文档。</span><span class="sxs-lookup"><span data-stu-id="20d30-189">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20d30-190">
            <paramref name="node" /> 是从创建此集合的文档之外的另一个 <see cref="T:System.Xml.XmlDocument" /> 创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-190">
              <paramref name="node" /> was created from a different <see cref="T:System.Xml.XmlDocument" /> than the one that created this collection.</span>
          </span>
          <span data-ttu-id="20d30-191">此 <see langword="XmlAttributeCollection" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-191">This <see langword="XmlAttributeCollection" /> is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="20d30-192">
            <paramref name="node" /> 是 <see cref="T:System.Xml.XmlAttribute" />，后者已经是另一个 <see cref="T:System.Xml.XmlElement" /> 对象的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-192">
              <paramref name="node" /> is an <see cref="T:System.Xml.XmlAttribute" /> that is already an attribute of another <see cref="T:System.Xml.XmlElement" /> object.</span>
          </span>
          <span data-ttu-id="20d30-193">若要在其他元素中重新使用特性，必须克隆想重新使用的 <see langword="XmlAttribute" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-193">To re-use attributes in other elements, you must clone the <see langword="XmlAttribute" /> objects you want to re-use.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="20d30-194">从该集合向其中复制对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-194">The array that is the destination of the objects copied from this collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="20d30-195">array 中复制开始处的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-195">The index in the array where copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20d30-196">有关此成员的说明，请参阅 <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-196">For a description of this member, see <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-197">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="20d30-197">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="20d30-198">它只能在 <xref:System.Xml.XmlAttributeCollection> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="20d30-198">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20d30-199">有关此成员的说明，请参阅 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-199">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20d30-200">返回包含特性计数的 <see langword="int" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-200">Returns an <see langword="int" /> that contains the count of the attributes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-201">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="20d30-201">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="20d30-202">它只能在 <xref:System.Xml.XmlAttributeCollection> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="20d30-202">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20d30-203">有关此成员的说明，请参阅 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-203">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20d30-204">如果集合已同步，则返回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-204">Returns <see langword="true" /> if the collection is synchronized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-205">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="20d30-205">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="20d30-206">它只能在 <xref:System.Xml.XmlAttributeCollection> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="20d30-206">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20d30-207">有关此成员的说明，请参阅 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-207">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20d30-208">返回作为集合的根的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20d30-208">Returns the <see cref="T:System.Object" /> that is the root of the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d30-209">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="20d30-209">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="20d30-210">它只能在 <xref:System.Xml.XmlAttributeCollection> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="20d30-210">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>