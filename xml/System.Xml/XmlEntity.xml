<Type Name="XmlEntity" FullName="System.Xml.XmlEntity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7f96b5f213c6bd332d6029ba4c46e86b1566ec7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlEntity : System.Xml.XmlNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlEntity extends System.Xml.XmlNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlEntity" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlEntity&#xA;Inherits XmlNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlEntity : System::Xml::XmlNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="27e5b-101">表示实体声明，如 &lt;!ENTITY... &gt;。</span>
      <span class="sxs-lookup">
        <span data-stu-id="27e5b-101">Represents an entity declaration, such as &lt;!ENTITY... &gt;.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <altmember cref="P:System.Xml.XmlDocumentType.Entities" />
  </Docs>
  <Members>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e5b-102">获取当前节点的基础统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-102">Gets the base Uniform Resource Identifier (URI) of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e5b-103">从其加载节点的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-103">The location from which the node was loaded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e5b-104">联网的 XML 文档的聚合使用各种 World Wide Web Consortium (W3C) 标准包含机制的数据块组成，因此包含来自不同位置的节点。</span><span class="sxs-lookup"><span data-stu-id="27e5b-104">A networked XML document is comprised of chunks of data aggregated using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="27e5b-105">`BaseURI`告诉这些节点来自何处。</span><span class="sxs-lookup"><span data-stu-id="27e5b-105">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="27e5b-106">此属性的值取决于节点类型。</span><span class="sxs-lookup"><span data-stu-id="27e5b-106">The value of this property varies depending on the node type.</span></span> <span data-ttu-id="27e5b-107">外部 EntityReference 节点的子级的节点返回的实体本身的位置。</span><span class="sxs-lookup"><span data-stu-id="27e5b-107">Nodes which are children of external EntityReference nodes return the location of the entity itself.</span></span> <span data-ttu-id="27e5b-108">例如，考虑下面的 XML 文档：</span><span class="sxs-lookup"><span data-stu-id="27e5b-108">For example, consider the following XML document:</span></span>  
  
```  
<!DOCTYPE item [  
<!ENTITY xyz SYSTEM "a/b.xml">  
]>  
<item num='123'>&xyz;</item>  
```  
  
 <span data-ttu-id="27e5b-109">其中的外部实体`a/b.xml`包含 XML 文本`<test>123</test>`。</span><span class="sxs-lookup"><span data-stu-id="27e5b-109">where the external entity `a/b.xml` contains the XML text `<test>123</test>`.</span></span>  
  
 <span data-ttu-id="27e5b-110">如果从加载的文档http://server/mydata.xml，`BaseURI`将返回以下：</span><span class="sxs-lookup"><span data-stu-id="27e5b-110">If the document is loaded from http://server/mydata.xml, `BaseURI` returns the following:</span></span>  
  
|<span data-ttu-id="27e5b-111">NodeType</span><span class="sxs-lookup"><span data-stu-id="27e5b-111">NodeType</span></span>|<span data-ttu-id="27e5b-112">name</span><span class="sxs-lookup"><span data-stu-id="27e5b-112">Name</span></span>|<span data-ttu-id="27e5b-113">BaseURI</span><span class="sxs-lookup"><span data-stu-id="27e5b-113">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="27e5b-114">特性</span><span class="sxs-lookup"><span data-stu-id="27e5b-114">Attribute</span></span>|<span data-ttu-id="27e5b-115">num</span><span class="sxs-lookup"><span data-stu-id="27e5b-115">num</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="27e5b-116">Document</span><span class="sxs-lookup"><span data-stu-id="27e5b-116">Document</span></span>|<span data-ttu-id="27e5b-117">#document</span><span class="sxs-lookup"><span data-stu-id="27e5b-117">#document</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="27e5b-118">DocumentType</span><span class="sxs-lookup"><span data-stu-id="27e5b-118">DocumentType</span></span>|<span data-ttu-id="27e5b-119">项</span><span class="sxs-lookup"><span data-stu-id="27e5b-119">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="27e5b-120">实体</span><span class="sxs-lookup"><span data-stu-id="27e5b-120">Entity</span></span>|<span data-ttu-id="27e5b-121">xyz</span><span class="sxs-lookup"><span data-stu-id="27e5b-121">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="27e5b-122">元素</span><span class="sxs-lookup"><span data-stu-id="27e5b-122">Element</span></span>|<span data-ttu-id="27e5b-123">项</span><span class="sxs-lookup"><span data-stu-id="27e5b-123">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="27e5b-124">EntityReference</span><span class="sxs-lookup"><span data-stu-id="27e5b-124">EntityReference</span></span>|<span data-ttu-id="27e5b-125">xyz</span><span class="sxs-lookup"><span data-stu-id="27e5b-125">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="27e5b-126">元素</span><span class="sxs-lookup"><span data-stu-id="27e5b-126">Element</span></span>|<span data-ttu-id="27e5b-127">测试</span><span class="sxs-lookup"><span data-stu-id="27e5b-127">test</span></span>|http://server/a/b.xml|  
|<span data-ttu-id="27e5b-128">Text</span><span class="sxs-lookup"><span data-stu-id="27e5b-128">Text</span></span>|<span data-ttu-id="27e5b-129">#text</span><span class="sxs-lookup"><span data-stu-id="27e5b-129">#text</span></span>|http://server/a/b.xml|  
  
 <span data-ttu-id="27e5b-130">`BaseURI` 查找实体引用边界，因此如果展开实体，不保留此信息和此属性返回的位置`XmlDocument`在所有情况下的对象。</span><span class="sxs-lookup"><span data-stu-id="27e5b-130">`BaseURI` looks for entity reference boundaries, so if entities are expanded, this information is not preserved and this property returns the location of the `XmlDocument` object in all cases.</span></span>  
  
 <span data-ttu-id="27e5b-131">作为第二个示例中，给定以下 XML 文档：</span><span class="sxs-lookup"><span data-stu-id="27e5b-131">As a second example, given the following XML document:</span></span>  
  
```  
<!DOCTYPE Mydata SYSTEM "http://localhost/doctype.dtd">  
<baa>&xyz;</baa>  
```  
  
 <span data-ttu-id="27e5b-132">其中的文档类型定义 (DTD) 文件包含如下内容：</span><span class="sxs-lookup"><span data-stu-id="27e5b-132">where the document type definition (DTD) file contains the following:</span></span>  
  
```  
<!ENTITY xyz "<E1>My Data</E1>">  
<!ELEMENT baa #PCDATA>  
<!ATTLIST baa attr1 "woof">  
```  
  
 <span data-ttu-id="27e5b-133">如果 XML 文档加载从http://localhost/mydata.xml，`BaseURI`返回以下项作为每个节点：</span><span class="sxs-lookup"><span data-stu-id="27e5b-133">If the XML document is loaded from http://localhost/mydata.xml, `BaseURI` returns the following for each of the nodes:</span></span>  
  
|<span data-ttu-id="27e5b-134">NodeType</span><span class="sxs-lookup"><span data-stu-id="27e5b-134">NodeType</span></span>|<span data-ttu-id="27e5b-135">name</span><span class="sxs-lookup"><span data-stu-id="27e5b-135">Name</span></span>|<span data-ttu-id="27e5b-136">BaseURI</span><span class="sxs-lookup"><span data-stu-id="27e5b-136">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="27e5b-137">Document</span><span class="sxs-lookup"><span data-stu-id="27e5b-137">Document</span></span>|<span data-ttu-id="27e5b-138">#document</span><span class="sxs-lookup"><span data-stu-id="27e5b-138">#document</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="27e5b-139">DocumentType</span><span class="sxs-lookup"><span data-stu-id="27e5b-139">DocumentType</span></span>|<span data-ttu-id="27e5b-140">Mydata</span><span class="sxs-lookup"><span data-stu-id="27e5b-140">Mydata</span></span>|http://localhost/doctype.dtd|  
|<span data-ttu-id="27e5b-141">元素</span><span class="sxs-lookup"><span data-stu-id="27e5b-141">Element</span></span>|<span data-ttu-id="27e5b-142">baa</span><span class="sxs-lookup"><span data-stu-id="27e5b-142">baa</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="27e5b-143">实体</span><span class="sxs-lookup"><span data-stu-id="27e5b-143">Entity</span></span>|<span data-ttu-id="27e5b-144">xyz</span><span class="sxs-lookup"><span data-stu-id="27e5b-144">xyz</span></span>|http://localhost/doctype.dtd|  
|<span data-ttu-id="27e5b-145">EntityReference</span><span class="sxs-lookup"><span data-stu-id="27e5b-145">EntityReference</span></span>|<span data-ttu-id="27e5b-146">xyz</span><span class="sxs-lookup"><span data-stu-id="27e5b-146">xyz</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="27e5b-147">特性</span><span class="sxs-lookup"><span data-stu-id="27e5b-147">Attribute</span></span>|<span data-ttu-id="27e5b-148">woof</span><span class="sxs-lookup"><span data-stu-id="27e5b-148">woof</span></span>|http://localhost/mydata.xml|  
  
> [!NOTE]
>  <span data-ttu-id="27e5b-149">默认属性的基本 URI 是元素的它们所属的基 URI 相同。</span><span class="sxs-lookup"><span data-stu-id="27e5b-149">The base URI of a default attribute is the same as the base URI of the element to which they belong.</span></span>  
  
 <span data-ttu-id="27e5b-150">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="27e5b-150">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntity.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="27e5b-151">若要递归地克隆指定节点下的子树，则为 <see langword="true" />；若仅克隆节点本身，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-151">
              <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27e5b-152">创建此节点的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-152">Creates a duplicate of this node.</span>
          </span>
          <span data-ttu-id="27e5b-153">无法克隆 Entity 节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-153">Entity nodes cannot be cloned.</span>
          </span>
          <span data-ttu-id="27e5b-154">对 <see cref="T:System.Xml.XmlEntity" /> 对象调用此方法将引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-154">Calling this method on an <see cref="T:System.Xml.XmlEntity" /> object throws an exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27e5b-155">返回从中调用该方法的 <see cref="T:System.Xml.XmlNode" /> 的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-155">Returns a copy of the <see cref="T:System.Xml.XmlNode" /> from which the method is called.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="27e5b-156">无法克隆 Entity 节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-156">Entity nodes cannot be cloned.</span>
          </span>
          <span data-ttu-id="27e5b-157">对 <see cref="T:System.Xml.XmlEntity" /> 对象调用此方法将引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-157">Calling this method on an <see cref="T:System.Xml.XmlEntity" /> object throws an exception.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e5b-158">获取实体节点和所有其子级的串联值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-158">Gets the concatenated values of the entity node and all its children.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e5b-159">节点及其所有子级的串连值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-159">The concatenated values of the node and all its children.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e5b-160">`XmlEntity` 节点是只读的。</span><span class="sxs-lookup"><span data-stu-id="27e5b-160">`XmlEntity` nodes are read-only.</span></span> <span data-ttu-id="27e5b-161">设置此属性将引发异常。</span><span class="sxs-lookup"><span data-stu-id="27e5b-161">Setting this property throws an exception.</span></span>  
  
 <span data-ttu-id="27e5b-162">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="27e5b-162">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="27e5b-163">尝试设置此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-163">Attempting to set the property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e5b-164">获取表示此节点子级的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-164">Gets the markup representing the children of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e5b-165">对于 <see langword="XmlEntity" /> 节点，返回 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-165">For <see langword="XmlEntity" /> nodes, String.Empty is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e5b-166">`XmlEntity` 节点是只读的。</span><span class="sxs-lookup"><span data-stu-id="27e5b-166">`XmlEntity` nodes are read-only.</span></span> <span data-ttu-id="27e5b-167">设置此属性将引发异常。</span><span class="sxs-lookup"><span data-stu-id="27e5b-167">Setting this property throws an exception.</span></span>  
  
 <span data-ttu-id="27e5b-168">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="27e5b-168">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="27e5b-169">尝试设置此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-169">Attempting to set the property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e5b-170">获取指示节点是否只读的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-170">Gets a value indicating whether the node is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e5b-171">如果节点是只读的，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-171">
              <see langword="true" /> if the node is read-only; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="27e5b-172">由于 <see langword="XmlEntity" /> 节点为只读，该属性总是返回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-172">Because <see langword="XmlEntity" /> nodes are read-only, this property always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e5b-173">只读节点是一个无法更改其属性、 属性或子级。</span><span class="sxs-lookup"><span data-stu-id="27e5b-173">A read-only node is one whose properties, attributes, or children cannot be changed.</span></span> <span data-ttu-id="27e5b-174">你可以从树中删除只读节点，并将它的其他位置。</span><span class="sxs-lookup"><span data-stu-id="27e5b-174">You can remove a read-only node from the tree and insert it somewhere else.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e5b-175">获取不带有命名空间前缀的节点名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-175">Gets the name of the node without the namespace prefix.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e5b-176">对于 <see langword="XmlEntity" /> 节点，此属性返回实体的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-176">For <see langword="XmlEntity" /> nodes, this property returns the name of the entity.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e5b-177">获取节点的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-177">Gets the name of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e5b-178">实体的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-178">The name of the entity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27e5b-179">下面的示例显示了 XML 文档中声明的实体上的信息。</span><span class="sxs-lookup"><span data-stu-id="27e5b-179">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="27e5b-180">该示例使用文件`doment.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="27e5b-180">The example uses the file `doment.xml` as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e5b-181">获取节点的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-181">Gets the type of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e5b-182">节点类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-182">The node type.</span>
          </span>
          <span data-ttu-id="27e5b-183">对于 <see langword="XmlEntity" /> 节点，该值为 XmlNodeType.Entity。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-183">For <see langword="XmlEntity" /> nodes, the value is XmlNodeType.Entity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27e5b-184">下面的示例显示了 XML 文档中声明的实体上的信息。</span><span class="sxs-lookup"><span data-stu-id="27e5b-184">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="27e5b-185">该示例使用文件`doment.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="27e5b-185">The example uses the file `doment.xml` as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="NotationName">
      <MemberSignature Language="C#" Value="public string NotationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NotationName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.NotationName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NotationName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e5b-186">获取实体声明上可选 NDATA 特性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-186">Gets the name of the optional NDATA attribute on the entity declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e5b-187">NDATA 特性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-187">The name of the NDATA attribute.</span>
          </span>
          <span data-ttu-id="27e5b-188">如果没有 NDATA，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-188">If there is no NDATA, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27e5b-189">下面的示例显示了 XML 文档中声明的实体上的信息。</span><span class="sxs-lookup"><span data-stu-id="27e5b-189">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="27e5b-190">该示例使用文件，`doment.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="27e5b-190">The example uses the file, `doment.xml`, as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public override string OuterXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.OuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OuterXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OuterXml { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e5b-191">获取表示此节点及其所有子级的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-191">Gets the markup representing this node and all its children.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e5b-192">对于 <see langword="XmlEntity" /> 节点，返回 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-192">For <see langword="XmlEntity" /> nodes, String.Empty is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e5b-193">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="27e5b-193">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicId">
      <MemberSignature Language="C#" Value="public string PublicId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublicId" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.PublicId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PublicId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e5b-194">获取实体声明上公共标识符的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-194">Gets the value of the public identifier on the entity declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e5b-195">实体上的公共标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-195">The public identifier on the entity.</span>
          </span>
          <span data-ttu-id="27e5b-196">如果没有公共标识符，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-196">If there is no public identifier, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27e5b-197">下面的示例显示了 XML 文档中声明的实体上的信息。</span><span class="sxs-lookup"><span data-stu-id="27e5b-197">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="27e5b-198">该示例使用文件，`doment.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="27e5b-198">The example uses the file, `doment.xml`, as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="SystemId">
      <MemberSignature Language="C#" Value="public string SystemId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemId" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.SystemId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SystemId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e5b-199">获取实体声明上系统标识符的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-199">Gets the value of the system identifier on the entity declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e5b-200">实体上的系统标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-200">The system identifier on the entity.</span>
          </span>
          <span data-ttu-id="27e5b-201">如果没有系统标识符，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-201">If there is no system identifier, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27e5b-202">下面的示例显示了 XML 文档中声明的实体上的信息。</span><span class="sxs-lookup"><span data-stu-id="27e5b-202">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="27e5b-203">该示例使用文件`doment.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="27e5b-203">The example uses the file `doment.xml` as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="27e5b-204">要保存到其中的 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-204">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27e5b-205">将该节点的所有子项保存到指定的 <see cref="T:System.Xml.XmlWriter" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-205">Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="27e5b-206">对于 <see langword="XmlEntity" /> 节点，此方法无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-206">For <see langword="XmlEntity" /> nodes, this method has no effect.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e5b-207">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="27e5b-207">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="27e5b-208">要保存到其中的 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-208">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27e5b-209">将节点保存到指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-209">Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="27e5b-210">对于 <see langword="XmlEntity" /> 节点，此方法无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e5b-210">For <see langword="XmlEntity" /> nodes, this method has no effect.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e5b-211">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="27e5b-211">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>