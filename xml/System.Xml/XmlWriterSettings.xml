<Type Name="XmlWriterSettings" FullName="System.Xml.XmlWriterSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="63ddcdd7384be28c669a1c85111fa799861ce60c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlWriterSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterSettings sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d8ae8-101">指定在由 <see cref="T:System.Xml.XmlWriter" /> 方法创建的 <see cref="Overload:System.Xml.XmlWriter.Create" /> 对象上支持的一组功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8ae8-101">Specifies a set of features to support on the <see cref="T:System.Xml.XmlWriter" /> object created by the <see cref="Overload:System.Xml.XmlWriter.Create" /> method.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-102"><xref:System.Xml.XmlWriter.Create%2A>方法是用于获取的首选的机制<xref:System.Xml.XmlWriter>实例。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-102">The <xref:System.Xml.XmlWriter.Create%2A> method is the preferred mechanism for obtaining <xref:System.Xml.XmlWriter> instances.</span></span> <span data-ttu-id="d8ae8-103"><xref:System.Xml.XmlWriter.Create%2A>方法使用<xref:System.Xml.XmlWriterSettings>类，以指定要在中实现的功能<xref:System.Xml.XmlWriter>创建的对象。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-103">The <xref:System.Xml.XmlWriter.Create%2A> method uses the <xref:System.Xml.XmlWriterSettings> class to specify which features to implement in the <xref:System.Xml.XmlWriter> object that is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d8ae8-104">如果你使用<xref:System.Xml.XmlWriter>对象<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法，则应使用<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A>属性来获取<xref:System.Xml.XmlWriterSettings>具有正确设置的对象。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-104">If you're using the <xref:System.Xml.XmlWriter> object with the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, you should use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to obtain an <xref:System.Xml.XmlWriterSettings> object with the correct settings.</span></span> <span data-ttu-id="d8ae8-105">这样可以确保所创建的 <xref:System.Xml.XmlWriter> 对象的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-105">This ensures that the created <xref:System.Xml.XmlWriter> object has the correct output settings.</span></span>  
  
 <span data-ttu-id="d8ae8-106"><xref:System.Xml.XmlWriterSettings>类提供了属性该控件的数据一致性和输出格式。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-106">The <xref:System.Xml.XmlWriterSettings> class provides properties that control data conformance and output format.</span></span>  
  
 <span data-ttu-id="d8ae8-107">有关数据一致性检查和自动更正，使用这些属性：</span><span class="sxs-lookup"><span data-stu-id="d8ae8-107">For data conformance checks and auto-corrections, use these properties:</span></span>  
  
|<span data-ttu-id="d8ae8-108">Property</span><span class="sxs-lookup"><span data-stu-id="d8ae8-108">Property</span></span>|<span data-ttu-id="d8ae8-109">指定</span><span class="sxs-lookup"><span data-stu-id="d8ae8-109">Specifies</span></span>|<span data-ttu-id="d8ae8-110">“值”</span><span class="sxs-lookup"><span data-stu-id="d8ae8-110">Value</span></span>|<span data-ttu-id="d8ae8-111">默认</span><span class="sxs-lookup"><span data-stu-id="d8ae8-111">Default</span></span>|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="d8ae8-112">是否要检查的字符合法的 XML 中字符集，由 W3C 定义。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-112">Whether to check that characters are in the legal XML character set, as defined by W3C.</span></span>|<span data-ttu-id="d8ae8-113">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="d8ae8-113">`true` or `false`</span></span>|`true`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="d8ae8-114">是否要检查输出的格式正确的 XML 1.0 文档或片段。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-114">Whether to check that output is a well-formed XML 1.0 document or fragment.</span></span>|<span data-ttu-id="d8ae8-115"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> （文档级别）、 <xref:System.Xml.ConformanceLevel.Fragment> （片段级别），或<xref:System.Xml.ConformanceLevel.Auto>（自动检测）</span><span class="sxs-lookup"><span data-stu-id="d8ae8-115"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level), <xref:System.Xml.ConformanceLevel.Fragment> (fragment-level), or <xref:System.Xml.ConformanceLevel.Auto> (auto-detection)</span></span>|<span data-ttu-id="d8ae8-116"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> （文档级一致性）</span><span class="sxs-lookup"><span data-stu-id="d8ae8-116"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level conformance)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="d8ae8-117">是否将结束标记添加到闭合的所有元素时<xref:System.Xml.XmlWriter.Close%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-117">Whether to add closing tags to all unclosed elements when the <xref:System.Xml.XmlWriter.Close%2A> method is called.</span></span>|<span data-ttu-id="d8ae8-118">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="d8ae8-118">`true` or `false`</span></span>|`true`|  
  
 <span data-ttu-id="d8ae8-119">若要指定输出格式，使用这些属性：</span><span class="sxs-lookup"><span data-stu-id="d8ae8-119">To specify output format, use these properties:</span></span>  
  
|<span data-ttu-id="d8ae8-120">Property</span><span class="sxs-lookup"><span data-stu-id="d8ae8-120">Property</span></span>|<span data-ttu-id="d8ae8-121">指定</span><span class="sxs-lookup"><span data-stu-id="d8ae8-121">Specifies</span></span>|<span data-ttu-id="d8ae8-122">“值”</span><span class="sxs-lookup"><span data-stu-id="d8ae8-122">Value</span></span>|<span data-ttu-id="d8ae8-123">默认</span><span class="sxs-lookup"><span data-stu-id="d8ae8-123">Default</span></span>|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="d8ae8-124">使用编码的文本。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-124">Text encoding to use.</span></span>|<span data-ttu-id="d8ae8-125"><xref:System.Text.Encoding?displayProperty=nameWithType> 值</span><span class="sxs-lookup"><span data-stu-id="d8ae8-125"><xref:System.Text.Encoding?displayProperty=nameWithType> value</span></span>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="d8ae8-126">是否缩进元素</span><span class="sxs-lookup"><span data-stu-id="d8ae8-126">Whether to indent elements</span></span>|<span data-ttu-id="d8ae8-127">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="d8ae8-127">`true` or `false`</span></span>|<span data-ttu-id="d8ae8-128">`false` （没有缩进）</span><span class="sxs-lookup"><span data-stu-id="d8ae8-128">`false` (no indentation)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="d8ae8-129">字符缩进时要使用字符串 (时使用<xref:System.Xml.XmlWriterSettings.Indent%2A>设置为`true`)。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-129">Character string to use when indenting (used when <xref:System.Xml.XmlWriterSettings.Indent%2A> is set to `true`).</span></span>|<span data-ttu-id="d8ae8-130">String</span><span class="sxs-lookup"><span data-stu-id="d8ae8-130">String</span></span>|<span data-ttu-id="d8ae8-131">两个空格</span><span class="sxs-lookup"><span data-stu-id="d8ae8-131">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="d8ae8-132">要用于换行符的字符串。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-132">Character string to use for line breaks.</span></span>|<span data-ttu-id="d8ae8-133">String</span><span class="sxs-lookup"><span data-stu-id="d8ae8-133">String</span></span>|<span data-ttu-id="d8ae8-134">`\r\n` （回车符、 换行符）</span><span class="sxs-lookup"><span data-stu-id="d8ae8-134">`\r\n` (carriage return, line feed)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="d8ae8-135">如何处理换行符。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-135">How to handle newline characters.</span></span>|<span data-ttu-id="d8ae8-136"><xref:System.Xml.NewLineHandling?displayProperty=nameWithType> 值： <xref:System.Xml.NewLineHandling.Entitize> （规范化） <xref:System.Xml.NewLineHandling.Replace> （替换），或<xref:System.Xml.NewLineHandling.None>（保留不变）</span><span class="sxs-lookup"><span data-stu-id="d8ae8-136"><xref:System.Xml.NewLineHandling?displayProperty=nameWithType> value: <xref:System.Xml.NewLineHandling.Entitize> (normalize), <xref:System.Xml.NewLineHandling.Replace> (replace), or <xref:System.Xml.NewLineHandling.None> (leave unchanged)</span></span>|<span data-ttu-id="d8ae8-137"><xref:System.Xml.NewLineHandling.Replace> (将替换为指定的字符<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)</span><span class="sxs-lookup"><span data-stu-id="d8ae8-137"><xref:System.Xml.NewLineHandling.Replace> (replace with characters specified by <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="d8ae8-138">是否在单独的行上写入属性 (没有时生效<xref:System.Xml.XmlWriterSettings.Indent%2A>是`false`)。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-138">Whether to write attributes on individual lines (has no effect when <xref:System.Xml.XmlWriterSettings.Indent%2A> is `false`).</span></span>|<span data-ttu-id="d8ae8-139">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="d8ae8-139">`true` or `false`</span></span>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="d8ae8-140">是否写入 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-140">Whether to write an XML declaration.</span></span>|<span data-ttu-id="d8ae8-141">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="d8ae8-141">`true` or `false`</span></span>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="d8ae8-142">下面的示例创建<xref:System.Xml.XmlWriter>，写入 XML 文件，并在新行上写入每个属性。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-142">The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.</span></span>  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 <span data-ttu-id="d8ae8-143">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="d8ae8-143">The sample produces the following output:</span></span>  
  
```  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-144">初始化 <see cref="T:System.Xml.XmlWriterSettings" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-144">Initializes a new instance of the <see cref="T:System.Xml.XmlWriterSettings" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-145">下表显示的实例的初始属性值<xref:System.Xml.XmlWriterSettings>。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-145">The following table shows initial property values for an instance of <xref:System.Xml.XmlWriterSettings>.</span></span>  
  
|<span data-ttu-id="d8ae8-146">Property</span><span class="sxs-lookup"><span data-stu-id="d8ae8-146">Property</span></span>|<span data-ttu-id="d8ae8-147">初始值</span><span class="sxs-lookup"><span data-stu-id="d8ae8-147">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|<span data-ttu-id="d8ae8-148">`false`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-148">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="d8ae8-149">`true`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-149">`true`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|<span data-ttu-id="d8ae8-150">`false`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-150">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="d8ae8-151"><xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-151"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="d8ae8-152">`Encoding.UTF8`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-152">`Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="d8ae8-153">`false`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-153">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="d8ae8-154">两个空格。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-154">Two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="d8ae8-155">`\r\n` （回车符、 换行符）。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-155">`\r\n` (carriage return, new line).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="d8ae8-156"><xref:System.Xml.NewLineHandling.Replace>。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-156"><xref:System.Xml.NewLineHandling.Replace>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="d8ae8-157">`false`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-157">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="d8ae8-158">`false`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-158">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="d8ae8-159">`true`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-159">`true`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d8ae8-160">下面的示例创建<xref:System.Xml.XmlWriter>用于缩进制表符的对象。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-160">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-161">获取或设置一个值，该值指示是否可对特定的 <see cref="T:System.Xml.XmlWriter" /> 实例使用异步 <see cref="T:System.Xml.XmlWriter" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-161">Gets or sets a value that indicates whether asynchronous <see cref="T:System.Xml.XmlWriter" /> methods can be used on a particular <see cref="T:System.Xml.XmlWriter" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-162">则可以使用异步方法，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-162">
              <see langword="true" /> if asynchronous methods can be used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-163">必须将此值设置为`true`当你创建一个新<xref:System.Xml.XmlWriter>实例如果你想要使用异步<xref:System.Xml.XmlWriter>该实例上的方法。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-163">You must set this value to `true` when you create a new <xref:System.Xml.XmlWriter> instance if you want to use asynchronous <xref:System.Xml.XmlWriter> methods on that instance.</span></span> <span data-ttu-id="d8ae8-164">后<xref:System.Xml.XmlWriter>创建实例，<xref:System.Xml.XmlWriterSettings.Async%2A>属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-164">After the <xref:System.Xml.XmlWriter> instance is created, the <xref:System.Xml.XmlWriterSettings.Async%2A> property is read-only.</span></span> <span data-ttu-id="d8ae8-165">此属性的默认值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-165">The default value of this property is `false`.</span></span>  
  
 <span data-ttu-id="d8ae8-166">通过将忽略此标志<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>重载。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-166">This flag is ignored by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="d8ae8-167">这意味着，如果你创建一个新<xref:System.Xml.XmlWriter>基于现有<xref:System.Xml.XmlWriter>，异步行为取决于输入<xref:System.Xml.XmlWriter>，并且不能使用<xref:System.Xml.XmlWriterSettings.Async%2A>更改异步行为的标志。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-167">This means that if you create a new <xref:System.Xml.XmlWriter> based on an existing <xref:System.Xml.XmlWriter>, the async behavior depends on the input <xref:System.Xml.XmlWriter>, and you cannot use the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to change the async behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-168">获取或设置一个值，该值指示是否应检查 XML 编写器以确保文档中的所有字符都符合 W3C [XML 1.0 建议](http://www.w3.org/TR/REC-xml/#charsets)中的“2.2 字符”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-168">Gets or sets a value that indicates whether the XML writer should check to ensure that all characters in the document conform to the "2.2 Characters" section of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/#charsets).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-169">如果进行字符检查，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-169">
              <see langword="true" /> to do character checking; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d8ae8-170">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-170">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-171">如果<xref:System.Xml.XmlWriter>对象支持字符检查，它将引发异常，如果任何字符都是合法的 XML 字符的"2.2 字符"部分的 W3C 指定范围之外[XML 1.0 建议](http://www.w3.org/TR/REC-xml/#charsets)。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-171">If the <xref:System.Xml.XmlWriter> object supports character checking, it throws an exception if any characters are outside the range of legal XML characters specified by the "2.2 Characters" section of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/#charsets).</span></span>  
  
 <span data-ttu-id="d8ae8-172">字符检查不会检查 XML 名称中有非法字符或检查所有的 XML 名称有效。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-172">Character checking does not include checking for illegal characters in XML names or checking that all XML names are valid.</span></span> <span data-ttu-id="d8ae8-173">这些检查是一致性检查的一部分，并且始终执行。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-173">These checks are part of conformance checking and are always performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlWriterSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlWriterSettings ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-174">创建 <see cref="T:System.Xml.XmlWriterSettings" /> 实例的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-174">Creates a copy of the <see cref="T:System.Xml.XmlWriterSettings" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8ae8-175">克隆的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-175">The cloned <see cref="T:System.Xml.XmlWriterSettings" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-176">克隆<xref:System.Xml.XmlWriterSettings>而不会影响原始对象上的设置可以修改对象。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-176">The cloned <xref:System.Xml.XmlWriterSettings> object can be modified without affecting the settings on the original object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutput">
      <MemberSignature Language="C#" Value="public bool CloseOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseOutput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseOutput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-177">获取或设置一个值，该值指示调用 <see cref="M:System.Xml.XmlWriter.Close" /> 方法时 <see cref="T:System.Xml.XmlWriter" /> 是否也应关闭基础流或 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-177">Gets or sets a value indicating whether the <see cref="T:System.Xml.XmlWriter" /> should also close the underlying stream or <see cref="T:System.IO.TextWriter" /> when the <see cref="M:System.Xml.XmlWriter.Close" /> method is called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-178">如果还应该关闭该基础流或 <see cref="T:System.IO.TextWriter" />，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-178">
              <see langword="true" /> to also close the underlying stream or <see cref="T:System.IO.TextWriter" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d8ae8-179">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-179">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-180">当您想要 XML 写入流，然后将额外信息添加到后流的末尾时，此设置很有用<xref:System.Xml.XmlWriter>完成写入。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-180">This setting is useful when you wish to write XML to a stream, and then add extra information to the end of the stream after the <xref:System.Xml.XmlWriter> has finished writing.</span></span>  
  
 <span data-ttu-id="d8ae8-181">此属性仅适用于<xref:System.Xml.XmlWriter>到流内容的输出的 XML 实例或<xref:System.IO.TextWriter>; 否则为将忽略此设置。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-181">This property only applies to <xref:System.Xml.XmlWriter> instances that output XML content to a stream or <xref:System.IO.TextWriter>; otherwise, this setting is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ae8-182">下面的示例将 XML 片段写入内存流。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-182">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-183">获取或设置的 XML 写入器检查 XML 输出的一致性级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-183">Gets or sets the level of conformance that the XML writer checks the XML output for.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-184">指定一致性级别（文档、片段或自动检测）的枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-184">One of the enumeration values that specifies the level of conformance (document, fragment, or automatic detection).</span>
          </span>
          <span data-ttu-id="d8ae8-185">默认值为 <see cref="F:System.Xml.ConformanceLevel.Document" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-185">The default is <see cref="F:System.Xml.ConformanceLevel.Document" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-186"><xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType>属性配置为检查并确保正在写入的流符合特定的规则集的 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-186">The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> property configures the XML writer to check and guarantee that the stream being written complies with a certain set of rules.</span></span> <span data-ttu-id="d8ae8-187">若要查看其符合格式正确的 XML 1.0 文档或文档片段的规则，可以检查 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-187">The XML data can be checked to see that it conforms to the rules for a well-formed XML 1.0 document or a document fragment.</span></span> <span data-ttu-id="d8ae8-188">下表介绍的三个设置。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-188">The following table describes the three settings.</span></span> <span data-ttu-id="d8ae8-189">默认值为文档级别的一致性。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-189">The default is document-level conformance.</span></span>  
  
|<span data-ttu-id="d8ae8-190">设置</span><span class="sxs-lookup"><span data-stu-id="d8ae8-190">Setting</span></span>|<span data-ttu-id="d8ae8-191">描述</span><span class="sxs-lookup"><span data-stu-id="d8ae8-191">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|<span data-ttu-id="d8ae8-192">确保 XML 输出符合[格式良好的 XML 1.0 文档规则](http://www.w3.org/TR/REC-xml/#sec-well-formed)和可由任何兼容的处理器的处理。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-192">Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document](http://www.w3.org/TR/REC-xml/#sec-well-formed) and can be processed by any conforming processor.</span></span><br /><br /> <span data-ttu-id="d8ae8-193">文档一致性检查包括大部分片段级别检查，还请确保以下：</span><span class="sxs-lookup"><span data-stu-id="d8ae8-193">The document conformance checks include most of the fragment-level checks and also ensure the following:</span></span><br /><br /> <span data-ttu-id="d8ae8-194">-顶级项没有 XML 声明、 DTD、 元素、 注释、 空白区域或处理指令以外的任何节点。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-194">-   The top-level item doesn't have any nodes other than XML Declaration, DTD, element, comment, white space, or processing instruction.</span></span><br /><span data-ttu-id="d8ae8-195">XML 数据将具有一个且仅有一个顶级元素节点。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-195">-   The XML data has one and only one top-level element node.</span></span><br /><br /> <span data-ttu-id="d8ae8-196">XML 编写器不会分析写入的 DTD 信息。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-196">The XML writer doesn't parse DTD information that is written.</span></span> <span data-ttu-id="d8ae8-197">用户负责确保 DTD 格式正确。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-197">The user is responsible for ensuring that the DTD is well-formed.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Fragment>|<span data-ttu-id="d8ae8-198">确保 XML 输出符合[格式正确的 XML 1.0 文档片段的规则](http://www.w3.org/TR/REC-xml/#wf-entities)。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-198">Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document fragment](http://www.w3.org/TR/REC-xml/#wf-entities).</span></span><br /><br /> <span data-ttu-id="d8ae8-199">此设置可以接受最高层中有多个根元素或文本节点的 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-199">This setting accepts XML data that has multiple root elements or text nodes at the top level.</span></span> <span data-ttu-id="d8ae8-200">此检查级别确保任何处理器可以将正在读取的流作为 XML 1.0 外部分析的实体使用。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-200">This level of checking ensures that any processor can consume the stream being read as an XML 1.0 external parsed entity.</span></span><br /><br /> <span data-ttu-id="d8ae8-201">文档片段中不允许 DTD 信息。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-201">DTD information isn't allowed in document fragments.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Auto>|<span data-ttu-id="d8ae8-202">指定的 XML 编写器应确定的一致性检查基于传入数据的级别。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-202">Specifies that the XML writer should determine the level of conformance checking based on the incoming data.</span></span> <span data-ttu-id="d8ae8-203">当你不知道是否生成的 XML 将格式正确的 XML 文档或片段时，此设置可以很有用。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-203">This setting can be useful when you don't know whether the generated XML will be a well-formed XML document or a fragment.</span></span><br /><br /> <span data-ttu-id="d8ae8-204">在下列情况下应用文档一致性检查：</span><span class="sxs-lookup"><span data-stu-id="d8ae8-204">Document conformance checking is applied in the following cases:</span></span><br /><br /> <span data-ttu-id="d8ae8-205">-如果<xref:System.Xml.XmlWriter.WriteStartDocument%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-205">-   If the <xref:System.Xml.XmlWriter.WriteStartDocument%2A> method is called.</span></span><br /><span data-ttu-id="d8ae8-206">-如果写入 DTD 信息。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-206">-   If DTD information is written.</span></span><br /><br /> <span data-ttu-id="d8ae8-207">如果 XML 数据包含以下方法之一，将应用片断一致性检查：</span><span class="sxs-lookup"><span data-stu-id="d8ae8-207">Fragment conformance checking is applied if the XML data contains one of these:</span></span><br /><br /> <span data-ttu-id="d8ae8-208">在根级别的文本、 CDATA 或 EntityReference 节点。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-208">-   Text, CDATA, or EntityReference node at the root level.</span></span><br /><span data-ttu-id="d8ae8-209">的在根级别多个元素。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-209">-   More than one element at the root level.</span></span><br /><span data-ttu-id="d8ae8-210">的在根级别任何元素。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-210">-   No element at the root level.</span></span><br /><br /> <span data-ttu-id="d8ae8-211">如果存在冲突，例如在根级别尝试写入文本节点和 DTD 时，将引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-211">An <xref:System.Xml.XmlException> is thrown if there is a conflict, such as when you try to write a text node and a DTD at the root level.</span></span><br /><br /> <span data-ttu-id="d8ae8-212">如果你包装另一个<xref:System.Xml.XmlWriter>对象，在外部对象不执行任何其他一致性检查; 这从左到基础对象。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-212">If you are wrapping another <xref:System.Xml.XmlWriter> object, the outer object doesn't do any additional conformance checking; this is left to the underlying object.</span></span>|  
  
 <span data-ttu-id="d8ae8-213">如果 XML 编写器检测到违反指定的一致性级别的任何信息，它会引发异常。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-213">If the XML writer detects any information that would violate the specified level of conformance, it throws an exception.</span></span> <span data-ttu-id="d8ae8-214">在某些情况下，XML 编写器会自动更正一致性错误。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-214">In some cases, the XML writer automatically corrects the conformance error.</span></span> <span data-ttu-id="d8ae8-215">例如，编写器关闭闭合的属性而不引发异常。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-215">For example, the writer closes an unclosed attribute without throwing an exception.</span></span> <span data-ttu-id="d8ae8-216">下表显示了各种一致性冲突将在每个设置得到处理。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-216">The following table shows how various conformance violations are handled in each setting.</span></span>  
  
|<span data-ttu-id="d8ae8-217">条件</span><span class="sxs-lookup"><span data-stu-id="d8ae8-217">Condition</span></span>|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="d8ae8-218">找到 DTD 信息。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-218">DTD information is found.</span></span>|<span data-ttu-id="d8ae8-219">不为此设置的冲突。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-219">Not a violation for this setting.</span></span> <span data-ttu-id="d8ae8-220">但是，XML 编写器不会检查 DTD;用户必须确保 DTD 是格式正确。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-220">However, the XML writer doesn't check the DTD; the user must ensure that the DTD is well-formed.</span></span>|<span data-ttu-id="d8ae8-221"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-221"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-222">应用文档一致性检查。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-222">Document conformance checking is applied.</span></span>|  
|<span data-ttu-id="d8ae8-223">调用 <xref:System.Xml.XmlWriter.WriteStartDocument%2A>。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-223"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called.</span></span>|<span data-ttu-id="d8ae8-224">不被视为违反了为此设置。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-224">Not considered a violation for this setting.</span></span>|<span data-ttu-id="d8ae8-225"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-225"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-226">应用文档一致性检查。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-226">Document conformance checking is applied.</span></span>|  
|<span data-ttu-id="d8ae8-227">多次调用了 <xref:System.Xml.XmlWriter.WriteStartDocument%2A>。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-227"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called multiple times.</span></span>|<span data-ttu-id="d8ae8-228"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-228"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-229"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-229"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-230"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-230"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="d8ae8-231">一个文本值将显示在顶级 （不会低于元素或属性节点）。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-231">A text value appears at the top level (not below an element or attribute node).</span></span>|<span data-ttu-id="d8ae8-232"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-232"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-233">不被视为冲突。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-233">Not considered a violation.</span></span>|<span data-ttu-id="d8ae8-234">应用片断一致性检查。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-234">Fragment conformance checking is applied.</span></span>|  
|<span data-ttu-id="d8ae8-235">多个元素或没有元素出现在最高级别。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-235">Multiple elements or no elements appear at the top level.</span></span>|<span data-ttu-id="d8ae8-236"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-236"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-237">不被视为冲突。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-237">Not considered a violation.</span></span>|<span data-ttu-id="d8ae8-238">应用片断一致性检查。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-238">Fragment conformance checking is applied.</span></span>|  
|<span data-ttu-id="d8ae8-239">顶级项是空格。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-239">Top-level item is white space.</span></span>|<span data-ttu-id="d8ae8-240">不被视为冲突。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-240">Not considered a violation.</span></span>|<span data-ttu-id="d8ae8-241">不被视为冲突。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-241">Not considered a violation.</span></span>|<span data-ttu-id="d8ae8-242">不被视为冲突。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-242">Not considered a violation.</span></span>|  
|<span data-ttu-id="d8ae8-243"><xref:System.Xml.XmlWriter.WriteEndAttribute%2A> 未调用，以便终止属性节点。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-243"><xref:System.Xml.XmlWriter.WriteEndAttribute%2A> isn't called to end an attribute node.</span></span>|<span data-ttu-id="d8ae8-244">修复由 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-244">Fixed by XML writer.</span></span>|<span data-ttu-id="d8ae8-245">修复由 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-245">Fixed by XML writer.</span></span>|<span data-ttu-id="d8ae8-246">修复由 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-246">Fixed by XML writer.</span></span>|  
|<span data-ttu-id="d8ae8-247">XML 编写器处于嵌套不正确的状态 (例如，<xref:System.Xml.XmlWriter.WriteStartElement%2A>调用后跟<xref:System.Xml.XmlWriter.WriteEndAttribute%2A>)。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-247">The XML writer is in an improperly nested state (for example, a <xref:System.Xml.XmlWriter.WriteStartElement%2A> call is followed by a <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).</span></span>|<span data-ttu-id="d8ae8-248"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-248"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-249"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-249"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-250"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-250"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="d8ae8-251">顶级项是一个特性。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-251">Top-level item is an attribute.</span></span>|<span data-ttu-id="d8ae8-252"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-252"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-253"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-253"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-254"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-254"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="d8ae8-255">发现多个连续的文本节点。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-255">Multiple, contiguous text nodes are found.</span></span>|<span data-ttu-id="d8ae8-256">不会被视为冲突，但它是要串联文本节点的用户的责任。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-256">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|<span data-ttu-id="d8ae8-257">不会被视为冲突，但它是要串联文本节点的用户的责任。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-257">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|<span data-ttu-id="d8ae8-258">不会被视为冲突，但它是要串联文本节点的用户的责任。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-258">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|  
|<span data-ttu-id="d8ae8-259">相同的命名空间前缀在元素中声明两次。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-259">The same namespace prefix is declared twice in an element.</span></span>|<span data-ttu-id="d8ae8-260">XML 编写器生成第二个命名空间的新前缀。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-260">The XML writer generates a new prefix for the second namespace.</span></span>|<span data-ttu-id="d8ae8-261">XML 编写器生成第二个命名空间的新前缀。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-261">The XML writer generates a new prefix for the second namespace.</span></span>|<span data-ttu-id="d8ae8-262">XML 编写器生成第二个命名空间的新前缀。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-262">The XML writer generates a new prefix for the second namespace.</span></span>|  
|<span data-ttu-id="d8ae8-263"><xref:System.Xml.XmlWriter.WriteStartElement%2A> 指定前缀和不在该范围内声明的命名空间或前缀都与不同的命名空间关联。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-263"><xref:System.Xml.XmlWriter.WriteStartElement%2A> specifies a prefix and a namespace that isn't declared within that scope, or the prefix is associated with a different namespace.</span></span>|<span data-ttu-id="d8ae8-264">XML 编写器写出必要的命名空间节点。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-264">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="d8ae8-265">XML 编写器写出必要的命名空间节点。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-265">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="d8ae8-266">XML 编写器写出必要的命名空间节点。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-266">The XML writer writes the necessary namespace node.</span></span>|  
|<span data-ttu-id="d8ae8-267"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 指定前缀和不在该范围内声明的命名空间。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-267"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace that isn't declared within that scope.</span></span>|<span data-ttu-id="d8ae8-268">XML 编写器写出必要的命名空间节点。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-268">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="d8ae8-269">XML 编写器写出必要的命名空间节点。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-269">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="d8ae8-270">XML 编写器写出必要的命名空间节点。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-270">The XML writer writes the necessary namespace node.</span></span>|  
|<span data-ttu-id="d8ae8-271"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 指定了前缀和命名空间中，但前缀是与不同的范围内命名空间关联。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-271"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace, but the prefix is associated with a different in-scope namespace.</span></span>|<span data-ttu-id="d8ae8-272">XML 编写器将忽略指定的前缀，并查找正确的前缀或生成新的前缀。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-272">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|<span data-ttu-id="d8ae8-273">XML 编写器将忽略指定的前缀，并查找正确的前缀或生成新的前缀。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-273">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|<span data-ttu-id="d8ae8-274">XML 编写器将忽略指定的前缀，并查找正确的前缀或生成新的前缀。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-274">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|  
|<span data-ttu-id="d8ae8-275"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> 用于写入元素内容的范围内使用不存在的命名空间。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-275"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write element content by using a namespace that doesn't exist within the scope.</span></span>|<span data-ttu-id="d8ae8-276"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-276"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-277"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-277"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-278"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-278"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="d8ae8-279"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> 用于写入属性内容通过作用域内不存在的命名空间。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-279"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write attribute content by using a namespace that doesn't exist within the scope.</span></span>|<span data-ttu-id="d8ae8-280">XML 编写器写入的必要的命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-280">The XML writer writes the necessary namespace declaration.</span></span>|<span data-ttu-id="d8ae8-281">XML 编写器写入的必要的命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-281">The XML writer writes the necessary namespace declaration.</span></span>|<span data-ttu-id="d8ae8-282">XML 编写器写入的必要的命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-282">The XML writer writes the necessary namespace declaration.</span></span>|  
|<span data-ttu-id="d8ae8-283">`xml:space`属性不包含有效的值。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-283">The `xml:space` attribute doesn't contain a valid value.</span></span>|<span data-ttu-id="d8ae8-284"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-284"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-285"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-285"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-286"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-286"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="d8ae8-287">遇到无效的名称。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-287">An invalid name is encountered.</span></span>|<span data-ttu-id="d8ae8-288"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-288"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-289"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-289"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-290"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-290"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="d8ae8-291">`xml`前缀到 URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-291">The `xml` prefix isn't matched to a URI.</span></span>|<span data-ttu-id="d8ae8-292">这种类型的冲突不会检查 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-292">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="d8ae8-293">这种类型的冲突不会检查 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-293">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="d8ae8-294">这种类型的冲突不会检查 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-294">The XML writer doesn't check for this type of violation.</span></span>|  
|<span data-ttu-id="d8ae8-295">`xml`前缀不符合http://www.w3.org/XML/1998/namespaceURI。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-295">The `xml` prefix isn't matched to the http://www.w3.org/XML/1998/namespace URI.</span></span>|<span data-ttu-id="d8ae8-296"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-296"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-297"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-297"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-298"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-298"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="d8ae8-299">`xmlns`前缀或本地名称不匹配到的 URI。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-299">The `xmlns` prefix or local name isn't matched to a URI.</span></span>|<span data-ttu-id="d8ae8-300">这种类型的冲突不会检查 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-300">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="d8ae8-301">这种类型的冲突不会检查 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-301">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="d8ae8-302">这种类型的冲突不会检查 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-302">The XML writer doesn't check for this type of violation.</span></span>|  
|<span data-ttu-id="d8ae8-303">`xmlns`前缀或本地名称不匹配到http://www.w3.org/2000/xmlnsURI。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-303">The `xmlns` prefix or local name isn't matched to the http://www.w3.org/2000/xmlns URI.</span></span>|<span data-ttu-id="d8ae8-304"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-304"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-305"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-305"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="d8ae8-306"><xref:System.Xml.XmlException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-306"><xref:System.Xml.XmlException> is thrown.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d8ae8-307">下面的示例将 XML 片段写入内存流。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-307">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotEscapeUriAttributes">
      <MemberSignature Language="C#" Value="public bool DoNotEscapeUriAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotEscapeUriAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotEscapeUriAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotEscapeUriAttributes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-308">获取或设置一个值，该值指示 <see cref="T:System.Xml.XmlWriter" /> 是否未转义 URI 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-308">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> does not escape URI attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-309">
            <see langword="true" /> 如果<see cref="T:System.Xml.XmlWriter" />未转义 URI 属性; 否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-309">
              <see langword="true" /> if the <see cref="T:System.Xml.XmlWriter" /> does not escape URI attributes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d8ae8-310">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-310">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-311">获取或设置要使用的文本编码的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-311">Gets or sets the type of text encoding to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-312">要使用的文本编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-312">The text encoding to use.</span>
          </span>
          <span data-ttu-id="d8ae8-313">默认值为 <see langword="Encoding.UTF8" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-313">The default is <see langword="Encoding.UTF8" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-314"><xref:System.Xml.XmlWriter>在一次，而不是逐个字符进行编码的字符的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-314">The <xref:System.Xml.XmlWriter> encodes a buffer of characters all at once, rather than character by character.</span></span> <span data-ttu-id="d8ae8-315">将引发异常<xref:System.Xml.XmlWriter.Flush%2A>遇到任何编码错误时调用方法。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-315">An exception is thrown when the <xref:System.Xml.XmlWriter.Flush%2A> method is called if any encoding errors are encountered.</span></span>  
  
 <span data-ttu-id="d8ae8-316"><xref:System.Xml.XmlWriterSettings.Encoding%2A>属性仅适用于<xref:System.Xml.XmlWriter>创建使用指定的实例<xref:System.IO.Stream>或包含指定的文件名称。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-316">The <xref:System.Xml.XmlWriterSettings.Encoding%2A> property only applies to the <xref:System.Xml.XmlWriter> instances that are created either with the specified <xref:System.IO.Stream> or with the specified file name.</span></span> <span data-ttu-id="d8ae8-317">如果<xref:System.Xml.XmlWriter>创建实例与指定<xref:System.IO.TextWriter>、<xref:System.Xml.XmlWriterSettings.Encoding%2A>属性进行编码的基础中被重写<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-317">If the <xref:System.Xml.XmlWriter> instance is created with the specified <xref:System.IO.TextWriter>, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is overridden by the encoding of the underlying <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="d8ae8-318">例如，如果此属性设置为 Unicode (utf-16) 上，为特定<xref:System.Xml.XmlWriter>，但基础编写器<xref:System.IO.StreamWriter>(它派生自<xref:System.IO.TextWriter>) 使用设置为 UTF8 其编码，则输出将为 utf-8 编码。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-318">For example, if this property is set to Unicode (UTF-16) for a particular <xref:System.Xml.XmlWriter>, but the underlying writer is a <xref:System.IO.StreamWriter> (which derives from <xref:System.IO.TextWriter>) with its encoding set to UTF8, the output will be UTF-8 encoded.</span></span>  
  
 <span data-ttu-id="d8ae8-319">如果<xref:System.Xml.XmlWriter>使用其他输出参数，创建实例<xref:System.Xml.XmlWriterSettings.Encoding%2A>忽略属性。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-319">If the <xref:System.Xml.XmlWriter> instance is created with other output parameters, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is ignored.</span></span>  
  
 <span data-ttu-id="d8ae8-320">如下示例中：</span><span class="sxs-lookup"><span data-stu-id="d8ae8-320">In the following example:</span></span>  
  
-   <span data-ttu-id="d8ae8-321"><xref:System.Xml.XmlWriterSettings.Encoding%2A> 的默认值为 `Encoding.UTF8`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-321">The default value of <xref:System.Xml.XmlWriterSettings.Encoding%2A> is `Encoding.UTF8`.</span></span>  
  
-   <span data-ttu-id="d8ae8-322"><xref:System.IO.StreamWriter>设置为`Encoding.Unicode`和<xref:System.IO.StreamWriter>的编码重写<xref:System.Xml.XmlWriterSettings.Encoding%2A>设置。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-322">The <xref:System.IO.StreamWriter> is set to `Encoding.Unicode` and the <xref:System.IO.StreamWriter>’s encoding overrides the <xref:System.Xml.XmlWriterSettings.Encoding%2A> setting.</span></span>  
  
-   <span data-ttu-id="d8ae8-323">输出将为`Encoding.Unicode`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-323">The output will be `Encoding.Unicode`.</span></span>  
  
```csharp  
using (StreamWriter output =  
    new StreamWriter(new FileStream("Xml01.xml", FileMode.Create), Encoding.Unicode))  
{  
    using (XmlWriter xmlWriter =  
        XmlWriter.Create(output, new XmlWriterSettings()))  
    {  
        xmlWriter.WriteStartDocument();  
        xmlWriter.WriteStartElement("Root");  
        xmlWriter.WriteEndElement();  
        xmlWriter.WriteEndDocument();  
    }  
}  
```  
  
> [!IMPORTANT]
>  <span data-ttu-id="d8ae8-324">不接受<xref:System.Text.Encoding>不受信任源中的对象。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-324">Do not accept an <xref:System.Text.Encoding> object from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ae8-325">下面的示例将 XML 片段写入内存流。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-325">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Indent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-326">获取或设置指示是否缩进元素的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-326">Gets or sets a value indicating whether to indent elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-327">如果将各元素分别写入新行并将其缩进，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-327">
              <see langword="true" /> to write individual elements on new lines and indent; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d8ae8-328">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-328">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-329">此属性仅适用于<xref:System.Xml.XmlWriter>实例输出文本内容; 否则，将忽略此设置。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-329">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
 <span data-ttu-id="d8ae8-330">只要该元素不包含混合的内容，则将缩进元素。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-330">The elements are indented as long as the element does not contain mixed content.</span></span> <span data-ttu-id="d8ae8-331">一次<xref:System.Xml.XmlWriter.WriteString%2A>或<xref:System.Xml.XmlWriter.WriteWhitespace%2A>调用方法来写出混合的元素内容，<xref:System.Xml.XmlWriter>停止缩进。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-331">Once the <xref:System.Xml.XmlWriter.WriteString%2A> or <xref:System.Xml.XmlWriter.WriteWhitespace%2A> method is called to write out a mixed element content, the <xref:System.Xml.XmlWriter> stops indenting.</span></span> <span data-ttu-id="d8ae8-332">缩进恢复后关闭混合内容元素。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-332">The indenting resumes once the mixed content element is closed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ae8-333">下面的示例创建<xref:System.Xml.XmlWriter>用于缩进制表符的对象。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-333">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentChars">
      <MemberSignature Language="C#" Value="public string IndentChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.IndentChars" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-334">获取或设置缩进时要使用的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-334">Gets or sets the character string to use when indenting.</span>
          </span>
          <span data-ttu-id="d8ae8-335">在 <see cref="P:System.Xml.XmlWriterSettings.Indent" /> 属性设置为 <see langword="true" /> 时使用此设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-335">This setting is used when the <see cref="P:System.Xml.XmlWriterSettings.Indent" /> property is set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-336">缩进时要使用的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-336">The character string to use when indenting.</span>
          </span>
          <span data-ttu-id="d8ae8-337">它可以设置为任何字符串值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-337">This can be set to any string value.</span>
          </span>
          <span data-ttu-id="d8ae8-338">但是，为了确保 XML 有效，应该只指定有效的空格字符，例如空格、制表符、回车符或换行符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-338">However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds.</span>
          </span>
          <span data-ttu-id="d8ae8-339">默认值为两个空格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-339">The default is two spaces.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-340">此属性仅适用于<xref:System.Xml.XmlWriter>实例输出文本内容; 否则，将忽略此设置。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-340">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span> <span data-ttu-id="d8ae8-341"><xref:System.Xml.XmlWriter>缩进字符将导致无效的 XML 时引发异常。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-341">The <xref:System.Xml.XmlWriter> throws an exception if the indent characters would result in invalid XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ae8-342">下面的示例创建<xref:System.Xml.XmlWriter>用于缩进制表符的对象。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-342">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8ae8-343">分配给 <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> 的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-343">The value assigned to the <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NamespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NamespaceHandling NamespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NamespaceHandling NamespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceHandling As NamespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NamespaceHandling NamespaceHandling { System::Xml::NamespaceHandling get(); void set(System::Xml::NamespaceHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.NamespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-344">获取或设置一个值，该值指示在写入 XML 内容时 <see cref="T:System.Xml.XmlWriter" /> 是否应移除重复的命名空间声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-344">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> should remove duplicate namespace declarations when writing XML content.</span>
          </span>
          <span data-ttu-id="d8ae8-345">写入器的默认行为是输出写入器的命名空间解析程序中存在的所有命名空间声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-345">The default behavior is for the writer to output all namespace declarations that are present in the writer's namespace resolver.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-346">用于指定是否在 <see cref="T:System.Xml.NamespaceHandling" /> 中移除重复的命名空间声明的 <see cref="T:System.Xml.XmlWriter" /> 枚举。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-346">The <see cref="T:System.Xml.NamespaceHandling" /> enumeration used to specify whether to remove duplicate namespace declarations in the <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public string NewLineChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLineChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-347">获取或设置要用于换行符的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-347">Gets or sets the character string to use for line breaks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-348">要用于换行符的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-348">The character string to use for line breaks.</span>
          </span>
          <span data-ttu-id="d8ae8-349">它可以设置为任何字符串值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-349">This can be set to any string value.</span>
          </span>
          <span data-ttu-id="d8ae8-350">但是，为了确保 XML 有效，应该只指定有效的空格字符，例如空格、制表符、回车符或换行符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-350">However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds.</span>
          </span>
          <span data-ttu-id="d8ae8-351">默认值是<c>\r\n</c> （回车符返回，新行）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-351">The default is <c>\r\n</c> (carriage return, new line).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-352">此属性仅适用于<xref:System.Xml.XmlWriter>实例输出文本内容; 否则，将忽略此设置。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-352">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span> <span data-ttu-id="d8ae8-353"><xref:System.Xml.XmlWriter>行中断符将导致无效的 XML 时引发异常。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-353">The <xref:System.Xml.XmlWriter> throws an exception if the line break characters would result in invalid XML.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8ae8-354">分配给 <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> 的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-354">The value assigned to the <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewLineHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NewLineHandling NewLineHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NewLineHandling NewLineHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineHandling As NewLineHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NewLineHandling NewLineHandling { System::Xml::NewLineHandling get(); void set(System::Xml::NewLineHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.NewLineHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-355">获取或设置一个值，该值指示是否将输出中的换行符规范化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-355">Gets or sets a value indicating whether to normalize line breaks in the output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-356">
            <see cref="T:System.Xml.NewLineHandling" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-356">One of the <see cref="T:System.Xml.NewLineHandling" /> values.</span>
          </span>
          <span data-ttu-id="d8ae8-357">默认值为 <see cref="F:System.Xml.NewLineHandling.Replace" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-357">The default is <see cref="F:System.Xml.NewLineHandling.Replace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-358">此设置在写入文本内容或属性的值时适用。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-358">This setting applies when writing text content or attribute values.</span></span> <span data-ttu-id="d8ae8-359">每个<xref:System.Xml.NewLineHandling>值如下所述：</span><span class="sxs-lookup"><span data-stu-id="d8ae8-359">Each of the <xref:System.Xml.NewLineHandling> values is described below:</span></span>  
  
-   <span data-ttu-id="d8ae8-360"><xref:System.Xml.NewLineHandling.Entitize>设置告知<xref:System.Xml.XmlWriter>来替换不会规范化否则保留的新行字符<xref:System.Xml.XmlReader>与字符实体。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-360">The <xref:System.Xml.NewLineHandling.Entitize> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters that would not be otherwise preserved by a normalizing <xref:System.Xml.XmlReader> with character entities.</span></span> <span data-ttu-id="d8ae8-361">这是非常有用的往返规范化读取输出的位置<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-361">This is useful in round-trip scenarios where the output is read by a normalizing <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="d8ae8-362">其他规范化规则适用于属性值，在往返过程自`\t`，`\n`和`\r`用属性值时在规范化中空格替换<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-362">Additional normalization rules apply for attribute values when round tripping since `\t`, `\n` and `\r` are replaced with a space in attribute values when normalized in an <xref:System.Xml.XmlReader>.</span></span>  
  
-   <span data-ttu-id="d8ae8-363"><xref:System.Xml.NewLineHandling.Replace>设置告知<xref:System.Xml.XmlWriter>来替换与新行字符`\r\n`，这是由 Microsoft Windows 操作系统的新行格式。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-363">The <xref:System.Xml.NewLineHandling.Replace> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters with `\r\n`, which is the new line format used by the Microsoft Windows operating system.</span></span> <span data-ttu-id="d8ae8-364">这有助于确保该文件可以正确显示记事本或 Microsoft Word 应用程序。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-364">This helps to ensure that the file can be correctly displayed by the Notepad or Microsoft Word applications.</span></span> <span data-ttu-id="d8ae8-365">此设置还将在属性中的新行替换为要保留这些字符的字符实体。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-365">This setting also replaces new lines in attributes with character entities to preserve the characters.</span></span> <span data-ttu-id="d8ae8-366">这是默认值。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-366">This is the default value.</span></span>  
  
-   <span data-ttu-id="d8ae8-367"><xref:System.Xml.NewLineHandling.None>设置告知<xref:System.Xml.XmlWriter>将保持不变的输入。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-367">The <xref:System.Xml.NewLineHandling.None> setting tells the <xref:System.Xml.XmlWriter> to leave the input unchanged.</span></span> <span data-ttu-id="d8ae8-368">如果不需要任何新行处理，使用此设置。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-368">This setting is used when you not want any new-line processing.</span></span> <span data-ttu-id="d8ae8-369">这是有用的当读取输出<xref:System.Xml.XmlReader>，不会执行任何规范化操作 (例如，<xref:System.Xml.XmlTextReader>使用默认设置。)</span><span class="sxs-lookup"><span data-stu-id="d8ae8-369">This is useful when the output is read by an <xref:System.Xml.XmlReader> that does not do any normalization (for example, an <xref:System.Xml.XmlTextReader> with default settings.)</span></span>  
  
 <span data-ttu-id="d8ae8-370">下表显示的输出<xref:System.Xml.XmlWriter.WriteString%2A>方法时提供的输入值，具体取决于<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-370">The following tables show the output of the <xref:System.Xml.XmlWriter.WriteString%2A> method when supplied with the input value depending on the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property setting.</span></span> <span data-ttu-id="d8ae8-371">表格显示输出显示在写入文本内容时，还在写入属性值时。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-371">The tables show the output when writing text content and also when writing an attribute value.</span></span>  
  
 `Text Node Value:`  
  
||<span data-ttu-id="d8ae8-372">\r\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-372">\r\n</span></span>|<span data-ttu-id="d8ae8-373">\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-373">\n</span></span>|<span data-ttu-id="d8ae8-374">\r</span><span class="sxs-lookup"><span data-stu-id="d8ae8-374">\r</span></span>|<span data-ttu-id="d8ae8-375">\t</span><span class="sxs-lookup"><span data-stu-id="d8ae8-375">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="d8ae8-376">Entitize</span><span class="sxs-lookup"><span data-stu-id="d8ae8-376">Entitize</span></span>|<span data-ttu-id="d8ae8-377">&#D;\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-377">&#D;\n</span></span>|<span data-ttu-id="d8ae8-378">\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-378">\n</span></span>|<span data-ttu-id="d8ae8-379">&#D;</span><span class="sxs-lookup"><span data-stu-id="d8ae8-379">&#D;</span></span>|<span data-ttu-id="d8ae8-380">\t</span><span class="sxs-lookup"><span data-stu-id="d8ae8-380">\t</span></span>|  
|<span data-ttu-id="d8ae8-381">替换</span><span class="sxs-lookup"><span data-stu-id="d8ae8-381">Replace</span></span>|<span data-ttu-id="d8ae8-382">\r\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-382">\r\n</span></span>|<span data-ttu-id="d8ae8-383">\r\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-383">\r\n</span></span>|<span data-ttu-id="d8ae8-384">\r\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-384">\r\n</span></span>|<span data-ttu-id="d8ae8-385">\t</span><span class="sxs-lookup"><span data-stu-id="d8ae8-385">\t</span></span>|  
|<span data-ttu-id="d8ae8-386">无</span><span class="sxs-lookup"><span data-stu-id="d8ae8-386">None</span></span>|<span data-ttu-id="d8ae8-387">\r\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-387">\r\n</span></span>|<span data-ttu-id="d8ae8-388">\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-388">\n</span></span>|<span data-ttu-id="d8ae8-389">\r</span><span class="sxs-lookup"><span data-stu-id="d8ae8-389">\r</span></span>|<span data-ttu-id="d8ae8-390">\t</span><span class="sxs-lookup"><span data-stu-id="d8ae8-390">\t</span></span>|  
  
 `Attribute Value:`  
  
||<span data-ttu-id="d8ae8-391">\r\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-391">\r\n</span></span>|<span data-ttu-id="d8ae8-392">\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-392">\n</span></span>|<span data-ttu-id="d8ae8-393">\r</span><span class="sxs-lookup"><span data-stu-id="d8ae8-393">\r</span></span>|<span data-ttu-id="d8ae8-394">\t</span><span class="sxs-lookup"><span data-stu-id="d8ae8-394">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="d8ae8-395">Entitize</span><span class="sxs-lookup"><span data-stu-id="d8ae8-395">Entitize</span></span>|<span data-ttu-id="d8ae8-396">&#D;&#A;</span><span class="sxs-lookup"><span data-stu-id="d8ae8-396">&#D;&#A;</span></span>|<span data-ttu-id="d8ae8-397">&#A;</span><span class="sxs-lookup"><span data-stu-id="d8ae8-397">&#A;</span></span>|<span data-ttu-id="d8ae8-398">&#D;</span><span class="sxs-lookup"><span data-stu-id="d8ae8-398">&#D;</span></span>|<span data-ttu-id="d8ae8-399">&\#9;</span><span class="sxs-lookup"><span data-stu-id="d8ae8-399">&\#9;</span></span>|  
|<span data-ttu-id="d8ae8-400">替换</span><span class="sxs-lookup"><span data-stu-id="d8ae8-400">Replace</span></span>|<span data-ttu-id="d8ae8-401">&#D;&#A;</span><span class="sxs-lookup"><span data-stu-id="d8ae8-401">&#D;&#A;</span></span>|<span data-ttu-id="d8ae8-402">&#A;</span><span class="sxs-lookup"><span data-stu-id="d8ae8-402">&#A;</span></span>|<span data-ttu-id="d8ae8-403">&#D;</span><span class="sxs-lookup"><span data-stu-id="d8ae8-403">&#D;</span></span>|<span data-ttu-id="d8ae8-404">&\#9;</span><span class="sxs-lookup"><span data-stu-id="d8ae8-404">&\#9;</span></span>|  
|<span data-ttu-id="d8ae8-405">无</span><span class="sxs-lookup"><span data-stu-id="d8ae8-405">None</span></span>|<span data-ttu-id="d8ae8-406">\r\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-406">\r\n</span></span>|<span data-ttu-id="d8ae8-407">\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-407">\n</span></span>|<span data-ttu-id="d8ae8-408">\r</span><span class="sxs-lookup"><span data-stu-id="d8ae8-408">\r</span></span>|<span data-ttu-id="d8ae8-409">\t</span><span class="sxs-lookup"><span data-stu-id="d8ae8-409">\t</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="d8ae8-410"><xref:System.Xml.XmlWriter>编写 CDATA 节、 注释或处理指令中的内容时具有以下行为。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-410">The <xref:System.Xml.XmlWriter> has the following behavior when writing content within a CDATA section, comment, or processing instruction.</span></span> <span data-ttu-id="d8ae8-411">新行永远不会替换其字符实体，即使<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>属性设置为<xref:System.Xml.NewLineHandling.Entitize>。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-411">New lines are never replaced with their character entities, even when the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.Entitize>.</span></span> <span data-ttu-id="d8ae8-412">这是因为在 CDATA 节、 注释或处理指令中无法识别的字符实体。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-412">This is because character entities are not recognized in CDATA sections, comments or processing instructions.</span></span> <span data-ttu-id="d8ae8-413">如果<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>属性设置为<xref:System.Xml.NewLineHandling.None>或<xref:System.Xml.NewLineHandling.Replace>，编写一个文本节点值时的行为都将是相同。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-413">If the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.None> or <xref:System.Xml.NewLineHandling.Replace>, the behavior is the same as when writing a text node value.</span></span>  
  
 <span data-ttu-id="d8ae8-414">下表描述规范化<xref:System.Xml.XmlReader>返回为每个输入空白。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-414">The following table describes what a normalizing <xref:System.Xml.XmlReader> returns for each white space input.</span></span> <span data-ttu-id="d8ae8-415">有关详细信息，请参阅部分的 W3C 2.11 和 3.3.3 [XML 1.0 建议](http://www.w3.org/TR/REC-xml/)。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-415">For more information, see sections 2.11 and 3.3.3 of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d8ae8-416">规范化的读取器可以是任何<xref:System.Xml.XmlReader>创建对象<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-416">A normalizing reader is any <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d8ae8-417">这些对象始终执行换行符规范化和特性的完整规范化。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-417">These objects always perform line break normalization and full normalization of attributes.</span></span> <span data-ttu-id="d8ae8-418"><xref:System.Xml.XmlTextReader>对象也可以是规范化的读取器，如果它是<xref:System.Xml.XmlTextReader.Normalization%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-418">The <xref:System.Xml.XmlTextReader> object can also be a normalizing reader if it's <xref:System.Xml.XmlTextReader.Normalization%2A> property is set to `true`.</span></span>  
  
||<span data-ttu-id="d8ae8-419">\r\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-419">\r\n</span></span>|<span data-ttu-id="d8ae8-420">\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-420">\n</span></span>|<span data-ttu-id="d8ae8-421">\r</span><span class="sxs-lookup"><span data-stu-id="d8ae8-421">\r</span></span>|<span data-ttu-id="d8ae8-422">\t</span><span class="sxs-lookup"><span data-stu-id="d8ae8-422">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="d8ae8-423">文本节点值</span><span class="sxs-lookup"><span data-stu-id="d8ae8-423">Text Node Value</span></span>|<span data-ttu-id="d8ae8-424">\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-424">\n</span></span>|<span data-ttu-id="d8ae8-425">\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-425">\n</span></span>|<span data-ttu-id="d8ae8-426">\n</span><span class="sxs-lookup"><span data-stu-id="d8ae8-426">\n</span></span>|<span data-ttu-id="d8ae8-427">\t</span><span class="sxs-lookup"><span data-stu-id="d8ae8-427">\t</span></span>|  
|<span data-ttu-id="d8ae8-428">特性值</span><span class="sxs-lookup"><span data-stu-id="d8ae8-428">Attribute Value</span></span>|<span data-ttu-id="d8ae8-429">单个的空间</span><span class="sxs-lookup"><span data-stu-id="d8ae8-429">single space</span></span>|<span data-ttu-id="d8ae8-430">单个的空间</span><span class="sxs-lookup"><span data-stu-id="d8ae8-430">single space</span></span>|<span data-ttu-id="d8ae8-431">单个的空间</span><span class="sxs-lookup"><span data-stu-id="d8ae8-431">single space</span></span>|<span data-ttu-id="d8ae8-432">单个的空间</span><span class="sxs-lookup"><span data-stu-id="d8ae8-432">single space</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineOnAttributes">
      <MemberSignature Language="C#" Value="public bool NewLineOnAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewLineOnAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineOnAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NewLineOnAttributes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-433">获取或设置一个值，该值指示是否在新行上写入属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-433">Gets or sets a value indicating whether to write attributes on a new line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-434">如果将特性写入单独的行，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-434">
              <see langword="true" /> to write attributes on individual lines; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d8ae8-435">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-435">The default is <see langword="false" />.</span>
          </span>
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="d8ae8-436">如果 <see cref="P:System.Xml.XmlWriterSettings.Indent" /> 属性值为 <see langword="false" />，则此设置无效。</span>
              <span class="sxs-lookup">
                <span data-stu-id="d8ae8-436">This setting has no effect when the <see cref="P:System.Xml.XmlWriterSettings.Indent" /> property value is <see langword="false" />.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="d8ae8-437">如果 <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> 设置为 <see langword="true" />，则每个属性都会写入到一个新行并应用一个额外的缩进级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-437">When <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> is set to <see langword="true" />, each attribute is pre-pended with a new line and one extra level of indentation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-438">此属性仅适用于<xref:System.Xml.XmlWriter>实例输出文本内容; 否则，将忽略此设置。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-438">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ae8-439">下面的示例创建<xref:System.Xml.XmlWriter>，写入 XML 文件，并在新行上写入每个属性。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-439">The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.</span></span>  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 <span data-ttu-id="d8ae8-440">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="d8ae8-440">The sample produces the following output:</span></span>  
  
```  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OmitXmlDeclaration">
      <MemberSignature Language="C#" Value="public bool OmitXmlDeclaration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OmitXmlDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Property OmitXmlDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OmitXmlDeclaration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-441">获取或设置一个值，该值指示是否省略 XML 声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-441">Gets or sets a value indicating whether to omit an XML declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-442">如果省略 XML 声明，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-442">
              <see langword="true" /> to omit the XML declaration; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d8ae8-443">默认值为 <see langword="false" />，即编写 XML 声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-443">The default is <see langword="false" />, an XML declaration is written.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-444">此属性仅适用于<xref:System.Xml.XmlWriter>实例输出文本内容; 否则，将忽略此设置。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-444">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
 <span data-ttu-id="d8ae8-445">如果<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>设置为`false`，自动写入 XML 声明</span><span class="sxs-lookup"><span data-stu-id="d8ae8-445">If <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `false`, The XML declaration is written automatically</span></span>  
  
 <span data-ttu-id="d8ae8-446">如果始终编写 XML 声明<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>设置为<xref:System.Xml.ConformanceLevel.Document>，即使<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-446">The XML declaration is always written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Document>, even if <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="d8ae8-447">如果永远不会编写 XML 声明<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>设置为<xref:System.Xml.ConformanceLevel.Fragment>。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-447">The XML declaration is never written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Fragment>.</span></span> <span data-ttu-id="d8ae8-448">你可以调用<xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>显式写出 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-448">You can call <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> to explicitly write out an XML declaration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ae8-449">下面的示例将 XML 片段写入内存流。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-449">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMethod">
      <MemberSignature Language="C#" Value="public System.Xml.XmlOutputMethod OutputMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlOutputMethod OutputMethod" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputMethod As XmlOutputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlOutputMethod OutputMethod { System::Xml::XmlOutputMethod get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlOutputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-450">获取用于串行化 <see cref="T:System.Xml.XmlWriter" /> 输出的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-450">Gets the method used to serialize the <see cref="T:System.Xml.XmlWriter" /> output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-451">
            <see cref="T:System.Xml.XmlOutputMethod" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-451">One of the <see cref="T:System.Xml.XmlOutputMethod" /> values.</span>
          </span>
          <span data-ttu-id="d8ae8-452">默认值为 <see cref="F:System.Xml.XmlOutputMethod.Xml" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-452">The default is <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-453">此属性指定用于将输出序列化为的方法。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-453">This property specifies the method used to serialize the output.</span></span> <span data-ttu-id="d8ae8-454">可以使用 HTML 规则、 XML 1.0 规则等序列化输出。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-454">The output can be serialized using the HTML rules, the XML 1.0 rules, and so on.</span></span> <span data-ttu-id="d8ae8-455">此设置由 XSLT 处理器设置，并且由 Visual Studio 内部使用。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-455">This setting is set by the XSLT processor and is used internally by Visual Studio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-456">将设置类的成员重置为各自的默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-456">Resets the members of the settings class to their default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-457">下表显示的默认属性值的实例<xref:System.Xml.XmlWriterSettings>。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-457">The following table shows the default property values for an instance of <xref:System.Xml.XmlWriterSettings>.</span></span>  
  
|<span data-ttu-id="d8ae8-458">Property</span><span class="sxs-lookup"><span data-stu-id="d8ae8-458">Property</span></span>|<span data-ttu-id="d8ae8-459">初始值</span><span class="sxs-lookup"><span data-stu-id="d8ae8-459">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|<span data-ttu-id="d8ae8-460">`false`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-460">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="d8ae8-461">`true`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-461">`true`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|<span data-ttu-id="d8ae8-462">`false`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-462">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="d8ae8-463"><xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-463"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="d8ae8-464">`Encoding.UTF8`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-464">`Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="d8ae8-465">`false`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-465">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="d8ae8-466">两个空格。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-466">Two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="d8ae8-467">`\r\n`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-467">`\r\n`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="d8ae8-468"><xref:System.Xml.NewLineHandling.Replace>。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-468"><xref:System.Xml.NewLineHandling.Replace>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="d8ae8-469">`false`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-469">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="d8ae8-470">`false`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-470">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="d8ae8-471">`true`。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-471">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentOnClose">
      <MemberSignature Language="C#" Value="public bool WriteEndDocumentOnClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteEndDocumentOnClose" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEndDocumentOnClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteEndDocumentOnClose { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ae8-472">获取或设置一个值，该值指示在调用 <see cref="M:System.Xml.XmlWriter.Close" /> 方法时 <see cref="T:System.Xml.XmlWriter" /> 是否会向所有未关闭的元素标记添加结束标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-472">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> will add closing tags to all unclosed element tags when the <see cref="M:System.Xml.XmlWriter.Close" /> method is called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ae8-473">如果将抛售所有未关闭元素标记，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-473">
              <see langword="true" /> if all unclosed element tags will be closed out; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d8ae8-474">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ae8-474">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ae8-475">如果将此标志设置为`false`，输出 XML 文件可能不是格式正确。</span><span class="sxs-lookup"><span data-stu-id="d8ae8-475">If you set this flag to `false`, the output XML file may not be well-formed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>