<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlDataDocument.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f828c165288c4fb1cc2705e29b4a2f0a84315396.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f828c165288c4fb1cc2705e29b4a2f0a84315396</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlDataDocument">
          <source>Allows structured data to be stored, retrieved, and manipulated through a relational <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">允许通过相关的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 存储、检索和操作结构化数据。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>This class extends <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</source>
          <target state="translated">此类扩展<ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>It enables you to load either relational data or XML data and manipulate that data using the World Wide Web Consortium (W3C) Document Object Model (DOM).</source>
          <target state="translated">这样可以加载关系数据或 XML 数据和操作使用 World Wide Web Consortium (W3C) 文档对象模型 (DOM) 该数据。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>The DOM presents data as a hierarchy of node objects.</source>
          <target state="translated">DOM 显示数据，并且节点对象的层次结构。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>Because <ph id="ph1">`XmlDataDocument`</ph> implements the <ph id="ph2">&lt;xref:System.Xml.XPath.IXPathNavigable&gt;</ph> interface, it can also be used as the source document for the <ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> class.</source>
          <target state="translated">因为<ph id="ph1">`XmlDataDocument`</ph>实现<ph id="ph2">&lt;xref:System.Xml.XPath.IXPathNavigable&gt;</ph>接口，还可作为的源文档<ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source><ph id="ph1">`XmlDataDocument`</ph> has a close affiliation with the <ph id="ph2">`DataSet`</ph> class, which provides a relational view of the loaded XML data.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> 已关闭的附属关系具有<ph id="ph2">`DataSet`</ph>类，该类提供加载的 XML 数据的关系视图。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>Any changes made to the <ph id="ph1">`XmlDataDocument`</ph> are reflected in the <ph id="ph2">`DataSet`</ph> and vice versa.</source>
          <target state="translated">对所做任何更改<ph id="ph1">`XmlDataDocument`</ph>反映在<ph id="ph2">`DataSet`</ph>，反之亦然。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>To load a <ph id="ph1">`DataSet`</ph> with XML data, use <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> to build a relational mapping.</source>
          <target state="translated">若要加载<ph id="ph1">`DataSet`</ph>用于 XML 数据，使用<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>生成关系映射。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>The XML data can then be loaded using <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument.Load%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlDocument.LoadXml%2A&gt;</ph>.</source>
          <target state="translated">然后可以使用加载的 XML 数据<ph id="ph1">&lt;xref:System.Xml.XmlDataDocument.Load%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Xml.XmlDocument.LoadXml%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>To load relational data, specify the <ph id="ph1">`DataSet`</ph> containing the relational data as the parameter in the <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">若要加载关系数据，指定<ph id="ph1">`DataSet`</ph>作为中的参数中包含的关系数据<ph id="ph2">&lt;xref:System.Xml.XmlDataDocument.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlDataDocument">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor">
          <source>An empty <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created and associated with the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">一个空<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>进行创建并与关联<ph id="ph2">`XmlDataDocument`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> to load into <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>.</source>
          <target state="translated">要加载到 <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> 的 <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> 初始化 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The <ph id="ph1">`XmlDataDocument`</ph> is synchronized with the specified <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph>同步具有指定<ph id="ph2">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Any data in the <ph id="ph1">`DataSet`</ph> is immediately available through the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">中的任何数据<ph id="ph1">`DataSet`</ph>立即可通过<ph id="ph2">`XmlDataDocument`</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Any changes in the <ph id="ph1">`DataSet`</ph> are propagated in the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">中的任何更改<ph id="ph1">`DataSet`</ph>在中传播<ph id="ph2">`XmlDataDocument`</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Any changes made in the <ph id="ph1">`XmlDataDocument`</ph>, provided they match the <ph id="ph2">`DataSet`</ph> schema, are propagated in the <ph id="ph3">`DataSet`</ph>.</source>
          <target state="translated">在中进行任何更改<ph id="ph1">`XmlDataDocument`</ph>、 提供它们匹配<ph id="ph2">`DataSet`</ph>架构，在中传播<ph id="ph3">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The following example loads a customer table into an <ph id="ph1">`XmlDataDocument`</ph>.</source>
          <target state="translated">下面的示例加载到 customer 表<ph id="ph1">`XmlDataDocument`</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The example uses the SQL Server 2000 Northwind database.</source>
          <target state="translated">该示例使用 SQL Server 2000 Northwind 数据库。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to recursively clone the subtree under the specified node; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to clone only the node itself.</source>
          <target state="translated">若要递归地克隆指定节点下的子树，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅克隆节点本身，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>Creates a duplicate of the current node.</source>
          <target state="translated">创建当前节点的副本。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>The cloned node.</source>
          <target state="translated">克隆的节点。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>Cloning the <ph id="ph1">`XmlDataDocument`</ph> also clones the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> schema.</source>
          <target state="translated">克隆<ph id="ph1">`XmlDataDocument`</ph>还克隆<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>架构。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>If <ph id="ph1">`deep`</ph> is set to <ph id="ph2">`false`</ph>, the cloned <ph id="ph3">`DataSet`</ph> has no data; that is, no rows.</source>
          <target state="translated">如果<ph id="ph1">`deep`</ph>设置为<ph id="ph2">`false`</ph>，克隆<ph id="ph3">`DataSet`</ph>有任何数据; 即，任何行。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>If <ph id="ph1">`deep`</ph> is set to <ph id="ph2">`true`</ph>, the cloned <ph id="ph3">`DataSet`</ph> is set with the schema and then populated with the data.</source>
          <target state="translated">如果<ph id="ph1">`deep`</ph>设置为<ph id="ph2">`true`</ph>，克隆<ph id="ph3">`DataSet`</ph>是使用架构来设置，然后填充的数据。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlNode.CloneNode%2A&gt;</ph> in the <ph id="ph2">`XmlNode`</ph> class to see a table describing how this method behaves with each of the different node types.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Xml.XmlNode.CloneNode%2A&gt;</ph>中<ph id="ph2">`XmlNode`</ph>类，以查看描述此方法与每个不同节点类型的行为方式的表。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>The following example loads a <ph id="ph1">`DataSet`</ph> into an <ph id="ph2">`XmlDataDocument`</ph> and then creates a shallow clone of the <ph id="ph3">`XmlDataDocument`</ph>.</source>
          <target state="translated">下面的示例加载<ph id="ph1">`DataSet`</ph>到<ph id="ph2">`XmlDataDocument`</ph>，然后创建的浅表克隆的<ph id="ph3">`XmlDataDocument`</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>The example uses the SQL Server 2000 Northwind database.</source>
          <target state="translated">该示例使用 SQL Server 2000 Northwind 数据库。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>The prefix of the new element.</source>
          <target state="translated">新元素的前缀。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>If String.Empty or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, there is no prefix.</source>
          <target state="translated">如果为 String.Empty 或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则没有前缀。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>The local name of the new element.</source>
          <target state="translated">新元素的本地名称。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>The namespace Uniform Resource Identifier (URI) of the new element.</source>
          <target state="translated">新元素的命名空间统一资源标识符 (URI)。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>If String.Empty or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, there is no namespaceURI.</source>
          <target state="translated">如果为 String.Empty 或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则没有 namespaceURI。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>Creates an element with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.Prefix" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.LocalName" /&gt;</ph> , and <ph id="ph3">&lt;see cref="P:System.Xml.XmlNode.NamespaceURI" /&gt;</ph>.</source>
          <target state="translated">创建具有指定 <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.Prefix" /&gt;</ph>、<ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.LocalName" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="P:System.Xml.XmlNode.NamespaceURI" /&gt;</ph> 的元素。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</source>
          <target state="translated">一个新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source><ph id="ph1">`Note to Inheritors`</ph> If you overload this function, it cannot be used for extensibility.</source>
          <target state="translated"><ph id="ph1">`Note to Inheritors`</ph> 如果重载此函数，它不能用于扩展性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>Instead, you can return an element created by the base class, in this case, <ph id="ph1">`XmlDataDocument`</ph>.</source>
          <target state="translated">相反，你可以返回基的类中，在这种情况下，创建一个元素<ph id="ph1">`XmlDataDocument`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>See the following example.</source>
          <target state="translated">请参见以下示例。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>The name of the entity reference.</source>
          <target state="translated">实体引用的名称。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> with the specified name.</source>
          <target state="translated">创建具有指定名称的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> with the specified name.</source>
          <target state="translated">具有指定名称的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> nodes cannot be created for <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> 无法为创建节点<ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>Calling this method throws an exception.</source>
          <target state="translated">调用此方法将引发异常。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>Calling this method.</source>
          <target state="translated">调用此方法。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> you want the navigator initially positioned on.</source>
          <target state="translated">希望导航器最初定位在的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this document.</source>
          <target state="translated">创建一个用于导航此文档的新 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>The <ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph> is positioned on the node specified in the <ph id="ph2">&lt;paramref name="node" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph> 定位在 <ph id="ph2">&lt;paramref name="node" /&gt;</ph> 参数中指定的节点上。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>An <ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph> used to navigate the document.</source>
          <target state="translated">用于文档导航的 <ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>The <ph id="ph1">`XPathNavigator`</ph> provides read-only, random access to data.</source>
          <target state="translated"><ph id="ph1">`XPathNavigator`</ph>提供对数据的只读的、 随机访问。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph> method.</source>
          <target state="translated">它非常适合 XSLT 转换，因为它提供作为输入机制来使用时的性能优势<ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>To see an XSLT transformation using <ph id="ph1">`XmlDataDocument`</ph> and an <ph id="ph2">`XPathNavigator`</ph>, see the <ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要查看 XSLT 转换使用<ph id="ph1">`XmlDataDocument`</ph>和<ph id="ph2">`XPathNavigator`</ph>，请参阅<ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> that provides a relational representation of the data in the <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，该数据集提供 <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph> 中数据的关系表示形式。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>A <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> that can be used to access the data in the <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph> using a relational model.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataSet" /&gt;</ph>，该数据集可用于访问使用关系模型的 <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph> 中的数据。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>The <ph id="ph1">`DataSet`</ph> enables you to access the data in the <ph id="ph2">`XmlDataDocument`</ph> using a relational model.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> ，你可以访问中的数据<ph id="ph2">`XmlDataDocument`</ph>使用关系模型。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>This means that you can handle the data as tables and views, rows and columns, relations, and so on.</source>
          <target state="translated">这意味着你可以处理数据作为表和视图、 行和列、 关系，依次类推。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>Changes made in the <ph id="ph1">`DataSet`</ph> are immediately visible in the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">中所做更改<ph id="ph1">`DataSet`</ph>中立即可见<ph id="ph2">`XmlDataDocument`</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>The following example modifies the price of a book using the <ph id="ph1">`DataSet`</ph> methods.</source>
          <target state="translated">下面的示例修改簿使用的价格<ph id="ph1">`DataSet`</ph>方法。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>The example uses the following two files as input.</source>
          <target state="translated">该示例使用下面的两个文件</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>The attribute ID to match.</source>
          <target state="translated">要匹配的属性 ID。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> with the specified ID.</source>
          <target state="translated">获取具有指定 ID 的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>This method is not supported by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> 类不支持该方法。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>Calling this method throws an exception.</source>
          <target state="translated">调用此方法将引发异常。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> with the specified ID.</source>
          <target state="translated">具有指定 ID 的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>This method is not supported by the <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> 类不支持该方法。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>Calling this method.</source>
          <target state="translated">调用此方法。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> whose associated <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> you want to retrieve.</source>
          <target state="translated">想要检索其关联 <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> 的 <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> associated with the specified <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">检索与指定 <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> 关联的 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> containing a representation of the specified <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph>.</source>
          <target state="translated">包含指定 <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> 的表示形式的 <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The following example loads a <ph id="ph1">`DataSet`</ph> into an <ph id="ph2">`XmlDataDocument`</ph> and then creates an <ph id="ph3">`XmlElement`</ph> representing the first customer record.</source>
          <target state="translated">下面的示例加载<ph id="ph1">`DataSet`</ph>到<ph id="ph2">`XmlDataDocument`</ph>，然后创建<ph id="ph3">`XmlElement`</ph>表示第一条客户记录。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The example uses the SQL Server 2000 Northwind database.</source>
          <target state="translated">该示例使用 SQL Server 2000 Northwind 数据库。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>The qualified name to match.</source>
          <target state="translated">要匹配的限定名称。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">它针对匹配节点的 <ph id="ph1">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph> 属性进行匹配。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>The special value "*" matches all tags.</source>
          <target state="translated">特殊值“*”匹配所有标记。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all descendant elements that match the specified <ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph>.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph>，它包含与指定 <ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph> 匹配的所有子代元素的列表。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all matching nodes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph>，包含所有匹配节点的列表。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>It is recommended that you use the <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph> method instead of the <ph id="ph3">&lt;xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A&gt;</ph> method.</source>
          <target state="translated">建议你使用<ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph>方法而不是<ph id="ph3">&lt;xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> whose associated <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph> you want to retrieve.</source>
          <target state="translated">想要检索其关联 <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> 的 <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> associated with the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</source>
          <target state="translated">检索与指定 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 关联的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> containing a representation of the <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph>; <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no <ph id="ph4">&lt;see langword="DataRow" /&gt;</ph> associated with the <ph id="ph5">&lt;see langword="XmlElement" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> 的表示形式的 <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph>；如果没有与 <ph id="ph3">&lt;see langword="null" /&gt;</ph> 关联的 <ph id="ph4">&lt;see langword="DataRow" /&gt;</ph>，则为 <ph id="ph5">&lt;see langword="XmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The following example modifies the price of the first book.</source>
          <target state="translated">下面的示例修改第一本图书的价格。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The example uses the following input files:</source>
          <target state="translated">该示例使用以下输入的文件：</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlDataDocument">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> using the specified data source and synchronizes the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the loaded data.</source>
          <target state="translated">使用指定的数据源加载 <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph>，然后用加载的数据同步 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">若要以查看 XML 数据，必须首先指定要用于数据映射的架构。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">这可以通过调用<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法或通过创建的表和列中的<ph id="ph2">`DataSet`</ph>手动。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">必须在调用前完成此步骤<ph id="ph1">`Load`</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> 不支持创建实体引用。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">如果数据包含实体引用<ph id="ph1">`Load`</ph>方法解析并展开任何实体引用。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>However, if you are using the <ph id="ph1">`Load`</ph> overload that takes a <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> as an argument, you must specify an <ph id="ph3">`XmlReader`</ph> that can resolve entities.</source>
          <target state="translated">但是，如果你使用<ph id="ph1">`Load`</ph>采用重载<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>作为自变量，你必须指定<ph id="ph3">`XmlReader`</ph>可以解析实体。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>The stream containing the XML document to load.</source>
          <target state="translated">包含要加载的 XML 文档的流。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> from the specified stream.</source>
          <target state="translated">从指定的流加载 <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> 不支持创建实体引用。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">如果数据包含实体引用<ph id="ph1">`Load`</ph>方法解析并展开任何实体引用。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">若要以查看 XML 数据，必须首先指定要用于数据映射的架构。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">这可以通过调用<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法或通过创建的表和列中的<ph id="ph2">`DataSet`</ph>手动。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">必须在调用前完成此步骤<ph id="ph1">`Load`</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> used to feed the XML data into the document.</source>
          <target state="translated">用于将 XML 数据输送到文档中的 <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> from the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">从指定的 <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 加载 <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> 不支持创建实体引用。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">如果数据包含实体引用<ph id="ph1">`Load`</ph>方法解析并展开任何实体引用。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">若要以查看 XML 数据，必须首先指定要用于数据映射的架构。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">这可以通过调用<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法或通过创建的表和列中的<ph id="ph2">`DataSet`</ph>手动。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">必须在调用前完成此步骤<ph id="ph1">`Load`</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>The URL of the file containing the XML document to load.</source>
          <target state="translated">文件的 URL，该文件包含要加载的 XML 文档。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> using the specified URL.</source>
          <target state="translated">使用指定的 URL 加载 <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> 不支持创建实体引用。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">如果数据包含实体引用<ph id="ph1">`Load`</ph>方法解析并展开任何实体引用。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">若要以查看 XML 数据，必须首先指定要用于数据映射的架构。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">这可以通过调用<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法或通过创建的表和列中的<ph id="ph2">`DataSet`</ph>手动。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">必须在调用前完成此步骤<ph id="ph1">`Load`</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> containing the XML document to load.</source>
          <target state="translated">包含要加载的 XML 文档的 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> from the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">从指定的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 加载 <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> 不支持创建实体引用。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the data source contains entity references, you must create an <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt;</ph> property set to EntityHandling.ExpandEntities (this is the default behavior) and pass the <ph id="ph3">`XmlValidatingReader`</ph> to the <ph id="ph4">`Load`</ph> method.</source>
          <target state="translated">如果数据源包含实体引用，则必须创建<ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>与<ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt;</ph>属性设置为 EntityHandling.ExpandEntities （这是默认行为），并将传递<ph id="ph3">`XmlValidatingReader`</ph>到<ph id="ph4">`Load`</ph>方法。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If you do not use an <ph id="ph1">`XmlValidatingReader`</ph>, the <ph id="ph2">`Load`</ph> method throws an exception.</source>
          <target state="translated">如果不使用<ph id="ph1">`XmlValidatingReader`</ph>、<ph id="ph2">`Load`</ph>方法引发异常。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`Load`</ph> method always preserves significant white space.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法总是保留有效空白。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph> property determines whether or not white space is preserved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph>属性确定是否保留空白。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The default is <ph id="ph1">`false`</ph>, white space is not preserved.</source>
          <target state="translated">默认值是<ph id="ph1">`false`</ph>，不保留空白。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the reader is in the initial state (that is, ReadState=ReadState.Initial), <ph id="ph1">`Load`</ph> consumes the entire contents of the reader and builds the DOM from what it finds.</source>
          <target state="translated">如果读取器处于初始状态 (即，ReadState=ReadState.Initial)<ph id="ph1">`Load`</ph>使用读取器的全部内容，并生成从它找到 DOM。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the reader is already positioned on some node at depth "n", then this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</source>
          <target state="translated">如果读取器已位于深度"n"在某个节点上，此方法将加载，该节点和所有后续同级直到关闭"n"深度的结束标记。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>This has the following results.</source>
          <target state="translated">这会产生下列结果。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the current node and its following siblings look similar to the following:</source>
          <target state="translated">如果当前节点及其同级以下看起来类似于以下各项：</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source><ph id="ph1">`Load`</ph> throws an exception, because a document cannot have two root-level elements.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> 引发异常，因为文档不能有两个根级元素。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the current node and its following siblings look similar to the following:</source>
          <target state="translated">如果当前节点及其同级以下看起来类似于以下各项：</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source><ph id="ph1">`Load`</ph> will succeed; however, you will have an incomplete DOM tree, because there is no root-level element.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> 将会成功;但是，你将具有不完整的 DOM 树中，因为没有根级别的元素。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>You have to add a root-level element before you save the document; otherwise, the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Save%2A&gt;</ph> method throws an exception.</source>
          <target state="translated">你必须首先保存文档; 添加根级元素否则为<ph id="ph1">&lt;xref:System.Xml.XmlDocument.Save%2A&gt;</ph>方法引发异常。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the reader is positioned on a leaf node that is invalid for the root level of a document (for example, a white space or attribute node), the reader continues to read until it is positioned on a node that can be used for the root.</source>
          <target state="translated">如果读取器定位于对于文档的根级别来说无效的叶节点（如空白或属性节点），则读取器继续读取，直到定位在可用于根的节点上。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The document begins loading at this point.</source>
          <target state="translated">文档在此时开始加载。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The following example modifies the price of a book using the <ph id="ph1">`DataSet`</ph> methods.</source>
          <target state="translated">下面的示例修改簿使用的价格<ph id="ph1">`DataSet`</ph>方法。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The example uses the following two input files.</source>
          <target state="translated">该示例使用以下两个输入的文件。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The XML being loaded contains entity references, and the reader cannot resolve entities.</source>
          <target state="translated">正在加载的 XML 包含实体引用，而该读取器不能解析实体。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>