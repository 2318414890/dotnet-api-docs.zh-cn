<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSecureResolver.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52c04793a28d1db5b342b4108181cd0e46777358a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c04793a28d1db5b342b4108181cd0e46777358a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlSecureResolver">
          <source>Helps to secure another implementation of <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> by wrapping the <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> object and restricting the resources that the underlying <ph id="ph3">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> has access to.</source>
          <target state="translated">通过包装 <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 对象和限制基础 <ph id="ph3">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 有权访问的资源，帮助保护 <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 的另一个实现。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class is the default resolver for all classes in the <ph id="ph2">&lt;xref:System.Xml&gt;</ph> namespace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 类是 <ph id="ph2">&lt;xref:System.Xml&gt;</ph> 命名空间中所有类的默认解析器。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>It is used to load XML documents and to resolve external resources such as entities, DTDs or schemas, and import or include directives.</source>
          <target state="translated">它用于加载 XML 文档和解析外部资源，如实体、 Dtd 或架构，并导入或 include 指令。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>You can override this default by specifying the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> object to use.</source>
          <target state="translated">可以通过指定重写此默认设置<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>要使用对象。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>For example, if you want to restrict the resources that the underlying <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> can access, you can use an <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated">例如，如果你想要限制的资源的基础<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>都可以访问，你可以使用<ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> wraps around a concrete implementation of <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> and restricts the resources that the underlying <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph> has access to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 回绕的具体实现<ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>并限制资源的基础<ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph>有权访问。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>For example, <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> has the ability to prohibit cross-domain redirection, which occurs from an embedded Uniform Resource Identifier (URI) reference.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>已禁止发生从嵌入的统一资源标识符 (URI) 引用的跨域重定向的能力。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>When you construct an <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object, you provide a valid <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> implementation along with a URL, an instance of an evidence object, or a permission set, which is used by the <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> to determine security.</source>
          <target state="translated">构造时<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>对象，提供有效<ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>实现，连同的 URL，evidence 对象或权限集的实例由<ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>来确定安全。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Either a <ph id="ph1">&lt;xref:System.Security.PermissionSet?displayProperty=nameWithType&gt;</ph> is generated or the existing one is used and <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=nameWithType&gt;</ph> is called on it to help secure the underlying <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph>.</source>
          <target state="translated">任一<ph id="ph1">&lt;xref:System.Security.PermissionSet?displayProperty=nameWithType&gt;</ph>生成或使用现有和<ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=nameWithType&gt;</ph>称为于该功能来帮助保护基础<ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> objects can contain sensitive information such as user credentials.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 对象可以包含敏感信息，例如用户凭据。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>You should be careful when caching <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> objects and should not pass the <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object to an untrusted component.</source>
          <target state="translated">应为缓存时请小心<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>对象，并且不应将传递<ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>到不受信任的组件的对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005.</source>
          <target state="translated">有安全基础结构的.NET Framework 公共语言运行时 (CLR) 上运行的代码和在集成在 Microsoft SQL Server 2005 内 CLR 上运行的代码中的差异。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR.</source>
          <target state="translated">这可能导致 CLR 集成是为.NET Framework CLR 以不同方式运行时使用的 SQL Server 上开发的代码的情况下。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>One of these differences affects the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> class when you have evidence that is based on a URL (that is, when you use the <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%2A&gt;</ph> constructor).</source>
          <target state="translated">其中一种差异会影响<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>类必须基于 URL 的证据时 (即，当使用<ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29&gt;</ph>方法或<ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%2A&gt;</ph>构造函数)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>The policy resolution mechanism of the SQL Server integrated CLR does not use the <ph id="ph1">&lt;xref:System.Security.Policy.Url&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Policy.Zone&gt;</ph> information.</source>
          <target state="translated">策略解析的 SQL Server 的机制集成 CLR 不使用<ph id="ph1">&lt;xref:System.Security.Policy.Url&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Policy.Zone&gt;</ph>信息。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded.</source>
          <target state="translated">相反，它会授予权限基于程序集加载时，服务器会将添加的 GUID。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>中 SQL Server 集成的 CLR，使用指定的直接提供任何所需的证据<ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>To use a secure resolver</source>
          <target state="translated">使用安全冲突解决程序</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> with the correct permission set.</source>
          <target state="translated">使用正确的权限集创建 <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object that uses the <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated">创建使用 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 对象的 <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Pass  the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method when you're creating the <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated">传递<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>对象传递给<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法在创建时<ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>To restrict access by using a URL</source>
          <target state="translated">通过使用 URL 来限制访问</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29&gt;</ph> constructor to create an <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object that is allowed to access your local intranet site only.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29&gt;</ph>构造函数来创建<ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>允许访问你本地 intranet 站点的对象。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>To restrict access by using a permission set</source>
          <target state="translated">通过使用权限集来限制访问</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> object.</source>
          <target state="translated">创建 <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Specify the URLs that you want to allow access to.</source>
          <target state="translated">指定你想要允许访问的 Url。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Add the web permissions to the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> object.</source>
          <target state="translated">将 Web 权限添加到 <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> 对象中。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29&gt;</ph> constructor to create an <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object by using the permission set.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29&gt;</ph>构造函数来创建<ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>对象使用的权限集。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%2A&gt;</ph> reference page for another example.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%2A&gt;</ph>引用另一个示例页。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>To restrict access by using evidence</source>
          <target state="translated">通过使用的证据来限制访问</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>You can restrict access by using the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29&gt;</ph> constructor and specifying <ph id="ph2">&lt;xref:System.Security.Policy.Evidence&gt;</ph>.</source>
          <target state="translated">你可以通过使用来限制访问<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29&gt;</ph>构造函数并指定<ph id="ph2">&lt;xref:System.Security.Policy.Evidence&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>The <ph id="ph1">&lt;xref:System.Security.Policy.Evidence&gt;</ph> is used to create the <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> that is applied to the underlying <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.Evidence&gt;</ph> 用于创建应用于基础 <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> 的 <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> calls <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> on the created <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> before opening any resources.</source>
          <target state="translated">在打开任何资源之前，<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 在已创建的 <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> 上调用 <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Here are some common scenarios and the type of evidence to provide for each:</source>
          <target state="translated">下面是证据的一些常见方案和每个提供类型：</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>If you are working in a fully trusted environment, use your assembly to create the evidence:</source>
          <target state="translated">如果你正处于完全可信的环境，使用您的程序集来创建证据：</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>If you are working in a semi-trusted environment, you have code or data coming from an outside source, and you know the origin of the outside source and have a verifiable URI, use the URI to create the evidence:</source>
          <target state="translated">如果您正在不完全受信任的环境中，你拥有的代码或数据来自外部源，并且您知道的源的外部源和具有可验证的 URI，使用 URI 来创建证据：</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>If you are working in a semi-trusted environment and you have code or data coming from an outside source, but you don't know the origin of the outside source, either:</source>
          <target state="translated">如果您正处于不完全受信任的环境和你提供了代码或数据来自外部源，但你不知道的源的外部源，或者：</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Set the <ph id="ph1">`evidence`</ph> parameter to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">将 <ph id="ph1">`evidence`</ph> 参数设置为 <ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>This allows no access to resources.</source>
          <target state="translated">这样将不允许对资源进行任何访问。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>If your application requires some access to resources, request evidence from the caller.</source>
          <target state="translated">如果应用程序要求对资源进行一些访问，应向调用方请求数据。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>To use the secure resolver to load an XSLT style sheet</source>
          <target state="translated">使用安全的冲突解决程序加载 XSLT 样式表</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> with the correct permission set.</source>
          <target state="translated">使用正确的权限集创建 <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Pass the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> to the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> method.</source>
          <target state="translated">将 <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 传递到 <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>This class has an inheritance demand.</source>
          <target state="translated">此类具有继承要求。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>Full trust is required to inherit from the <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> class.</source>
          <target state="translated">需要完全信任继承自<ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlSecureResolver">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>The three constructors provide three types of access restrictions:</source>
          <target state="translated">三个构造函数提供三种类型的访问限制：</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29&gt;</ph> constructor restricts access by using a URL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29&gt;</ph>构造函数来使用 URL 限制访问。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29&gt;</ph> constructor restricts access by using a permission set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29&gt;</ph>构造函数通过使用权限集限制访问。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29&gt;</ph> constructor restricts access by using evidence.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29&gt;</ph>构造函数使用的证据来限制访问。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlSecureResolver">
          <source>See the constructor reference topics for examples of these types of restrictions.</source>
          <target state="translated">请参阅限制这些类型的示例的构造函数参考主题。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)">
          <source>The XML resolver that is wrapped by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph>.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> 包装的 XML 解析程序。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)">
          <source>The permission set to apply to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>.</source>
          <target state="translated">要应用于基础 <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 的权限集。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> calls the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.PermitOnly" /&gt;</ph> method on the permission set before calling the <ph id="ph3">&lt;see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /&gt;</ph> method on the underlying XML resolver.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> 对基础 XML 解析程序调用 <ph id="ph3">&lt;see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /&gt;</ph> 方法之前，先对权限集调用 <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.PermitOnly" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> class with the <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> specified.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> 初始化 <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> 类的一个新实例。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)">
          <source>The following example constructs an <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object by using a customized permission set.</source>
          <target state="translated">下面的示例构造<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>通过使用自定义的权限集的对象。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
          <source>The XML resolver that is wrapped by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph>.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> 包装的 XML 解析程序。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
          <source>The evidence used to create the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that will be applied to the underlying <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>.</source>
          <target state="translated">用于创建将应用于基础 <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> 的证据。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> calls the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.PermitOnly" /&gt;</ph> method on the created <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> before calling <ph id="ph4">&lt;see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /&gt;</ph> on the underlying <ph id="ph5">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> 在对基础 <ph id="ph5">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 调用 <ph id="ph4">&lt;see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /&gt;</ph> 之前，先对创建的<ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> 调用 <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.PermitOnly" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> class with the <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Security.Policy.Evidence" /&gt;</ph> specified.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Security.Policy.Evidence" /&gt;</ph> 初始化 <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> 类的一个新实例。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
          <source>Here are some possible scenarios and the type of evidence to provide for each scenario:</source>
          <target state="translated">下面是证据的一些可能的方案和每个方案提供类型：</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
          <source>If you are working in a fully trusted environment, use your assembly to create the evidence:</source>
          <target state="translated">如果你正处于完全可信的环境，使用您的程序集来创建证据：</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
          <source>If you are working in a semi-trusted environment, you have code or data coming from an outside source, and you know the origin of the outside source and have a verifiable URI, use the URI to create the evidence:</source>
          <target state="translated">如果您正在不完全受信任的环境中，你拥有的代码或数据来自外部源，并且您知道的源的外部源和具有可验证的 URI，使用 URI 来创建证据：</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
          <source>If you are working in a semi-trusted environment and you have code or data coming from an outside source, but you don't know the origin of the outside source, either:</source>
          <target state="translated">如果您正处于不完全受信任的环境和你提供了代码或数据来自外部源，但你不知道的源的外部源，或者：</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
          <source>Set the <ph id="ph1">`evidence`</ph> parameter to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">将 <ph id="ph1">`evidence`</ph> 参数设置为 <ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
          <source>This allows no access to resources.</source>
          <target state="translated">这样将不允许对资源进行任何访问。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
          <source>If your application requires some access to resources, request evidence from the caller.</source>
          <target state="translated">如果应用程序要求对资源进行一些访问，应向调用方请求数据。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
          <source>The XML resolver that is wrapped by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph>.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> 包装的 XML 解析程序。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
          <source>The URL used to create the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that will be applied to the underlying <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>.</source>
          <target state="translated">用于创建将应用于基础 <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 的<ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> 的 URL。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> calls <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.PermitOnly" /&gt;</ph> on the created <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> before calling <ph id="ph4">&lt;see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /&gt;</ph> on the underlying <ph id="ph5">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> 在对基础 <ph id="ph5">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 调用 <ph id="ph4">&lt;see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /&gt;</ph> 之前，先对创建的 <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> 调用 <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.PermitOnly" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> class with the <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> and URL provided.</source>
          <target state="translated">使用提供的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 和 URL 初始化 <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> 类的一个新实例。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
          <source>There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005.</source>
          <target state="translated">有安全基础结构的.NET Framework 公共语言运行时 (CLR) 上运行的代码和在集成在 Microsoft SQL Server 2005 内 CLR 上运行的代码中的差异。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
          <source>This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR.</source>
          <target state="translated">这可能导致 CLR 集成是为.NET Framework CLR 以不同方式运行时使用的 SQL Server 上开发的代码的情况下。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
          <source>One of these differences affects the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> class when you have evidence that is based on a URL (that is, when you use the <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29&gt;</ph> constructor).</source>
          <target state="translated">其中一种差异会影响<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>类必须基于 URL 的证据时 (即，当使用<ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A&gt;</ph>方法或<ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29&gt;</ph>构造函数)。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
          <source>The policy resolution mechanism of the SQL Server integrated CLR does not use the <ph id="ph1">&lt;xref:System.Security.Policy.Url&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Policy.Zone&gt;</ph> information.</source>
          <target state="translated">策略解析的 SQL Server 的机制集成 CLR 不使用<ph id="ph1">&lt;xref:System.Security.Policy.Url&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Policy.Zone&gt;</ph>信息。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
          <source>Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded.</source>
          <target state="translated">相反，它会授予权限基于程序集加载时，服务器会将添加的 GUID。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>中 SQL Server 集成的 CLR，使用指定的直接提供任何所需的证据<ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29&gt;</ph> constructor to create an <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object that is allowed to access your local intranet site only.</source>
          <target state="translated">此示例使用<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29&gt;</ph>构造函数来创建<ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>允许访问你本地 intranet 站点的对象。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)">
          <source>The URL used to create the evidence.</source>
          <target state="translated">用来创建证据的 URL。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)">
          <source>Creates evidence using the supplied URL.</source>
          <target state="translated">使用提供的 URL 创建证据。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)">
          <source>The evidence generated from the supplied URL as defined by the default policy.</source>
          <target state="translated">从默认策略定义的提供的 URL 中生成的证据。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)">
          <source>There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005.</source>
          <target state="translated">有安全基础结构的.NET Framework 公共语言运行时 (CLR) 上运行的代码和在集成在 Microsoft SQL Server 2005 内 CLR 上运行的代码中的差异。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)">
          <source>This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR.</source>
          <target state="translated">这可能导致 CLR 集成是为.NET Framework CLR 以不同方式运行时使用的 SQL Server 上开发的代码的情况下。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)">
          <source>One of these differences affects the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> class when you have evidence that is based on a URL (that is, when you use the <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29&gt;</ph> constructor).</source>
          <target state="translated">其中一种差异会影响<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>类必须基于 URL 的证据时 (即，当使用<ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A&gt;</ph>方法或<ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29&gt;</ph>构造函数)。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)">
          <source>The policy resolution mechanism of the SQL Server integrated CLR doesn't use the <ph id="ph1">&lt;xref:System.Security.Policy.Url&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Policy.Zone&gt;</ph> information.</source>
          <target state="translated">策略解析的 SQL Server 的机制集成 CLR 不使用<ph id="ph1">&lt;xref:System.Security.Policy.Url&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Policy.Zone&gt;</ph>信息。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)">
          <source>Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded.</source>
          <target state="translated">相反，它会授予权限基于程序集加载时，服务器会将添加的 GUID。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>中 SQL Server 集成的 CLR，使用指定的直接提供任何所需的证据<ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlSecureResolver.Credentials">
          <source>Sets credentials used to authenticate web requests.</source>
          <target state="translated">设置用于对 Web 请求进行身份验证的凭据。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlSecureResolver.Credentials">
          <source>The credentials to be used to authenticate web requests.</source>
          <target state="translated">用于对 Web 请求进行身份验证的凭据。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlSecureResolver.Credentials">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> sets the given credentials on the underlying <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> 在基础 <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 上设置给定的凭据。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlSecureResolver.Credentials">
          <source>If this property is not set, the value defaults to <ph id="ph1">&lt;see langword="null" /&gt;</ph>; that is, the <ph id="ph2">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> has no user credentials.</source>
          <target state="translated">如果未设置该属性，则该值默认为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>；即 <ph id="ph2">&lt;see cref="T:System.Xml.XmlSecureResolver" /&gt;</ph> 没有用户凭据。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlSecureResolver.Credentials">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> with default credentials to resolve and open network resources needed by the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>使用默认凭据来解决并打开所需的网络资源<ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The URI that is returned from <ph id="ph1">&lt;see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph> 返回的 URI。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Currently not used.</source>
          <target state="translated">当前未使用。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The type of object to return.</source>
          <target state="translated">要返回的对象的类型。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The current version only returns <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> objects.</source>
          <target state="translated">当前版本只返回 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Maps a URI to an object that contains the actual resource.</source>
          <target state="translated">将 URI 映射到包含实际资源的对象。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>This method temporarily sets the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> created in the constructor by calling <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.PermitOnly" /&gt;</ph> before calling <ph id="ph3">&lt;see langword="GetEntity" /&gt;</ph> on the underlying <ph id="ph4">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> to open the resource.</source>
          <target state="translated">此方法在对基础 <ph id="ph4">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 调用<ph id="ph3">&lt;see langword="GetEntity" /&gt;</ph> 之前，先调用 <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.PermitOnly" /&gt;</ph>，以临时设置构造函数中创建的 <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>，从而打开该资源。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The stream returned by calling <ph id="ph1">&lt;see langword="GetEntity" /&gt;</ph> on the underlying <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>.</source>
          <target state="translated">通过在基础 <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 上调用 <ph id="ph1">&lt;see langword="GetEntity" /&gt;</ph> 而返回的流。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>If a type other than <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> is specified, the method returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果指定 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 以外的类型，方法将返回 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Your application can mitigate memory denial of service threats to the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.GetEntity%2A&gt;</ph> method by implementing an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph> that limits the number of bytes read.</source>
          <target state="translated">你的应用程序可以缓解内存拒绝服务威胁到<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.GetEntity%2A&gt;</ph>方法通过实现<ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph>限制读取的字节数。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.GetEntity%2A&gt;</ph> method.</source>
          <target state="translated">这有助于防止恶意代码尝试传递到的字节的无限流的情况下出现<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.GetEntity%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="ofObjectToReturn" /&gt;</ph> is neither <ph id="ph2">&lt;see langword="null" /&gt;</ph> nor a <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ofObjectToReturn" /&gt;</ph> 既不是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 也不是 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 类型。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The specified URI is not an absolute URI.</source>
          <target state="translated">指定的 URI 不是一个绝对 URI。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>There is a runtime error (for example, an interrupted server connection).</source>
          <target state="translated">存在运行时错误（例如中断的服务器连接）。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The URI returned from <ph id="ph1">&lt;see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph> 返回的 URI。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>Currently not used.</source>
          <target state="translated">当前未使用。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The type of object to return.</source>
          <target state="translated">要返回的对象的类型。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The current version only returns <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> objects.</source>
          <target state="translated">当前版本只返回 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>Asynchronously maps a URI to an object that contains the actual resource.</source>
          <target state="translated">将 URI 异步映射到包含实际资源的对象。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The stream returned by calling <ph id="ph1">&lt;see langword="GetEntity" /&gt;</ph> on the underlying <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>.</source>
          <target state="translated">通过在基础 <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 上调用 <ph id="ph1">&lt;see langword="GetEntity" /&gt;</ph> 而返回的流。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>If a type other than <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> is specified, the method returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果指定 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 以外的类型，方法将返回 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
          <source>The base URI used to resolve the relative URI.</source>
          <target state="translated">用于解析相对 URI 的基 URI。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
          <source>The URI to resolve.</source>
          <target state="translated">要解析的 URI。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
          <source>The URI can be absolute or relative.</source>
          <target state="translated">URI 可以是绝对的或相对的。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
          <source>If absolute, this value effectively replaces the <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> value.</source>
          <target state="translated">如果是绝对的，此值将有效地替换 baseUri 值<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
          <source>If relative, it combines with the <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> to make an absolute URI.</source>
          <target state="translated">如果是相对的，它将与 baseUri 组合以构成绝对 URI<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
          <source>Resolves the absolute URI from the base and relative URIs by calling <ph id="ph1">&lt;see langword="ResolveUri" /&gt;</ph> on the underlying <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>.</source>
          <target state="translated">通过在基础 <ph id="ph2">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 上调用 <ph id="ph1">&lt;see langword="ResolveUri" /&gt;</ph>，从基 URI 和相对 URI 中解析绝对 URI。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
          <source>The absolute URI or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the relative URI cannot be resolved (returned by calling <ph id="ph2">&lt;see langword="ResolveUri" /&gt;</ph> on the underlying <ph id="ph3">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>).</source>
          <target state="translated">绝对 URI；如果不能解析相对 URI，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>（通过在基础 <ph id="ph3">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 上调用 <ph id="ph2">&lt;see langword="ResolveUri" /&gt;</ph> 来返回）。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
          <source><ph id="ph1">&lt;paramref name="relativeUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="relativeUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>