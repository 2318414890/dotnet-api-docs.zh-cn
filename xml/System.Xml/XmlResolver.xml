<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlResolver.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb7222b2f15e002176e3790adbde9bcf8604cfde5b25.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22b2f15e002176e3790adbde9bcf8604cfde5b25</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlResolver">
          <source>Resolves external XML resources named by a Uniform Resource Identifier (URI).</source>
          <target state="translated">解析由统一资源标识符 (URI) 命名的外部 XML 资源。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> type is used to resolve external XML resources, such as entities, document type definitions (DTDs), or schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>类型用于解析外部 XML 资源，如实体、 文档类型定义 (Dtd) 或架构。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>It is also used to process include and import elements found in Extensible Stylesheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.</source>
          <target state="translated">它也是用于过程包含和导入在可扩展样式表语言 (XSL) 样式表或 XML 架构定义语言 (XSD) 架构中找到的元素。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> handles all aspects of negotiating the connection to the resources, including handling security credentials, opening the connection to the data source, and returning the resource in the form of a stream or other object type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 处理协商的资源，包括处理安全凭据、 打开数据源的连接和流或其他对象类型的形式返回资源的连接的所有方面。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>The object that calls <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> has the task of interpreting the stream.</source>
          <target state="translated">调用的对象<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>具有解释流的任务。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml&gt;</ph> namespace includes two concrete implementations of the <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> class:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml&gt;</ph>命名空间包含的两个具体实现<ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>类：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is the default resolver for all classes in the <ph id="ph2">&lt;xref:System.Xml&gt;</ph> namespace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 是中的所有类的默认冲突解决程序<ph id="ph2">&lt;xref:System.Xml&gt;</ph>命名空间。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>It supports the <ph id="ph1">`file://`</ph> and <ph id="ph2">`http://`</ph> protocols and requests from the <ph id="ph3">&lt;xref:System.Net.WebRequest?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">它支持 <ph id="ph1">`file://`</ph> 和 <ph id="ph2">`http://`</ph> 协议以及来自 <ph id="ph3">&lt;xref:System.Net.WebRequest?displayProperty=nameWithType&gt;</ph> 类的请求。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>For examples of extending the class to improve performance, see the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> reference page.</source>
          <target state="translated">扩展类，以提高性能的示例，请参阅<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>引用页。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> helps secure another <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> object by wrapping the object object and restricting the resources that it can access.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 可帮助保护另一个<ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>对象包装的对象的对象，并限制它可以访问的资源。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> can prohibit access to specific Internet sites or zones.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>可以禁止访问特定的 Internet 站点或区域。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>You can create and specify your own resolver.</source>
          <target state="translated">你可以创建并指定你自己的解析程序。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>If you don't specify a resolver, the reader uses a default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
          <target state="translated">如果未指定解析程序，读取器将使用默认<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>使用没有用户凭据。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>You specify the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> to use by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property and passing the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object to the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">通过设置 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 属性并将 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 对象传递给 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 方法，可以指定要使用的 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>If the resource is stored on a system that requires authentication, you use the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType&gt;</ph> property to specify the necessary credentials.</source>
          <target state="translated">如果资源需要身份验证的系统上存储，则使用<ph id="ph1">&lt;xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType&gt;</ph>属性来指定所需的凭据。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>Supplying authentication credentials</source>
          <target state="translated">提供身份验证凭据</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>The file that contains the XML data to read may have a restricted access policy.</source>
          <target state="translated">包含要读取的 XML 数据的文件可能具有受限制的访问策略。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>If authentication is required to access a network resource, use the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;</ph> property to specify the necessary credentials.</source>
          <target state="translated">如果需要身份验证才能访问网络资源，请使用 <ph id="ph1">&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;</ph> 属性指定必要的凭据。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;</ph> property is not set, credentials are set to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;</ph>未设置属性，凭据都设置为<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>For example, assume that credentials are needed when requesting data from the web for authentication purposes.</source>
          <target state="translated">例如，假设从以进行身份验证 web 请求数据时所需凭据。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>Unless the web virtual directory allows anonymous access, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;</ph> property to supply credentials.</source>
          <target state="translated">除非 web 虚拟目录允许匿名访问，你必须设置<ph id="ph1">&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;</ph>属性提供的凭据。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object that uses an <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with default credentials to access the <ph id="ph3">http://localhost/bookstore/inventory.xml</ph> site.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>对象，它使用<ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>使用默认凭据来访问<ph id="ph3">http://localhost/bookstore/inventory.xml</ph>站点。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>You can supply different credentials for different URIs and add them to a cache.</source>
          <target state="translated">你可以对不同的 Uri 提供不同的凭据，并将它们添加到缓存。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>These credentials are used to check authentication for the different URIs regardless of the original source of the XML.</source>
          <target state="translated">这些凭据用于检查不同 URI 的身份验证，与 XML 的原始源无关。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>The following example shows how to add credentials to a cache.</source>
          <target state="translated">下面的示例演示如何将凭据添加到缓存。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>Security considerations</source>
          <target state="translated">安全注意事项</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>Consider the following items when working with the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> class.</source>
          <target state="translated">使用时，请考虑以下各项<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> objects can contain sensitive information such as user credentials.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 对象可以包含敏感信息，例如用户凭据。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>You should be careful when caching <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> objects and should not pass the <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> object to an untrusted component.</source>
          <target state="translated">应为缓存时请小心<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>对象，并且不应将传递<ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>到不受信任的组件的对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>If you are designing a class property that uses the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> class, the property should be defined as a write-only property.</source>
          <target state="translated">如果您设计的类属性使用 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 类，该属性应定义为只写属性。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>The property can be used to specify the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> to use, but it cannot be used to return an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> object.</source>
          <target state="translated">该属性可以用于指定要使用的 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>，但是不能用于返回 <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>If your application accepts <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> objects from untrusted code, you cannot assume that the URI passed into the <ph id="ph2">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method will be the same as that returned by the <ph id="ph3">&lt;xref:System.Xml.XmlResolver.ResolveUri%2A&gt;</ph> method.</source>
          <target state="translated">如果你的应用程序接受<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>不受信任代码的对象，您不能假设 URI 传递到<ph id="ph2">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph>方法将返回的相同<ph id="ph3">&lt;xref:System.Xml.XmlResolver.ResolveUri%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>Classes derived from the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> class can override the <ph id="ph2">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method and return data that is different than what was contained in the original URI.</source>
          <target state="translated">从 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 类派生的类可以重写 <ph id="ph2">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> 方法，并且返回的数据可以不同于原始 URI 中包含的数据。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>Your application can mitigate memory denial of service threats to the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method by implementing an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph> that limits the number of bytes read.</source>
          <target state="translated">你的应用程序可以缓解内存拒绝服务威胁到<ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph>方法通过实现<ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph>限制读取的字节数。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method.</source>
          <target state="translated">这有助于防止恶意代码尝试传递到的字节的无限流的情况下出现<ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with default credentials.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>使用默认凭据。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlResolver">
          <source>A <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is used to read and display the resulting data stream.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>用于读取和显示生成的数据流。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlResolver.#ctor">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
          <target state="translated">派生的类构造函数来初始化此类型中的状态将调用此构造函数。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlResolver.Credentials">
          <source>When overridden in a derived class, sets the credentials used to authenticate web requests.</source>
          <target state="translated">当在派生类中被重写时，设置用于对 Web 请求进行身份验证的凭据。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlResolver.Credentials">
          <source>The credentials to be used to authenticate web requests.</source>
          <target state="translated">用于对 Web 请求进行身份验证的凭据。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlResolver.Credentials">
          <source>If this property is not set, the value defaults to <ph id="ph1">&lt;see langword="null" /&gt;</ph>; that is, the <ph id="ph2">&lt;see langword="XmlResolver" /&gt;</ph> has no user credentials.</source>
          <target state="translated">如果未设置该属性，则该值默认为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>；即 <ph id="ph2">&lt;see langword="XmlResolver" /&gt;</ph> 没有用户凭据。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlResolver.Credentials">
          <source>If the virtual directory does not require authentication, this property doesn't have to be set.</source>
          <target state="translated">如果虚拟目录不要求身份验证，此属性没有设置。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlResolver.Credentials">
          <source>Otherwise, the credentials of the user must be supplied.</source>
          <target state="translated">否则，必须提供用户的凭据。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlResolver.Credentials">
          <source>The following C# code sets credentials on the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> object.</source>
          <target state="translated">下面的 C# 代码上设置凭据<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlResolver.Credentials">
          <source>You can associate different credentials with different URIs and add them to a cache.</source>
          <target state="translated">你可以将不同的凭据与不同的 Uri 相关联，并将其添加到缓存。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlResolver.Credentials">
          <source>You can then use the credentials to check authentication for different URIs regardless of the original source of the XML.</source>
          <target state="translated">然后可以使用的凭据来检查不同 Uri 的 xml 的原始源无关的身份验证。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlResolver.Credentials">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType&gt;</ph> for an example that uses this property.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType&gt;</ph>有关的示例，使用此属性。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The URI returned from <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph> 返回的 URI。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Currently not used.</source>
          <target state="translated">当前未使用。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The type of object to return.</source>
          <target state="translated">要返回的对象的类型。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The current version only returns System.IO.Stream objects.</source>
          <target state="translated">当前版本只返回 System.IO.Stream 对象。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>When overridden in a derived class, maps a URI to an object that contains the actual resource.</source>
          <target state="translated">当在派生类中被重写时，将 URI 映射到包含实际资源的对象。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>A stream object or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if a type other than stream is specified.</source>
          <target state="translated">流对象；如果指定了流以外的类型，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>This method is used when the caller wants to map a given URI into the object containing the actual resource that the URI represents.</source>
          <target state="translated">当调用方想要将给定的 URI 映射到包含实际资源的 uri，该 URI 表示的对象，使用此方法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The type of object returned is negotiable; however, the implementation must always support <ph id="ph1">&lt;xref:System.IO.Stream?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">返回对象的类型是 negotiable;但是，实现必须始终支持<ph id="ph1">&lt;xref:System.IO.Stream?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntityAsync%2A&gt;</ph>.</source>
          <target state="translated">此方法的异步版本，请参阅<ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntityAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Your application can mitigate memory denial of service threats to the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method by implementing an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph> that limits the number of bytes read.</source>
          <target state="translated">你的应用程序可以缓解内存拒绝服务威胁到<ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph>方法通过实现<ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph>限制读取的字节数。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method.</source>
          <target state="translated">这有助于防止恶意代码尝试传递到的字节的无限流的情况下出现<ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType&gt;</ph> for an example using this method.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType&gt;</ph>有关使用此方法的示例。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="ofObjectToReturn" /&gt;</ph> is not a <ph id="ph2">&lt;see langword="Stream" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ofObjectToReturn" /&gt;</ph> 不是 <ph id="ph2">&lt;see langword="Stream" /&gt;</ph> 类型。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The specified URI is not an absolute URI.</source>
          <target state="translated">指定的 URI 不是一个绝对 URI。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>There is a runtime error (for example, an interrupted server connection).</source>
          <target state="translated">存在运行时错误（例如中断的服务器连接）。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The URI returned from <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph> 返回的 URI。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>Currently not used.</source>
          <target state="translated">当前未使用。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The type of object to return.</source>
          <target state="translated">要返回的对象的类型。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The current version only returns <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> objects.</source>
          <target state="translated">当前版本只返回 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>Asynchronously maps a URI to an object that contains the actual resource.</source>
          <target state="translated">将 URI 异步映射到包含实际资源的对象。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>A stream object or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if a type other than stream is specified.</source>
          <target state="translated">流对象；如果指定了流以外的类型，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">这是异步版本<ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph>，具有相同功能。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，必须设置<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>标志切换为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
          <source>The base URI used to resolve the relative URI.</source>
          <target state="translated">用于解析相对 URI 的基 URI。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
          <source>The URI to resolve.</source>
          <target state="translated">要解析的 URI。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
          <source>The URI can be absolute or relative.</source>
          <target state="translated">URI 可以是绝对的或相对的。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
          <source>If absolute, this value effectively replaces the <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> value.</source>
          <target state="translated">如果是绝对的，此值将有效地替换 baseUri 值<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
          <source>If relative, it combines with the <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> to make an absolute URI.</source>
          <target state="translated">如果是相对的，它将与 baseUri 组合以构成绝对 URI<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
          <source>When overridden in a derived class, resolves the absolute URI from the base and relative URIs.</source>
          <target state="translated">当在派生类中被重写时，从基 URI 和相对 URI 解析绝对 URI。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
          <source>The absolute URI or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the relative URI cannot be resolved.</source>
          <target state="translated">绝对 URI；如果不能解析相对 URI，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
          <source>The absolute URI may be used as the base URI for any subsequent requests for entities that are relative to this URI.</source>
          <target state="translated">绝对 URI 可能用作相对于此 URI 的实体的任何后续请求的基 URI。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType&gt;</ph> for an example that uses this method.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType&gt;</ph>有关的示例，使用此方法。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
          <source><ph id="ph1">&lt;paramref name="relativeUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="relativeUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
          <source>The URI.</source>
          <target state="translated">URI。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
          <source>The type to return.</source>
          <target state="translated">要返回的类型。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
          <source>Enables the resolver to return types other than <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">使解决程序能够返回 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 以外的类型。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is supported; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="type" /&gt;</ph> 受支持，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>