<Type Name="XmlResolver" FullName="System.Xml.XmlResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6608ed650142dfc7e42aa29db37fe405e2f2c237" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34241925" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlResolver abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3927b-101">解析由统一资源标识符 (URI) 命名的外部 XML 资源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3927b-101">Resolves external XML resources named by a Uniform Resource Identifier (URI).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3927b-102"><xref:System.Xml.XmlResolver>类型用于解析外部 XML 资源，如实体、 文档类型定义 (Dtd) 或架构。</span><span class="sxs-lookup"><span data-stu-id="3927b-102">The <xref:System.Xml.XmlResolver> type is used to resolve external XML resources, such as entities, document type definitions (DTDs), or schemas.</span></span> <span data-ttu-id="3927b-103">它也是用于过程包含和导入在可扩展样式表语言 (XSL) 样式表或 XML 架构定义语言 (XSD) 架构中找到的元素。</span><span class="sxs-lookup"><span data-stu-id="3927b-103">It is also used to process include and import elements found in Extensible Stylesheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.</span></span>  
  
 <span data-ttu-id="3927b-104"><xref:System.Xml.XmlResolver> 处理协商的资源，包括处理安全凭据、 打开数据源的连接和流或其他对象类型的形式返回资源的连接的所有方面。</span><span class="sxs-lookup"><span data-stu-id="3927b-104"><xref:System.Xml.XmlResolver> handles all aspects of negotiating the connection to the resources, including handling security credentials, opening the connection to the data source, and returning the resource in the form of a stream or other object type.</span></span> <span data-ttu-id="3927b-105">调用的对象<xref:System.Xml.XmlResolver>具有解释流的任务。</span><span class="sxs-lookup"><span data-stu-id="3927b-105">The object that calls <xref:System.Xml.XmlResolver> has the task of interpreting the stream.</span></span>  
  
 <span data-ttu-id="3927b-106"><xref:System.Xml>命名空间包含的两个具体实现<xref:System.Xml.XmlResolver>类：</span><span class="sxs-lookup"><span data-stu-id="3927b-106">The <xref:System.Xml> namespace includes two concrete implementations of the <xref:System.Xml.XmlResolver> class:</span></span>  
  
-   <span data-ttu-id="3927b-107"><xref:System.Xml.XmlUrlResolver> 是中的所有类的默认冲突解决程序<xref:System.Xml>命名空间。</span><span class="sxs-lookup"><span data-stu-id="3927b-107"><xref:System.Xml.XmlUrlResolver> is the default resolver for all classes in the <xref:System.Xml> namespace.</span></span> <span data-ttu-id="3927b-108">它支持 `file://` 和 `http://` 协议以及来自 <xref:System.Net.WebRequest?displayProperty=nameWithType> 类的请求。</span><span class="sxs-lookup"><span data-stu-id="3927b-108">It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="3927b-109">扩展类，以提高性能的示例，请参阅<xref:System.Xml.XmlUrlResolver>引用页。</span><span class="sxs-lookup"><span data-stu-id="3927b-109">For examples of extending the class to improve performance, see the <xref:System.Xml.XmlUrlResolver> reference page.</span></span>  
  
-   <span data-ttu-id="3927b-110"><xref:System.Xml.XmlSecureResolver> 可帮助保护另一个<xref:System.Xml.XmlResolver>对象包装的对象的对象，并限制它可以访问的资源。</span><span class="sxs-lookup"><span data-stu-id="3927b-110"><xref:System.Xml.XmlSecureResolver> helps secure another <xref:System.Xml.XmlResolver> object by wrapping the object object and restricting the resources that it can access.</span></span> <span data-ttu-id="3927b-111">例如，<xref:System.Xml.XmlSecureResolver>可以禁止访问特定的 Internet 站点或区域。</span><span class="sxs-lookup"><span data-stu-id="3927b-111">For example, the <xref:System.Xml.XmlSecureResolver> can prohibit access to specific Internet sites or zones.</span></span>  
  
 <span data-ttu-id="3927b-112">你可以创建并指定你自己的解析程序。</span><span class="sxs-lookup"><span data-stu-id="3927b-112">You can create and specify your own resolver.</span></span> <span data-ttu-id="3927b-113">如果未指定解析程序，读取器将使用默认<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="3927b-113">If you don't specify a resolver, the reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span>  
  
 <span data-ttu-id="3927b-114">通过设置 <xref:System.Xml.XmlResolver> 属性并将 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 对象传递给 <xref:System.Xml.XmlReaderSettings> 方法，可以指定要使用的 <xref:System.Xml.XmlReader.Create%2A>。</span><span class="sxs-lookup"><span data-stu-id="3927b-114">You specify the <xref:System.Xml.XmlResolver> to use by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property and passing the <xref:System.Xml.XmlReaderSettings> object to the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
 <span data-ttu-id="3927b-115">如果资源需要身份验证的系统上存储，则使用<xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType>属性来指定所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="3927b-115">If the resource is stored on a system that requires authentication, you use the <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> property to specify the necessary credentials.</span></span>  
  
## <a name="supplying-authentication-credentials"></a><span data-ttu-id="3927b-116">提供身份验证凭据</span><span class="sxs-lookup"><span data-stu-id="3927b-116">Supplying authentication credentials</span></span>  
 <span data-ttu-id="3927b-117">包含要读取的 XML 数据的文件可能具有受限制的访问策略。</span><span class="sxs-lookup"><span data-stu-id="3927b-117">The file that contains the XML data to read may have a restricted access policy.</span></span> <span data-ttu-id="3927b-118">如果需要身份验证才能访问网络资源，请使用 <xref:System.Xml.XmlResolver.Credentials%2A> 属性指定必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="3927b-118">If authentication is required to access a network resource, use the <xref:System.Xml.XmlResolver.Credentials%2A> property to specify the necessary credentials.</span></span> <span data-ttu-id="3927b-119">如果<xref:System.Xml.XmlResolver.Credentials%2A>未设置属性，凭据都设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="3927b-119">If the <xref:System.Xml.XmlResolver.Credentials%2A> property is not set, credentials are set to `null`.</span></span>  
  
 <span data-ttu-id="3927b-120">例如，假设从以进行身份验证 web 请求数据时所需凭据。</span><span class="sxs-lookup"><span data-stu-id="3927b-120">For example, assume that credentials are needed when requesting data from the web for authentication purposes.</span></span> <span data-ttu-id="3927b-121">除非 web 虚拟目录允许匿名访问，你必须设置<xref:System.Xml.XmlResolver.Credentials%2A>属性提供的凭据。</span><span class="sxs-lookup"><span data-stu-id="3927b-121">Unless the web virtual directory allows anonymous access, you must set the <xref:System.Xml.XmlResolver.Credentials%2A> property to supply credentials.</span></span> <span data-ttu-id="3927b-122">下面的示例创建<xref:System.Xml.XmlReader>对象，它使用<xref:System.Xml.XmlUrlResolver>使用默认凭据来访问http://localhost/bookstore/inventory.xml站点。</span><span class="sxs-lookup"><span data-stu-id="3927b-122">The following example creates an <xref:System.Xml.XmlReader> object that uses an <xref:System.Xml.XmlUrlResolver> with default credentials to access the http://localhost/bookstore/inventory.xml site.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)]
 [!code-csharp[XmlReaderSettings.cctor#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)]
 [!code-vb[XmlReaderSettings.cctor#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)]  
  
 <span data-ttu-id="3927b-123">你可以对不同的 Uri 提供不同的凭据，并将它们添加到缓存。</span><span class="sxs-lookup"><span data-stu-id="3927b-123">You can supply different credentials for different URIs and add them to a cache.</span></span> <span data-ttu-id="3927b-124">这些凭据用于检查不同 URI 的身份验证，与 XML 的原始源无关。</span><span class="sxs-lookup"><span data-stu-id="3927b-124">These credentials are used to check authentication for the different URIs regardless of the original source of the XML.</span></span> <span data-ttu-id="3927b-125">下面的示例演示如何将凭据添加到缓存。</span><span class="sxs-lookup"><span data-stu-id="3927b-125">The following example shows how to add credentials to a cache.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#11](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#11)]
 [!code-vb[XslCompiledTransform.Load#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#11)]  
  
## <a name="security-considerations"></a><span data-ttu-id="3927b-126">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="3927b-126">Security considerations</span></span>  
 <span data-ttu-id="3927b-127">使用时，请考虑以下各项<xref:System.Xml.XmlResolver>类。</span><span class="sxs-lookup"><span data-stu-id="3927b-127">Consider the following items when working with the <xref:System.Xml.XmlResolver> class.</span></span>  
  
-   <span data-ttu-id="3927b-128"><xref:System.Xml.XmlResolver> 对象可以包含敏感信息，例如用户凭据。</span><span class="sxs-lookup"><span data-stu-id="3927b-128"><xref:System.Xml.XmlResolver> objects can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="3927b-129">应为缓存时请小心<xref:System.Xml.XmlResolver>对象，并且不应将传递<xref:System.Xml.XmlResolver>到不受信任的组件的对象。</span><span class="sxs-lookup"><span data-stu-id="3927b-129">You should be careful when caching <xref:System.Xml.XmlResolver> objects and should not pass the <xref:System.Xml.XmlResolver> object to an untrusted component.</span></span>  
  
-   <span data-ttu-id="3927b-130">如果您设计的类属性使用 <xref:System.Xml.XmlResolver> 类，该属性应定义为只写属性。</span><span class="sxs-lookup"><span data-stu-id="3927b-130">If you are designing a class property that uses the <xref:System.Xml.XmlResolver> class, the property should be defined as a write-only property.</span></span> <span data-ttu-id="3927b-131">该属性可以用于指定要使用的 <xref:System.Xml.XmlResolver>，但是不能用于返回 <xref:System.Xml.XmlResolver> 对象。</span><span class="sxs-lookup"><span data-stu-id="3927b-131">The property can be used to specify the <xref:System.Xml.XmlResolver> to use, but it cannot be used to return an <xref:System.Xml.XmlResolver> object.</span></span>  
  
-   <span data-ttu-id="3927b-132">如果你的应用程序接受<xref:System.Xml.XmlResolver>不受信任代码的对象，您不能假设 URI 传递到<xref:System.Xml.XmlResolver.GetEntity%2A>方法将返回的相同<xref:System.Xml.XmlResolver.ResolveUri%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3927b-132">If your application accepts <xref:System.Xml.XmlResolver> objects from untrusted code, you cannot assume that the URI passed into the <xref:System.Xml.XmlResolver.GetEntity%2A> method will be the same as that returned by the <xref:System.Xml.XmlResolver.ResolveUri%2A> method.</span></span> <span data-ttu-id="3927b-133">从 <xref:System.Xml.XmlResolver> 类派生的类可以重写 <xref:System.Xml.XmlResolver.GetEntity%2A> 方法，并且返回的数据可以不同于原始 URI 中包含的数据。</span><span class="sxs-lookup"><span data-stu-id="3927b-133">Classes derived from the <xref:System.Xml.XmlResolver> class can override the <xref:System.Xml.XmlResolver.GetEntity%2A> method and return data that is different than what was contained in the original URI.</span></span>  
  
-   <span data-ttu-id="3927b-134">你的应用程序可以缓解内存拒绝服务威胁到<xref:System.Xml.XmlResolver.GetEntity%2A>方法通过实现<xref:System.Runtime.InteropServices.ComTypes.IStream>限制读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="3927b-134">Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read.</span></span> <span data-ttu-id="3927b-135">这有助于防止恶意代码尝试传递到的字节的无限流的情况下出现<xref:System.Xml.XmlResolver.GetEntity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3927b-135">This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3927b-136">下面的示例创建<xref:System.Xml.XmlUrlResolver>使用默认凭据。</span><span class="sxs-lookup"><span data-stu-id="3927b-136">The following example creates an <xref:System.Xml.XmlUrlResolver> with default credentials.</span></span> <span data-ttu-id="3927b-137">A<xref:System.Xml.XmlReader>用于读取和显示生成的数据流。</span><span class="sxs-lookup"><span data-stu-id="3927b-137">A <xref:System.Xml.XmlReader> is used to read and display the resulting data stream.</span></span>  
  
 [!code-csharp[XmlResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_ex/CS/XmlResolver_ex.cs#1)]
 [!code-vb[XmlResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_ex/VB/XmlResolver_ex.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3927b-138">初始化 <see cref="T:System.Xml.XmlResolver" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-138">Initializes a new instance of the <see cref="T:System.Xml.XmlResolver" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3927b-139">派生的类构造函数来初始化此类型中的状态将调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="3927b-139">This constructor is called by derived class constructors to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public virtual System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3927b-140">当在派生类中被重写时，设置用于对 Web 请求进行身份验证的凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-140">When overridden in a derived class, sets the credentials used to authenticate web requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3927b-141">用于对 Web 请求进行身份验证的凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-141">The credentials to be used to authenticate web requests.</span>
          </span>
          <span data-ttu-id="3927b-142">如果未设置该属性，则该值默认为 <see langword="null" />；即 <see langword="XmlResolver" /> 没有用户凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-142">If this property is not set, the value defaults to <see langword="null" />; that is, the <see langword="XmlResolver" /> has no user credentials.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3927b-143">如果虚拟目录不要求身份验证，此属性没有设置。</span><span class="sxs-lookup"><span data-stu-id="3927b-143">If the virtual directory does not require authentication, this property doesn't have to be set.</span></span> <span data-ttu-id="3927b-144">否则，必须提供用户的凭据。</span><span class="sxs-lookup"><span data-stu-id="3927b-144">Otherwise, the credentials of the user must be supplied.</span></span>  
  
 <span data-ttu-id="3927b-145">下面的 C# 代码上设置凭据<xref:System.Xml.XmlResolver>对象。</span><span class="sxs-lookup"><span data-stu-id="3927b-145">The following C# code sets credentials on the <xref:System.Xml.XmlResolver> object.</span></span>  
  
```csharp  
NetworkCredential nc = new NetworkCredential(UserName, SecurelyStoredPassword, Domain);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = nc;  
```  
  
 <span data-ttu-id="3927b-146">你可以将不同的凭据与不同的 Uri 相关联，并将其添加到缓存。</span><span class="sxs-lookup"><span data-stu-id="3927b-146">You can associate different credentials with different URIs and add them to a cache.</span></span> <span data-ttu-id="3927b-147">然后可以使用的凭据来检查不同 Uri 的 xml 的原始源无关的身份验证。</span><span class="sxs-lookup"><span data-stu-id="3927b-147">You can then use the credentials to check authentication for different URIs regardless of the original source of the XML.</span></span>  
  
```csharp  
NetworkCredential myCred = new NetworkCredential(UserName, SecurelyStoredPassword, Domain);   
CredentialCache myCache = new CredentialCache();   
myCache.Add(new Uri("http://www.contoso.com/"), "Basic", myCred);   
myCache.Add(new Uri("http://app.contoso.com/"), "Basic", myCred);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = myCache;  
```  
  
   
  
## Examples  
 <span data-ttu-id="3927b-148">请参阅<xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType>有关的示例，使用此属性。</span><span class="sxs-lookup"><span data-stu-id="3927b-148">See <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> for an example that uses this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">
          <span data-ttu-id="3927b-149">从 <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> 返回的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-149">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</span>
          </span>
        </param>
        <param name="role">
          <span data-ttu-id="3927b-150">当前未使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-150">Currently not used.</span>
          </span>
        </param>
        <param name="ofObjectToReturn">
          <span data-ttu-id="3927b-151">要返回的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-151">The type of object to return.</span>
          </span>
          <span data-ttu-id="3927b-152">当前版本只返回 System.IO.Stream 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-152">The current version only returns System.IO.Stream objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3927b-153">当在派生类中被重写时，将 URI 映射到包含实际资源的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-153">When overridden in a derived class, maps a URI to an object that contains the actual resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3927b-154">流对象；如果指定了流以外的类型，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-154">A stream object or <see langword="null" /> if a type other than stream is specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3927b-155">当调用方想要将给定的 URI 映射到包含实际资源的 uri，该 URI 表示的对象，使用此方法。</span><span class="sxs-lookup"><span data-stu-id="3927b-155">This method is used when the caller wants to map a given URI into the object containing the actual resource that the URI represents.</span></span> <span data-ttu-id="3927b-156">返回对象的类型是 negotiable;但是，实现必须始终支持<xref:System.IO.Stream?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3927b-156">The type of object returned is negotiable; however, the implementation must always support <xref:System.IO.Stream?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3927b-157">此方法的异步版本，请参阅<xref:System.Xml.XmlResolver.GetEntityAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3927b-157">For the asynchronous version of this method, see <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3927b-158">你的应用程序可以缓解内存拒绝服务威胁到<xref:System.Xml.XmlResolver.GetEntity%2A>方法通过实现<xref:System.Runtime.InteropServices.ComTypes.IStream>限制读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="3927b-158">Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read.</span></span> <span data-ttu-id="3927b-159">这有助于防止恶意代码尝试传递到的字节的无限流的情况下出现<xref:System.Xml.XmlResolver.GetEntity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3927b-159">This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3927b-160">请参阅<xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType>有关使用此方法的示例。</span><span class="sxs-lookup"><span data-stu-id="3927b-160">See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3927b-161">
            <paramref name="ofObjectToReturn" /> 不是 <see langword="Stream" /> 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-161">
              <paramref name="ofObjectToReturn" /> is not a <see langword="Stream" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="3927b-162">指定的 URI 不是一个绝对 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-162">The specified URI is not an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3927b-163">
            <paramref name="absoluteUri" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-163">
              <paramref name="absoluteUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="3927b-164">存在运行时错误（例如中断的服务器连接）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-164">There is a runtime error (for example, an interrupted server connection).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">
          <span data-ttu-id="3927b-165">从 <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> 返回的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-165">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</span>
          </span>
        </param>
        <param name="role">
          <span data-ttu-id="3927b-166">当前未使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-166">Currently not used.</span>
          </span>
        </param>
        <param name="ofObjectToReturn">
          <span data-ttu-id="3927b-167">要返回的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-167">The type of object to return.</span>
          </span>
          <span data-ttu-id="3927b-168">当前版本只返回 <see cref="T:System.IO.Stream" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-168">The current version only returns <see cref="T:System.IO.Stream" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3927b-169">将 URI 异步映射到包含实际资源的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-169">Asynchronously maps a URI to an object that contains the actual resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3927b-170">流对象；如果指定了流以外的类型，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-170">A stream object or <see langword="null" /> if a type other than stream is specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3927b-171">这是异步版本<xref:System.Xml.XmlResolver.GetEntity%2A>，具有相同功能。</span><span class="sxs-lookup"><span data-stu-id="3927b-171">This is the asynchronous version of <xref:System.Xml.XmlResolver.GetEntity%2A>, with the same functionality.</span></span> <span data-ttu-id="3927b-172">若要使用此方法，必须设置<xref:System.Xml.XmlReaderSettings.Async%2A>标志切换为`true`。</span><span class="sxs-lookup"><span data-stu-id="3927b-172">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public virtual Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">
          <span data-ttu-id="3927b-173">用于解析相对 URI 的基 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-173">The base URI used to resolve the relative URI.</span>
          </span>
        </param>
        <param name="relativeUri">
          <span data-ttu-id="3927b-174">要解析的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-174">The URI to resolve.</span>
          </span>
          <span data-ttu-id="3927b-175">URI 可以是绝对的或相对的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-175">The URI can be absolute or relative.</span>
          </span>
          <span data-ttu-id="3927b-176">如果是绝对的，此值将有效地替换 baseUri 值<c></c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-176">If absolute, this value effectively replaces the <c>baseUri</c> value.</span>
          </span>
          <span data-ttu-id="3927b-177">如果是相对的，它将与 baseUri 组合以构成绝对 URI<c></c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-177">If relative, it combines with the <c>baseUri</c> to make an absolute URI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3927b-178">当在派生类中被重写时，从基 URI 和相对 URI 解析绝对 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-178">When overridden in a derived class, resolves the absolute URI from the base and relative URIs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3927b-179">绝对 URI；如果不能解析相对 URI，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-179">The absolute URI or <see langword="null" /> if the relative URI cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3927b-180">绝对 URI 可能用作相对于此 URI 的实体的任何后续请求的基 URI。</span><span class="sxs-lookup"><span data-stu-id="3927b-180">The absolute URI may be used as the base URI for any subsequent requests for entities that are relative to this URI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3927b-181">请参阅<xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType>有关的示例，使用此方法。</span><span class="sxs-lookup"><span data-stu-id="3927b-181">See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> for an example that uses this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3927b-182">
            <paramref name="relativeUri" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-182">
              <paramref name="relativeUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsType">
      <MemberSignature Language="C#" Value="public virtual bool SupportsType (Uri absoluteUri, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsType(class System.Uri absoluteUri, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SupportsType(Uri ^ absoluteUri, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">
          <span data-ttu-id="3927b-183">URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-183">The URI.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="3927b-184">要返回的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-184">The type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3927b-185">使解决程序能够返回 <see cref="T:System.IO.Stream" /> 以外的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-185">Enables the resolver to return types other than <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3927b-186">如果 <paramref name="type" /> 受支持，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3927b-186">
              <see langword="true" /> if the <paramref name="type" /> is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>