<Type Name="XmlNode" FullName="System.Xml.XmlNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8b583c1030f60c393dd43a1e00bbb32f10fe440" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39943805" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlNode : ICloneable, System.Collections.IEnumerable, System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNode extends System.Object implements class System.Collections.IEnumerable, class System.ICloneable, class System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNode" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNode&#xA;Implements ICloneable, IEnumerable, IXPathNavigable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNode abstract : ICloneable, System::Collections::IEnumerable, System::Xml::XPath::IXPathNavigable" />
  <TypeSignature Language="F#" Value="type XmlNode = class&#xA;    interface ICloneable&#xA;    interface IEnumerable&#xA;    interface IXPathNavigable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.XPath.IXPathNavigable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4a958-101">表示 XML 文档中的单个节点。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a958-101">Represents a single node in the XML document.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-102">此类实现 W3C 文档对象模型 (DOM) 级别 1 核心和核心 DOM 级别 2。</span><span class="sxs-lookup"><span data-stu-id="4a958-102">This class implements the W3C Document Object Model (DOM) Level 1 Core and the Core DOM Level 2.</span></span> <span data-ttu-id="4a958-103">DOM 是 XML 文档的内存中（缓存）树表示形式。</span><span class="sxs-lookup"><span data-stu-id="4a958-103">The DOM is an in-memory (cache) tree representation of an XML document.</span></span> <span data-ttu-id="4a958-104">`XmlNode` 类的基类中的.NET 实现的 dom。</span><span class="sxs-lookup"><span data-stu-id="4a958-104">`XmlNode` is the base class in the .NET implementation of the DOM.</span></span> <span data-ttu-id="4a958-105">它支持 XPath 的选择，并提供编辑功能。</span><span class="sxs-lookup"><span data-stu-id="4a958-105">It supports XPath selections and provides editing capabilities.</span></span> <span data-ttu-id="4a958-106"><xref:System.Xml.XmlDocument>类用于扩展`XmlNode`和表示 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-106">The <xref:System.Xml.XmlDocument> class extends `XmlNode` and represents an XML document.</span></span> <span data-ttu-id="4a958-107">可以使用`XmlDocument`来加载和保存 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="4a958-107">You can use `XmlDocument` to load and save XML data.</span></span> <span data-ttu-id="4a958-108">它还包括用于创建节点的方法。</span><span class="sxs-lookup"><span data-stu-id="4a958-108">It also includes methods for node creation.</span></span> <span data-ttu-id="4a958-109">请参阅[XML 文档对象模型 (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="4a958-109">See [XML Document Object Model (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) for more information.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a958-110">由于使用而引发的异常<xref:System.Xml.XmlNode>类，如<xref:System.Xml.XmlException>类可能包含不应在不受信任的方案中公开的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="4a958-110">Exceptions raised as a result of using the <xref:System.Xml.XmlNode> class, such as the <xref:System.Xml.XmlException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="4a958-111">应正确处理异常，以便在不受信任的情况下不公开此敏感信息。</span><span class="sxs-lookup"><span data-stu-id="4a958-111">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode AppendChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode AppendChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ AppendChild(System::Xml::XmlNode ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member AppendChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.AppendChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.AppendChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="4a958-112">要添加的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-112">The node to add.</span>
          </span>
          <span data-ttu-id="4a958-113">要添加的节点的全部内容会移动到指定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-113">All the contents of the node to be added are moved into the specified location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-114">将指定的节点添加到该节点的子节点列表的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-114">Adds the specified node to the end of the list of child nodes, of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-115">添加的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-115">The node added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-116">如果`newChild`是已在树中，它是从其原始位置中删除并添加到它的目标位置。</span><span class="sxs-lookup"><span data-stu-id="4a958-116">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="4a958-117">有关插入节点的详细信息，请参阅[将节点插入 XML 文档](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)。</span><span class="sxs-lookup"><span data-stu-id="4a958-117">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="4a958-118">如果插入的节点创建另一个文档中，可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>将节点导入到当前文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-118">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="4a958-119">然后，导入的节点可以插入到当前文档中。</span><span class="sxs-lookup"><span data-stu-id="4a958-119">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-120">下面的示例将新节点添加到 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-120">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/VB/source.vb#1)]  
  
 <span data-ttu-id="4a958-121">**输出：**</span><span class="sxs-lookup"><span data-stu-id="4a958-121">**Output:**</span></span>  
  
```  
Display the modified XML...  
<?xml version="1.0" encoding="IBM437"?>  
<book genre="novel" ISBN="1-861001-57-5">  
  <title>Pride And Prejudice</title>  
  <price>19.95</price>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4a958-122">此节点的类型不允许 <paramref name="newChild" /> 节点类型的子节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-122">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="4a958-123">
            <paramref name="newChild" /> 是此节点的上级节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-123">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a958-124">
            <paramref name="newChild" /> 是从不同于创建此节点的文档创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-124">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="4a958-125">该节点是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-125">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="4a958-126">
            <para>重写时<see langword="AppendChild" />在派生类中，要正确，在引发事件的顺序必须调用<see langword="AppendChild" />基类的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-126">
              <para>When overriding <see langword="AppendChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="AppendChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Attributes As XmlAttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlAttributeCollection ^ Attributes { System::Xml::XmlAttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Xml.XmlAttributeCollection" Usage="System.Xml.XmlNode.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-127">获取一个 <see cref="T:System.Xml.XmlAttributeCollection" />，它包含该节点的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-127">Gets an <see cref="T:System.Xml.XmlAttributeCollection" /> containing the attributes of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-128">一个 <see langword="XmlAttributeCollection" />，它包含该节点的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-128">An <see langword="XmlAttributeCollection" /> containing the attributes of the node.</span>
          </span>
          <span data-ttu-id="4a958-129">如果节点为 XmlNodeType.Element 类型，则返回该节点的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-129">If the node is of type XmlNodeType.Element, the attributes of the node are returned.</span>
          </span>
          <span data-ttu-id="4a958-130">对于其他类型的单元格，此属性返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-130">Otherwise, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a958-131">下面的示例将新属性添加到 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-131">The following example adds a new attribute to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public virtual string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlNode.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-132">获取当前节点的基 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-132">Gets the base URI of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-133">从其加载节点的位置；如果节点没有基 URI，则为 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-133">The location from which the node was loaded or String.Empty if the node has no base URI.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-134">联网的 XML 文档的聚合使用各种 W3C 标准包含机制的数据块组成，因此包含来自不同位置的节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-134">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="4a958-135">`BaseURI`告诉您这些节点来自何处。</span><span class="sxs-lookup"><span data-stu-id="4a958-135">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="4a958-136">此属性的值取决于节点类型。</span><span class="sxs-lookup"><span data-stu-id="4a958-136">The value of this property varies depending on the node type.</span></span> <span data-ttu-id="4a958-137">例如，文档节点返回的位置<xref:System.Xml.XmlDocument>对象。</span><span class="sxs-lookup"><span data-stu-id="4a958-137">For example, Document nodes return the location of the <xref:System.Xml.XmlDocument> object.</span></span> <span data-ttu-id="4a958-138">这是外部的 EntityReference 节点的子节点的节点返回实体本身的位置。</span><span class="sxs-lookup"><span data-stu-id="4a958-138">Nodes which are child nodes of external EntityReference nodes return the location of the entity itself.</span></span> <span data-ttu-id="4a958-139">例如，考虑下面的 XML 文档：</span><span class="sxs-lookup"><span data-stu-id="4a958-139">For example, consider the following XML document:</span></span>  
  
```xml  
<!DOCTYPE item [  
<!ENTITY xyz SYSTEM "a/b.xml">  
]>  
<item num='123'>&xyz;</item>  
```  
  
 <span data-ttu-id="4a958-140">其中的外部实体`a/b.xml`包含的 XML 文本： `<test>123</test>`。</span><span class="sxs-lookup"><span data-stu-id="4a958-140">where the external entity `a/b.xml` contains the XML text: `<test>123</test>`.</span></span>  
  
 <span data-ttu-id="4a958-141">如果从加载该文档http://server/mydata.xml，`BaseURI`返回以下：</span><span class="sxs-lookup"><span data-stu-id="4a958-141">If the document is loaded from http://server/mydata.xml, `BaseURI` returns the following:</span></span>  
  
|<span data-ttu-id="4a958-142">NodeType</span><span class="sxs-lookup"><span data-stu-id="4a958-142">NodeType</span></span>|<span data-ttu-id="4a958-143">name</span><span class="sxs-lookup"><span data-stu-id="4a958-143">Name</span></span>|<span data-ttu-id="4a958-144">BaseURI</span><span class="sxs-lookup"><span data-stu-id="4a958-144">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="4a958-145">特性</span><span class="sxs-lookup"><span data-stu-id="4a958-145">Attribute</span></span>|<span data-ttu-id="4a958-146">num</span><span class="sxs-lookup"><span data-stu-id="4a958-146">num</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="4a958-147">Document</span><span class="sxs-lookup"><span data-stu-id="4a958-147">Document</span></span>|<span data-ttu-id="4a958-148">#document</span><span class="sxs-lookup"><span data-stu-id="4a958-148">#document</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="4a958-149">DocumentType</span><span class="sxs-lookup"><span data-stu-id="4a958-149">DocumentType</span></span>|<span data-ttu-id="4a958-150">项</span><span class="sxs-lookup"><span data-stu-id="4a958-150">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="4a958-151">实体</span><span class="sxs-lookup"><span data-stu-id="4a958-151">Entity</span></span>|<span data-ttu-id="4a958-152">xyz</span><span class="sxs-lookup"><span data-stu-id="4a958-152">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="4a958-153">元素</span><span class="sxs-lookup"><span data-stu-id="4a958-153">Element</span></span>|<span data-ttu-id="4a958-154">项</span><span class="sxs-lookup"><span data-stu-id="4a958-154">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="4a958-155">EntityReference</span><span class="sxs-lookup"><span data-stu-id="4a958-155">EntityReference</span></span>|<span data-ttu-id="4a958-156">xyz</span><span class="sxs-lookup"><span data-stu-id="4a958-156">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="4a958-157">元素</span><span class="sxs-lookup"><span data-stu-id="4a958-157">Element</span></span>|<span data-ttu-id="4a958-158">测试</span><span class="sxs-lookup"><span data-stu-id="4a958-158">test</span></span>|http://server/a/b.xml|  
|<span data-ttu-id="4a958-159">Text</span><span class="sxs-lookup"><span data-stu-id="4a958-159">Text</span></span>|<span data-ttu-id="4a958-160">#text</span><span class="sxs-lookup"><span data-stu-id="4a958-160">#text</span></span>|http://server/a/b.xml|  
  
 <span data-ttu-id="4a958-161">`BaseURI` 查找实体引用边界，因此如果实体被展开此信息不会保留，此属性返回的位置`XmlDocument`在所有情况下的对象。</span><span class="sxs-lookup"><span data-stu-id="4a958-161">`BaseURI` looks for entity reference boundaries, so if entities are expanded this information is not preserved and this property returns the location of the `XmlDocument` object in all cases.</span></span>  
  
 <span data-ttu-id="4a958-162">作为第二个示例中，给定以下 XML 文档：</span><span class="sxs-lookup"><span data-stu-id="4a958-162">As a second example, given the following XML document:</span></span>  
  
```xml  
<!DOCTYPE Mydata SYSTEM "http://localhost/doctype.dtd">  
<baa>&xyz;</baa>  
```  
  
 <span data-ttu-id="4a958-163">其中的 DTD 文件包含如下内容：</span><span class="sxs-lookup"><span data-stu-id="4a958-163">where the DTD file contains the following:</span></span>  
  
```  
<!ENTITY xyz <E1>My Data</E1>  
<!ELEMENT baa #PCDATA>  
<!ATTLIST baa attr1 "woof">  
```  
  
 <span data-ttu-id="4a958-164">如果 XML 文档加载从http://localhost/mydata.xml，`BaseURI`返回以下内容，每个节点：</span><span class="sxs-lookup"><span data-stu-id="4a958-164">If the XML document is loaded from http://localhost/mydata.xml, `BaseURI` returns the following for each of the nodes:</span></span>  
  
|<span data-ttu-id="4a958-165">NodeType</span><span class="sxs-lookup"><span data-stu-id="4a958-165">NodeType</span></span>|<span data-ttu-id="4a958-166">name</span><span class="sxs-lookup"><span data-stu-id="4a958-166">Name</span></span>|<span data-ttu-id="4a958-167">BaseURI</span><span class="sxs-lookup"><span data-stu-id="4a958-167">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="4a958-168">Document</span><span class="sxs-lookup"><span data-stu-id="4a958-168">Document</span></span>|<span data-ttu-id="4a958-169">#document</span><span class="sxs-lookup"><span data-stu-id="4a958-169">#document</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="4a958-170">DocumentType</span><span class="sxs-lookup"><span data-stu-id="4a958-170">DocumentType</span></span>|<span data-ttu-id="4a958-171">Mydata</span><span class="sxs-lookup"><span data-stu-id="4a958-171">Mydata</span></span>|http://localhost/mydata.xml<br /><br /> <span data-ttu-id="4a958-172"><xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType>或<xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType>属性可以用于标识的 DTD 文件已加载的位置。</span><span class="sxs-lookup"><span data-stu-id="4a958-172">The <xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType> properties can be used to identify where the DTD file was loaded from.</span></span>|  
|<span data-ttu-id="4a958-173">元素</span><span class="sxs-lookup"><span data-stu-id="4a958-173">Element</span></span>|<span data-ttu-id="4a958-174">baa，这是</span><span class="sxs-lookup"><span data-stu-id="4a958-174">baa</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="4a958-175">实体</span><span class="sxs-lookup"><span data-stu-id="4a958-175">Entity</span></span>|<span data-ttu-id="4a958-176">xyz</span><span class="sxs-lookup"><span data-stu-id="4a958-176">xyz</span></span>|http://localhost/doctype.dtd|  
|<span data-ttu-id="4a958-177">EntityReference</span><span class="sxs-lookup"><span data-stu-id="4a958-177">EntityReference</span></span>|<span data-ttu-id="4a958-178">xyz</span><span class="sxs-lookup"><span data-stu-id="4a958-178">xyz</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="4a958-179">特性</span><span class="sxs-lookup"><span data-stu-id="4a958-179">Attribute</span></span>|<span data-ttu-id="4a958-180">woof</span><span class="sxs-lookup"><span data-stu-id="4a958-180">woof</span></span>|http://localhost/mydata.xml|  
  
> [!NOTE]
>  <span data-ttu-id="4a958-181">默认属性的基本 URI 是元素的其所属的基 URI 相同。</span><span class="sxs-lookup"><span data-stu-id="4a958-181">The base URI of a default attribute is the same as the base URI of the element to which they belong.</span></span>  
  
 <span data-ttu-id="4a958-182">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="4a958-182">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNodeList ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ChildNodes As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeList ^ ChildNodes { System::Xml::XmlNodeList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Xml.XmlNodeList" Usage="System.Xml.XmlNode.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-183">获取节点的所有子节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-183">Gets all the child nodes of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-184">一个包含节点的所有子节点的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-184">An object that contains all the child nodes of the node.</span>
          </span>
          <span data-ttu-id="4a958-185">如果没有子节点，该属性返回空 <see cref="T:System.Xml.XmlNodeList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-185">If there are no child nodes, this property returns an empty <see cref="T:System.Xml.XmlNodeList" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-186">子节点的信息，请参阅[W3C DOM (Core) 级别 1 规范](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="4a958-186">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-187">以下示例显示根元素的所有子的节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-187">The following example displays all the child nodes of the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Xml.XmlNode&#xA;override this.Clone : unit -&gt; System.Xml.XmlNode" Usage="xmlNode.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a958-188">创建此节点的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-188">Creates a duplicate of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-189">克隆的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-189">The cloned node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-190">克隆<xref:System.Xml.XmlElement>复制所有属性和它们的值，包括生成的 XML 处理器来表示默认特性的特性。</span><span class="sxs-lookup"><span data-stu-id="4a958-190">Cloning an <xref:System.Xml.XmlElement> copies all attributes and their values, including those generated by the XML processor to represent defaulted attributes.</span></span> <span data-ttu-id="4a958-191">此方法以递归方式克隆节点和其下的子树。</span><span class="sxs-lookup"><span data-stu-id="4a958-191">This method recursively clones the node and the subtree underneath it.</span></span>  
  
 <span data-ttu-id="4a958-192">`Clone` 等效于调用`CloneNode(true)`。</span><span class="sxs-lookup"><span data-stu-id="4a958-192">`Clone` is equivalent to calling `CloneNode(true)`.</span></span>  
  
 <span data-ttu-id="4a958-193">下表描述每个特定行为<xref:System.Xml.XmlNodeType>。</span><span class="sxs-lookup"><span data-stu-id="4a958-193">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="4a958-194">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="4a958-194">XmlNodeType</span></span>|<span data-ttu-id="4a958-195">克隆</span><span class="sxs-lookup"><span data-stu-id="4a958-195">Clone</span></span>|  
|-----------------|-----------|  
|<span data-ttu-id="4a958-196">特性</span><span class="sxs-lookup"><span data-stu-id="4a958-196">Attribute</span></span>|<span data-ttu-id="4a958-197">克隆包含子节点的属性节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-197">Clones the attribute node, including child nodes.</span></span>|  
|<span data-ttu-id="4a958-198">CData</span><span class="sxs-lookup"><span data-stu-id="4a958-198">CData</span></span>|<span data-ttu-id="4a958-199">克隆 CData 节点，包括其数据内容。</span><span class="sxs-lookup"><span data-stu-id="4a958-199">Clones the CData node, including its data content.</span></span>|  
|<span data-ttu-id="4a958-200">注释</span><span class="sxs-lookup"><span data-stu-id="4a958-200">Comment</span></span>|<span data-ttu-id="4a958-201">克隆注释节点，包括其文本内容。</span><span class="sxs-lookup"><span data-stu-id="4a958-201">Clones the comment node, including its text content.</span></span>|  
|<span data-ttu-id="4a958-202">Document</span><span class="sxs-lookup"><span data-stu-id="4a958-202">Document</span></span>|<span data-ttu-id="4a958-203">克隆该文档节点，包括任何子节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-203">Clones the document node, including any child nodes.</span></span>|  
|<span data-ttu-id="4a958-204">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="4a958-204">DocumentFragment</span></span>|<span data-ttu-id="4a958-205">复制文档片段节点，包括任何子节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-205">Clones the document fragment node, including any child nodes.</span></span>|  
|<span data-ttu-id="4a958-206">DocumentType</span><span class="sxs-lookup"><span data-stu-id="4a958-206">DocumentType</span></span>|<span data-ttu-id="4a958-207">克隆文档类型节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-207">Clones the document type node.</span></span>|  
|<span data-ttu-id="4a958-208">元素</span><span class="sxs-lookup"><span data-stu-id="4a958-208">Element</span></span>|<span data-ttu-id="4a958-209">克隆的元素节点、 其属性和任何子节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-209">Clones the element node, its attributes, and any child nodes.</span></span>|  
|<span data-ttu-id="4a958-210">实体</span><span class="sxs-lookup"><span data-stu-id="4a958-210">Entity</span></span>|<span data-ttu-id="4a958-211">无法克隆 Entity 节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-211">Entity nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="4a958-212">EntityReference</span><span class="sxs-lookup"><span data-stu-id="4a958-212">EntityReference</span></span>|<span data-ttu-id="4a958-213">克隆的实体引用节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-213">Clones the entity reference node.</span></span> <span data-ttu-id="4a958-214">不包括替换文本。</span><span class="sxs-lookup"><span data-stu-id="4a958-214">The replacement text is not included.</span></span>|  
|<span data-ttu-id="4a958-215">Notation</span><span class="sxs-lookup"><span data-stu-id="4a958-215">Notation</span></span>|<span data-ttu-id="4a958-216">表示法节点无法克隆。</span><span class="sxs-lookup"><span data-stu-id="4a958-216">Notation nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="4a958-217">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="4a958-217">ProcessingInstruction</span></span>|<span data-ttu-id="4a958-218">复制处理指令节点，包括其目标和数据。</span><span class="sxs-lookup"><span data-stu-id="4a958-218">Clones the processing instruction node, including its target and data.</span></span>|  
|<span data-ttu-id="4a958-219">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="4a958-219">SignificantWhitespace</span></span>|<span data-ttu-id="4a958-220">克隆有意义的空白节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="4a958-220">Clones the significant white space node, including its data value.</span></span>|  
|<span data-ttu-id="4a958-221">Text</span><span class="sxs-lookup"><span data-stu-id="4a958-221">Text</span></span>|<span data-ttu-id="4a958-222">克隆该文本节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="4a958-222">Clones the text node, including its data value.</span></span>|  
|<span data-ttu-id="4a958-223">Whitespace</span><span class="sxs-lookup"><span data-stu-id="4a958-223">Whitespace</span></span>|<span data-ttu-id="4a958-224">克隆的空白节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="4a958-224">Clones the white space node, including its data value.</span></span>|  
|<span data-ttu-id="4a958-225">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="4a958-225">XmlDeclaration</span></span>|<span data-ttu-id="4a958-226">克隆 XmlDeclaration 节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="4a958-226">Clones the XmlDeclaration node, including its data value.</span></span>|  
|<span data-ttu-id="4a958-227">所有其他节点类型。</span><span class="sxs-lookup"><span data-stu-id="4a958-227">All other node types.</span></span>|<span data-ttu-id="4a958-228">无法克隆这些节点类型。</span><span class="sxs-lookup"><span data-stu-id="4a958-228">These node types cannot be cloned.</span></span>|  
  
 <span data-ttu-id="4a958-229">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="4a958-229">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-230">下面的示例克隆的 XML 文档的根节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-230">The following example clones the root node of the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="abstract member CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlNode.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="4a958-231">若要递归地克隆指定节点下的子树，则为 <see langword="true" />；若仅克隆节点本身，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-231">
              <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-232">当在派生类中被重写时，创建该节点的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-232">Creates a duplicate of the node, when overridden in a derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-233">克隆的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-233">The cloned node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-234">此方法可作为节点的复制构造函数。</span><span class="sxs-lookup"><span data-stu-id="4a958-234">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="4a958-235">重复节点有没有父级 (<xref:System.Xml.XmlNode.ParentNode%2A>返回`null`)。</span><span class="sxs-lookup"><span data-stu-id="4a958-235">The duplicate node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
 <span data-ttu-id="4a958-236">下表描述每个特定行为<xref:System.Xml.XmlNodeType>。</span><span class="sxs-lookup"><span data-stu-id="4a958-236">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="4a958-237">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="4a958-237">XmlNodeType</span></span>|<span data-ttu-id="4a958-238">CloneNode(true)</span><span class="sxs-lookup"><span data-stu-id="4a958-238">CloneNode(true)</span></span>|<span data-ttu-id="4a958-239">CloneNode(false)</span><span class="sxs-lookup"><span data-stu-id="4a958-239">CloneNode(false)</span></span>|  
|-----------------|-----------------------|------------------------|  
|<span data-ttu-id="4a958-240">特性</span><span class="sxs-lookup"><span data-stu-id="4a958-240">Attribute</span></span>|<span data-ttu-id="4a958-241">克隆包含子节点的属性节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-241">Clones the attribute node, including child nodes.</span></span>|<span data-ttu-id="4a958-242">克隆包含子节点的属性节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-242">Clones the attribute node, including child nodes.</span></span>|  
|<span data-ttu-id="4a958-243">CData</span><span class="sxs-lookup"><span data-stu-id="4a958-243">CData</span></span>|<span data-ttu-id="4a958-244">克隆 CData 节点，包括其数据内容。</span><span class="sxs-lookup"><span data-stu-id="4a958-244">Clones the CData node, including its data content.</span></span>|<span data-ttu-id="4a958-245">克隆 CData 节点，包括其数据内容。</span><span class="sxs-lookup"><span data-stu-id="4a958-245">Clones the CData node, including its data content.</span></span>|  
|<span data-ttu-id="4a958-246">注释</span><span class="sxs-lookup"><span data-stu-id="4a958-246">Comment</span></span>|<span data-ttu-id="4a958-247">克隆注释节点，包括其文本内容。</span><span class="sxs-lookup"><span data-stu-id="4a958-247">Clones the comment node, including its text content.</span></span>|<span data-ttu-id="4a958-248">克隆注释节点，包括其文本内容。</span><span class="sxs-lookup"><span data-stu-id="4a958-248">Clones the comment node, including its text content.</span></span>|  
|<span data-ttu-id="4a958-249">Document</span><span class="sxs-lookup"><span data-stu-id="4a958-249">Document</span></span>|<span data-ttu-id="4a958-250">克隆该文档节点，包括任何子节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-250">Clones the document node, including any child nodes.</span></span>|<span data-ttu-id="4a958-251">克隆文档节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-251">Clones the document node.</span></span>|  
|<span data-ttu-id="4a958-252">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="4a958-252">DocumentFragment</span></span>|<span data-ttu-id="4a958-253">复制文档片段节点，包括任何子节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-253">Clones the document fragment node, including any child nodes.</span></span>|<span data-ttu-id="4a958-254">复制文档片段节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-254">Clones the document fragment node.</span></span>|  
|<span data-ttu-id="4a958-255">DocumentType</span><span class="sxs-lookup"><span data-stu-id="4a958-255">DocumentType</span></span>|<span data-ttu-id="4a958-256">克隆文档类型节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-256">Clones the document type node.</span></span>|<span data-ttu-id="4a958-257">克隆文档类型节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-257">Clones the document type node.</span></span>|  
|<span data-ttu-id="4a958-258">元素</span><span class="sxs-lookup"><span data-stu-id="4a958-258">Element</span></span>|<span data-ttu-id="4a958-259">克隆的元素节点、 其属性和任何子节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-259">Clones the element node, its attributes, and any child nodes.</span></span>|<span data-ttu-id="4a958-260">克隆的元素节点和其属性，包括任何默认属性。</span><span class="sxs-lookup"><span data-stu-id="4a958-260">Clones the element node and its attributes, including any default attributes.</span></span>|  
|<span data-ttu-id="4a958-261">实体</span><span class="sxs-lookup"><span data-stu-id="4a958-261">Entity</span></span>|<span data-ttu-id="4a958-262">无法克隆 Entity 节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-262">Entity nodes cannot be cloned.</span></span>|<span data-ttu-id="4a958-263">无法克隆 Entity 节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-263">Entity nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="4a958-264">EntityReference</span><span class="sxs-lookup"><span data-stu-id="4a958-264">EntityReference</span></span>|<span data-ttu-id="4a958-265">克隆的实体引用节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-265">Clones the entity reference node.</span></span> <span data-ttu-id="4a958-266">不包括替换文本。</span><span class="sxs-lookup"><span data-stu-id="4a958-266">The replacement text is not included.</span></span>|<span data-ttu-id="4a958-267">克隆的实体引用节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-267">Clones the entity reference node.</span></span> <span data-ttu-id="4a958-268">不包括替换文本。</span><span class="sxs-lookup"><span data-stu-id="4a958-268">The replacement text is not included.</span></span>|  
|<span data-ttu-id="4a958-269">Notation</span><span class="sxs-lookup"><span data-stu-id="4a958-269">Notation</span></span>|<span data-ttu-id="4a958-270">表示法节点无法克隆。</span><span class="sxs-lookup"><span data-stu-id="4a958-270">Notation nodes cannot be cloned.</span></span>|<span data-ttu-id="4a958-271">表示法节点无法克隆。</span><span class="sxs-lookup"><span data-stu-id="4a958-271">Notation nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="4a958-272">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="4a958-272">ProcessingInstruction</span></span>|<span data-ttu-id="4a958-273">复制处理指令节点，包括其目标和数据。</span><span class="sxs-lookup"><span data-stu-id="4a958-273">Clones the processing instruction node, including its target and data.</span></span>|<span data-ttu-id="4a958-274">复制处理指令节点，包括其目标和数据。</span><span class="sxs-lookup"><span data-stu-id="4a958-274">Clones the processing instruction node, including its target and data.</span></span>|  
|<span data-ttu-id="4a958-275">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="4a958-275">SignificantWhitespace</span></span>|<span data-ttu-id="4a958-276">克隆有意义的空白节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="4a958-276">Clones the significant white space node, including its data value.</span></span>|<span data-ttu-id="4a958-277">克隆有意义的空白节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="4a958-277">Clones the significant white space node, including its data value.</span></span>|  
|<span data-ttu-id="4a958-278">Text</span><span class="sxs-lookup"><span data-stu-id="4a958-278">Text</span></span>|<span data-ttu-id="4a958-279">克隆该文本节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="4a958-279">Clones the text node, including its data value.</span></span>|<span data-ttu-id="4a958-280">克隆该文本节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="4a958-280">Clones the text node, including its data value.</span></span>|  
|<span data-ttu-id="4a958-281">Whitespace</span><span class="sxs-lookup"><span data-stu-id="4a958-281">Whitespace</span></span>|<span data-ttu-id="4a958-282">克隆的空白节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="4a958-282">Clones the white space node, including its data value.</span></span>|<span data-ttu-id="4a958-283">克隆的空白节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="4a958-283">Clones the white space node, including its data value.</span></span>|  
|<span data-ttu-id="4a958-284">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="4a958-284">XmlDeclaration</span></span>|<span data-ttu-id="4a958-285">克隆 XmlDeclaration 节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="4a958-285">Clones the XmlDeclaration node, including its data value.</span></span>|<span data-ttu-id="4a958-286">克隆 XmlDeclaration 节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="4a958-286">Clones the XmlDeclaration node, including its data value.</span></span>|  
|<span data-ttu-id="4a958-287">所有其他节点类型。</span><span class="sxs-lookup"><span data-stu-id="4a958-287">All other node types.</span></span>|<span data-ttu-id="4a958-288">无法克隆这些节点类型。</span><span class="sxs-lookup"><span data-stu-id="4a958-288">These node types cannot be cloned.</span></span>|<span data-ttu-id="4a958-289">无法克隆这些节点类型。</span><span class="sxs-lookup"><span data-stu-id="4a958-289">These node types cannot be cloned.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4a958-290">下面的示例显示的深度和浅表克隆之间的差异。</span><span class="sxs-lookup"><span data-stu-id="4a958-290">The following example shows the difference between a deep and shallow clone.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4a958-291">在不能被克隆的节点类型上调用该方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-291">Calling this method on a node type that cannot be cloned.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberSignature Language="F#" Value="abstract member CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlNode.CreateNavigator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.XPath.IXPathNavigable.CreateNavigator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a958-292">创建 <see cref="T:System.Xml.XPath.XPathNavigator" /> 以浏览此对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-292">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for navigating this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-293">用于导航节点的 <see langword="XPathNavigator" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-293">An <see langword="XPathNavigator" /> object used to navigate the node.</span>
          </span>
          <span data-ttu-id="4a958-294">
            <see langword="XPathNavigator" /> 定位在从其调用方法的节点上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-294">The <see langword="XPathNavigator" /> is positioned on the node from which the method was called.</span>
          </span>
          <span data-ttu-id="4a958-295">它不定位在文档的根上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-295">It is not positioned on the root of the document.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-296">`XPathNavigator`提供对数据的只读的、 随机访问。</span><span class="sxs-lookup"><span data-stu-id="4a958-296">The `XPathNavigator` provides read-only, random access to data.</span></span> <span data-ttu-id="4a958-297">因为它已优化的 XSLT 转换，它提供性能优势时用作一种输出机制到<xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4a958-297">Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4a958-298">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="4a958-298">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-299">下面的示例加载并执行 XSLT 转换之前编辑 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-299">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode FirstChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FirstChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ FirstChild { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstChild : System.Xml.XmlNode" Usage="System.Xml.XmlNode.FirstChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-300">获取节点的第一个子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-300">Gets the first child of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-301">节点的第一个子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-301">The first child of the node.</span>
          </span>
          <span data-ttu-id="4a958-302">如果没有这样的节点，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-302">If there is no such node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-303">子节点的信息，请参阅[W3C DOM (Core) 级别 1 规范](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="4a958-303">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-304">以下示例显示的标题元素。</span><span class="sxs-lookup"><span data-stu-id="4a958-304">The following example displays the title element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="xmlNode.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a958-305">获取循环访问当前节点中子节点的枚举。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-305">Get an enumerator that iterates through the child nodes in the current node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-306">一个 <see cref="T:System.Collections.IEnumerator" /> 对象，可用于循环访问当前节点中的子节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-306">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the child nodes in the current node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-307">支持的"for each"样式迭代中的节点`XmlNode`。</span><span class="sxs-lookup"><span data-stu-id="4a958-307">Provides support for the "for each" style iteration over the nodes in the `XmlNode`.</span></span>  
  
 <span data-ttu-id="4a958-308">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="4a958-308">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-309">下面的示例显示在 XML 文档中的所有书籍。</span><span class="sxs-lookup"><span data-stu-id="4a958-309">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/VB/source.vb#1)]  
  
 <span data-ttu-id="4a958-310">该示例使用该文件，`books.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="4a958-310">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.GetEnumerator Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaceOfPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetNamespaceOfPrefix (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespaceOfPrefix(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespaceOfPrefix (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetNamespaceOfPrefix(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member GetNamespaceOfPrefix : string -&gt; string&#xA;override this.GetNamespaceOfPrefix : string -&gt; string" Usage="xmlNode.GetNamespaceOfPrefix prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="4a958-311">你想查找的命名空间 URI 的前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-311">The prefix whose namespace URI you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-312">查找当前节点范围内离给定的前缀最近的 **xmlns** 声明，并返回声明中的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-312">Looks up the closest **xmlns** declaration for the given prefix that is in scope for the current node and returns the namespace URI in the declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-313">指定前缀的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-313">The namespace URI of the specified prefix.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-314">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="4a958-314">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-315">下面的示例将新属性添加到 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-315">The following example adds a new attribute to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrefixOfNamespace">
      <MemberSignature Language="C#" Value="public virtual string GetPrefixOfNamespace (string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrefixOfNamespace(string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrefixOfNamespace (namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrefixOfNamespace(System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetPrefixOfNamespace : string -&gt; string&#xA;override this.GetPrefixOfNamespace : string -&gt; string" Usage="xmlNode.GetPrefixOfNamespace namespaceURI" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI">
          <span data-ttu-id="4a958-316">要查找其前缀的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-316">The namespace URI whose prefix you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-317">查找当前节点范围内离给定的命名空间 URI 最近的 **xmlns** 声明，并返回声明中定义的前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-317">Looks up the closest **xmlns** declaration for the given namespace URI that is in scope for the current node and returns the prefix defined in that declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-318">指定的命名空间 URI 的前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-318">The prefix for the specified namespace URI.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-319">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="4a958-319">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-320">下面的示例将新元素添加到 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-320">The following example adds a new element to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildNodes">
      <MemberSignature Language="C#" Value="public virtual bool HasChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.HasChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasChildNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasChildNodes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildNodes : bool" Usage="System.Xml.XmlNode.HasChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-321">获取一个值，该值指示此节点是否有任何子节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-321">Gets a value indicating whether this node has any child nodes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-322">如果该节点具有子节点，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-322">
              <see langword="true" /> if the node has child nodes; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-323">子节点的信息，请参阅[W3C DOM (Core) 级别 1 规范](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="4a958-323">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-324">以下示例显示根元素的所有子的节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-324">The following example displays all the child nodes of the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public virtual string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Xml.XmlNode.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-325">获取或设置节点及其所有子节点的串连值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-325">Gets or sets the concatenated values of the node and all its child nodes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-326">节点及其所有子节点的串连值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-326">The concatenated values of the node and all its child nodes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-327">设置此属性将所有子节点都替换给定字符串的已分析内容。</span><span class="sxs-lookup"><span data-stu-id="4a958-327">Setting this property replaces all the child nodes with the parsed contents of the given string.</span></span>  
  
 <span data-ttu-id="4a958-328">对于叶节点，`InnerText`返回的内容与相同<xref:System.Xml.XmlNode.Value%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4a958-328">For leaf nodes, `InnerText` returns the same content as the <xref:System.Xml.XmlNode.Value%2A> property.</span></span>  
  
 <span data-ttu-id="4a958-329">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="4a958-329">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-330">下面的示例比较`InnerText`和<xref:System.Xml.XmlNode.InnerXml%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4a958-330">The following example compares the `InnerText` and <xref:System.Xml.XmlNode.InnerXml%2A> properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 <span data-ttu-id="4a958-331">**输出：**</span><span class="sxs-lookup"><span data-stu-id="4a958-331">**Output:**</span></span>  
  
```  
Display the InnerText of the element...  
some textmore text  
Display the InnerXml of the element...  
some text<child />more text  
<elem>Text containing &lt;markup/&gt; will have char(&lt;) and char(&gt;) escape  
d.</elem>  
<elem>Text containing <markup />.</elem>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public virtual string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string with get, set" Usage="System.Xml.XmlNode.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-332">获取或设置仅表示该节点的子节点的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-332">Gets or sets the markup representing only the child nodes of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-333">该节点的子节点的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-333">The markup of the child nodes of this node.</span>
          </span>
          <span data-ttu-id="4a958-334">
            <block subset="none" type="note">
              <para>
                <see langword="InnerXml" /> 不返回默认属性。  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-334">
              <block subset="none" type="note">
                <para>
                  <see langword="InnerXml" /> does not return default attributes.  </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-335">尝试从一个节点的子节点不能设置此属性，例如文本节点，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="4a958-335">Attempting to set this property from a node that cannot have child nodes, for example a Text node, throws an exception.</span></span> <span data-ttu-id="4a958-336">否则，设置`InnerXml`的子节点，节点，替换给定字符串的已分析内容。</span><span class="sxs-lookup"><span data-stu-id="4a958-336">Otherwise, setting `InnerXml` replaces the child nodes, of the node, with the parsed contents of the given string.</span></span> <span data-ttu-id="4a958-337">分析在当前命名空间上下文中完成。</span><span class="sxs-lookup"><span data-stu-id="4a958-337">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="4a958-338">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="4a958-338">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a958-339">`InnerXml` 不是有效的方法，若要修改 dom。</span><span class="sxs-lookup"><span data-stu-id="4a958-339">`InnerXml` is not an efficient way to modify the DOM.</span></span> <span data-ttu-id="4a958-340">替换复杂的节点时，则可能存在性能问题。</span><span class="sxs-lookup"><span data-stu-id="4a958-340">There may be performance issues when replacing complex nodes.</span></span> <span data-ttu-id="4a958-341">构建节点并使用如下所示方法效率更高`InsertBefore`， `InsertAfter`， `AppendChild`，和`RemoveChild`修改 Xml 文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-341">It is more efficient to construct nodes and use methods such as `InsertBefore`, `InsertAfter`, `AppendChild`, and `RemoveChild` to modify the Xml document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-342">下面的示例比较<xref:System.Xml.XmlNode.InnerText%2A>和`InnerXml`属性。</span><span class="sxs-lookup"><span data-stu-id="4a958-342">The following example compares the <xref:System.Xml.XmlNode.InnerText%2A> and `InnerXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4a958-343">在不能具有子节点的节点上设置该属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-343">Setting this property on a node that cannot have child nodes.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="4a958-344">设置此属性时指定的 XML 格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-344">The XML specified when setting this property is not well-formed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertAfter(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertAfter (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertAfter(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.InsertAfter : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.InsertAfter (newChild, refChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="4a958-345">要插入的 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-345">The <see langword="XmlNode" /> to insert.</span>
          </span>
        </param>
        <param name="refChild">
          <span data-ttu-id="4a958-346">
            <see langword="XmlNode" />，它是引用节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-346">The <see langword="XmlNode" /> that is the reference node.</span>
          </span>
          <span data-ttu-id="4a958-347">
            <c>newNode</c> 放置在<c>refNode</c> 之后。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-347">The <c>newNode</c> is placed after the <c>refNode</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-348">将指定的节点紧接着插入指定的引用节点之后。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-348">Inserts the specified node immediately after the specified reference node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-349">插入的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-349">The node being inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-350">如果`refChild`是`null`，插入`newChild`的子节点列表的开头。</span><span class="sxs-lookup"><span data-stu-id="4a958-350">If `refChild` is `null`, insert `newChild` at the beginning of the list of child nodes.</span></span> <span data-ttu-id="4a958-351">中的所有内容`newChild`，按相同顺序之后插入`refChild`。</span><span class="sxs-lookup"><span data-stu-id="4a958-351">All the contents of the `newChild` are inserted, in the same order, after `refChild`.</span></span> <span data-ttu-id="4a958-352">如果`newChild`是已在树中，它是从其原始位置中删除并添加到它的目标位置。</span><span class="sxs-lookup"><span data-stu-id="4a958-352">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="4a958-353">有关插入节点的详细信息，请参阅[将节点插入 XML 文档](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)。</span><span class="sxs-lookup"><span data-stu-id="4a958-353">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="4a958-354">如果插入的节点创建另一个文档中，可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>将节点导入到当前文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-354">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="4a958-355">然后，导入的节点可以插入到当前文档中。</span><span class="sxs-lookup"><span data-stu-id="4a958-355">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="4a958-356">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="4a958-356">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-357">下面的示例将新节点添加到 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-357">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4a958-358">此节点的类型不允许 <paramref name="newChild" /> 节点类型的子节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-358">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="4a958-359">
            <paramref name="newChild" /> 是此节点的上级节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-359">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a958-360">
            <paramref name="newChild" /> 是从不同于创建此节点的文档创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-360">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="4a958-361">
            <paramref name="refChild" /> 不是此节点的子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-361">The <paramref name="refChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="4a958-362">该节点是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-362">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="4a958-363">
            <para>重写时<see langword="InsertAfter" />在派生类中，要正确，在引发事件的顺序必须调用<see langword="InsertAfter" />基类的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-363">
              <para>When overriding <see langword="InsertAfter" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="InsertAfter" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertBefore(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertBefore (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertBefore(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.InsertBefore : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.InsertBefore (newChild, refChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="4a958-364">要插入的 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-364">The <see langword="XmlNode" /> to insert.</span>
          </span>
        </param>
        <param name="refChild">
          <span data-ttu-id="4a958-365">
            <see langword="XmlNode" />，它是引用节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-365">The <see langword="XmlNode" /> that is the reference node.</span>
          </span>
          <span data-ttu-id="4a958-366">
            <c>newChild</c> 放置在该节点之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-366">The <c>newChild</c> is placed before this node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-367">将指定的节点紧接着插入指定的引用节点之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-367">Inserts the specified node immediately before the specified reference node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-368">插入的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-368">The node being inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-369">如果`refChild`是`null`，插入`newChild`的子节点列表的末尾。</span><span class="sxs-lookup"><span data-stu-id="4a958-369">If `refChild` is `null`, insert `newChild` at the end of the list of child nodes.</span></span> <span data-ttu-id="4a958-370">中的所有内容`newChild`插入时，相同顺序之前`refChild`。</span><span class="sxs-lookup"><span data-stu-id="4a958-370">All the contents of the `newChild` are inserted, in the same order, before `refChild`.</span></span> <span data-ttu-id="4a958-371">如果`newChild`是已在树中，它是从其原始位置中删除并添加到它的目标位置。</span><span class="sxs-lookup"><span data-stu-id="4a958-371">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="4a958-372">有关插入节点的详细信息，请参阅[将节点插入 XML 文档](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)。</span><span class="sxs-lookup"><span data-stu-id="4a958-372">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="4a958-373">如果插入的节点创建另一个文档中，可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>将节点导入到当前文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-373">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="4a958-374">然后，导入的节点可以插入到当前文档中。</span><span class="sxs-lookup"><span data-stu-id="4a958-374">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-375">下面的示例将新节点添加到 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-375">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4a958-376">当前节点的类型不允许 <paramref name="newChild" /> 节点类型的子节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-376">The current node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="4a958-377">
            <paramref name="newChild" /> 是此节点的上级节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-377">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a958-378">
            <paramref name="newChild" /> 是从不同于创建此节点的文档创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-378">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="4a958-379">
            <paramref name="refChild" /> 不是此节点的子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-379">The <paramref name="refChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="4a958-380">该节点是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-380">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="4a958-381">
            <para>重写时<see langword="InsertBefore" />在派生类中，要正确，在引发事件的顺序必须调用<see langword="InsertBefore" />基类的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-381">
              <para>When overriding <see langword="InsertBefore" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="InsertBefore" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xml.XmlNode.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-382">获取指示节点是否只读的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-382">Gets a value indicating whether the node is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-383">如果节点是只读的，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-383">
              <see langword="true" /> if the node is read-only; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-384">只读节点是一个不能更改其属性、 属性或子节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-384">A read-only node is one whose properties, attributes, or child nodes cannot be changed.</span></span> <span data-ttu-id="4a958-385">可以从树中删除只读节点并插入其他位置。</span><span class="sxs-lookup"><span data-stu-id="4a958-385">You can remove a read-only node from the tree and insert it somewhere else.</span></span> <span data-ttu-id="4a958-386">例如，实体节点始终是将只读的。</span><span class="sxs-lookup"><span data-stu-id="4a958-386">For example, Entity nodes are always read-only.</span></span>  
  
 <span data-ttu-id="4a958-387">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="4a958-387">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-388">获取指定的子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-388">Gets the specified child element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^] { System::Xml::XmlElement ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Xml.XmlElement" Usage="System.Xml.XmlNode.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4a958-389">要检索的元素的限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-389">The qualified name of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-390">获取具有指定 <see cref="P:System.Xml.XmlNode.Name" /> 的第一个子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-390">Gets the first child element with the specified <see cref="P:System.Xml.XmlNode.Name" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-391">与指定名称匹配的第一个 <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-391">The first <see cref="T:System.Xml.XmlElement" /> that matches the specified name.</span>
          </span>
          <span data-ttu-id="4a958-392">如果没有匹配项，则它返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-392">It returns a null reference (<see langword="Nothing" /> in Visual Basic) if there is no match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-393">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="4a958-393">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-394">以下示例显示的标题元素。</span><span class="sxs-lookup"><span data-stu-id="4a958-394">The following example displays the title element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string localname, string ns] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(localname As String, ns As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^, System::String ^] { System::Xml::XmlElement ^ get(System::String ^ localname, System::String ^ ns); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : System.Xml.XmlElement" Usage="System.Xml.XmlNode.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname">
          <span data-ttu-id="4a958-395">元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-395">The local name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="4a958-396">元素的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-396">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-397">获取具有指定 <see cref="P:System.Xml.XmlNode.LocalName" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的第一个子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-397">Gets the first child element with the specified <see cref="P:System.Xml.XmlNode.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-398">具有匹配的 <paramref name="localname" /> 和 <paramref name="ns" /> 的第一个 <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-398">The first <see cref="T:System.Xml.XmlElement" /> with the matching <paramref name="localname" /> and <paramref name="ns" />.</span>
          </span>
          <span data-ttu-id="4a958-399">.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-399">.</span>
          </span>
          <span data-ttu-id="4a958-400">如果没有匹配项，则它返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-400">It returns a null reference (<see langword="Nothing" /> in Visual Basic) if there is no match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-401">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="4a958-401">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode LastChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LastChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ LastChild { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastChild : System.Xml.XmlNode" Usage="System.Xml.XmlNode.LastChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-402">获取节点的最后一个子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-402">Gets the last child of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-403">节点的最后一个子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-403">The last child of the node.</span>
          </span>
          <span data-ttu-id="4a958-404">如果没有这样的节点，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-404">If there is no such node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a958-405">以下示例显示的价格元素。</span><span class="sxs-lookup"><span data-stu-id="4a958-405">The following example displays the price element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlNode.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-406">当在派生类中被重写时，获取节点的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-406">Gets the local name of the node, when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-407">移除了前缀的节点的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-407">The name of the node with the prefix removed.</span>
          </span>
          <span data-ttu-id="4a958-408">例如，<see langword="LocalName" />是该元素的相关书籍&lt;bk:book&gt;。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-408">For example, <see langword="LocalName" /> is book for the element &lt;bk:book&gt;.</span>
          </span>
          <span data-ttu-id="4a958-409">返回的名称取决于节点的 <see cref="P:System.Xml.XmlNode.NodeType" />：</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-409">The name returned is dependent on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span>
          </span>
          <span data-ttu-id="4a958-410">
            <list type="table">
              <listheader>
                <term> 类型</term>
                <description>名称</description>
              </listheader>
              <item>
                <term>属性</term>
                <description>特性的本地名称。</description>
              </item>
              <item>
                <term> CDATA </term>
                <description> #cdata 节</description>
              </item>
              <item>
                <term>注释</term>
                <description> #comment </description>
              </item>
              <item>
                <term>文档</term>
                <description> #document </description>
              </item>
              <item>
                <term> DocumentFragment </term>
                <description> #document 片段</description>
              </item>
              <item>
                <term> DocumentType </term>
                <description>文档类型名称。</description>
              </item>
              <item>
                <term> 元素</term>
                <description>元素的本地名称。</description>
              </item>
              <item>
                <term> 实体</term>
                <description>的实体的名称。</description>
              </item>
              <item>
                <term> EntityReference </term>
                <description>引用的实体的名称。</description>
              </item>
              <item>
                <term> 表示法</term>
                <description>表示法名称。</description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description>处理指令的目标。</description>
              </item>
              <item>
                <term> 文本</term>
                <description> #text </description>
              </item>
              <item>
                <term>空格</term>
                <description> #whitespace </description>
              </item>
              <item>
                <term>SignificantWhitespace </term>
                <description> #significant 空白</description>
              </item>
              <item>
                <term> XmlDeclaration </term>
                <description> #xml 声明  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-410">
              <list type="table">
                <listheader>
                  <term> Type  </term>
                  <description> Name  </description>
                </listheader>
                <item>
                  <term> Attribute  </term>
                  <description> The local name of the attribute.  </description>
                </item>
                <item>
                  <term> CDATA  </term>
                  <description> #cdata-section  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> #comment  </description>
                </item>
                <item>
                  <term> Document  </term>
                  <description> #document  </description>
                </item>
                <item>
                  <term> DocumentFragment  </term>
                  <description> #document-fragment  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description> The document type name.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description> The local name of the element.  </description>
                </item>
                <item>
                  <term> Entity  </term>
                  <description> The name of the entity.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description> The name of the entity referenced.  </description>
                </item>
                <item>
                  <term> Notation  </term>
                  <description> The notation name.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> The target of the processing instruction.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> #text  </description>
                </item>
                <item>
                  <term> Whitespace  </term>
                  <description> #whitespace  </description>
                </item>
                <item>
                  <term> SignificantWhitespace  </term>
                  <description> #significant-whitespace  </description>
                </item>
                <item>
                  <term> XmlDeclaration  </term>
                  <description> #xml-declaration  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-411">如果节点没有前缀，LocalName 等同于<xref:System.Xml.XmlNode.Name%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a958-411">If the node does not have a prefix, LocalName is the same as <xref:System.Xml.XmlNode.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlNode.Prefix" />
        <altmember cref="P:System.Xml.XmlNode.Name" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-412">当在派生类中被重写时，获取节点的限定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-412">Gets the qualified name of the node, when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-413">节点的限定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-413">The qualified name of the node.</span>
          </span>
          <span data-ttu-id="4a958-414">返回的名称取决于节点的 <see cref="P:System.Xml.XmlNode.NodeType" />：</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-414">The name returned is dependent on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span>
          </span>
          <span data-ttu-id="4a958-415">
            <list type="table">
              <listheader>
                <term> 类型</term>
                <description>名称</description>
              </listheader>
              <item>
                <term>属性</term>
                <description>属性的限定的名称。</description>
              </item>
              <item>
                <term> CDATA </term>
                <description> #cdata 节</description>
              </item>
              <item>
                <term>注释</term>
                <description> #comment </description>
              </item>
              <item>
                <term>文档</term>
                <description> #document </description>
              </item>
              <item>
                <term> DocumentFragment </term>
                <description> #document 片段</description>
              </item>
              <item>
                <term> DocumentType </term>
                <description>文档类型名称。</description>
              </item>
              <item>
                <term> 元素</term>
                <description>元素的限定的名称。</description>
              </item>
              <item>
                <term> 实体</term>
                <description>的实体的名称。</description>
              </item>
              <item>
                <term> EntityReference </term>
                <description>引用的实体的名称。</description>
              </item>
              <item>
                <term> 表示法</term>
                <description>表示法名称。</description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description>处理指令的目标。</description>
              </item>
              <item>
                <term> 文本</term>
                <description> #text </description>
              </item>
              <item>
                <term>空格</term>
                <description> #whitespace </description>
              </item>
              <item>
                <term>SignificantWhitespace </term>
                <description> #significant 空白</description>
              </item>
              <item>
                <term> XmlDeclaration </term>
                <description> #xml 声明  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-415">
              <list type="table">
                <listheader>
                  <term> Type  </term>
                  <description> Name  </description>
                </listheader>
                <item>
                  <term> Attribute  </term>
                  <description> The qualified name of the attribute.  </description>
                </item>
                <item>
                  <term> CDATA  </term>
                  <description> #cdata-section  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> #comment  </description>
                </item>
                <item>
                  <term> Document  </term>
                  <description> #document  </description>
                </item>
                <item>
                  <term> DocumentFragment  </term>
                  <description> #document-fragment  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description> The document type name.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description> The qualified name of the element.  </description>
                </item>
                <item>
                  <term> Entity  </term>
                  <description> The name of the entity.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description> The name of the entity referenced.  </description>
                </item>
                <item>
                  <term> Notation  </term>
                  <description> The notation name.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> The target of the processing instruction.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> #text  </description>
                </item>
                <item>
                  <term> Whitespace  </term>
                  <description> #whitespace  </description>
                </item>
                <item>
                  <term> SignificantWhitespace  </term>
                  <description> #significant-whitespace  </description>
                </item>
                <item>
                  <term> XmlDeclaration  </term>
                  <description> #xml-declaration  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public virtual string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlNode.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-416">获取该节点的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-416">Gets the namespace URI of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-417">该节点的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-417">The namespace URI of this node.</span>
          </span>
          <span data-ttu-id="4a958-418">如果没有命名空间 URI，则此属性返回 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-418">If there is no namespace URI, this property returns String.Empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-419">这是在创建时指定 URI 的命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-419">This is the namespace URI specified at creation time.</span></span> <span data-ttu-id="4a958-420">例如，`NamespaceURI`是元素的 urn： 示例\<bk:book xmlns:bk ="urn： 示例"></span><span class="sxs-lookup"><span data-stu-id="4a958-420">For example, `NamespaceURI` is urn:samples for the element \<bk:book xmlns:bk= "urn:samples"></span></span>  
  
 <span data-ttu-id="4a958-421">从附加到的元素，属性不会继承其命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-421">An attribute does not inherit its namespace from the element it is attached to.</span></span> <span data-ttu-id="4a958-422">如果属性未显式指定命名空间，它只需具备没有命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-422">If an attribute is not explicitly given a namespace, it simply has no namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NextSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ NextSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSibling : System.Xml.XmlNode" Usage="System.Xml.XmlNode.NextSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-423">获取紧接在该节点之后的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-423">Gets the node immediately following this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-424">下一个 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-424">The next <see langword="XmlNode" />.</span>
          </span>
          <span data-ttu-id="4a958-425">如果没有下一个节点，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-425">If there is no next node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a958-426">下面的示例显示在 XML 文档中的所有书籍。</span><span class="sxs-lookup"><span data-stu-id="4a958-426">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlNode.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-427">当在派生类中被重写时，获取当前节点的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-427">Gets the type of the current node, when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-428">
            <see cref="T:System.Xml.XmlNodeType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-428">One of the <see cref="T:System.Xml.XmlNodeType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-429">此属性永远不会返回`XmlNodeType`EndElement，EndEntity 或 None。</span><span class="sxs-lookup"><span data-stu-id="4a958-429">This property never returns the `XmlNodeType` EndElement, EndEntity or None.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public virtual void Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Normalize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Normalize();" />
      <MemberSignature Language="F#" Value="abstract member Normalize : unit -&gt; unit&#xA;override this.Normalize : unit -&gt; unit" Usage="xmlNode.Normalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a958-430">将此 XmlNode 下子树完全深度中的所有 XmlText 节点都转换成“正常”形式，在这种形式中只有标记（即标记、注释、处理指令、CDATA 节和实体引用）分隔 XmlText 节点，也就是说，没有相邻的 XmlText 节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-430">Puts all XmlText nodes in the full depth of the sub-tree underneath this XmlNode into a "normal" form where only markup (that is, tags, comments, processing instructions, CDATA sections, and entity references) separates XmlText nodes, that is, there are no adjacent XmlText nodes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-431">可以使用此方法以确保 DOM 文档视图的相同像它已保存并重新加载，并使用依赖于特定文档树状结构的操作 （如 XPointer 查找） 时才有用。</span><span class="sxs-lookup"><span data-stu-id="4a958-431">This method can be used to ensure that the DOM view of a document is the same as if it were saved and re-loaded, and is useful when operations (such as XPointer lookups) that depend on a particular document tree structure are to be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public virtual string OuterXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OuterXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OuterXml { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OuterXml : string" Usage="System.Xml.XmlNode.OuterXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-432">获取包含此节点及其所有子节点的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-432">Gets the markup containing this node and all its child nodes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-433">包含此节点及其所有子节点的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-433">The markup containing this node and all its child nodes.</span>
          </span>
          <span data-ttu-id="4a958-434">
            <block subset="none" type="note">
              <para>
                <see langword="OuterXml" /> 不返回默认属性。  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-434">
              <block subset="none" type="note">
                <para>
                  <see langword="OuterXml" /> does not return default attributes.  </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-435">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="4a958-435">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-436">下面的示例比较的输出<xref:System.Xml.XmlNode.InnerXml%2A>和`OuterXml`属性。</span><span class="sxs-lookup"><span data-stu-id="4a958-436">The following example compares output from the <xref:System.Xml.XmlNode.InnerXml%2A> and `OuterXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDocument : System.Xml.XmlDocument" Usage="System.Xml.XmlNode.OwnerDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-437">获取该节点所属的 <see cref="T:System.Xml.XmlDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-437">Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-438">该节点所属的 <see cref="T:System.Xml.XmlDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-438">The <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span>
          </span>
          <span data-ttu-id="4a958-439">如果该节点是一个 <see cref="T:System.Xml.XmlDocument" />（NodeType 等于 XmlNodeType.Document），则此属性返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-439">If the node is an <see cref="T:System.Xml.XmlDocument" /> (NodeType equals XmlNodeType.Document), this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-440">在将节点添加到当前节点，使用<xref:System.Xml.XmlDocument>返回的<xref:System.Xml.XmlNode.OwnerDocument%2A>属性创建的节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-440">When adding nodes to the current node, use the <xref:System.Xml.XmlDocument> returned by the <xref:System.Xml.XmlNode.OwnerDocument%2A> property to create the node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-441">请参阅<xref:System.Xml.XmlElement.OwnerDocument%2A>（中的 XmlElement 类） 使用此属性的示例。</span><span class="sxs-lookup"><span data-stu-id="4a958-441">See <xref:System.Xml.XmlElement.OwnerDocument%2A> (in the XmlElement class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNode : System.Xml.XmlNode" Usage="System.Xml.XmlNode.ParentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-442">获取该节点的父级（针对可以拥有父级的节点）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-442">Gets the parent of this node (for nodes that can have parents).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-443">为当前节点父级的 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-443">The <see langword="XmlNode" /> that is the parent of the current node.</span>
          </span>
          <span data-ttu-id="4a958-444">如果节点刚刚创建还未添加到树中，或如果已从树中移除了节点，则父级为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-444">If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4a958-445">对于所有其他节点，返回的值取决于节点的 <see cref="P:System.Xml.XmlNode.NodeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-445">For all other nodes, the value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="4a958-446">下表描述 <see langword="ParentNode" /> 属性可能的返回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-446">The following table describes the possible return values for the <see langword="ParentNode" /> property.</span>
          </span>
          <span data-ttu-id="4a958-447">
            <list type="table">
              <listheader>
                <term> NodeType </term>
                <description> ParentNode 的返回值</description>
              </listheader>
              <item>
                <term>属性、 文档、 DocumentFragment、 Entity、 表示法</term>
                <description>返回<see langword="null" />;这些节点不具有父级。</description>
              </item>
              <item>
                <term> CDATA </term>
                <description>返回包含 CDATA 节的元素或实体引用。</description>
              </item>
              <item>
                <term> 注释</term>
                <description>返回元素、 实体引用、 文档类型或包含注释的文档。</description>
              </item>
              <item>
                <term> DocumentType </term>
                <description>返回文档节点。</description>
              </item>
              <item>
                <term> 元素</term>
                <description>返回元素的父节点。如果该元素是树中的根节点，则父级是文档节点。</description>
              </item>
              <item>
                <term> EntityReference </term>
                <description>返回包含实体引用的元素、 属性或实体引用。</description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description>返回文档、 元素、 文档类型或实体引用包含处理指令。</description>
              </item>
              <item>
                <term> 文本</term>
                <description>返回的父元素、 属性或实体引用包含该文本节点。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-447">
              <list type="table">
                <listheader>
                  <term> NodeType  </term>
                  <description> Return Value of ParentNode  </description>
                </listheader>
                <item>
                  <term> Attribute, Document, DocumentFragment, Entity, Notation  </term>
                  <description> Returns <see langword="null" />; these nodes do not have parents.  </description>
                </item>
                <item>
                  <term> CDATA  </term>
                  <description> Returns the element or entity reference containing the CDATA section.  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> Returns the element, entity reference, document type, or document containing the comment.  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description> Returns the document node.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description> Returns the parent node of the element. If the element is the root node in the tree, the parent is the document node.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description> Returns the element, attribute, or entity reference containing the entity reference.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> Returns the document, element, document type, or entity reference containing the processing instruction.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> Returns the parent element, attribute, or entity reference containing the text node.  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-448">父和子节点的信息，请参阅[W3C DOM (Core) 级别 1 规范](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="4a958-448">For information about parent and child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public virtual string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Xml.XmlNode.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-449">获取或设置该节点的命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-449">Gets or sets the namespace prefix of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-450">该节点的命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-450">The namespace prefix of this node.</span>
          </span>
          <span data-ttu-id="4a958-451">例如，<see langword="Prefix" />元素是 bk &lt;bk:book&gt;。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-451">For example, <see langword="Prefix" /> is bk for the element &lt;bk:book&gt;.</span>
          </span>
          <span data-ttu-id="4a958-452">如果没有前缀，则该属性返回 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-452">If there is no prefix, this property returns String.Empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-453">设置此属性允许时，会更改为<xref:System.Xml.XmlNode.Name%2A>属性，该元素和属性节点上保留的限定的名属性。</span><span class="sxs-lookup"><span data-stu-id="4a958-453">Setting this property, when permitted, changes the <xref:System.Xml.XmlNode.Name%2A> property, which holds the qualified name, on Element and Attribute nodes.</span></span> <span data-ttu-id="4a958-454">不能有前缀 （例如文本、 注释、 EntityReference、 CDATA、 ProcessingInstruction、 文档和 DocumentFragment） 的节点类型上设置此属性不起作用。</span><span class="sxs-lookup"><span data-stu-id="4a958-454">Setting this property on node types that cannot have a prefix (such as Text, Comment, EntityReference, CDATA, ProcessingInstruction, Document, and DocumentFragment) has no effect.</span></span> <span data-ttu-id="4a958-455">更改的属性具有默认值已知的前缀，does 不具有默认值的新特性和执行原始前缀出现，这是因为命名空间 URI 和本地名称不会更改。</span><span class="sxs-lookup"><span data-stu-id="4a958-455">Changing the prefix of an attribute that is known to have a default value, does not make a new attribute with the default value and the original prefix appear, since the namespace URI and local name do not change.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a958-456">该节点是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-456">This node is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="4a958-457">指定的前缀包含无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-457">The specified prefix contains an invalid character.</span>
          </span>
          <span data-ttu-id="4a958-458">指定的前缀格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-458">The specified prefix is malformed.</span>
          </span>
          <span data-ttu-id="4a958-459">指定的前缀为“xml”，而该节点的 namespaceURI 与“http://www.w3.org/XML/1998/namespace”不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-459">The specified prefix is "xml" and the namespaceURI of this node is different from "http://www.w3.org/XML/1998/namespace".</span>
          </span>
          <span data-ttu-id="4a958-460">该节点是一个属性，指定的前缀为“xmlns”，且该节点的 namespaceURI 与“http://www.w3.org/2000/xmlns/”不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-460">This node is an attribute and the specified prefix is "xmlns" and the namespaceURI of this node is different from "http://www.w3.org/2000/xmlns/ ".</span>
          </span>
          <span data-ttu-id="4a958-461">该节点是一个特性，而该节点的 qualifiedName 是“xmlns”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-461">This node is an attribute and the qualifiedName of this node is "xmlns".</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="4a958-462">
            <para>重写时<see langword="Prefix" />不能在派生类中，设置此属性。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-462">
              <para>When overriding <see langword="Prefix" /> in a derived class, this property cannot be set.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PrependChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode PrependChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrependChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ PrependChild(System::Xml::XmlNode ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member PrependChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.PrependChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.PrependChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="4a958-463">要添加的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-463">The node to add.</span>
          </span>
          <span data-ttu-id="4a958-464">要添加的节点的全部内容会移动到指定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-464">All the contents of the node to be added are moved into the specified location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-465">将指定的节点添加到该节点的子节点列表的开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-465">Adds the specified node to the beginning of the list of child nodes for this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-466">添加的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-466">The node added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-467">如果`newChild`是已在树中，它是从其原始位置中删除并添加到它的目标位置。</span><span class="sxs-lookup"><span data-stu-id="4a958-467">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="4a958-468">有关插入节点的详细信息，请参阅[将节点插入 XML 文档](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)。</span><span class="sxs-lookup"><span data-stu-id="4a958-468">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="4a958-469">如果插入的节点创建另一个文档中，可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>将节点导入到当前文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-469">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="4a958-470">然后，导入的节点可以插入到当前文档中。</span><span class="sxs-lookup"><span data-stu-id="4a958-470">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="4a958-471">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="4a958-471">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-472">下面的示例将新节点添加到 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-472">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4a958-473">此节点的类型不允许 <paramref name="newChild" /> 节点类型的子节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-473">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="4a958-474">
            <paramref name="newChild" /> 是此节点的上级节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-474">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a958-475">
            <paramref name="newChild" /> 是从不同于创建此节点的文档创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-475">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="4a958-476">该节点是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-476">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="4a958-477">
            <para>重写时<see langword="PrependChild" />在派生类中，要正确，在引发事件的顺序必须调用<see langword="PrependChild" />基类的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-477">
              <para>When overriding <see langword="PrependChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="PrependChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviousSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousSibling : System.Xml.XmlNode" Usage="System.Xml.XmlNode.PreviousSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-478">获取紧接在该节点之前的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-478">Gets the node immediately preceding this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-479">前一个 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-479">The preceding <see langword="XmlNode" />.</span>
          </span>
          <span data-ttu-id="4a958-480">如果前面没有节点，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-480">If there is no preceding node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a958-481">下面的示例显示在 XML 文档中的所有书籍。</span><span class="sxs-lookup"><span data-stu-id="4a958-481">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousText">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousText As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousText { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousText : System.Xml.XmlNode" Usage="System.Xml.XmlNode.PreviousText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-482">获取紧接在该节点之前的文本节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-482">Gets the text node that immediately precedes this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-483">返回 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-483">Returns <see cref="T:System.Xml.XmlNode" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-484">此属性具有更快的性能比<xref:System.Xml.XmlNode.PreviousSibling%2A>属性，但您可以使用它只用于获取类型的节点<xref:System.Xml.XmlNodeType.Text>。</span><span class="sxs-lookup"><span data-stu-id="4a958-484">This property has faster performance than the <xref:System.Xml.XmlNode.PreviousSibling%2A> property but you can use it only to get a node of type <xref:System.Xml.XmlNodeType.Text>.</span></span> <span data-ttu-id="4a958-485">若要获取任何其他类型的节点，在该节点之前，请使用<xref:System.Xml.XmlNode.PreviousSibling%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4a958-485">To get any other type of node that that precedes this node, use the <xref:System.Xml.XmlNode.PreviousSibling%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public virtual void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAll();" />
      <MemberSignature Language="F#" Value="abstract member RemoveAll : unit -&gt; unit&#xA;override this.RemoveAll : unit -&gt; unit" Usage="xmlNode.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a958-486">移除当前节点的所有子节点和/或属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-486">Removes all the child nodes and/or attributes of the current node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-487">如果已知已删除的特性具有默认值，则立即出现一个特性，它包含的默认值并且如果适用，对应的命名空间 URI、 本地名称和前缀。</span><span class="sxs-lookup"><span data-stu-id="4a958-487">If a removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
 <span data-ttu-id="4a958-488">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="4a958-488">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-489">下面的示例从根节点删除所有子节点和属性节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-489">The following example removes all child and attribute nodes from the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="4a958-490">
            <para>重写时<see langword="RemoveAll" />在派生类中，要正确，在引发事件的顺序必须调用<see langword="RemoveAll" />基类的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-490">
              <para>When overriding <see langword="RemoveAll" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="RemoveAll" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveChild (System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveChild(class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveChild (oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveChild(System::Xml::XmlNode ^ oldChild);" />
      <MemberSignature Language="F#" Value="abstract member RemoveChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.RemoveChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.RemoveChild oldChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="oldChild">
          <span data-ttu-id="4a958-491">正在被移除的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-491">The node being removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-492">移除指定的子节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-492">Removes specified child node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-493">已移除的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-493">The node removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a958-494">下面的示例从 XML 文档中删除节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-494">The following example removes a node from the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a958-495">
            <paramref name="oldChild" /> 不是此节点的子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-495">The <paramref name="oldChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="4a958-496">或者此节点是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-496">Or this node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="4a958-497">
            <para>重写时<see langword="RemoveChild" />在派生类中，要正确，在引发事件的顺序必须调用<see langword="RemoveChild" />基类的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-497">
              <para>When overriding <see langword="RemoveChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="RemoveChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ReplaceChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ReplaceChild (System.Xml.XmlNode newChild, System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ReplaceChild(class System.Xml.XmlNode newChild, class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceChild (newChild As XmlNode, oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ReplaceChild(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ oldChild);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceChild : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.ReplaceChild : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.ReplaceChild (newChild, oldChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="4a958-498">要放入子列表的新节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-498">The new node to put in the child list.</span>
          </span>
        </param>
        <param name="oldChild">
          <span data-ttu-id="4a958-499">列表中正在被替换的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-499">The node being replaced in the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-500">用 <paramref name="oldChild" /> 节点替换子节点 <paramref name="newChild" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-500">Replaces the child node <paramref name="oldChild" /> with <paramref name="newChild" /> node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-501">被替换的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-501">The node replaced.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-502">如果`newChild`是已在树中，则将先删除。</span><span class="sxs-lookup"><span data-stu-id="4a958-502">If the `newChild` is already in the tree, it is first removed.</span></span>  
  
 <span data-ttu-id="4a958-503">如果`newChild`创建从另一个文档，可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>将节点导入到当前文档。</span><span class="sxs-lookup"><span data-stu-id="4a958-503">If the `newChild` was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="4a958-504">然后可将导入的节点传递到`ReplaceChild`方法。</span><span class="sxs-lookup"><span data-stu-id="4a958-504">The imported node can then be passed to the `ReplaceChild` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-505">下面的示例将 XML 文档中的标题元素。</span><span class="sxs-lookup"><span data-stu-id="4a958-505">The following example replaces the title element in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4a958-506">此节点的类型不允许 <paramref name="newChild" /> 节点类型的子节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-506">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="4a958-507">
            <paramref name="newChild" /> 是此节点的上级节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-507">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a958-508">
            <paramref name="newChild" /> 是从不同于创建此节点的文档创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-508">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="4a958-509">该节点是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-509">This node is read-only.</span>
          </span>
          <span data-ttu-id="4a958-510">
            <paramref name="oldChild" /> 不是此节点的子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-510">The <paramref name="oldChild" /> is not a child of this node.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="4a958-511">
            <para>重写时<see langword="ReplaceChild" />在派生类中，要正确，在引发事件的顺序必须调用<see langword="ReplaceChild" />基类的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-511">
              <para>When overriding <see langword="ReplaceChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="ReplaceChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlNode.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-512">获取作为架构验证的结果分配给此节点的后架构验证信息集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-512">Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-513">包含此节点的架构验证后信息集的 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-513">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the post schema validation infoset of this node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-514"><xref:System.Xml.XmlNode.SchemaInfo%2A>此节点是在验证时，设置属性。</span><span class="sxs-lookup"><span data-stu-id="4a958-514">The <xref:System.Xml.XmlNode.SchemaInfo%2A> property is set when this node is validatied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectNodes">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-515">选择匹配 XPath 表达式的节点列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-515">Selects a list of nodes matching the XPath expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-516">XPath 表达式可以包含命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-516">XPath expressions can include namespaces.</span></span> <span data-ttu-id="4a958-517">使用 `XmlNamespaceManager` 支持命名空间解析。</span><span class="sxs-lookup"><span data-stu-id="4a958-517">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="4a958-518">如果 XPath 表达式包含前缀，前缀和命名空间 URI 对必须添加到`XmlNamespaceManager`。</span><span class="sxs-lookup"><span data-stu-id="4a958-518">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a958-519">如果 XPath 表达式不包含前缀，则假定命名空间 URI 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-519">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="4a958-520">如果 XML 包含默认命名空间，则仍必须添加前缀和命名空间 URI 为`XmlNamespaceManager`; 否则为不会选择任何节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-520">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span>  
  
 <span data-ttu-id="4a958-521">有关详细信息，请参阅[使用 XPath 导航选择节点](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)。</span><span class="sxs-lookup"><span data-stu-id="4a958-521">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span> <span data-ttu-id="4a958-522">有关代码示例，从上一节中重载列表中选择重载。</span><span class="sxs-lookup"><span data-stu-id="4a958-522">For code examples, choose an overload from the overload list in the previous section.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="member this.SelectNodes : string -&gt; System.Xml.XmlNodeList" Usage="xmlNode.SelectNodes xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="4a958-523">XPath 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-523">The XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-524">选择匹配 XPath 表达式的节点列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-524">Selects a list of nodes matching the XPath expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-525">一个 <see cref="T:System.Xml.XmlNodeList" />，包含匹配 XPath 查询的节点集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-525">An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-526">如果 XPath 表达式需要命名空间解析，则必须使用`SelectNodes`重载此方法采用<xref:System.Xml.XmlNamespaceManager>作为其参数。</span><span class="sxs-lookup"><span data-stu-id="4a958-526">If the XPath expression requires namespace resolution, you must use the `SelectNodes` overload which takes an <xref:System.Xml.XmlNamespaceManager> as its argument.</span></span> <span data-ttu-id="4a958-527">`XmlNamespaceManager`用于解析命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-527">The `XmlNamespaceManager` is used to resolve namespaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a958-528">如果 XPath 表达式不包含前缀，则假定命名空间 URI 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-528">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="4a958-529">如果 XML 包含默认命名空间，则仍必须使用`XmlNamespaceManager`并向其添加前缀和命名空间 URI; 否则，将不会选择任何节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-529">If your XML includes a default namespace, you must still use the `XmlNamespaceManager` and add a prefix and namespace URI to it; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="4a958-530">有关详细信息，请参阅[使用 XPath 导航选择节点](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)。</span><span class="sxs-lookup"><span data-stu-id="4a958-530">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a958-531">一个常见的问题时制定的 XPath 表达式是如何在表达式中包含一个单引号 （'） 或双引号 （"）。</span><span class="sxs-lookup"><span data-stu-id="4a958-531">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="4a958-532">如果你必须搜索包括单引号的值，必须将字符串括在双引号内。</span><span class="sxs-lookup"><span data-stu-id="4a958-532">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="4a958-533">如果需要搜索包括双引号的值，必须将字符串括在单引号中。</span><span class="sxs-lookup"><span data-stu-id="4a958-533">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="4a958-534">例如，假设有以下 XML:</span><span class="sxs-lookup"><span data-stu-id="4a958-534">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="4a958-535">下面的 Visual Basic 代码选择一个包含单引号的元素：</span><span class="sxs-lookup"><span data-stu-id="4a958-535">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```csharp  
nodeList = root.SelectNodes("//book[contains(title,""'Emma'"")]")  
```  
  
 <span data-ttu-id="4a958-536">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="4a958-536">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="4a958-537"><xref:System.Xml.XmlNodeList>基础文档保持不变时此方法返回的对象才有效。</span><span class="sxs-lookup"><span data-stu-id="4a958-537">The <xref:System.Xml.XmlNodeList> object returned by this method will be valid while the underlying document remains unchanged.</span></span> <span data-ttu-id="4a958-538">如果基础文档更改，可能返回意外的结果 （引发任何异常）。</span><span class="sxs-lookup"><span data-stu-id="4a958-538">If the underlying document changes, unexpected results may be returned (no exception will be thrown).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-539">下面的示例选择所有书籍的作者姓氏其中是 Austen，，然后将更改的那些书籍价格。</span><span class="sxs-lookup"><span data-stu-id="4a958-539">The following example selects all books where the author's last name is Austen, and then changes the price of those books.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="4a958-540">此示例使用以下 XML:</span><span class="sxs-lookup"><span data-stu-id="4a958-540">This example uses the following XML:</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="4a958-541">XPath 表达式包含前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-541">The XPath expression contains a prefix.</span>
          </span>
          <span data-ttu-id="4a958-542">请参见 [XPath 示例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-542">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String, nsmgr As XmlNamespaceManager) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="member this.SelectNodes : string * System.Xml.XmlNamespaceManager -&gt; System.Xml.XmlNodeList" Usage="xmlNode.SelectNodes (xpath, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="4a958-543">XPath 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-543">The XPath expression.</span>
          </span>
          <span data-ttu-id="4a958-544">请参见 [XPath 示例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-544">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </param>
        <param name="nsmgr">
          <span data-ttu-id="4a958-545">一个 <see cref="T:System.Xml.XmlNamespaceManager" />，用于为 XPath 表达式中的前缀解析命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-545">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-546">选择匹配 XPath 表达式的节点列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-546">Selects a list of nodes matching the XPath expression.</span>
          </span>
          <span data-ttu-id="4a958-547">XPath 表达式中的任何前缀都使用提供的 <see cref="T:System.Xml.XmlNamespaceManager" /> 进行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-547">Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-548">一个 <see cref="T:System.Xml.XmlNodeList" />，包含匹配 XPath 查询的节点集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-548">An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-549">XPath 表达式可以包含命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-549">XPath expressions can include namespaces.</span></span> <span data-ttu-id="4a958-550">使用 `XmlNamespaceManager` 支持命名空间解析。</span><span class="sxs-lookup"><span data-stu-id="4a958-550">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="4a958-551">如果 XPath 表达式包含前缀，前缀和命名空间 URI 对必须添加到`XmlNamespaceManager`。</span><span class="sxs-lookup"><span data-stu-id="4a958-551">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a958-552">如果 XPath 表达式不包含前缀，则假定命名空间 URI 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-552">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="4a958-553">如果 XML 包含默认命名空间，则仍必须添加前缀和命名空间 URI 为`XmlNamespaceManager`; 否则为不会选择任何节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-553">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="4a958-554">有关详细信息，请参阅[使用 XPath 导航选择节点](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)。</span><span class="sxs-lookup"><span data-stu-id="4a958-554">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
 <span data-ttu-id="4a958-555">例如，如果你有以下 XML:</span><span class="sxs-lookup"><span data-stu-id="4a958-555">For example, if you had the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 <span data-ttu-id="4a958-556">下面的 C# 代码选择所有书节点：</span><span class="sxs-lookup"><span data-stu-id="4a958-556">The following C# code selects all book nodes:</span></span>  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNodeList nodelist = doc.SelectNodes("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  <span data-ttu-id="4a958-557">一个常见的问题时制定的 XPath 表达式是如何在表达式中包含一个单引号 （'） 或双引号 （"）。</span><span class="sxs-lookup"><span data-stu-id="4a958-557">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="4a958-558">如果你必须搜索包括单引号的值，必须将字符串括在双引号内。</span><span class="sxs-lookup"><span data-stu-id="4a958-558">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="4a958-559">如果需要搜索包括双引号的值，必须将字符串括在单引号中。</span><span class="sxs-lookup"><span data-stu-id="4a958-559">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="4a958-560">例如，假设有以下 XML:</span><span class="sxs-lookup"><span data-stu-id="4a958-560">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="4a958-561">下面的 Visual Basic 代码选择一个包含单引号的元素：</span><span class="sxs-lookup"><span data-stu-id="4a958-561">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```vb  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
nodeList = root.SelectNodes("//ab:book[contains(ab:title,""'Emma'"")]", nsmgr)  
```  
  
 <span data-ttu-id="4a958-562">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="4a958-562">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="4a958-563"><xref:System.Xml.XmlNodeList>基础文档保持不变时此方法返回的对象才有效。</span><span class="sxs-lookup"><span data-stu-id="4a958-563">The <xref:System.Xml.XmlNodeList> object returned by this method will be valid while the underlying document remains unchanged.</span></span> <span data-ttu-id="4a958-564">如果基础文档更改，可能返回意外的结果 （引发任何异常）。</span><span class="sxs-lookup"><span data-stu-id="4a958-564">If the underlying document changes, unexpected results may be returned (no exception will be thrown).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-565">以下示例显示的每个 ISBN 属性的值。</span><span class="sxs-lookup"><span data-stu-id="4a958-565">The following example displays the values of each of the ISBN attributes.</span></span> <span data-ttu-id="4a958-566">此示例使用<xref:System.Xml.XmlElement>对象，该类继承自<xref:System.Xml.XmlNode>类。</span><span class="sxs-lookup"><span data-stu-id="4a958-566">This example uses an <xref:System.Xml.XmlElement> object, which inherits from the <xref:System.Xml.XmlNode> class.</span></span>  
  
 [!code-cpp[XmlNode.SelectNodes1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectNodes1/CPP/selectnodes1.cpp#1)]
 [!code-csharp[XmlNode.SelectNodes1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectNodes1/CS/selectnodes1.cs#1)]
 [!code-vb[XmlNode.SelectNodes1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectNodes1/VB/selectnodes1.vb#1)]  
  
 <span data-ttu-id="4a958-567">该示例使用该文件，`booksort.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="4a958-567">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="4a958-568">XPath 表达式包含 <see langword="XmlNamespaceManager" /> 中没有定义的前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-568">The XPath expression contains a prefix which is not defined in the <see langword="XmlNamespaceManager" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectSingleNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-569">选择匹配 XPath 表达式的第一个 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-569">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-570">XPath 表达式可以包含命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-570">XPath expressions can include namespaces.</span></span> <span data-ttu-id="4a958-571">使用 `XmlNamespaceManager` 支持命名空间解析。</span><span class="sxs-lookup"><span data-stu-id="4a958-571">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="4a958-572">如果 XPath 表达式包含前缀，前缀和命名空间 URI 对必须添加到`XmlNamespaceManager`。</span><span class="sxs-lookup"><span data-stu-id="4a958-572">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a958-573">如果 XPath 表达式不包含前缀，则假定命名空间 URI 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-573">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="4a958-574">如果 XML 包含默认命名空间，则仍必须添加前缀和命名空间 URI 为`XmlNamespaceManager`; 否则为不会选择任何节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-574">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="4a958-575">有关详细信息，请参阅[使用 XPath 导航选择节点](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)。</span><span class="sxs-lookup"><span data-stu-id="4a958-575">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-576">以下示例返回具有匹配的作者名称的第一书籍。</span><span class="sxs-lookup"><span data-stu-id="4a958-576">The following example returns the first book with the matching author name.</span></span> <span data-ttu-id="4a958-577">`XmlNamespaceManager` 解析 XPath 表达式中的默认命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-577">The `XmlNamespaceManager` resolves the default namespace in the XPath expression.</span></span>  
  
 [!code-cpp[XmlNode.SelectSingleNode2#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CPP/XmlNode.SelectSingleNode2.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CS/selectsingnode2.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode2/VB/selectsingnode2.vb#1)]  
  
 <span data-ttu-id="4a958-578">该示例使用该文件，`newbooks.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="4a958-578">The example uses the file, `newbooks.xml`, as input.</span></span>  
  
 [!code-xml[XmlNode.SelectSingleNode2#2](~/samples/snippets/xml/VS_Snippets_Data/XmlNode.SelectSingleNode2/XML/newbooks.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="member this.SelectSingleNode : string -&gt; System.Xml.XmlNode" Usage="xmlNode.SelectSingleNode xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="4a958-579">XPath 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-579">The XPath expression.</span>
          </span>
          <span data-ttu-id="4a958-580">请参见 [XPath 示例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-580">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-581">选择匹配 XPath 表达式的第一个 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-581">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-582">与 XPath 查询匹配的第一个 <see langword="XmlNode" />；如果未找到任何匹配节点，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-582">The first <see langword="XmlNode" /> that matches the XPath query or <see langword="null" /> if no matching node is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-583">如果 XPath 表达式需要命名空间解析，则必须使用`SelectSingleNode`重载此方法采用<xref:System.Xml.XmlNamespaceManager>作为其参数。</span><span class="sxs-lookup"><span data-stu-id="4a958-583">If the XPath expression requires namespace resolution, you must use the `SelectSingleNode` overload which takes an <xref:System.Xml.XmlNamespaceManager> as its argument.</span></span> <span data-ttu-id="4a958-584">`XmlNamespaceManager`用于解析命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-584">The `XmlNamespaceManager` is used to resolve namespaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a958-585">如果 XPath 表达式不包含前缀，则假定命名空间 URI 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-585">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="4a958-586">如果 XML 包含默认命名空间，则仍必须使用`XmlNamespaceManager`并向其添加前缀和命名空间 URI; 否则，将不会将所选的节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-586">If your XML includes a default namespace, you must still use the `XmlNamespaceManager` and add a prefix and namespace URI to it; otherwise, you will not get a selected node.</span></span> <span data-ttu-id="4a958-587">有关详细信息，请参阅[使用 XPath 导航选择节点](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)。</span><span class="sxs-lookup"><span data-stu-id="4a958-587">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a958-588">一个常见的问题时制定的 XPath 表达式是如何在表达式中包含一个单引号 （'） 或双引号 （"）。</span><span class="sxs-lookup"><span data-stu-id="4a958-588">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="4a958-589">如果你必须搜索包括单引号的值，必须将字符串括在双引号内。</span><span class="sxs-lookup"><span data-stu-id="4a958-589">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="4a958-590">如果需要搜索包括双引号的值，必须将字符串括在单引号中。</span><span class="sxs-lookup"><span data-stu-id="4a958-590">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="4a958-591">例如，假设有以下 XML:</span><span class="sxs-lookup"><span data-stu-id="4a958-591">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="4a958-592">下面的 Visual Basic 代码选择一个包含单引号的元素：</span><span class="sxs-lookup"><span data-stu-id="4a958-592">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```  
book = root.SelectSingleNode("descendant::book[title=""'Emma'""]")  
```  
  
 <span data-ttu-id="4a958-593">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="4a958-593">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-594">下面的示例更改第一个 Jane Austen 本书的价格。</span><span class="sxs-lookup"><span data-stu-id="4a958-594">The following example changes the price of the first Jane Austen book.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="4a958-595">该示例使用该文件，`booksort.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="4a958-595">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectSingleNode Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="4a958-596">XPath 表达式包含前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-596">The XPath expression contains a prefix.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String, nsmgr As XmlNamespaceManager) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="member this.SelectSingleNode : string * System.Xml.XmlNamespaceManager -&gt; System.Xml.XmlNode" Usage="xmlNode.SelectSingleNode (xpath, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="4a958-597">XPath 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-597">The XPath expression.</span>
          </span>
          <span data-ttu-id="4a958-598">请参见 [XPath 示例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-598">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </param>
        <param name="nsmgr">
          <span data-ttu-id="4a958-599">一个 <see cref="T:System.Xml.XmlNamespaceManager" />，用于为 XPath 表达式中的前缀解析命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-599">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-600">选择匹配 XPath 表达式的第一个 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-600">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span>
          </span>
          <span data-ttu-id="4a958-601">XPath 表达式中的任何前缀都使用提供的 <see cref="T:System.Xml.XmlNamespaceManager" /> 进行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-601">Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-602">与 XPath 查询匹配的第一个 <see langword="XmlNode" />；如果未找到任何匹配节点，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-602">The first <see langword="XmlNode" /> that matches the XPath query or <see langword="null" /> if no matching node is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-603">XPath 表达式可以包含命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-603">XPath expressions can include namespaces.</span></span> <span data-ttu-id="4a958-604">使用 `XmlNamespaceManager` 支持命名空间解析。</span><span class="sxs-lookup"><span data-stu-id="4a958-604">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="4a958-605">如果 XPath 表达式包含前缀，前缀和命名空间 URI 对必须添加到`XmlNamespaceManager`。</span><span class="sxs-lookup"><span data-stu-id="4a958-605">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a958-606">如果 XPath 表达式不包含前缀，则假定命名空间 URI 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a958-606">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="4a958-607">如果 XML 包含默认命名空间，则仍必须添加前缀和命名空间 URI 为`XmlNamespaceManager`; 否则为则不会获得所选节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-607">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get a node selected.</span></span> <span data-ttu-id="4a958-608">有关详细信息，请参阅[使用 XPath 导航选择节点](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)。</span><span class="sxs-lookup"><span data-stu-id="4a958-608">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
 <span data-ttu-id="4a958-609">例如，如果你有以下 XML:</span><span class="sxs-lookup"><span data-stu-id="4a958-609">For example, if you had the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 <span data-ttu-id="4a958-610">下面的 C# 代码选择第一个 book 节点：</span><span class="sxs-lookup"><span data-stu-id="4a958-610">The following C# code selects the first book node:</span></span>  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNode book = doc.SelectSingleNode("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  <span data-ttu-id="4a958-611">一个常见的问题时制定的 XPath 表达式是如何在表达式中包含一个单引号 （'） 或双引号 （"）。</span><span class="sxs-lookup"><span data-stu-id="4a958-611">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="4a958-612">如果你必须搜索包括单引号的值，必须将字符串括在双引号内。</span><span class="sxs-lookup"><span data-stu-id="4a958-612">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="4a958-613">如果需要搜索包括双引号的值，必须将字符串括在单引号中。</span><span class="sxs-lookup"><span data-stu-id="4a958-613">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="4a958-614">例如，假设有以下 XML:</span><span class="sxs-lookup"><span data-stu-id="4a958-614">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="4a958-615">下面的 Visual Basic 代码选择一个包含单引号的元素：</span><span class="sxs-lookup"><span data-stu-id="4a958-615">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```vb  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
book = root.SelectSingleNode("descendant::ab:book[ab:title=""'Emma'""]", nsmgr)  
```  
  
 <span data-ttu-id="4a958-616">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="4a958-616">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-617">下面的示例选择匹配的 ISBN 值对书籍。</span><span class="sxs-lookup"><span data-stu-id="4a958-617">The following example selects the book with the matching ISBN value.</span></span>  
  
 [!code-cpp[XmlNode.SelectSingleNode1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CPP/selectsingnode.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CS/selectsingnode.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode1/VB/selectsingnode.vb#1)]  
  
 <span data-ttu-id="4a958-618">该示例使用该文件，`booksort.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="4a958-618">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="4a958-619">XPath 表达式包含 <see langword="XmlNamespaceManager" /> 中没有定义的前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-619">The XPath expression contains a prefix which is not defined in the <see langword="XmlNamespaceManager" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (string feature, string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(string feature, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Supports(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (feature As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::String ^ feature, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member Supports : string * string -&gt; bool&#xA;override this.Supports : string * string -&gt; bool" Usage="xmlNode.Supports (feature, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="feature">
          <span data-ttu-id="4a958-620">要测试的功能的程序包名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-620">The package name of the feature to test.</span>
          </span>
          <span data-ttu-id="4a958-621">该名称不区分大小写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-621">This name is not case-sensitive.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="4a958-622">要测试的程序包名称的版本号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-622">The version number of the package name to test.</span>
          </span>
          <span data-ttu-id="4a958-623">如果不指定版本 (null)，则支持该功能的任何版本会导致方法返回 true。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-623">If the version is not specified (null), supporting any version of the feature causes the method to return true.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-624">测试 DOM 实现是否实现特定的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-624">Tests if the DOM implementation implements a specific feature.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-625">如果指定的版本中实现了该功能，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-625">
              <see langword="true" /> if the feature is implemented in the specified version; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4a958-626">下表描述返回 <see langword="true" /> 的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-626">The following table describes the combinations that return <see langword="true" />.</span>
          </span>
          <span data-ttu-id="4a958-627">
            <list type="table">
              <listheader>
                <term> 功能  </term>
                <description> 版本  </description>
              </listheader>
              <item>
                <term> XML  </term>
                <description> 1.0  </description>
              </item>
              <item>
                <term> XML  </term>
                <description> 2.0  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-627">
              <list type="table">
                <listheader>
                  <term> Feature  </term>
                  <description> Version  </description>
                </listheader>
                <item>
                  <term> XML  </term>
                  <description> 1.0  </description>
                </item>
                <item>
                  <term> XML  </term>
                  <description> 2.0  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a958-628">有关此成员的说明，请参阅 <see cref="M:System.Xml.XmlNode.GetEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-628">For a description of this member, see <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-629">返回集合的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-629">Returns an enumerator for the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-630">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4a958-630">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a958-631">它只能在 <xref:System.Xml.XmlNode> 实例强制转换为 <xref:System.Collections.IEnumerable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4a958-631">It can be used only when the <xref:System.Xml.XmlNode> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a958-632">有关此成员的说明，请参阅 <see cref="M:System.Xml.XmlNode.Clone" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-632">For a description of this member, see <see cref="M:System.Xml.XmlNode.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a958-633">节点的副本，它通过该节点调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-633">A copy of the node from which it is called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-634">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4a958-634">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a958-635">它只能在 <xref:System.Xml.XmlNode> 实例强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4a958-635">It can be used only when the <xref:System.Xml.XmlNode> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Xml.XmlNode.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a958-636">获取或设置节点的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-636">Gets or sets the value of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a958-637">返回的值取决于节点的 <see cref="P:System.Xml.XmlNode.NodeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-637">The value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span>
          </span>
          <span data-ttu-id="4a958-638">
            <list type="table">
              <listheader>
                <term> 类型</term>
                <description>值</description>
              </listheader>
              <item>
                <term>属性</term>
                <description>属性的值。</description>
              </item>
              <item>
                <term> CDATASection </term>
                <description> CDATA 节的内容。</description>
              </item>
              <item>
                <term> 注释</term>
                <description>注释的内容。</description>
              </item>
              <item>
                <term> 文档</term>
                <description>
                  <see langword="null" />。</description>
              </item>
              <item>
                <term> DocumentFragment </term>
                <description>
                  <see langword="null" />。</description>
              </item>
              <item>
                <term> DocumentType </term>
                <description>
                  <see langword="null" />。</description>
              </item>
              <item>
                <term> 元素</term>
                <description>
                  <see langword="null" />。可以使用<see cref="P:System.Xml.XmlElement.InnerText" />或<see cref="P:System.Xml.XmlElement.InnerXml" />属性访问元素节点的值。</description>
              </item>
              <item>
                <term> 实体</term>
                <description>
                  <see langword="null" />。</description>
              </item>
              <item>
                <term> EntityReference </term>
                <description>
                  <see langword="null" />。</description>
              </item>
              <item>
                <term> 表示法</term>
                <description>
                  <see langword="null" />。</description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description>不包括目标的整个内容。</description>
              </item>
              <item>
                <term> 文本</term>
                <description>文本节点的内容。</description>
              </item>
              <item>
                <term> SignificantWhitespace </term>
                <description>空白字符。空白可由一个或多个空格字符、回车符、换行符或制表符组成。</description>
              </item>
              <item>
                <term> 空格</term>
                <description>空白字符。空白可由一个或多个空格字符、回车符、换行符或制表符组成。</description>
              </item>
              <item>
                <term> XmlDeclaration </term>
                <description>声明的内容 (即之间的所有内容&lt;？ xml 和？&gt;)。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-638">
              <list type="table">
                <listheader>
                  <term> Type  </term>
                  <description> Value  </description>
                </listheader>
                <item>
                  <term> Attribute  </term>
                  <description> The value of the attribute.  </description>
                </item>
                <item>
                  <term> CDATASection  </term>
                  <description> The content of the CDATA Section.  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> The content of the comment.  </description>
                </item>
                <item>
                  <term> Document  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> DocumentFragment  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description>
                    <see langword="null" />. You can use the <see cref="P:System.Xml.XmlElement.InnerText" /> or <see cref="P:System.Xml.XmlElement.InnerXml" /> properties to access the value of the element node.  </description>
                </item>
                <item>
                  <term> Entity  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> Notation  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> The entire content excluding the target.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> The content of the text node.  </description>
                </item>
                <item>
                  <term> SignificantWhitespace  </term>
                  <description> The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs.  </description>
                </item>
                <item>
                  <term> Whitespace  </term>
                  <description> The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs.  </description>
                </item>
                <item>
                  <term> XmlDeclaration  </term>
                  <description> The content of the declaration (that is, everything between &lt;?xml and ?&gt;).  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a958-639">下面的示例将新属性添加到的 XML 文档和集<xref:System.Xml.XmlNode.Value%2A>新特性的属性。</span><span class="sxs-lookup"><span data-stu-id="4a958-639">The following example adds a new attribute to the XML document and sets the <xref:System.Xml.XmlNode.Value%2A> property of the new attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a958-640">设置只读节点的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-640">Setting the value of a node that is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4a958-641">设置不允许具有值的节点（例如 Element 节点）的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-641">Setting the value of a node that is not supposed to have a value (for example, an Element node).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public abstract void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member WriteContentTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlNode.WriteContentTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="4a958-642">要保存到其中的 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-642">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-643">当在派生类中被重写时，该节点的所有子节点会保存到指定的 <see cref="T:System.Xml.XmlWriter" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-643">Saves all the child nodes of the node to the specified <see cref="T:System.Xml.XmlWriter" />, when overridden in a derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-644">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="4a958-644">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="4a958-645">它是功能上等效于<xref:System.Xml.XmlNode.InnerXml%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4a958-645">It is functionally equivalent to the <xref:System.Xml.XmlNode.InnerXml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-646">下面的示例显示到控制台根节点的内容。</span><span class="sxs-lookup"><span data-stu-id="4a958-646">The following example displays the contents of the root node to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public abstract void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlNode.WriteTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="4a958-647">要保存到其中的 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-647">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a958-648">当在派生类中被重写时，将当前节点保存到指定的 <see cref="T:System.Xml.XmlWriter" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a958-648">Saves the current node to the specified <see cref="T:System.Xml.XmlWriter" />, when overridden in a derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a958-649">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="4a958-649">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="4a958-650">它是功能上等效于<xref:System.Xml.XmlNode.OuterXml%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4a958-650">It is functionally equivalent to the <xref:System.Xml.XmlNode.OuterXml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a958-651">下面的示例显示到控制台根节点。</span><span class="sxs-lookup"><span data-stu-id="4a958-651">The following example displays the root node to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>